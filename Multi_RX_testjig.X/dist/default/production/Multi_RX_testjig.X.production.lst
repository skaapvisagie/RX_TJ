

Microchip Technology PIC PRO Macro Assembler V1.35 build -356382666 
                                                                                               Thu Feb 28 18:19:24 2019

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	text12,local,class=CODE,merge=1,delta=2
    17                           	psect	text18,local,class=CODE,merge=1,delta=2
    18                           	psect	text19,local,class=CODE,merge=1,delta=2
    19                           	psect	text20,local,class=CODE,merge=1,delta=2
    20                           	psect	text21,local,class=CODE,merge=1,delta=2
    21                           	psect	text23,local,class=CODE,merge=1,delta=2
    22                           	psect	text28,local,class=CODE,merge=1,delta=2
    23                           	psect	text33,local,class=CODE,merge=1,delta=2
    24                           	psect	text34,local,class=CODE,merge=1,delta=2
    25                           	psect	text35,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	swtext2,local,class=CONST,delta=2
    28                           	psect	pa_nodes,global,class=CODE,delta=2
    29                           	psect	maintext_split_1,global,class=CODE,merge=1,split=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     	;# 
    32  0001                     	;# 
    33  0002                     	;# 
    34  0003                     	;# 
    35  0004                     	;# 
    36  0005                     	;# 
    37  0006                     	;# 
    38  0007                     	;# 
    39  0008                     	;# 
    40  0009                     	;# 
    41  000A                     	;# 
    42  000B                     	;# 
    43  000C                     	;# 
    44  000D                     	;# 
    45  000E                     	;# 
    46  000F                     	;# 
    47  0010                     	;# 
    48  0011                     	;# 
    49  0012                     	;# 
    50  0013                     	;# 
    51  0014                     	;# 
    52  0015                     	;# 
    53  0016                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  001A                     	;# 
    59  001B                     	;# 
    60  001C                     	;# 
    61  008C                     	;# 
    62  008D                     	;# 
    63  008E                     	;# 
    64  008F                     	;# 
    65  0090                     	;# 
    66  0091                     	;# 
    67  0092                     	;# 
    68  0093                     	;# 
    69  0094                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0097                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009B                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  010C                     	;# 
    81  010D                     	;# 
    82  010E                     	;# 
    83  010F                     	;# 
    84  0110                     	;# 
    85  0116                     	;# 
    86  0117                     	;# 
    87  011D                     	;# 
    88  018C                     	;# 
    89  018D                     	;# 
    90  018F                     	;# 
    91  0190                     	;# 
    92  0191                     	;# 
    93  0191                     	;# 
    94  0192                     	;# 
    95  0193                     	;# 
    96  0193                     	;# 
    97  0194                     	;# 
    98  0195                     	;# 
    99  0196                     	;# 
   100  0197                     	;# 
   101  0199                     	;# 
   102  0199                     	;# 
   103  0199                     	;# 
   104  019A                     	;# 
   105  019A                     	;# 
   106  019A                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019B                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019C                     	;# 
   113  019C                     	;# 
   114  019C                     	;# 
   115  019D                     	;# 
   116  019D                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019E                     	;# 
   120  019E                     	;# 
   121  019F                     	;# 
   122  019F                     	;# 
   123  019F                     	;# 
   124  020D                     	;# 
   125  020F                     	;# 
   126  0210                     	;# 
   127  0211                     	;# 
   128  0211                     	;# 
   129  0212                     	;# 
   130  0212                     	;# 
   131  0213                     	;# 
   132  0213                     	;# 
   133  0214                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  0219                     	;# 
   143  021A                     	;# 
   144  021B                     	;# 
   145  021C                     	;# 
   146  021D                     	;# 
   147  021E                     	;# 
   148  021F                     	;# 
   149  028C                     	;# 
   150  028D                     	;# 
   151  0291                     	;# 
   152  0291                     	;# 
   153  0292                     	;# 
   154  0293                     	;# 
   155  0298                     	;# 
   156  0298                     	;# 
   157  0299                     	;# 
   158  029A                     	;# 
   159  029D                     	;# 
   160  029E                     	;# 
   161  029F                     	;# 
   162  030C                     	;# 
   163  030D                     	;# 
   164  0311                     	;# 
   165  0311                     	;# 
   166  0312                     	;# 
   167  0313                     	;# 
   168  0318                     	;# 
   169  0318                     	;# 
   170  0319                     	;# 
   171  031A                     	;# 
   172  031C                     	;# 
   173  031C                     	;# 
   174  031D                     	;# 
   175  031E                     	;# 
   176  038C                     	;# 
   177  038D                     	;# 
   178  0394                     	;# 
   179  0395                     	;# 
   180  0396                     	;# 
   181  040C                     	;# 
   182  040D                     	;# 
   183  0411                     	;# 
   184  0411                     	;# 
   185  0412                     	;# 
   186  0413                     	;# 
   187  0414                     	;# 
   188  0415                     	;# 
   189  0416                     	;# 
   190  0417                     	;# 
   191  0418                     	;# 
   192  0418                     	;# 
   193  0419                     	;# 
   194  041A                     	;# 
   195  041B                     	;# 
   196  041C                     	;# 
   197  041D                     	;# 
   198  041E                     	;# 
   199  048D                     	;# 
   200  0491                     	;# 
   201  0491                     	;# 
   202  0492                     	;# 
   203  0492                     	;# 
   204  0493                     	;# 
   205  0493                     	;# 
   206  0493                     	;# 
   207  0494                     	;# 
   208  0494                     	;# 
   209  0495                     	;# 
   210  0495                     	;# 
   211  0496                     	;# 
   212  0496                     	;# 
   213  0497                     	;# 
   214  0497                     	;# 
   215  0595                     	;# 
   216  0596                     	;# 
   217  0597                     	;# 
   218  059C                     	;# 
   219  059D                     	;# 
   220  059E                     	;# 
   221  0611                     	;# 
   222  0611                     	;# 
   223  0612                     	;# 
   224  0613                     	;# 
   225  0614                     	;# 
   226  0614                     	;# 
   227  0615                     	;# 
   228  0616                     	;# 
   229  0617                     	;# 
   230  0617                     	;# 
   231  0618                     	;# 
   232  0619                     	;# 
   233  061A                     	;# 
   234  061A                     	;# 
   235  061B                     	;# 
   236  061C                     	;# 
   237  061D                     	;# 
   238  061D                     	;# 
   239  061E                     	;# 
   240  061F                     	;# 
   241  0FE4                     	;# 
   242  0FE5                     	;# 
   243  0FE6                     	;# 
   244  0FE7                     	;# 
   245  0FE8                     	;# 
   246  0FE9                     	;# 
   247  0FEA                     	;# 
   248  0FEB                     	;# 
   249  0FED                     	;# 
   250  0FEE                     	;# 
   251  0FEF                     	;# 
   252                           
   253                           	psect	idataBANK1
   254  0000                     __pidataBANK1:	
   255                           
   256                           	psect	nvBANK1
   257  00BB                     __pnvBANK1:	
   258  00BB                     _pickit_state:	
   259  00BB                     	ds	1
   260  000B                     _INTCONbits	set	11
   261  0011                     _PIR1bits	set	17
   262  000C                     _PORTA	set	12
   263  000D                     _PORTB	set	13
   264  000E                     _PORTC	set	14
   265  000F                     _PORTD	set	15
   266  0010                     _PORTE	set	16
   267  001B                     _PR2	set	27
   268  001C                     _T2CON	set	28
   269  0015                     _TMR0	set	21
   270  005F                     _GIE	set	95
   271  0062                     _RA2	set	98
   272  0064                     _RA4	set	100
   273  0065                     _RA5	set	101
   274  0080                     _RE0	set	128
   275  0084                     _RE4	set	132
   276  0085                     _RE5	set	133
   277  0086                     _RE6	set	134
   278  005D                     _TMR0IE	set	93
   279  005A                     _TMR0IF	set	90
   280  009D                     _ADCON0	set	157
   281  009D                     _ADCON0bits	set	157
   282  009E                     _ADCON1	set	158
   283  009C                     _ADRESH	set	156
   284  009B                     _ADRESL	set	155
   285  0095                     _OPTION_REG	set	149
   286  0099                     _OSCCON	set	153
   287  0096                     _PCONbits	set	150
   288  0091                     _PIE1bits	set	145
   289  008C                     _TRISA	set	140
   290  008D                     _TRISB	set	141
   291  008E                     _TRISC	set	142
   292  008F                     _TRISD	set	143
   293  0090                     _TRISE	set	144
   294  0473                     _TRISC3	set	1139
   295  0474                     _TRISC4	set	1140
   296  0117                     _FVRCON	set	279
   297  0866                     _LATA6	set	2150
   298  0867                     _LATA7	set	2151
   299  086D                     _LATB5	set	2157
   300  086F                     _LATB7	set	2159
   301  0872                     _LATC2	set	2162
   302  0875                     _LATC5	set	2165
   303  0876                     _LATC6	set	2166
   304  0877                     _LATC7	set	2167
   305  087A                     _LATD2	set	2170
   306  087C                     _LATD4	set	2172
   307  087D                     _LATD5	set	2173
   308  087E                     _LATD6	set	2174
   309  018C                     _ANSELA	set	396
   310  018D                     _ANSELB	set	397
   311  018F                     _ANSELD	set	399
   312  0190                     _ANSELE	set	400
   313  0212                     _SSP1ADD	set	530
   314  0211                     _SSP1BUF	set	529
   315  0215                     _SSP1CON1	set	533
   316  0216                     _SSP1CON2	set	534
   317  0216                     _SSP1CON2bits	set	534
   318  0214                     _SSP1STAT	set	532
   319  0214                     _SSP1STATbits	set	532
   320  020D                     _WPUB	set	525
   321  020F                     _WPUD	set	527
   322  0210                     _WPUE	set	528
   323  029F                     _CCPTMRS2	set	671
   324  028C                     _PORTF	set	652
   325  028D                     _PORTG	set	653
   326  1460                     _RF0	set	5216
   327  1461                     _RF1	set	5217
   328  1462                     _RF2	set	5218
   329  1463                     _RF3	set	5219
   330  1465                     _RF5	set	5221
   331  1468                     _RG0	set	5224
   332  1469                     _RG1	set	5225
   333  030C                     _TRISF	set	780
   334  030D                     _TRISG	set	781
   335  1869                     _TRISG1	set	6249
   336  1C64                     _LATF4	set	7268
   337  1C69                     _LATG1	set	7273
   338  040C                     _ANSELF	set	1036
   339  040D                     _ANSELG	set	1037
   340  048D                     _WPUG	set	1165
   341  0596                     _PR8	set	1430
   342  0597                     _T8CON	set	1431
   343  061C                     _CCP9CON	set	1564
   344  061A                     _CCPR9L	set	1562
   345                           
   346                           	psect	stringtext
   347  1000                     __pstringtext:	
   348  1000                     STR_53:	
   349  1000  3452               	retlw	82	;'R'
   350  1001  3465               	retlw	101	;'e'
   351  1002  346C               	retlw	108	;'l'
   352  1003  3461               	retlw	97	;'a'
   353  1004  3479               	retlw	121	;'y'
   354  1005  3431               	retlw	49	;'1'
   355  1006  3420               	retlw	32	;' '
   356  1007  3421               	retlw	33	;'!'
   357  1008  3464               	retlw	100	;'d'
   358  1009  3465               	retlw	101	;'e'
   359  100A  342D               	retlw	45	;'-'
   360  100B  3465               	retlw	101	;'e'
   361  100C  346E               	retlw	110	;'n'
   362  100D  3465               	retlw	101	;'e'
   363  100E  3472               	retlw	114	;'r'
   364  100F  3467               	retlw	103	;'g'
   365  1010  3469               	retlw	105	;'i'
   366  1011  347A               	retlw	122	;'z'
   367  1012  3465               	retlw	101	;'e'
   368  1013  3464               	retlw	100	;'d'
   369  1014  3400               	retlw	0
   370  1015                     STR_67:	
   371  1015  3452               	retlw	82	;'R'
   372  1016  3465               	retlw	101	;'e'
   373  1017  346C               	retlw	108	;'l'
   374  1018  3461               	retlw	97	;'a'
   375  1019  3479               	retlw	121	;'y'
   376  101A  3432               	retlw	50	;'2'
   377  101B  3420               	retlw	32	;' '
   378  101C  3421               	retlw	33	;'!'
   379  101D  3464               	retlw	100	;'d'
   380  101E  3465               	retlw	101	;'e'
   381  101F  342D               	retlw	45	;'-'
   382  1020  3465               	retlw	101	;'e'
   383  1021  346E               	retlw	110	;'n'
   384  1022  3465               	retlw	101	;'e'
   385  1023  3472               	retlw	114	;'r'
   386  1024  3467               	retlw	103	;'g'
   387  1025  3469               	retlw	105	;'i'
   388  1026  347A               	retlw	122	;'z'
   389  1027  3465               	retlw	101	;'e'
   390  1028  3464               	retlw	100	;'d'
   391  1029  3400               	retlw	0
   392  102A                     STR_81:	
   393  102A  3452               	retlw	82	;'R'
   394  102B  3465               	retlw	101	;'e'
   395  102C  346C               	retlw	108	;'l'
   396  102D  3461               	retlw	97	;'a'
   397  102E  3479               	retlw	121	;'y'
   398  102F  3433               	retlw	51	;'3'
   399  1030  3420               	retlw	32	;' '
   400  1031  3421               	retlw	33	;'!'
   401  1032  3464               	retlw	100	;'d'
   402  1033  3465               	retlw	101	;'e'
   403  1034  342D               	retlw	45	;'-'
   404  1035  3465               	retlw	101	;'e'
   405  1036  346E               	retlw	110	;'n'
   406  1037  3465               	retlw	101	;'e'
   407  1038  3472               	retlw	114	;'r'
   408  1039  3467               	retlw	103	;'g'
   409  103A  3469               	retlw	105	;'i'
   410  103B  347A               	retlw	122	;'z'
   411  103C  3465               	retlw	101	;'e'
   412  103D  3464               	retlw	100	;'d'
   413  103E  3400               	retlw	0
   414  103F                     STR_27:	
   415  103F  3450               	retlw	80	;'P'
   416  1040  3469               	retlw	105	;'i'
   417  1041  3463               	retlw	99	;'c'
   418  1042  346B               	retlw	107	;'k'
   419  1043  3469               	retlw	105	;'i'
   420  1044  3474               	retlw	116	;'t'
   421  1045  3420               	retlw	32	;' '
   422  1046  3450               	retlw	80	;'P'
   423  1047  3472               	retlw	114	;'r'
   424  1048  346F               	retlw	111	;'o'
   425  1049  3467               	retlw	103	;'g'
   426  104A  3472               	retlw	114	;'r'
   427  104B  3461               	retlw	97	;'a'
   428  104C  346D               	retlw	109	;'m'
   429  104D  346D               	retlw	109	;'m'
   430  104E  3469               	retlw	105	;'i'
   431  104F  346E               	retlw	110	;'n'
   432  1050  3467               	retlw	103	;'g'
   433  1051  3400               	retlw	0
   434  1052                     STR_38:	
   435  1052  3445               	retlw	69	;'E'
   436  1053  3445               	retlw	69	;'E'
   437  1054  3450               	retlw	80	;'P'
   438  1055  3452               	retlw	82	;'R'
   439  1056  344F               	retlw	79	;'O'
   440  1057  344D               	retlw	77	;'M'
   441  1058  3420               	retlw	32	;' '
   442  1059  3472               	retlw	114	;'r'
   443  105A  3465               	retlw	101	;'e'
   444  105B  3461               	retlw	97	;'a'
   445  105C  3464               	retlw	100	;'d'
   446  105D  342F               	retlw	47	;'/'
   447  105E  3477               	retlw	119	;'w'
   448  105F  3472               	retlw	114	;'r'
   449  1060  3469               	retlw	105	;'i'
   450  1061  3474               	retlw	116	;'t'
   451  1062  3465               	retlw	101	;'e'
   452  1063  3400               	retlw	0
   453  1064                     STR_48:	
   454  1064  3420               	retlw	32	;' '
   455  1065  3445               	retlw	69	;'E'
   456  1066  3472               	retlw	114	;'r'
   457  1067  3472               	retlw	114	;'r'
   458  1068  346F               	retlw	111	;'o'
   459  1069  3472               	retlw	114	;'r'
   460  106A  3420               	retlw	32	;' '
   461  106B  344D               	retlw	77	;'M'
   462  106C  3465               	retlw	101	;'e'
   463  106D  346D               	retlw	109	;'m'
   464  106E  345F               	retlw	95	;'_'
   465  106F  3463               	retlw	99	;'c'
   466  1070  346F               	retlw	111	;'o'
   467  1071  3470               	retlw	112	;'p'
   468  1072  3469               	retlw	105	;'i'
   469  1073  3465               	retlw	101	;'e'
   470  1074  3472               	retlw	114	;'r'
   471  1075  3400               	retlw	0
   472  1076                     STR_163:	
   473  1076  344D               	retlw	77	;'M'
   474  1077  3475               	retlw	117	;'u'
   475  1078  346C               	retlw	108	;'l'
   476  1079  3474               	retlw	116	;'t'
   477  107A  3469               	retlw	105	;'i'
   478  107B  345F               	retlw	95	;'_'
   479  107C  3452               	retlw	82	;'R'
   480  107D  3458               	retlw	88	;'X'
   481  107E  3420               	retlw	32	;' '
   482  107F  3454               	retlw	84	;'T'
   483  1080  3465               	retlw	101	;'e'
   484  1081  3473               	retlw	115	;'s'
   485  1082  3474               	retlw	116	;'t'
   486  1083  346A               	retlw	106	;'j'
   487  1084  3469               	retlw	105	;'i'
   488  1085  3467               	retlw	103	;'g'
   489  1086  3400               	retlw	0
   490  1087                     STR_118:	
   491  1087  3444               	retlw	68	;'D'
   492  1088  3465               	retlw	101	;'e'
   493  1089  3463               	retlw	99	;'c'
   494  108A  346F               	retlw	111	;'o'
   495  108B  3464               	retlw	100	;'d'
   496  108C  3465               	retlw	101	;'e'
   497  108D  3420               	retlw	32	;' '
   498  108E  344F               	retlw	79	;'O'
   499  108F  346C               	retlw	108	;'l'
   500  1090  3464               	retlw	100	;'d'
   501  1091  3420               	retlw	32	;' '
   502  1092  342D               	retlw	45	;'-'
   503  1093  3446               	retlw	70	;'F'
   504  1094  3461               	retlw	97	;'a'
   505  1095  3469               	retlw	105	;'i'
   506  1096  346C               	retlw	108	;'l'
   507  1097  3400               	retlw	0
   508  1098                     STR_155:	
   509  1098  3454               	retlw	84	;'T'
   510  1099  3465               	retlw	101	;'e'
   511  109A  3473               	retlw	115	;'s'
   512  109B  3474               	retlw	116	;'t'
   513  109C  346A               	retlw	106	;'j'
   514  109D  3469               	retlw	105	;'i'
   515  109E  3467               	retlw	103	;'g'
   516  109F  3420               	retlw	32	;' '
   517  10A0  3450               	retlw	80	;'P'
   518  10A1  346F               	retlw	111	;'o'
   519  10A2  3477               	retlw	119	;'w'
   520  10A3  3465               	retlw	101	;'e'
   521  10A4  3472               	retlw	114	;'r'
   522  10A5  342D               	retlw	45	;'-'
   523  10A6  3475               	retlw	117	;'u'
   524  10A7  3470               	retlw	112	;'p'
   525  10A8  3400               	retlw	0
   526  10A9                     STR_2:	
   527  10A9  3454               	retlw	84	;'T'
   528  10AA  3465               	retlw	101	;'e'
   529  10AB  3473               	retlw	115	;'s'
   530  10AC  3474               	retlw	116	;'t'
   531  10AD  342D               	retlw	45	;'-'
   532  10AE  344A               	retlw	74	;'J'
   533  10AF  3469               	retlw	105	;'i'
   534  10B0  3467               	retlw	103	;'g'
   535  10B1  347C               	retlw	124	;'|'
   536  10B2  3453               	retlw	83	;'S'
   537  10B3  3474               	retlw	116	;'t'
   538  10B4  3461               	retlw	97	;'a'
   539  10B5  3472               	retlw	114	;'r'
   540  10B6  3474               	retlw	116	;'t'
   541  10B7  3475               	retlw	117	;'u'
   542  10B8  3470               	retlw	112	;'p'
   543  10B9  3400               	retlw	0
   544  10BA                     STR_174:	
   545  10BA  3420               	retlw	32	;' '
   546  10BB  3474               	retlw	116	;'t'
   547  10BC  346F               	retlw	111	;'o'
   548  10BD  3420               	retlw	32	;' '
   549  10BE  3472               	retlw	114	;'r'
   550  10BF  3465               	retlw	101	;'e'
   551  10C0  3473               	retlw	115	;'s'
   552  10C1  3474               	retlw	116	;'t'
   553  10C2  3461               	retlw	97	;'a'
   554  10C3  3472               	retlw	114	;'r'
   555  10C4  3474               	retlw	116	;'t'
   556  10C5  3420               	retlw	32	;' '
   557  10C6  3474               	retlw	116	;'t'
   558  10C7  3465               	retlw	101	;'e'
   559  10C8  3473               	retlw	115	;'s'
   560  10C9  3474               	retlw	116	;'t'
   561  10CA  3400               	retlw	0
   562  10CB                     STR_135:	
   563  10CB  3437               	retlw	55	;'7'
   564  10CC  3473               	retlw	115	;'s'
   565  10CD  3465               	retlw	101	;'e'
   566  10CE  3467               	retlw	103	;'g'
   567  10CF  342C               	retlw	44	;','
   568  10D0  3420               	retlw	32	;' '
   569  10D1  3462               	retlw	98	;'b'
   570  10D2  3475               	retlw	117	;'u'
   571  10D3  347A               	retlw	122	;'z'
   572  10D4  347A               	retlw	122	;'z'
   573  10D5  3465               	retlw	101	;'e'
   574  10D6  3472               	retlw	114	;'r'
   575  10D7  342C               	retlw	44	;','
   576  10D8  3420               	retlw	32	;' '
   577  10D9  3420               	retlw	32	;' '
   578  10DA  3400               	retlw	0
   579  10DB                     STR_116:	
   580  10DB  3444               	retlw	68	;'D'
   581  10DC  3465               	retlw	101	;'e'
   582  10DD  3463               	retlw	99	;'c'
   583  10DE  346F               	retlw	111	;'o'
   584  10DF  3464               	retlw	100	;'d'
   585  10E0  3465               	retlw	101	;'e'
   586  10E1  3420               	retlw	32	;' '
   587  10E2  344E               	retlw	78	;'N'
   588  10E3  3465               	retlw	101	;'e'
   589  10E4  3477               	retlw	119	;'w'
   590  10E5  3420               	retlw	32	;' '
   591  10E6  342D               	retlw	45	;'-'
   592  10E7  3420               	retlw	32	;' '
   593  10E8  344F               	retlw	79	;'O'
   594  10E9  344B               	retlw	75	;'K'
   595  10EA  3400               	retlw	0
   596  10EB                     STR_57:	
   597  10EB  3452               	retlw	82	;'R'
   598  10EC  3465               	retlw	101	;'e'
   599  10ED  346C               	retlw	108	;'l'
   600  10EE  3461               	retlw	97	;'a'
   601  10EF  3479               	retlw	121	;'y'
   602  10F0  3431               	retlw	49	;'1'
   603  10F1  3420               	retlw	32	;' '
   604  10F2  3421               	retlw	33	;'!'
   605  10F3  346C               	retlw	108	;'l'
   606  10F4  3461               	retlw	97	;'a'
   607  10F5  3474               	retlw	116	;'t'
   608  10F6  3463               	retlw	99	;'c'
   609  10F7  3468               	retlw	104	;'h'
   610  10F8  3465               	retlw	101	;'e'
   611  10F9  3464               	retlw	100	;'d'
   612  10FA  3400               	retlw	0
   613  10FB                     STR_71:	
   614  10FB  3452               	retlw	82	;'R'
   615  10FC  3465               	retlw	101	;'e'
   616  10FD  346C               	retlw	108	;'l'
   617  10FE  3461               	retlw	97	;'a'
   618  10FF  3479               	retlw	121	;'y'
   619  1100  3432               	retlw	50	;'2'
   620  1101  3420               	retlw	32	;' '
   621  1102  3421               	retlw	33	;'!'
   622  1103  346C               	retlw	108	;'l'
   623  1104  3461               	retlw	97	;'a'
   624  1105  3474               	retlw	116	;'t'
   625  1106  3463               	retlw	99	;'c'
   626  1107  3468               	retlw	104	;'h'
   627  1108  3465               	retlw	101	;'e'
   628  1109  3464               	retlw	100	;'d'
   629  110A  3400               	retlw	0
   630  110B                     STR_85:	
   631  110B  3452               	retlw	82	;'R'
   632  110C  3465               	retlw	101	;'e'
   633  110D  346C               	retlw	108	;'l'
   634  110E  3461               	retlw	97	;'a'
   635  110F  3479               	retlw	121	;'y'
   636  1110  3433               	retlw	51	;'3'
   637  1111  3420               	retlw	32	;' '
   638  1112  3421               	retlw	33	;'!'
   639  1113  346C               	retlw	108	;'l'
   640  1114  3461               	retlw	97	;'a'
   641  1115  3474               	retlw	116	;'t'
   642  1116  3463               	retlw	99	;'c'
   643  1117  3468               	retlw	104	;'h'
   644  1118  3465               	retlw	101	;'e'
   645  1119  3464               	retlw	100	;'d'
   646  111A  3400               	retlw	0
   647  111B                     STR_143:	
   648  111B  344D               	retlw	77	;'M'
   649  111C  3465               	retlw	101	;'e'
   650  111D  346D               	retlw	109	;'m'
   651  111E  345F               	retlw	95	;'_'
   652  111F  3443               	retlw	67	;'C'
   653  1120  346F               	retlw	111	;'o'
   654  1121  3470               	retlw	112	;'p'
   655  1122  3469               	retlw	105	;'i'
   656  1123  3465               	retlw	101	;'e'
   657  1124  3472               	retlw	114	;'r'
   658  1125  3420               	retlw	32	;' '
   659  1126  3450               	retlw	80	;'P'
   660  1127  3461               	retlw	97	;'a'
   661  1128  3473               	retlw	115	;'s'
   662  1129  3473               	retlw	115	;'s'
   663  112A  3400               	retlw	0
   664  112B                     STR_61:	
   665  112B  3452               	retlw	82	;'R'
   666  112C  3465               	retlw	101	;'e'
   667  112D  346C               	retlw	108	;'l'
   668  112E  3461               	retlw	97	;'a'
   669  112F  3479               	retlw	121	;'y'
   670  1130  3431               	retlw	49	;'1'
   671  1131  3420               	retlw	32	;' '
   672  1132  346C               	retlw	108	;'l'
   673  1133  3461               	retlw	97	;'a'
   674  1134  3474               	retlw	116	;'t'
   675  1135  3463               	retlw	99	;'c'
   676  1136  3468               	retlw	104	;'h'
   677  1137  3465               	retlw	101	;'e'
   678  1138  3464               	retlw	100	;'d'
   679  1139  3400               	retlw	0
   680  113A                     STR_75:	
   681  113A  3452               	retlw	82	;'R'
   682  113B  3465               	retlw	101	;'e'
   683  113C  346C               	retlw	108	;'l'
   684  113D  3461               	retlw	97	;'a'
   685  113E  3479               	retlw	121	;'y'
   686  113F  3432               	retlw	50	;'2'
   687  1140  3420               	retlw	32	;' '
   688  1141  346C               	retlw	108	;'l'
   689  1142  3461               	retlw	97	;'a'
   690  1143  3474               	retlw	116	;'t'
   691  1144  3463               	retlw	99	;'c'
   692  1145  3468               	retlw	104	;'h'
   693  1146  3465               	retlw	101	;'e'
   694  1147  3464               	retlw	100	;'d'
   695  1148  3400               	retlw	0
   696  1149                     STR_89:	
   697  1149  3452               	retlw	82	;'R'
   698  114A  3465               	retlw	101	;'e'
   699  114B  346C               	retlw	108	;'l'
   700  114C  3461               	retlw	97	;'a'
   701  114D  3479               	retlw	121	;'y'
   702  114E  3433               	retlw	51	;'3'
   703  114F  3420               	retlw	32	;' '
   704  1150  346C               	retlw	108	;'l'
   705  1151  3461               	retlw	97	;'a'
   706  1152  3474               	retlw	116	;'t'
   707  1153  3463               	retlw	99	;'c'
   708  1154  3468               	retlw	104	;'h'
   709  1155  3465               	retlw	101	;'e'
   710  1156  3464               	retlw	100	;'d'
   711  1157  3400               	retlw	0
   712  1158                     STR_5:	
   713  1158  3450               	retlw	80	;'P'
   714  1159  346F               	retlw	111	;'o'
   715  115A  3477               	retlw	119	;'w'
   716  115B  3465               	retlw	101	;'e'
   717  115C  3472               	retlw	114	;'r'
   718  115D  3469               	retlw	105	;'i'
   719  115E  346E               	retlw	110	;'n'
   720  115F  3467               	retlw	103	;'g'
   721  1160  3420               	retlw	32	;' '
   722  1161  3462               	retlw	98	;'b'
   723  1162  346F               	retlw	111	;'o'
   724  1163  3461               	retlw	97	;'a'
   725  1164  3472               	retlw	114	;'r'
   726  1165  3464               	retlw	100	;'d'
   727  1166  3400               	retlw	0
   728  1167                     STR_120:	
   729  1167  3445               	retlw	69	;'E'
   730  1168  3472               	retlw	114	;'r'
   731  1169  3472               	retlw	114	;'r'
   732  116A  346F               	retlw	111	;'o'
   733  116B  3472               	retlw	114	;'r'
   734  116C  3420               	retlw	32	;' '
   735  116D  342D               	retlw	45	;'-'
   736  116E  3420               	retlw	32	;' '
   737  116F  3444               	retlw	68	;'D'
   738  1170  3465               	retlw	101	;'e'
   739  1171  3463               	retlw	99	;'c'
   740  1172  346F               	retlw	111	;'o'
   741  1173  3464               	retlw	100	;'d'
   742  1174  3465               	retlw	101	;'e'
   743  1175  3400               	retlw	0
   744  1176                     STR_157:	
   745  1176  3443               	retlw	67	;'C'
   746  1177  346F               	retlw	111	;'o'
   747  1178  346E               	retlw	110	;'n'
   748  1179  3464               	retlw	100	;'d'
   749  117A  346F               	retlw	111	;'o'
   750  117B  3433               	retlw	51	;'3'
   751  117C  3420               	retlw	32	;' '
   752  117D  3454               	retlw	84	;'T'
   753  117E  3465               	retlw	101	;'e'
   754  117F  3473               	retlw	115	;'s'
   755  1180  3474               	retlw	116	;'t'
   756  1181  346A               	retlw	106	;'j'
   757  1182  3469               	retlw	105	;'i'
   758  1183  3467               	retlw	103	;'g'
   759  1184  3400               	retlw	0
   760  1185                     STR_114:	
   761  1185  3420               	retlw	32	;' '
   762  1186  3463               	retlw	99	;'c'
   763  1187  3479               	retlw	121	;'y'
   764  1188  3463               	retlw	99	;'c'
   765  1189  346C               	retlw	108	;'l'
   766  118A  3469               	retlw	105	;'i'
   767  118B  346E               	retlw	110	;'n'
   768  118C  3467               	retlw	103	;'g'
   769  118D  3420               	retlw	32	;' '
   770  118E  3470               	retlw	112	;'p'
   771  118F  346F               	retlw	111	;'o'
   772  1190  3477               	retlw	119	;'w'
   773  1191  3465               	retlw	101	;'e'
   774  1192  3472               	retlw	114	;'r'
   775  1193  3400               	retlw	0
   776  1194                     STR_19:	
   777  1194  3431               	retlw	49	;'1'
   778  1195  3436               	retlw	54	;'6'
   779  1196  3476               	retlw	118	;'v'
   780  1197  342D               	retlw	45	;'-'
   781  1198  3431               	retlw	49	;'1'
   782  1199  3432               	retlw	50	;'2'
   783  119A  3476               	retlw	118	;'v'
   784  119B  3420               	retlw	32	;' '
   785  119C  3473               	retlw	115	;'s'
   786  119D  3475               	retlw	117	;'u'
   787  119E  3470               	retlw	112	;'p'
   788  119F  3470               	retlw	112	;'p'
   789  11A0  346C               	retlw	108	;'l'
   790  11A1  3479               	retlw	121	;'y'
   791  11A2  3400               	retlw	0
   792  11A3                     STR_127:	
   793  11A3  344D               	retlw	77	;'M'
   794  11A4  3461               	retlw	97	;'a'
   795  11A5  3473               	retlw	115	;'s'
   796  11A6  3474               	retlw	116	;'t'
   797  11A7  3465               	retlw	101	;'e'
   798  11A8  3472               	retlw	114	;'r'
   799  11A9  3420               	retlw	32	;' '
   800  11AA  3445               	retlw	69	;'E'
   801  11AB  3472               	retlw	114	;'r'
   802  11AC  3461               	retlw	97	;'a'
   803  11AD  3473               	retlw	115	;'s'
   804  11AE  3465               	retlw	101	;'e'
   805  11AF  3420               	retlw	32	;' '
   806  11B0  3400               	retlw	0
   807  11B1                     STR_46:	
   808  11B1  3420               	retlw	32	;' '
   809  11B2  3445               	retlw	69	;'E'
   810  11B3  3472               	retlw	114	;'r'
   811  11B4  3472               	retlw	114	;'r'
   812  11B5  346F               	retlw	111	;'o'
   813  11B6  3472               	retlw	114	;'r'
   814  11B7  3420               	retlw	32	;' '
   815  11B8  3443               	retlw	67	;'C'
   816  11B9  346F               	retlw	111	;'o'
   817  11BA  346E               	retlw	110	;'n'
   818  11BB  3464               	retlw	100	;'d'
   819  11BC  346F               	retlw	111	;'o'
   820  11BD  3433               	retlw	51	;'3'
   821  11BE  3400               	retlw	0
   822  11BF                     STR_4:	
   823  11BF  342D               	retlw	45	;'-'
   824  11C0  343E               	retlw	62	;'>'
   825  11C1  3420               	retlw	32	;' '
   826  11C2  3449               	retlw	73	;'I'
   827  11C3  346E               	retlw	110	;'n'
   828  11C4  3473               	retlw	115	;'s'
   829  11C5  3465               	retlw	101	;'e'
   830  11C6  3472               	retlw	114	;'r'
   831  11C7  3474               	retlw	116	;'t'
   832  11C8  3420               	retlw	32	;' '
   833  11C9  3450               	retlw	80	;'P'
   834  11CA  3443               	retlw	67	;'C'
   835  11CB  3442               	retlw	66	;'B'
   836  11CC  3400               	retlw	0
   837  11CD                     STR_93:	
   838  11CD  3472               	retlw	114	;'r'
   839  11CE  3465               	retlw	101	;'e'
   840  11CF  346C               	retlw	108	;'l'
   841  11D0  3461               	retlw	97	;'a'
   842  11D1  3479               	retlw	121	;'y'
   843  11D2  3473               	retlw	115	;'s'
   844  11D3  3420               	retlw	32	;' '
   845  11D4  3470               	retlw	112	;'p'
   846  11D5  3461               	retlw	97	;'a'
   847  11D6  3473               	retlw	115	;'s'
   848  11D7  3473               	retlw	115	;'s'
   849  11D8  3465               	retlw	101	;'e'
   850  11D9  3464               	retlw	100	;'d'
   851  11DA  3400               	retlw	0
   852  11DB                     STR_140:	
   853  11DB  3420               	retlw	32	;' '
   854  11DC  3452               	retlw	82	;'R'
   855  11DD  3465               	retlw	101	;'e'
   856  11DE  346D               	retlw	109	;'m'
   857  11DF  346F               	retlw	111	;'o'
   858  11E0  3476               	retlw	118	;'v'
   859  11E1  3465               	retlw	101	;'e'
   860  11E2  3420               	retlw	32	;' '
   861  11E3  3462               	retlw	98	;'b'
   862  11E4  346F               	retlw	111	;'o'
   863  11E5  3461               	retlw	97	;'a'
   864  11E6  3472               	retlw	114	;'r'
   865  11E7  3464               	retlw	100	;'d'
   866  11E8  3400               	retlw	0
   867  11E9                     STR_106:	
   868  11E9  3420               	retlw	32	;' '
   869  11EA  3445               	retlw	69	;'E'
   870  11EB  3472               	retlw	114	;'r'
   871  11EC  3472               	retlw	114	;'r'
   872  11ED  346F               	retlw	111	;'o'
   873  11EE  3472               	retlw	114	;'r'
   874  11EF  3420               	retlw	32	;' '
   875  11F0  342D               	retlw	45	;'-'
   876  11F1  3420               	retlw	32	;' '
   877  11F2  3448               	retlw	72	;'H'
   878  11F3  3469               	retlw	105	;'i'
   879  11F4  3467               	retlw	103	;'g'
   880  11F5  3468               	retlw	104	;'h'
   881  11F6  3400               	retlw	0
   882  11F7                     STR_145:	
   883  11F7  344D               	retlw	77	;'M'
   884  11F8  3475               	retlw	117	;'u'
   885  11F9  346C               	retlw	108	;'l'
   886  11FA  3474               	retlw	116	;'t'
   887  11FB  3469               	retlw	105	;'i'
   888  11FC  345F               	retlw	95	;'_'
   889  11FD  3452               	retlw	82	;'R'
   890  11FE  3458               	retlw	88	;'X'
   891  11FF  3420               	retlw	32	;' '
   892  1200  3450               	retlw	80	;'P'
   893  1201  3461               	retlw	97	;'a'
   894  1202  3473               	retlw	115	;'s'
   895  1203  3473               	retlw	115	;'s'
   896  1204  3400               	retlw	0
   897  1205                     STR_7:	
   898  1205  3431               	retlw	49	;'1'
   899  1206  3432               	retlw	50	;'2'
   900  1207  3476               	retlw	118	;'v'
   901  1208  342D               	retlw	45	;'-'
   902  1209  3435               	retlw	53	;'5'
   903  120A  3476               	retlw	118	;'v'
   904  120B  3420               	retlw	32	;' '
   905  120C  3473               	retlw	115	;'s'
   906  120D  3475               	retlw	117	;'u'
   907  120E  3470               	retlw	112	;'p'
   908  120F  3470               	retlw	112	;'p'
   909  1210  346C               	retlw	108	;'l'
   910  1211  3479               	retlw	121	;'y'
   911  1212  3400               	retlw	0
   912  1213                     STR_15:	
   913  1213  3431               	retlw	49	;'1'
   914  1214  3436               	retlw	54	;'6'
   915  1215  3476               	retlw	118	;'v'
   916  1216  342D               	retlw	45	;'-'
   917  1217  3435               	retlw	53	;'5'
   918  1218  3476               	retlw	118	;'v'
   919  1219  3420               	retlw	32	;' '
   920  121A  3473               	retlw	115	;'s'
   921  121B  3475               	retlw	117	;'u'
   922  121C  3470               	retlw	112	;'p'
   923  121D  3470               	retlw	112	;'p'
   924  121E  346C               	retlw	108	;'l'
   925  121F  3479               	retlw	121	;'y'
   926  1220  3400               	retlw	0
   927  1221                     STR_43:	
   928  1221  3454               	retlw	84	;'T'
   929  1222  3465               	retlw	101	;'e'
   930  1223  3473               	retlw	115	;'s'
   931  1224  3474               	retlw	116	;'t'
   932  1225  3420               	retlw	32	;' '
   933  1226  3445               	retlw	69	;'E'
   934  1227  3445               	retlw	69	;'E'
   935  1228  3450               	retlw	80	;'P'
   936  1229  3452               	retlw	82	;'R'
   937  122A  344F               	retlw	79	;'O'
   938  122B  344D               	retlw	77	;'M'
   939  122C  3420               	retlw	32	;' '
   940  122D  3400               	retlw	0
   941  122E                     STR_123:	
   942  122E  3454               	retlw	84	;'T'
   943  122F  3434               	retlw	52	;'4'
   944  1230  3420               	retlw	32	;' '
   945  1231  3462               	retlw	98	;'b'
   946  1232  3475               	retlw	117	;'u'
   947  1233  3473               	retlw	115	;'s'
   948  1234  3420               	retlw	32	;' '
   949  1235  3428               	retlw	40	;'('
   950  1236  3443               	retlw	67	;'C'
   951  1237  3441               	retlw	65	;'A'
   952  1238  344E               	retlw	78	;'N'
   953  1239  3429               	retlw	41	;')'
   954  123A  3400               	retlw	0
   955  123B                     STR_10:	
   956  123B  3456               	retlw	86	;'V'
   957  123C  346F               	retlw	111	;'o'
   958  123D  346C               	retlw	108	;'l'
   959  123E  3474               	retlw	116	;'t'
   960  123F  3420               	retlw	32	;' '
   961  1240  3445               	retlw	69	;'E'
   962  1241  3472               	retlw	114	;'r'
   963  1242  3472               	retlw	114	;'r'
   964  1243  346F               	retlw	111	;'o'
   965  1244  3472               	retlw	114	;'r'
   966  1245  3420               	retlw	32	;' '
   967  1246  3448               	retlw	72	;'H'
   968  1247  3400               	retlw	0
   969  1248                     STR_105:	
   970  1248  3454               	retlw	84	;'T'
   971  1249  3465               	retlw	101	;'e'
   972  124A  3473               	retlw	115	;'s'
   973  124B  3474               	retlw	116	;'t'
   974  124C  3420               	retlw	32	;' '
   975  124D  3452               	retlw	82	;'R'
   976  124E  3446               	retlw	70	;'F'
   977  124F  3420               	retlw	32	;' '
   978  1250  3452               	retlw	82	;'R'
   979  1251  3453               	retlw	83	;'S'
   980  1252  3453               	retlw	83	;'S'
   981  1253  3449               	retlw	73	;'I'
   982  1254  3400               	retlw	0
   983  1255                     STR_8:	
   984  1255  3456               	retlw	86	;'V'
   985  1256  346F               	retlw	111	;'o'
   986  1257  346C               	retlw	108	;'l'
   987  1258  3474               	retlw	116	;'t'
   988  1259  3420               	retlw	32	;' '
   989  125A  3445               	retlw	69	;'E'
   990  125B  3472               	retlw	114	;'r'
   991  125C  3472               	retlw	114	;'r'
   992  125D  346F               	retlw	111	;'o'
   993  125E  3472               	retlw	114	;'r'
   994  125F  3420               	retlw	32	;' '
   995  1260  344C               	retlw	76	;'L'
   996  1261  3400               	retlw	0
   997  1262                     STR_166:	
   998  1262  3420               	retlw	32	;' '
   999  1263  3450               	retlw	80	;'P'
  1000  1264  3472               	retlw	114	;'r'
  1001  1265  3465               	retlw	101	;'e'
  1002  1266  3473               	retlw	115	;'s'
  1003  1267  3473               	retlw	115	;'s'
  1004  1268  3420               	retlw	32	;' '
  1005  1269  3453               	retlw	83	;'S'
  1006  126A  3454               	retlw	84	;'T'
  1007  126B  3441               	retlw	65	;'A'
  1008  126C  3452               	retlw	82	;'R'
  1009  126D  3454               	retlw	84	;'T'
  1010  126E  3400               	retlw	0
  1011  126F                     STR_33:	
  1012  126F  3445               	retlw	69	;'E'
  1013  1270  3473               	retlw	115	;'s'
  1014  1271  3474               	retlw	116	;'t'
  1015  1272  3461               	retlw	97	;'a'
  1016  1273  3462               	retlw	98	;'b'
  1017  1274  346C               	retlw	108	;'l'
  1018  1275  3469               	retlw	105	;'i'
  1019  1276  3473               	retlw	115	;'s'
  1020  1277  3468               	retlw	104	;'h'
  1021  1278  3469               	retlw	105	;'i'
  1022  1279  346E               	retlw	110	;'n'
  1023  127A  3467               	retlw	103	;'g'
  1024  127B  3400               	retlw	0
  1025  127C                     STR_39:	
  1026  127C  3445               	retlw	69	;'E'
  1027  127D  3445               	retlw	69	;'E'
  1028  127E  3450               	retlw	80	;'P'
  1029  127F  3452               	retlw	82	;'R'
  1030  1280  344F               	retlw	79	;'O'
  1031  1281  344D               	retlw	77	;'M'
  1032  1282  3420               	retlw	32	;' '
  1033  1283  3465               	retlw	101	;'e'
  1034  1284  3472               	retlw	114	;'r'
  1035  1285  3472               	retlw	114	;'r'
  1036  1286  346F               	retlw	111	;'o'
  1037  1287  3472               	retlw	114	;'r'
  1038  1288  3400               	retlw	0
  1039  1289                     STR_136:	
  1040  1289  3420               	retlw	32	;' '
  1041  128A  3462               	retlw	98	;'b'
  1042  128B  3475               	retlw	117	;'u'
  1043  128C  3474               	retlw	116	;'t'
  1044  128D  3474               	retlw	116	;'t'
  1045  128E  346F               	retlw	111	;'o'
  1046  128F  346E               	retlw	110	;'n'
  1047  1290  3420               	retlw	32	;' '
  1048  1291  3474               	retlw	116	;'t'
  1049  1292  3465               	retlw	101	;'e'
  1050  1293  3473               	retlw	115	;'s'
  1051  1294  3474               	retlw	116	;'t'
  1052  1295  3400               	retlw	0
  1053  1296                     STR_108:	
  1054  1296  3420               	retlw	32	;' '
  1055  1297  3445               	retlw	69	;'E'
  1056  1298  3472               	retlw	114	;'r'
  1057  1299  3472               	retlw	114	;'r'
  1058  129A  346F               	retlw	111	;'o'
  1059  129B  3472               	retlw	114	;'r'
  1060  129C  3420               	retlw	32	;' '
  1061  129D  342D               	retlw	45	;'-'
  1062  129E  3420               	retlw	32	;' '
  1063  129F  344C               	retlw	76	;'L'
  1064  12A0  346F               	retlw	111	;'o'
  1065  12A1  3477               	retlw	119	;'w'
  1066  12A2  3400               	retlw	0
  1067  12A3                     STR_65:	
  1068  12A3  3454               	retlw	84	;'T'
  1069  12A4  3465               	retlw	101	;'e'
  1070  12A5  3473               	retlw	115	;'s'
  1071  12A6  3474               	retlw	116	;'t'
  1072  12A7  3420               	retlw	32	;' '
  1073  12A8  3452               	retlw	82	;'R'
  1074  12A9  3465               	retlw	101	;'e'
  1075  12AA  346C               	retlw	108	;'l'
  1076  12AB  3461               	retlw	97	;'a'
  1077  12AC  3479               	retlw	121	;'y'
  1078  12AD  3432               	retlw	50	;'2'
  1079  12AE  3400               	retlw	0
  1080  12AF                     STR_40:	
  1081  12AF  3420               	retlw	32	;' '
  1082  12B0  3452               	retlw	82	;'R'
  1083  12B1  3465               	retlw	101	;'e'
  1084  12B2  3461               	retlw	97	;'a'
  1085  12B3  3464               	retlw	100	;'d'
  1086  12B4  342F               	retlw	47	;'/'
  1087  12B5  3457               	retlw	87	;'W'
  1088  12B6  3472               	retlw	114	;'r'
  1089  12B7  3469               	retlw	105	;'i'
  1090  12B8  3474               	retlw	116	;'t'
  1091  12B9  3465               	retlw	101	;'e'
  1092  12BA  3400               	retlw	0
  1093  12BB                     STR_45:	
  1094  12BB  3445               	retlw	69	;'E'
  1095  12BC  3445               	retlw	69	;'E'
  1096  12BD  3450               	retlw	80	;'P'
  1097  12BE  3452               	retlw	82	;'R'
  1098  12BF  344F               	retlw	79	;'O'
  1099  12C0  344D               	retlw	77	;'M'
  1100  12C1  3420               	retlw	32	;' '
  1101  12C2  3473               	retlw	115	;'s'
  1102  12C3  3469               	retlw	105	;'i'
  1103  12C4  347A               	retlw	122	;'z'
  1104  12C5  3465               	retlw	101	;'e'
  1105  12C6  3400               	retlw	0
  1106  12C7                     STR_159:	
  1107  12C7  3452               	retlw	82	;'R'
  1108  12C8  3458               	retlw	88	;'X'
  1109  12C9  3433               	retlw	51	;'3'
  1110  12CA  3420               	retlw	32	;' '
  1111  12CB  3454               	retlw	84	;'T'
  1112  12CC  3465               	retlw	101	;'e'
  1113  12CD  3473               	retlw	115	;'s'
  1114  12CE  3474               	retlw	116	;'t'
  1115  12CF  346A               	retlw	106	;'j'
  1116  12D0  3469               	retlw	105	;'i'
  1117  12D1  3467               	retlw	103	;'g'
  1118  12D2  3400               	retlw	0
  1119  12D3                     STR_29:	
  1120  12D3  3457               	retlw	87	;'W'
  1121  12D4  3461               	retlw	97	;'a'
  1122  12D5  3469               	retlw	105	;'i'
  1123  12D6  3474               	retlw	116	;'t'
  1124  12D7  3469               	retlw	105	;'i'
  1125  12D8  346E               	retlw	110	;'n'
  1126  12D9  3467               	retlw	103	;'g'
  1127  12DA  3420               	retlw	32	;' '
  1128  12DB  3466               	retlw	102	;'f'
  1129  12DC  346F               	retlw	111	;'o'
  1130  12DD  3472               	retlw	114	;'r'
  1131  12DE  3400               	retlw	0
  1132  12DF                     STR_35:	
  1133  12DF  3443               	retlw	67	;'C'
  1134  12E0  346F               	retlw	111	;'o'
  1135  12E1  346D               	retlw	109	;'m'
  1136  12E2  346D               	retlw	109	;'m'
  1137  12E3  3473               	retlw	115	;'s'
  1138  12E4  3420               	retlw	32	;' '
  1139  12E5  3445               	retlw	69	;'E'
  1140  12E6  3472               	retlw	114	;'r'
  1141  12E7  3472               	retlw	114	;'r'
  1142  12E8  346F               	retlw	111	;'o'
  1143  12E9  3472               	retlw	114	;'r'
  1144  12EA  3400               	retlw	0
  1145  12EB                     STR_14:	
  1146  12EB  3454               	retlw	84	;'T'
  1147  12EC  342D               	retlw	45	;'-'
  1148  12ED  346F               	retlw	111	;'o'
  1149  12EE  3475               	retlw	117	;'u'
  1150  12EF  3474               	retlw	116	;'t'
  1151  12F0  3420               	retlw	32	;' '
  1152  12F1  3445               	retlw	69	;'E'
  1153  12F2  3472               	retlw	114	;'r'
  1154  12F3  3472               	retlw	114	;'r'
  1155  12F4  346F               	retlw	111	;'o'
  1156  12F5  3472               	retlw	114	;'r'
  1157  12F6  3400               	retlw	0
  1158  12F7                     STR_139:	
  1159  12F7  3443               	retlw	67	;'C'
  1160  12F8  346F               	retlw	111	;'o'
  1161  12F9  346E               	retlw	110	;'n'
  1162  12FA  3464               	retlw	100	;'d'
  1163  12FB  346F               	retlw	111	;'o'
  1164  12FC  3433               	retlw	51	;'3'
  1165  12FD  3420               	retlw	32	;' '
  1166  12FE  3450               	retlw	80	;'P'
  1167  12FF  3461               	retlw	97	;'a'
  1168  1300  3473               	retlw	115	;'s'
  1169  1301  3473               	retlw	115	;'s'
  1170  1302  3400               	retlw	0
  1171  1303                     STR_12:	
  1172  1303  3443               	retlw	67	;'C'
  1173  1304  3475               	retlw	117	;'u'
  1174  1305  3472               	retlw	114	;'r'
  1175  1306  3472               	retlw	114	;'r'
  1176  1307  3420               	retlw	32	;' '
  1177  1308  3445               	retlw	69	;'E'
  1178  1309  3472               	retlw	114	;'r'
  1179  130A  3472               	retlw	114	;'r'
  1180  130B  346F               	retlw	111	;'o'
  1181  130C  3472               	retlw	114	;'r'
  1182  130D  3400               	retlw	0
  1183  130E                     STR_138:	
  1184  130E  3420               	retlw	32	;' '
  1185  130F  3466               	retlw	102	;'f'
  1186  1310  346F               	retlw	111	;'o'
  1187  1311  3472               	retlw	114	;'r'
  1188  1312  3420               	retlw	32	;' '
  1189  1313  3463               	retlw	99	;'c'
  1190  1314  346F               	retlw	111	;'o'
  1191  1315  346D               	retlw	109	;'m'
  1192  1316  346D               	retlw	109	;'m'
  1193  1317  3473               	retlw	115	;'s'
  1194  1318  3400               	retlw	0
  1195  1319                     STR_49:	
  1196  1319  3454               	retlw	84	;'T'
  1197  131A  3465               	retlw	101	;'e'
  1198  131B  3473               	retlw	115	;'s'
  1199  131C  3474               	retlw	116	;'t'
  1200  131D  3420               	retlw	32	;' '
  1201  131E  3452               	retlw	82	;'R'
  1202  131F  3465               	retlw	101	;'e'
  1203  1320  346C               	retlw	108	;'l'
  1204  1321  3461               	retlw	97	;'a'
  1205  1322  3479               	retlw	121	;'y'
  1206  1323  3400               	retlw	0
  1207  1324                     STR_23:	
  1208  1324  3431               	retlw	49	;'1'
  1209  1325  3436               	retlw	54	;'6'
  1210  1326  3476               	retlw	118	;'v'
  1211  1327  3420               	retlw	32	;' '
  1212  1328  3473               	retlw	115	;'s'
  1213  1329  3475               	retlw	117	;'u'
  1214  132A  3470               	retlw	112	;'p'
  1215  132B  3470               	retlw	112	;'p'
  1216  132C  346C               	retlw	108	;'l'
  1217  132D  3479               	retlw	121	;'y'
  1218  132E  3400               	retlw	0
  1219  132F                     STR_137:	
  1220  132F  3477               	retlw	119	;'w'
  1221  1330  3461               	retlw	97	;'a'
  1222  1331  3469               	retlw	105	;'i'
  1223  1332  3474               	retlw	116	;'t'
  1224  1333  3469               	retlw	105	;'i'
  1225  1334  346E               	retlw	110	;'n'
  1226  1335  3467               	retlw	103	;'g'
  1227  1336  3420               	retlw	32	;' '
  1228  1337  3420               	retlw	32	;' '
  1229  1338  3400               	retlw	0
  1230  1339                     STR_131:	
  1231  1339  3453               	retlw	83	;'S'
  1232  133A  3465               	retlw	101	;'e'
  1233  133B  3474               	retlw	116	;'t'
  1234  133C  3420               	retlw	32	;' '
  1235  133D  3423               	retlw	35	;'#'
  1236  133E  3420               	retlw	32	;' '
  1237  133F  346F               	retlw	111	;'o'
  1238  1340  3466               	retlw	102	;'f'
  1239  1341  3420               	retlw	32	;' '
  1240  1342  3400               	retlw	0
  1241  1343                     STR_110:	
  1242  1343  3452               	retlw	82	;'R'
  1243  1344  3453               	retlw	83	;'S'
  1244  1345  3453               	retlw	83	;'S'
  1245  1346  3449               	retlw	73	;'I'
  1246  1347  3420               	retlw	32	;' '
  1247  1348  342D               	retlw	45	;'-'
  1248  1349  3420               	retlw	32	;' '
  1249  134A  344F               	retlw	79	;'O'
  1250  134B  344B               	retlw	75	;'K'
  1251  134C  3400               	retlw	0
  1252  134D                     STR_132:	
  1253  134D  3420               	retlw	32	;' '
  1254  134E  3463               	retlw	99	;'c'
  1255  134F  3468               	retlw	104	;'h'
  1256  1350  3461               	retlw	97	;'a'
  1257  1351  346E               	retlw	110	;'n'
  1258  1352  346E               	retlw	110	;'n'
  1259  1353  3465               	retlw	101	;'e'
  1260  1354  346C               	retlw	108	;'l'
  1261  1355  3473               	retlw	115	;'s'
  1262  1356  3400               	retlw	0
  1263  1357                     STR_37:	
  1264  1357  3454               	retlw	84	;'T'
  1265  1358  3465               	retlw	101	;'e'
  1266  1359  3473               	retlw	115	;'s'
  1267  135A  3474               	retlw	116	;'t'
  1268  135B  3469               	retlw	105	;'i'
  1269  135C  346E               	retlw	110	;'n'
  1270  135D  3467               	retlw	103	;'g'
  1271  135E  3420               	retlw	32	;' '
  1272  135F  3400               	retlw	0
  1273  1360                     STR_54:	
  1274  1360  3420               	retlw	32	;' '
  1275  1361  3445               	retlw	69	;'E'
  1276  1362  3472               	retlw	114	;'r'
  1277  1363  3472               	retlw	114	;'r'
  1278  1364  346F               	retlw	111	;'o'
  1279  1365  3472               	retlw	114	;'r'
  1280  1366  3420               	retlw	32	;' '
  1281  1367  3432               	retlw	50	;'2'
  1282  1368  3400               	retlw	0
  1283  1369                     STR_56:	
  1284  1369  3420               	retlw	32	;' '
  1285  136A  3445               	retlw	69	;'E'
  1286  136B  3472               	retlw	114	;'r'
  1287  136C  3472               	retlw	114	;'r'
  1288  136D  346F               	retlw	111	;'o'
  1289  136E  3472               	retlw	114	;'r'
  1290  136F  3420               	retlw	32	;' '
  1291  1370  3433               	retlw	51	;'3'
  1292  1371  3400               	retlw	0
  1293  1372                     STR_1:	
  1294  1372  344D               	retlw	77	;'M'
  1295  1373  3475               	retlw	117	;'u'
  1296  1374  346C               	retlw	108	;'l'
  1297  1375  3474               	retlw	116	;'t'
  1298  1376  3469               	retlw	105	;'i'
  1299  1377  345F               	retlw	95	;'_'
  1300  1378  3452               	retlw	82	;'R'
  1301  1379  3458               	retlw	88	;'X'
  1302  137A  3400               	retlw	0
  1303  137B                     STR_94:	
  1304  137B  3466               	retlw	102	;'f'
  1305  137C  3475               	retlw	117	;'u'
  1306  137D  3463               	retlw	99	;'c'
  1307  137E  346B               	retlw	107	;'k'
  1308  137F  3420               	retlw	32	;' '
  1309  1380  3479               	retlw	121	;'y'
  1310  1381  3465               	retlw	101	;'e'
  1311  1382  3461               	retlw	97	;'a'
  1312  1383  3400               	retlw	0
  1313  1384                     STR_32:	
  1314  1384  3420               	retlw	32	;' '
  1315  1385  3473               	retlw	115	;'s'
  1316  1386  346B               	retlw	107	;'k'
  1317  1387  3469               	retlw	105	;'i'
  1318  1388  3470               	retlw	112	;'p'
  1319  1389  3470               	retlw	112	;'p'
  1320  138A  3465               	retlw	101	;'e'
  1321  138B  3464               	retlw	100	;'d'
  1322  138C  3400               	retlw	0
  1323  138D                     STR_141:	
  1324  138D  3452               	retlw	82	;'R'
  1325  138E  3458               	retlw	88	;'X'
  1326  138F  3433               	retlw	51	;'3'
  1327  1390  3420               	retlw	32	;' '
  1328  1391  3450               	retlw	80	;'P'
  1329  1392  3461               	retlw	97	;'a'
  1330  1393  3473               	retlw	115	;'s'
  1331  1394  3473               	retlw	115	;'s'
  1332  1395  3400               	retlw	0
  1333  1396                     STR_147:	
  1334  1396  3443               	retlw	67	;'C'
  1335  1397  346F               	retlw	111	;'o'
  1336  1398  346E               	retlw	110	;'n'
  1337  1399  3464               	retlw	100	;'d'
  1338  139A  346F               	retlw	111	;'o'
  1339  139B  3433               	retlw	51	;'3'
  1340  139C  3420               	retlw	32	;' '
  1341  139D  3400               	retlw	0
  1342  139E                     STR_156:	
  1343  139E  3477               	retlw	119	;'w'
  1344  139F  3461               	retlw	97	;'a'
  1345  13A0  3469               	retlw	105	;'i'
  1346  13A1  3474               	retlw	116	;'t'
  1347  13A2  342E               	retlw	46	;'.'
  1348  13A3  342E               	retlw	46	;'.'
  1349  13A4  342E               	retlw	46	;'.'
  1350  13A5  3400               	retlw	0
  1351  13A6                     STR_62:	
  1352  13A6  3445               	retlw	69	;'E'
  1353  13A7  3472               	retlw	114	;'r'
  1354  13A8  3472               	retlw	114	;'r'
  1355  13A9  346F               	retlw	111	;'o'
  1356  13AA  3472               	retlw	114	;'r'
  1357  13AB  3420               	retlw	32	;' '
  1358  13AC  3434               	retlw	52	;'4'
  1359  13AD  3400               	retlw	0
  1360  13AE                     STR_95:	
  1361  13AE  3454               	retlw	84	;'T'
  1362  13AF  3465               	retlw	101	;'e'
  1363  13B0  3473               	retlw	115	;'s'
  1364  13B1  3474               	retlw	116	;'t'
  1365  13B2  3420               	retlw	32	;' '
  1366  13B3  3452               	retlw	82	;'R'
  1367  13B4  3446               	retlw	70	;'F'
  1368  13B5  3400               	retlw	0
  1369  13B6                     STR_149:	
  1370  13B6  3452               	retlw	82	;'R'
  1371  13B7  3458               	retlw	88	;'X'
  1372  13B8  3433               	retlw	51	;'3'
  1373  13B9  3420               	retlw	32	;' '
  1374  13BA  3400               	retlw	0
  1375  13BB                     STR_100:	
  1376  13BB  3420               	retlw	32	;' '
  1377  13BC  3431               	retlw	49	;'1'
  1378  13BD  3434               	retlw	52	;'4'
  1379  13BE  3461               	retlw	97	;'a'
  1380  13BF  3400               	retlw	0
  1381  13C0                     STR_102:	
  1382  13C0  3420               	retlw	32	;' '
  1383  13C1  3431               	retlw	49	;'1'
  1384  13C2  3434               	retlw	52	;'4'
  1385  13C3  3462               	retlw	98	;'b'
  1386  13C4  3400               	retlw	0
  1387  13C5                     STR_104:	
  1388  13C5  3420               	retlw	32	;' '
  1389  13C6  3431               	retlw	49	;'1'
  1390  13C7  3434               	retlw	52	;'4'
  1391  13C8  3463               	retlw	99	;'c'
  1392  13C9  3400               	retlw	0
  1393  13CA                     STR_98:	
  1394  13CA  3420               	retlw	32	;' '
  1395  13CB  3431               	retlw	49	;'1'
  1396  13CC  3433               	retlw	51	;'3'
  1397  13CD  3400               	retlw	0
  1398  13CE                     STR_122:	
  1399  13CE  3420               	retlw	32	;' '
  1400  13CF  3431               	retlw	49	;'1'
  1401  13D0  3435               	retlw	53	;'5'
  1402  13D1  3400               	retlw	0
  1403  13D2                     STR_134:	
  1404  13D2  3420               	retlw	32	;' '
  1405  13D3  3431               	retlw	49	;'1'
  1406  13D4  3436               	retlw	54	;'6'
  1407  13D5  3400               	retlw	0
  1408  13D6                     STR_130:	
  1409  13D6  3420               	retlw	32	;' '
  1410  13D7  3431               	retlw	49	;'1'
  1411  13D8  3437               	retlw	55	;'7'
  1412  13D9  3400               	retlw	0
  1413  13DA                     STR_126:	
  1414  13DA  3420               	retlw	32	;' '
  1415  13DB  3431               	retlw	49	;'1'
  1416  13DC  3438               	retlw	56	;'8'
  1417  13DD  3400               	retlw	0
  1418  13DE                     STR_36:	
  1419  13DE  3420               	retlw	32	;' '
  1420  13DF  3431               	retlw	49	;'1'
  1421  13E0  3400               	retlw	0
  1422  10DA                     
  1423                           ; #config settings
  1424  0000                     
  1425                           	psect	cinit
  1426  00A3                     start_initialization:	
  1427  00A3                     __initialization:	
  1428  00A3  30A0               	movlw	low __pbssBANK1
  1429                           
  1430                           ; Clear objects allocated to BANK0
  1431  00A4  01EF               	clrf	__pbssBANK0& (0+127)
  1432                           
  1433                           ; Clear objects allocated to BANK1
  1434  00A5  0084               	movwf	4
  1435  00A6  3000               	movlw	high __pbssBANK1
  1436  00A7  0085               	movwf	5
  1437  00A8  3019               	movlw	25
  1438  00A9  3195  2583         	fcall	clear_ram0
  1439                           
  1440                           ; Initialize objects allocated to BANK1
  1441  00AB  0021               	movlb	1	; select bank1
  1442                           
  1443                           ;initializer for _one_second_timer
  1444  00AC  30E8               	movlw	232
  1445  00AD  00B9               	movwf	__pdataBANK1& (0+127)
  1446  00AE  3003               	movlw	3
  1447  00AF  00BA               	movwf	(__pdataBANK1+1)& (0+127)
  1448  00B0                     end_of_initialization:	
  1449                           ;End of C runtime variable initialization code
  1450                           
  1451  00B0                     __end_of__initialization:	
  1452  00B0  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1453  00B1  0020               	movlb	0
  1454  00B2  3196  2E96         	ljmp	_main	;jump to C main() function
  1455                           
  1456                           	psect	bssBANK0
  1457  006F                     __pbssBANK0:	
  1458  006F                     _ten_thou:	
  1459  006F                     	ds	1
  1460                           
  1461                           	psect	bssBANK1
  1462  00A0                     __pbssBANK1:	
  1463  00A0                     _ADC_cur_sink_val:	
  1464  00A0                     	ds	2
  1465  00A2                     _buzz_timer:	
  1466  00A2                     	ds	2
  1467  00A4                     _curent_sink_val:	
  1468  00A4                     	ds	2
  1469  00A6                     _current_sink_stable:	
  1470  00A6                     	ds	2
  1471  00A8                     _current_sink_timer:	
  1472  00A8                     	ds	2
  1473  00AA                     _motor_direction_timer:	
  1474  00AA                     	ds	2
  1475  00AC                     _pickit_timer:	
  1476  00AC                     	ds	2
  1477  00AE                     _testjig_timer:	
  1478  00AE                     	ds	2
  1479  00B0                     _tj_timer:	
  1480  00B0                     	ds	2
  1481  00B2                     _uart_receive_timer:	
  1482  00B2                     	ds	2
  1483  00B4                     _hund:	
  1484  00B4                     	ds	1
  1485  00B5                     _pickit_red_counter:	
  1486  00B5                     	ds	1
  1487  00B6                     _ten:	
  1488  00B6                     	ds	1
  1489  00B7                     _unit:	
  1490  00B7                     	ds	1
  1491  00B8                     _thou:	
  1492  00B8                     	ds	1
  1493                           
  1494                           	psect	dataBANK1
  1495  00B9                     __pdataBANK1:	
  1496  00B9                     _one_second_timer:	
  1497  00B9                     	ds	2
  1498                           
  1499                           	psect	clrtext
  1500  1583                     clear_ram0:	
  1501                           ;	Called with FSR0 containing the base address, and
  1502                           ;	WREG with the size to clear
  1503                           
  1504  1583  0064               	clrwdt	;clear the watchdog before getting into this loop
  1505  1584                     clrloop0:	
  1506  1584  0180               	clrf	0	;clear RAM location pointed to by FSR
  1507  1585  3101               	addfsr 0,1
  1508  1586  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1509  1587  2D84               	goto	clrloop0	;have we reached the end yet?
  1510  1588  3400               	retlw	0	;all done for this memory range, return
  1511                           
  1512                           	psect	cstackCOMMON
  1513  0070                     __pcstackCOMMON:	
  1514  0070                     ?_init_ADC:	
  1515  0070                     ??_init_ADC:	
  1516                           ; 0 bytes @ 0x0
  1517                           
  1518  0070                     ?_init_current_sink:	
  1519                           ; 0 bytes @ 0x0
  1520                           
  1521  0070                     ??_init_current_sink:	
  1522                           ; 0 bytes @ 0x0
  1523                           
  1524  0070                     ?_init_i2c:	
  1525                           ; 0 bytes @ 0x0
  1526                           
  1527  0070                     ??_init_i2c:	
  1528                           ; 0 bytes @ 0x0
  1529                           
  1530  0070                     ?_debug_fast_tx:	
  1531                           ; 0 bytes @ 0x0
  1532                           
  1533  0070                     ?_power_supply_set:	
  1534                           ; 0 bytes @ 0x0
  1535                           
  1536  0070                     ??_power_supply_set:	
  1537                           ; 0 bytes @ 0x0
  1538                           
  1539  0070                     ?_TX_one:	
  1540                           ; 0 bytes @ 0x0
  1541                           
  1542  0070                     ??_TX_one:	
  1543                           ; 0 bytes @ 0x0
  1544                           
  1545  0070                     ??_RX_one_timeout:	
  1546                           ; 0 bytes @ 0x0
  1547                           
  1548  0070                     ??_RX_one:	
  1549                           ; 0 bytes @ 0x0
  1550                           
  1551  0070                     ?_buzz_one:	
  1552                           ; 0 bytes @ 0x0
  1553                           
  1554  0070                     ?_digitalpot:	
  1555                           ; 0 bytes @ 0x0
  1556                           
  1557  0070                     ?_isr:	
  1558                           ; 0 bytes @ 0x0
  1559                           
  1560  0070                     ??_isr:	
  1561                           ; 0 bytes @ 0x0
  1562                           
  1563  0070                     ?_main:	
  1564                           ; 0 bytes @ 0x0
  1565                           
  1566  0070                     ?_i2c_Start:	
  1567                           ; 0 bytes @ 0x0
  1568                           
  1569  0070                     ??_i2c_Start:	
  1570                           ; 0 bytes @ 0x0
  1571                           
  1572  0070                     ?_i2c_Write:	
  1573                           ; 0 bytes @ 0x0
  1574                           
  1575  0070                     ??_i2c_Write:	
  1576                           ; 0 bytes @ 0x0
  1577                           
  1578  0070                     ?_i2c_Stop:	
  1579                           ; 0 bytes @ 0x0
  1580                           
  1581  0070                     ??_i2c_Stop:	
  1582                           ; 0 bytes @ 0x0
  1583                           
  1584  0070                     ?_i2c_write_char:	
  1585                           ; 0 bytes @ 0x0
  1586                           
  1587  0070                     ?_clear_lcd:	
  1588                           ; 0 bytes @ 0x0
  1589                           
  1590  0070                     ?_i2c_first_line:	
  1591                           ; 0 bytes @ 0x0
  1592                           
  1593  0070                     ?_i2c_second_line:	
  1594                           ; 0 bytes @ 0x0
  1595                           
  1596  0070                     ?_RX_one_timeout:	
  1597                           ; 0 bytes @ 0x0
  1598                           
  1599  0070                     ?_RX_one:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0070                     ?___bmul:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0070                     ?_ADC_get_val:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0070                     ?__Umul8_16:	
  1609                           ; 2 bytes @ 0x0
  1610                           
  1611  0070                     ?___wmul:	
  1612                           ; 2 bytes @ 0x0
  1613                           
  1614  0070                     ?___xxtofl:	
  1615                           ; 2 bytes @ 0x0
  1616                           
  1617  0070                     i2c_Write@data:	
  1618                           ; 4 bytes @ 0x0
  1619                           
  1620  0070                     power_supply_set@supply:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623  0070                     ___bmul@multiplicand:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626  0070                     __Umul8_16@multiplicand:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0070                     buzz_one@time:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632  0070                     debug_fast_tx@data:	
  1633                           ; 2 bytes @ 0x0
  1634                           
  1635  0070                     ___wmul@multiplier:	
  1636                           ; 2 bytes @ 0x0
  1637                           
  1638  0070                     ___xxtofl@val:	
  1639                           ; 2 bytes @ 0x0
  1640                           
  1641                           
  1642                           ; 4 bytes @ 0x0
  1643  0070                     	ds	1
  1644  0071                     ?_init_i2c_lcd_5v:	
  1645  0071                     ??_digitalpot:	
  1646                           ; 0 bytes @ 0x1
  1647                           
  1648  0071                     ?_i2c_Write_string:	
  1649                           ; 0 bytes @ 0x1
  1650                           
  1651  0071                     ??_i2c_write_char:	
  1652                           ; 0 bytes @ 0x1
  1653                           
  1654  0071                     ??_clear_lcd:	
  1655                           ; 0 bytes @ 0x1
  1656                           
  1657  0071                     ??_i2c_first_line:	
  1658                           ; 0 bytes @ 0x1
  1659                           
  1660  0071                     ??_i2c_second_line:	
  1661                           ; 0 bytes @ 0x1
  1662                           
  1663  0071                     ?_lcd_set_cursor:	
  1664                           ; 0 bytes @ 0x1
  1665                           
  1666  0071                     ??___bmul:	
  1667                           ; 0 bytes @ 0x1
  1668                           
  1669  0071                     i2c_write_char@char_data:	
  1670                           ; 0 bytes @ 0x1
  1671                           
  1672  0071                     init_i2c_lcd_5v@single1_double2:	
  1673                           ; 1 bytes @ 0x1
  1674                           
  1675  0071                     lcd_set_cursor@col:	
  1676                           ; 1 bytes @ 0x1
  1677                           
  1678  0071                     TX_one@data:	
  1679                           ; 1 bytes @ 0x1
  1680                           
  1681  0071                     RX_one@i:	
  1682                           ; 1 bytes @ 0x1
  1683                           
  1684  0071                     RX_one_timeout@i:	
  1685                           ; 1 bytes @ 0x1
  1686                           
  1687  0071                     ___bmul@product:	
  1688                           ; 1 bytes @ 0x1
  1689                           
  1690  0071                     i2c_Write_string@data:	
  1691                           ; 1 bytes @ 0x1
  1692                           
  1693                           
  1694                           ; 2 bytes @ 0x1
  1695  0071                     	ds	1
  1696  0072                     ??_init_i2c_lcd_5v:	
  1697  0072                     ??_debug_fast_tx:	
  1698                           ; 0 bytes @ 0x2
  1699                           
  1700  0072                     ??_buzz_one:	
  1701                           ; 0 bytes @ 0x2
  1702                           
  1703  0072                     ??_lcd_set_cursor:	
  1704                           ; 0 bytes @ 0x2
  1705                           
  1706  0072                     lcd_set_cursor@row:	
  1707                           ; 0 bytes @ 0x2
  1708                           
  1709  0072                     debug_fast_tx@i:	
  1710                           ; 1 bytes @ 0x2
  1711                           
  1712  0072                     TX_one@i:	
  1713                           ; 1 bytes @ 0x2
  1714                           
  1715  0072                     RX_one@data:	
  1716                           ; 1 bytes @ 0x2
  1717                           
  1718  0072                     RX_one_timeout@data:	
  1719                           ; 1 bytes @ 0x2
  1720                           
  1721  0072                     ___bmul@multiplier:	
  1722                           ; 1 bytes @ 0x2
  1723                           
  1724  0072                     ___wmul@multiplicand:	
  1725                           ; 1 bytes @ 0x2
  1726                           
  1727                           
  1728                           ; 2 bytes @ 0x2
  1729  0072                     	ds	1
  1730  0073                     ??_ADC_get_val:	
  1731  0073                     ??__Umul8_16:	
  1732                           ; 0 bytes @ 0x3
  1733                           
  1734  0073                     ??_i2c_Write_string:	
  1735                           ; 0 bytes @ 0x3
  1736                           
  1737  0073                     lcd_set_cursor@LCD_position:	
  1738                           ; 0 bytes @ 0x3
  1739                           
  1740  0073                     ADC_get_val@channel:	
  1741                           ; 1 bytes @ 0x3
  1742                           
  1743  0073                     digitalpot@value:	
  1744                           ; 1 bytes @ 0x3
  1745                           
  1746  0073                     __Umul8_16@product:	
  1747                           ; 1 bytes @ 0x3
  1748                           
  1749                           
  1750                           ; 2 bytes @ 0x3
  1751  0073                     	ds	1
  1752  0074                     ?_print_screen:	
  1753  0074                     ?_Vout_set:	
  1754                           ; 0 bytes @ 0x4
  1755                           
  1756  0074                     ??___wmul:	
  1757                           ; 0 bytes @ 0x4
  1758                           
  1759  0074                     ??___xxtofl:	
  1760                           ; 0 bytes @ 0x4
  1761                           
  1762  0074                     init_i2c_lcd_5v@contrast:	
  1763                           ; 0 bytes @ 0x4
  1764                           
  1765  0074                     print_screen@top:	
  1766                           ; 1 bytes @ 0x4
  1767                           
  1768  0074                     ADC_get_val@return_val:	
  1769                           ; 2 bytes @ 0x4
  1770                           
  1771  0074                     Vout_set@Volts:	
  1772                           ; 2 bytes @ 0x4
  1773                           
  1774  0074                     ___wmul@product:	
  1775                           ; 2 bytes @ 0x4
  1776                           
  1777                           
  1778                           ; 2 bytes @ 0x4
  1779  0074                     	ds	1
  1780  0075                     __Umul8_16@multiplier:	
  1781                           
  1782                           ; 1 bytes @ 0x5
  1783  0075                     	ds	1
  1784  0076                     ??_Vout_set:	
  1785  0076                     ?_ten_thou_conv:	
  1786                           ; 0 bytes @ 0x6
  1787                           
  1788  0076                     ten_thou_conv@n:	
  1789                           ; 0 bytes @ 0x6
  1790                           
  1791  0076                     print_screen@bottom:	
  1792                           ; 2 bytes @ 0x6
  1793                           
  1794  0076                     __Umul8_16@word_mpld:	
  1795                           ; 2 bytes @ 0x6
  1796                           
  1797  0076                     Vout_set@digi_step:	
  1798                           ; 2 bytes @ 0x6
  1799                           
  1800                           
  1801                           ; 4 bytes @ 0x6
  1802  0076                     	ds	2
  1803  0078                     ??_print_screen:	
  1804  0078                     ?_testjig_done:	
  1805                           ; 0 bytes @ 0x8
  1806                           
  1807  0078                     ?_print_error:	
  1808                           ; 0 bytes @ 0x8
  1809                           
  1810  0078                     ??_ten_thou_conv:	
  1811                           ; 0 bytes @ 0x8
  1812                           
  1813  0078                     testjig_done@device_type:	
  1814                           ; 0 bytes @ 0x8
  1815                           
  1816  0078                     ___xxtofl@sign:	
  1817                           ; 1 bytes @ 0x8
  1818                           
  1819  0078                     print_error@top:	
  1820                           ; 1 bytes @ 0x8
  1821                           
  1822                           
  1823                           ; 2 bytes @ 0x8
  1824  0078                     	ds	1
  1825  0079                     ??_testjig_done:	
  1826  0079                     ___xxtofl@exp:	
  1827                           ; 0 bytes @ 0x9
  1828                           
  1829                           
  1830                           ; 1 bytes @ 0x9
  1831  0079                     	ds	1
  1832  007A                     print_error@bottom:	
  1833  007A                     ___xxtofl@arg:	
  1834                           ; 2 bytes @ 0xA
  1835                           
  1836                           
  1837                           ; 4 bytes @ 0xA
  1838  007A                     	ds	2
  1839  007C                     testjig_done@state:	
  1840                           
  1841                           ; 1 bytes @ 0xC
  1842  007C                     	ds	2
  1843  007E                     ??_get_30v_current:	
  1844  007E                     ??_lcd_print_int:	
  1845                           ; 0 bytes @ 0xE
  1846                           
  1847                           
  1848                           	psect	cstackBANK0
  1849  0020                     __pcstackBANK0:	
  1850                           ; 0 bytes @ 0xE
  1851                           
  1852  0020                     ??_print_error:	
  1853  0020                     ?___flmul:	
  1854                           ; 0 bytes @ 0x0
  1855                           
  1856  0020                     ___flmul@b:	
  1857                           ; 4 bytes @ 0x0
  1858                           
  1859                           
  1860                           ; 4 bytes @ 0x0
  1861  0020                     	ds	4
  1862  0024                     ___flmul@a:	
  1863                           
  1864                           ; 4 bytes @ 0x4
  1865  0024                     	ds	4
  1866  0028                     ??___flmul:	
  1867                           
  1868                           ; 0 bytes @ 0x8
  1869  0028                     	ds	4
  1870  002C                     ___flmul@sign:	
  1871                           
  1872                           ; 1 bytes @ 0xC
  1873  002C                     	ds	1
  1874  002D                     ___flmul@aexp:	
  1875                           
  1876                           ; 1 bytes @ 0xD
  1877  002D                     	ds	1
  1878  002E                     ___flmul@grs:	
  1879                           
  1880                           ; 4 bytes @ 0xE
  1881  002E                     	ds	4
  1882  0032                     ___flmul@bexp:	
  1883                           
  1884                           ; 1 bytes @ 0x12
  1885  0032                     	ds	1
  1886  0033                     ___flmul@prod:	
  1887                           
  1888                           ; 4 bytes @ 0x13
  1889  0033                     	ds	4
  1890  0037                     ___flmul@temp:	
  1891                           
  1892                           ; 2 bytes @ 0x17
  1893  0037                     	ds	2
  1894  0039                     ?___fladd:	
  1895  0039                     ___fladd@b:	
  1896                           ; 4 bytes @ 0x19
  1897                           
  1898                           
  1899                           ; 4 bytes @ 0x19
  1900  0039                     	ds	4
  1901  003D                     ___fladd@a:	
  1902                           
  1903                           ; 4 bytes @ 0x1D
  1904  003D                     	ds	4
  1905  0041                     ??___fladd:	
  1906                           
  1907                           ; 0 bytes @ 0x21
  1908  0041                     	ds	8
  1909  0049                     ___fladd@signs:	
  1910                           
  1911                           ; 1 bytes @ 0x29
  1912  0049                     	ds	1
  1913  004A                     ___fladd@aexp:	
  1914                           
  1915                           ; 1 bytes @ 0x2A
  1916  004A                     	ds	1
  1917  004B                     ___fladd@bexp:	
  1918                           
  1919                           ; 1 bytes @ 0x2B
  1920  004B                     	ds	1
  1921  004C                     ___fladd@grs:	
  1922                           
  1923                           ; 1 bytes @ 0x2C
  1924  004C                     	ds	1
  1925  004D                     ?___fltol:	
  1926  004D                     ___fltol@f1:	
  1927                           ; 4 bytes @ 0x2D
  1928                           
  1929                           
  1930                           ; 4 bytes @ 0x2D
  1931  004D                     	ds	4
  1932  0051                     ??___fltol:	
  1933                           
  1934                           ; 0 bytes @ 0x31
  1935  0051                     	ds	4
  1936  0055                     ___fltol@sign1:	
  1937                           
  1938                           ; 1 bytes @ 0x35
  1939  0055                     	ds	1
  1940  0056                     ___fltol@exp1:	
  1941                           
  1942                           ; 1 bytes @ 0x36
  1943  0056                     	ds	1
  1944  0057                     ?_get_30v_current:	
  1945                           
  1946                           ; 2 bytes @ 0x37
  1947  0057                     	ds	2
  1948  0059                     get_30v_current@temp:	
  1949                           
  1950                           ; 2 bytes @ 0x39
  1951  0059                     	ds	2
  1952  005B                     ?_lcd_print_int:	
  1953  005B                     lcd_print_int@number:	
  1954                           ; 0 bytes @ 0x3B
  1955                           
  1956                           
  1957                           ; 2 bytes @ 0x3B
  1958  005B                     	ds	2
  1959  005D                     lcd_print_int@pos:	
  1960                           
  1961                           ; 2 bytes @ 0x3D
  1962  005D                     	ds	2
  1963  005F                     lcd_print_int@decimal:	
  1964                           
  1965                           ; 1 bytes @ 0x3F
  1966  005F                     	ds	1
  1967  0060                     lcd_print_int@ten_thou_digit:	
  1968                           
  1969                           ; 1 bytes @ 0x40
  1970  0060                     	ds	1
  1971  0061                     ??_main:	
  1972                           
  1973                           ; 0 bytes @ 0x41
  1974  0061                     	ds	3
  1975  0064                     main@temp:	
  1976                           
  1977                           ; 2 bytes @ 0x44
  1978  0064                     	ds	2
  1979  0066                     main@mem_size:	
  1980                           
  1981                           ; 2 bytes @ 0x46
  1982  0066                     	ds	2
  1983  0068                     main@j:	
  1984                           
  1985                           ; 2 bytes @ 0x48
  1986  0068                     	ds	2
  1987  006A                     main@response:	
  1988                           
  1989                           ; 1 bytes @ 0x4A
  1990  006A                     	ds	1
  1991  006B                     main@i:	
  1992                           
  1993                           ; 2 bytes @ 0x4B
  1994  006B                     	ds	2
  1995  006D                     main@RX_data:	
  1996                           
  1997                           ; 1 bytes @ 0x4D
  1998  006D                     	ds	1
  1999  006E                     main@device_type:	
  2000                           
  2001                           ; 1 bytes @ 0x4E
  2002  006E                     	ds	1
  2003                           
  2004                           	psect	maintext
  2005  1696                     __pmaintext:	
  2006 ;;
  2007 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2008 ;;
  2009 ;; *************** function _main *****************
  2010 ;; Defined at:
  2011 ;;		line 476 in file "Multi_RX_testjig_v2.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  response        1   74[BANK0 ] unsigned char 
  2016 ;;  j               2   72[BANK0 ] int 
  2017 ;;  mem_size        2   70[BANK0 ] unsigned int 
  2018 ;;  i               2   75[BANK0 ] unsigned int 
  2019 ;;  temp            2   68[BANK0 ] unsigned int 
  2020 ;;  device_type     1   78[BANK0 ] unsigned char 
  2021 ;;  RX_data         1   77[BANK0 ] unsigned char 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;		None               void
  2024 ;; Registers used:
  2025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : B1F/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2032 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2033 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2034 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2035 ;;Total ram usage:       14 bytes
  2036 ;; Hardware stack levels required when called:    5
  2037 ;; This function calls:
  2038 ;;		_ADC_get_val
  2039 ;;		_RX_one
  2040 ;;		_RX_one_timeout
  2041 ;;		_TX_one
  2042 ;;		_Vout_set
  2043 ;;		_debug_fast_tx
  2044 ;;		_get_30v_current
  2045 ;;		_init_ADC
  2046 ;;		_init_current_sink
  2047 ;;		_init_i2c
  2048 ;;		_init_i2c_lcd_5v
  2049 ;;		_lcd_print_int
  2050 ;;		_power_supply_set
  2051 ;;		_print_error
  2052 ;;		_print_screen
  2053 ;;		_testjig_done
  2054 ;; This function is called by:
  2055 ;;		Startup code after reset
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function _main
  2061  1696                     _main:	
  2062                           
  2063                           ;Multi_RX_testjig_v2.c: 479: OSCCON = 0x7A;
  2064                           
  2065                           ;incstack = 0
  2066                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2067  1696  307A               	movlw	122
  2068  1697  0021               	movlb	1	; select bank1
  2069  1698  0099               	movwf	25	;volatile
  2070                           
  2071                           ;Multi_RX_testjig_v2.c: 481: OPTION_REG = 0b11010000;
  2072  1699  30D0               	movlw	208
  2073  169A  0095               	movwf	21	;volatile
  2074                           
  2075                           ;Multi_RX_testjig_v2.c: 482: TMR0 = 0x00;
  2076  169B  0020               	movlb	0	; select bank0
  2077  169C  0195               	clrf	21	;volatile
  2078                           
  2079                           ;Multi_RX_testjig_v2.c: 483: TMR0IF = 0;
  2080  169D  110B               	bcf	11,2	;volatile
  2081                           
  2082                           ;Multi_RX_testjig_v2.c: 484: TMR0IE = 1;
  2083  169E  168B               	bsf	11,5	;volatile
  2084                           
  2085                           ;Multi_RX_testjig_v2.c: 487: TRISA = 0b00001111;
  2086  169F  300F               	movlw	15
  2087  16A0  0021               	movlb	1	; select bank1
  2088  16A1  008C               	movwf	12	;volatile
  2089                           
  2090                           ;Multi_RX_testjig_v2.c: 488: TRISB = 0b11001111;
  2091  16A2  30CF               	movlw	207
  2092  16A3  008D               	movwf	13	;volatile
  2093                           
  2094                           ;Multi_RX_testjig_v2.c: 489: TRISC = 0b00011010;
  2095  16A4  301A               	movlw	26
  2096  16A5  008E               	movwf	14	;volatile
  2097                           
  2098                           ;Multi_RX_testjig_v2.c: 490: TRISD = 0b10001011;
  2099  16A6  308B               	movlw	139
  2100  16A7  008F               	movwf	15	;volatile
  2101                           
  2102                           ;Multi_RX_testjig_v2.c: 491: TRISE = 0b11110110;
  2103  16A8  30F6               	movlw	246
  2104  16A9  0090               	movwf	16	;volatile
  2105                           
  2106                           ;Multi_RX_testjig_v2.c: 492: TRISF = 0b00101111;
  2107  16AA  302F               	movlw	47
  2108  16AB  0026               	movlb	6	; select bank6
  2109  16AC  008C               	movwf	12	;volatile
  2110                           
  2111                           ;Multi_RX_testjig_v2.c: 493: TRISG = 0b11101101;
  2112  16AD  30ED               	movlw	237
  2113  16AE  008D               	movwf	13	;volatile
  2114                           
  2115                           ;Multi_RX_testjig_v2.c: 495: PORTA = 0b00000000;
  2116  16AF  0020               	movlb	0	; select bank0
  2117  16B0  018C               	clrf	12	;volatile
  2118                           
  2119                           ;Multi_RX_testjig_v2.c: 496: PORTB = 0b00000000;
  2120  16B1  018D               	clrf	13	;volatile
  2121                           
  2122                           ;Multi_RX_testjig_v2.c: 497: PORTC = 0b00000000;
  2123  16B2  018E               	clrf	14	;volatile
  2124                           
  2125                           ;Multi_RX_testjig_v2.c: 498: PORTD = 0b01000000;
  2126  16B3  3040               	movlw	64
  2127  16B4  008F               	movwf	15	;volatile
  2128                           
  2129                           ;Multi_RX_testjig_v2.c: 499: PORTE = 0b00000000;
  2130  16B5  0190               	clrf	16	;volatile
  2131                           
  2132                           ;Multi_RX_testjig_v2.c: 500: PORTF = 0b00000000;
  2133  16B6  0025               	movlb	5	; select bank5
  2134  16B7  018C               	clrf	12	;volatile
  2135                           
  2136                           ;Multi_RX_testjig_v2.c: 501: PORTG = 0b00000000;
  2137  16B8  018D               	clrf	13	;volatile
  2138                           
  2139                           ;Multi_RX_testjig_v2.c: 503: WPUB = 0b00000000;
  2140  16B9  0024               	movlb	4	; select bank4
  2141  16BA  018D               	clrf	13	;volatile
  2142                           
  2143                           ;Multi_RX_testjig_v2.c: 504: WPUD = 0b00000000;
  2144  16BB  018F               	clrf	15	;volatile
  2145                           
  2146                           ;Multi_RX_testjig_v2.c: 505: WPUE = 0b00000000;
  2147  16BC  0190               	clrf	16	;volatile
  2148                           
  2149                           ;Multi_RX_testjig_v2.c: 506: WPUG = 0b00000000;
  2150  16BD  0029               	movlb	9	; select bank9
  2151  16BE  018D               	clrf	13	;volatile
  2152                           
  2153                           ;Multi_RX_testjig_v2.c: 510: ANSELA = 0b00000000;
  2154  16BF  0023               	movlb	3	; select bank3
  2155  16C0  018C               	clrf	12	;volatile
  2156                           
  2157                           ;Multi_RX_testjig_v2.c: 511: ANSELB = 0b00001100;
  2158  16C1  300C               	movlw	12
  2159  16C2  008D               	movwf	13	;volatile
  2160                           
  2161                           ;Multi_RX_testjig_v2.c: 512: ANSELD = 0b00001111;
  2162  16C3  300F               	movlw	15
  2163  16C4  008F               	movwf	15	;volatile
  2164                           
  2165                           ;Multi_RX_testjig_v2.c: 513: ANSELE = 0b00000100;
  2166  16C5  3004               	movlw	4
  2167  16C6  0090               	movwf	16	;volatile
  2168                           
  2169                           ;Multi_RX_testjig_v2.c: 514: ANSELF = 0b00000000;
  2170  16C7  0028               	movlb	8	; select bank8
  2171  16C8  018C               	clrf	12	;volatile
  2172                           
  2173                           ;Multi_RX_testjig_v2.c: 515: ANSELG = 0b00000000;
  2174  16C9  018D               	clrf	13	;volatile
  2175                           
  2176                           ;Multi_RX_testjig_v2.c: 522: init_ADC();
  2177  16CA  3188  2005  3196   	fcall	_init_ADC
  2178                           
  2179                           ;Multi_RX_testjig_v2.c: 523: init_current_sink();
  2180  16CD  3195  2589  3196   	fcall	_init_current_sink
  2181                           
  2182                           ;Multi_RX_testjig_v2.c: 524: pickit_state = pickit_idle;
  2183  16D0  3005               	movlw	5
  2184  16D1  0021               	movlb	1	; select bank1
  2185  16D2  00BB               	movwf	_pickit_state^(0+128)
  2186                           
  2187                           ;Multi_RX_testjig_v2.c: 526: RA5 = 0;
  2188  16D3  0020               	movlb	0	; select bank0
  2189  16D4  128C               	bcf	12,5	;volatile
  2190                           
  2191                           ;Multi_RX_testjig_v2.c: 528: RA5 = 1;
  2192  16D5  168C               	bsf	12,5	;volatile
  2193                           
  2194                           ;Multi_RX_testjig_v2.c: 532: init_i2c();
  2195  16D6  3188  200C  3196   	fcall	_init_i2c
  2196  16D9  3008               	movlw	8
  2197                           
  2198                           ;Multi_RX_testjig_v2.c: 542: init_i2c_lcd_5v(8, 1);
  2199  16DA  01F1               	clrf	init_i2c_lcd_5v@single1_double2
  2200  16DB  0AF1               	incf	init_i2c_lcd_5v@single1_double2,f
  2201  16DC  318B  239D  3196   	fcall	_init_i2c_lcd_5v
  2202                           
  2203                           ;Multi_RX_testjig_v2.c: 544: print_screen("Multi_RX", "Test-Jig|Startup");
  2204  16DF  3072               	movlw	low (STR_1| (0+32768))
  2205  16E0  00F4               	movwf	print_screen@top
  2206  16E1  3093               	movlw	high (STR_1| (0+32768))
  2207  16E2  00F5               	movwf	print_screen@top+1
  2208  16E3  30A9               	movlw	low (STR_2| (0+32768))
  2209  16E4  00F6               	movwf	print_screen@bottom
  2210  16E5  3090               	movlw	high (STR_2| (0+32768))
  2211  16E6  00F7               	movwf	print_screen@bottom+1
  2212  16E7  318A  22D4  3196   	fcall	_print_screen
  2213                           
  2214                           ;Multi_RX_testjig_v2.c: 545: RA4 = 1;
  2215  16EA  0020               	movlb	0	; select bank0
  2216  16EB  160C               	bsf	12,4	;volatile
  2217                           
  2218                           ;Multi_RX_testjig_v2.c: 546: GIE = 1;
  2219  16EC  178B               	bsf	11,7	;volatile
  2220                           
  2221                           ;Multi_RX_testjig_v2.c: 547: LATC7 = 1;
  2222  16ED  0022               	movlb	2	; select bank2
  2223  16EE  178E               	bsf	14,7	;volatile
  2224                           
  2225                           ;Multi_RX_testjig_v2.c: 548: _delay((unsigned long)((100)*(16000000/4000.0)));
  2226  16EF  3003               	movlw	3
  2227  16F0  0020               	movlb	0	; select bank0
  2228  16F1  00E3               	movwf	??_main+2
  2229  16F2  3008               	movlw	8
  2230  16F3  00E2               	movwf	??_main+1
  2231  16F4  3078               	movlw	120
  2232  16F5  00E1               	movwf	??_main
  2233  16F6                     u5257:	
  2234  16F6  0BE1               	decfsz	??_main,f
  2235  16F7  2EF6               	goto	u5257
  2236  16F8  0BE2               	decfsz	??_main+1,f
  2237  16F9  2EF6               	goto	u5257
  2238  16FA  0BE3               	decfsz	??_main+2,f
  2239  16FB  2EF6               	goto	u5257
  2240                           
  2241                           ;Multi_RX_testjig_v2.c: 549: debug_fast_tx(0xAAAA);
  2242  16FC  30AA               	movlw	170
  2243  16FD  00F0               	movwf	debug_fast_tx@data
  2244  16FE  00F1               	movwf	debug_fast_tx@data+1
  2245  16FF  318A  22A7  3196   	fcall	_debug_fast_tx
  2246                           
  2247                           ;Multi_RX_testjig_v2.c: 550: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2248  1702  3085               	movlw	133
  2249  1703  0020               	movlb	0	; select bank0
  2250  1704  00E1               	movwf	??_main
  2251  1705                     u5267:	
  2252  1705  0BE1               	decfsz	??_main,f
  2253  1706  2F05               	goto	u5267
  2254                           
  2255                           ;Multi_RX_testjig_v2.c: 551: debug_fast_tx(0x5555);
  2256  1707  3055               	movlw	85
  2257  1708  00F0               	movwf	debug_fast_tx@data
  2258  1709  00F1               	movwf	debug_fast_tx@data+1
  2259  170A  318A  22A7  3196   	fcall	_debug_fast_tx
  2260                           
  2261                           ;Multi_RX_testjig_v2.c: 552: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2262  170D  3085               	movlw	133
  2263  170E  0020               	movlb	0	; select bank0
  2264  170F  00E1               	movwf	??_main
  2265  1710                     u5277:	
  2266  1710  0BE1               	decfsz	??_main,f
  2267  1711  2F10               	goto	u5277
  2268                           
  2269                           ;Multi_RX_testjig_v2.c: 554: RE0 = 0;
  2270  1712  0020               	movlb	0	; select bank0
  2271  1713  1010               	bcf	16,0	;volatile
  2272                           
  2273                           ;Multi_RX_testjig_v2.c: 556: if(PCONbits.nRMCLR == 1)
  2274  1714  0021               	movlb	1	; select bank1
  2275  1715  1D96               	btfss	22,3	;volatile
  2276  1716  2F1C               	goto	l4053
  2277  1717  3002               	movlw	2
  2278                           
  2279                           ;Multi_RX_testjig_v2.c: 557: testjig_done(2, 0);
  2280  1718  01F8               	clrf	testjig_done@device_type
  2281  1719  3189  217F  3196   	fcall	_testjig_done
  2282  171C                     l4053:	
  2283                           
  2284                           ;Multi_RX_testjig_v2.c: 560: if(RF3 == 1)
  2285  171C  0025               	movlb	5	; select bank5
  2286  171D  1D8C               	btfss	12,3	;volatile
  2287  171E  2F2A               	goto	l308
  2288                           
  2289                           ;Multi_RX_testjig_v2.c: 561: print_error("Multi_RX", "-> Insert PCB");
  2290  171F  3072               	movlw	low (STR_1| (0+32768))
  2291  1720  00F8               	movwf	print_error@top
  2292  1721  3093               	movlw	high (STR_1| (0+32768))
  2293  1722  00F9               	movwf	print_error@top+1
  2294  1723  30BF               	movlw	low (STR_4| (0+32768))
  2295  1724  00FA               	movwf	print_error@bottom
  2296  1725  3091               	movlw	high (STR_4| (0+32768))
  2297  1726  00FB               	movwf	print_error@bottom+1
  2298  1727  318A  22F6  3196   	fcall	_print_error
  2299  172A                     l308:	
  2300                           
  2301                           ;Multi_RX_testjig_v2.c: 566: print_screen("Powering board", "");
  2302  172A  3058               	movlw	low (STR_5| (0+32768))
  2303  172B  00F4               	movwf	print_screen@top
  2304  172C  3091               	movlw	high (STR_5| (0+32768))
  2305  172D  00F5               	movwf	print_screen@top+1
  2306  172E  30DA               	movlw	low ((STR_135+15)| (0+32768))
  2307  172F  00F6               	movwf	print_screen@bottom
  2308  1730  3090               	movlw	high ((STR_135+15)| (0+32768))
  2309  1731  00F7               	movwf	print_screen@bottom+1
  2310  1732  318A  22D4  3196   	fcall	_print_screen
  2311                           
  2312                           ;Multi_RX_testjig_v2.c: 570: Vout_set(12);
  2313  1735  300C               	movlw	12
  2314  1736  00F4               	movwf	Vout_set@Volts
  2315  1737  01F5               	clrf	Vout_set@Volts+1
  2316  1738  3188  20C0  3196   	fcall	_Vout_set
  2317                           
  2318                           ;Multi_RX_testjig_v2.c: 571: power_supply_set(0);
  2319  173B  3000               	movlw	0
  2320  173C  318B  23F3  3196   	fcall	_power_supply_set
  2321                           
  2322                           ;Multi_RX_testjig_v2.c: 572: _delay((unsigned long)((150)*(16000000/4000.0)));
  2323  173F  3004               	movlw	4
  2324  1740  0020               	movlb	0	; select bank0
  2325  1741  00E3               	movwf	??_main+2
  2326  1742  300C               	movlw	12
  2327  1743  00E2               	movwf	??_main+1
  2328  1744  3035               	movlw	53
  2329  1745  00E1               	movwf	??_main
  2330  1746                     u5287:	
  2331  1746  0BE1               	decfsz	??_main,f
  2332  1747  2F46               	goto	u5287
  2333  1748  0BE2               	decfsz	??_main+1,f
  2334  1749  2F46               	goto	u5287
  2335  174A  0BE3               	decfsz	??_main+2,f
  2336  174B  2F46               	goto	u5287
  2337  174C  3200               	nop2
  2338                           
  2339                           ;Multi_RX_testjig_v2.c: 573: ADC_val = ADC_get_val(0b01011111);
  2340  174D  305F               	movlw	95
  2341  174E  318C  245E  3196   	fcall	_ADC_get_val
  2342                           
  2343                           ;Multi_RX_testjig_v2.c: 574: testjig_timer = (unsigned int)(7518.8/2);
  2344  1751  30AF               	movlw	175
  2345  1752  00AE               	movwf	_testjig_timer^(0+128)	;volatile
  2346  1753  300E               	movlw	14
  2347  1754  00AF               	movwf	(_testjig_timer^(0+128)+1)	;volatile
  2348  1755  2F70               	goto	l4063
  2349  1756                     l4065:	
  2350  1756  305F               	movlw	95
  2351  1757  318C  245E  3196   	fcall	_ADC_get_val
  2352  175A  3000               	movlw	0
  2353  175B  0271               	subwf	?_ADC_get_val+1,w
  2354  175C  307B               	movlw	123
  2355  175D  1903               	skipnz
  2356  175E  0270               	subwf	?_ADC_get_val,w
  2357  175F  1C03               	skipc
  2358  1760  2F7B               	goto	l4071
  2359  1761  318C  2413  3196   	fcall	_get_30v_current
  2360  1764  3000               	movlw	0
  2361  1765  0258               	subwf	?_get_30v_current+1,w
  2362  1766  301E               	movlw	30
  2363  1767  1903               	skipnz
  2364  1768  0257               	subwf	?_get_30v_current,w
  2365  1769  1803               	skipnc
  2366  176A  2F7B               	goto	l4071
  2367  176B  0021               	movlb	1	; select bank1
  2368  176C  082E               	movf	_testjig_timer^(0+128),w	;volatile
  2369  176D  042F               	iorwf	(_testjig_timer+1)^(0+128),w	;volatile
  2370  176E  1903               	btfsc	3,2
  2371  176F  2F7B               	goto	l4071
  2372  1770                     l4063:	
  2373                           ;Multi_RX_testjig_v2.c: 575: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08)) && (get_30v_current() < 30) && testjig_timer);
  2374                           
  2375  1770  305F               	movlw	95
  2376  1771  318C  245E  3196   	fcall	_ADC_get_val
  2377  1774  3000               	movlw	0
  2378  1775  0271               	subwf	?_ADC_get_val+1,w
  2379  1776  3068               	movlw	104
  2380  1777  1903               	skipnz
  2381  1778  0270               	subwf	?_ADC_get_val,w
  2382  1779  1C03               	btfss	3,0
  2383  177A  2F56               	goto	l4065
  2384  177B                     l4071:	
  2385                           
  2386                           ;Multi_RX_testjig_v2.c: 576: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  2387  177B  305F               	movlw	95
  2388  177C  318C  245E  3196   	fcall	_ADC_get_val
  2389  177F  3000               	movlw	0
  2390  1780  0271               	subwf	?_ADC_get_val+1,w
  2391  1781  3068               	movlw	104
  2392  1782  1903               	skipnz
  2393  1783  0270               	subwf	?_ADC_get_val,w
  2394  1784  1803               	skipnc
  2395  1785  2F8E               	goto	l4075
  2396                           
  2397                           ;Multi_RX_testjig_v2.c: 577: print_error("12v-5v supply", "Volt Error L");
  2398  1786  3005               	movlw	low (STR_7| (0+32768))
  2399  1787  00F8               	movwf	print_error@top
  2400  1788  3092               	movlw	high (STR_7| (0+32768))
  2401  1789  00F9               	movwf	print_error@top+1
  2402  178A  3055               	movlw	low (STR_8| (0+32768))
  2403  178B  00FA               	movwf	print_error@bottom
  2404  178C  3092               	movlw	high (STR_8| (0+32768))
  2405  178D  2FDD               	goto	L1
  2406  178E                     l4075:	
  2407                           
  2408                           ;Multi_RX_testjig_v2.c: 578: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  2409  178E  305F               	movlw	95
  2410  178F  318C  245E  3196   	fcall	_ADC_get_val
  2411  1792  3000               	movlw	0
  2412  1793  0271               	subwf	?_ADC_get_val+1,w
  2413  1794  307B               	movlw	123
  2414  1795  1903               	skipnz
  2415  1796  0270               	subwf	?_ADC_get_val,w
  2416  1797  1C03               	skipc
  2417  1798  2FA1               	goto	l4079
  2418                           
  2419                           ;Multi_RX_testjig_v2.c: 579: print_error("12v-5v supply", "Volt Error H");
  2420  1799  3005               	movlw	low (STR_7| (0+32768))
  2421  179A  00F8               	movwf	print_error@top
  2422  179B  3092               	movlw	high (STR_7| (0+32768))
  2423  179C  00F9               	movwf	print_error@top+1
  2424  179D  303B               	movlw	low (STR_10| (0+32768))
  2425  179E  00FA               	movwf	print_error@bottom
  2426  179F  3092               	movlw	high (STR_10| (0+32768))
  2427  17A0  2FDD               	goto	L1
  2428  17A1                     l4079:	
  2429                           
  2430                           ;Multi_RX_testjig_v2.c: 580: else if((get_30v_current() >= 60))
  2431  17A1  318C  2413  3196   	fcall	_get_30v_current
  2432  17A4  3000               	movlw	0
  2433  17A5  0258               	subwf	?_get_30v_current+1,w
  2434  17A6  303C               	movlw	60
  2435  17A7  1903               	skipnz
  2436  17A8  0257               	subwf	?_get_30v_current,w
  2437  17A9  1C03               	skipc
  2438  17AA  2FD1               	goto	l4087
  2439                           
  2440                           ;Multi_RX_testjig_v2.c: 581: {
  2441                           ;Multi_RX_testjig_v2.c: 582: lcd_print_int(get_30v_current(), 5, 0, 1);
  2442  17AB  318C  2413  3196   	fcall	_get_30v_current
  2443  17AE  0858               	movf	?_get_30v_current+1,w
  2444  17AF  00DC               	movwf	lcd_print_int@number+1
  2445  17B0  0857               	movf	?_get_30v_current,w
  2446  17B1  00DB               	movwf	lcd_print_int@number
  2447  17B2  3005               	movlw	5
  2448  17B3  00DD               	movwf	lcd_print_int@pos
  2449  17B4  01DE               	clrf	lcd_print_int@pos+1
  2450  17B5  01DF               	clrf	lcd_print_int@decimal
  2451  17B6  01E0               	clrf	lcd_print_int@ten_thou_digit
  2452  17B7  0AE0               	incf	lcd_print_int@ten_thou_digit,f
  2453  17B8  3188  20F7  3196   	fcall	_lcd_print_int
  2454                           
  2455                           ;Multi_RX_testjig_v2.c: 583: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2456  17BB  3015               	movlw	21
  2457  17BC  0020               	movlb	0	; select bank0
  2458  17BD  00E3               	movwf	??_main+2
  2459  17BE  304B               	movlw	75
  2460  17BF  00E2               	movwf	??_main+1
  2461  17C0  30D1               	movlw	209
  2462  17C1  00E1               	movwf	??_main
  2463  17C2                     u5297:	
  2464  17C2  0BE1               	decfsz	??_main,f
  2465  17C3  2FC2               	goto	u5297
  2466  17C4  0BE2               	decfsz	??_main+1,f
  2467  17C5  2FC2               	goto	u5297
  2468  17C6  0BE3               	decfsz	??_main+2,f
  2469  17C7  2FC2               	goto	u5297
  2470  17C8  0000               	nop
  2471                           
  2472                           ;Multi_RX_testjig_v2.c: 584: print_error("12v supply", "Curr Error");
  2473  17C9  3098               	movlw	low ((STR_19+4)| (0+32768))
  2474  17CA  00F8               	movwf	print_error@top
  2475  17CB  3091               	movlw	high ((STR_19+4)| (0+32768))
  2476  17CC  00F9               	movwf	print_error@top+1
  2477  17CD  3003               	movlw	low (STR_12| (0+32768))
  2478  17CE  00FA               	movwf	print_error@bottom
  2479  17CF  3093               	movlw	high (STR_12| (0+32768))
  2480  17D0  2FDD               	goto	L1
  2481  17D1                     l4087:	
  2482                           ;Multi_RX_testjig_v2.c: 585: }
  2483                           
  2484                           
  2485                           ;Multi_RX_testjig_v2.c: 586: else if(testjig_timer == 0)
  2486  17D1  0021               	movlb	1	; select bank1
  2487  17D2  082E               	movf	_testjig_timer^(0+128),w	;volatile
  2488  17D3  042F               	iorwf	(_testjig_timer+1)^(0+128),w	;volatile
  2489  17D4  1D03               	btfss	3,2
  2490  17D5  2FE1               	goto	l315
  2491                           
  2492                           ;Multi_RX_testjig_v2.c: 587: print_error("12v-5v supply", "T-out Error");
  2493  17D6  3005               	movlw	low (STR_7| (0+32768))
  2494  17D7  00F8               	movwf	print_error@top
  2495  17D8  3092               	movlw	high (STR_7| (0+32768))
  2496  17D9  00F9               	movwf	print_error@top+1
  2497  17DA  30EB               	movlw	low (STR_14| (0+32768))
  2498  17DB  00FA               	movwf	print_error@bottom
  2499  17DC  3092               	movlw	high (STR_14| (0+32768))
  2500  17DD                     L1:	
  2501  17DD  00FB               	movwf	print_error@bottom+1
  2502  17DE  318A  22F6  3196   	fcall	_print_error
  2503  17E1                     l315:	
  2504                           
  2505                           ;Multi_RX_testjig_v2.c: 593: Vout_set(27);
  2506  17E1  301B               	movlw	27
  2507  17E2  00F4               	movwf	Vout_set@Volts
  2508  17E3  01F5               	clrf	Vout_set@Volts+1
  2509  17E4  3188  20C0  3196   	fcall	_Vout_set
  2510                           
  2511                           ;Multi_RX_testjig_v2.c: 594: power_supply_set(0);
  2512  17E7  3000               	movlw	0
  2513  17E8  318B  23F3  3196   	fcall	_power_supply_set
  2514                           
  2515                           ;Multi_RX_testjig_v2.c: 595: _delay((unsigned long)((150)*(16000000/4000.0)));
  2516  17EB  3004               	movlw	4
  2517  17EC  0020               	movlb	0	; select bank0
  2518  17ED  00E3               	movwf	??_main+2
  2519  17EE  300C               	movlw	12
  2520  17EF  00E2               	movwf	??_main+1
  2521  17F0  3035               	movlw	53
  2522  17F1  00E1               	movwf	??_main
  2523  17F2                     u5307:	
  2524  17F2  0BE1               	decfsz	??_main,f
  2525  17F3  2FF2               	goto	u5307
  2526  17F4  0BE2               	decfsz	??_main+1,f
  2527  17F5  2FF2               	goto	u5307
  2528  17F6  0BE3               	decfsz	??_main+2,f
  2529  17F7  2FF2               	goto	u5307
  2530  17F8  3200               	nop2
  2531                           
  2532                           ;Multi_RX_testjig_v2.c: 596: testjig_timer = (unsigned int)(7518.8/2);
  2533  17F9  30AF               	movlw	175
  2534  17FA  0021               	movlb	1	; select bank1
  2535  17FB  00AE               	movwf	_testjig_timer^(0+128)	;volatile
  2536  17FC  300E               	movlw	14
  2537  17FD  00AF               	movwf	(_testjig_timer^(0+128)+1)	;volatile
  2538  17FE  3180  28E4         	goto	l4095
  2539                           
  2540                           	psect	swtext1
  2541  07F8                     __pswtext1:	
  2542  07F8                     S4633:	
  2543  07F8  318B  2BF5         	ljmp	l679
  2544  07FA  318B  2BF9         	ljmp	l681
  2545  07FC  318B  2BFE         	ljmp	l682
  2546  07FE  318C  2C03         	ljmp	l683
  2547                           
  2548                           	psect	text12
  2549  159E                     __ptext12:	
  2550 ;; *************** function _ten_thou_conv *****************
  2551 ;; Defined at:
  2552 ;;		line 1610 in file "Multi_RX_testjig_v2.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  n               2    6[COMMON] int 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;		None               void
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, pclath, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 1F/0
  2563 ;;		On exit  : 1F/1
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2566 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2568 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2569 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2570 ;;Total ram usage:        5 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    2
  2573 ;; This function calls:
  2574 ;;		___bmul
  2575 ;;		___wmul
  2576 ;; This function is called by:
  2577 ;;		_lcd_print_int
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           
  2582                           ;psect for function _ten_thou_conv
  2583  159E                     _ten_thou_conv:	
  2584                           
  2585                           ;Multi_RX_testjig_v2.c: 1612: unit = n & 0x1F;
  2586                           
  2587                           ;incstack = 0
  2588                           ; Regs used in _ten_thou_conv: [wreg+status,2+status,0+pclath+cstack]
  2589  159E  0876               	movf	ten_thou_conv@n,w
  2590  159F  0021               	movlb	1	; select bank1
  2591  15A0  00B7               	movwf	_unit^(0+128)
  2592  15A1  301F               	movlw	31
  2593  15A2  05B7               	andwf	_unit^(0+128),f
  2594                           
  2595                           ;Multi_RX_testjig_v2.c: 1613: ten = (n >> 5) & 0xF;
  2596  15A3  0877               	movf	ten_thou_conv@n+1,w
  2597  15A4  00F9               	movwf	??_ten_thou_conv+1
  2598  15A5  0876               	movf	ten_thou_conv@n,w
  2599  15A6  00F8               	movwf	??_ten_thou_conv
  2600  15A7  3005               	movlw	5
  2601  15A8  00FA               	movwf	??_ten_thou_conv+2
  2602  15A9                     u2925:	
  2603  15A9  0D79               	rlf	??_ten_thou_conv+1,w
  2604  15AA  0CF9               	rrf	??_ten_thou_conv+1,f
  2605  15AB  0CF8               	rrf	??_ten_thou_conv,f
  2606  15AC  0BFA               	decfsz	??_ten_thou_conv+2,f
  2607  15AD  2DA9               	goto	u2925
  2608  15AE  0878               	movf	??_ten_thou_conv,w
  2609  15AF  00B6               	movwf	_ten^(0+128)
  2610  15B0  300F               	movlw	15
  2611  15B1  05B6               	andwf	_ten^(0+128),f
  2612                           
  2613                           ;Multi_RX_testjig_v2.c: 1614: hund = (n >> 9) & 0xF;
  2614  15B2  0877               	movf	ten_thou_conv@n+1,w
  2615  15B3  00F9               	movwf	??_ten_thou_conv+1
  2616  15B4  0876               	movf	ten_thou_conv@n,w
  2617  15B5  00F8               	movwf	??_ten_thou_conv
  2618  15B6  3009               	movlw	9
  2619  15B7  00FA               	movwf	??_ten_thou_conv+2
  2620  15B8                     u2935:	
  2621  15B8  0D79               	rlf	??_ten_thou_conv+1,w
  2622  15B9  0CF9               	rrf	??_ten_thou_conv+1,f
  2623  15BA  0CF8               	rrf	??_ten_thou_conv,f
  2624  15BB  0BFA               	decfsz	??_ten_thou_conv+2,f
  2625  15BC  2DB8               	goto	u2935
  2626  15BD  0878               	movf	??_ten_thou_conv,w
  2627  15BE  00B4               	movwf	_hund^(0+128)
  2628  15BF  300F               	movlw	15
  2629  15C0  05B4               	andwf	_hund^(0+128),f
  2630                           
  2631                           ;Multi_RX_testjig_v2.c: 1615: thou = (n >> 13) & 0x7;
  2632  15C1  0877               	movf	ten_thou_conv@n+1,w
  2633  15C2  00F9               	movwf	??_ten_thou_conv+1
  2634  15C3  0876               	movf	ten_thou_conv@n,w
  2635  15C4  00F8               	movwf	??_ten_thou_conv
  2636  15C5  300D               	movlw	13
  2637  15C6  00FA               	movwf	??_ten_thou_conv+2
  2638  15C7                     u2945:	
  2639  15C7  0D79               	rlf	??_ten_thou_conv+1,w
  2640  15C8  0CF9               	rrf	??_ten_thou_conv+1,f
  2641  15C9  0CF8               	rrf	??_ten_thou_conv,f
  2642  15CA  0BFA               	decfsz	??_ten_thou_conv+2,f
  2643  15CB  2DC7               	goto	u2945
  2644  15CC  0878               	movf	??_ten_thou_conv,w
  2645  15CD  00B8               	movwf	_thou^(0+128)
  2646  15CE  3007               	movlw	7
  2647  15CF  05B8               	andwf	_thou^(0+128),f
  2648                           
  2649                           ;Multi_RX_testjig_v2.c: 1617: unit = 2 * (thou + hund + ten) + unit;
  2650  15D0  0838               	movf	_thou^(0+128),w
  2651  15D1  0734               	addwf	_hund^(0+128),w
  2652  15D2  0736               	addwf	_ten^(0+128),w
  2653  15D3  0709               	addwf	9,w
  2654  15D4  07B7               	addwf	_unit^(0+128),f
  2655                           
  2656                           ;Multi_RX_testjig_v2.c: 1618: ten_thou = (unit * 0x67) >> 10;
  2657  15D5  0837               	movf	_unit^(0+128),w
  2658  15D6  00F0               	movwf	___wmul@multiplier
  2659  15D7  3067               	movlw	103
  2660  15D8  01F1               	clrf	___wmul@multiplier+1
  2661  15D9  00F2               	movwf	___wmul@multiplicand
  2662  15DA  01F3               	clrf	___wmul@multiplicand+1
  2663  15DB  2681  3195         	fcall	___wmul
  2664  15DD  0870               	movf	?___wmul,w
  2665  15DE  00F8               	movwf	??_ten_thou_conv
  2666  15DF  0871               	movf	?___wmul+1,w
  2667  15E0  00F9               	movwf	??_ten_thou_conv+1
  2668  15E1  300A               	movlw	10
  2669  15E2  00FA               	movwf	??_ten_thou_conv+2
  2670  15E3                     u2955:	
  2671  15E3  0D79               	rlf	??_ten_thou_conv+1,w
  2672  15E4  0CF9               	rrf	??_ten_thou_conv+1,f
  2673  15E5  0CF8               	rrf	??_ten_thou_conv,f
  2674  15E6  0BFA               	decfsz	??_ten_thou_conv+2,f
  2675  15E7  2DE3               	goto	u2955
  2676  15E8  0878               	movf	??_ten_thou_conv,w
  2677  15E9  0020               	movlb	0	; select bank0
  2678  15EA  00EF               	movwf	_ten_thou
  2679                           
  2680                           ;Multi_RX_testjig_v2.c: 1619: unit = unit - 10 * ten_thou;
  2681  15EB  30F6               	movlw	246
  2682  15EC  00F0               	movwf	___bmul@multiplicand
  2683  15ED  086F               	movf	_ten_thou,w
  2684  15EE  265E  3195         	fcall	___bmul
  2685  15F0  0021               	movlb	1	; select bank1
  2686  15F1  07B7               	addwf	_unit^(0+128),f
  2687                           
  2688                           ;Multi_RX_testjig_v2.c: 1621: ten = 9 * thou + hund + 3 * ten + ten_thou;
  2689  15F2  3009               	movlw	9
  2690  15F3  00F0               	movwf	___bmul@multiplicand
  2691  15F4  0838               	movf	_thou^(0+128),w
  2692  15F5  265E  3195         	fcall	___bmul
  2693  15F7  00F8               	movwf	??_ten_thou_conv
  2694  15F8  0021               	movlb	1	; select bank1
  2695  15F9  0836               	movf	_ten^(0+128),w
  2696  15FA  0736               	addwf	_ten^(0+128),w
  2697  15FB  0736               	addwf	_ten^(0+128),w
  2698  15FC  0778               	addwf	??_ten_thou_conv,w
  2699  15FD  0734               	addwf	_hund^(0+128),w
  2700  15FE  0020               	movlb	0	; select bank0
  2701  15FF  076F               	addwf	_ten_thou,w
  2702  1600  0021               	movlb	1	; select bank1
  2703  1601  00B6               	movwf	_ten^(0+128)
  2704                           
  2705                           ;Multi_RX_testjig_v2.c: 1622: ten_thou = (ten * 0x67) >> 10;
  2706  1602  00F0               	movwf	___wmul@multiplier
  2707  1603  3067               	movlw	103
  2708  1604  01F1               	clrf	___wmul@multiplier+1
  2709  1605  00F2               	movwf	___wmul@multiplicand
  2710  1606  01F3               	clrf	___wmul@multiplicand+1
  2711  1607  2681  3195         	fcall	___wmul
  2712  1609  0870               	movf	?___wmul,w
  2713  160A  00F8               	movwf	??_ten_thou_conv
  2714  160B  0871               	movf	?___wmul+1,w
  2715  160C  00F9               	movwf	??_ten_thou_conv+1
  2716  160D  300A               	movlw	10
  2717  160E  00FA               	movwf	??_ten_thou_conv+2
  2718  160F                     u2965:	
  2719  160F  0D79               	rlf	??_ten_thou_conv+1,w
  2720  1610  0CF9               	rrf	??_ten_thou_conv+1,f
  2721  1611  0CF8               	rrf	??_ten_thou_conv,f
  2722  1612  0BFA               	decfsz	??_ten_thou_conv+2,f
  2723  1613  2E0F               	goto	u2965
  2724  1614  0878               	movf	??_ten_thou_conv,w
  2725  1615  0020               	movlb	0	; select bank0
  2726  1616  00EF               	movwf	_ten_thou
  2727                           
  2728                           ;Multi_RX_testjig_v2.c: 1623: ten = ten - 10 * ten_thou;
  2729  1617  30F6               	movlw	246
  2730  1618  00F0               	movwf	___bmul@multiplicand
  2731  1619  086F               	movf	_ten_thou,w
  2732  161A  265E  3195         	fcall	___bmul
  2733  161C  0021               	movlb	1	; select bank1
  2734  161D  07B6               	addwf	_ten^(0+128),f
  2735                           
  2736                           ;Multi_RX_testjig_v2.c: 1625: hund = thou + 5 * hund + ten_thou;
  2737  161E  3005               	movlw	5
  2738  161F  00F0               	movwf	___bmul@multiplicand
  2739  1620  0834               	movf	_hund^(0+128),w
  2740  1621  265E  3195         	fcall	___bmul
  2741  1623  0021               	movlb	1	; select bank1
  2742  1624  0738               	addwf	_thou^(0+128),w
  2743  1625  0020               	movlb	0	; select bank0
  2744  1626  076F               	addwf	_ten_thou,w
  2745  1627  0021               	movlb	1	; select bank1
  2746  1628  00B4               	movwf	_hund^(0+128)
  2747                           
  2748                           ;Multi_RX_testjig_v2.c: 1626: ten_thou = (hund * 0x67) >> 10;
  2749  1629  00F0               	movwf	___wmul@multiplier
  2750  162A  3067               	movlw	103
  2751  162B  01F1               	clrf	___wmul@multiplier+1
  2752  162C  00F2               	movwf	___wmul@multiplicand
  2753  162D  01F3               	clrf	___wmul@multiplicand+1
  2754  162E  2681  3195         	fcall	___wmul
  2755  1630  0870               	movf	?___wmul,w
  2756  1631  00F8               	movwf	??_ten_thou_conv
  2757  1632  0871               	movf	?___wmul+1,w
  2758  1633  00F9               	movwf	??_ten_thou_conv+1
  2759  1634  300A               	movlw	10
  2760  1635  00FA               	movwf	??_ten_thou_conv+2
  2761  1636                     u2975:	
  2762  1636  0D79               	rlf	??_ten_thou_conv+1,w
  2763  1637  0CF9               	rrf	??_ten_thou_conv+1,f
  2764  1638  0CF8               	rrf	??_ten_thou_conv,f
  2765  1639  0BFA               	decfsz	??_ten_thou_conv+2,f
  2766  163A  2E36               	goto	u2975
  2767  163B  0878               	movf	??_ten_thou_conv,w
  2768  163C  0020               	movlb	0	; select bank0
  2769  163D  00EF               	movwf	_ten_thou
  2770                           
  2771                           ;Multi_RX_testjig_v2.c: 1627: hund = hund - 10 * ten_thou;
  2772  163E  30F6               	movlw	246
  2773  163F  00F0               	movwf	___bmul@multiplicand
  2774  1640  086F               	movf	_ten_thou,w
  2775  1641  265E  3195         	fcall	___bmul
  2776  1643  0021               	movlb	1	; select bank1
  2777  1644  07B4               	addwf	_hund^(0+128),f
  2778                           
  2779                           ;Multi_RX_testjig_v2.c: 1629: thou = 8 * thou + ten_thou;
  2780  1645  0838               	movf	_thou^(0+128),w
  2781  1646  0709               	addwf	9,w
  2782  1647  0709               	addwf	9,w
  2783  1648  0709               	addwf	9,w
  2784  1649  0020               	movlb	0	; select bank0
  2785  164A  076F               	addwf	_ten_thou,w
  2786  164B  0021               	movlb	1	; select bank1
  2787  164C  00B8               	movwf	_thou^(0+128)
  2788                           
  2789                           ;Multi_RX_testjig_v2.c: 1630: ten_thou = (thou * 0x1A) >> 8;
  2790  164D  00F0               	movwf	___wmul@multiplier
  2791  164E  301A               	movlw	26
  2792  164F  01F1               	clrf	___wmul@multiplier+1
  2793  1650  00F2               	movwf	___wmul@multiplicand
  2794  1651  01F3               	clrf	___wmul@multiplicand+1
  2795  1652  2681  3195         	fcall	___wmul
  2796  1654  0871               	movf	?___wmul+1,w
  2797  1655  0020               	movlb	0	; select bank0
  2798  1656  00EF               	movwf	_ten_thou
  2799                           
  2800                           ;Multi_RX_testjig_v2.c: 1631: thou = thou - 10 * ten_thou;
  2801  1657  30F6               	movlw	246
  2802  1658  00F0               	movwf	___bmul@multiplicand
  2803  1659  086F               	movf	_ten_thou,w
  2804  165A  265E               	fcall	___bmul
  2805  165B  0021               	movlb	1	; select bank1
  2806  165C  07B8               	addwf	_thou^(0+128),f
  2807  165D  0008               	return
  2808  165E                     __end_of_ten_thou_conv:	
  2809  165E                     __ptext14:	
  2810 ;; *************** function ___bmul *****************
  2811 ;; Defined at:
  2812 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  multiplier      1    wreg     unsigned char 
  2815 ;;  multiplicand    1    0[COMMON] unsigned char 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  multiplier      1    2[COMMON] unsigned char 
  2818 ;;  product         1    1[COMMON] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      unsigned char 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0
  2823 ;; Tracked objects:
  2824 ;;		On entry : 1E/0
  2825 ;;		On exit  : 1E/0
  2826 ;;		Unchanged: 1E/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2828 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2831 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2832 ;;Total ram usage:        3 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    1
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_ten_thou_conv
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function ___bmul
  2844  165E                     ___bmul:	
  2845                           
  2846                           ;incstack = 0
  2847                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2848                           ;___bmul@multiplier stored from wreg
  2849  165E  00F2               	movwf	___bmul@multiplier
  2850  165F  01F1               	clrf	___bmul@product
  2851  1660  0870               	movf	___bmul@multiplicand,w
  2852  1661  1872               	btfsc	___bmul@multiplier,0
  2853  1662  07F1               	addwf	___bmul@product,f
  2854  1663  35F0               	lslf	___bmul@multiplicand,f
  2855  1664  0870               	movf	___bmul@multiplicand,w
  2856  1665  18F2               	btfsc	___bmul@multiplier,1
  2857  1666  07F1               	addwf	___bmul@product,f
  2858  1667  35F0               	lslf	___bmul@multiplicand,f
  2859  1668  0870               	movf	___bmul@multiplicand,w
  2860  1669  1972               	btfsc	___bmul@multiplier,2
  2861  166A  07F1               	addwf	___bmul@product,f
  2862  166B  35F0               	lslf	___bmul@multiplicand,f
  2863  166C  0870               	movf	___bmul@multiplicand,w
  2864  166D  19F2               	btfsc	___bmul@multiplier,3
  2865  166E  07F1               	addwf	___bmul@product,f
  2866  166F  35F0               	lslf	___bmul@multiplicand,f
  2867  1670  0870               	movf	___bmul@multiplicand,w
  2868  1671  1A72               	btfsc	___bmul@multiplier,4
  2869  1672  07F1               	addwf	___bmul@product,f
  2870  1673  35F0               	lslf	___bmul@multiplicand,f
  2871  1674  0870               	movf	___bmul@multiplicand,w
  2872  1675  1AF2               	btfsc	___bmul@multiplier,5
  2873  1676  07F1               	addwf	___bmul@product,f
  2874  1677  35F0               	lslf	___bmul@multiplicand,f
  2875  1678  0870               	movf	___bmul@multiplicand,w
  2876  1679  1B72               	btfsc	___bmul@multiplier,6
  2877  167A  07F1               	addwf	___bmul@product,f
  2878  167B  35F0               	lslf	___bmul@multiplicand,f
  2879  167C  0870               	movf	___bmul@multiplicand,w
  2880  167D  1BF2               	btfsc	___bmul@multiplier,7
  2881  167E  07F1               	addwf	___bmul@product,f
  2882  167F  0871               	movf	___bmul@product,w
  2883  1680  0008               	return
  2884  1681                     __end_of___bmul:	
  2885  1681                     __ptext13:	
  2886 ;; *************** function ___wmul *****************
  2887 ;; Defined at:
  2888 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  multiplier      2    0[COMMON] unsigned int 
  2891 ;;  multiplicand    2    2[COMMON] unsigned int 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  product         2    4[COMMON] unsigned int 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  2    0[COMMON] unsigned int 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0
  2898 ;; Tracked objects:
  2899 ;;		On entry : 1F/1
  2900 ;;		On exit  : 1F/1
  2901 ;;		Unchanged: 1F/0
  2902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2904 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2906 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2907 ;;Total ram usage:        6 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    1
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_ten_thou_conv
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           
  2918                           ;psect for function ___wmul
  2919  1681                     ___wmul:	
  2920                           
  2921                           ;incstack = 0
  2922                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2923  1681  01F4               	clrf	___wmul@product
  2924  1682  01F5               	clrf	___wmul@product+1
  2925  1683                     l2951:	
  2926  1683  1C70               	btfss	___wmul@multiplier,0
  2927  1684  2E89               	goto	l2955
  2928  1685  0872               	movf	___wmul@multiplicand,w
  2929  1686  07F4               	addwf	___wmul@product,f
  2930  1687  0873               	movf	___wmul@multiplicand+1,w
  2931  1688  3DF5               	addwfc	___wmul@product+1,f
  2932  1689                     l2955:	
  2933  1689  35F2               	lslf	___wmul@multiplicand,f
  2934  168A  0DF3               	rlf	___wmul@multiplicand+1,f
  2935  168B  36F1               	lsrf	___wmul@multiplier+1,f
  2936  168C  0CF0               	rrf	___wmul@multiplier,f
  2937  168D  0870               	movf	___wmul@multiplier,w
  2938  168E  0471               	iorwf	___wmul@multiplier+1,w
  2939  168F  1D03               	btfss	3,2
  2940  1690  2E83               	goto	l2951
  2941  1691  0875               	movf	___wmul@product+1,w
  2942  1692  00F1               	movwf	?___wmul+1
  2943  1693  0874               	movf	___wmul@product,w
  2944  1694  00F0               	movwf	?___wmul
  2945  1695  0008               	return
  2946  1696                     __end_of___wmul:	
  2947                           
  2948                           	psect	text18
  2949  080C                     __ptext18:	
  2950 ;; *************** function _init_i2c *****************
  2951 ;; Defined at:
  2952 ;;		line 2058 in file "Multi_RX_testjig_v2.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;		None               void
  2959 ;; Registers used:
  2960 ;;		wreg
  2961 ;; Tracked objects:
  2962 ;;		On entry : B1F/0
  2963 ;;		On exit  : 1F/4
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2968 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2969 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2970 ;;Total ram usage:        3 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    1
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function _init_i2c
  2982  080C                     _init_i2c:	
  2983                           
  2984                           ;Multi_RX_testjig_v2.c: 2060: RA5 = 1;
  2985                           
  2986                           ;incstack = 0
  2987                           ; Regs used in _init_i2c: [wreg]
  2988  080C  168C               	bsf	12,5	;volatile
  2989                           
  2990                           ;Multi_RX_testjig_v2.c: 2061: _delay((unsigned long)((200)*(16000000/4000.0)));
  2991  080D  3005               	movlw	5
  2992  080E  00F2               	movwf	??_init_i2c+2
  2993  080F  300F               	movlw	15
  2994  0810  00F1               	movwf	??_init_i2c+1
  2995  0811  30F4               	movlw	244
  2996  0812  00F0               	movwf	??_init_i2c
  2997  0813                     u5767:	
  2998  0813  0BF0               	decfsz	??_init_i2c,f
  2999  0814  2813               	goto	u5767
  3000  0815  0BF1               	decfsz	??_init_i2c+1,f
  3001  0816  2813               	goto	u5767
  3002  0817  0BF2               	decfsz	??_init_i2c+2,f
  3003  0818  2813               	goto	u5767
  3004                           
  3005                           ;Multi_RX_testjig_v2.c: 2062: TRISC3 = 1;
  3006  0819  0021               	movlb	1	; select bank1
  3007  081A  158E               	bsf	14,3	;volatile
  3008                           
  3009                           ;Multi_RX_testjig_v2.c: 2063: TRISC4 = 1;
  3010  081B  160E               	bsf	14,4	;volatile
  3011                           
  3012                           ;Multi_RX_testjig_v2.c: 2064: SSP1STAT |= 0x80;
  3013  081C  0024               	movlb	4	; select bank4
  3014  081D  1794               	bsf	20,7	;volatile
  3015                           
  3016                           ;Multi_RX_testjig_v2.c: 2065: SSP1CON1 = 0x28;
  3017  081E  3028               	movlw	40
  3018  081F  0095               	movwf	21	;volatile
  3019                           
  3020                           ;Multi_RX_testjig_v2.c: 2066: SSP1ADD = 0x22;
  3021  0820  3022               	movlw	34
  3022  0821  0092               	movwf	18	;volatile
  3023  0822  0008               	return
  3024  0823                     __end_of_init_i2c:	
  3025                           
  3026                           	psect	text19
  3027  1589                     __ptext19:	
  3028 ;; *************** function _init_current_sink *****************
  3029 ;; Defined at:
  3030 ;;		line 2087 in file "Multi_RX_testjig_v2.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;		None               void
  3037 ;; Registers used:
  3038 ;;		wreg, status,2
  3039 ;; Tracked objects:
  3040 ;;		On entry : B1F/1
  3041 ;;		On exit  : B1F/C
  3042 ;;		Unchanged: B00/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3048 ;;Total ram usage:        0 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    1
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           
  3059                           ;psect for function _init_current_sink
  3060  1589                     _init_current_sink:	
  3061                           
  3062                           ;Multi_RX_testjig_v2.c: 2089: T2CON = 0b00000110;
  3063                           
  3064                           ;incstack = 0
  3065                           ; Regs used in _init_current_sink: [wreg+status,2]
  3066  1589  3006               	movlw	6
  3067  158A  0020               	movlb	0	; select bank0
  3068  158B  009C               	movwf	28	;volatile
  3069                           
  3070                           ;Multi_RX_testjig_v2.c: 2090: PR2 = 0xFA;
  3071  158C  30FA               	movlw	250
  3072  158D  009B               	movwf	27	;volatile
  3073                           
  3074                           ;Multi_RX_testjig_v2.c: 2091: PIE1bits.TMR2IE = 1;
  3075  158E  0021               	movlb	1	; select bank1
  3076  158F  1491               	bsf	17,1	;volatile
  3077                           
  3078                           ;Multi_RX_testjig_v2.c: 2093: T8CON = 0b00000100;
  3079  1590  3004               	movlw	4
  3080  1591  002B               	movlb	11	; select bank11
  3081  1592  0097               	movwf	23	;volatile
  3082                           
  3083                           ;Multi_RX_testjig_v2.c: 2094: PR8 = 0xFF;
  3084  1593  30FF               	movlw	255
  3085  1594  0096               	movwf	22	;volatile
  3086                           
  3087                           ;Multi_RX_testjig_v2.c: 2095: CCP9CON = 0b00001100;
  3088  1595  300C               	movlw	12
  3089  1596  002C               	movlb	12	; select bank12
  3090  1597  009C               	movwf	28	;volatile
  3091                           
  3092                           ;Multi_RX_testjig_v2.c: 2096: CCPTMRS2 = 0b00000001;
  3093  1598  3001               	movlw	1
  3094  1599  0025               	movlb	5	; select bank5
  3095  159A  009F               	movwf	31	;volatile
  3096                           
  3097                           ;Multi_RX_testjig_v2.c: 2097: CCPR9L = 0x00;
  3098  159B  002C               	movlb	12	; select bank12
  3099  159C  019A               	clrf	26	;volatile
  3100  159D  0008               	return
  3101  159E                     __end_of_init_current_sink:	
  3102                           
  3103                           	psect	text20
  3104  0805                     __ptext20:	
  3105 ;; *************** function _init_ADC *****************
  3106 ;; Defined at:
  3107 ;;		line 2069 in file "Multi_RX_testjig_v2.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;		None               void
  3114 ;; Registers used:
  3115 ;;		wreg
  3116 ;; Tracked objects:
  3117 ;;		On entry : B1F/8
  3118 ;;		On exit  : B1F/1
  3119 ;;		Unchanged: B00/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; Hardware stack levels required when called:    1
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_main
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           
  3136                           ;psect for function _init_ADC
  3137  0805                     _init_ADC:	
  3138                           
  3139                           ;Multi_RX_testjig_v2.c: 2071: FVRCON = 0b10000011;
  3140                           
  3141                           ;incstack = 0
  3142                           ; Regs used in _init_ADC: [wreg]
  3143  0805  3083               	movlw	131
  3144  0806  0022               	movlb	2	; select bank2
  3145  0807  0097               	movwf	23	;volatile
  3146                           
  3147                           ;Multi_RX_testjig_v2.c: 2073: ADCON1 = 0b10100011;
  3148  0808  30A3               	movlw	163
  3149  0809  0021               	movlb	1	; select bank1
  3150  080A  009E               	movwf	30	;volatile
  3151  080B  0008               	return
  3152  080C                     __end_of_init_ADC:	
  3153                           
  3154                           	psect	text21
  3155  0C13                     __ptext21:	
  3156 ;; *************** function _get_30v_current *****************
  3157 ;; Defined at:
  3158 ;;		line 2130 in file "Multi_RX_testjig_v2.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;		None
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;  temp            2   57[BANK0 ] unsigned int 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  2   55[BANK0 ] unsigned int 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0, pclath, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 1E/1
  3169 ;;		On exit  : 1F/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3172 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3173 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3175 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3176 ;;Total ram usage:        4 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    3
  3179 ;; This function calls:
  3180 ;;		_ADC_get_val
  3181 ;;		___fladd
  3182 ;;		___flmul
  3183 ;;		___fltol
  3184 ;;		___xxtofl
  3185 ;; This function is called by:
  3186 ;;		_main
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           
  3191                           ;psect for function _get_30v_current
  3192  0C13                     _get_30v_current:	
  3193                           
  3194                           ;Multi_RX_testjig_v2.c: 2132: unsigned int temp;
  3195                           ;Multi_RX_testjig_v2.c: 2133: temp = ADC_get_val(0b01010011);
  3196                           
  3197                           ;incstack = 0
  3198                           ; Regs used in _get_30v_current: [wreg+status,2+status,0+pclath+cstack]
  3199  0C13  3053               	movlw	83
  3200  0C14  245E  318C         	fcall	_ADC_get_val
  3201  0C16  0871               	movf	?_ADC_get_val+1,w
  3202  0C17  0020               	movlb	0	; select bank0
  3203  0C18  00DA               	movwf	get_30v_current@temp+1
  3204  0C19  0870               	movf	?_ADC_get_val,w
  3205  0C1A  00D9               	movwf	get_30v_current@temp
  3206                           
  3207                           ;Multi_RX_testjig_v2.c: 2134: if(temp > 4)
  3208  0C1B  3000               	movlw	0
  3209  0C1C  025A               	subwf	get_30v_current@temp+1,w
  3210  0C1D  3005               	movlw	5
  3211  0C1E  1903               	skipnz
  3212  0C1F  0259               	subwf	get_30v_current@temp,w
  3213  0C20  1C03               	skipc
  3214  0C21  2C5B               	goto	l3769
  3215                           
  3216                           ;Multi_RX_testjig_v2.c: 2135: return ( temp * 3.4) - 16;
  3217  0C22  0859               	movf	get_30v_current@temp,w
  3218  0C23  00F0               	movwf	___xxtofl@val
  3219  0C24  085A               	movf	get_30v_current@temp+1,w
  3220  0C25  00F1               	movwf	___xxtofl@val+1
  3221  0C26  3000               	movlw	0
  3222  0C27  01F2               	clrf	___xxtofl@val+2
  3223  0C28  01F3               	clrf	___xxtofl@val+3
  3224  0C29  278C  318C         	fcall	___xxtofl
  3225  0C2B  0873               	movf	?___xxtofl+3,w
  3226  0C2C  00A7               	movwf	___flmul@a+3
  3227  0C2D  0872               	movf	?___xxtofl+2,w
  3228  0C2E  00A6               	movwf	___flmul@a+2
  3229  0C2F  0871               	movf	?___xxtofl+1,w
  3230  0C30  00A5               	movwf	___flmul@a+1
  3231  0C31  0870               	movf	?___xxtofl,w
  3232  0C32  00A4               	movwf	___flmul@a
  3233  0C33  3040               	movlw	64
  3234  0C34  00A3               	movwf	___flmul@b+3
  3235  0C35  3059               	movlw	89
  3236  0C36  00A2               	movwf	___flmul@b+2
  3237  0C37  3099               	movlw	153
  3238  0C38  00A1               	movwf	___flmul@b+1
  3239  0C39  309A               	movlw	154
  3240  0C3A  00A0               	movwf	___flmul@b
  3241  0C3B  25C1  318C         	fcall	___flmul
  3242  0C3D  0823               	movf	?___flmul+3,w
  3243  0C3E  00C0               	movwf	___fladd@a+3
  3244  0C3F  0822               	movf	?___flmul+2,w
  3245  0C40  00BF               	movwf	___fladd@a+2
  3246  0C41  0821               	movf	?___flmul+1,w
  3247  0C42  00BE               	movwf	___fladd@a+1
  3248  0C43  0820               	movf	?___flmul,w
  3249  0C44  00BD               	movwf	___fladd@a
  3250  0C45  30C1               	movlw	193
  3251  0C46  00BC               	movwf	___fladd@b+3
  3252  0C47  3080               	movlw	128
  3253  0C48  00BB               	movwf	___fladd@b+2
  3254  0C49  01BA               	clrf	___fladd@b+1
  3255  0C4A  01B9               	clrf	___fladd@b
  3256  0C4B  2470               	fcall	___fladd
  3257  0C4C  083C               	movf	?___fladd+3,w
  3258  0C4D  00D0               	movwf	___fltol@f1+3
  3259  0C4E  083B               	movf	?___fladd+2,w
  3260  0C4F  00CF               	movwf	___fltol@f1+2
  3261  0C50  083A               	movf	?___fladd+1,w
  3262  0C51  00CE               	movwf	___fltol@f1+1
  3263  0C52  0839               	movf	?___fladd,w
  3264  0C53  00CD               	movwf	___fltol@f1
  3265  0C54  3188  206D         	fcall	___fltol
  3266  0C56  084E               	movf	?___fltol+1,w
  3267  0C57  00D8               	movwf	?_get_30v_current+1
  3268  0C58  084D               	movf	?___fltol,w
  3269  0C59  00D7               	movwf	?_get_30v_current
  3270  0C5A  0008               	return
  3271  0C5B                     l3769:	
  3272                           
  3273                           ;Multi_RX_testjig_v2.c: 2136: else
  3274                           ;Multi_RX_testjig_v2.c: 2137: return 0;
  3275  0C5B  01D7               	clrf	?_get_30v_current
  3276  0C5C  01D8               	clrf	?_get_30v_current+1
  3277  0C5D  0008               	return
  3278  0C5E                     __end_of_get_30v_current:	
  3279  0C5E                     __ptext27:	
  3280 ;; *************** function _ADC_get_val *****************
  3281 ;; Defined at:
  3282 ;;		line 2076 in file "Multi_RX_testjig_v2.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  channel         1    wreg     unsigned char 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  channel         1    3[COMMON] unsigned char 
  3287 ;;  return_val      2    4[COMMON] unsigned int 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  2    0[COMMON] unsigned int 
  3290 ;; Registers used:
  3291 ;;		wreg
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/5
  3294 ;;		On exit  : 1F/1
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3297 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3298 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3300 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3301 ;;Total ram usage:        6 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    1
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_main
  3308 ;;		_get_30v_current
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function _ADC_get_val
  3314  0C5E                     _ADC_get_val:	
  3315                           
  3316                           ;incstack = 0
  3317                           ; Regs used in _ADC_get_val: [wreg]
  3318                           ;ADC_get_val@channel stored from wreg
  3319  0C5E  00F3               	movwf	ADC_get_val@channel
  3320                           
  3321                           ;Multi_RX_testjig_v2.c: 2078: unsigned int return_val;
  3322                           ;Multi_RX_testjig_v2.c: 2079: GIE = 0;
  3323  0C5F  138B               	bcf	11,7	;volatile
  3324                           
  3325                           ;Multi_RX_testjig_v2.c: 2080: ADCON0 = channel;
  3326  0C60  0873               	movf	ADC_get_val@channel,w
  3327  0C61  0021               	movlb	1	; select bank1
  3328  0C62  009D               	movwf	29	;volatile
  3329  0C63                     l669:	
  3330                           ;Multi_RX_testjig_v2.c: 2081: while(ADCON0bits.GO_nDONE == 1);
  3331                           
  3332  0C63  189D               	btfsc	29,1	;volatile
  3333  0C64  2C63               	goto	l669
  3334                           
  3335                           ;Multi_RX_testjig_v2.c: 2082: return_val = ADRESH << 8 | ADRESL;
  3336  0C65  081C               	movf	28,w	;volatile
  3337  0C66  00F5               	movwf	ADC_get_val@return_val+1
  3338  0C67  01F4               	clrf	ADC_get_val@return_val
  3339  0C68  081B               	movf	27,w	;volatile
  3340  0C69  04F4               	iorwf	ADC_get_val@return_val,f
  3341                           
  3342                           ;Multi_RX_testjig_v2.c: 2083: GIE = 1;
  3343  0C6A  178B               	bsf	11,7	;volatile
  3344                           
  3345                           ;Multi_RX_testjig_v2.c: 2084: return return_val;
  3346  0C6B  0875               	movf	ADC_get_val@return_val+1,w
  3347  0C6C  00F1               	movwf	?_ADC_get_val+1
  3348  0C6D  0874               	movf	ADC_get_val@return_val,w
  3349  0C6E  00F0               	movwf	?_ADC_get_val
  3350  0C6F  0008               	return
  3351  0C70                     __end_of_ADC_get_val:	
  3352  0C70                     __ptext26:	
  3353 ;; *************** function ___fladd *****************
  3354 ;; Defined at:
  3355 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  b               4   25[BANK0 ] unsigned int 
  3358 ;;  a               4   29[BANK0 ] unsigned int 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  grs             1   44[BANK0 ] unsigned char 
  3361 ;;  bexp            1   43[BANK0 ] unsigned char 
  3362 ;;  aexp            1   42[BANK0 ] unsigned char 
  3363 ;;  signs           1   41[BANK0 ] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  4   25[BANK0 ] unsigned char 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0
  3368 ;; Tracked objects:
  3369 ;;		On entry : 1F/0
  3370 ;;		On exit  : 1F/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3373 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3374 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3375 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3376 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3377 ;;Total ram usage:       20 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; Hardware stack levels required when called:    1
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_get_30v_current
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           
  3388                           ;psect for function ___fladd
  3389  0C70                     ___fladd:	
  3390                           
  3391                           ;incstack = 0
  3392                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  3393  0C70  083C               	movf	___fladd@b+3,w
  3394  0C71  00C9               	movwf	___fladd@signs
  3395  0C72  3080               	movlw	128
  3396  0C73  05C9               	andwf	___fladd@signs,f
  3397  0C74  353C               	lslf	___fladd@b+3,w
  3398  0C75  00CB               	movwf	___fladd@bexp
  3399  0C76  1BBB               	btfsc	___fladd@b+2,7
  3400  0C77  144B               	bsf	___fladd@bexp,0
  3401  0C78  084B               	movf	___fladd@bexp,w
  3402  0C79  1903               	btfsc	3,2
  3403  0C7A  2C83               	goto	l971
  3404  0C7B  0F4B               	incfsz	___fladd@bexp,w
  3405  0C7C  2C81               	goto	l972
  3406  0C7D  01B9               	clrf	___fladd@b
  3407  0C7E  01BA               	clrf	___fladd@b+1
  3408  0C7F  01BB               	clrf	___fladd@b+2
  3409  0C80  01BC               	clrf	___fladd@b+3
  3410  0C81                     l972:	
  3411  0C81  17BB               	bsf	___fladd@b+2,7
  3412  0C82  2C86               	goto	L27
  3413  0C83                     l971:	
  3414  0C83  01B9               	clrf	___fladd@b
  3415  0C84  01BA               	clrf	___fladd@b+1
  3416  0C85  01BB               	clrf	___fladd@b+2
  3417  0C86                     L27:	
  3418  0C86  01BC               	clrf	___fladd@b+3
  3419  0C87  0840               	movf	___fladd@a+3,w
  3420  0C88  00CA               	movwf	___fladd@aexp
  3421  0C89  3080               	movlw	128
  3422  0C8A  05CA               	andwf	___fladd@aexp,f
  3423  0C8B  084A               	movf	___fladd@aexp,w
  3424  0C8C  0649               	xorwf	___fladd@signs,w
  3425  0C8D  1D03               	btfss	3,2
  3426  0C8E  1749               	bsf	___fladd@signs,6
  3427  0C8F  3540               	lslf	___fladd@a+3,w
  3428  0C90  00CA               	movwf	___fladd@aexp
  3429  0C91  1BBF               	btfsc	___fladd@a+2,7
  3430  0C92  144A               	bsf	___fladd@aexp,0
  3431  0C93  084A               	movf	___fladd@aexp,w
  3432  0C94  1903               	btfsc	3,2
  3433  0C95  2C9E               	goto	l976
  3434  0C96  0F4A               	incfsz	___fladd@aexp,w
  3435  0C97  2C9C               	goto	l977
  3436  0C98  01BD               	clrf	___fladd@a
  3437  0C99  01BE               	clrf	___fladd@a+1
  3438  0C9A  01BF               	clrf	___fladd@a+2
  3439  0C9B  01C0               	clrf	___fladd@a+3
  3440  0C9C                     l977:	
  3441  0C9C  17BF               	bsf	___fladd@a+2,7
  3442  0C9D  2CA1               	goto	L28
  3443  0C9E                     l976:	
  3444  0C9E  01BD               	clrf	___fladd@a
  3445  0C9F  01BE               	clrf	___fladd@a+1
  3446  0CA0  01BF               	clrf	___fladd@a+2
  3447  0CA1                     L28:	
  3448  0CA1  01C0               	clrf	___fladd@a+3
  3449  0CA2  084B               	movf	___fladd@bexp,w
  3450  0CA3  024A               	subwf	___fladd@aexp,w
  3451  0CA4  1803               	skipnc
  3452  0CA5  2CC8               	goto	l3307
  3453  0CA6  1F49               	btfss	___fladd@signs,6
  3454  0CA7  2CAA               	goto	l3277
  3455  0CA8  3080               	movlw	128
  3456  0CA9  06C9               	xorwf	___fladd@signs,f
  3457  0CAA                     l3277:	
  3458  0CAA  084B               	movf	___fladd@bexp,w
  3459  0CAB  00CC               	movwf	___fladd@grs
  3460  0CAC  084A               	movf	___fladd@aexp,w
  3461  0CAD  00CB               	movwf	___fladd@bexp
  3462  0CAE  084C               	movf	___fladd@grs,w
  3463  0CAF  00CA               	movwf	___fladd@aexp
  3464  0CB0  0839               	movf	___fladd@b,w
  3465  0CB1  00CC               	movwf	___fladd@grs
  3466  0CB2  083D               	movf	___fladd@a,w
  3467  0CB3  00B9               	movwf	___fladd@b
  3468  0CB4  084C               	movf	___fladd@grs,w
  3469  0CB5  00BD               	movwf	___fladd@a
  3470  0CB6  083A               	movf	___fladd@b+1,w
  3471  0CB7  00CC               	movwf	___fladd@grs
  3472  0CB8  083E               	movf	___fladd@a+1,w
  3473  0CB9  00BA               	movwf	___fladd@b+1
  3474  0CBA  084C               	movf	___fladd@grs,w
  3475  0CBB  00BE               	movwf	___fladd@a+1
  3476  0CBC  083B               	movf	___fladd@b+2,w
  3477  0CBD  00CC               	movwf	___fladd@grs
  3478  0CBE  083F               	movf	___fladd@a+2,w
  3479  0CBF  00BB               	movwf	___fladd@b+2
  3480  0CC0  084C               	movf	___fladd@grs,w
  3481  0CC1  00BF               	movwf	___fladd@a+2
  3482  0CC2  083C               	movf	___fladd@b+3,w
  3483  0CC3  00CC               	movwf	___fladd@grs
  3484  0CC4  0840               	movf	___fladd@a+3,w
  3485  0CC5  00BC               	movwf	___fladd@b+3
  3486  0CC6  084C               	movf	___fladd@grs,w
  3487  0CC7  00C0               	movwf	___fladd@a+3
  3488  0CC8                     l3307:	
  3489  0CC8  01CC               	clrf	___fladd@grs
  3490  0CC9  084A               	movf	___fladd@aexp,w
  3491  0CCA  00C1               	movwf	??___fladd
  3492  0CCB  01C2               	clrf	??___fladd+1
  3493  0CCC  0842               	movf	??___fladd+1,w
  3494  0CCD  00C4               	movwf	??___fladd+3
  3495  0CCE  084B               	movf	___fladd@bexp,w
  3496  0CCF  0241               	subwf	??___fladd,w
  3497  0CD0  00C3               	movwf	??___fladd+2
  3498  0CD1  1C03               	skipc
  3499  0CD2  03C4               	decf	??___fladd+3,f
  3500  0CD3  0844               	movf	??___fladd+3,w
  3501  0CD4  3A80               	xorlw	128
  3502  0CD5  00C5               	movwf	??___fladd+4
  3503  0CD6  3080               	movlw	128
  3504  0CD7  0245               	subwf	??___fladd+4,w
  3505  0CD8  1D03               	skipz
  3506  0CD9  2CDC               	goto	u3155
  3507  0CDA  301A               	movlw	26
  3508  0CDB  0243               	subwf	??___fladd+2,w
  3509  0CDC                     u3155:	
  3510  0CDC  1C03               	skipc
  3511  0CDD  2CFE               	goto	l3321
  3512  0CDE  0020               	movlb	0	; select bank0
  3513  0CDF  083C               	movf	___fladd@b+3,w
  3514  0CE0  043B               	iorwf	___fladd@b+2,w
  3515  0CE1  043A               	iorwf	___fladd@b+1,w
  3516  0CE2  0439               	iorwf	___fladd@b,w
  3517  0CE3  1903               	btfsc	3,2
  3518  0CE4  2CE7               	goto	u3160
  3519  0CE5  3001               	movlw	1
  3520  0CE6  2CE8               	goto	u3170
  3521  0CE7                     u3160:	
  3522  0CE7  3000               	movlw	0
  3523  0CE8                     u3170:	
  3524  0CE8  00CC               	movwf	___fladd@grs
  3525  0CE9  01B9               	clrf	___fladd@b
  3526  0CEA  01BA               	clrf	___fladd@b+1
  3527  0CEB  01BB               	clrf	___fladd@b+2
  3528  0CEC  01BC               	clrf	___fladd@b+3
  3529  0CED  084A               	movf	___fladd@aexp,w
  3530  0CEE  00CB               	movwf	___fladd@bexp
  3531  0CEF  2D03               	goto	l982
  3532  0CF0                     l984:	
  3533  0CF0  1C4C               	btfss	___fladd@grs,0
  3534  0CF1  2CF6               	goto	l985
  3535  0CF2  364C               	lsrf	___fladd@grs,w
  3536  0CF3  3801               	iorlw	1
  3537  0CF4  00CC               	movwf	___fladd@grs
  3538  0CF5  2CF7               	goto	l986
  3539  0CF6                     l985:	
  3540  0CF6  36CC               	lsrf	___fladd@grs,f
  3541  0CF7                     l986:	
  3542  0CF7  1839               	btfsc	___fladd@b,0
  3543  0CF8  17CC               	bsf	___fladd@grs,7
  3544  0CF9  37BC               	asrf	___fladd@b+3,f
  3545  0CFA  0CBB               	rrf	___fladd@b+2,f
  3546  0CFB  0CBA               	rrf	___fladd@b+1,f
  3547  0CFC  0CB9               	rrf	___fladd@b,f
  3548  0CFD  0ACB               	incf	___fladd@bexp,f
  3549  0CFE                     l3321:	
  3550  0CFE  0020               	movlb	0	; select bank0
  3551  0CFF  084A               	movf	___fladd@aexp,w
  3552  0D00  024B               	subwf	___fladd@bexp,w
  3553  0D01  1C03               	skipc
  3554  0D02  2CF0               	goto	l984
  3555  0D03                     l982:	
  3556  0D03  1B49               	btfsc	___fladd@signs,6
  3557  0D04  2D27               	goto	l3339
  3558  0D05  084B               	movf	___fladd@bexp,w
  3559  0D06  1D03               	btfss	3,2
  3560  0D07  2D0D               	goto	l3327
  3561  0D08  01B9               	clrf	?___fladd
  3562  0D09  01BA               	clrf	?___fladd+1
  3563  0D0A  01BB               	clrf	?___fladd+2
  3564  0D0B  01BC               	clrf	?___fladd+3
  3565  0D0C  0008               	return
  3566  0D0D                     l3327:	
  3567  0D0D  083D               	movf	___fladd@a,w
  3568  0D0E  07B9               	addwf	___fladd@b,f
  3569  0D0F  083E               	movf	___fladd@a+1,w
  3570  0D10  3DBA               	addwfc	___fladd@b+1,f
  3571  0D11  083F               	movf	___fladd@a+2,w
  3572  0D12  3DBB               	addwfc	___fladd@b+2,f
  3573  0D13  0840               	movf	___fladd@a+3,w
  3574  0D14  3DBC               	addwfc	___fladd@b+3,f
  3575  0D15  1C3C               	btfss	___fladd@b+3,0
  3576  0D16  2D8F               	goto	l3369
  3577  0D17  1C4C               	btfss	___fladd@grs,0
  3578  0D18  2D1E               	goto	l993
  3579  0D19  36CC               	lsrf	___fladd@grs,f
  3580  0D1A  084C               	movf	___fladd@grs,w
  3581  0D1B  3801               	iorlw	1
  3582  0D1C  00CC               	movwf	___fladd@grs
  3583  0D1D  2D1F               	goto	l994
  3584  0D1E                     l993:	
  3585  0D1E  36CC               	lsrf	___fladd@grs,f
  3586  0D1F                     l994:	
  3587  0D1F  1839               	btfsc	___fladd@b,0
  3588  0D20  17CC               	bsf	___fladd@grs,7
  3589  0D21  37BC               	asrf	___fladd@b+3,f
  3590  0D22  0CBB               	rrf	___fladd@b+2,f
  3591  0D23  0CBA               	rrf	___fladd@b+1,f
  3592  0D24  0CB9               	rrf	___fladd@b,f
  3593  0D25  0ACB               	incf	___fladd@bexp,f
  3594  0D26  2D8F               	goto	l3369
  3595  0D27                     l3339:	
  3596  0D27  083C               	movf	___fladd@b+3,w
  3597  0D28  3A80               	xorlw	128
  3598  0D29  00C1               	movwf	??___fladd
  3599  0D2A  0840               	movf	___fladd@a+3,w
  3600  0D2B  3A80               	xorlw	128
  3601  0D2C  0241               	subwf	??___fladd,w
  3602  0D2D  1D03               	skipz
  3603  0D2E  2D39               	goto	u3263
  3604  0D2F  083F               	movf	___fladd@a+2,w
  3605  0D30  023B               	subwf	___fladd@b+2,w
  3606  0D31  1D03               	skipz
  3607  0D32  2D39               	goto	u3263
  3608  0D33  083E               	movf	___fladd@a+1,w
  3609  0D34  023A               	subwf	___fladd@b+1,w
  3610  0D35  1D03               	skipz
  3611  0D36  2D39               	goto	u3263
  3612  0D37  083D               	movf	___fladd@a,w
  3613  0D38  0239               	subwf	___fladd@b,w
  3614  0D39                     u3263:	
  3615  0D39  1803               	skipnc
  3616  0D3A  2D68               	goto	l3349
  3617  0D3B  30FF               	movlw	255
  3618  0D3C  00C1               	movwf	??___fladd
  3619  0D3D  00C2               	movwf	??___fladd+1
  3620  0D3E  00C3               	movwf	??___fladd+2
  3621  0D3F  00C4               	movwf	??___fladd+3
  3622  0D40  0839               	movf	___fladd@b,w
  3623  0D41  023D               	subwf	___fladd@a,w
  3624  0D42  00C5               	movwf	??___fladd+4
  3625  0D43  083A               	movf	___fladd@b+1,w
  3626  0D44  3B3E               	subwfb	___fladd@a+1,w
  3627  0D45  00C6               	movwf	??___fladd+5
  3628  0D46  083B               	movf	___fladd@b+2,w
  3629  0D47  3B3F               	subwfb	___fladd@a+2,w
  3630  0D48  00C7               	movwf	??___fladd+6
  3631  0D49  083C               	movf	___fladd@b+3,w
  3632  0D4A  3B40               	subwfb	___fladd@a+3,w
  3633  0D4B  00C8               	movwf	??___fladd+7
  3634  0D4C  0845               	movf	??___fladd+4,w
  3635  0D4D  07C1               	addwf	??___fladd,f
  3636  0D4E  0846               	movf	??___fladd+5,w
  3637  0D4F  3DC2               	addwfc	??___fladd+1,f
  3638  0D50  0847               	movf	??___fladd+6,w
  3639  0D51  3DC3               	addwfc	??___fladd+2,f
  3640  0D52  0848               	movf	??___fladd+7,w
  3641  0D53  3DC4               	addwfc	??___fladd+3,f
  3642  0D54  0844               	movf	??___fladd+3,w
  3643  0D55  00BC               	movwf	___fladd@b+3
  3644  0D56  0843               	movf	??___fladd+2,w
  3645  0D57  00BB               	movwf	___fladd@b+2
  3646  0D58  0842               	movf	??___fladd+1,w
  3647  0D59  00BA               	movwf	___fladd@b+1
  3648  0D5A  0841               	movf	??___fladd,w
  3649  0D5B  00B9               	movwf	___fladd@b
  3650  0D5C  3080               	movlw	128
  3651  0D5D  06C9               	xorwf	___fladd@signs,f
  3652  0D5E  09CC               	comf	___fladd@grs,f
  3653  0D5F  0FCC               	incfsz	___fladd@grs,f
  3654  0D60  2D70               	goto	l999
  3655  0D61  3001               	movlw	1
  3656  0D62  07B9               	addwf	___fladd@b,f
  3657  0D63  3000               	movlw	0
  3658  0D64  3DBA               	addwfc	___fladd@b+1,f
  3659  0D65  3DBB               	addwfc	___fladd@b+2,f
  3660  0D66  3DBC               	addwfc	___fladd@b+3,f
  3661  0D67  2D70               	goto	l999
  3662  0D68                     l3349:	
  3663  0D68  083D               	movf	___fladd@a,w
  3664  0D69  02B9               	subwf	___fladd@b,f
  3665  0D6A  083E               	movf	___fladd@a+1,w
  3666  0D6B  3BBA               	subwfb	___fladd@b+1,f
  3667  0D6C  083F               	movf	___fladd@a+2,w
  3668  0D6D  3BBB               	subwfb	___fladd@b+2,f
  3669  0D6E  0840               	movf	___fladd@a+3,w
  3670  0D6F  3BBC               	subwfb	___fladd@b+3,f
  3671  0D70                     l999:	
  3672  0D70  083C               	movf	___fladd@b+3,w
  3673  0D71  043B               	iorwf	___fladd@b+2,w
  3674  0D72  043A               	iorwf	___fladd@b+1,w
  3675  0D73  0439               	iorwf	___fladd@b,w
  3676  0D74  1D03               	skipz
  3677  0D75  2D8D               	goto	l3367
  3678  0D76  084C               	movf	___fladd@grs,w
  3679  0D77  1D03               	btfss	3,2
  3680  0D78  2D8D               	goto	l3367
  3681  0D79  01B9               	clrf	?___fladd
  3682  0D7A  01BA               	clrf	?___fladd+1
  3683  0D7B  01BB               	clrf	?___fladd+2
  3684  0D7C  01BC               	clrf	?___fladd+3
  3685  0D7D  0008               	return
  3686  0D7E                     l3355:	
  3687  0D7E  35B9               	lslf	___fladd@b,f
  3688  0D7F  0DBA               	rlf	___fladd@b+1,f
  3689  0D80  0DBB               	rlf	___fladd@b+2,f
  3690  0D81  0DBC               	rlf	___fladd@b+3,f
  3691  0D82  1BCC               	btfsc	___fladd@grs,7
  3692  0D83  1439               	bsf	___fladd@b,0
  3693  0D84  1C4C               	btfss	___fladd@grs,0
  3694  0D85  2D89               	goto	l1004
  3695  0D86  1403               	setc
  3696  0D87  0DCC               	rlf	___fladd@grs,f
  3697  0D88  2D8A               	goto	l3363
  3698  0D89                     l1004:	
  3699  0D89  35CC               	lslf	___fladd@grs,f
  3700  0D8A                     l3363:	
  3701  0D8A  084B               	movf	___fladd@bexp,w
  3702  0D8B  1D03               	btfss	3,2
  3703  0D8C  03CB               	decf	___fladd@bexp,f
  3704  0D8D                     l3367:	
  3705  0D8D  1FBB               	btfss	___fladd@b+2,7
  3706  0D8E  2D7E               	goto	l3355
  3707  0D8F                     l3369:	
  3708  0D8F  01CA               	clrf	___fladd@aexp
  3709  0D90  1FCC               	btfss	___fladd@grs,7
  3710  0D91  2D9A               	goto	l3379
  3711  0D92  084C               	movf	___fladd@grs,w
  3712  0D93  397F               	andlw	127
  3713  0D94  1903               	btfsc	3,2
  3714  0D95  1839               	btfsc	___fladd@b,0
  3715  0D96  2D98               	goto	l3375
  3716  0D97  2D9A               	goto	l3379
  3717  0D98                     l3375:	
  3718  0D98  01CA               	clrf	___fladd@aexp
  3719  0D99  0ACA               	incf	___fladd@aexp,f
  3720  0D9A                     l3379:	
  3721  0D9A  084A               	movf	___fladd@aexp,w
  3722  0D9B  1903               	btfsc	3,2
  3723  0D9C  2DAB               	goto	l3391
  3724  0D9D  3001               	movlw	1
  3725  0D9E  07B9               	addwf	___fladd@b,f
  3726  0D9F  3000               	movlw	0
  3727  0DA0  3DBA               	addwfc	___fladd@b+1,f
  3728  0DA1  3DBB               	addwfc	___fladd@b+2,f
  3729  0DA2  3DBC               	addwfc	___fladd@b+3,f
  3730  0DA3  1C3C               	btfss	___fladd@b+3,0
  3731  0DA4  2DAB               	goto	l3391
  3732  0DA5  37BC               	asrf	___fladd@b+3,f
  3733  0DA6  0CBB               	rrf	___fladd@b+2,f
  3734  0DA7  0CBA               	rrf	___fladd@b+1,f
  3735  0DA8  0CB9               	rrf	___fladd@b,f
  3736  0DA9  0F4B               	incfsz	___fladd@bexp,w
  3737  0DAA  0ACB               	incf	___fladd@bexp,f
  3738  0DAB                     l3391:	
  3739  0DAB  0A4B               	incf	___fladd@bexp,w
  3740  0DAC  1D03               	btfss	3,2
  3741  0DAD  084B               	movf	___fladd@bexp,w
  3742  0DAE  1D03               	btfss	3,2
  3743  0DAF  2DB7               	goto	l3399
  3744  0DB0  01B9               	clrf	___fladd@b
  3745  0DB1  01BA               	clrf	___fladd@b+1
  3746  0DB2  01BB               	clrf	___fladd@b+2
  3747  0DB3  01BC               	clrf	___fladd@b+3
  3748  0DB4  084B               	movf	___fladd@bexp,w
  3749  0DB5  1903               	btfsc	3,2
  3750  0DB6  01C9               	clrf	___fladd@signs
  3751  0DB7                     l3399:	
  3752  0DB7  1C4B               	btfss	___fladd@bexp,0
  3753  0DB8  2DBB               	goto	l1019
  3754  0DB9  17BB               	bsf	___fladd@b+2,7
  3755  0DBA  2DBC               	goto	l3403
  3756  0DBB                     l1019:	
  3757  0DBB  13BB               	bcf	___fladd@b+2,7
  3758  0DBC                     l3403:	
  3759  0DBC  364B               	lsrf	___fladd@bexp,w
  3760  0DBD  00BC               	movwf	___fladd@b+3
  3761  0DBE  1BC9               	btfsc	___fladd@signs,7
  3762  0DBF  17BC               	bsf	___fladd@b+3,7
  3763  0DC0  0008               	return
  3764  0DC1                     __end_of___fladd:	
  3765  0DC1                     __ptext24:	
  3766 ;; *************** function ___flmul *****************
  3767 ;; Defined at:
  3768 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  b               4    0[BANK0 ] long 
  3771 ;;  a               4    4[BANK0 ] long 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  prod            4   19[BANK0 ] struct .
  3774 ;;  grs             4   14[BANK0 ] unsigned long 
  3775 ;;  temp            2   23[BANK0 ] struct .
  3776 ;;  bexp            1   18[BANK0 ] unsigned char 
  3777 ;;  aexp            1   13[BANK0 ] unsigned char 
  3778 ;;  sign            1   12[BANK0 ] unsigned char 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  4    0[BANK0 ] unsigned char 
  3781 ;; Registers used:
  3782 ;;		wreg, status,2, status,0, pclath, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : 1F/0
  3785 ;;		On exit  : 1F/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3788 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3789 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3790 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3791 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3792 ;;Total ram usage:       25 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    2
  3795 ;; This function calls:
  3796 ;;		__Umul8_16
  3797 ;; This function is called by:
  3798 ;;		_get_30v_current
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           
  3803                           ;psect for function ___flmul
  3804  0DC1                     ___flmul:	
  3805                           
  3806                           ;incstack = 0
  3807                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  3808  0DC1  0823               	movf	___flmul@b+3,w
  3809  0DC2  00AC               	movwf	___flmul@sign
  3810  0DC3  3080               	movlw	128
  3811  0DC4  05AC               	andwf	___flmul@sign,f
  3812  0DC5  3523               	lslf	___flmul@b+3,w
  3813  0DC6  00B2               	movwf	___flmul@bexp
  3814  0DC7  1BA2               	btfsc	___flmul@b+2,7
  3815  0DC8  1432               	bsf	___flmul@bexp,0
  3816  0DC9  0832               	movf	___flmul@bexp,w
  3817  0DCA  1903               	btfsc	3,2
  3818  0DCB  2DD4               	goto	l1064
  3819  0DCC  0F32               	incfsz	___flmul@bexp,w
  3820  0DCD  2DD2               	goto	l1065
  3821  0DCE  01A0               	clrf	___flmul@b
  3822  0DCF  01A1               	clrf	___flmul@b+1
  3823  0DD0  01A2               	clrf	___flmul@b+2
  3824  0DD1  01A3               	clrf	___flmul@b+3
  3825  0DD2                     l1065:	
  3826  0DD2  17A2               	bsf	___flmul@b+2,7
  3827  0DD3  2DD8               	goto	l3425
  3828  0DD4                     l1064:	
  3829  0DD4  01A0               	clrf	___flmul@b
  3830  0DD5  01A1               	clrf	___flmul@b+1
  3831  0DD6  01A2               	clrf	___flmul@b+2
  3832  0DD7  01A3               	clrf	___flmul@b+3
  3833  0DD8                     l3425:	
  3834  0DD8  0827               	movf	___flmul@a+3,w
  3835  0DD9  3980               	andlw	128
  3836  0DDA  06AC               	xorwf	___flmul@sign,f
  3837  0DDB  3527               	lslf	___flmul@a+3,w
  3838  0DDC  00AD               	movwf	___flmul@aexp
  3839  0DDD  1BA6               	btfsc	___flmul@a+2,7
  3840  0DDE  142D               	bsf	___flmul@aexp,0
  3841  0DDF  082D               	movf	___flmul@aexp,w
  3842  0DE0  1903               	btfsc	3,2
  3843  0DE1  2DEA               	goto	l1068
  3844  0DE2  0F2D               	incfsz	___flmul@aexp,w
  3845  0DE3  2DE8               	goto	l1069
  3846  0DE4  01A4               	clrf	___flmul@a
  3847  0DE5  01A5               	clrf	___flmul@a+1
  3848  0DE6  01A6               	clrf	___flmul@a+2
  3849  0DE7  01A7               	clrf	___flmul@a+3
  3850  0DE8                     l1069:	
  3851  0DE8  17A6               	bsf	___flmul@a+2,7
  3852  0DE9  2DEE               	goto	l3437
  3853  0DEA                     l1068:	
  3854  0DEA  01A4               	clrf	___flmul@a
  3855  0DEB  01A5               	clrf	___flmul@a+1
  3856  0DEC  01A6               	clrf	___flmul@a+2
  3857  0DED  01A7               	clrf	___flmul@a+3
  3858  0DEE                     l3437:	
  3859  0DEE  082D               	movf	___flmul@aexp,w
  3860  0DEF  1D03               	btfss	3,2
  3861  0DF0  0832               	movf	___flmul@bexp,w
  3862  0DF1  1D03               	btfss	3,2
  3863  0DF2  2DF8               	goto	l3441
  3864  0DF3  01A0               	clrf	?___flmul
  3865  0DF4  01A1               	clrf	?___flmul+1
  3866  0DF5  01A2               	clrf	?___flmul+2
  3867  0DF6  01A3               	clrf	?___flmul+3
  3868  0DF7  0008               	return
  3869  0DF8                     l3441:	
  3870  0DF8  0820               	movf	___flmul@b,w
  3871  0DF9  00F0               	movwf	__Umul8_16@multiplicand
  3872  0DFA  0826               	movf	___flmul@a+2,w
  3873  0DFB  2743  318C         	fcall	__Umul8_16
  3874  0DFD  0871               	movf	?__Umul8_16+1,w
  3875  0DFE  00B8               	movwf	___flmul@temp+1
  3876  0DFF  0870               	movf	?__Umul8_16,w
  3877  0E00  00B7               	movwf	___flmul@temp
  3878  0E01  00AE               	movwf	___flmul@grs
  3879  0E02  01AF               	clrf	___flmul@grs+1
  3880  0E03  01B0               	clrf	___flmul@grs+2
  3881  0E04  01B1               	clrf	___flmul@grs+3
  3882  0E05  0838               	movf	___flmul@temp+1,w
  3883  0E06  00B3               	movwf	___flmul@prod
  3884  0E07  01B4               	clrf	___flmul@prod+1
  3885  0E08  01B5               	clrf	___flmul@prod+2
  3886  0E09  01B6               	clrf	___flmul@prod+3
  3887  0E0A  0821               	movf	___flmul@b+1,w
  3888  0E0B  00F0               	movwf	__Umul8_16@multiplicand
  3889  0E0C  0825               	movf	___flmul@a+1,w
  3890  0E0D  2743  318C         	fcall	__Umul8_16
  3891  0E0F  0871               	movf	?__Umul8_16+1,w
  3892  0E10  00B8               	movwf	___flmul@temp+1
  3893  0E11  0870               	movf	?__Umul8_16,w
  3894  0E12  00B7               	movwf	___flmul@temp
  3895  0E13  07AE               	addwf	___flmul@grs,f
  3896  0E14  3001               	movlw	1
  3897  0E15  1803               	skipnc
  3898  0E16  07AF               	addwf	___flmul@grs+1,f
  3899  0E17  1803               	skipnc
  3900  0E18  07B0               	addwf	___flmul@grs+2,f
  3901  0E19  1803               	skipnc
  3902  0E1A  07B1               	addwf	___flmul@grs+3,f
  3903  0E1B  0838               	movf	___flmul@temp+1,w
  3904  0E1C  07B3               	addwf	___flmul@prod,f
  3905  0E1D  3001               	movlw	1
  3906  0E1E  1803               	skipnc
  3907  0E1F  07B4               	addwf	___flmul@prod+1,f
  3908  0E20  1803               	skipnc
  3909  0E21  07B5               	addwf	___flmul@prod+2,f
  3910  0E22  1803               	skipnc
  3911  0E23  07B6               	addwf	___flmul@prod+3,f
  3912  0E24  0822               	movf	___flmul@b+2,w
  3913  0E25  00F0               	movwf	__Umul8_16@multiplicand
  3914  0E26  0824               	movf	___flmul@a,w
  3915  0E27  2743  318C         	fcall	__Umul8_16
  3916  0E29  0871               	movf	?__Umul8_16+1,w
  3917  0E2A  00B8               	movwf	___flmul@temp+1
  3918  0E2B  0870               	movf	?__Umul8_16,w
  3919  0E2C  00B7               	movwf	___flmul@temp
  3920  0E2D  07AE               	addwf	___flmul@grs,f
  3921  0E2E  3001               	movlw	1
  3922  0E2F  1803               	skipnc
  3923  0E30  07AF               	addwf	___flmul@grs+1,f
  3924  0E31  1803               	skipnc
  3925  0E32  07B0               	addwf	___flmul@grs+2,f
  3926  0E33  1803               	skipnc
  3927  0E34  07B1               	addwf	___flmul@grs+3,f
  3928  0E35  0838               	movf	___flmul@temp+1,w
  3929  0E36  07B3               	addwf	___flmul@prod,f
  3930  0E37  3001               	movlw	1
  3931  0E38  1803               	skipnc
  3932  0E39  07B4               	addwf	___flmul@prod+1,f
  3933  0E3A  1803               	skipnc
  3934  0E3B  07B5               	addwf	___flmul@prod+2,f
  3935  0E3C  1803               	skipnc
  3936  0E3D  07B6               	addwf	___flmul@prod+3,f
  3937  0E3E  0830               	movf	___flmul@grs+2,w
  3938  0E3F  00B1               	movwf	___flmul@grs+3
  3939  0E40  082F               	movf	___flmul@grs+1,w
  3940  0E41  00B0               	movwf	___flmul@grs+2
  3941  0E42  082E               	movf	___flmul@grs,w
  3942  0E43  00AF               	movwf	___flmul@grs+1
  3943  0E44  01AE               	clrf	___flmul@grs
  3944  0E45  0821               	movf	___flmul@b+1,w
  3945  0E46  00F0               	movwf	__Umul8_16@multiplicand
  3946  0E47  0824               	movf	___flmul@a,w
  3947  0E48  2743  318C         	fcall	__Umul8_16
  3948  0E4A  0871               	movf	?__Umul8_16+1,w
  3949  0E4B  00B8               	movwf	___flmul@temp+1
  3950  0E4C  0870               	movf	?__Umul8_16,w
  3951  0E4D  00B7               	movwf	___flmul@temp
  3952  0E4E  07AE               	addwf	___flmul@grs,f
  3953  0E4F  0838               	movf	___flmul@temp+1,w
  3954  0E50  3DAF               	addwfc	___flmul@grs+1,f
  3955  0E51  3000               	movlw	0
  3956  0E52  3DB0               	addwfc	___flmul@grs+2,f
  3957  0E53  3DB1               	addwfc	___flmul@grs+3,f
  3958  0E54  0820               	movf	___flmul@b,w
  3959  0E55  00F0               	movwf	__Umul8_16@multiplicand
  3960  0E56  0825               	movf	___flmul@a+1,w
  3961  0E57  2743  318C         	fcall	__Umul8_16
  3962  0E59  0871               	movf	?__Umul8_16+1,w
  3963  0E5A  00B8               	movwf	___flmul@temp+1
  3964  0E5B  0870               	movf	?__Umul8_16,w
  3965  0E5C  00B7               	movwf	___flmul@temp
  3966  0E5D  07AE               	addwf	___flmul@grs,f
  3967  0E5E  0838               	movf	___flmul@temp+1,w
  3968  0E5F  3DAF               	addwfc	___flmul@grs+1,f
  3969  0E60  3000               	movlw	0
  3970  0E61  3DB0               	addwfc	___flmul@grs+2,f
  3971  0E62  3DB1               	addwfc	___flmul@grs+3,f
  3972  0E63  0830               	movf	___flmul@grs+2,w
  3973  0E64  00B1               	movwf	___flmul@grs+3
  3974  0E65  082F               	movf	___flmul@grs+1,w
  3975  0E66  00B0               	movwf	___flmul@grs+2
  3976  0E67  082E               	movf	___flmul@grs,w
  3977  0E68  00AF               	movwf	___flmul@grs+1
  3978  0E69  01AE               	clrf	___flmul@grs
  3979  0E6A  0820               	movf	___flmul@b,w
  3980  0E6B  00F0               	movwf	__Umul8_16@multiplicand
  3981  0E6C  0824               	movf	___flmul@a,w
  3982  0E6D  2743  318C         	fcall	__Umul8_16
  3983  0E6F  0871               	movf	?__Umul8_16+1,w
  3984  0E70  00B8               	movwf	___flmul@temp+1
  3985  0E71  0870               	movf	?__Umul8_16,w
  3986  0E72  00B7               	movwf	___flmul@temp
  3987  0E73  07AE               	addwf	___flmul@grs,f
  3988  0E74  0838               	movf	___flmul@temp+1,w
  3989  0E75  3DAF               	addwfc	___flmul@grs+1,f
  3990  0E76  3000               	movlw	0
  3991  0E77  3DB0               	addwfc	___flmul@grs+2,f
  3992  0E78  3DB1               	addwfc	___flmul@grs+3,f
  3993  0E79  0821               	movf	___flmul@b+1,w
  3994  0E7A  00F0               	movwf	__Umul8_16@multiplicand
  3995  0E7B  0826               	movf	___flmul@a+2,w
  3996  0E7C  2743  318C         	fcall	__Umul8_16
  3997  0E7E  0871               	movf	?__Umul8_16+1,w
  3998  0E7F  00B8               	movwf	___flmul@temp+1
  3999  0E80  0870               	movf	?__Umul8_16,w
  4000  0E81  00B7               	movwf	___flmul@temp
  4001  0E82  07B3               	addwf	___flmul@prod,f
  4002  0E83  0838               	movf	___flmul@temp+1,w
  4003  0E84  3DB4               	addwfc	___flmul@prod+1,f
  4004  0E85  3000               	movlw	0
  4005  0E86  3DB5               	addwfc	___flmul@prod+2,f
  4006  0E87  3DB6               	addwfc	___flmul@prod+3,f
  4007  0E88  0822               	movf	___flmul@b+2,w
  4008  0E89  00F0               	movwf	__Umul8_16@multiplicand
  4009  0E8A  0825               	movf	___flmul@a+1,w
  4010  0E8B  2743  318C         	fcall	__Umul8_16
  4011  0E8D  0871               	movf	?__Umul8_16+1,w
  4012  0E8E  00B8               	movwf	___flmul@temp+1
  4013  0E8F  0870               	movf	?__Umul8_16,w
  4014  0E90  00B7               	movwf	___flmul@temp
  4015  0E91  07B3               	addwf	___flmul@prod,f
  4016  0E92  0838               	movf	___flmul@temp+1,w
  4017  0E93  3DB4               	addwfc	___flmul@prod+1,f
  4018  0E94  3000               	movlw	0
  4019  0E95  3DB5               	addwfc	___flmul@prod+2,f
  4020  0E96  3DB6               	addwfc	___flmul@prod+3,f
  4021  0E97  0822               	movf	___flmul@b+2,w
  4022  0E98  00F0               	movwf	__Umul8_16@multiplicand
  4023  0E99  0826               	movf	___flmul@a+2,w
  4024  0E9A  2743  318C         	fcall	__Umul8_16
  4025  0E9C  0871               	movf	?__Umul8_16+1,w
  4026  0E9D  00B8               	movwf	___flmul@temp+1
  4027  0E9E  0870               	movf	?__Umul8_16,w
  4028  0E9F  00B7               	movwf	___flmul@temp
  4029  0EA0  00A8               	movwf	??___flmul
  4030  0EA1  0838               	movf	___flmul@temp+1,w
  4031  0EA2  00A9               	movwf	??___flmul+1
  4032  0EA3  01AA               	clrf	??___flmul+2
  4033  0EA4  01AB               	clrf	??___flmul+3
  4034  0EA5  082A               	movf	??___flmul+2,w
  4035  0EA6  00AB               	movwf	??___flmul+3
  4036  0EA7  0829               	movf	??___flmul+1,w
  4037  0EA8  00AA               	movwf	??___flmul+2
  4038  0EA9  0828               	movf	??___flmul,w
  4039  0EAA  00A9               	movwf	??___flmul+1
  4040  0EAB  01A8               	clrf	??___flmul
  4041  0EAC  0828               	movf	??___flmul,w
  4042  0EAD  07B3               	addwf	___flmul@prod,f
  4043  0EAE  0829               	movf	??___flmul+1,w
  4044  0EAF  3DB4               	addwfc	___flmul@prod+1,f
  4045  0EB0  082A               	movf	??___flmul+2,w
  4046  0EB1  3DB5               	addwfc	___flmul@prod+2,f
  4047  0EB2  082B               	movf	??___flmul+3,w
  4048  0EB3  3DB6               	addwfc	___flmul@prod+3,f
  4049  0EB4  0831               	movf	___flmul@grs+3,w
  4050  0EB5  07B3               	addwf	___flmul@prod,f
  4051  0EB6  3001               	movlw	1
  4052  0EB7  1803               	skipnc
  4053  0EB8  07B4               	addwf	___flmul@prod+1,f
  4054  0EB9  1803               	skipnc
  4055  0EBA  07B5               	addwf	___flmul@prod+2,f
  4056  0EBB  1803               	skipnc
  4057  0EBC  07B6               	addwf	___flmul@prod+3,f
  4058  0EBD  0830               	movf	___flmul@grs+2,w
  4059  0EBE  00B1               	movwf	___flmul@grs+3
  4060  0EBF  082F               	movf	___flmul@grs+1,w
  4061  0EC0  00B0               	movwf	___flmul@grs+2
  4062  0EC1  082E               	movf	___flmul@grs,w
  4063  0EC2  00AF               	movwf	___flmul@grs+1
  4064  0EC3  01AE               	clrf	___flmul@grs
  4065  0EC4  0832               	movf	___flmul@bexp,w
  4066  0EC5  00B7               	movwf	___flmul@temp
  4067  0EC6  01B8               	clrf	___flmul@temp+1
  4068  0EC7  082D               	movf	___flmul@aexp,w
  4069  0EC8  07B7               	addwf	___flmul@temp,f
  4070  0EC9  1803               	skipnc
  4071  0ECA  0AB8               	incf	___flmul@temp+1,f
  4072  0ECB  3082               	movlw	-126
  4073  0ECC                     L26:	
  4074  0ECC  07B7               	addwf	___flmul@temp,f
  4075  0ECD  1C03               	skipc
  4076  0ECE  03B8               	decf	___flmul@temp+1,f
  4077  0ECF  1BB5               	btfsc	___flmul@prod+2,7
  4078  0ED0  2EDD               	goto	l3489
  4079  0ED1  35B3               	lslf	___flmul@prod,f
  4080  0ED2  0DB4               	rlf	___flmul@prod+1,f
  4081  0ED3  0DB5               	rlf	___flmul@prod+2,f
  4082  0ED4  0DB6               	rlf	___flmul@prod+3,f
  4083  0ED5  1BB1               	btfsc	___flmul@grs+3,7
  4084  0ED6  1433               	bsf	___flmul@prod,0
  4085  0ED7  30FF               	movlw	-1
  4086  0ED8  35AE               	lslf	___flmul@grs,f
  4087  0ED9  0DAF               	rlf	___flmul@grs+1,f
  4088  0EDA  0DB0               	rlf	___flmul@grs+2,f
  4089  0EDB  0DB1               	rlf	___flmul@grs+3,f
  4090  0EDC  2ECC               	goto	L26
  4091  0EDD                     l3489:	
  4092  0EDD  01AD               	clrf	___flmul@aexp
  4093  0EDE  1FB1               	btfss	___flmul@grs+3,7
  4094  0EDF  2EF2               	goto	l3499
  4095  0EE0  082E               	movf	___flmul@grs,w
  4096  0EE1  00A8               	movwf	??___flmul
  4097  0EE2  082F               	movf	___flmul@grs+1,w
  4098  0EE3  00A9               	movwf	??___flmul+1
  4099  0EE4  0830               	movf	___flmul@grs+2,w
  4100  0EE5  00AA               	movwf	??___flmul+2
  4101  0EE6  307F               	movlw	127
  4102  0EE7  0531               	andwf	___flmul@grs+3,w
  4103  0EE8  00AB               	movwf	??___flmul+3
  4104  0EE9  042A               	iorwf	??___flmul+2,w
  4105  0EEA  0429               	iorwf	??___flmul+1,w
  4106  0EEB  0428               	iorwf	??___flmul,w
  4107  0EEC  1903               	skipnz
  4108  0EED  1833               	btfsc	___flmul@prod,0
  4109  0EEE  2EF0               	goto	l3495
  4110  0EEF  2EF2               	goto	l3499
  4111  0EF0                     l3495:	
  4112  0EF0  01AD               	clrf	___flmul@aexp
  4113  0EF1  0AAD               	incf	___flmul@aexp,f
  4114  0EF2                     l3499:	
  4115  0EF2  082D               	movf	___flmul@aexp,w
  4116  0EF3  1903               	btfsc	3,2
  4117  0EF4  2F04               	goto	l3509
  4118  0EF5  3001               	movlw	1
  4119  0EF6  07B3               	addwf	___flmul@prod,f
  4120  0EF7  3000               	movlw	0
  4121  0EF8  3DB4               	addwfc	___flmul@prod+1,f
  4122  0EF9  3DB5               	addwfc	___flmul@prod+2,f
  4123  0EFA  3DB6               	addwfc	___flmul@prod+3,f
  4124  0EFB  1C36               	btfss	___flmul@prod+3,0
  4125  0EFC  2F04               	goto	l3509
  4126  0EFD  37B6               	asrf	___flmul@prod+3,f
  4127  0EFE  0CB5               	rrf	___flmul@prod+2,f
  4128  0EFF  0CB4               	rrf	___flmul@prod+1,f
  4129  0F00  0CB3               	rrf	___flmul@prod,f
  4130  0F01  0AB7               	incf	___flmul@temp,f
  4131  0F02  1903               	skipnz
  4132  0F03  0AB8               	incf	___flmul@temp+1,f
  4133  0F04                     l3509:	
  4134  0F04  0838               	movf	___flmul@temp+1,w
  4135  0F05  3A80               	xorlw	128
  4136  0F06  00A8               	movwf	??___flmul
  4137  0F07  3080               	movlw	128
  4138  0F08  0228               	subwf	??___flmul,w
  4139  0F09  1D03               	skipz
  4140  0F0A  2F0D               	goto	u3605
  4141  0F0B  30FF               	movlw	255
  4142  0F0C  0237               	subwf	___flmul@temp,w
  4143  0F0D                     u3605:	
  4144  0F0D  1C03               	skipc
  4145  0F0E  2F17               	goto	l3513
  4146  0F0F  307F               	movlw	127
  4147  0F10  0020               	movlb	0	; select bank0
  4148  0F11  00B6               	movwf	___flmul@prod+3
  4149  0F12  3080               	movlw	128
  4150  0F13  00B5               	movwf	___flmul@prod+2
  4151  0F14  01B4               	clrf	___flmul@prod+1
  4152  0F15  01B3               	clrf	___flmul@prod
  4153  0F16  2F38               	goto	l1086
  4154  0F17                     l3513:	
  4155  0F17  0020               	movlb	0	; select bank0
  4156  0F18  0838               	movf	___flmul@temp+1,w
  4157  0F19  3A80               	xorlw	128
  4158  0F1A  00A8               	movwf	??___flmul
  4159  0F1B  3080               	movlw	128
  4160  0F1C  0228               	subwf	??___flmul,w
  4161  0F1D  1D03               	skipz
  4162  0F1E  2F21               	goto	u3615
  4163  0F1F  3001               	movlw	1
  4164  0F20  0237               	subwf	___flmul@temp,w
  4165  0F21                     u3615:	
  4166  0F21  1803               	skipnc
  4167  0F22  2F2A               	goto	l3519
  4168  0F23  0020               	movlb	0	; select bank0
  4169  0F24  01B3               	clrf	___flmul@prod
  4170  0F25  01B4               	clrf	___flmul@prod+1
  4171  0F26  01B5               	clrf	___flmul@prod+2
  4172  0F27  01B6               	clrf	___flmul@prod+3
  4173  0F28  01AC               	clrf	___flmul@sign
  4174  0F29  2F38               	goto	l1086
  4175  0F2A                     l3519:	
  4176  0F2A  0020               	movlb	0	; select bank0
  4177  0F2B  0837               	movf	___flmul@temp,w
  4178  0F2C  00B2               	movwf	___flmul@bexp
  4179  0F2D  30FF               	movlw	255
  4180  0F2E  05B3               	andwf	___flmul@prod,f
  4181  0F2F  05B4               	andwf	___flmul@prod+1,f
  4182  0F30  307F               	movlw	127
  4183  0F31  05B5               	andwf	___flmul@prod+2,f
  4184  0F32  3000               	movlw	0
  4185  0F33  01B6               	clrf	___flmul@prod+3
  4186  0F34  1832               	btfsc	___flmul@bexp,0
  4187  0F35  17B5               	bsf	___flmul@prod+2,7
  4188  0F36  3632               	lsrf	___flmul@bexp,w
  4189  0F37  00B6               	movwf	___flmul@prod+3
  4190  0F38                     l1086:	
  4191  0F38  082C               	movf	___flmul@sign,w
  4192  0F39  04B6               	iorwf	___flmul@prod+3,f
  4193  0F3A  0836               	movf	___flmul@prod+3,w
  4194  0F3B  00A3               	movwf	?___flmul+3
  4195  0F3C  0835               	movf	___flmul@prod+2,w
  4196  0F3D  00A2               	movwf	?___flmul+2
  4197  0F3E  0834               	movf	___flmul@prod+1,w
  4198  0F3F  00A1               	movwf	?___flmul+1
  4199  0F40  0833               	movf	___flmul@prod,w
  4200  0F41  00A0               	movwf	?___flmul
  4201  0F42  0008               	return
  4202  0F43                     __end_of___flmul:	
  4203  0F43                     __ptext25:	
  4204 ;; *************** function __Umul8_16 *****************
  4205 ;; Defined at:
  4206 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8_16.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  multiplier      1    wreg     unsigned char 
  4209 ;;  multiplicand    1    0[COMMON] unsigned char 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  multiplier      1    5[COMMON] unsigned char 
  4212 ;;  word_mpld       2    6[COMMON] unsigned int 
  4213 ;;  product         2    3[COMMON] unsigned int 
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  2    0[COMMON] unsigned int 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2, status,0
  4218 ;; Tracked objects:
  4219 ;;		On entry : 1F/0
  4220 ;;		On exit  : 1F/0
  4221 ;;		Unchanged: 1F/0
  4222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4223 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4224 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4226 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4227 ;;Total ram usage:        8 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    1
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		___flmul
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           
  4238                           ;psect for function __Umul8_16
  4239  0F43                     __Umul8_16:	
  4240                           
  4241                           ;incstack = 0
  4242                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4243                           ;__Umul8_16@multiplier stored from wreg
  4244  0F43  00F5               	movwf	__Umul8_16@multiplier
  4245  0F44  01F3               	clrf	__Umul8_16@product
  4246  0F45  01F4               	clrf	__Umul8_16@product+1
  4247  0F46  0870               	movf	__Umul8_16@multiplicand,w
  4248  0F47  00F6               	movwf	__Umul8_16@word_mpld
  4249  0F48  01F7               	clrf	__Umul8_16@word_mpld+1
  4250  0F49  1C75               	btfss	__Umul8_16@multiplier,0
  4251  0F4A  2F4F               	goto	l3025
  4252  0F4B  0876               	movf	__Umul8_16@word_mpld,w
  4253  0F4C  07F3               	addwf	__Umul8_16@product,f
  4254  0F4D  0877               	movf	__Umul8_16@word_mpld+1,w
  4255  0F4E  3DF4               	addwfc	__Umul8_16@product+1,f
  4256  0F4F                     l3025:	
  4257  0F4F  35F6               	lslf	__Umul8_16@word_mpld,f
  4258  0F50  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4259  0F51  1CF5               	btfss	__Umul8_16@multiplier,1
  4260  0F52  2F57               	goto	l3031
  4261  0F53  0876               	movf	__Umul8_16@word_mpld,w
  4262  0F54  07F3               	addwf	__Umul8_16@product,f
  4263  0F55  0877               	movf	__Umul8_16@word_mpld+1,w
  4264  0F56  3DF4               	addwfc	__Umul8_16@product+1,f
  4265  0F57                     l3031:	
  4266  0F57  35F6               	lslf	__Umul8_16@word_mpld,f
  4267  0F58  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4268  0F59  1D75               	btfss	__Umul8_16@multiplier,2
  4269  0F5A  2F5F               	goto	l3037
  4270  0F5B  0876               	movf	__Umul8_16@word_mpld,w
  4271  0F5C  07F3               	addwf	__Umul8_16@product,f
  4272  0F5D  0877               	movf	__Umul8_16@word_mpld+1,w
  4273  0F5E  3DF4               	addwfc	__Umul8_16@product+1,f
  4274  0F5F                     l3037:	
  4275  0F5F  35F6               	lslf	__Umul8_16@word_mpld,f
  4276  0F60  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4277  0F61  1DF5               	btfss	__Umul8_16@multiplier,3
  4278  0F62  2F67               	goto	l3043
  4279  0F63  0876               	movf	__Umul8_16@word_mpld,w
  4280  0F64  07F3               	addwf	__Umul8_16@product,f
  4281  0F65  0877               	movf	__Umul8_16@word_mpld+1,w
  4282  0F66  3DF4               	addwfc	__Umul8_16@product+1,f
  4283  0F67                     l3043:	
  4284  0F67  35F6               	lslf	__Umul8_16@word_mpld,f
  4285  0F68  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4286  0F69  1E75               	btfss	__Umul8_16@multiplier,4
  4287  0F6A  2F6F               	goto	l3049
  4288  0F6B  0876               	movf	__Umul8_16@word_mpld,w
  4289  0F6C  07F3               	addwf	__Umul8_16@product,f
  4290  0F6D  0877               	movf	__Umul8_16@word_mpld+1,w
  4291  0F6E  3DF4               	addwfc	__Umul8_16@product+1,f
  4292  0F6F                     l3049:	
  4293  0F6F  35F6               	lslf	__Umul8_16@word_mpld,f
  4294  0F70  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4295  0F71  1EF5               	btfss	__Umul8_16@multiplier,5
  4296  0F72  2F77               	goto	l3055
  4297  0F73  0876               	movf	__Umul8_16@word_mpld,w
  4298  0F74  07F3               	addwf	__Umul8_16@product,f
  4299  0F75  0877               	movf	__Umul8_16@word_mpld+1,w
  4300  0F76  3DF4               	addwfc	__Umul8_16@product+1,f
  4301  0F77                     l3055:	
  4302  0F77  35F6               	lslf	__Umul8_16@word_mpld,f
  4303  0F78  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4304  0F79  1F75               	btfss	__Umul8_16@multiplier,6
  4305  0F7A  2F7F               	goto	l3061
  4306  0F7B  0876               	movf	__Umul8_16@word_mpld,w
  4307  0F7C  07F3               	addwf	__Umul8_16@product,f
  4308  0F7D  0877               	movf	__Umul8_16@word_mpld+1,w
  4309  0F7E  3DF4               	addwfc	__Umul8_16@product+1,f
  4310  0F7F                     l3061:	
  4311  0F7F  35F6               	lslf	__Umul8_16@word_mpld,f
  4312  0F80  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4313  0F81  1FF5               	btfss	__Umul8_16@multiplier,7
  4314  0F82  2F87               	goto	l1118
  4315  0F83  0876               	movf	__Umul8_16@word_mpld,w
  4316  0F84  07F3               	addwf	__Umul8_16@product,f
  4317  0F85  0877               	movf	__Umul8_16@word_mpld+1,w
  4318  0F86  3DF4               	addwfc	__Umul8_16@product+1,f
  4319  0F87                     l1118:	
  4320  0F87  0874               	movf	__Umul8_16@product+1,w
  4321  0F88  00F1               	movwf	?__Umul8_16+1
  4322  0F89  0873               	movf	__Umul8_16@product,w
  4323  0F8A  00F0               	movwf	?__Umul8_16
  4324  0F8B  0008               	return
  4325  0F8C                     __end_of__Umul8_16:	
  4326  0F8C                     __ptext22:	
  4327 ;; *************** function ___xxtofl *****************
  4328 ;; Defined at:
  4329 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  sign            1    wreg     unsigned char 
  4332 ;;  val             4    0[COMMON] long 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  sign            1    8[COMMON] unsigned char 
  4335 ;;  arg             4   10[COMMON] unsigned long 
  4336 ;;  exp             1    9[COMMON] unsigned char 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  4    0[COMMON] unsigned char 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0
  4341 ;; Tracked objects:
  4342 ;;		On entry : 1F/0
  4343 ;;		On exit  : 1F/0
  4344 ;;		Unchanged: 1F/0
  4345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4347 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4348 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4349 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4350 ;;Total ram usage:       14 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; Hardware stack levels required when called:    1
  4353 ;; This function calls:
  4354 ;;		Nothing
  4355 ;; This function is called by:
  4356 ;;		_get_30v_current
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           
  4361                           ;psect for function ___xxtofl
  4362  0F8C                     ___xxtofl:	
  4363                           
  4364                           ;incstack = 0
  4365                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4366                           ;___xxtofl@sign stored from wreg
  4367  0F8C  00F8               	movwf	___xxtofl@sign
  4368  0F8D  0878               	movf	___xxtofl@sign,w
  4369  0F8E  1D03               	btfss	3,2
  4370  0F8F  1FF3               	btfss	___xxtofl@val+3,7
  4371  0F90  2FA1               	goto	l3537
  4372  0F91  0970               	comf	___xxtofl@val,w
  4373  0F92  00FA               	movwf	___xxtofl@arg
  4374  0F93  0971               	comf	___xxtofl@val+1,w
  4375  0F94  00FB               	movwf	___xxtofl@arg+1
  4376  0F95  0972               	comf	___xxtofl@val+2,w
  4377  0F96  00FC               	movwf	___xxtofl@arg+2
  4378  0F97  0973               	comf	___xxtofl@val+3,w
  4379  0F98  00FD               	movwf	___xxtofl@arg+3
  4380  0F99  0AFA               	incf	___xxtofl@arg,f
  4381  0F9A  1903               	skipnz
  4382  0F9B  0AFB               	incf	___xxtofl@arg+1,f
  4383  0F9C  1903               	skipnz
  4384  0F9D  0AFC               	incf	___xxtofl@arg+2,f
  4385  0F9E  1903               	skipnz
  4386  0F9F  0AFD               	incf	___xxtofl@arg+3,f
  4387  0FA0  2FA9               	goto	l1093
  4388  0FA1                     l3537:	
  4389  0FA1  0873               	movf	___xxtofl@val+3,w
  4390  0FA2  00FD               	movwf	___xxtofl@arg+3
  4391  0FA3  0872               	movf	___xxtofl@val+2,w
  4392  0FA4  00FC               	movwf	___xxtofl@arg+2
  4393  0FA5  0871               	movf	___xxtofl@val+1,w
  4394  0FA6  00FB               	movwf	___xxtofl@arg+1
  4395  0FA7  0870               	movf	___xxtofl@val,w
  4396  0FA8  00FA               	movwf	___xxtofl@arg
  4397  0FA9                     l1093:	
  4398  0FA9  0873               	movf	___xxtofl@val+3,w
  4399  0FAA  0472               	iorwf	___xxtofl@val+2,w
  4400  0FAB  0471               	iorwf	___xxtofl@val+1,w
  4401  0FAC  0470               	iorwf	___xxtofl@val,w
  4402  0FAD  1D03               	skipz
  4403  0FAE  2FB4               	goto	l3541
  4404  0FAF  01F0               	clrf	?___xxtofl
  4405  0FB0  01F1               	clrf	?___xxtofl+1
  4406  0FB1  01F2               	clrf	?___xxtofl+2
  4407  0FB2  01F3               	clrf	?___xxtofl+3
  4408  0FB3  0008               	return
  4409  0FB4                     l3541:	
  4410  0FB4  3096               	movlw	150
  4411  0FB5  00F9               	movwf	___xxtofl@exp
  4412  0FB6                     l3545:	
  4413  0FB6  30FE               	movlw	254
  4414  0FB7  057D               	andwf	___xxtofl@arg+3,w
  4415  0FB8  1903               	btfsc	3,2
  4416  0FB9  2FCB               	goto	l3553
  4417  0FBA  0AF9               	incf	___xxtofl@exp,f
  4418  0FBB  36FD               	lsrf	___xxtofl@arg+3,f
  4419  0FBC  0CFC               	rrf	___xxtofl@arg+2,f
  4420  0FBD  0CFB               	rrf	___xxtofl@arg+1,f
  4421  0FBE  0CFA               	rrf	___xxtofl@arg,f
  4422  0FBF  2FB6               	goto	l3545
  4423  0FC0                     l3547:	
  4424  0FC0  3001               	movlw	1
  4425  0FC1  0AF9               	incf	___xxtofl@exp,f
  4426  0FC2  07FA               	addwf	___xxtofl@arg,f
  4427  0FC3  3000               	movlw	0
  4428  0FC4  3DFB               	addwfc	___xxtofl@arg+1,f
  4429  0FC5  3DFC               	addwfc	___xxtofl@arg+2,f
  4430  0FC6  3DFD               	addwfc	___xxtofl@arg+3,f
  4431  0FC7  36FD               	lsrf	___xxtofl@arg+3,f
  4432  0FC8  0CFC               	rrf	___xxtofl@arg+2,f
  4433  0FC9  0CFB               	rrf	___xxtofl@arg+1,f
  4434  0FCA  0CFA               	rrf	___xxtofl@arg,f
  4435  0FCB                     l3553:	
  4436  0FCB  30FF               	movlw	255
  4437  0FCC  057D               	andwf	___xxtofl@arg+3,w
  4438  0FCD  1903               	btfsc	3,2
  4439  0FCE  2FD9               	goto	l3557
  4440  0FCF  2FC0               	goto	l3547
  4441  0FD0                     l3559:	
  4442  0FD0  3002               	movlw	2
  4443  0FD1  0279               	subwf	___xxtofl@exp,w
  4444  0FD2  1C03               	btfss	3,0
  4445  0FD3  2FDB               	goto	l1106
  4446  0FD4  03F9               	decf	___xxtofl@exp,f
  4447  0FD5  35FA               	lslf	___xxtofl@arg,f
  4448  0FD6  0DFB               	rlf	___xxtofl@arg+1,f
  4449  0FD7  0DFC               	rlf	___xxtofl@arg+2,f
  4450  0FD8  0DFD               	rlf	___xxtofl@arg+3,f
  4451  0FD9                     l3557:	
  4452  0FD9  1FFC               	btfss	___xxtofl@arg+2,7
  4453  0FDA  2FD0               	goto	l3559
  4454  0FDB                     l1106:	
  4455  0FDB  1879               	btfsc	___xxtofl@exp,0
  4456  0FDC  2FE4               	goto	l3563
  4457  0FDD  30FF               	movlw	255
  4458  0FDE  05FA               	andwf	___xxtofl@arg,f
  4459  0FDF  05FB               	andwf	___xxtofl@arg+1,f
  4460  0FE0  307F               	movlw	127
  4461  0FE1  05FC               	andwf	___xxtofl@arg+2,f
  4462  0FE2  30FF               	movlw	255
  4463  0FE3  05FD               	andwf	___xxtofl@arg+3,f
  4464  0FE4                     l3563:	
  4465  0FE4  36F9               	lsrf	___xxtofl@exp,f
  4466  0FE5  0879               	movf	___xxtofl@exp,w
  4467  0FE6  00F7               	movwf	??___xxtofl+3
  4468  0FE7  01F6               	clrf	??___xxtofl+2
  4469  0FE8  01F5               	clrf	??___xxtofl+1
  4470  0FE9  01F4               	clrf	??___xxtofl
  4471  0FEA  0874               	movf	??___xxtofl,w
  4472  0FEB  04FA               	iorwf	___xxtofl@arg,f
  4473  0FEC  0875               	movf	??___xxtofl+1,w
  4474  0FED  04FB               	iorwf	___xxtofl@arg+1,f
  4475  0FEE  0876               	movf	??___xxtofl+2,w
  4476  0FEF  04FC               	iorwf	___xxtofl@arg+2,f
  4477  0FF0  0877               	movf	??___xxtofl+3,w
  4478  0FF1  04FD               	iorwf	___xxtofl@arg+3,f
  4479  0FF2  0878               	movf	___xxtofl@sign,w
  4480  0FF3  1D03               	btfss	3,2
  4481  0FF4  1FF3               	btfss	___xxtofl@val+3,7
  4482  0FF5  2FF7               	goto	l3571
  4483  0FF6  17FD               	bsf	___xxtofl@arg+3,7
  4484  0FF7                     l3571:	
  4485  0FF7  087D               	movf	___xxtofl@arg+3,w
  4486  0FF8  00F3               	movwf	?___xxtofl+3
  4487  0FF9  087C               	movf	___xxtofl@arg+2,w
  4488  0FFA  00F2               	movwf	?___xxtofl+2
  4489  0FFB  087B               	movf	___xxtofl@arg+1,w
  4490  0FFC  00F1               	movwf	?___xxtofl+1
  4491  0FFD  087A               	movf	___xxtofl@arg,w
  4492  0FFE  00F0               	movwf	?___xxtofl
  4493  0FFF  0008               	return
  4494  1000                     __end_of___xxtofl:	
  4495                           
  4496                           	psect	text23
  4497  086D                     __ptext23:	
  4498 ;; *************** function ___fltol *****************
  4499 ;; Defined at:
  4500 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;  f1              4   45[BANK0 ] unsigned char 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  exp1            1   54[BANK0 ] unsigned char 
  4505 ;;  sign1           1   53[BANK0 ] unsigned char 
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  4   45[BANK0 ] long 
  4508 ;; Registers used:
  4509 ;;		wreg, status,2, status,0
  4510 ;; Tracked objects:
  4511 ;;		On entry : 1F/0
  4512 ;;		On exit  : 1F/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4515 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4516 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4517 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4518 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4519 ;;Total ram usage:       10 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; Hardware stack levels required when called:    1
  4522 ;; This function calls:
  4523 ;;		Nothing
  4524 ;; This function is called by:
  4525 ;;		_get_30v_current
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529                           
  4530                           ;psect for function ___fltol
  4531  086D                     ___fltol:	
  4532                           
  4533                           ;incstack = 0
  4534                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4535  086D  084D               	movf	___fltol@f1,w
  4536  086E  00D1               	movwf	??___fltol
  4537  086F  084E               	movf	___fltol@f1+1,w
  4538  0870  00D2               	movwf	??___fltol+1
  4539  0871  084F               	movf	___fltol@f1+2,w
  4540  0872  00D3               	movwf	??___fltol+2
  4541  0873  0850               	movf	___fltol@f1+3,w
  4542  0874  00D4               	movwf	??___fltol+3
  4543  0875  1003               	clrc
  4544  0876  0D53               	rlf	??___fltol+2,w
  4545  0877  0D54               	rlf	??___fltol+3,w
  4546  0878  00D6               	movwf	___fltol@exp1
  4547  0879  0856               	movf	___fltol@exp1,w
  4548  087A  1D03               	btfss	3,2
  4549  087B  2881               	goto	l3201
  4550  087C                     l3199:	
  4551  087C  01CD               	clrf	?___fltol
  4552  087D  01CE               	clrf	?___fltol+1
  4553  087E  01CF               	clrf	?___fltol+2
  4554  087F  01D0               	clrf	?___fltol+3
  4555  0880  0008               	return
  4556  0881                     l3201:	
  4557  0881  084D               	movf	___fltol@f1,w
  4558  0882  00D1               	movwf	??___fltol
  4559  0883  084E               	movf	___fltol@f1+1,w
  4560  0884  00D2               	movwf	??___fltol+1
  4561  0885  084F               	movf	___fltol@f1+2,w
  4562  0886  00D3               	movwf	??___fltol+2
  4563  0887  0850               	movf	___fltol@f1+3,w
  4564  0888  00D4               	movwf	??___fltol+3
  4565  0889  301F               	movlw	31
  4566  088A                     u2995:	
  4567  088A  36D4               	lsrf	??___fltol+3,f
  4568  088B  0CD3               	rrf	??___fltol+2,f
  4569  088C  0CD2               	rrf	??___fltol+1,f
  4570  088D  0CD1               	rrf	??___fltol,f
  4571  088E  0B89               	decfsz	9,f
  4572  088F  288A               	goto	u2995
  4573  0890  0851               	movf	??___fltol,w
  4574  0891  00D5               	movwf	___fltol@sign1
  4575  0892  3096               	movlw	150
  4576  0893  17CF               	bsf	___fltol@f1+2,7
  4577  0894  01D0               	clrf	___fltol@f1+3
  4578  0895  02D6               	subwf	___fltol@exp1,f
  4579  0896  1FD6               	btfss	___fltol@exp1,7
  4580  0897  28A4               	goto	l3219
  4581  0898  0856               	movf	___fltol@exp1,w
  4582  0899  3A80               	xorlw	128
  4583  089A  3E97               	addlw	151
  4584  089B  1C03               	btfss	3,0
  4585  089C  287C               	goto	l3199
  4586  089D                     l3215:	
  4587  089D  36D0               	lsrf	___fltol@f1+3,f
  4588  089E  0CCF               	rrf	___fltol@f1+2,f
  4589  089F  0CCE               	rrf	___fltol@f1+1,f
  4590  08A0  0CCD               	rrf	___fltol@f1,f
  4591  08A1  0FD6               	incfsz	___fltol@exp1,f
  4592  08A2  289D               	goto	l3215
  4593  08A3  28B1               	goto	l3227
  4594  08A4                     l3219:	
  4595  08A4  3020               	movlw	32
  4596  08A5  0256               	subwf	___fltol@exp1,w
  4597  08A6  1803               	btfsc	3,0
  4598  08A7  287C               	goto	l3199
  4599  08A8                     l3225:	
  4600  08A8  0856               	movf	___fltol@exp1,w
  4601  08A9  1903               	btfsc	3,2
  4602  08AA  28B1               	goto	l3227
  4603  08AB  35CD               	lslf	___fltol@f1,f
  4604  08AC  0DCE               	rlf	___fltol@f1+1,f
  4605  08AD  0DCF               	rlf	___fltol@f1+2,f
  4606  08AE  0DD0               	rlf	___fltol@f1+3,f
  4607  08AF  03D6               	decf	___fltol@exp1,f
  4608  08B0  28A8               	goto	l3225
  4609  08B1                     l3227:	
  4610  08B1  0855               	movf	___fltol@sign1,w
  4611  08B2  1903               	btfsc	3,2
  4612  08B3  0008               	return
  4613  08B4  09CD               	comf	___fltol@f1,f
  4614  08B5  09CE               	comf	___fltol@f1+1,f
  4615  08B6  09CF               	comf	___fltol@f1+2,f
  4616  08B7  09D0               	comf	___fltol@f1+3,f
  4617  08B8  0ACD               	incf	___fltol@f1,f
  4618  08B9  1903               	skipnz
  4619  08BA  0ACE               	incf	___fltol@f1+1,f
  4620  08BB  1903               	skipnz
  4621  08BC  0ACF               	incf	___fltol@f1+2,f
  4622  08BD  1903               	skipnz
  4623  08BE  0AD0               	incf	___fltol@f1+3,f
  4624  08BF  0008               	return
  4625  08C0                     __end_of___fltol:	
  4626                           
  4627                           	psect	text28
  4628  08C0                     __ptext28:	
  4629 ;; *************** function _Vout_set *****************
  4630 ;; Defined at:
  4631 ;;		line 2140 in file "Multi_RX_testjig_v2.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  Volts           2    4[COMMON] int 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  digi_step       4    6[COMMON] unsigned long 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;		None               void
  4638 ;; Registers used:
  4639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/4
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4646 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4648 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4649 ;;Total ram usage:        6 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:    3
  4652 ;; This function calls:
  4653 ;;		_digitalpot
  4654 ;; This function is called by:
  4655 ;;		_main
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           
  4660                           ;psect for function _Vout_set
  4661  08C0                     _Vout_set:	
  4662                           
  4663                           ;Multi_RX_testjig_v2.c: 2150: switch(Volts)
  4664                           
  4665                           ;incstack = 0
  4666                           ; Regs used in _Vout_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4667  08C0  28CD               	goto	l3751
  4668  08C1                     l3743:	
  4669                           
  4670                           ;Multi_RX_testjig_v2.c: 2155: digi_step = 52;
  4671  08C1  3034               	movlw	52
  4672  08C2  28C6               	goto	L30
  4673  08C3                     l3745:	
  4674                           ;Multi_RX_testjig_v2.c: 2156: break;
  4675                           
  4676                           
  4677                           ;Multi_RX_testjig_v2.c: 2158: digi_step = 75;
  4678  08C3  304B               	movlw	75
  4679  08C4  28C6               	goto	L30
  4680  08C5                     l3747:	
  4681                           ;Multi_RX_testjig_v2.c: 2159: break;
  4682                           
  4683                           
  4684                           ;Multi_RX_testjig_v2.c: 2161: digi_step = 126;
  4685  08C5  307E               	movlw	126
  4686  08C6                     L30:	
  4687  08C6  00F6               	movwf	Vout_set@digi_step
  4688  08C7  28C9               	goto	L31
  4689  08C8                     l697:	
  4690                           ;Multi_RX_testjig_v2.c: 2163: default:
  4691                           
  4692                           ;Multi_RX_testjig_v2.c: 2162: break;
  4693                           
  4694                           
  4695                           ;Multi_RX_testjig_v2.c: 2164: digi_step = 0;
  4696  08C8  01F6               	clrf	Vout_set@digi_step
  4697  08C9                     L31:	
  4698  08C9  01F7               	clrf	Vout_set@digi_step+1
  4699  08CA  01F8               	clrf	Vout_set@digi_step+2
  4700  08CB  01F9               	clrf	Vout_set@digi_step+3
  4701                           
  4702                           ;Multi_RX_testjig_v2.c: 2165: break;
  4703  08CC  28DD               	goto	l3753
  4704  08CD                     l3751:	
  4705                           
  4706                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4707                           ; Switch size 1, requested type "speed"
  4708                           ; Number of cases is 1, Range of values is 0 to 0
  4709                           ; switch strategies available:
  4710                           ; Name         Instructions Cycles
  4711                           ; simple_byte            4     3 (average)
  4712                           ; direct_byte            8     6 (fixed)
  4713                           ; jumptable            260     6 (fixed)
  4714                           ;	Chosen strategy is simple_byte
  4715  08CD  0875               	movf	Vout_set@Volts+1,w
  4716  08CE  3A00               	xorlw	0	; case 0
  4717  08CF  1903               	skipnz
  4718  08D0  28D2               	goto	l4635
  4719  08D1  28C8               	goto	l697
  4720  08D2                     l4635:	
  4721                           
  4722                           ; Switch size 1, requested type "speed"
  4723                           ; Number of cases is 3, Range of values is 12 to 27
  4724                           ; switch strategies available:
  4725                           ; Name         Instructions Cycles
  4726                           ; simple_byte           10     6 (average)
  4727                           ; direct_byte           41     9 (fixed)
  4728                           ; jumptable            263     9 (fixed)
  4729                           ;	Chosen strategy is simple_byte
  4730  08D2  0874               	movf	Vout_set@Volts,w
  4731  08D3  3A0C               	xorlw	12	; case 12
  4732  08D4  1903               	skipnz
  4733  08D5  28C1               	goto	l3743
  4734  08D6  3A1C               	xorlw	28	; case 16
  4735  08D7  1903               	skipnz
  4736  08D8  28C3               	goto	l3745
  4737  08D9  3A0B               	xorlw	11	; case 27
  4738  08DA  1903               	skipnz
  4739  08DB  28C5               	goto	l3747
  4740  08DC  28C8               	goto	l697
  4741  08DD                     l3753:	
  4742                           
  4743                           ;Multi_RX_testjig_v2.c: 2172: digitalpot((unsigned char) digi_step);
  4744  08DD  0876               	movf	Vout_set@digi_step,w
  4745  08DE  2B6A               	ljmp	_digitalpot
  4746  08DF                     __end_of_Vout_set:	
  4747  08DF                     __ptext15:	
  4748 ;; *************** function _lcd_set_cursor *****************
  4749 ;; Defined at:
  4750 ;;		line 1355 in file "Multi_RX_testjig_v2.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;  row             1    wreg     unsigned char 
  4753 ;;  col             1    1[COMMON] unsigned char 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  row             1    2[COMMON] unsigned char 
  4756 ;;  LCD_position    1    3[COMMON] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;		None               void
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0, pclath, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 1F/0
  4763 ;;		On exit  : 1F/4
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4766 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4769 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4770 ;;Total ram usage:        3 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    2
  4773 ;; This function calls:
  4774 ;;		_i2c_Start
  4775 ;;		_i2c_Stop
  4776 ;;		_i2c_Write
  4777 ;; This function is called by:
  4778 ;;		_lcd_print_int
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           
  4783                           ;psect for function _lcd_set_cursor
  4784  08DF                     _lcd_set_cursor:	
  4785                           
  4786                           ;incstack = 0
  4787                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4788                           ;lcd_set_cursor@row stored from wreg
  4789  08DF  00F2               	movwf	lcd_set_cursor@row
  4790                           
  4791                           ;Multi_RX_testjig_v2.c: 1358: col--;
  4792  08E0  03F1               	decf	lcd_set_cursor@col,f
  4793                           
  4794                           ;Multi_RX_testjig_v2.c: 1359: i2c_Start();
  4795  08E1  23E1  3188         	fcall	_i2c_Start
  4796                           
  4797                           ;Multi_RX_testjig_v2.c: 1360: i2c_Write(0x7C);
  4798  08E3  307C               	movlw	124
  4799  08E4  23D5  3188         	fcall	_i2c_Write
  4800                           
  4801                           ;Multi_RX_testjig_v2.c: 1361: i2c_Write(0x00);
  4802  08E6  3000               	movlw	0
  4803  08E7  23D5  3188         	fcall	_i2c_Write
  4804                           
  4805                           ;Multi_RX_testjig_v2.c: 1362: LCD_position = col & 0b11001111;
  4806  08E9  0871               	movf	lcd_set_cursor@col,w
  4807  08EA  00F3               	movwf	lcd_set_cursor@LCD_position
  4808  08EB  30CF               	movlw	207
  4809  08EC  05F3               	andwf	lcd_set_cursor@LCD_position,f
  4810                           
  4811                           ;Multi_RX_testjig_v2.c: 1363: if(row == 1)
  4812  08ED  0B72               	decfsz	lcd_set_cursor@row,w
  4813  08EE  28F1               	goto	l3139
  4814                           
  4815                           ;Multi_RX_testjig_v2.c: 1364: LCD_position |= 0b10000000;
  4816  08EF  17F3               	bsf	lcd_set_cursor@LCD_position,7
  4817  08F0  28F3               	goto	l3141
  4818  08F1                     l3139:	
  4819                           
  4820                           ;Multi_RX_testjig_v2.c: 1365: else
  4821                           ;Multi_RX_testjig_v2.c: 1366: LCD_position |= 0b11000000;
  4822  08F1  30C0               	movlw	192
  4823  08F2  04F3               	iorwf	lcd_set_cursor@LCD_position,f
  4824  08F3                     l3141:	
  4825                           
  4826                           ;Multi_RX_testjig_v2.c: 1367: i2c_Write(LCD_position);
  4827  08F3  0873               	movf	lcd_set_cursor@LCD_position,w
  4828  08F4  23D5  3188         	fcall	_i2c_Write
  4829                           
  4830                           ;Multi_RX_testjig_v2.c: 1368: i2c_Stop();
  4831  08F6  2BE6               	ljmp	l2903
  4832  08F7                     __end_of_lcd_set_cursor:	
  4833  08F7                     __ptext11:	
  4834 ;; *************** function _lcd_print_int *****************
  4835 ;; Defined at:
  4836 ;;		line 1931 in file "Multi_RX_testjig_v2.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  number          2   59[BANK0 ] unsigned int 
  4839 ;;  pos             2   61[BANK0 ] unsigned int 
  4840 ;;  decimal         1   63[BANK0 ] unsigned char 
  4841 ;;  ten_thou_dig    1   64[BANK0 ] unsigned char 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;		None
  4844 ;; Return value:  Size  Location     Type
  4845 ;;		None               void
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0, pclath, cstack
  4848 ;; Tracked objects:
  4849 ;;		On entry : 1F/0
  4850 ;;		On exit  : 1F/4
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4853 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4856 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4857 ;;Total ram usage:        6 bytes
  4858 ;; Hardware stack levels used:    1
  4859 ;; Hardware stack levels required when called:    3
  4860 ;; This function calls:
  4861 ;;		_i2c_write_char
  4862 ;;		_lcd_set_cursor
  4863 ;;		_ten_thou_conv
  4864 ;; This function is called by:
  4865 ;;		_main
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           
  4870                           ;psect for function _lcd_print_int
  4871  08F7                     _lcd_print_int:	
  4872                           
  4873                           ;Multi_RX_testjig_v2.c: 1933: lcd_set_cursor(2, pos + 1 - ten_thou_digit);
  4874                           
  4875                           ;incstack = 0
  4876                           ; Regs used in _lcd_print_int: [wreg+status,2+status,0+pclath+cstack]
  4877  08F7  0860               	movf	lcd_print_int@ten_thou_digit,w
  4878  08F8  025D               	subwf	lcd_print_int@pos,w
  4879  08F9  3E01               	addlw	1
  4880  08FA  00F1               	movwf	lcd_set_cursor@col
  4881  08FB  3002               	movlw	2
  4882  08FC  20DF               	fcall	_lcd_set_cursor
  4883                           
  4884                           ;Multi_RX_testjig_v2.c: 1934: ten_thou_conv(number);
  4885  08FD  0020               	movlb	0	; select bank0
  4886  08FE  085C               	movf	lcd_print_int@number+1,w
  4887  08FF  00F7               	movwf	ten_thou_conv@n+1
  4888  0900  085B               	movf	lcd_print_int@number,w
  4889  0901  00F6               	movwf	ten_thou_conv@n
  4890  0902  3195  259E  3188   	fcall	_ten_thou_conv
  4891                           
  4892                           ;Multi_RX_testjig_v2.c: 1935: if(ten_thou_digit)
  4893  0905  0020               	movlb	0	; select bank0
  4894  0906  0860               	movf	lcd_print_int@ten_thou_digit,w
  4895  0907  1903               	btfsc	3,2
  4896  0908  2914               	goto	l3785
  4897                           
  4898                           ;Multi_RX_testjig_v2.c: 1936: {
  4899                           ;Multi_RX_testjig_v2.c: 1937: if(ten_thou != 0 || decimal & 0x10)
  4900  0909  086F               	movf	_ten_thou,w
  4901  090A  1D03               	btfss	3,2
  4902  090B  290E               	goto	l3781
  4903  090C  1E5F               	btfss	lcd_print_int@decimal,4
  4904  090D  2911               	goto	l3783
  4905  090E                     l3781:	
  4906                           
  4907                           ;Multi_RX_testjig_v2.c: 1938: i2c_write_char(ten_thou + 48);
  4908  090E  086F               	movf	_ten_thou,w
  4909  090F  3E30               	addlw	48
  4910  0910  2912               	goto	L22
  4911  0911                     l3783:	
  4912                           
  4913                           ;Multi_RX_testjig_v2.c: 1939: else i2c_write_char(' ');
  4914  0911  3020               	movlw	32
  4915  0912                     L22:	
  4916  0912  2172  3188         	fcall	_i2c_write_char
  4917  0914                     l3785:	
  4918                           
  4919                           ;Multi_RX_testjig_v2.c: 1940: }
  4920                           ;Multi_RX_testjig_v2.c: 1941: if(decimal & 0x10)i2c_write_char('.');
  4921  0914  0020               	movlb	0	; select bank0
  4922  0915  1E5F               	btfss	lcd_print_int@decimal,4
  4923  0916  291A               	goto	l3789
  4924  0917  302E               	movlw	46
  4925  0918  2172  3188         	fcall	_i2c_write_char
  4926  091A                     l3789:	
  4927                           
  4928                           ;Multi_RX_testjig_v2.c: 1942: if(thou != 0 || ten_thou != 0 || decimal & 0x18)
  4929  091A  0021               	movlb	1	; select bank1
  4930  091B  0838               	movf	_thou^(0+128),w
  4931  091C  1D03               	btfss	3,2
  4932  091D  2926               	goto	l3795
  4933  091E  0020               	movlb	0	; select bank0
  4934  091F  086F               	movf	_ten_thou,w
  4935  0920  1D03               	btfss	3,2
  4936  0921  2926               	goto	l3795
  4937  0922  085F               	movf	lcd_print_int@decimal,w
  4938  0923  3918               	andlw	24
  4939  0924  1903               	btfsc	3,2
  4940  0925  292A               	goto	l3797
  4941  0926                     l3795:	
  4942                           
  4943                           ;Multi_RX_testjig_v2.c: 1943: i2c_write_char(thou + 48);
  4944  0926  0021               	movlb	1	; select bank1
  4945  0927  0838               	movf	_thou^(0+128),w
  4946  0928  3E30               	addlw	48
  4947  0929  292B               	goto	L23
  4948  092A                     l3797:	
  4949                           
  4950                           ;Multi_RX_testjig_v2.c: 1944: else i2c_write_char(' ');
  4951  092A  3020               	movlw	32
  4952  092B                     L23:	
  4953  092B  2172  3188         	fcall	_i2c_write_char
  4954                           
  4955                           ;Multi_RX_testjig_v2.c: 1945: if(decimal & 0x08)i2c_write_char('.');
  4956  092D  0020               	movlb	0	; select bank0
  4957  092E  1DDF               	btfss	lcd_print_int@decimal,3
  4958  092F  2933               	goto	l3803
  4959  0930  302E               	movlw	46
  4960  0931  2172  3188         	fcall	_i2c_write_char
  4961  0933                     l3803:	
  4962                           
  4963                           ;Multi_RX_testjig_v2.c: 1946: if(hund != 0 || thou != 0 || ten_thou != 0 || decimal & 0x
      +                          1C)
  4964  0933  0021               	movlb	1	; select bank1
  4965  0934  0834               	movf	_hund^(0+128),w
  4966  0935  1D03               	btfss	3,2
  4967  0936  2942               	goto	l3811
  4968  0937  0838               	movf	_thou^(0+128),w
  4969  0938  1D03               	btfss	3,2
  4970  0939  2942               	goto	l3811
  4971  093A  0020               	movlb	0	; select bank0
  4972  093B  086F               	movf	_ten_thou,w
  4973  093C  1D03               	btfss	3,2
  4974  093D  2942               	goto	l3811
  4975  093E  085F               	movf	lcd_print_int@decimal,w
  4976  093F  391C               	andlw	28
  4977  0940  1903               	btfsc	3,2
  4978  0941  2946               	goto	l3813
  4979  0942                     l3811:	
  4980                           
  4981                           ;Multi_RX_testjig_v2.c: 1947: i2c_write_char(hund + 48);
  4982  0942  0021               	movlb	1	; select bank1
  4983  0943  0834               	movf	_hund^(0+128),w
  4984  0944  3E30               	addlw	48
  4985  0945  2947               	goto	L24
  4986  0946                     l3813:	
  4987                           
  4988                           ;Multi_RX_testjig_v2.c: 1948: else i2c_write_char(' ');
  4989  0946  3020               	movlw	32
  4990  0947                     L24:	
  4991  0947  2172  3188         	fcall	_i2c_write_char
  4992                           
  4993                           ;Multi_RX_testjig_v2.c: 1949: if(decimal & 0x04)i2c_write_char('.');
  4994  0949  0020               	movlb	0	; select bank0
  4995  094A  1D5F               	btfss	lcd_print_int@decimal,2
  4996  094B  294F               	goto	l3819
  4997  094C  302E               	movlw	46
  4998  094D  2172  3188         	fcall	_i2c_write_char
  4999  094F                     l3819:	
  5000                           
  5001                           ;Multi_RX_testjig_v2.c: 1950: if(ten != 0 || hund != 0 || thou != 0 || ten_thou != 0 || 
      +                          decimal & 0x1E)
  5002  094F  0021               	movlb	1	; select bank1
  5003  0950  0836               	movf	_ten^(0+128),w
  5004  0951  1D03               	btfss	3,2
  5005  0952  2961               	goto	l3829
  5006  0953  0834               	movf	_hund^(0+128),w
  5007  0954  1D03               	btfss	3,2
  5008  0955  2961               	goto	l3829
  5009  0956  0838               	movf	_thou^(0+128),w
  5010  0957  1D03               	btfss	3,2
  5011  0958  2961               	goto	l3829
  5012  0959  0020               	movlb	0	; select bank0
  5013  095A  086F               	movf	_ten_thou,w
  5014  095B  1D03               	btfss	3,2
  5015  095C  2961               	goto	l3829
  5016  095D  085F               	movf	lcd_print_int@decimal,w
  5017  095E  391E               	andlw	30
  5018  095F  1903               	btfsc	3,2
  5019  0960  2965               	goto	l3831
  5020  0961                     l3829:	
  5021                           
  5022                           ;Multi_RX_testjig_v2.c: 1951: i2c_write_char(ten + 48);
  5023  0961  0021               	movlb	1	; select bank1
  5024  0962  0836               	movf	_ten^(0+128),w
  5025  0963  3E30               	addlw	48
  5026  0964  2966               	goto	L25
  5027  0965                     l3831:	
  5028                           
  5029                           ;Multi_RX_testjig_v2.c: 1952: else i2c_write_char(' ');
  5030  0965  3020               	movlw	32
  5031  0966                     L25:	
  5032  0966  2172  3188         	fcall	_i2c_write_char
  5033                           
  5034                           ;Multi_RX_testjig_v2.c: 1953: if(decimal & 0x02)i2c_write_char('.');
  5035  0968  0020               	movlb	0	; select bank0
  5036  0969  1CDF               	btfss	lcd_print_int@decimal,1
  5037  096A  296E               	goto	l628
  5038  096B  302E               	movlw	46
  5039  096C  2172  3188         	fcall	_i2c_write_char
  5040  096E                     l628:	
  5041                           
  5042                           ;Multi_RX_testjig_v2.c: 1954: i2c_write_char(unit + 48);
  5043  096E  0021               	movlb	1	; select bank1
  5044  096F  0837               	movf	_unit^(0+128),w
  5045  0970  3E30               	addlw	48
  5046  0971  2972               	ljmp	_i2c_write_char
  5047  0972                     __end_of_lcd_print_int:	
  5048  0972                     __ptext16:	
  5049 ;; *************** function _i2c_write_char *****************
  5050 ;; Defined at:
  5051 ;;		line 1271 in file "Multi_RX_testjig_v2.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  char_data       1    wreg     unsigned char 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;  char_data       1    1[COMMON] unsigned char 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;		None               void
  5058 ;; Registers used:
  5059 ;;		wreg, status,2, status,0, pclath, cstack
  5060 ;; Tracked objects:
  5061 ;;		On entry : 1E/0
  5062 ;;		On exit  : 1F/4
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5068 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5069 ;;Total ram usage:        1 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; Hardware stack levels required when called:    2
  5072 ;; This function calls:
  5073 ;;		_i2c_Start
  5074 ;;		_i2c_Stop
  5075 ;;		_i2c_Write
  5076 ;; This function is called by:
  5077 ;;		_lcd_print_int
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           
  5082                           ;psect for function _i2c_write_char
  5083  0972                     _i2c_write_char:	
  5084                           
  5085                           ;incstack = 0
  5086                           ; Regs used in _i2c_write_char: [wreg+status,2+status,0+pclath+cstack]
  5087                           ;i2c_write_char@char_data stored from wreg
  5088  0972  00F1               	movwf	i2c_write_char@char_data
  5089                           
  5090                           ;Multi_RX_testjig_v2.c: 1273: i2c_Start();
  5091  0973  23E1  3188         	fcall	_i2c_Start
  5092                           
  5093                           ;Multi_RX_testjig_v2.c: 1274: i2c_Write(0x7C);
  5094  0975  307C               	movlw	124
  5095  0976  23D5  3188         	fcall	_i2c_Write
  5096                           
  5097                           ;Multi_RX_testjig_v2.c: 1275: i2c_Write(0x40);
  5098  0978  3040               	movlw	64
  5099  0979  23D5  3188         	fcall	_i2c_Write
  5100                           
  5101                           ;Multi_RX_testjig_v2.c: 1276: i2c_Write(char_data);
  5102  097B  0871               	movf	i2c_write_char@char_data,w
  5103  097C  23D5  3188         	fcall	_i2c_Write
  5104                           
  5105                           ;Multi_RX_testjig_v2.c: 1277: i2c_Stop();
  5106  097E  2BE6               	ljmp	l2903
  5107  097F                     __end_of_i2c_write_char:	
  5108  097F                     __ptext1:	
  5109 ;; *************** function _testjig_done *****************
  5110 ;; Defined at:
  5111 ;;		line 1152 in file "Multi_RX_testjig_v2.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  state           1    wreg     unsigned char 
  5114 ;;  device_type     1    8[COMMON] unsigned char 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;  state           1   12[COMMON] unsigned char 
  5117 ;; Return value:  Size  Location     Type
  5118 ;;		None               void
  5119 ;; Registers used:
  5120 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5121 ;; Tracked objects:
  5122 ;;		On entry : 1E/1
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5126 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5128 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5129 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5130 ;;Total ram usage:        5 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:    4
  5133 ;; This function calls:
  5134 ;;		_buzz_one
  5135 ;;		_debug_fast_tx
  5136 ;;		_power_supply_set
  5137 ;;		_print_screen
  5138 ;; This function is called by:
  5139 ;;		_main
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           
  5144                           ;psect for function _testjig_done
  5145  097F                     _testjig_done:	
  5146                           
  5147                           ;incstack = 0
  5148                           ; Regs used in _testjig_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5149                           ;testjig_done@state stored from wreg
  5150  097F  00FC               	movwf	testjig_done@state
  5151  0980                     l455:	
  5152                           ;Multi_RX_testjig_v2.c: 1154: while(1)
  5153                           
  5154                           
  5155                           ;Multi_RX_testjig_v2.c: 1155: {
  5156                           ;Multi_RX_testjig_v2.c: 1156: RE0 = 0;
  5157  0980  0020               	movlb	0	; select bank0
  5158  0981  1010               	bcf	16,0	;volatile
  5159                           
  5160                           ;Multi_RX_testjig_v2.c: 1157: power_supply_set(3);
  5161  0982  3003               	movlw	3
  5162  0983  23F3  3188         	fcall	_power_supply_set
  5163                           
  5164                           ;Multi_RX_testjig_v2.c: 1159: LATB5 = 0;
  5165  0985  0022               	movlb	2	; select bank2
  5166  0986  128D               	bcf	13,5	;volatile
  5167                           
  5168                           ;Multi_RX_testjig_v2.c: 1160: LATA6 = 0;
  5169  0987  130C               	bcf	12,6	;volatile
  5170                           
  5171                           ;Multi_RX_testjig_v2.c: 1161: TRISG1 = 1;
  5172  0988  0026               	movlb	6	; select bank6
  5173  0989  148D               	bsf	13,1	;volatile
  5174                           
  5175                           ;Multi_RX_testjig_v2.c: 1162: debug_fast_tx(11110);
  5176  098A  3066               	movlw	102
  5177  098B  00F0               	movwf	debug_fast_tx@data
  5178  098C  302B               	movlw	43
  5179  098D  00F1               	movwf	debug_fast_tx@data+1
  5180  098E  22A7  3188         	fcall	_debug_fast_tx
  5181                           
  5182                           ;Multi_RX_testjig_v2.c: 1163: debug_fast_tx(state);
  5183  0990  087C               	movf	testjig_done@state,w
  5184  0991  00F0               	movwf	debug_fast_tx@data
  5185  0992  01F1               	clrf	debug_fast_tx@data+1
  5186  0993  22A7  3188         	fcall	_debug_fast_tx
  5187                           
  5188                           ;Multi_RX_testjig_v2.c: 1164: switch(state)
  5189  0995  2A36               	goto	l3677
  5190  0996                     l3631:	
  5191                           
  5192                           ;Multi_RX_testjig_v2.c: 1167: if(device_type == 0xAA)
  5193  0996  30AA               	movlw	170
  5194  0997  0678               	xorwf	testjig_done@device_type,w
  5195  0998  1D03               	btfss	3,2
  5196  0999  299E               	goto	l3635
  5197                           
  5198                           ;Multi_RX_testjig_v2.c: 1168: print_screen("Condo3 Pass", " Remove board");
  5199  099A  30F7               	movlw	low (STR_139| (0+32768))
  5200  099B  00F4               	movwf	print_screen@top
  5201  099C  3092               	movlw	high (STR_139| (0+32768))
  5202  099D  29B1               	goto	L15
  5203  099E                     l3635:	
  5204                           
  5205                           ;Multi_RX_testjig_v2.c: 1169: else if(device_type == 0xA1)
  5206  099E  30A1               	movlw	161
  5207  099F  0678               	xorwf	testjig_done@device_type,w
  5208  09A0  1D03               	btfss	3,2
  5209  09A1  29A6               	goto	l3639
  5210                           
  5211                           ;Multi_RX_testjig_v2.c: 1170: print_screen("RX3 Pass", " Remove board");
  5212  09A2  308D               	movlw	low (STR_141| (0+32768))
  5213  09A3  00F4               	movwf	print_screen@top
  5214  09A4  3093               	movlw	high (STR_141| (0+32768))
  5215  09A5  29B1               	goto	L15
  5216  09A6                     l3639:	
  5217                           
  5218                           ;Multi_RX_testjig_v2.c: 1171: else if(device_type == 0xA2)
  5219  09A6  30A2               	movlw	162
  5220  09A7  0678               	xorwf	testjig_done@device_type,w
  5221  09A8  1D03               	btfss	3,2
  5222  09A9  29AE               	goto	l3643
  5223                           
  5224                           ;Multi_RX_testjig_v2.c: 1172: print_screen("Mem_Copier Pass", " Remove board");
  5225  09AA  301B               	movlw	low (STR_143| (0+32768))
  5226  09AB  00F4               	movwf	print_screen@top
  5227  09AC  3091               	movlw	high (STR_143| (0+32768))
  5228  09AD  29B1               	goto	L15
  5229  09AE                     l3643:	
  5230                           
  5231                           ;Multi_RX_testjig_v2.c: 1173: else
  5232                           ;Multi_RX_testjig_v2.c: 1174: print_screen("Multi_RX Pass", " Remove board");
  5233  09AE  30F7               	movlw	low (STR_145| (0+32768))
  5234  09AF  00F4               	movwf	print_screen@top
  5235  09B0  3091               	movlw	high (STR_145| (0+32768))
  5236  09B1                     L15:	
  5237  09B1  00F5               	movwf	print_screen@top+1
  5238  09B2  30DB               	movlw	low (STR_140| (0+32768))
  5239  09B3  00F6               	movwf	print_screen@bottom
  5240  09B4  3091               	movlw	high (STR_140| (0+32768))
  5241  09B5  00F7               	movwf	print_screen@bottom+1
  5242  09B6  22D4  3188         	fcall	_print_screen
  5243                           
  5244                           ;Multi_RX_testjig_v2.c: 1175: debug_fast_tx(11111);
  5245  09B8  3067               	movlw	103
  5246  09B9  00F0               	movwf	debug_fast_tx@data
  5247  09BA  302B               	movlw	43
  5248  09BB  00F1               	movwf	debug_fast_tx@data+1
  5249  09BC  22A7  3188         	fcall	_debug_fast_tx
  5250                           
  5251                           ;Multi_RX_testjig_v2.c: 1176: buzz_one(100);
  5252  09BE  3064               	movlw	100
  5253  09BF  00F0               	movwf	buzz_one@time
  5254  09C0  01F1               	clrf	buzz_one@time+1
  5255  09C1  23EB  3188         	fcall	_buzz_one
  5256                           
  5257                           ;Multi_RX_testjig_v2.c: 1177: _delay((unsigned long)((200)*(16000000/4000.0)));
  5258  09C3  3005               	movlw	5
  5259  09C4  00FB               	movwf	??_testjig_done+2
  5260  09C5  300F               	movlw	15
  5261  09C6  00FA               	movwf	??_testjig_done+1
  5262  09C7  30F4               	movlw	244
  5263  09C8  00F9               	movwf	??_testjig_done
  5264  09C9                     u5647:	
  5265  09C9  0BF9               	decfsz	??_testjig_done,f
  5266  09CA  29C9               	goto	u5647
  5267  09CB  0BFA               	decfsz	??_testjig_done+1,f
  5268  09CC  29C9               	goto	u5647
  5269  09CD  0BFB               	decfsz	??_testjig_done+2,f
  5270  09CE  29C9               	goto	u5647
  5271                           
  5272                           ;Multi_RX_testjig_v2.c: 1178: buzz_one(100);
  5273  09CF  3064               	movlw	100
  5274  09D0  00F0               	movwf	buzz_one@time
  5275  09D1  01F1               	clrf	buzz_one@time+1
  5276  09D2  23EB  3188         	fcall	_buzz_one
  5277  09D4                     l464:	
  5278                           ;Multi_RX_testjig_v2.c: 1179: while(RF3 == 0);
  5279                           
  5280  09D4  0025               	movlb	5	; select bank5
  5281  09D5  1D8C               	btfss	12,3	;volatile
  5282  09D6  29D4               	goto	l464
  5283                           
  5284                           ;Multi_RX_testjig_v2.c: 1180: _delay((unsigned long)((100)*(16000000/4000.0)));
  5285  09D7  3003               	movlw	3
  5286  09D8  00FB               	movwf	??_testjig_done+2
  5287  09D9  3008               	movlw	8
  5288  09DA  00FA               	movwf	??_testjig_done+1
  5289  09DB  3078               	movlw	120
  5290  09DC  00F9               	movwf	??_testjig_done
  5291  09DD                     u5657:	
  5292  09DD  0BF9               	decfsz	??_testjig_done,f
  5293  09DE  29DD               	goto	u5657
  5294  09DF  0BFA               	decfsz	??_testjig_done+1,f
  5295  09E0  29DD               	goto	u5657
  5296  09E1  0BFB               	decfsz	??_testjig_done+2,f
  5297  09E2  29DD               	goto	u5657
  5298  09E3  2A33               	goto	L16
  5299  09E4                     l3655:	
  5300                           ;Multi_RX_testjig_v2.c: 1182: break;
  5301                           
  5302                           ;Multi_RX_testjig_v2.c: 1181: state = 0xFF;
  5303                           
  5304                           
  5305                           ;Multi_RX_testjig_v2.c: 1184: debug_fast_tx(11112);
  5306  09E4  3068               	movlw	104
  5307  09E5  00F0               	movwf	debug_fast_tx@data
  5308  09E6  302B               	movlw	43
  5309  09E7  00F1               	movwf	debug_fast_tx@data+1
  5310  09E8  22A7  3188         	fcall	_debug_fast_tx
  5311                           
  5312                           ;Multi_RX_testjig_v2.c: 1186: if(device_type == 0xAA)
  5313  09EA  30AA               	movlw	170
  5314  09EB  0678               	xorwf	testjig_done@device_type,w
  5315  09EC  1D03               	btfss	3,2
  5316  09ED  29F2               	goto	l3661
  5317                           
  5318                           ;Multi_RX_testjig_v2.c: 1187: print_screen("Condo3 ", " Testjig");
  5319  09EE  3096               	movlw	low (STR_147| (0+32768))
  5320  09EF  00F4               	movwf	print_screen@top
  5321  09F0  3093               	movlw	high (STR_147| (0+32768))
  5322  09F1  2A01               	goto	L21
  5323  09F2                     l3661:	
  5324                           
  5325                           ;Multi_RX_testjig_v2.c: 1188: else if(device_type == 0xA1)
  5326  09F2  30A1               	movlw	161
  5327  09F3  0678               	xorwf	testjig_done@device_type,w
  5328  09F4  1D03               	btfss	3,2
  5329  09F5  29FA               	goto	l3665
  5330                           
  5331                           ;Multi_RX_testjig_v2.c: 1189: print_screen("RX3 ", " Testjig");
  5332  09F6  30B6               	movlw	low (STR_149| (0+32768))
  5333  09F7  00F4               	movwf	print_screen@top
  5334  09F8  3093               	movlw	high (STR_149| (0+32768))
  5335  09F9  2A01               	goto	L21
  5336  09FA                     l3665:	
  5337                           
  5338                           ;Multi_RX_testjig_v2.c: 1190: else if(device_type == 0xA2)
  5339  09FA  30A2               	movlw	162
  5340  09FB  0678               	xorwf	testjig_done@device_type,w
  5341  09FC  1D03               	btfss	3,2
  5342  09FD  2A06               	goto	l3669
  5343                           
  5344                           ;Multi_RX_testjig_v2.c: 1191: print_screen("Mem_Copier Pass", " Testjig");
  5345  09FE  301B               	movlw	low (STR_143| (0+32768))
  5346  09FF  00F4               	movwf	print_screen@top
  5347  0A00  3091               	movlw	high (STR_143| (0+32768))
  5348  0A01                     L21:	
  5349  0A01  00F5               	movwf	print_screen@top+1
  5350  0A02  30CA               	movlw	low ((STR_159+3)| (0+32768))
  5351  0A03  00F6               	movwf	print_screen@bottom
  5352  0A04  3092               	movlw	high ((STR_159+3)| (0+32768))
  5353  0A05  2A0D               	goto	L17
  5354  0A06                     l3669:	
  5355                           
  5356                           ;Multi_RX_testjig_v2.c: 1192: else
  5357                           ;Multi_RX_testjig_v2.c: 1193: print_screen("Multi_RX", "Testjig");
  5358  0A06  3072               	movlw	low (STR_1| (0+32768))
  5359  0A07  00F4               	movwf	print_screen@top
  5360  0A08  3093               	movlw	high (STR_1| (0+32768))
  5361  0A09  00F5               	movwf	print_screen@top+1
  5362  0A0A  30CB               	movlw	low ((STR_159+4)| (0+32768))
  5363  0A0B  00F6               	movwf	print_screen@bottom
  5364  0A0C  3092               	movlw	high ((STR_159+4)| (0+32768))
  5365  0A0D                     L17:	
  5366  0A0D  00F7               	movwf	print_screen@bottom+1
  5367  0A0E  22D4  3188         	fcall	_print_screen
  5368                           
  5369                           ;Multi_RX_testjig_v2.c: 1194: _delay((unsigned long)((2000)*(16000000/4000.0)));
  5370  0A10  3029               	movlw	41
  5371  0A11  00FB               	movwf	??_testjig_done+2
  5372  0A12  3096               	movlw	150
  5373  0A13  00FA               	movwf	??_testjig_done+1
  5374  0A14  30A6               	movlw	166
  5375  0A15  00F9               	movwf	??_testjig_done
  5376  0A16                     u5667:	
  5377  0A16  0BF9               	decfsz	??_testjig_done,f
  5378  0A17  2A16               	goto	u5667
  5379  0A18  0BFA               	decfsz	??_testjig_done+1,f
  5380  0A19  2A16               	goto	u5667
  5381  0A1A  0BFB               	decfsz	??_testjig_done+2,f
  5382  0A1B  2A16               	goto	u5667
  5383                           
  5384                           ;Multi_RX_testjig_v2.c: 1195: print_screen("Testjig Power-up", "wait...");
  5385  0A1C  3098               	movlw	low (STR_155| (0+32768))
  5386  0A1D  00F4               	movwf	print_screen@top
  5387  0A1E  3090               	movlw	high (STR_155| (0+32768))
  5388  0A1F  00F5               	movwf	print_screen@top+1
  5389  0A20  309E               	movlw	low (STR_156| (0+32768))
  5390  0A21  00F6               	movwf	print_screen@bottom
  5391  0A22  3093               	movlw	high (STR_156| (0+32768))
  5392  0A23  00F7               	movwf	print_screen@bottom+1
  5393  0A24  22D4  3188         	fcall	_print_screen
  5394                           
  5395                           ;Multi_RX_testjig_v2.c: 1196: _delay((unsigned long)((3000)*(16000000/4000.0)));
  5396  0A26  303D               	movlw	61
  5397  0A27  00FB               	movwf	??_testjig_done+2
  5398  0A28  30E1               	movlw	225
  5399  0A29  00FA               	movwf	??_testjig_done+1
  5400  0A2A  307A               	movlw	122
  5401  0A2B  00F9               	movwf	??_testjig_done
  5402  0A2C                     u5677:	
  5403  0A2C  0BF9               	decfsz	??_testjig_done,f
  5404  0A2D  2A2C               	goto	u5677
  5405  0A2E  0BFA               	decfsz	??_testjig_done+1,f
  5406  0A2F  2A2C               	goto	u5677
  5407  0A30  0BFB               	decfsz	??_testjig_done+2,f
  5408  0A31  2A2C               	goto	u5677
  5409  0A32  3200               	nop2
  5410  0A33                     L16:	
  5411                           
  5412                           ;Multi_RX_testjig_v2.c: 1197: state = 0xFF;
  5413  0A33  30FF               	movlw	255
  5414  0A34  00FC               	movwf	testjig_done@state
  5415                           
  5416                           ;Multi_RX_testjig_v2.c: 1198: break;
  5417  0A35  2A3E               	goto	l3679
  5418  0A36                     l3677:	
  5419  0A36  087C               	movf	testjig_done@state,w
  5420                           
  5421                           ; Switch size 1, requested type "speed"
  5422                           ; Number of cases is 2, Range of values is 1 to 2
  5423                           ; switch strategies available:
  5424                           ; Name         Instructions Cycles
  5425                           ; simple_byte            7     4 (average)
  5426                           ; direct_byte           13     9 (fixed)
  5427                           ; jumptable            263     9 (fixed)
  5428                           ;	Chosen strategy is simple_byte
  5429  0A37  3A01               	xorlw	1	; case 1
  5430  0A38  1903               	skipnz
  5431  0A39  2996               	goto	l3631
  5432  0A3A  3A03               	xorlw	3	; case 2
  5433  0A3B  1903               	skipnz
  5434  0A3C  29E4               	goto	l3655
  5435  0A3D  2A3E               	goto	l3679
  5436  0A3E                     l3679:	
  5437                           
  5438                           ;Multi_RX_testjig_v2.c: 1200: debug_fast_tx(11113);
  5439  0A3E  3069               	movlw	105
  5440  0A3F  00F0               	movwf	debug_fast_tx@data
  5441  0A40  302B               	movlw	43
  5442  0A41  00F1               	movwf	debug_fast_tx@data+1
  5443  0A42  22A7  3188         	fcall	_debug_fast_tx
  5444                           
  5445                           ;Multi_RX_testjig_v2.c: 1201: if(device_type == 0xAA)
  5446  0A44  30AA               	movlw	170
  5447  0A45  0678               	xorwf	testjig_done@device_type,w
  5448  0A46  1D03               	btfss	3,2
  5449  0A47  2A4C               	goto	l3685
  5450                           
  5451                           ;Multi_RX_testjig_v2.c: 1202: print_screen("Condo3 Testjig", "-> Insert PCB");
  5452  0A48  3076               	movlw	low (STR_157| (0+32768))
  5453  0A49  00F4               	movwf	print_screen@top
  5454  0A4A  3091               	movlw	high (STR_157| (0+32768))
  5455  0A4B  2A5F               	goto	L18
  5456  0A4C                     l3685:	
  5457                           
  5458                           ;Multi_RX_testjig_v2.c: 1203: else if(device_type == 0xA1)
  5459  0A4C  30A1               	movlw	161
  5460  0A4D  0678               	xorwf	testjig_done@device_type,w
  5461  0A4E  1D03               	btfss	3,2
  5462  0A4F  2A54               	goto	l3689
  5463                           
  5464                           ;Multi_RX_testjig_v2.c: 1204: print_screen("RX3 Testjig", "-> Insert PCB");
  5465  0A50  30C7               	movlw	low (STR_159| (0+32768))
  5466  0A51  00F4               	movwf	print_screen@top
  5467  0A52  3092               	movlw	high (STR_159| (0+32768))
  5468  0A53  2A5F               	goto	L18
  5469  0A54                     l3689:	
  5470                           
  5471                           ;Multi_RX_testjig_v2.c: 1205: else if(device_type == 0xA2)
  5472  0A54  30A2               	movlw	162
  5473  0A55  0678               	xorwf	testjig_done@device_type,w
  5474  0A56  1D03               	btfss	3,2
  5475  0A57  2A5C               	goto	l3693
  5476                           
  5477                           ;Multi_RX_testjig_v2.c: 1206: print_screen("Mem_Copier Pass", "-> Insert PCB");
  5478  0A58  301B               	movlw	low (STR_143| (0+32768))
  5479  0A59  00F4               	movwf	print_screen@top
  5480  0A5A  3091               	movlw	high (STR_143| (0+32768))
  5481  0A5B  2A5F               	goto	L18
  5482  0A5C                     l3693:	
  5483                           
  5484                           ;Multi_RX_testjig_v2.c: 1207: else
  5485                           ;Multi_RX_testjig_v2.c: 1208: print_screen("Multi_RX Testjig", "-> Insert PCB");
  5486  0A5C  3076               	movlw	low (STR_163| (0+32768))
  5487  0A5D  00F4               	movwf	print_screen@top
  5488  0A5E  3090               	movlw	high (STR_163| (0+32768))
  5489  0A5F                     L18:	
  5490  0A5F  00F5               	movwf	print_screen@top+1
  5491  0A60  30BF               	movlw	low (STR_4| (0+32768))
  5492  0A61  00F6               	movwf	print_screen@bottom
  5493  0A62  3091               	movlw	high (STR_4| (0+32768))
  5494  0A63  00F7               	movwf	print_screen@bottom+1
  5495  0A64  22D4  3188         	fcall	_print_screen
  5496  0A66                     l481:	
  5497  0A66  0025               	movlb	5	; select bank5
  5498  0A67  198C               	btfsc	12,3	;volatile
  5499  0A68  2A66               	goto	l481
  5500                           
  5501                           ;Multi_RX_testjig_v2.c: 1210: _delay((unsigned long)((100)*(16000000/4000.0)));
  5502  0A69  3003               	movlw	3
  5503  0A6A  00FB               	movwf	??_testjig_done+2
  5504  0A6B  3008               	movlw	8
  5505  0A6C  00FA               	movwf	??_testjig_done+1
  5506  0A6D  3078               	movlw	120
  5507  0A6E  00F9               	movwf	??_testjig_done
  5508  0A6F                     u5687:	
  5509  0A6F  0BF9               	decfsz	??_testjig_done,f
  5510  0A70  2A6F               	goto	u5687
  5511  0A71  0BFA               	decfsz	??_testjig_done+1,f
  5512  0A72  2A6F               	goto	u5687
  5513  0A73  0BFB               	decfsz	??_testjig_done+2,f
  5514  0A74  2A6F               	goto	u5687
  5515                           
  5516                           ;Multi_RX_testjig_v2.c: 1211: if(device_type == 0xAA)
  5517  0A75  30AA               	movlw	170
  5518  0A76  0678               	xorwf	testjig_done@device_type,w
  5519  0A77  1D03               	btfss	3,2
  5520  0A78  2A7D               	goto	l3701
  5521                           
  5522                           ;Multi_RX_testjig_v2.c: 1212: print_screen("Condo3 Testjig", " Press START");
  5523  0A79  3076               	movlw	low (STR_157| (0+32768))
  5524  0A7A  00F4               	movwf	print_screen@top
  5525  0A7B  3091               	movlw	high (STR_157| (0+32768))
  5526  0A7C  2A90               	goto	L19
  5527  0A7D                     l3701:	
  5528                           
  5529                           ;Multi_RX_testjig_v2.c: 1213: else if(device_type == 0xA1)
  5530  0A7D  30A1               	movlw	161
  5531  0A7E  0678               	xorwf	testjig_done@device_type,w
  5532  0A7F  1D03               	btfss	3,2
  5533  0A80  2A85               	goto	l3705
  5534                           
  5535                           ;Multi_RX_testjig_v2.c: 1214: print_screen("RX3 Testjig", " Press START");
  5536  0A81  30C7               	movlw	low (STR_159| (0+32768))
  5537  0A82  00F4               	movwf	print_screen@top
  5538  0A83  3092               	movlw	high (STR_159| (0+32768))
  5539  0A84  2A90               	goto	L19
  5540  0A85                     l3705:	
  5541                           
  5542                           ;Multi_RX_testjig_v2.c: 1215: else if(device_type == 0xA2)
  5543  0A85  30A2               	movlw	162
  5544  0A86  0678               	xorwf	testjig_done@device_type,w
  5545  0A87  1D03               	btfss	3,2
  5546  0A88  2A8D               	goto	l3709
  5547                           
  5548                           ;Multi_RX_testjig_v2.c: 1216: print_screen("Mem_Copier Pass", " Press START");
  5549  0A89  301B               	movlw	low (STR_143| (0+32768))
  5550  0A8A  00F4               	movwf	print_screen@top
  5551  0A8B  3091               	movlw	high (STR_143| (0+32768))
  5552  0A8C  2A90               	goto	L19
  5553  0A8D                     l3709:	
  5554                           
  5555                           ;Multi_RX_testjig_v2.c: 1217: else
  5556                           ;Multi_RX_testjig_v2.c: 1218: print_screen("Multi_RX Testjig", " Press START");
  5557  0A8D  3076               	movlw	low (STR_163| (0+32768))
  5558  0A8E  00F4               	movwf	print_screen@top
  5559  0A8F  3090               	movlw	high (STR_163| (0+32768))
  5560  0A90                     L19:	
  5561  0A90  00F5               	movwf	print_screen@top+1
  5562  0A91  3062               	movlw	low (STR_166| (0+32768))
  5563  0A92  00F6               	movwf	print_screen@bottom
  5564  0A93  3092               	movlw	high (STR_166| (0+32768))
  5565  0A94  00F7               	movwf	print_screen@bottom+1
  5566  0A95  22D4  3188         	fcall	_print_screen
  5567  0A97                     l490:	
  5568  0A97  0025               	movlb	5	; select bank5
  5569  0A98  1D8C               	btfss	12,3	;volatile
  5570  0A99  2A97               	goto	l490
  5571                           
  5572                           ;Multi_RX_testjig_v2.c: 1220: _delay((unsigned long)((100)*(16000000/4000.0)));
  5573  0A9A  3003               	movlw	3
  5574  0A9B  00FB               	movwf	??_testjig_done+2
  5575  0A9C  3008               	movlw	8
  5576  0A9D  00FA               	movwf	??_testjig_done+1
  5577  0A9E  3078               	movlw	120
  5578  0A9F  00F9               	movwf	??_testjig_done
  5579  0AA0                     u5697:	
  5580  0AA0  0BF9               	decfsz	??_testjig_done,f
  5581  0AA1  2AA0               	goto	u5697
  5582  0AA2  0BFA               	decfsz	??_testjig_done+1,f
  5583  0AA3  2AA0               	goto	u5697
  5584  0AA4  0BFB               	decfsz	??_testjig_done+2,f
  5585  0AA5  2AA0               	goto	u5697
  5586  0AA6  2980               	goto	l455
  5587  0AA7                     __end_of_testjig_done:	
  5588  0AA7                     __ptext9:	
  5589 ;; *************** function _debug_fast_tx *****************
  5590 ;; Defined at:
  5591 ;;		line 2190 in file "Multi_RX_testjig_v2.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;  data            2    0[COMMON] unsigned int 
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;  i               1    2[COMMON] unsigned char 
  5596 ;; Return value:  Size  Location     Type
  5597 ;;		None               void
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/2
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5608 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5609 ;;Total ram usage:        3 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    1
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_main
  5616 ;;		_testjig_done
  5617 ;;		_print_error
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           
  5622                           ;psect for function _debug_fast_tx
  5623  0AA7                     _debug_fast_tx:	
  5624                           
  5625                           ;Multi_RX_testjig_v2.c: 2192: GIE = 0;
  5626                           
  5627                           ;incstack = 0
  5628                           ; Regs used in _debug_fast_tx: [wreg+status,2+status,0]
  5629  0AA7  138B               	bcf	11,7	;volatile
  5630                           
  5631                           ;Multi_RX_testjig_v2.c: 2193: LATD2 = 0;
  5632  0AA8  0022               	movlb	2	; select bank2
  5633  0AA9  110F               	bcf	15,2	;volatile
  5634                           
  5635                           ;Multi_RX_testjig_v2.c: 2199: __nop();
  5636  0AAA  0000               	nop
  5637                           
  5638                           ;Multi_RX_testjig_v2.c: 2200: __nop();
  5639  0AAB  0000               	nop
  5640                           
  5641                           ;Multi_RX_testjig_v2.c: 2201: __nop();
  5642  0AAC  0000               	nop
  5643                           
  5644                           ;Multi_RX_testjig_v2.c: 2202: __nop();
  5645  0AAD  0000               	nop
  5646                           
  5647                           ;Multi_RX_testjig_v2.c: 2203: __nop();
  5648  0AAE  0000               	nop
  5649                           
  5650                           ;Multi_RX_testjig_v2.c: 2204: __nop();
  5651  0AAF  0000               	nop
  5652                           
  5653                           ;Multi_RX_testjig_v2.c: 2205: __nop();
  5654  0AB0  0000               	nop
  5655                           
  5656                           ;Multi_RX_testjig_v2.c: 2206: __nop();
  5657  0AB1  0000               	nop
  5658                           
  5659                           ;Multi_RX_testjig_v2.c: 2207: __nop();
  5660  0AB2  0000               	nop
  5661                           
  5662                           ;Multi_RX_testjig_v2.c: 2208: unsigned char i;
  5663                           ;Multi_RX_testjig_v2.c: 2209: for(i = 0; i < 16; i++)
  5664  0AB3  01F2               	clrf	debug_fast_tx@i
  5665  0AB4                     l704:	
  5666                           
  5667                           ;Multi_RX_testjig_v2.c: 2210: {
  5668                           ;Multi_RX_testjig_v2.c: 2211: LATD2 = data & 0x01;
  5669  0AB4  1C70               	btfss	debug_fast_tx@data,0
  5670  0AB5  2AB9               	goto	u2870
  5671  0AB6  0022               	movlb	2	; select bank2
  5672  0AB7  150F               	bsf	15,2	;volatile
  5673  0AB8  2ABB               	goto	l3083
  5674  0AB9                     u2870:	
  5675  0AB9  0022               	movlb	2	; select bank2
  5676  0ABA  110F               	bcf	15,2	;volatile
  5677  0ABB                     l3083:	
  5678  0ABB  3010               	movlw	16
  5679                           
  5680                           ;Multi_RX_testjig_v2.c: 2212: data = data >> 1;
  5681  0ABC  36F1               	lsrf	debug_fast_tx@data+1,f
  5682  0ABD  0CF0               	rrf	debug_fast_tx@data,f
  5683  0ABE  0AF2               	incf	debug_fast_tx@i,f
  5684  0ABF  0272               	subwf	debug_fast_tx@i,w
  5685  0AC0  1C03               	skipc
  5686  0AC1  2AB4               	goto	l704
  5687                           
  5688                           ;Multi_RX_testjig_v2.c: 2213: }
  5689                           ;Multi_RX_testjig_v2.c: 2214: __nop();
  5690  0AC2  0000               	nop
  5691                           
  5692                           ;Multi_RX_testjig_v2.c: 2215: __nop();
  5693  0AC3  0000               	nop
  5694                           
  5695                           ;Multi_RX_testjig_v2.c: 2216: __nop();
  5696  0AC4  0000               	nop
  5697                           
  5698                           ;Multi_RX_testjig_v2.c: 2217: __nop();
  5699  0AC5  0000               	nop
  5700                           
  5701                           ;Multi_RX_testjig_v2.c: 2218: __nop();
  5702  0AC6  0000               	nop
  5703                           
  5704                           ;Multi_RX_testjig_v2.c: 2219: __nop();
  5705  0AC7  0000               	nop
  5706                           
  5707                           ;Multi_RX_testjig_v2.c: 2220: LATD2 = 1;
  5708  0AC8  0022               	movlb	2	; select bank2
  5709  0AC9  150F               	bsf	15,2	;volatile
  5710                           
  5711                           ;Multi_RX_testjig_v2.c: 2221: __nop();
  5712  0ACA  0000               	nop
  5713                           
  5714                           ;Multi_RX_testjig_v2.c: 2222: __nop();
  5715  0ACB  0000               	nop
  5716                           
  5717                           ;Multi_RX_testjig_v2.c: 2223: __nop();
  5718  0ACC  0000               	nop
  5719                           
  5720                           ;Multi_RX_testjig_v2.c: 2224: __nop();
  5721  0ACD  0000               	nop
  5722                           
  5723                           ;Multi_RX_testjig_v2.c: 2225: __nop();
  5724  0ACE  0000               	nop
  5725                           
  5726                           ;Multi_RX_testjig_v2.c: 2226: __nop();
  5727  0ACF  0000               	nop
  5728                           
  5729                           ;Multi_RX_testjig_v2.c: 2227: __nop();
  5730  0AD0  0000               	nop
  5731                           
  5732                           ;Multi_RX_testjig_v2.c: 2228: __nop();
  5733  0AD1  0000               	nop
  5734                           
  5735                           ;Multi_RX_testjig_v2.c: 2229: GIE = 1;
  5736  0AD2  178B               	bsf	11,7	;volatile
  5737  0AD3  0008               	return
  5738  0AD4                     __end_of_debug_fast_tx:	
  5739  0AD4                     __ptext3:	
  5740 ;; *************** function _print_screen *****************
  5741 ;; Defined at:
  5742 ;;		line 1721 in file "Multi_RX_testjig_v2.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;  top             2    4[COMMON] PTR const unsigned char 
  5745 ;;		 -> STR_173(12), STR_171(17), STR_169(16), STR_167(12), 
  5746 ;;		 -> STR_165(15), STR_163(17), STR_161(16), STR_159(12), 
  5747 ;;		 -> STR_157(15), STR_155(17), STR_153(9), STR_151(16), 
  5748 ;;		 -> STR_149(5), STR_147(8), STR_145(14), STR_143(16), 
  5749 ;;		 -> STR_141(9), STR_139(12), STR_137(10), STR_135(16), 
  5750 ;;		 -> STR_131(10), STR_127(14), STR_123(13), STR_115(8), 
  5751 ;;		 -> STR_113(8), STR_111(8), STR_109(8), STR_95(8), 
  5752 ;;		 -> STR_93(14), STR_79(11), STR_65(12), STR_51(11), 
  5753 ;;		 -> STR_49(11), STR_43(13), STR_37(9), STR_33(13), 
  5754 ;;		 -> STR_31(19), STR_29(12), STR_27(19), STR_5(15), 
  5755 ;;		 -> STR_1(9), 
  5756 ;;  bottom          2    6[COMMON] PTR const unsigned char 
  5757 ;;		 -> STR_174(17), STR_172(13), STR_170(13), STR_168(13), 
  5758 ;;		 -> STR_166(13), STR_164(14), STR_162(14), STR_160(14), 
  5759 ;;		 -> STR_158(14), STR_156(8), STR_154(8), STR_152(9), 
  5760 ;;		 -> STR_150(9), STR_148(9), STR_146(14), STR_144(14), 
  5761 ;;		 -> STR_142(14), STR_140(14), STR_138(11), STR_136(13), 
  5762 ;;		 -> STR_132(10), STR_128(2), STR_124(2), STR_116(16), 
  5763 ;;		 -> STR_114(15), STR_112(7), STR_110(10), STR_96(5), 
  5764 ;;		 -> STR_94(9), STR_80(5), STR_66(5), STR_52(5), 
  5765 ;;		 -> STR_50(1), STR_44(6), STR_38(18), STR_34(6), 
  5766 ;;		 -> STR_32(9), STR_30(13), STR_28(1), STR_6(1), 
  5767 ;;		 -> STR_2(17), 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;		None
  5770 ;; Return value:  Size  Location     Type
  5771 ;;		None               void
  5772 ;; Registers used:
  5773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/4
  5776 ;;		On exit  : 1F/4
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5782 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5783 ;;Total ram usage:        4 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; Hardware stack levels required when called:    3
  5786 ;; This function calls:
  5787 ;;		_clear_lcd
  5788 ;;		_i2c_Write_string
  5789 ;;		_i2c_first_line
  5790 ;;		_i2c_second_line
  5791 ;; This function is called by:
  5792 ;;		_main
  5793 ;;		_testjig_done
  5794 ;;		_print_error
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           
  5799                           ;psect for function _print_screen
  5800  0AD4                     _print_screen:	
  5801                           
  5802                           ;Multi_RX_testjig_v2.c: 1723: clear_lcd();
  5803                           
  5804                           ;incstack = 0
  5805                           ; Regs used in _print_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5806  0AD4  2355  3188         	fcall	_clear_lcd
  5807                           
  5808                           ;Multi_RX_testjig_v2.c: 1724: i2c_first_line();
  5809  0AD6  2344  3188         	fcall	_i2c_first_line
  5810                           
  5811                           ;Multi_RX_testjig_v2.c: 1725: i2c_Write_string(top);
  5812  0AD8  0875               	movf	print_screen@top+1,w
  5813  0AD9  00F2               	movwf	i2c_Write_string@data+1
  5814  0ADA  0874               	movf	print_screen@top,w
  5815  0ADB  00F1               	movwf	i2c_Write_string@data
  5816  0ADC  2382  3188         	fcall	_i2c_Write_string
  5817                           
  5818                           ;Multi_RX_testjig_v2.c: 1726: i2c_second_line();
  5819  0ADE  22E5  3188         	fcall	_i2c_second_line
  5820                           
  5821                           ;Multi_RX_testjig_v2.c: 1727: i2c_Write_string(bottom);
  5822  0AE0  0877               	movf	print_screen@bottom+1,w
  5823  0AE1  00F2               	movwf	i2c_Write_string@data+1
  5824  0AE2  0876               	movf	print_screen@bottom,w
  5825  0AE3  00F1               	movwf	i2c_Write_string@data
  5826  0AE4  2B82               	ljmp	l2905
  5827  0AE5                     __end_of_print_screen:	
  5828  0AE5                     __ptext4:	
  5829 ;; *************** function _i2c_second_line *****************
  5830 ;; Defined at:
  5831 ;;		line 1345 in file "Multi_RX_testjig_v2.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;		None
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;		None
  5836 ;; Return value:  Size  Location     Type
  5837 ;;		None               void
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, status,0, pclath, cstack
  5840 ;; Tracked objects:
  5841 ;;		On entry : 1F/4
  5842 ;;		On exit  : 1F/4
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5848 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5849 ;;Total ram usage:        1 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; Hardware stack levels required when called:    2
  5852 ;; This function calls:
  5853 ;;		_i2c_Start
  5854 ;;		_i2c_Stop
  5855 ;;		_i2c_Write
  5856 ;; This function is called by:
  5857 ;;		_print_error
  5858 ;;		_print_screen
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           
  5863                           ;psect for function _i2c_second_line
  5864  0AE5                     _i2c_second_line:	
  5865                           
  5866                           ;Multi_RX_testjig_v2.c: 1347: i2c_Start();
  5867                           
  5868                           ;incstack = 0
  5869                           ; Regs used in _i2c_second_line: [wreg+status,2+status,0+pclath+cstack]
  5870  0AE5  23E1  3188         	fcall	_i2c_Start
  5871                           
  5872                           ;Multi_RX_testjig_v2.c: 1348: i2c_Write(0x7C);
  5873  0AE7  307C               	movlw	124
  5874  0AE8  23D5  3188         	fcall	_i2c_Write
  5875                           
  5876                           ;Multi_RX_testjig_v2.c: 1349: i2c_Write(0x00);
  5877  0AEA  3000               	movlw	0
  5878  0AEB  23D5  3188         	fcall	_i2c_Write
  5879                           
  5880                           ;Multi_RX_testjig_v2.c: 1350: i2c_Write(0xC0);
  5881  0AED  30C0               	movlw	192
  5882  0AEE  23D5  3188         	fcall	_i2c_Write
  5883                           
  5884                           ;Multi_RX_testjig_v2.c: 1351: _delay((unsigned long)((27)*(16000000/4000000.0)));
  5885  0AF0  3023               	movlw	35
  5886  0AF1  00F1               	movwf	??_i2c_second_line
  5887  0AF2                     u5727:	
  5888  0AF2  0BF1               	decfsz	??_i2c_second_line,f
  5889  0AF3  2AF2               	goto	u5727
  5890  0AF4  3200               	nop2	;nop
  5891                           
  5892                           ;Multi_RX_testjig_v2.c: 1352: i2c_Stop();
  5893  0AF5  2BE6               	ljmp	l2903
  5894  0AF6                     __end_of_i2c_second_line:	
  5895  0AF6                     __ptext2:	
  5896 ;; *************** function _print_error *****************
  5897 ;; Defined at:
  5898 ;;		line 1697 in file "Multi_RX_testjig_v2.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;  top             2    8[COMMON] PTR const unsigned char 
  5901 ;;		 -> STR_133(12), STR_129(12), STR_125(12), STR_121(12), 
  5902 ;;		 -> STR_119(8), STR_117(8), STR_107(13), STR_105(13), 
  5903 ;;		 -> STR_103(12), STR_101(12), STR_99(12), STR_97(12), 
  5904 ;;		 -> STR_91(12), STR_89(15), STR_87(12), STR_85(16), 
  5905 ;;		 -> STR_83(12), STR_81(21), STR_77(12), STR_75(15), 
  5906 ;;		 -> STR_73(12), STR_71(16), STR_69(12), STR_67(21), 
  5907 ;;		 -> STR_63(12), STR_61(15), STR_59(12), STR_57(16), 
  5908 ;;		 -> STR_55(12), STR_53(21), STR_47(12), STR_45(12), 
  5909 ;;		 -> STR_41(12), STR_39(13), STR_35(12), STR_25(14), 
  5910 ;;		 -> STR_23(11), STR_21(15), STR_19(15), STR_17(14), 
  5911 ;;		 -> STR_15(14), STR_13(14), STR_11(11), STR_9(14), 
  5912 ;;		 -> STR_7(14), STR_3(9), 
  5913 ;;  bottom          2   10[COMMON] PTR const unsigned char 
  5914 ;;		 -> STR_134(4), STR_130(4), STR_126(4), STR_122(4), 
  5915 ;;		 -> STR_120(15), STR_118(17), STR_108(13), STR_106(14), 
  5916 ;;		 -> STR_104(5), STR_102(5), STR_100(5), STR_98(4), 
  5917 ;;		 -> STR_92(9), STR_90(8), STR_88(9), STR_86(8), 
  5918 ;;		 -> STR_84(9), STR_82(9), STR_78(9), STR_76(8), 
  5919 ;;		 -> STR_74(9), STR_72(8), STR_70(9), STR_68(9), 
  5920 ;;		 -> STR_64(9), STR_62(8), STR_60(9), STR_58(8), 
  5921 ;;		 -> STR_56(9), STR_54(9), STR_48(18), STR_46(14), 
  5922 ;;		 -> STR_42(3), STR_40(12), STR_36(3), STR_26(12), 
  5923 ;;		 -> STR_24(11), STR_22(13), STR_20(13), STR_18(13), 
  5924 ;;		 -> STR_16(13), STR_14(12), STR_12(11), STR_10(13), 
  5925 ;;		 -> STR_8(13), STR_4(14), 
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;		None
  5928 ;; Return value:  Size  Location     Type
  5929 ;;		None               void
  5930 ;; Registers used:
  5931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/5
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5939 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5940 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5941 ;;Total ram usage:        7 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; Hardware stack levels required when called:    4
  5944 ;; This function calls:
  5945 ;;		_buzz_one
  5946 ;;		_clear_lcd
  5947 ;;		_debug_fast_tx
  5948 ;;		_i2c_Write_string
  5949 ;;		_i2c_first_line
  5950 ;;		_i2c_second_line
  5951 ;;		_power_supply_set
  5952 ;;		_print_screen
  5953 ;; This function is called by:
  5954 ;;		_main
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           
  5959                           ;psect for function _print_error
  5960  0AF6                     _print_error:	
  5961                           
  5962                           ;Multi_RX_testjig_v2.c: 1699: power_supply_set(3);
  5963                           
  5964                           ;incstack = 0
  5965                           ; Regs used in _print_error: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5966  0AF6  3003               	movlw	3
  5967  0AF7  23F3  3188         	fcall	_power_supply_set
  5968                           
  5969                           ;Multi_RX_testjig_v2.c: 1701: LATB5 = 0;
  5970  0AF9  0022               	movlb	2	; select bank2
  5971  0AFA  128D               	bcf	13,5	;volatile
  5972                           
  5973                           ;Multi_RX_testjig_v2.c: 1702: LATA6 = 0;
  5974  0AFB  130C               	bcf	12,6	;volatile
  5975                           
  5976                           ;Multi_RX_testjig_v2.c: 1703: TRISG1 = 1;
  5977  0AFC  0026               	movlb	6	; select bank6
  5978  0AFD  148D               	bsf	13,1	;volatile
  5979                           
  5980                           ;Multi_RX_testjig_v2.c: 1704: RE0 = 0;
  5981  0AFE  0020               	movlb	0	; select bank0
  5982  0AFF  1010               	bcf	16,0	;volatile
  5983                           
  5984                           ;Multi_RX_testjig_v2.c: 1705: debug_fast_tx(12345);
  5985  0B00  3039               	movlw	57
  5986  0B01  00F0               	movwf	debug_fast_tx@data
  5987  0B02  3030               	movlw	48
  5988  0B03  00F1               	movwf	debug_fast_tx@data+1
  5989  0B04  22A7  3188         	fcall	_debug_fast_tx
  5990                           
  5991                           ;Multi_RX_testjig_v2.c: 1706: buzz_one(1000);
  5992  0B06  30E8               	movlw	232
  5993  0B07  00F0               	movwf	buzz_one@time
  5994  0B08  3003               	movlw	3
  5995  0B09  00F1               	movwf	buzz_one@time+1
  5996  0B0A  23EB  3188         	fcall	_buzz_one
  5997  0B0C                     l3727:	
  5998                           
  5999                           ;Multi_RX_testjig_v2.c: 1708: {
  6000                           ;Multi_RX_testjig_v2.c: 1709: clear_lcd();
  6001  0B0C  2355  3188         	fcall	_clear_lcd
  6002                           
  6003                           ;Multi_RX_testjig_v2.c: 1710: i2c_first_line();
  6004  0B0E  2344  3188         	fcall	_i2c_first_line
  6005                           
  6006                           ;Multi_RX_testjig_v2.c: 1711: i2c_Write_string(top);
  6007  0B10  0879               	movf	print_error@top+1,w
  6008  0B11  00F2               	movwf	i2c_Write_string@data+1
  6009  0B12  0878               	movf	print_error@top,w
  6010  0B13  00F1               	movwf	i2c_Write_string@data
  6011  0B14  2382  3188         	fcall	_i2c_Write_string
  6012                           
  6013                           ;Multi_RX_testjig_v2.c: 1712: i2c_second_line();
  6014  0B16  22E5  3188         	fcall	_i2c_second_line
  6015                           
  6016                           ;Multi_RX_testjig_v2.c: 1713: i2c_Write_string(bottom);
  6017  0B18  087B               	movf	print_error@bottom+1,w
  6018  0B19  00F2               	movwf	i2c_Write_string@data+1
  6019  0B1A  087A               	movf	print_error@bottom,w
  6020  0B1B  00F1               	movwf	i2c_Write_string@data
  6021  0B1C  2382  3188         	fcall	_i2c_Write_string
  6022                           
  6023                           ;Multi_RX_testjig_v2.c: 1714: _delay((unsigned long)((2000)*(16000000/4000.0)));
  6024  0B1E  3029               	movlw	41
  6025  0B1F  0020               	movlb	0	; select bank0
  6026  0B20  00A2               	movwf	??_print_error+2
  6027  0B21  3096               	movlw	150
  6028  0B22  00A1               	movwf	??_print_error+1
  6029  0B23  30A6               	movlw	166
  6030  0B24  00A0               	movwf	??_print_error
  6031  0B25                     u5707:	
  6032  0B25  0BA0               	decfsz	??_print_error,f
  6033  0B26  2B25               	goto	u5707
  6034  0B27  0BA1               	decfsz	??_print_error+1,f
  6035  0B28  2B25               	goto	u5707
  6036  0B29  0BA2               	decfsz	??_print_error+2,f
  6037  0B2A  2B25               	goto	u5707
  6038                           
  6039                           ;Multi_RX_testjig_v2.c: 1715: print_screen("Press START", " to restart test");
  6040  0B2B  3063               	movlw	low ((STR_166+1)| (0+32768))
  6041  0B2C  00F4               	movwf	print_screen@top
  6042  0B2D  3092               	movlw	high ((STR_166+1)| (0+32768))
  6043  0B2E  00F5               	movwf	print_screen@top+1
  6044  0B2F  30BA               	movlw	low (STR_174| (0+32768))
  6045  0B30  00F6               	movwf	print_screen@bottom
  6046  0B31  3090               	movlw	high (STR_174| (0+32768))
  6047  0B32  00F7               	movwf	print_screen@bottom+1
  6048  0B33  22D4  3188         	fcall	_print_screen
  6049                           
  6050                           ;Multi_RX_testjig_v2.c: 1717: _delay((unsigned long)((1200)*(16000000/4000.0)));
  6051  0B35  3019               	movlw	25
  6052  0B36  0020               	movlb	0	; select bank0
  6053  0B37  00A2               	movwf	??_print_error+2
  6054  0B38  305A               	movlw	90
  6055  0B39  00A1               	movwf	??_print_error+1
  6056  0B3A  30C8               	movlw	200
  6057  0B3B  00A0               	movwf	??_print_error
  6058  0B3C                     u5717:	
  6059  0B3C  0BA0               	decfsz	??_print_error,f
  6060  0B3D  2B3C               	goto	u5717
  6061  0B3E  0BA1               	decfsz	??_print_error+1,f
  6062  0B3F  2B3C               	goto	u5717
  6063  0B40  0BA2               	decfsz	??_print_error+2,f
  6064  0B41  2B3C               	goto	u5717
  6065  0B42  3200               	nop2
  6066  0B43  2B0C               	goto	l3727
  6067  0B44                     __end_of_print_error:	
  6068  0B44                     __ptext5:	
  6069 ;; *************** function _i2c_first_line *****************
  6070 ;; Defined at:
  6071 ;;		line 1335 in file "Multi_RX_testjig_v2.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;		None
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;		None
  6076 ;; Return value:  Size  Location     Type
  6077 ;;		None               void
  6078 ;; Registers used:
  6079 ;;		wreg, status,2, status,0, pclath, cstack
  6080 ;; Tracked objects:
  6081 ;;		On entry : 1F/4
  6082 ;;		On exit  : 1F/4
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6089 ;;Total ram usage:        1 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:    2
  6092 ;; This function calls:
  6093 ;;		_i2c_Start
  6094 ;;		_i2c_Stop
  6095 ;;		_i2c_Write
  6096 ;; This function is called by:
  6097 ;;		_print_error
  6098 ;;		_print_screen
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           
  6103                           ;psect for function _i2c_first_line
  6104  0B44                     _i2c_first_line:	
  6105                           
  6106                           ;Multi_RX_testjig_v2.c: 1337: i2c_Start();
  6107                           
  6108                           ;incstack = 0
  6109                           ; Regs used in _i2c_first_line: [wreg+status,2+status,0+pclath+cstack]
  6110  0B44  23E1  3188         	fcall	_i2c_Start
  6111                           
  6112                           ;Multi_RX_testjig_v2.c: 1338: i2c_Write(0x7C);
  6113  0B46  307C               	movlw	124
  6114  0B47  23D5  3188         	fcall	_i2c_Write
  6115                           
  6116                           ;Multi_RX_testjig_v2.c: 1339: i2c_Write(0x00);
  6117  0B49  3000               	movlw	0
  6118  0B4A  23D5  3188         	fcall	_i2c_Write
  6119                           
  6120                           ;Multi_RX_testjig_v2.c: 1340: i2c_Write(0x80);
  6121  0B4C  3080               	movlw	128
  6122  0B4D  23D5  3188         	fcall	_i2c_Write
  6123                           
  6124                           ;Multi_RX_testjig_v2.c: 1341: _delay((unsigned long)((27)*(16000000/4000000.0)));
  6125  0B4F  3023               	movlw	35
  6126  0B50  00F1               	movwf	??_i2c_first_line
  6127  0B51                     u5737:	
  6128  0B51  0BF1               	decfsz	??_i2c_first_line,f
  6129  0B52  2B51               	goto	u5737
  6130  0B53  3200               	nop2	;nop
  6131                           
  6132                           ;Multi_RX_testjig_v2.c: 1342: i2c_Stop();
  6133  0B54  2BE6               	ljmp	l2903
  6134  0B55                     __end_of_i2c_first_line:	
  6135  0B55                     __ptext7:	
  6136 ;; *************** function _clear_lcd *****************
  6137 ;; Defined at:
  6138 ;;		line 1325 in file "Multi_RX_testjig_v2.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;		None
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;		None
  6143 ;; Return value:  Size  Location     Type
  6144 ;;		None               void
  6145 ;; Registers used:
  6146 ;;		wreg, status,2, status,0, pclath, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/2
  6149 ;;		On exit  : 1F/4
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6154 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6156 ;;Total ram usage:        2 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    2
  6159 ;; This function calls:
  6160 ;;		_i2c_Start
  6161 ;;		_i2c_Stop
  6162 ;;		_i2c_Write
  6163 ;; This function is called by:
  6164 ;;		_print_error
  6165 ;;		_print_screen
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           
  6170                           ;psect for function _clear_lcd
  6171  0B55                     _clear_lcd:	
  6172                           
  6173                           ;Multi_RX_testjig_v2.c: 1327: i2c_Start();
  6174                           
  6175                           ;incstack = 0
  6176                           ; Regs used in _clear_lcd: [wreg+status,2+status,0+pclath+cstack]
  6177  0B55  23E1  3188         	fcall	_i2c_Start
  6178                           
  6179                           ;Multi_RX_testjig_v2.c: 1328: i2c_Write(0x7C);
  6180  0B57  307C               	movlw	124
  6181  0B58  23D5  3188         	fcall	_i2c_Write
  6182                           
  6183                           ;Multi_RX_testjig_v2.c: 1329: i2c_Write(0x00);
  6184  0B5A  3000               	movlw	0
  6185  0B5B  23D5  3188         	fcall	_i2c_Write
  6186                           
  6187                           ;Multi_RX_testjig_v2.c: 1330: i2c_Write(0x01);
  6188  0B5D  3001               	movlw	1
  6189  0B5E  23D5  3188         	fcall	_i2c_Write
  6190                           
  6191                           ;Multi_RX_testjig_v2.c: 1331: _delay((unsigned long)((2)*(16000000/4000.0)));
  6192  0B60  300B               	movlw	11
  6193  0B61  00F2               	movwf	??_clear_lcd+1
  6194  0B62  3062               	movlw	98
  6195  0B63  00F1               	movwf	??_clear_lcd
  6196  0B64                     u5747:	
  6197  0B64  0BF1               	decfsz	??_clear_lcd,f
  6198  0B65  2B64               	goto	u5747
  6199  0B66  0BF2               	decfsz	??_clear_lcd+1,f
  6200  0B67  2B64               	goto	u5747
  6201  0B68  0000               	nop
  6202                           
  6203                           ;Multi_RX_testjig_v2.c: 1332: i2c_Stop();
  6204  0B69  2BE6               	ljmp	l2903
  6205  0B6A                     __end_of_clear_lcd:	
  6206  0B6A                     __ptext29:	
  6207 ;; *************** function _digitalpot *****************
  6208 ;; Defined at:
  6209 ;;		line 2178 in file "Multi_RX_testjig_v2.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;  value           1    wreg     unsigned char 
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;  value           1    3[COMMON] unsigned char 
  6214 ;; Return value:  Size  Location     Type
  6215 ;;		None               void
  6216 ;; Registers used:
  6217 ;;		wreg, status,2, status,0, pclath, cstack
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/4
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6224 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6225 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6226 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6227 ;;Total ram usage:        3 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; Hardware stack levels required when called:    2
  6230 ;; This function calls:
  6231 ;;		_i2c_Start
  6232 ;;		_i2c_Stop
  6233 ;;		_i2c_Write
  6234 ;; This function is called by:
  6235 ;;		_Vout_set
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           
  6240                           ;psect for function _digitalpot
  6241  0B6A                     _digitalpot:	
  6242                           
  6243                           ;incstack = 0
  6244                           ; Regs used in _digitalpot: [wreg+status,2+status,0+pclath+cstack]
  6245                           ;digitalpot@value stored from wreg
  6246  0B6A  00F3               	movwf	digitalpot@value
  6247                           
  6248                           ;Multi_RX_testjig_v2.c: 2180: i2c_Start();
  6249  0B6B  23E1  3188         	fcall	_i2c_Start
  6250                           
  6251                           ;Multi_RX_testjig_v2.c: 2181: i2c_Write(0x5C);
  6252  0B6D  305C               	movlw	92
  6253  0B6E  23D5  3188         	fcall	_i2c_Write
  6254                           
  6255                           ;Multi_RX_testjig_v2.c: 2182: i2c_Write(0b00000000);
  6256  0B70  3000               	movlw	0
  6257  0B71  23D5  3188         	fcall	_i2c_Write
  6258                           
  6259                           ;Multi_RX_testjig_v2.c: 2183: i2c_Write(value);
  6260  0B73  0873               	movf	digitalpot@value,w
  6261  0B74  23D5  3188         	fcall	_i2c_Write
  6262                           
  6263                           ;Multi_RX_testjig_v2.c: 2184: i2c_Stop();
  6264  0B76  23E6  3188         	fcall	_i2c_Stop
  6265                           
  6266                           ;Multi_RX_testjig_v2.c: 2185: _delay((unsigned long)((20)*(16000000/4000.0)));
  6267  0B78  3068               	movlw	104
  6268  0B79  00F2               	movwf	??_digitalpot+1
  6269  0B7A  30E4               	movlw	228
  6270  0B7B  00F1               	movwf	??_digitalpot
  6271  0B7C                     u5777:	
  6272  0B7C  0BF1               	decfsz	??_digitalpot,f
  6273  0B7D  2B7C               	goto	u5777
  6274  0B7E  0BF2               	decfsz	??_digitalpot+1,f
  6275  0B7F  2B7C               	goto	u5777
  6276  0B80  0000               	nop
  6277  0B81  0008               	return
  6278  0B82                     __end_of_digitalpot:	
  6279  0B82                     __ptext6:	
  6280 ;; *************** function _i2c_Write_string *****************
  6281 ;; Defined at:
  6282 ;;		line 1257 in file "Multi_RX_testjig_v2.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;  data            2    1[COMMON] PTR const unsigned char 
  6285 ;;		 -> STR_174(17), STR_173(12), STR_172(13), STR_171(17), 
  6286 ;;		 -> STR_170(13), STR_169(16), STR_168(13), STR_167(12), 
  6287 ;;		 -> STR_166(13), STR_165(15), STR_164(14), STR_163(17), 
  6288 ;;		 -> STR_162(14), STR_161(16), STR_160(14), STR_159(12), 
  6289 ;;		 -> STR_158(14), STR_157(15), STR_156(8), STR_155(17), 
  6290 ;;		 -> STR_154(8), STR_153(9), STR_152(9), STR_151(16), 
  6291 ;;		 -> STR_150(9), STR_149(5), STR_148(9), STR_147(8), 
  6292 ;;		 -> STR_146(14), STR_145(14), STR_144(14), STR_143(16), 
  6293 ;;		 -> STR_142(14), STR_141(9), STR_140(14), STR_139(12), 
  6294 ;;		 -> STR_138(11), STR_137(10), STR_136(13), STR_135(16), 
  6295 ;;		 -> STR_134(4), STR_133(12), STR_132(10), STR_131(10), 
  6296 ;;		 -> STR_130(4), STR_129(12), STR_128(2), STR_127(14), 
  6297 ;;		 -> STR_126(4), STR_125(12), STR_124(2), STR_123(13), 
  6298 ;;		 -> STR_122(4), STR_121(12), STR_120(15), STR_119(8), 
  6299 ;;		 -> STR_118(17), STR_117(8), STR_116(16), STR_115(8), 
  6300 ;;		 -> STR_114(15), STR_113(8), STR_112(7), STR_111(8), 
  6301 ;;		 -> STR_110(10), STR_109(8), STR_108(13), STR_107(13), 
  6302 ;;		 -> STR_106(14), STR_105(13), STR_104(5), STR_103(12), 
  6303 ;;		 -> STR_102(5), STR_101(12), STR_100(5), STR_99(12), 
  6304 ;;		 -> STR_98(4), STR_97(12), STR_96(5), STR_95(8), 
  6305 ;;		 -> STR_94(9), STR_93(14), STR_92(9), STR_91(12), 
  6306 ;;		 -> STR_90(8), STR_89(15), STR_88(9), STR_87(12), 
  6307 ;;		 -> STR_86(8), STR_85(16), STR_84(9), STR_83(12), 
  6308 ;;		 -> STR_82(9), STR_81(21), STR_80(5), STR_79(11), 
  6309 ;;		 -> STR_78(9), STR_77(12), STR_76(8), STR_75(15), 
  6310 ;;		 -> STR_74(9), STR_73(12), STR_72(8), STR_71(16), 
  6311 ;;		 -> STR_70(9), STR_69(12), STR_68(9), STR_67(21), 
  6312 ;;		 -> STR_66(5), STR_65(12), STR_64(9), STR_63(12), 
  6313 ;;		 -> STR_62(8), STR_61(15), STR_60(9), STR_59(12), 
  6314 ;;		 -> STR_58(8), STR_57(16), STR_56(9), STR_55(12), 
  6315 ;;		 -> STR_54(9), STR_53(21), STR_52(5), STR_51(11), 
  6316 ;;		 -> STR_50(1), STR_49(11), STR_48(18), STR_47(12), 
  6317 ;;		 -> STR_46(14), STR_45(12), STR_44(6), STR_43(13), 
  6318 ;;		 -> STR_42(3), STR_41(12), STR_40(12), STR_39(13), 
  6319 ;;		 -> STR_38(18), STR_37(9), STR_36(3), STR_35(12), 
  6320 ;;		 -> STR_34(6), STR_33(13), STR_32(9), STR_31(19), 
  6321 ;;		 -> STR_30(13), STR_29(12), STR_28(1), STR_27(19), 
  6322 ;;		 -> STR_26(12), STR_25(14), STR_24(11), STR_23(11), 
  6323 ;;		 -> STR_22(13), STR_21(15), STR_20(13), STR_19(15), 
  6324 ;;		 -> STR_18(13), STR_17(14), STR_16(13), STR_15(14), 
  6325 ;;		 -> STR_14(12), STR_13(14), STR_12(11), STR_11(11), 
  6326 ;;		 -> STR_10(13), STR_9(14), STR_8(13), STR_7(14), 
  6327 ;;		 -> STR_6(1), STR_5(15), STR_4(14), STR_3(9), 
  6328 ;;		 -> STR_2(17), STR_1(9), 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;		None
  6331 ;; Return value:  Size  Location     Type
  6332 ;;		None               void
  6333 ;; Registers used:
  6334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6335 ;; Tracked objects:
  6336 ;;		On entry : 1F/4
  6337 ;;		On exit  : 1F/4
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6342 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6343 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6344 ;;Total ram usage:        3 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; Hardware stack levels required when called:    2
  6347 ;; This function calls:
  6348 ;;		_i2c_Start
  6349 ;;		_i2c_Stop
  6350 ;;		_i2c_Write
  6351 ;; This function is called by:
  6352 ;;		_print_error
  6353 ;;		_print_screen
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           
  6358                           ;psect for function _i2c_Write_string
  6359  0B82                     _i2c_Write_string:	
  6360  0B82                     l2905:	
  6361                           ;incstack = 0
  6362                           ; Regs used in _i2c_Write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6363                           
  6364                           
  6365                           ;Multi_RX_testjig_v2.c: 1259: i2c_Start();
  6366  0B82  23E1  3188         	fcall	_i2c_Start
  6367                           
  6368                           ;Multi_RX_testjig_v2.c: 1260: i2c_Write(0x7C);
  6369  0B84  307C               	movlw	124
  6370  0B85  23D5  3188         	fcall	_i2c_Write
  6371                           
  6372                           ;Multi_RX_testjig_v2.c: 1261: i2c_Write(0x40);
  6373  0B87  3040               	movlw	64
  6374  0B88  23D5  3188         	fcall	_i2c_Write
  6375  0B8A                     l2915:	
  6376                           ;Multi_RX_testjig_v2.c: 1263: while(*data != (0))
  6377                           
  6378  0B8A  0871               	movf	i2c_Write_string@data,w
  6379  0B8B  0084               	movwf	4
  6380  0B8C  0872               	movf	i2c_Write_string@data+1,w
  6381  0B8D  0085               	movwf	5
  6382  0B8E  0012               	moviw fsr0++
  6383  0B8F  1903               	btfsc	3,2
  6384  0B90  2B9C               	goto	l2917
  6385                           
  6386                           ;Multi_RX_testjig_v2.c: 1264: {
  6387                           ;Multi_RX_testjig_v2.c: 1265: i2c_Write(*data);
  6388  0B91  0871               	movf	i2c_Write_string@data,w
  6389  0B92  0084               	movwf	4
  6390  0B93  0872               	movf	i2c_Write_string@data+1,w
  6391  0B94  0085               	movwf	5
  6392  0B95  0800               	movf	0,w	;code access
  6393  0B96  23D5  3188         	fcall	_i2c_Write
  6394                           
  6395                           ;Multi_RX_testjig_v2.c: 1266: data++;
  6396  0B98  0AF1               	incf	i2c_Write_string@data,f
  6397  0B99  1903               	skipnz
  6398  0B9A  0AF2               	incf	i2c_Write_string@data+1,f
  6399  0B9B  2B8A               	goto	l2915
  6400  0B9C                     l2917:	
  6401                           
  6402                           ;Multi_RX_testjig_v2.c: 1267: }
  6403                           ;Multi_RX_testjig_v2.c: 1268: i2c_Stop();
  6404  0B9C  2BE6               	ljmp	l2903
  6405  0B9D                     __end_of_i2c_Write_string:	
  6406  0B9D                     __ptext17:	
  6407 ;; *************** function _init_i2c_lcd_5v *****************
  6408 ;; Defined at:
  6409 ;;		line 1281 in file "Multi_RX_testjig_v2.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;  contrast        1    wreg     unsigned char 
  6412 ;;  single1_doub    1    1[COMMON] unsigned char 
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;  contrast        1    4[COMMON] unsigned char 
  6415 ;; Return value:  Size  Location     Type
  6416 ;;		None               void
  6417 ;; Registers used:
  6418 ;;		wreg, status,2, status,0, pclath, cstack
  6419 ;; Tracked objects:
  6420 ;;		On entry : 1F/4
  6421 ;;		On exit  : 1F/4
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6424 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6426 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6427 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6428 ;;Total ram usage:        4 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:    2
  6431 ;; This function calls:
  6432 ;;		_i2c_Start
  6433 ;;		_i2c_Stop
  6434 ;;		_i2c_Write
  6435 ;; This function is called by:
  6436 ;;		_main
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           
  6441                           ;psect for function _init_i2c_lcd_5v
  6442  0B9D                     _init_i2c_lcd_5v:	
  6443                           
  6444                           ;incstack = 0
  6445                           ; Regs used in _init_i2c_lcd_5v: [wreg+status,2+status,0+pclath+cstack]
  6446                           ;init_i2c_lcd_5v@contrast stored from wreg
  6447  0B9D  00F4               	movwf	init_i2c_lcd_5v@contrast
  6448                           
  6449                           ;Multi_RX_testjig_v2.c: 1283: i2c_Start();
  6450  0B9E  23E1  3188         	fcall	_i2c_Start
  6451                           
  6452                           ;Multi_RX_testjig_v2.c: 1284: i2c_Write(0x7C);
  6453  0BA0  307C               	movlw	124
  6454  0BA1  23D5  3188         	fcall	_i2c_Write
  6455                           
  6456                           ;Multi_RX_testjig_v2.c: 1285: i2c_Write(0x00);
  6457  0BA3  3000               	movlw	0
  6458  0BA4  23D5  3188         	fcall	_i2c_Write
  6459                           
  6460                           ;Multi_RX_testjig_v2.c: 1286: i2c_Write(0x39);
  6461  0BA6  3039               	movlw	57
  6462  0BA7  23D5  3188         	fcall	_i2c_Write
  6463                           
  6464                           ;Multi_RX_testjig_v2.c: 1287: i2c_Write(0x1C);
  6465  0BA9  301C               	movlw	28
  6466  0BAA  23D5  3188         	fcall	_i2c_Write
  6467                           
  6468                           ;Multi_RX_testjig_v2.c: 1288: i2c_Write(0x70 | contrast);
  6469  0BAC  0874               	movf	init_i2c_lcd_5v@contrast,w
  6470  0BAD  3870               	iorlw	112
  6471  0BAE  23D5  3188         	fcall	_i2c_Write
  6472                           
  6473                           ;Multi_RX_testjig_v2.c: 1289: i2c_Write(0x50);
  6474  0BB0  3050               	movlw	80
  6475  0BB1  23D5  3188         	fcall	_i2c_Write
  6476                           
  6477                           ;Multi_RX_testjig_v2.c: 1290: i2c_Write(0x6C);
  6478  0BB3  306C               	movlw	108
  6479  0BB4  23D5  3188         	fcall	_i2c_Write
  6480                           
  6481                           ;Multi_RX_testjig_v2.c: 1291: if(single1_double2 == 1)
  6482  0BB6  0B71               	decfsz	init_i2c_lcd_5v@single1_double2,w
  6483  0BB7  2BBB               	goto	l3613
  6484                           
  6485                           ;Multi_RX_testjig_v2.c: 1292: i2c_Write(0x38);
  6486  0BB8  3038               	movlw	56
  6487  0BB9  23D5  3188         	fcall	_i2c_Write
  6488  0BBB                     l3613:	
  6489                           
  6490                           ;Multi_RX_testjig_v2.c: 1293: if(single1_double2 == 2)
  6491  0BBB  3002               	movlw	2
  6492  0BBC  0671               	xorwf	init_i2c_lcd_5v@single1_double2,w
  6493  0BBD  1D03               	btfss	3,2
  6494  0BBE  2BC2               	goto	l532
  6495                           
  6496                           ;Multi_RX_testjig_v2.c: 1294: i2c_Write(0x34);
  6497  0BBF  3034               	movlw	52
  6498  0BC0  23D5  3188         	fcall	_i2c_Write
  6499  0BC2                     l532:	
  6500                           
  6501                           ;Multi_RX_testjig_v2.c: 1295: i2c_Write(0x0C);
  6502  0BC2  300C               	movlw	12
  6503  0BC3  23D5  3188         	fcall	_i2c_Write
  6504                           
  6505                           ;Multi_RX_testjig_v2.c: 1296: i2c_Write(0x06);
  6506  0BC5  3006               	movlw	6
  6507  0BC6  23D5  3188         	fcall	_i2c_Write
  6508                           
  6509                           ;Multi_RX_testjig_v2.c: 1297: i2c_Write(0x01);
  6510  0BC8  3001               	movlw	1
  6511  0BC9  23D5  3188         	fcall	_i2c_Write
  6512                           
  6513                           ;Multi_RX_testjig_v2.c: 1298: _delay((unsigned long)((2)*(16000000/4000.0)));
  6514  0BCB  300B               	movlw	11
  6515  0BCC  00F3               	movwf	??_init_i2c_lcd_5v+1
  6516  0BCD  3062               	movlw	98
  6517  0BCE  00F2               	movwf	??_init_i2c_lcd_5v
  6518  0BCF                     u5757:	
  6519  0BCF  0BF2               	decfsz	??_init_i2c_lcd_5v,f
  6520  0BD0  2BCF               	goto	u5757
  6521  0BD1  0BF3               	decfsz	??_init_i2c_lcd_5v+1,f
  6522  0BD2  2BCF               	goto	u5757
  6523  0BD3  0000               	nop
  6524                           
  6525                           ;Multi_RX_testjig_v2.c: 1299: i2c_Stop();
  6526  0BD4  2BE6               	ljmp	l2903
  6527  0BD5                     __end_of_init_i2c_lcd_5v:	
  6528  0BD5                     __ptext30:	
  6529 ;; *************** function _i2c_Write *****************
  6530 ;; Defined at:
  6531 ;;		line 1243 in file "Multi_RX_testjig_v2.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  data            1    wreg     unsigned char 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;  data            1    0[COMMON] unsigned char 
  6536 ;; Return value:  Size  Location     Type
  6537 ;;		None               void
  6538 ;; Registers used:
  6539 ;;		wreg, status,2
  6540 ;; Tracked objects:
  6541 ;;		On entry : 1F/4
  6542 ;;		On exit  : 1F/4
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6546 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6548 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6549 ;;Total ram usage:        1 bytes
  6550 ;; Hardware stack levels used:    1
  6551 ;; Hardware stack levels required when called:    1
  6552 ;; This function calls:
  6553 ;;		Nothing
  6554 ;; This function is called by:
  6555 ;;		_i2c_Write_string
  6556 ;;		_i2c_write_char
  6557 ;;		_init_i2c_lcd_5v
  6558 ;;		_clear_lcd
  6559 ;;		_i2c_first_line
  6560 ;;		_i2c_second_line
  6561 ;;		_lcd_set_cursor
  6562 ;;		_digitalpot
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           
  6567                           ;psect for function _i2c_Write
  6568  0BD5                     _i2c_Write:	
  6569                           
  6570                           ;incstack = 0
  6571                           ; Regs used in _i2c_Write: [wreg+status,2]
  6572                           ;i2c_Write@data stored from wreg
  6573  0BD5  00F0               	movwf	i2c_Write@data
  6574                           
  6575                           ;Multi_RX_testjig_v2.c: 1245: SSP1BUF = data;
  6576  0BD6  0870               	movf	i2c_Write@data,w
  6577  0BD7  0091               	movwf	17	;volatile
  6578  0BD8                     l507:	
  6579                           ;Multi_RX_testjig_v2.c: 1246: while(SSP1STATbits.BF == 1);
  6580                           
  6581  0BD8  1814               	btfsc	20,0	;volatile
  6582  0BD9  2BD8               	goto	l507
  6583  0BDA                     l2899:	
  6584  0BDA  0816               	movf	22,w	;volatile
  6585  0BDB  391F               	andlw	31
  6586  0BDC  1D03               	btfss	3,2
  6587  0BDD  2BDA               	goto	l2899
  6588  0BDE  1D14               	btfss	20,2	;volatile
  6589  0BDF  0008               	return
  6590  0BE0  2BDA               	goto	l2899
  6591  0BE1                     __end_of_i2c_Write:	
  6592  0BE1                     __ptext32:	
  6593 ;; *************** function _i2c_Start *****************
  6594 ;; Defined at:
  6595 ;;		line 1234 in file "Multi_RX_testjig_v2.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;		None
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;		None
  6600 ;; Return value:  Size  Location     Type
  6601 ;;		None               void
  6602 ;; Registers used:
  6603 ;;		None
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/4
  6606 ;;		On exit  : 1F/4
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6613 ;;Total ram usage:        0 bytes
  6614 ;; Hardware stack levels used:    1
  6615 ;; Hardware stack levels required when called:    1
  6616 ;; This function calls:
  6617 ;;		Nothing
  6618 ;; This function is called by:
  6619 ;;		_i2c_Write_string
  6620 ;;		_i2c_write_char
  6621 ;;		_init_i2c_lcd_5v
  6622 ;;		_clear_lcd
  6623 ;;		_i2c_first_line
  6624 ;;		_i2c_second_line
  6625 ;;		_lcd_set_cursor
  6626 ;;		_digitalpot
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           
  6631                           ;psect for function _i2c_Start
  6632  0BE1                     _i2c_Start:	
  6633                           
  6634                           ;Multi_RX_testjig_v2.c: 1237: SSP1CON2bits.SEN = 1;
  6635                           
  6636                           ;incstack = 0
  6637                           ; Regs used in _i2c_Start: []
  6638  0BE1  0024               	movlb	4	; select bank4
  6639  0BE2  1416               	bsf	22,0	;volatile
  6640  0BE3                     l501:	
  6641                           ;Multi_RX_testjig_v2.c: 1239: while(SSP1CON2bits.SEN == 1);
  6642                           
  6643  0BE3  1C16               	btfss	22,0	;volatile
  6644  0BE4  0008               	return
  6645  0BE5  2BE3               	goto	l501
  6646  0BE6                     __end_of_i2c_Start:	
  6647  0BE6                     __ptext31:	
  6648 ;; *************** function _i2c_Stop *****************
  6649 ;; Defined at:
  6650 ;;		line 1250 in file "Multi_RX_testjig_v2.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;		None
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;		None
  6655 ;; Return value:  Size  Location     Type
  6656 ;;		None               void
  6657 ;; Registers used:
  6658 ;;		None
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/4
  6661 ;;		On exit  : 1F/4
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6668 ;;Total ram usage:        0 bytes
  6669 ;; Hardware stack levels used:    1
  6670 ;; Hardware stack levels required when called:    1
  6671 ;; This function calls:
  6672 ;;		Nothing
  6673 ;; This function is called by:
  6674 ;;		_i2c_Write_string
  6675 ;;		_i2c_write_char
  6676 ;;		_init_i2c_lcd_5v
  6677 ;;		_clear_lcd
  6678 ;;		_i2c_first_line
  6679 ;;		_i2c_second_line
  6680 ;;		_lcd_set_cursor
  6681 ;;		_digitalpot
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           
  6686                           ;psect for function _i2c_Stop
  6687  0BE6                     _i2c_Stop:	
  6688  0BE6                     l2903:	
  6689                           ;incstack = 0
  6690                           ; Regs used in _i2c_Stop: []
  6691                           
  6692                           
  6693                           ;Multi_RX_testjig_v2.c: 1252: SSP1CON2bits.PEN = 1;
  6694  0BE6  0024               	movlb	4	; select bank4
  6695  0BE7  1516               	bsf	22,2	;volatile
  6696  0BE8                     l516:	
  6697                           ;Multi_RX_testjig_v2.c: 1253: while(SSP1CON2bits.PEN == 1);
  6698                           
  6699  0BE8  1D16               	btfss	22,2	;volatile
  6700  0BE9  0008               	return
  6701  0BEA  2BE8               	goto	l516
  6702  0BEB                     __end_of_i2c_Stop:	
  6703  0BEB                     __ptext10:	
  6704 ;; *************** function _buzz_one *****************
  6705 ;; Defined at:
  6706 ;;		line 1224 in file "Multi_RX_testjig_v2.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  time            2    0[COMMON] unsigned int 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;		None
  6711 ;; Return value:  Size  Location     Type
  6712 ;;		None               void
  6713 ;; Registers used:
  6714 ;;		wreg
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/4
  6717 ;;		On exit  : 1F/2
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6724 ;;Total ram usage:        2 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; Hardware stack levels required when called:    1
  6727 ;; This function calls:
  6728 ;;		Nothing
  6729 ;; This function is called by:
  6730 ;;		_testjig_done
  6731 ;;		_print_error
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           
  6736                           ;psect for function _buzz_one
  6737  0BEB                     _buzz_one:	
  6738                           
  6739                           ;Multi_RX_testjig_v2.c: 1226: buzz_timer = time;
  6740                           
  6741                           ;incstack = 0
  6742                           ; Regs used in _buzz_one: [wreg]
  6743  0BEB  0871               	movf	buzz_one@time+1,w
  6744  0BEC  0021               	movlb	1	; select bank1
  6745  0BED  00A3               	movwf	(_buzz_timer+1)^(0+128)	;volatile
  6746  0BEE  0870               	movf	buzz_one@time,w
  6747  0BEF  00A2               	movwf	_buzz_timer^(0+128)	;volatile
  6748                           
  6749                           ;Multi_RX_testjig_v2.c: 1227: LATC5 = 1;
  6750  0BF0  0022               	movlb	2	; select bank2
  6751  0BF1  168E               	bsf	14,5	;volatile
  6752  0BF2  0008               	return
  6753  0BF3                     __end_of_buzz_one:	
  6754  0BF3                     __ptext8:	
  6755 ;; *************** function _power_supply_set *****************
  6756 ;; Defined at:
  6757 ;;		line 2100 in file "Multi_RX_testjig_v2.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;  supply          1    wreg     unsigned char 
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;  supply          1    0[COMMON] unsigned char 
  6762 ;; Return value:  Size  Location     Type
  6763 ;;		None               void
  6764 ;; Registers used:
  6765 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/4
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6774 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6775 ;;Total ram usage:        1 bytes
  6776 ;; Hardware stack levels used:    1
  6777 ;; Hardware stack levels required when called:    1
  6778 ;; This function calls:
  6779 ;;		Nothing
  6780 ;; This function is called by:
  6781 ;;		_main
  6782 ;;		_testjig_done
  6783 ;;		_print_error
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787                           
  6788                           ;psect for function _power_supply_set
  6789  0BF3                     _power_supply_set:	
  6790                           
  6791                           ;incstack = 0
  6792                           ; Regs used in _power_supply_set: [wreg-fsr0h+status,2+status,0]
  6793                           ;power_supply_set@supply stored from wreg
  6794  0BF3  00F0               	movwf	power_supply_set@supply
  6795                           
  6796                           ;Multi_RX_testjig_v2.c: 2102: switch(supply)
  6797  0BF4  2C08               	goto	l3091
  6798  0BF5                     l679:	
  6799                           ;Multi_RX_testjig_v2.c: 2103: {
  6800                           ;Multi_RX_testjig_v2.c: 2104: case 0:
  6801                           
  6802                           
  6803                           ;Multi_RX_testjig_v2.c: 2105: LATD4 = 1;
  6804  0BF5  0022               	movlb	2	; select bank2
  6805  0BF6  160F               	bsf	15,4	;volatile
  6806                           
  6807                           ;Multi_RX_testjig_v2.c: 2107: LATD5 = 1;
  6808  0BF7  168F               	bsf	15,5	;volatile
  6809                           
  6810                           ;Multi_RX_testjig_v2.c: 2111: break;
  6811  0BF8  0008               	return
  6812  0BF9                     l681:	
  6813                           ;Multi_RX_testjig_v2.c: 2112: case 1:
  6814                           
  6815                           
  6816                           ;Multi_RX_testjig_v2.c: 2113: LATD4 = 1;
  6817  0BF9  0022               	movlb	2	; select bank2
  6818  0BFA  160F               	bsf	15,4	;volatile
  6819                           
  6820                           ;Multi_RX_testjig_v2.c: 2114: LATD5 = 0;
  6821  0BFB  128F               	bcf	15,5	;volatile
  6822                           
  6823                           ;Multi_RX_testjig_v2.c: 2115: LATD6 = 1;
  6824  0BFC  170F               	bsf	15,6	;volatile
  6825                           
  6826                           ;Multi_RX_testjig_v2.c: 2116: break;
  6827  0BFD  0008               	return
  6828  0BFE                     l682:	
  6829                           ;Multi_RX_testjig_v2.c: 2117: case 2:
  6830                           
  6831                           
  6832                           ;Multi_RX_testjig_v2.c: 2118: LATD4 = 0;
  6833  0BFE  0022               	movlb	2	; select bank2
  6834  0BFF  120F               	bcf	15,4	;volatile
  6835                           
  6836                           ;Multi_RX_testjig_v2.c: 2119: LATD5 = 0;
  6837  0C00  128F               	bcf	15,5	;volatile
  6838                           
  6839                           ;Multi_RX_testjig_v2.c: 2120: LATD6 = 0;
  6840  0C01  130F               	bcf	15,6	;volatile
  6841                           
  6842                           ;Multi_RX_testjig_v2.c: 2121: break;
  6843  0C02  0008               	return
  6844  0C03                     l683:	
  6845                           ;Multi_RX_testjig_v2.c: 2122: case 3:
  6846                           
  6847                           
  6848                           ;Multi_RX_testjig_v2.c: 2123: LATD4 = 0;
  6849  0C03  0022               	movlb	2	; select bank2
  6850  0C04  120F               	bcf	15,4	;volatile
  6851                           
  6852                           ;Multi_RX_testjig_v2.c: 2124: LATD5 = 0;
  6853  0C05  128F               	bcf	15,5	;volatile
  6854                           
  6855                           ;Multi_RX_testjig_v2.c: 2125: LATD6 = 1;
  6856  0C06  170F               	bsf	15,6	;volatile
  6857                           
  6858                           ;Multi_RX_testjig_v2.c: 2126: break;
  6859  0C07  0008               	return
  6860  0C08                     l3091:	
  6861  0C08  0870               	movf	power_supply_set@supply,w
  6862                           
  6863                           ; Switch size 1, requested type "speed"
  6864                           ; Number of cases is 4, Range of values is 0 to 3
  6865                           ; switch strategies available:
  6866                           ; Name         Instructions Cycles
  6867                           ; direct_byte           14     6 (fixed)
  6868                           ; simple_byte           13     7 (average)
  6869                           ; jumptable            260     6 (fixed)
  6870                           ;	Chosen strategy is direct_byte
  6871  0C09  0084               	movwf	4
  6872  0C0A  3004               	movlw	4
  6873  0C0B  0204               	subwf	4,w
  6874  0C0C  1803               	skipnc
  6875  0C0D  0008               	return
  6876  0C0E  3187               	movlp	high S4633
  6877  0C0F  3504               	lslf	4,w
  6878  0C10  3EF8               	addlw	low S4633
  6879  0C11  0082               	movwf	2
  6880  0C12  0008               	return
  6881  0C13                     __end_of_power_supply_set:	
  6882                           
  6883                           	psect	text33
  6884  0823                     __ptext33:	
  6885 ;; *************** function _TX_one *****************
  6886 ;; Defined at:
  6887 ;;		line 2232 in file "Multi_RX_testjig_v2.c"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;  data            1    wreg     unsigned char 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;  data            1    1[COMMON] unsigned char 
  6892 ;;  i               1    2[COMMON] unsigned char 
  6893 ;; Return value:  Size  Location     Type
  6894 ;;		None               void
  6895 ;; Registers used:
  6896 ;;		wreg, status,2, status,0
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6903 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6904 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6905 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6906 ;;Total ram usage:        3 bytes
  6907 ;; Hardware stack levels used:    1
  6908 ;; Hardware stack levels required when called:    1
  6909 ;; This function calls:
  6910 ;;		Nothing
  6911 ;; This function is called by:
  6912 ;;		_main
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           
  6917                           ;psect for function _TX_one
  6918  0823                     _TX_one:	
  6919                           
  6920                           ;incstack = 0
  6921                           ; Regs used in _TX_one: [wreg+status,2+status,0]
  6922                           ;TX_one@data stored from wreg
  6923  0823  00F1               	movwf	TX_one@data
  6924                           
  6925                           ;Multi_RX_testjig_v2.c: 2234: TRISG1 = 0;
  6926  0824  0026               	movlb	6	; select bank6
  6927  0825  108D               	bcf	13,1	;volatile
  6928                           
  6929                           ;Multi_RX_testjig_v2.c: 2235: GIE = 0;
  6930  0826  138B               	bcf	11,7	;volatile
  6931                           
  6932                           ;Multi_RX_testjig_v2.c: 2236: LATG1 = 0;
  6933  0827  0027               	movlb	7	; select bank7
  6934  0828  108D               	bcf	13,1	;volatile
  6935                           
  6936                           ;Multi_RX_testjig_v2.c: 2237: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6937  0829  3085               	movlw	133
  6938  082A  00F0               	movwf	??_TX_one
  6939  082B                     u5787:	
  6940  082B  0BF0               	decfsz	??_TX_one,f
  6941  082C  282B               	goto	u5787
  6942                           
  6943                           ;Multi_RX_testjig_v2.c: 2239: unsigned char i;
  6944                           ;Multi_RX_testjig_v2.c: 2240: for(i = 0; i < 8; i++)
  6945  082D  01F2               	clrf	TX_one@i
  6946  082E                     l709:	
  6947                           
  6948                           ;Multi_RX_testjig_v2.c: 2241: {
  6949                           ;Multi_RX_testjig_v2.c: 2242: LATG1 = data & 0x01;
  6950  082E  1C71               	btfss	TX_one@data,0
  6951  082F  2833               	goto	u4100
  6952  0830  0027               	movlb	7	; select bank7
  6953  0831  148D               	bsf	13,1	;volatile
  6954  0832  2835               	goto	u4114
  6955  0833                     u4100:	
  6956  0833  0027               	movlb	7	; select bank7
  6957  0834  108D               	bcf	13,1	;volatile
  6958  0835                     u4114:	
  6959  0835  3085               	movlw	133
  6960                           
  6961                           ;Multi_RX_testjig_v2.c: 2243: data = data >> 1;
  6962  0836  36F1               	lsrf	TX_one@data,f
  6963                           
  6964                           ;Multi_RX_testjig_v2.c: 2244: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6965  0837  00F0               	movwf	??_TX_one
  6966  0838                     u5797:	
  6967  0838  0BF0               	decfsz	??_TX_one,f
  6968  0839  2838               	goto	u5797
  6969  083A  3008               	movlw	8
  6970  083B  0AF2               	incf	TX_one@i,f
  6971  083C  0272               	subwf	TX_one@i,w
  6972  083D  1C03               	skipc
  6973  083E  282E               	goto	l709
  6974                           
  6975                           ;Multi_RX_testjig_v2.c: 2245: }
  6976                           ;Multi_RX_testjig_v2.c: 2246: LATG1 = 1;
  6977  083F  0027               	movlb	7	; select bank7
  6978  0840  148D               	bsf	13,1	;volatile
  6979                           
  6980                           ;Multi_RX_testjig_v2.c: 2247: GIE = 1;
  6981  0841  178B               	bsf	11,7	;volatile
  6982                           
  6983                           ;Multi_RX_testjig_v2.c: 2248: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6984  0842  3085               	movlw	133
  6985  0843  00F0               	movwf	??_TX_one
  6986  0844                     u5807:	
  6987  0844  0BF0               	decfsz	??_TX_one,f
  6988  0845  2844               	goto	u5807
  6989  0846  0008               	return
  6990  0847                     __end_of_TX_one:	
  6991                           
  6992                           	psect	text34
  6993  07C1                     __ptext34:	
  6994 ;; *************** function _RX_one_timeout *****************
  6995 ;; Defined at:
  6996 ;;		line 2275 in file "Multi_RX_testjig_v2.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;		None
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;  data            1    2[COMMON] unsigned char 
  7001 ;;  i               1    1[COMMON] unsigned char 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  1    wreg      unsigned char 
  7004 ;; Registers used:
  7005 ;;		wreg, status,2, status,0
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7012 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7014 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7015 ;;Total ram usage:        3 bytes
  7016 ;; Hardware stack levels used:    1
  7017 ;; Hardware stack levels required when called:    1
  7018 ;; This function calls:
  7019 ;;		Nothing
  7020 ;; This function is called by:
  7021 ;;		_main
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           
  7026                           ;psect for function _RX_one_timeout
  7027  07C1                     _RX_one_timeout:	
  7028                           
  7029                           ;Multi_RX_testjig_v2.c: 2278: uart_receive_timer = 500;
  7030                           
  7031                           ;incstack = 0
  7032                           ; Regs used in _RX_one_timeout: [wreg+status,2+status,0]
  7033  07C1  30F4               	movlw	244
  7034  07C2  0021               	movlb	1	; select bank1
  7035  07C3  00B2               	movwf	_uart_receive_timer^(0+128)	;volatile
  7036  07C4  3001               	movlw	1
  7037  07C5  00B3               	movwf	(_uart_receive_timer^(0+128)+1)	;volatile
  7038  07C6  2FCC               	goto	l724
  7039  07C7                     l3857:	
  7040  07C7  0021               	movlb	1	; select bank1
  7041  07C8  0832               	movf	_uart_receive_timer^(0+128),w	;volatile
  7042  07C9  0433               	iorwf	(_uart_receive_timer+1)^(0+128),w	;volatile
  7043  07CA  1903               	btfsc	3,2
  7044  07CB  2FCF               	goto	l3859
  7045  07CC                     l724:	
  7046                           ;Multi_RX_testjig_v2.c: 2279: while(RG0 == 1 && uart_receive_timer);
  7047                           
  7048  07CC  0025               	movlb	5	; select bank5
  7049  07CD  180D               	btfsc	13,0	;volatile
  7050  07CE  2FC7               	goto	l3857
  7051  07CF                     l3859:	
  7052                           
  7053                           ;Multi_RX_testjig_v2.c: 2280: _delay((unsigned long)((150)*(16000000/4000000.0)));
  7054  07CF  30C7               	movlw	199
  7055  07D0  00F0               	movwf	??_RX_one_timeout
  7056  07D1                     u5817:	
  7057  07D1  0BF0               	decfsz	??_RX_one_timeout,f
  7058  07D2  2FD1               	goto	u5817
  7059  07D3  3200               	nop2	;nop
  7060                           
  7061                           ;Multi_RX_testjig_v2.c: 2281: unsigned char i;
  7062                           ;Multi_RX_testjig_v2.c: 2282: unsigned char data = 0;
  7063  07D4  01F2               	clrf	RX_one_timeout@data
  7064                           
  7065                           ;Multi_RX_testjig_v2.c: 2283: for(i = 0; i < 8; i++)
  7066  07D5  01F1               	clrf	RX_one_timeout@i
  7067  07D6                     l729:	
  7068                           
  7069                           ;Multi_RX_testjig_v2.c: 2284: {
  7070                           ;Multi_RX_testjig_v2.c: 2286: if(RG0 == 0)
  7071  07D6  0025               	movlb	5	; select bank5
  7072  07D7  180D               	btfsc	13,0	;volatile
  7073  07D8  2FDB               	goto	l731
  7074                           
  7075                           ;Multi_RX_testjig_v2.c: 2287: data = data >> 1;
  7076  07D9  36F2               	lsrf	RX_one_timeout@data,f
  7077  07DA  2FDD               	goto	l3869
  7078  07DB                     l731:	
  7079                           
  7080                           ;Multi_RX_testjig_v2.c: 2288: else
  7081                           ;Multi_RX_testjig_v2.c: 2289: data = (data >> 1) | 0x80;
  7082  07DB  1403               	setc
  7083  07DC  0CF2               	rrf	RX_one_timeout@data,f
  7084  07DD                     l3869:	
  7085                           
  7086                           ;Multi_RX_testjig_v2.c: 2291: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7087  07DD  3085               	movlw	133
  7088  07DE  00F0               	movwf	??_RX_one_timeout
  7089  07DF                     u5827:	
  7090  07DF  0BF0               	decfsz	??_RX_one_timeout,f
  7091  07E0  2FDF               	goto	u5827
  7092  07E1  3008               	movlw	8
  7093  07E2  0AF1               	incf	RX_one_timeout@i,f
  7094  07E3  0271               	subwf	RX_one_timeout@i,w
  7095  07E4  1C03               	skipc
  7096  07E5  2FD6               	goto	l729
  7097                           
  7098                           ;Multi_RX_testjig_v2.c: 2292: }
  7099                           ;Multi_RX_testjig_v2.c: 2293: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7100  07E6  3085               	movlw	133
  7101  07E7  00F0               	movwf	??_RX_one_timeout
  7102  07E8                     u5837:	
  7103  07E8  0BF0               	decfsz	??_RX_one_timeout,f
  7104  07E9  2FE8               	goto	u5837
  7105                           
  7106                           ;Multi_RX_testjig_v2.c: 2295: return data;
  7107  07EA  0872               	movf	RX_one_timeout@data,w
  7108  07EB  0008               	return
  7109  07EC                     __end_of_RX_one_timeout:	
  7110                           
  7111                           	psect	text35
  7112  0847                     __ptext35:	
  7113 ;; *************** function _RX_one *****************
  7114 ;; Defined at:
  7115 ;;		line 2251 in file "Multi_RX_testjig_v2.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;		None
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;  data            1    2[COMMON] unsigned char 
  7120 ;;  i               1    1[COMMON] unsigned char 
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  1    wreg      unsigned char 
  7123 ;; Registers used:
  7124 ;;		wreg, status,2, status,0
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/4
  7127 ;;		On exit  : 0/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7131 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7133 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7134 ;;Total ram usage:        3 bytes
  7135 ;; Hardware stack levels used:    1
  7136 ;; Hardware stack levels required when called:    1
  7137 ;; This function calls:
  7138 ;;		Nothing
  7139 ;; This function is called by:
  7140 ;;		_main
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           
  7145                           ;psect for function _RX_one
  7146  0847                     _RX_one:	
  7147  0847                     l714:	
  7148                           ;Multi_RX_testjig_v2.c: 2254: while(RG0 == 1);
  7149                           
  7150                           ;incstack = 0
  7151                           ; Regs used in _RX_one: [wreg+status,2+status,0]
  7152                           
  7153  0847  0025               	movlb	5	; select bank5
  7154  0848  180D               	btfsc	13,0	;volatile
  7155  0849  2847               	goto	l714
  7156                           
  7157                           ;Multi_RX_testjig_v2.c: 2255: GIE = 0;
  7158  084A  138B               	bcf	11,7	;volatile
  7159                           
  7160                           ;Multi_RX_testjig_v2.c: 2256: _delay((unsigned long)((150)*(16000000/4000000.0)));
  7161  084B  30C7               	movlw	199
  7162  084C  00F0               	movwf	??_RX_one
  7163  084D                     u5847:	
  7164  084D  0BF0               	decfsz	??_RX_one,f
  7165  084E  284D               	goto	u5847
  7166  084F  3200               	nop2	;nop
  7167                           
  7168                           ;Multi_RX_testjig_v2.c: 2257: unsigned char i;
  7169                           ;Multi_RX_testjig_v2.c: 2258: unsigned char data = 0;
  7170  0850  01F2               	clrf	RX_one@data
  7171                           
  7172                           ;Multi_RX_testjig_v2.c: 2259: for(i = 0; i < 8; i++)
  7173  0851  01F1               	clrf	RX_one@i
  7174  0852                     l717:	
  7175                           
  7176                           ;Multi_RX_testjig_v2.c: 2260: {
  7177                           ;Multi_RX_testjig_v2.c: 2261: LATF4 = 1;
  7178  0852  0027               	movlb	7	; select bank7
  7179  0853  160C               	bsf	12,4	;volatile
  7180                           
  7181                           ;Multi_RX_testjig_v2.c: 2262: if(RG0 == 0)
  7182  0854  0025               	movlb	5	; select bank5
  7183  0855  180D               	btfsc	13,0	;volatile
  7184  0856  2859               	goto	l719
  7185                           
  7186                           ;Multi_RX_testjig_v2.c: 2263: data = data >> 1;
  7187  0857  36F2               	lsrf	RX_one@data,f
  7188  0858  285B               	goto	l720
  7189  0859                     l719:	
  7190                           
  7191                           ;Multi_RX_testjig_v2.c: 2264: else
  7192                           ;Multi_RX_testjig_v2.c: 2265: data = (data >> 1) | 0x80;
  7193  0859  1403               	setc
  7194  085A  0CF2               	rrf	RX_one@data,f
  7195  085B                     l720:	
  7196                           
  7197                           ;Multi_RX_testjig_v2.c: 2266: LATF4 = 0;
  7198  085B  0027               	movlb	7	; select bank7
  7199  085C  120C               	bcf	12,4	;volatile
  7200                           
  7201                           ;Multi_RX_testjig_v2.c: 2267: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7202  085D  3085               	movlw	133
  7203  085E  00F0               	movwf	??_RX_one
  7204  085F                     u5857:	
  7205  085F  0BF0               	decfsz	??_RX_one,f
  7206  0860  285F               	goto	u5857
  7207  0861  3008               	movlw	8
  7208  0862  0AF1               	incf	RX_one@i,f
  7209  0863  0271               	subwf	RX_one@i,w
  7210  0864  1C03               	skipc
  7211  0865  2852               	goto	l717
  7212                           
  7213                           ;Multi_RX_testjig_v2.c: 2268: }
  7214                           ;Multi_RX_testjig_v2.c: 2269: GIE = 1;
  7215  0866  178B               	bsf	11,7	;volatile
  7216                           
  7217                           ;Multi_RX_testjig_v2.c: 2270: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7218  0867  3085               	movlw	133
  7219  0868  00F0               	movwf	??_RX_one
  7220  0869                     u5867:	
  7221  0869  0BF0               	decfsz	??_RX_one,f
  7222  086A  2869               	goto	u5867
  7223                           
  7224                           ;Multi_RX_testjig_v2.c: 2272: return data;
  7225  086B  0872               	movf	RX_one@data,w
  7226  086C  0008               	return
  7227  086D                     __end_of_RX_one:	
  7228                           
  7229                           	psect	intentry
  7230  0004                     __pintentry:	
  7231 ;; *************** function _isr *****************
  7232 ;; Defined at:
  7233 ;;		line 327 in file "Multi_RX_testjig_v2.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;		None
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;		None
  7238 ;; Return value:  Size  Location     Type
  7239 ;;		None               void
  7240 ;; Registers used:
  7241 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7242 ;; Tracked objects:
  7243 ;;		On entry : 0/0
  7244 ;;		On exit  : 1F/0
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7251 ;;Total ram usage:        0 bytes
  7252 ;; Hardware stack levels used:    1
  7253 ;; This function calls:
  7254 ;;		Nothing
  7255 ;; This function is called by:
  7256 ;;		Interrupt level 1
  7257 ;; This function uses a non-reentrant model
  7258 ;;
  7259                           
  7260  0004                     _isr:	
  7261                           
  7262                           ;incstack = 0
  7263                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  7264  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7265  0005  3180               	pagesel	$
  7266                           
  7267                           ;Multi_RX_testjig_v2.c: 329: if(INTCONbits.TMR0IF == 1)
  7268  0006  1D0B               	btfss	11,2	;volatile
  7269  0007  2826               	goto	i1l3915
  7270                           
  7271                           ;Multi_RX_testjig_v2.c: 330: {
  7272                           ;Multi_RX_testjig_v2.c: 332: if(testjig_timer)
  7273  0008  0021               	movlb	1	; select bank1
  7274  0009  082E               	movf	_testjig_timer^(0+128),w	;volatile
  7275  000A  042F               	iorwf	(_testjig_timer+1)^(0+128),w	;volatile
  7276  000B  1903               	btfsc	3,2
  7277  000C  2812               	goto	i1l278
  7278                           
  7279                           ;Multi_RX_testjig_v2.c: 333: testjig_timer--;
  7280  000D  3001               	movlw	1
  7281  000E  02AE               	subwf	_testjig_timer^(0+128),f	;volatile
  7282  000F  3000               	movlw	0
  7283  0010  3BAF               	subwfb	(_testjig_timer+1)^(0+128),f	;volatile
  7284  0011  2814               	goto	i1l3907
  7285  0012                     i1l278:	
  7286                           
  7287                           ;Multi_RX_testjig_v2.c: 334: else
  7288                           ;Multi_RX_testjig_v2.c: 335: RE0 = 0;
  7289  0012  0020               	movlb	0	; select bank0
  7290  0013  1010               	bcf	16,0	;volatile
  7291  0014                     i1l3907:	
  7292                           
  7293                           ;Multi_RX_testjig_v2.c: 336: if(uart_receive_timer)
  7294  0014  0021               	movlb	1	; select bank1
  7295  0015  0832               	movf	_uart_receive_timer^(0+128),w	;volatile
  7296  0016  0433               	iorwf	(_uart_receive_timer+1)^(0+128),w	;volatile
  7297  0017  1903               	btfsc	3,2
  7298  0018  281D               	goto	i1l280
  7299                           
  7300                           ;Multi_RX_testjig_v2.c: 337: uart_receive_timer--;
  7301  0019  30FF               	movlw	-1
  7302  001A  07B2               	addwf	_uart_receive_timer^(0+128),f	;volatile
  7303  001B  1C03               	skipc
  7304  001C  03B3               	decf	(_uart_receive_timer+1)^(0+128),f	;volatile
  7305  001D                     i1l280:	
  7306                           
  7307                           ;Multi_RX_testjig_v2.c: 338: if(motor_direction_timer)
  7308  001D  082A               	movf	_motor_direction_timer^(0+128),w	;volatile
  7309  001E  042B               	iorwf	(_motor_direction_timer+1)^(0+128),w	;volatile
  7310  001F  1903               	btfsc	3,2
  7311  0020  2825               	goto	i1l3913
  7312                           
  7313                           ;Multi_RX_testjig_v2.c: 339: motor_direction_timer--;
  7314  0021  30FF               	movlw	-1
  7315  0022  07AA               	addwf	_motor_direction_timer^(0+128),f	;volatile
  7316  0023  1C03               	skipc
  7317  0024  03AB               	decf	(_motor_direction_timer+1)^(0+128),f	;volatile
  7318  0025                     i1l3913:	
  7319                           
  7320                           ;Multi_RX_testjig_v2.c: 341: INTCONbits.TMR0IF = 0;
  7321  0025  110B               	bcf	11,2	;volatile
  7322  0026                     i1l3915:	
  7323                           
  7324                           ;Multi_RX_testjig_v2.c: 343: }
  7325                           ;Multi_RX_testjig_v2.c: 344: if(PIR1bits.TMR2IF == 1)
  7326  0026  0020               	movlb	0	; select bank0
  7327  0027  1C91               	btfss	17,1	;volatile
  7328  0028  289F               	goto	i1l304
  7329                           
  7330                           ;Multi_RX_testjig_v2.c: 345: {
  7331                           ;Multi_RX_testjig_v2.c: 347: if(pickit_timer)
  7332  0029  0021               	movlb	1	; select bank1
  7333  002A  082C               	movf	_pickit_timer^(0+128),w	;volatile
  7334  002B  042D               	iorwf	(_pickit_timer+1)^(0+128),w	;volatile
  7335  002C  1903               	btfsc	3,2
  7336  002D  2871               	goto	i1l3947
  7337                           
  7338                           ;Multi_RX_testjig_v2.c: 348: pickit_timer--;
  7339  002E  3001               	movlw	1
  7340  002F  02AC               	subwf	_pickit_timer^(0+128),f	;volatile
  7341  0030  3000               	movlw	0
  7342  0031  3BAD               	subwfb	(_pickit_timer+1)^(0+128),f	;volatile
  7343  0032  287B               	goto	i1l3949
  7344  0033                     i1l286:	
  7345                           ;Multi_RX_testjig_v2.c: 352: {
  7346                           ;Multi_RX_testjig_v2.c: 353: case pickit_start:
  7347                           
  7348                           
  7349                           ;Multi_RX_testjig_v2.c: 354: LATC2 = 1;
  7350  0033  0022               	movlb	2	; select bank2
  7351  0034  150E               	bsf	14,2	;volatile
  7352                           
  7353                           ;Multi_RX_testjig_v2.c: 355: LATC7 = 1;
  7354  0035  178E               	bsf	14,7	;volatile
  7355                           
  7356                           ;Multi_RX_testjig_v2.c: 356: pickit_timer = 10;
  7357  0036  300A               	movlw	10
  7358  0037  0021               	movlb	1	; select bank1
  7359  0038  00AC               	movwf	_pickit_timer^(0+128)	;volatile
  7360  0039  01AD               	clrf	(_pickit_timer+1)^(0+128)	;volatile
  7361                           
  7362                           ;Multi_RX_testjig_v2.c: 357: pickit_state = pickit_push_button;
  7363  003A  3002               	movlw	2
  7364  003B  286F               	goto	L33
  7365  003C                     i1l3923:	
  7366                           ;Multi_RX_testjig_v2.c: 358: break;
  7367                           
  7368                           
  7369                           ;Multi_RX_testjig_v2.c: 360: pickit_timer = 1000;
  7370  003C  30E8               	movlw	232
  7371  003D  00AC               	movwf	_pickit_timer^(0+128)	;volatile
  7372  003E  3003               	movlw	3
  7373  003F  00AD               	movwf	(_pickit_timer^(0+128)+1)	;volatile
  7374                           
  7375                           ;Multi_RX_testjig_v2.c: 361: LATC6 = 1;
  7376  0040  0022               	movlb	2	; select bank2
  7377  0041  170E               	bsf	14,6	;volatile
  7378                           
  7379                           ;Multi_RX_testjig_v2.c: 362: pickit_state = pickit_busy;
  7380  0042  286E               	goto	L34
  7381  0043                     i1l289:	
  7382                           ;Multi_RX_testjig_v2.c: 364: case pickit_busy:
  7383                           
  7384                           ;Multi_RX_testjig_v2.c: 363: break;
  7385                           
  7386                           
  7387                           ;Multi_RX_testjig_v2.c: 365: LATC6 = 0;
  7388  0043  0022               	movlb	2	; select bank2
  7389  0044  130E               	bcf	14,6	;volatile
  7390                           
  7391                           ;Multi_RX_testjig_v2.c: 366: if(RE6 == 0)
  7392  0045  0020               	movlb	0	; select bank0
  7393  0046  1B10               	btfsc	16,6	;volatile
  7394  0047  2850               	goto	i1l3933
  7395                           
  7396                           ;Multi_RX_testjig_v2.c: 367: {
  7397                           ;Multi_RX_testjig_v2.c: 368: pickit_red_counter++;
  7398  0048  0021               	movlb	1	; select bank1
  7399  0049  3065               	movlw	101
  7400  004A  0AB5               	incf	_pickit_red_counter^(0+128),f
  7401                           
  7402                           ;Multi_RX_testjig_v2.c: 369: if(pickit_red_counter > 100)
  7403  004B  0235               	subwf	_pickit_red_counter^(0+128),w
  7404  004C  1C03               	skipc
  7405  004D  2852               	goto	i1l3935
  7406                           
  7407                           ;Multi_RX_testjig_v2.c: 370: pickit_state = pickit_finish;
  7408  004E  01BB               	clrf	_pickit_state^(0+128)
  7409  004F  2852               	goto	i1l3935
  7410  0050                     i1l3933:	
  7411                           
  7412                           ;Multi_RX_testjig_v2.c: 372: else
  7413                           ;Multi_RX_testjig_v2.c: 373: pickit_red_counter = 0;
  7414  0050  0021               	movlb	1	; select bank1
  7415  0051  01B5               	clrf	_pickit_red_counter^(0+128)
  7416  0052                     i1l3935:	
  7417                           
  7418                           ;Multi_RX_testjig_v2.c: 374: if(RE5 == 0)
  7419  0052  0020               	movlb	0	; select bank0
  7420  0053  1A90               	btfsc	16,5	;volatile
  7421  0054  285D               	goto	i1l293
  7422                           
  7423                           ;Multi_RX_testjig_v2.c: 375: {
  7424                           ;Multi_RX_testjig_v2.c: 376: pickit_state = pickit_error;
  7425  0055  3004               	movlw	4
  7426  0056  0021               	movlb	1	; select bank1
  7427  0057  00BB               	movwf	_pickit_state^(0+128)
  7428                           
  7429                           ;Multi_RX_testjig_v2.c: 377: pickit_timer = 1000;
  7430  0058  30E8               	movlw	232
  7431  0059  00AC               	movwf	_pickit_timer^(0+128)	;volatile
  7432  005A  3003               	movlw	3
  7433  005B  00AD               	movwf	(_pickit_timer^(0+128)+1)	;volatile
  7434                           
  7435                           ;Multi_RX_testjig_v2.c: 378: }
  7436  005C  2861               	goto	i1l3941
  7437  005D                     i1l293:	
  7438                           
  7439                           ;Multi_RX_testjig_v2.c: 379: else if(RE4 == 0)
  7440  005D  1A10               	btfsc	16,4	;volatile
  7441  005E  2861               	goto	i1l3941
  7442                           
  7443                           ;Multi_RX_testjig_v2.c: 380: {
  7444                           ;Multi_RX_testjig_v2.c: 381: pickit_state = pickit_finish;
  7445  005F  0021               	movlb	1	; select bank1
  7446  0060  01BB               	clrf	_pickit_state^(0+128)
  7447  0061                     i1l3941:	
  7448                           
  7449                           ;Multi_RX_testjig_v2.c: 382: }
  7450                           ;Multi_RX_testjig_v2.c: 383: pickit_timer = 1;
  7451  0061  3001               	movlw	1
  7452  0062  0021               	movlb	1	; select bank1
  7453  0063  00AC               	movwf	_pickit_timer^(0+128)	;volatile
  7454  0064  01AD               	clrf	(_pickit_timer+1)^(0+128)	;volatile
  7455                           
  7456                           ;Multi_RX_testjig_v2.c: 384: break;
  7457  0065  287B               	goto	i1l3949
  7458  0066                     i1l296:	
  7459                           ;Multi_RX_testjig_v2.c: 385: case pickit_error:
  7460                           
  7461                           
  7462                           ;Multi_RX_testjig_v2.c: 386: LATC2 = 0;
  7463  0066  0022               	movlb	2	; select bank2
  7464  0067  110E               	bcf	14,2	;volatile
  7465                           
  7466                           ;Multi_RX_testjig_v2.c: 387: LATC7 = 0;
  7467  0068  138E               	bcf	14,7	;volatile
  7468                           
  7469                           ;Multi_RX_testjig_v2.c: 388: break;
  7470  0069  287B               	goto	i1l3949
  7471  006A                     i1l297:	
  7472                           ;Multi_RX_testjig_v2.c: 389: case pickit_finish:
  7473                           
  7474                           
  7475                           ;Multi_RX_testjig_v2.c: 390: LATC2 = 0;
  7476  006A  0022               	movlb	2	; select bank2
  7477  006B  110E               	bcf	14,2	;volatile
  7478                           
  7479                           ;Multi_RX_testjig_v2.c: 391: LATC7 = 0;
  7480  006C  138E               	bcf	14,7	;volatile
  7481                           
  7482                           ;Multi_RX_testjig_v2.c: 392: pickit_state = pickit_idle;
  7483  006D  3005               	movlw	5
  7484  006E                     L34:	
  7485  006E  0021               	movlb	1	; select bank1
  7486  006F                     L33:	
  7487  006F  00BB               	movwf	_pickit_state^(0+128)
  7488                           
  7489                           ;Multi_RX_testjig_v2.c: 393: break;
  7490  0070  287B               	goto	i1l3949
  7491  0071                     i1l3947:	
  7492  0071  083B               	movf	_pickit_state^(0+128),w
  7493                           
  7494                           ; Switch size 1, requested type "speed"
  7495                           ; Number of cases is 6, Range of values is 0 to 5
  7496                           ; switch strategies available:
  7497                           ; Name         Instructions Cycles
  7498                           ; direct_byte           18     6 (fixed)
  7499                           ; simple_byte           19    10 (average)
  7500                           ; jumptable            260     6 (fixed)
  7501                           ;	Chosen strategy is direct_byte
  7502  0072  0084               	movwf	4
  7503  0073  3006               	movlw	6
  7504  0074  0204               	subwf	4,w
  7505  0075  1803               	skipnc
  7506  0076  287B               	goto	i1l3949
  7507  0077  3187               	movlp	high i1S4637
  7508  0078  3504               	lslf	4,w
  7509  0079  3EEC               	addlw	low i1S4637
  7510  007A  0082               	movwf	2
  7511  007B                     i1l3949:	
  7512                           
  7513                           ;Multi_RX_testjig_v2.c: 397: }
  7514                           ;Multi_RX_testjig_v2.c: 459: if(buzz_timer)
  7515  007B  0021               	movlb	1	; select bank1
  7516  007C  0822               	movf	_buzz_timer^(0+128),w	;volatile
  7517  007D  0423               	iorwf	(_buzz_timer+1)^(0+128),w	;volatile
  7518  007E  1903               	btfsc	3,2
  7519  007F  2885               	goto	i1l299
  7520                           
  7521                           ;Multi_RX_testjig_v2.c: 460: buzz_timer--;
  7522  0080  3001               	movlw	1
  7523  0081  02A2               	subwf	_buzz_timer^(0+128),f	;volatile
  7524  0082  3000               	movlw	0
  7525  0083  3BA3               	subwfb	(_buzz_timer+1)^(0+128),f	;volatile
  7526  0084  2887               	goto	i1l3953
  7527  0085                     i1l299:	
  7528                           
  7529                           ;Multi_RX_testjig_v2.c: 461: else
  7530                           ;Multi_RX_testjig_v2.c: 462: LATC5 = 0;
  7531  0085  0022               	movlb	2	; select bank2
  7532  0086  128E               	bcf	14,5	;volatile
  7533  0087                     i1l3953:	
  7534                           
  7535                           ;Multi_RX_testjig_v2.c: 463: if(one_second_timer)
  7536  0087  0021               	movlb	1	; select bank1
  7537  0088  0839               	movf	_one_second_timer^(0+128),w	;volatile
  7538  0089  043A               	iorwf	(_one_second_timer+1)^(0+128),w	;volatile
  7539  008A  1903               	btfsc	3,2
  7540  008B  2891               	goto	i1l3957
  7541                           
  7542                           ;Multi_RX_testjig_v2.c: 464: one_second_timer--;
  7543  008C  3001               	movlw	1
  7544  008D  02B9               	subwf	_one_second_timer^(0+128),f	;volatile
  7545  008E  3000               	movlw	0
  7546  008F  3BBA               	subwfb	(_one_second_timer+1)^(0+128),f	;volatile
  7547  0090  2895               	goto	i1l3959
  7548  0091                     i1l3957:	
  7549                           
  7550                           ;Multi_RX_testjig_v2.c: 465: else
  7551                           ;Multi_RX_testjig_v2.c: 466: {
  7552                           ;Multi_RX_testjig_v2.c: 467: one_second_timer = 1000;
  7553  0091  30E8               	movlw	232
  7554  0092  00B9               	movwf	_one_second_timer^(0+128)	;volatile
  7555  0093  3003               	movlw	3
  7556  0094  00BA               	movwf	(_one_second_timer^(0+128)+1)	;volatile
  7557  0095                     i1l3959:	
  7558                           
  7559                           ;Multi_RX_testjig_v2.c: 468: }
  7560                           ;Multi_RX_testjig_v2.c: 469: if(tj_timer)
  7561  0095  0830               	movf	_tj_timer^(0+128),w
  7562  0096  0431               	iorwf	(_tj_timer+1)^(0+128),w
  7563  0097  1903               	btfsc	3,2
  7564  0098  289D               	goto	i1l3963
  7565                           
  7566                           ;Multi_RX_testjig_v2.c: 470: tj_timer--;
  7567  0099  3001               	movlw	1
  7568  009A  02B0               	subwf	_tj_timer^(0+128),f
  7569  009B  3000               	movlw	0
  7570  009C  3BB1               	subwfb	(_tj_timer+1)^(0+128),f
  7571  009D                     i1l3963:	
  7572                           
  7573                           ;Multi_RX_testjig_v2.c: 471: PIR1bits.TMR2IF = 0;
  7574  009D  0020               	movlb	0	; select bank0
  7575  009E  1091               	bcf	17,1	;volatile
  7576  009F                     i1l304:	
  7577  009F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7578  00A0  0009               	retfie
  7579  00A1                     __end_of_isr:	
  7580  007E                     btemp	set	126	;btemp
  7581  007E                     int$flags	set	126
  7582  007E                     wtemp	set	126
  7583  007E                     wtemp0	set	126
  7584  0080                     wtemp1	set	128
  7585  0082                     wtemp2	set	130
  7586  0084                     wtemp3	set	132
  7587  0086                     wtemp4	set	134
  7588  0088                     wtemp5	set	136
  7589  007F                     wtemp6	set	127
  7590  007E                     ttemp	set	126
  7591  007E                     ttemp0	set	126
  7592  0081                     ttemp1	set	129
  7593  0084                     ttemp2	set	132
  7594  0087                     ttemp3	set	135
  7595  007F                     ttemp4	set	127
  7596  007E                     ltemp	set	126
  7597  007E                     ltemp0	set	126
  7598  0082                     ltemp1	set	130
  7599  0086                     ltemp2	set	134
  7600  0080                     ltemp3	set	128
  7601                           
  7602                           	psect	swtext2
  7603  07EC                     __pswtext2:	
  7604  07EC                     i1S4637:	
  7605  07EC  3180  286A         	ljmp	i1l297
  7606  07EE  3180  2833         	ljmp	i1l286
  7607  07F0  3180  283C         	ljmp	i1l3923
  7608  07F2  3180  2843         	ljmp	i1l289
  7609  07F4  3180  2866         	ljmp	i1l296
  7610  07F6  3180  287B         	ljmp	i1l3949
  7611                           
  7612                           	psect	maintext_split_1
  7613  00B4                     l4097:	
  7614  00B4  305F               	movlw	95
  7615  00B5  318C  245E  3180   	fcall	_ADC_get_val
  7616  00B8  3000               	movlw	0
  7617  00B9  0271               	subwf	?_ADC_get_val+1,w
  7618  00BA  307B               	movlw	123
  7619  00BB  1903               	skipnz
  7620  00BC  0270               	subwf	?_ADC_get_val,w
  7621  00BD  1C03               	skipc
  7622  00BE  28EF               	goto	l4107
  7623  00BF  3063               	movlw	99
  7624  00C0  318C  245E  3180   	fcall	_ADC_get_val
  7625  00C3  3002               	movlw	2
  7626  00C4  0271               	subwf	?_ADC_get_val+1,w
  7627  00C5  3013               	movlw	19
  7628  00C6  1903               	skipnz
  7629  00C7  0270               	subwf	?_ADC_get_val,w
  7630  00C8  1803               	skipnc
  7631  00C9  28EF               	goto	l4107
  7632  00CA  3063               	movlw	99
  7633  00CB  318C  245E  3180   	fcall	_ADC_get_val
  7634  00CE  3002               	movlw	2
  7635  00CF  0271               	subwf	?_ADC_get_val+1,w
  7636  00D0  30C6               	movlw	198
  7637  00D1  1903               	skipnz
  7638  00D2  0270               	subwf	?_ADC_get_val,w
  7639  00D3  1C03               	skipc
  7640  00D4  28EF               	goto	l4107
  7641  00D5  318C  2413  3180   	fcall	_get_30v_current
  7642  00D8  3000               	movlw	0
  7643  00D9  0258               	subwf	?_get_30v_current+1,w
  7644  00DA  303C               	movlw	60
  7645  00DB  1903               	skipnz
  7646  00DC  0257               	subwf	?_get_30v_current,w
  7647  00DD  1803               	skipnc
  7648  00DE  28EF               	goto	l4107
  7649  00DF  0021               	movlb	1	; select bank1
  7650  00E0  082E               	movf	_testjig_timer^(0+128),w	;volatile
  7651  00E1  042F               	iorwf	(_testjig_timer+1)^(0+128),w	;volatile
  7652  00E2  1903               	btfsc	3,2
  7653  00E3  28EF               	goto	l4107
  7654  00E4                     l4095:	
  7655                           ;Multi_RX_testjig_v2.c: 597: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) &&
  7656                           ;Multi_RX_testjig_v2.c: 598: (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/
      +                          4.096)*1.08))&&
  7657                           ;Multi_RX_testjig_v2.c: 599: (ADC_get_val(0b01100011) < (unsigned int)((((26/11.0)*1024)
      +                          /4.096)*0.9)) &&
  7658                           ;Multi_RX_testjig_v2.c: 600: (ADC_get_val(0b01100011) > (unsigned int)((((26/11.0)*1024)
      +                          /4.096)*1.2)) &&
  7659                           ;Multi_RX_testjig_v2.c: 601: (get_30v_current() < 60) && testjig_timer);
  7660                           
  7661  00E4  305F               	movlw	95
  7662  00E5  318C  245E  3180   	fcall	_ADC_get_val
  7663  00E8  3000               	movlw	0
  7664  00E9  0271               	subwf	?_ADC_get_val+1,w
  7665  00EA  3068               	movlw	104
  7666  00EB  1903               	skipnz
  7667  00EC  0270               	subwf	?_ADC_get_val,w
  7668  00ED  1C03               	btfss	3,0
  7669  00EE  28B4               	goto	l4097
  7670  00EF                     l4107:	
  7671                           
  7672                           ;Multi_RX_testjig_v2.c: 602: unsigned int temp;
  7673                           ;Multi_RX_testjig_v2.c: 603: temp = get_30v_current();
  7674  00EF  318C  2413  3180   	fcall	_get_30v_current
  7675  00F2  0858               	movf	?_get_30v_current+1,w
  7676  00F3  00E5               	movwf	main@temp+1
  7677  00F4  0857               	movf	?_get_30v_current,w
  7678  00F5  00E4               	movwf	main@temp
  7679                           
  7680                           ;Multi_RX_testjig_v2.c: 608: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  7681  00F6  305F               	movlw	95
  7682  00F7  318C  245E  3180   	fcall	_ADC_get_val
  7683  00FA  3000               	movlw	0
  7684  00FB  0271               	subwf	?_ADC_get_val+1,w
  7685  00FC  3068               	movlw	104
  7686  00FD  1903               	skipnz
  7687  00FE  0270               	subwf	?_ADC_get_val,w
  7688  00FF  1803               	skipnc
  7689  0100  2905               	goto	l4113
  7690                           
  7691                           ;Multi_RX_testjig_v2.c: 609: {
  7692                           ;Multi_RX_testjig_v2.c: 610: print_error("16v-5v supply", "Volt Error L");
  7693  0101  3013               	movlw	low (STR_15| (0+32768))
  7694  0102  00F8               	movwf	print_error@top
  7695  0103  3092               	movlw	high (STR_15| (0+32768))
  7696  0104  2922               	goto	L10
  7697  0105                     l4113:	
  7698                           ;Multi_RX_testjig_v2.c: 611: }
  7699                           
  7700                           
  7701                           ;Multi_RX_testjig_v2.c: 612: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  7702  0105  305F               	movlw	95
  7703  0106  318C  245E  3180   	fcall	_ADC_get_val
  7704  0109  3000               	movlw	0
  7705  010A  0271               	subwf	?_ADC_get_val+1,w
  7706  010B  307B               	movlw	123
  7707  010C  1903               	skipnz
  7708  010D  0270               	subwf	?_ADC_get_val,w
  7709  010E  1C03               	skipc
  7710  010F  2914               	goto	l4117
  7711                           
  7712                           ;Multi_RX_testjig_v2.c: 613: {
  7713                           ;Multi_RX_testjig_v2.c: 614: print_error("16v-5v supply", "Volt Error H");
  7714  0110  3013               	movlw	low (STR_15| (0+32768))
  7715  0111  00F8               	movwf	print_error@top
  7716  0112  3092               	movlw	high (STR_15| (0+32768))
  7717  0113  2935               	goto	L11
  7718  0114                     l4117:	
  7719                           ;Multi_RX_testjig_v2.c: 615: }
  7720                           
  7721                           
  7722                           ;Multi_RX_testjig_v2.c: 616: else if((ADC_get_val(0b01100011) < (unsigned int)((((26/11.
      +                          0)*1024)/4.096)*0.9)))
  7723  0114  3063               	movlw	99
  7724  0115  318C  245E  3180   	fcall	_ADC_get_val
  7725  0118  3002               	movlw	2
  7726  0119  0271               	subwf	?_ADC_get_val+1,w
  7727  011A  3013               	movlw	19
  7728  011B  1903               	skipnz
  7729  011C  0270               	subwf	?_ADC_get_val,w
  7730  011D  1803               	skipnc
  7731  011E  2927               	goto	l4121
  7732                           
  7733                           ;Multi_RX_testjig_v2.c: 617: print_error("16v-12v supply", "Volt Error L");
  7734  011F  3094               	movlw	low (STR_19| (0+32768))
  7735  0120  00F8               	movwf	print_error@top
  7736  0121  3091               	movlw	high (STR_19| (0+32768))
  7737  0122                     L10:	
  7738  0122  00F9               	movwf	print_error@top+1
  7739  0123  3055               	movlw	low (STR_8| (0+32768))
  7740  0124  00FA               	movwf	print_error@bottom
  7741  0125  3092               	movlw	high (STR_8| (0+32768))
  7742  0126  2971               	goto	L7
  7743  0127                     l4121:	
  7744                           
  7745                           ;Multi_RX_testjig_v2.c: 618: else if((ADC_get_val(0b01100011) > (unsigned int)((((26/11.
      +                          0)*1024)/4.096)*1.2)))
  7746  0127  3063               	movlw	99
  7747  0128  318C  245E  3180   	fcall	_ADC_get_val
  7748  012B  3002               	movlw	2
  7749  012C  0271               	subwf	?_ADC_get_val+1,w
  7750  012D  30C6               	movlw	198
  7751  012E  1903               	skipnz
  7752  012F  0270               	subwf	?_ADC_get_val,w
  7753  0130  1C03               	skipc
  7754  0131  293A               	goto	l4125
  7755                           
  7756                           ;Multi_RX_testjig_v2.c: 619: {
  7757                           ;Multi_RX_testjig_v2.c: 620: print_error("16v-12v supply", "Volt Error H");
  7758  0132  3094               	movlw	low (STR_19| (0+32768))
  7759  0133  00F8               	movwf	print_error@top
  7760  0134  3091               	movlw	high (STR_19| (0+32768))
  7761  0135                     L11:	
  7762  0135  00F9               	movwf	print_error@top+1
  7763  0136  303B               	movlw	low (STR_10| (0+32768))
  7764  0137  00FA               	movwf	print_error@bottom
  7765  0138  3092               	movlw	high (STR_10| (0+32768))
  7766  0139  2971               	goto	L7
  7767  013A                     l4125:	
  7768                           ;Multi_RX_testjig_v2.c: 621: }
  7769                           
  7770                           
  7771                           ;Multi_RX_testjig_v2.c: 622: else if((temp >= 60))
  7772  013A  3000               	movlw	0
  7773  013B  0020               	movlb	0	; select bank0
  7774  013C  0265               	subwf	main@temp+1,w
  7775  013D  303C               	movlw	60
  7776  013E  1903               	skipnz
  7777  013F  0264               	subwf	main@temp,w
  7778  0140  1C03               	skipc
  7779  0141  2965               	goto	l4133
  7780                           
  7781                           ;Multi_RX_testjig_v2.c: 623: {
  7782                           ;Multi_RX_testjig_v2.c: 624: lcd_print_int(temp, 5, 0, 1);
  7783  0142  0865               	movf	main@temp+1,w
  7784  0143  00DC               	movwf	lcd_print_int@number+1
  7785  0144  0864               	movf	main@temp,w
  7786  0145  00DB               	movwf	lcd_print_int@number
  7787  0146  3005               	movlw	5
  7788  0147  00DD               	movwf	lcd_print_int@pos
  7789  0148  01DE               	clrf	lcd_print_int@pos+1
  7790  0149  01DF               	clrf	lcd_print_int@decimal
  7791  014A  01E0               	clrf	lcd_print_int@ten_thou_digit
  7792  014B  0AE0               	incf	lcd_print_int@ten_thou_digit,f
  7793  014C  3188  20F7  3180   	fcall	_lcd_print_int
  7794                           
  7795                           ;Multi_RX_testjig_v2.c: 625: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7796  014F  3015               	movlw	21
  7797  0150  0020               	movlb	0	; select bank0
  7798  0151  00E3               	movwf	??_main+2
  7799  0152  304B               	movlw	75
  7800  0153  00E2               	movwf	??_main+1
  7801  0154  30D1               	movlw	209
  7802  0155  00E1               	movwf	??_main
  7803  0156                     u5317:	
  7804  0156  0BE1               	decfsz	??_main,f
  7805  0157  2956               	goto	u5317
  7806  0158  0BE2               	decfsz	??_main+1,f
  7807  0159  2956               	goto	u5317
  7808  015A  0BE3               	decfsz	??_main+2,f
  7809  015B  2956               	goto	u5317
  7810  015C  0000               	nop
  7811                           
  7812                           ;Multi_RX_testjig_v2.c: 626: print_error("16v supply", "Curr Error");
  7813  015D  3024               	movlw	low (STR_23| (0+32768))
  7814  015E  00F8               	movwf	print_error@top
  7815  015F  3093               	movlw	high (STR_23| (0+32768))
  7816  0160  00F9               	movwf	print_error@top+1
  7817  0161  3003               	movlw	low (STR_12| (0+32768))
  7818  0162  00FA               	movwf	print_error@bottom
  7819  0163  3093               	movlw	high (STR_12| (0+32768))
  7820  0164  2971               	goto	L7
  7821  0165                     l4133:	
  7822                           ;Multi_RX_testjig_v2.c: 627: }
  7823                           
  7824                           
  7825                           ;Multi_RX_testjig_v2.c: 628: else if(testjig_timer == 0)
  7826  0165  0021               	movlb	1	; select bank1
  7827  0166  082E               	movf	_testjig_timer^(0+128),w	;volatile
  7828  0167  042F               	iorwf	(_testjig_timer+1)^(0+128),w	;volatile
  7829  0168  1D03               	btfss	3,2
  7830  0169  2975               	goto	l4137
  7831                           
  7832                           ;Multi_RX_testjig_v2.c: 629: print_error("16v-5v supply", "T-out Error");
  7833  016A  3013               	movlw	low (STR_15| (0+32768))
  7834  016B  00F8               	movwf	print_error@top
  7835  016C  3092               	movlw	high (STR_15| (0+32768))
  7836  016D  00F9               	movwf	print_error@top+1
  7837  016E  30EB               	movlw	low (STR_14| (0+32768))
  7838  016F  00FA               	movwf	print_error@bottom
  7839  0170  3092               	movlw	high (STR_14| (0+32768))
  7840  0171                     L7:	
  7841  0171  00FB               	movwf	print_error@bottom+1
  7842  0172  318A  22F6  3180   	fcall	_print_error
  7843  0175                     l4137:	
  7844                           
  7845                           ;Multi_RX_testjig_v2.c: 635: if(RA2 == 1)
  7846  0175  0020               	movlb	0	; select bank0
  7847  0176  1D0C               	btfss	12,2	;volatile
  7848  0177  2A30               	goto	l4171
  7849                           
  7850                           ;Multi_RX_testjig_v2.c: 636: {
  7851                           ;Multi_RX_testjig_v2.c: 637: Vout_set(12);
  7852  0178  300C               	movlw	12
  7853  0179  00F4               	movwf	Vout_set@Volts
  7854  017A  01F5               	clrf	Vout_set@Volts+1
  7855  017B  3188  20C0  3180   	fcall	_Vout_set
  7856                           
  7857                           ;Multi_RX_testjig_v2.c: 638: power_supply_set(0);
  7858  017E  3000               	movlw	0
  7859  017F  318B  23F3  3180   	fcall	_power_supply_set
  7860                           
  7861                           ;Multi_RX_testjig_v2.c: 640: print_screen("Pickit Programming", "");
  7862  0182  303F               	movlw	low (STR_27| (0+32768))
  7863  0183  00F4               	movwf	print_screen@top
  7864  0184  3090               	movlw	high (STR_27| (0+32768))
  7865  0185  00F5               	movwf	print_screen@top+1
  7866  0186  30DA               	movlw	low ((STR_135+15)| (0+32768))
  7867  0187  00F6               	movwf	print_screen@bottom
  7868  0188  3090               	movlw	high ((STR_135+15)| (0+32768))
  7869  0189  00F7               	movwf	print_screen@bottom+1
  7870  018A  318A  22D4  3180   	fcall	_print_screen
  7871                           
  7872                           ;Multi_RX_testjig_v2.c: 645: _delay((unsigned long)((100)*(16000000/4000.0)));
  7873  018D  3003               	movlw	3
  7874  018E  0020               	movlb	0	; select bank0
  7875  018F  00E3               	movwf	??_main+2
  7876  0190  3008               	movlw	8
  7877  0191  00E2               	movwf	??_main+1
  7878  0192  3078               	movlw	120
  7879  0193  00E1               	movwf	??_main
  7880  0194                     u5327:	
  7881  0194  0BE1               	decfsz	??_main,f
  7882  0195  2994               	goto	u5327
  7883  0196  0BE2               	decfsz	??_main+1,f
  7884  0197  2994               	goto	u5327
  7885  0198  0BE3               	decfsz	??_main+2,f
  7886  0199  2994               	goto	u5327
  7887                           
  7888                           ;Multi_RX_testjig_v2.c: 646: print_screen("Waiting for", " Programming");
  7889  019A  30D3               	movlw	low (STR_29| (0+32768))
  7890  019B  00F4               	movwf	print_screen@top
  7891  019C  3092               	movlw	high (STR_29| (0+32768))
  7892  019D  00F5               	movwf	print_screen@top+1
  7893  019E  3045               	movlw	low ((STR_27+6)| (0+32768))
  7894  019F  00F6               	movwf	print_screen@bottom
  7895  01A0  3090               	movlw	high ((STR_27+6)| (0+32768))
  7896  01A1  00F7               	movwf	print_screen@bottom+1
  7897  01A2  318A  22D4  3180   	fcall	_print_screen
  7898                           
  7899                           ;Multi_RX_testjig_v2.c: 648: if(RF0 == 1)
  7900  01A5  0025               	movlb	5	; select bank5
  7901  01A6  1C0C               	btfss	12,0	;volatile
  7902  01A7  29EB               	goto	l338
  7903                           
  7904                           ;Multi_RX_testjig_v2.c: 649: {
  7905                           ;Multi_RX_testjig_v2.c: 650: LATA7 = 0;
  7906  01A8  0022               	movlb	2	; select bank2
  7907  01A9  138C               	bcf	12,7	;volatile
  7908                           
  7909                           ;Multi_RX_testjig_v2.c: 651: LATB7 = 0;
  7910  01AA  138D               	bcf	13,7	;volatile
  7911                           
  7912                           ;Multi_RX_testjig_v2.c: 653: LATC2 = 1;
  7913  01AB  150E               	bsf	14,2	;volatile
  7914                           
  7915                           ;Multi_RX_testjig_v2.c: 654: LATC7 = 1;
  7916  01AC  178E               	bsf	14,7	;volatile
  7917                           
  7918                           ;Multi_RX_testjig_v2.c: 655: _delay((unsigned long)((100)*(16000000/4000.0)));
  7919  01AD  3003               	movlw	3
  7920  01AE  0020               	movlb	0	; select bank0
  7921  01AF  00E3               	movwf	??_main+2
  7922  01B0  3008               	movlw	8
  7923  01B1  00E2               	movwf	??_main+1
  7924  01B2  3078               	movlw	120
  7925  01B3  00E1               	movwf	??_main
  7926  01B4                     u5337:	
  7927  01B4  0BE1               	decfsz	??_main,f
  7928  01B5  29B4               	goto	u5337
  7929  01B6  0BE2               	decfsz	??_main+1,f
  7930  01B7  29B4               	goto	u5337
  7931  01B8  0BE3               	decfsz	??_main+2,f
  7932  01B9  29B4               	goto	u5337
  7933                           
  7934                           ;Multi_RX_testjig_v2.c: 656: LATC6 = 1;
  7935  01BA  0022               	movlb	2	; select bank2
  7936  01BB  170E               	bsf	14,6	;volatile
  7937                           
  7938                           ;Multi_RX_testjig_v2.c: 658: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7939  01BC  3015               	movlw	21
  7940  01BD  0020               	movlb	0	; select bank0
  7941  01BE  00E3               	movwf	??_main+2
  7942  01BF  304B               	movlw	75
  7943  01C0  00E2               	movwf	??_main+1
  7944  01C1  30D1               	movlw	209
  7945  01C2  00E1               	movwf	??_main
  7946  01C3                     u5347:	
  7947  01C3  0BE1               	decfsz	??_main,f
  7948  01C4  29C3               	goto	u5347
  7949  01C5  0BE2               	decfsz	??_main+1,f
  7950  01C6  29C3               	goto	u5347
  7951  01C7  0BE3               	decfsz	??_main+2,f
  7952  01C8  29C3               	goto	u5347
  7953  01C9  0000               	nop
  7954                           
  7955                           ;Multi_RX_testjig_v2.c: 659: LATC6 = 0;
  7956  01CA  0022               	movlb	2	; select bank2
  7957  01CB  130E               	bcf	14,6	;volatile
  7958                           
  7959                           ;Multi_RX_testjig_v2.c: 660: _delay((unsigned long)((4500)*(16000000/4000.0)));
  7960  01CC  305C               	movlw	92
  7961  01CD  0020               	movlb	0	; select bank0
  7962  01CE  00E3               	movwf	??_main+2
  7963  01CF  3051               	movlw	81
  7964  01D0  00E2               	movwf	??_main+1
  7965  01D1  30BA               	movlw	186
  7966  01D2  00E1               	movwf	??_main
  7967  01D3                     u5357:	
  7968  01D3  0BE1               	decfsz	??_main,f
  7969  01D4  29D3               	goto	u5357
  7970  01D5  0BE2               	decfsz	??_main+1,f
  7971  01D6  29D3               	goto	u5357
  7972  01D7  0BE3               	decfsz	??_main+2,f
  7973  01D8  29D3               	goto	u5357
  7974  01D9  0000               	nop
  7975                           
  7976                           ;Multi_RX_testjig_v2.c: 661: LATC2 = 0;
  7977  01DA  0022               	movlb	2	; select bank2
  7978  01DB  110E               	bcf	14,2	;volatile
  7979                           
  7980                           ;Multi_RX_testjig_v2.c: 662: LATC7 = 0;
  7981  01DC  138E               	bcf	14,7	;volatile
  7982                           
  7983                           ;Multi_RX_testjig_v2.c: 663: _delay((unsigned long)((100)*(16000000/4000.0)));
  7984  01DD  3003               	movlw	3
  7985  01DE  0020               	movlb	0	; select bank0
  7986  01DF  00E3               	movwf	??_main+2
  7987  01E0  3008               	movlw	8
  7988  01E1  00E2               	movwf	??_main+1
  7989  01E2  3078               	movlw	120
  7990  01E3  00E1               	movwf	??_main
  7991  01E4                     u5367:	
  7992  01E4  0BE1               	decfsz	??_main,f
  7993  01E5  29E4               	goto	u5367
  7994  01E6  0BE2               	decfsz	??_main+1,f
  7995  01E7  29E4               	goto	u5367
  7996  01E8  0BE3               	decfsz	??_main+2,f
  7997  01E9  29E4               	goto	u5367
  7998                           
  7999                           ;Multi_RX_testjig_v2.c: 665: }else if(RF0 == 0)
  8000  01EA  2A49               	goto	l4175
  8001  01EB                     l338:	
  8002  01EB  180C               	btfsc	12,0	;volatile
  8003  01EC  2A49               	goto	l4175
  8004                           
  8005                           ;Multi_RX_testjig_v2.c: 666: {
  8006                           ;Multi_RX_testjig_v2.c: 667: LATC2 = 0;
  8007  01ED  0022               	movlb	2	; select bank2
  8008  01EE  110E               	bcf	14,2	;volatile
  8009                           
  8010                           ;Multi_RX_testjig_v2.c: 668: LATC7 = 0;
  8011  01EF  138E               	bcf	14,7	;volatile
  8012                           
  8013                           ;Multi_RX_testjig_v2.c: 671: LATA7 = 1;
  8014  01F0  178C               	bsf	12,7	;volatile
  8015                           
  8016                           ;Multi_RX_testjig_v2.c: 672: LATB7 = 1;
  8017  01F1  178D               	bsf	13,7	;volatile
  8018                           
  8019                           ;Multi_RX_testjig_v2.c: 674: _delay((unsigned long)((100)*(16000000/4000.0)));
  8020  01F2  3003               	movlw	3
  8021  01F3  0020               	movlb	0	; select bank0
  8022  01F4  00E3               	movwf	??_main+2
  8023  01F5  3008               	movlw	8
  8024  01F6  00E2               	movwf	??_main+1
  8025  01F7  3078               	movlw	120
  8026  01F8  00E1               	movwf	??_main
  8027  01F9                     u5377:	
  8028  01F9  0BE1               	decfsz	??_main,f
  8029  01FA  29F9               	goto	u5377
  8030  01FB  0BE2               	decfsz	??_main+1,f
  8031  01FC  29F9               	goto	u5377
  8032  01FD  0BE3               	decfsz	??_main+2,f
  8033  01FE  29F9               	goto	u5377
  8034                           
  8035                           ;Multi_RX_testjig_v2.c: 675: LATC6 = 1;
  8036  01FF  0022               	movlb	2	; select bank2
  8037  0200  170E               	bsf	14,6	;volatile
  8038                           
  8039                           ;Multi_RX_testjig_v2.c: 677: _delay((unsigned long)((1000)*(16000000/4000.0)));
  8040  0201  3015               	movlw	21
  8041  0202  0020               	movlb	0	; select bank0
  8042  0203  00E3               	movwf	??_main+2
  8043  0204  304B               	movlw	75
  8044  0205  00E2               	movwf	??_main+1
  8045  0206  30D1               	movlw	209
  8046  0207  00E1               	movwf	??_main
  8047  0208                     u5387:	
  8048  0208  0BE1               	decfsz	??_main,f
  8049  0209  2A08               	goto	u5387
  8050  020A  0BE2               	decfsz	??_main+1,f
  8051  020B  2A08               	goto	u5387
  8052  020C  0BE3               	decfsz	??_main+2,f
  8053  020D  2A08               	goto	u5387
  8054  020E  0000               	nop
  8055                           
  8056                           ;Multi_RX_testjig_v2.c: 678: LATC6 = 0;
  8057  020F  0022               	movlb	2	; select bank2
  8058  0210  130E               	bcf	14,6	;volatile
  8059                           
  8060                           ;Multi_RX_testjig_v2.c: 679: _delay((unsigned long)((4500)*(16000000/4000.0)));
  8061  0211  305C               	movlw	92
  8062  0212  0020               	movlb	0	; select bank0
  8063  0213  00E3               	movwf	??_main+2
  8064  0214  3051               	movlw	81
  8065  0215  00E2               	movwf	??_main+1
  8066  0216  30BA               	movlw	186
  8067  0217  00E1               	movwf	??_main
  8068  0218                     u5397:	
  8069  0218  0BE1               	decfsz	??_main,f
  8070  0219  2A18               	goto	u5397
  8071  021A  0BE2               	decfsz	??_main+1,f
  8072  021B  2A18               	goto	u5397
  8073  021C  0BE3               	decfsz	??_main+2,f
  8074  021D  2A18               	goto	u5397
  8075  021E  0000               	nop
  8076                           
  8077                           ;Multi_RX_testjig_v2.c: 680: LATA7 = 0;
  8078  021F  0022               	movlb	2	; select bank2
  8079  0220  138C               	bcf	12,7	;volatile
  8080                           
  8081                           ;Multi_RX_testjig_v2.c: 681: LATB7 = 0;
  8082  0221  138D               	bcf	13,7	;volatile
  8083                           
  8084                           ;Multi_RX_testjig_v2.c: 682: _delay((unsigned long)((100)*(16000000/4000.0)));
  8085  0222  3003               	movlw	3
  8086  0223  0020               	movlb	0	; select bank0
  8087  0224  00E3               	movwf	??_main+2
  8088  0225  3008               	movlw	8
  8089  0226  00E2               	movwf	??_main+1
  8090  0227  3078               	movlw	120
  8091  0228  00E1               	movwf	??_main
  8092  0229                     u5407:	
  8093  0229  0BE1               	decfsz	??_main,f
  8094  022A  2A29               	goto	u5407
  8095  022B  0BE2               	decfsz	??_main+1,f
  8096  022C  2A29               	goto	u5407
  8097  022D  0BE3               	decfsz	??_main+2,f
  8098  022E  2A29               	goto	u5407
  8099  022F  2A49               	goto	l4175
  8100  0230                     l4171:	
  8101                           
  8102                           ;Multi_RX_testjig_v2.c: 696: else
  8103                           ;Multi_RX_testjig_v2.c: 697: {
  8104                           ;Multi_RX_testjig_v2.c: 698: print_screen("Pickit Programming", " skipped");
  8105  0230  303F               	movlw	low (STR_27| (0+32768))
  8106  0231  00F4               	movwf	print_screen@top
  8107  0232  3090               	movlw	high (STR_27| (0+32768))
  8108  0233  00F5               	movwf	print_screen@top+1
  8109  0234  3084               	movlw	low (STR_32| (0+32768))
  8110  0235  00F6               	movwf	print_screen@bottom
  8111  0236  3093               	movlw	high (STR_32| (0+32768))
  8112  0237  00F7               	movwf	print_screen@bottom+1
  8113  0238  318A  22D4  3180   	fcall	_print_screen
  8114                           
  8115                           ;Multi_RX_testjig_v2.c: 699: _delay((unsigned long)((300)*(16000000/4000.0)));
  8116  023B  3007               	movlw	7
  8117  023C  0020               	movlb	0	; select bank0
  8118  023D  00E3               	movwf	??_main+2
  8119  023E  3017               	movlw	23
  8120  023F  00E2               	movwf	??_main+1
  8121  0240  306F               	movlw	111
  8122  0241  00E1               	movwf	??_main
  8123  0242                     u5417:	
  8124  0242  0BE1               	decfsz	??_main,f
  8125  0243  2A42               	goto	u5417
  8126  0244  0BE2               	decfsz	??_main+1,f
  8127  0245  2A42               	goto	u5417
  8128  0246  0BE3               	decfsz	??_main+2,f
  8129  0247  2A42               	goto	u5417
  8130  0248  0000               	nop
  8131  0249                     l4175:	
  8132                           
  8133                           ;Multi_RX_testjig_v2.c: 700: }
  8134                           ;Multi_RX_testjig_v2.c: 715: LATF4 = 0;
  8135  0249  0027               	movlb	7	; select bank7
  8136  024A  120C               	bcf	12,4	;volatile
  8137                           
  8138                           ;Multi_RX_testjig_v2.c: 716: _delay((unsigned long)((100)*(16000000/4000.0)));
  8139  024B  3003               	movlw	3
  8140  024C  0020               	movlb	0	; select bank0
  8141  024D  00E3               	movwf	??_main+2
  8142  024E  3008               	movlw	8
  8143  024F  00E2               	movwf	??_main+1
  8144  0250  3078               	movlw	120
  8145  0251  00E1               	movwf	??_main
  8146  0252                     u5427:	
  8147  0252  0BE1               	decfsz	??_main,f
  8148  0253  2A52               	goto	u5427
  8149  0254  0BE2               	decfsz	??_main+1,f
  8150  0255  2A52               	goto	u5427
  8151  0256  0BE3               	decfsz	??_main+2,f
  8152  0257  2A52               	goto	u5427
  8153                           
  8154                           ;Multi_RX_testjig_v2.c: 717: LATF4 = 1;
  8155  0258  0027               	movlb	7	; select bank7
  8156  0259  160C               	bsf	12,4	;volatile
  8157                           
  8158                           ;Multi_RX_testjig_v2.c: 718: _delay((unsigned long)((100)*(16000000/4000.0)));
  8159  025A  3003               	movlw	3
  8160  025B  0020               	movlb	0	; select bank0
  8161  025C  00E3               	movwf	??_main+2
  8162  025D  3008               	movlw	8
  8163  025E  00E2               	movwf	??_main+1
  8164  025F  3078               	movlw	120
  8165  0260  00E1               	movwf	??_main
  8166  0261                     u5437:	
  8167  0261  0BE1               	decfsz	??_main,f
  8168  0262  2A61               	goto	u5437
  8169  0263  0BE2               	decfsz	??_main+1,f
  8170  0264  2A61               	goto	u5437
  8171  0265  0BE3               	decfsz	??_main+2,f
  8172  0266  2A61               	goto	u5437
  8173                           
  8174                           ;Multi_RX_testjig_v2.c: 719: LATF4 = 0;
  8175  0267  0027               	movlb	7	; select bank7
  8176  0268  120C               	bcf	12,4	;volatile
  8177                           
  8178                           ;Multi_RX_testjig_v2.c: 720: print_screen("Establishing", "comms");
  8179  0269  306F               	movlw	low (STR_33| (0+32768))
  8180  026A  00F4               	movwf	print_screen@top
  8181  026B  3092               	movlw	high (STR_33| (0+32768))
  8182  026C  00F5               	movwf	print_screen@top+1
  8183  026D  3013               	movlw	low ((STR_138+5)| (0+32768))
  8184  026E  00F6               	movwf	print_screen@bottom
  8185  026F  3093               	movlw	high ((STR_138+5)| (0+32768))
  8186  0270  00F7               	movwf	print_screen@bottom+1
  8187  0271  318A  22D4  3180   	fcall	_print_screen
  8188                           
  8189                           ;Multi_RX_testjig_v2.c: 721: unsigned char device_type;
  8190                           ;Multi_RX_testjig_v2.c: 722: unsigned char RX_data = 0;
  8191  0274  0020               	movlb	0	; select bank0
  8192  0275  01ED               	clrf	main@RX_data
  8193                           
  8194                           ;Multi_RX_testjig_v2.c: 723: unsigned int i;
  8195                           ;Multi_RX_testjig_v2.c: 725: LATC2 = 0;
  8196  0276  0022               	movlb	2	; select bank2
  8197  0277  110E               	bcf	14,2	;volatile
  8198                           
  8199                           ;Multi_RX_testjig_v2.c: 726: LATC7 = 0;
  8200  0278  138E               	bcf	14,7	;volatile
  8201                           
  8202                           ;Multi_RX_testjig_v2.c: 727: LATB7 = 0;
  8203  0279  138D               	bcf	13,7	;volatile
  8204                           
  8205                           ;Multi_RX_testjig_v2.c: 728: LATA7 = 0;
  8206  027A  138C               	bcf	12,7	;volatile
  8207                           
  8208                           ;Multi_RX_testjig_v2.c: 748: for(i = 0; i < 100; i++)
  8209  027B  0020               	movlb	0	; select bank0
  8210  027C  3000               	movlw	0
  8211  027D  01EB               	clrf	main@i
  8212  027E  01EC               	clrf	main@i+1
  8213  027F  026C               	subwf	main@i+1,w
  8214  0280  3064               	movlw	100
  8215  0281  1903               	skipnz
  8216  0282  026B               	subwf	main@i,w
  8217  0283  1803               	btfsc	3,0
  8218  0284  2AE4               	goto	l4221
  8219  0285                     l4201:	
  8220                           
  8221                           ;Multi_RX_testjig_v2.c: 749: {
  8222                           ;Multi_RX_testjig_v2.c: 750: TX_one(0x01);
  8223  0285  3001               	movlw	1
  8224  0286  3188  2023  3180   	fcall	_TX_one
  8225                           
  8226                           ;Multi_RX_testjig_v2.c: 751: device_type = RX_one_timeout();
  8227  0289  3187  27C1  3180   	fcall	_RX_one_timeout
  8228  028C  0020               	movlb	0	; select bank0
  8229  028D  00EE               	movwf	main@device_type
  8230                           
  8231                           ;Multi_RX_testjig_v2.c: 752: if((device_type == 0xAA) || (device_type == 0xA1) || (devic
      +                          e_type == 0xA2))
  8232  028E  3AAA               	xorlw	170
  8233  028F  1903               	btfsc	3,2
  8234  0290  2A99               	goto	l4209
  8235  0291  30A1               	movlw	161
  8236  0292  066E               	xorwf	main@device_type,w
  8237  0293  1903               	btfsc	3,2
  8238  0294  2A99               	goto	l4209
  8239  0295  30A2               	movlw	162
  8240  0296  066E               	xorwf	main@device_type,w
  8241  0297  1D03               	btfss	3,2
  8242  0298  2AB3               	goto	l4213
  8243  0299                     l4209:	
  8244                           
  8245                           ;Multi_RX_testjig_v2.c: 753: {
  8246                           ;Multi_RX_testjig_v2.c: 754: lcd_print_int(device_type, 5, 0, 0);
  8247  0299  086E               	movf	main@device_type,w
  8248  029A  00DB               	movwf	lcd_print_int@number
  8249  029B  3005               	movlw	5
  8250  029C  01DC               	clrf	lcd_print_int@number+1
  8251  029D  00DD               	movwf	lcd_print_int@pos
  8252  029E  01DE               	clrf	lcd_print_int@pos+1
  8253  029F  01DF               	clrf	lcd_print_int@decimal
  8254  02A0  01E0               	clrf	lcd_print_int@ten_thou_digit
  8255  02A1  3188  20F7  3180   	fcall	_lcd_print_int
  8256                           
  8257                           ;Multi_RX_testjig_v2.c: 755: _delay((unsigned long)((1000)*(16000000/4000.0)));
  8258  02A4  3015               	movlw	21
  8259  02A5  0020               	movlb	0	; select bank0
  8260  02A6  00E3               	movwf	??_main+2
  8261  02A7  304B               	movlw	75
  8262  02A8  00E2               	movwf	??_main+1
  8263  02A9  30D1               	movlw	209
  8264  02AA  00E1               	movwf	??_main
  8265  02AB                     u5447:	
  8266  02AB  0BE1               	decfsz	??_main,f
  8267  02AC  2AAB               	goto	u5447
  8268  02AD  0BE2               	decfsz	??_main+1,f
  8269  02AE  2AAB               	goto	u5447
  8270  02AF  0BE3               	decfsz	??_main+2,f
  8271  02B0  2AAB               	goto	u5447
  8272  02B1  0000               	nop
  8273                           
  8274                           ;Multi_RX_testjig_v2.c: 756: break;
  8275  02B2  2AE4               	goto	l4221
  8276  02B3                     l4213:	
  8277                           
  8278                           ;Multi_RX_testjig_v2.c: 757: }
  8279                           ;Multi_RX_testjig_v2.c: 758: lcd_print_int(i, 11, 0, 0);
  8280  02B3  086C               	movf	main@i+1,w
  8281  02B4  00DC               	movwf	lcd_print_int@number+1
  8282  02B5  086B               	movf	main@i,w
  8283  02B6  00DB               	movwf	lcd_print_int@number
  8284  02B7  300B               	movlw	11
  8285  02B8  00DD               	movwf	lcd_print_int@pos
  8286  02B9  01DE               	clrf	lcd_print_int@pos+1
  8287  02BA  01DF               	clrf	lcd_print_int@decimal
  8288  02BB  01E0               	clrf	lcd_print_int@ten_thou_digit
  8289  02BC  3188  20F7  3180   	fcall	_lcd_print_int
  8290                           
  8291                           ;Multi_RX_testjig_v2.c: 759: lcd_print_int(device_type, 5, 0, 0);
  8292  02BF  0020               	movlb	0	; select bank0
  8293  02C0  086E               	movf	main@device_type,w
  8294  02C1  00DB               	movwf	lcd_print_int@number
  8295  02C2  3005               	movlw	5
  8296  02C3  01DC               	clrf	lcd_print_int@number+1
  8297  02C4  00DD               	movwf	lcd_print_int@pos
  8298  02C5  01DE               	clrf	lcd_print_int@pos+1
  8299  02C6  01DF               	clrf	lcd_print_int@decimal
  8300  02C7  01E0               	clrf	lcd_print_int@ten_thou_digit
  8301  02C8  3188  20F7  3180   	fcall	_lcd_print_int
  8302                           
  8303                           ;Multi_RX_testjig_v2.c: 760: _delay((unsigned long)((50)*(16000000/4000.0)));
  8304  02CB  3002               	movlw	2
  8305  02CC  0020               	movlb	0	; select bank0
  8306  02CD  00E3               	movwf	??_main+2
  8307  02CE  3004               	movlw	4
  8308  02CF  00E2               	movwf	??_main+1
  8309  02D0  30BA               	movlw	186
  8310  02D1  00E1               	movwf	??_main
  8311  02D2                     u5457:	
  8312  02D2  0BE1               	decfsz	??_main,f
  8313  02D3  2AD2               	goto	u5457
  8314  02D4  0BE2               	decfsz	??_main+1,f
  8315  02D5  2AD2               	goto	u5457
  8316  02D6  0BE3               	decfsz	??_main+2,f
  8317  02D7  2AD2               	goto	u5457
  8318  02D8  0000               	nop
  8319  02D9  0020               	movlb	0	; select bank0
  8320  02DA  0AEB               	incf	main@i,f
  8321  02DB  1903               	skipnz
  8322  02DC  0AEC               	incf	main@i+1,f
  8323  02DD  3000               	movlw	0
  8324  02DE  026C               	subwf	main@i+1,w
  8325  02DF  3064               	movlw	100
  8326  02E0  1903               	skipnz
  8327  02E1  026B               	subwf	main@i,w
  8328  02E2  1C03               	skipc
  8329  02E3  2A85               	goto	l4201
  8330  02E4                     l4221:	
  8331                           
  8332                           ;Multi_RX_testjig_v2.c: 761: }
  8333                           ;Multi_RX_testjig_v2.c: 762: if(i >= 30)
  8334  02E4  3000               	movlw	0
  8335  02E5  0020               	movlb	0	; select bank0
  8336  02E6  026C               	subwf	main@i+1,w
  8337  02E7  301E               	movlw	30
  8338  02E8  1903               	skipnz
  8339  02E9  026B               	subwf	main@i,w
  8340  02EA  1C03               	skipc
  8341  02EB  2AF8               	goto	l4225
  8342                           
  8343                           ;Multi_RX_testjig_v2.c: 763: {
  8344                           ;Multi_RX_testjig_v2.c: 766: print_error("Comms Error", " 1");
  8345  02EC  30DF               	movlw	low (STR_35| (0+32768))
  8346  02ED  00F8               	movwf	print_error@top
  8347  02EE  3092               	movlw	high (STR_35| (0+32768))
  8348  02EF  00F9               	movwf	print_error@top+1
  8349  02F0  30DE               	movlw	low (STR_36| (0+32768))
  8350  02F1  00FA               	movwf	print_error@bottom
  8351  02F2  3093               	movlw	high (STR_36| (0+32768))
  8352  02F3  00FB               	movwf	print_error@bottom+1
  8353  02F4  318A  22F6  3180   	fcall	_print_error
  8354                           
  8355                           ;Multi_RX_testjig_v2.c: 767: }
  8356  02F7  2B1E               	goto	l4229
  8357  02F8                     l4225:	
  8358                           
  8359                           ;Multi_RX_testjig_v2.c: 768: else
  8360                           ;Multi_RX_testjig_v2.c: 769: {
  8361                           ;Multi_RX_testjig_v2.c: 770: lcd_print_int(i, 11, 0, 0);
  8362  02F8  086C               	movf	main@i+1,w
  8363  02F9  00DC               	movwf	lcd_print_int@number+1
  8364  02FA  086B               	movf	main@i,w
  8365  02FB  00DB               	movwf	lcd_print_int@number
  8366  02FC  300B               	movlw	11
  8367  02FD  00DD               	movwf	lcd_print_int@pos
  8368  02FE  01DE               	clrf	lcd_print_int@pos+1
  8369  02FF  01DF               	clrf	lcd_print_int@decimal
  8370  0300  01E0               	clrf	lcd_print_int@ten_thou_digit
  8371  0301  3188  20F7  3180   	fcall	_lcd_print_int
  8372                           
  8373                           ;Multi_RX_testjig_v2.c: 771: lcd_print_int(device_type, 5, 0, 0);
  8374  0304  0020               	movlb	0	; select bank0
  8375  0305  086E               	movf	main@device_type,w
  8376  0306  00DB               	movwf	lcd_print_int@number
  8377  0307  3005               	movlw	5
  8378  0308  01DC               	clrf	lcd_print_int@number+1
  8379  0309  00DD               	movwf	lcd_print_int@pos
  8380  030A  01DE               	clrf	lcd_print_int@pos+1
  8381  030B  01DF               	clrf	lcd_print_int@decimal
  8382  030C  01E0               	clrf	lcd_print_int@ten_thou_digit
  8383  030D  3188  20F7  3180   	fcall	_lcd_print_int
  8384                           
  8385                           ;Multi_RX_testjig_v2.c: 772: _delay((unsigned long)((50)*(16000000/4000.0)));
  8386  0310  3002               	movlw	2
  8387  0311  0020               	movlb	0	; select bank0
  8388  0312  00E3               	movwf	??_main+2
  8389  0313  3004               	movlw	4
  8390  0314  00E2               	movwf	??_main+1
  8391  0315  30BA               	movlw	186
  8392  0316  00E1               	movwf	??_main
  8393  0317                     u5467:	
  8394  0317  0BE1               	decfsz	??_main,f
  8395  0318  2B17               	goto	u5467
  8396  0319  0BE2               	decfsz	??_main+1,f
  8397  031A  2B17               	goto	u5467
  8398  031B  0BE3               	decfsz	??_main+2,f
  8399  031C  2B17               	goto	u5467
  8400  031D  0000               	nop
  8401  031E                     l4229:	
  8402                           
  8403                           ;Multi_RX_testjig_v2.c: 773: }
  8404                           ;Multi_RX_testjig_v2.c: 775: if((device_type == 0xAA)|| (device_type == 0xA2))
  8405  031E  30AA               	movlw	170
  8406  031F  0020               	movlb	0	; select bank0
  8407  0320  066E               	xorwf	main@device_type,w
  8408  0321  1903               	btfsc	3,2
  8409  0322  2B27               	goto	l4233
  8410  0323  30A2               	movlw	162
  8411  0324  066E               	xorwf	main@device_type,w
  8412  0325  1D03               	btfss	3,2
  8413  0326  2B99               	goto	l4271
  8414  0327                     l4233:	
  8415                           
  8416                           ;Multi_RX_testjig_v2.c: 776: {
  8417                           ;Multi_RX_testjig_v2.c: 778: print_screen("Testing ", "EEPROM read/write");
  8418  0327  3057               	movlw	low (STR_37| (0+32768))
  8419  0328  00F4               	movwf	print_screen@top
  8420  0329  3093               	movlw	high (STR_37| (0+32768))
  8421  032A  00F5               	movwf	print_screen@top+1
  8422  032B  3052               	movlw	low (STR_38| (0+32768))
  8423  032C  00F6               	movwf	print_screen@bottom
  8424  032D  3090               	movlw	high (STR_38| (0+32768))
  8425  032E  00F7               	movwf	print_screen@bottom+1
  8426  032F  318A  22D4  3180   	fcall	_print_screen
  8427                           
  8428                           ;Multi_RX_testjig_v2.c: 779: TX_one(0x10);
  8429  0332  3010               	movlw	16
  8430  0333  3188  2023  3180   	fcall	_TX_one
  8431                           
  8432                           ;Multi_RX_testjig_v2.c: 780: RX_data = RX_one();
  8433  0336  3188  2047  3180   	fcall	_RX_one
  8434  0339  0020               	movlb	0	; select bank0
  8435  033A  00ED               	movwf	main@RX_data
  8436                           
  8437                           ;Multi_RX_testjig_v2.c: 781: if(RX_data == 0xEE)
  8438  033B  3AEE               	xorlw	238
  8439  033C  1D03               	btfss	3,2
  8440  033D  2B46               	goto	l4243
  8441                           
  8442                           ;Multi_RX_testjig_v2.c: 782: print_error("EEPROM error", " Read/Write");
  8443  033E  307C               	movlw	low (STR_39| (0+32768))
  8444  033F  00F8               	movwf	print_error@top
  8445  0340  3092               	movlw	high (STR_39| (0+32768))
  8446  0341  00F9               	movwf	print_error@top+1
  8447  0342  30AF               	movlw	low (STR_40| (0+32768))
  8448  0343  00FA               	movwf	print_error@bottom
  8449  0344  3092               	movlw	high (STR_40| (0+32768))
  8450  0345  2B51               	goto	L2
  8451  0346                     l4243:	
  8452                           
  8453                           ;Multi_RX_testjig_v2.c: 783: else if(RX_data != 0x1A)
  8454  0346  301A               	movlw	26
  8455  0347  066D               	xorwf	main@RX_data,w
  8456  0348  1903               	btfsc	3,2
  8457  0349  2B55               	goto	l353
  8458                           
  8459                           ;Multi_RX_testjig_v2.c: 784: print_error("Comms Error", " 2");
  8460  034A  30DF               	movlw	low (STR_35| (0+32768))
  8461  034B  00F8               	movwf	print_error@top
  8462  034C  3092               	movlw	high (STR_35| (0+32768))
  8463  034D  00F9               	movwf	print_error@top+1
  8464  034E  3066               	movlw	low ((STR_54+6)| (0+32768))
  8465  034F  00FA               	movwf	print_error@bottom
  8466  0350  3093               	movlw	high ((STR_54+6)| (0+32768))
  8467  0351                     L2:	
  8468  0351  00FB               	movwf	print_error@bottom+1
  8469  0352  318A  22F6  3180   	fcall	_print_error
  8470  0355                     l353:	
  8471                           
  8472                           ;Multi_RX_testjig_v2.c: 787: unsigned int mem_size;
  8473                           ;Multi_RX_testjig_v2.c: 788: print_screen("Test EEPROM ", " size");
  8474  0355  3021               	movlw	low (STR_43| (0+32768))
  8475  0356  00F4               	movwf	print_screen@top
  8476  0357  3092               	movlw	high (STR_43| (0+32768))
  8477  0358  00F5               	movwf	print_screen@top+1
  8478  0359  30C1               	movlw	low ((STR_45+6)| (0+32768))
  8479  035A  00F6               	movwf	print_screen@bottom
  8480  035B  3092               	movlw	high ((STR_45+6)| (0+32768))
  8481  035C  00F7               	movwf	print_screen@bottom+1
  8482  035D  318A  22D4  3180   	fcall	_print_screen
  8483                           
  8484                           ;Multi_RX_testjig_v2.c: 789: TX_one(0x20);
  8485  0360  3020               	movlw	32
  8486  0361  3188  2023  3180   	fcall	_TX_one
  8487                           
  8488                           ;Multi_RX_testjig_v2.c: 790: RX_data = RX_one();
  8489  0364  3188  2047  3180   	fcall	_RX_one
  8490  0367  0020               	movlb	0	; select bank0
  8491  0368  00ED               	movwf	main@RX_data
  8492                           
  8493                           ;Multi_RX_testjig_v2.c: 791: mem_size = RX_data<<8;
  8494  0369  00E7               	movwf	main@mem_size+1
  8495  036A  3021               	movlw	33
  8496  036B  01E6               	clrf	main@mem_size
  8497                           
  8498                           ;Multi_RX_testjig_v2.c: 792: TX_one(0x21);
  8499  036C  3188  2023  3180   	fcall	_TX_one
  8500                           
  8501                           ;Multi_RX_testjig_v2.c: 793: RX_data = RX_one();
  8502  036F  3188  2047  3180   	fcall	_RX_one
  8503  0372  0020               	movlb	0	; select bank0
  8504  0373  00ED               	movwf	main@RX_data
  8505                           
  8506                           ;Multi_RX_testjig_v2.c: 794: mem_size = mem_size | RX_data;
  8507  0374  04E6               	iorwf	main@mem_size,f
  8508                           
  8509                           ;Multi_RX_testjig_v2.c: 795: if(device_type == 0xAA)
  8510  0375  30AA               	movlw	170
  8511  0376  066E               	xorwf	main@device_type,w
  8512  0377  1D03               	btfss	3,2
  8513  0378  2B86               	goto	l4265
  8514                           
  8515                           ;Multi_RX_testjig_v2.c: 796: {
  8516                           ;Multi_RX_testjig_v2.c: 797: if(mem_size != 0x2000)
  8517  0379  3020               	movlw	32
  8518  037A  0667               	xorwf	main@mem_size+1,w
  8519  037B  0466               	iorwf	main@mem_size,w
  8520  037C  1903               	btfsc	3,2
  8521  037D  2B99               	goto	l4271
  8522                           
  8523                           ;Multi_RX_testjig_v2.c: 798: print_error("EEPROM size", " Error Condo3");
  8524  037E  30BB               	movlw	low (STR_45| (0+32768))
  8525  037F  00F8               	movwf	print_error@top
  8526  0380  3092               	movlw	high (STR_45| (0+32768))
  8527  0381  00F9               	movwf	print_error@top+1
  8528  0382  30B1               	movlw	low (STR_46| (0+32768))
  8529  0383  00FA               	movwf	print_error@bottom
  8530  0384  3091               	movlw	high (STR_46| (0+32768))
  8531  0385  2B95               	goto	L8
  8532  0386                     l4265:	
  8533                           
  8534                           ;Multi_RX_testjig_v2.c: 800: else if(device_type == 0xA2)
  8535  0386  30A2               	movlw	162
  8536  0387  066E               	xorwf	main@device_type,w
  8537  0388  1D03               	btfss	3,2
  8538  0389  2B99               	goto	l4271
  8539                           
  8540                           ;Multi_RX_testjig_v2.c: 801: {
  8541                           ;Multi_RX_testjig_v2.c: 802: if(mem_size != 0x0000)
  8542  038A  0866               	movf	main@mem_size,w
  8543  038B  0467               	iorwf	main@mem_size+1,w
  8544  038C  1903               	btfsc	3,2
  8545  038D  2B99               	goto	l4271
  8546                           
  8547                           ;Multi_RX_testjig_v2.c: 803: print_error("EEPROM size", " Error Mem_copier");
  8548  038E  30BB               	movlw	low (STR_45| (0+32768))
  8549  038F  00F8               	movwf	print_error@top
  8550  0390  3092               	movlw	high (STR_45| (0+32768))
  8551  0391  00F9               	movwf	print_error@top+1
  8552  0392  3064               	movlw	low (STR_48| (0+32768))
  8553  0393  00FA               	movwf	print_error@bottom
  8554  0394  3090               	movlw	high (STR_48| (0+32768))
  8555  0395                     L8:	
  8556  0395  00FB               	movwf	print_error@bottom+1
  8557  0396  318A  22F6  3180   	fcall	_print_error
  8558  0399                     l4271:	
  8559                           
  8560                           ;Multi_RX_testjig_v2.c: 804: }
  8561                           ;Multi_RX_testjig_v2.c: 805: }
  8562                           ;Multi_RX_testjig_v2.c: 807: if((device_type == 0xAA)|| (device_type == 0xA1))
  8563  0399  30AA               	movlw	170
  8564  039A  0020               	movlb	0	; select bank0
  8565  039B  066E               	xorwf	main@device_type,w
  8566  039C  1903               	btfsc	3,2
  8567  039D  2BA2               	goto	l4275
  8568  039E  30A1               	movlw	161
  8569  039F  066E               	xorwf	main@device_type,w
  8570  03A0  1D03               	btfss	3,2
  8571  03A1  2D37               	goto	l4379
  8572  03A2                     l4275:	
  8573                           
  8574                           ;Multi_RX_testjig_v2.c: 808: {
  8575                           ;Multi_RX_testjig_v2.c: 810: Vout_set(27);
  8576  03A2  301B               	movlw	27
  8577  03A3  00F4               	movwf	Vout_set@Volts
  8578  03A4  01F5               	clrf	Vout_set@Volts+1
  8579  03A5  3188  20C0  3180   	fcall	_Vout_set
  8580                           
  8581                           ;Multi_RX_testjig_v2.c: 811: print_screen("Test Relay", "");
  8582  03A8  3019               	movlw	low (STR_49| (0+32768))
  8583  03A9  00F4               	movwf	print_screen@top
  8584  03AA  3093               	movlw	high (STR_49| (0+32768))
  8585  03AB  00F5               	movwf	print_screen@top+1
  8586  03AC  30DA               	movlw	low ((STR_135+15)| (0+32768))
  8587  03AD  00F6               	movwf	print_screen@bottom
  8588  03AE  3090               	movlw	high ((STR_135+15)| (0+32768))
  8589  03AF  00F7               	movwf	print_screen@bottom+1
  8590  03B0  318A  22D4  3180   	fcall	_print_screen
  8591                           
  8592                           ;Multi_RX_testjig_v2.c: 847: TX_one(0x31);
  8593  03B3  3031               	movlw	49
  8594  03B4  3188  2023  3180   	fcall	_TX_one
  8595                           
  8596                           ;Multi_RX_testjig_v2.c: 848: if(RX_one() == 0x3B)
  8597  03B7  3188  2047  3180   	fcall	_RX_one
  8598  03BA  3A3B               	xorlw	59
  8599  03BB  1D03               	skipz
  8600  03BC  2C26               	goto	l4309
  8601                           
  8602                           ;Multi_RX_testjig_v2.c: 849: {
  8603                           ;Multi_RX_testjig_v2.c: 850: _delay((unsigned long)((100)*(16000000/4000.0)));
  8604  03BD  3003               	movlw	3
  8605  03BE  0020               	movlb	0	; select bank0
  8606  03BF  00E3               	movwf	??_main+2
  8607  03C0  3008               	movlw	8
  8608  03C1  00E2               	movwf	??_main+1
  8609  03C2  3078               	movlw	120
  8610  03C3  00E1               	movwf	??_main
  8611  03C4                     u5477:	
  8612  03C4  0BE1               	decfsz	??_main,f
  8613  03C5  2BC4               	goto	u5477
  8614  03C6  0BE2               	decfsz	??_main+1,f
  8615  03C7  2BC4               	goto	u5477
  8616  03C8  0BE3               	decfsz	??_main+2,f
  8617  03C9  2BC4               	goto	u5477
  8618                           
  8619                           ;Multi_RX_testjig_v2.c: 851: if(RF5)
  8620  03CA  0025               	movlb	5	; select bank5
  8621  03CB  1E8C               	btfss	12,5	;volatile
  8622  03CC  2C1E               	goto	l4307
  8623                           
  8624                           ;Multi_RX_testjig_v2.c: 852: {
  8625                           ;Multi_RX_testjig_v2.c: 853: TX_one(0x30);
  8626  03CD  3030               	movlw	48
  8627  03CE  3188  2023  3180   	fcall	_TX_one
  8628                           
  8629                           ;Multi_RX_testjig_v2.c: 854: if(RX_one() == 0x3A)
  8630  03D1  3188  2047  3180   	fcall	_RX_one
  8631  03D4  3A3A               	xorlw	58
  8632  03D5  1D03               	skipz
  8633  03D6  2C26               	goto	l4309
  8634                           
  8635                           ;Multi_RX_testjig_v2.c: 855: {
  8636                           ;Multi_RX_testjig_v2.c: 856: _delay((unsigned long)((100)*(16000000/4000.0)));
  8637  03D7  3003               	movlw	3
  8638  03D8  0020               	movlb	0	; select bank0
  8639  03D9  00E3               	movwf	??_main+2
  8640  03DA  3008               	movlw	8
  8641  03DB  00E2               	movwf	??_main+1
  8642  03DC  3078               	movlw	120
  8643  03DD  00E1               	movwf	??_main
  8644  03DE                     u5487:	
  8645  03DE  0BE1               	decfsz	??_main,f
  8646  03DF  2BDE               	goto	u5487
  8647  03E0  0BE2               	decfsz	??_main+1,f
  8648  03E1  2BDE               	goto	u5487
  8649  03E2  0BE3               	decfsz	??_main+2,f
  8650  03E3  2BDE               	goto	u5487
  8651                           
  8652                           ;Multi_RX_testjig_v2.c: 858: if(RF5 == 0)
  8653  03E4  0025               	movlb	5	; select bank5
  8654  03E5  1A8C               	btfsc	12,5	;volatile
  8655  03E6  2C16               	goto	l4303
  8656                           
  8657                           ;Multi_RX_testjig_v2.c: 859: {
  8658                           ;Multi_RX_testjig_v2.c: 860: TX_one(0x31);
  8659  03E7  3031               	movlw	49
  8660  03E8  3188  2023  3180   	fcall	_TX_one
  8661                           
  8662                           ;Multi_RX_testjig_v2.c: 861: if(RX_one() == 0x3B)
  8663  03EB  3188  2047  3180   	fcall	_RX_one
  8664  03EE  3A3B               	xorlw	59
  8665  03EF  1D03               	skipz
  8666  03F0  2C26               	goto	l4309
  8667                           
  8668                           ;Multi_RX_testjig_v2.c: 862: {
  8669                           ;Multi_RX_testjig_v2.c: 863: _delay((unsigned long)((50)*(16000000/4000.0)));
  8670  03F1  3002               	movlw	2
  8671  03F2  0020               	movlb	0	; select bank0
  8672  03F3  00E3               	movwf	??_main+2
  8673  03F4  3004               	movlw	4
  8674  03F5  00E2               	movwf	??_main+1
  8675  03F6  30BA               	movlw	186
  8676  03F7  00E1               	movwf	??_main
  8677  03F8                     u5497:	
  8678  03F8  0BE1               	decfsz	??_main,f
  8679  03F9  2BF8               	goto	u5497
  8680  03FA  0BE2               	decfsz	??_main+1,f
  8681  03FB  2BF8               	goto	u5497
  8682  03FC  0BE3               	decfsz	??_main+2,f
  8683  03FD  2BF8               	goto	u5497
  8684  03FE  0000               	nop
  8685                           
  8686                           ;Multi_RX_testjig_v2.c: 864: if(RF5 == 1)
  8687  03FF  0025               	movlb	5	; select bank5
  8688  0400  1E8C               	btfss	12,5	;volatile
  8689  0401  2C0E               	goto	l4299
  8690                           
  8691                           ;Multi_RX_testjig_v2.c: 865: print_screen("Test Relay", "Pass");
  8692  0402  3019               	movlw	low (STR_49| (0+32768))
  8693  0403  00F4               	movwf	print_screen@top
  8694  0404  3093               	movlw	high (STR_49| (0+32768))
  8695  0405  00F5               	movwf	print_screen@top+1
  8696  0406  3091               	movlw	low ((STR_141+4)| (0+32768))
  8697  0407  00F6               	movwf	print_screen@bottom
  8698  0408  3093               	movlw	high ((STR_141+4)| (0+32768))
  8699  0409  00F7               	movwf	print_screen@bottom+1
  8700  040A  318A  22D4  3180   	fcall	_print_screen
  8701  040D  2C31               	goto	l4311
  8702  040E                     l4299:	
  8703                           
  8704                           ;Multi_RX_testjig_v2.c: 866: else
  8705                           ;Multi_RX_testjig_v2.c: 867: print_error("Relay1 !de-energized", " Error 2");
  8706  040E  3000               	movlw	low (STR_53| (0+32768))
  8707  040F  00F8               	movwf	print_error@top
  8708  0410  3090               	movlw	high (STR_53| (0+32768))
  8709  0411  00F9               	movwf	print_error@top+1
  8710  0412  3060               	movlw	low (STR_54| (0+32768))
  8711  0413  00FA               	movwf	print_error@bottom
  8712  0414  3093               	movlw	high (STR_54| (0+32768))
  8713  0415  2C2D               	goto	L3
  8714  0416                     l4303:	
  8715                           ;Multi_RX_testjig_v2.c: 869: else
  8716                           ;Multi_RX_testjig_v2.c: 870: print_error("Comms Error", " Error 3");
  8717                           
  8718                           
  8719                           ;Multi_RX_testjig_v2.c: 872: else
  8720                           ;Multi_RX_testjig_v2.c: 873: print_error("Relay1 !latched", "Error 2");
  8721  0416  30EB               	movlw	low (STR_57| (0+32768))
  8722  0417  00F8               	movwf	print_error@top
  8723  0418  3090               	movlw	high (STR_57| (0+32768))
  8724  0419  00F9               	movwf	print_error@top+1
  8725  041A  3061               	movlw	low ((STR_54+1)| (0+32768))
  8726  041B  00FA               	movwf	print_error@bottom
  8727  041C  3093               	movlw	high ((STR_54+1)| (0+32768))
  8728  041D  2C2D               	goto	L3
  8729  041E                     l4307:	
  8730                           ;Multi_RX_testjig_v2.c: 875: else
  8731                           ;Multi_RX_testjig_v2.c: 876: print_error("Comms Error", " Error 3");
  8732                           
  8733                           
  8734                           ;Multi_RX_testjig_v2.c: 878: else
  8735                           ;Multi_RX_testjig_v2.c: 879: print_error("Relay1 latched", "Error 4");
  8736  041E  302B               	movlw	low (STR_61| (0+32768))
  8737  041F  00F8               	movwf	print_error@top
  8738  0420  3091               	movlw	high (STR_61| (0+32768))
  8739  0421  00F9               	movwf	print_error@top+1
  8740  0422  30A6               	movlw	low (STR_62| (0+32768))
  8741  0423  00FA               	movwf	print_error@bottom
  8742  0424  3093               	movlw	high (STR_62| (0+32768))
  8743  0425  2C2D               	goto	L3
  8744  0426                     l4309:	
  8745                           
  8746                           ;Multi_RX_testjig_v2.c: 881: else
  8747                           ;Multi_RX_testjig_v2.c: 882: print_error("Comms Error", " Error 3");
  8748  0426  30DF               	movlw	low (STR_35| (0+32768))
  8749  0427  00F8               	movwf	print_error@top
  8750  0428  3092               	movlw	high (STR_35| (0+32768))
  8751  0429  00F9               	movwf	print_error@top+1
  8752  042A  3069               	movlw	low (STR_56| (0+32768))
  8753  042B  00FA               	movwf	print_error@bottom
  8754  042C  3093               	movlw	high (STR_56| (0+32768))
  8755  042D                     L3:	
  8756  042D  00FB               	movwf	print_error@bottom+1
  8757  042E  318A  22F6  3180   	fcall	_print_error
  8758  0431                     l4311:	
  8759                           
  8760                           ;Multi_RX_testjig_v2.c: 887: TX_one(0x41);
  8761  0431  3041               	movlw	65
  8762  0432  3188  2023  3180   	fcall	_TX_one
  8763                           
  8764                           ;Multi_RX_testjig_v2.c: 888: if(RX_one() == 0x4B)
  8765  0435  3188  2047  3180   	fcall	_RX_one
  8766  0438  3A4B               	xorlw	75
  8767  0439  1D03               	skipz
  8768  043A  2CA3               	goto	l4343
  8769                           
  8770                           ;Multi_RX_testjig_v2.c: 889: {
  8771                           ;Multi_RX_testjig_v2.c: 890: _delay((unsigned long)((100)*(16000000/4000.0)));
  8772  043B  3003               	movlw	3
  8773  043C  0020               	movlb	0	; select bank0
  8774  043D  00E3               	movwf	??_main+2
  8775  043E  3008               	movlw	8
  8776  043F  00E2               	movwf	??_main+1
  8777  0440  3078               	movlw	120
  8778  0441  00E1               	movwf	??_main
  8779  0442                     u5507:	
  8780  0442  0BE1               	decfsz	??_main,f
  8781  0443  2C42               	goto	u5507
  8782  0444  0BE2               	decfsz	??_main+1,f
  8783  0445  2C42               	goto	u5507
  8784  0446  0BE3               	decfsz	??_main+2,f
  8785  0447  2C42               	goto	u5507
  8786                           
  8787                           ;Multi_RX_testjig_v2.c: 891: if(RF2)
  8788  0448  0025               	movlb	5	; select bank5
  8789  0449  1D0C               	btfss	12,2	;volatile
  8790  044A  2C9B               	goto	l4341
  8791                           
  8792                           ;Multi_RX_testjig_v2.c: 892: {
  8793                           ;Multi_RX_testjig_v2.c: 893: TX_one(0x40);
  8794  044B  3040               	movlw	64
  8795  044C  3188  2023  3180   	fcall	_TX_one
  8796                           
  8797                           ;Multi_RX_testjig_v2.c: 894: if(RX_one() == 0x4A)
  8798  044F  3188  2047  3180   	fcall	_RX_one
  8799  0452  3A4A               	xorlw	74
  8800  0453  1D03               	skipz
  8801  0454  2CA3               	goto	l4343
  8802                           
  8803                           ;Multi_RX_testjig_v2.c: 895: {
  8804                           ;Multi_RX_testjig_v2.c: 896: _delay((unsigned long)((100)*(16000000/4000.0)));
  8805  0455  3003               	movlw	3
  8806  0456  0020               	movlb	0	; select bank0
  8807  0457  00E3               	movwf	??_main+2
  8808  0458  3008               	movlw	8
  8809  0459  00E2               	movwf	??_main+1
  8810  045A  3078               	movlw	120
  8811  045B  00E1               	movwf	??_main
  8812  045C                     u5517:	
  8813  045C  0BE1               	decfsz	??_main,f
  8814  045D  2C5C               	goto	u5517
  8815  045E  0BE2               	decfsz	??_main+1,f
  8816  045F  2C5C               	goto	u5517
  8817  0460  0BE3               	decfsz	??_main+2,f
  8818  0461  2C5C               	goto	u5517
  8819                           
  8820                           ;Multi_RX_testjig_v2.c: 898: if(RF2 == 0)
  8821  0462  0025               	movlb	5	; select bank5
  8822  0463  190C               	btfsc	12,2	;volatile
  8823  0464  2C93               	goto	l4337
  8824                           
  8825                           ;Multi_RX_testjig_v2.c: 899: {
  8826                           ;Multi_RX_testjig_v2.c: 900: TX_one(0x41);
  8827  0465  3041               	movlw	65
  8828  0466  3188  2023  3180   	fcall	_TX_one
  8829                           
  8830                           ;Multi_RX_testjig_v2.c: 901: if(RX_one() == 0x4B)
  8831  0469  3188  2047  3180   	fcall	_RX_one
  8832  046C  3A4B               	xorlw	75
  8833  046D  1D03               	skipz
  8834  046E  2CA3               	goto	l4343
  8835                           
  8836                           ;Multi_RX_testjig_v2.c: 902: {
  8837                           ;Multi_RX_testjig_v2.c: 903: _delay((unsigned long)((100)*(16000000/4000.0)));
  8838  046F  3003               	movlw	3
  8839  0470  0020               	movlb	0	; select bank0
  8840  0471  00E3               	movwf	??_main+2
  8841  0472  3008               	movlw	8
  8842  0473  00E2               	movwf	??_main+1
  8843  0474  3078               	movlw	120
  8844  0475  00E1               	movwf	??_main
  8845  0476                     u5527:	
  8846  0476  0BE1               	decfsz	??_main,f
  8847  0477  2C76               	goto	u5527
  8848  0478  0BE2               	decfsz	??_main+1,f
  8849  0479  2C76               	goto	u5527
  8850  047A  0BE3               	decfsz	??_main+2,f
  8851  047B  2C76               	goto	u5527
  8852                           
  8853                           ;Multi_RX_testjig_v2.c: 904: if(RF2 == 1)
  8854  047C  0025               	movlb	5	; select bank5
  8855  047D  1D0C               	btfss	12,2	;volatile
  8856  047E  2C8B               	goto	l4333
  8857                           
  8858                           ;Multi_RX_testjig_v2.c: 905: print_screen("Test Relay2", "Pass");
  8859  047F  30A3               	movlw	low (STR_65| (0+32768))
  8860  0480  00F4               	movwf	print_screen@top
  8861  0481  3092               	movlw	high (STR_65| (0+32768))
  8862  0482  00F5               	movwf	print_screen@top+1
  8863  0483  3091               	movlw	low ((STR_141+4)| (0+32768))
  8864  0484  00F6               	movwf	print_screen@bottom
  8865  0485  3093               	movlw	high ((STR_141+4)| (0+32768))
  8866  0486  00F7               	movwf	print_screen@bottom+1
  8867  0487  318A  22D4  3180   	fcall	_print_screen
  8868  048A  2CAE               	goto	l4345
  8869  048B                     l4333:	
  8870                           
  8871                           ;Multi_RX_testjig_v2.c: 906: else
  8872                           ;Multi_RX_testjig_v2.c: 907: print_error("Relay2 !de-energized", " Error 2");
  8873  048B  3015               	movlw	low (STR_67| (0+32768))
  8874  048C  00F8               	movwf	print_error@top
  8875  048D  3090               	movlw	high (STR_67| (0+32768))
  8876  048E  00F9               	movwf	print_error@top+1
  8877  048F  3060               	movlw	low (STR_54| (0+32768))
  8878  0490  00FA               	movwf	print_error@bottom
  8879  0491  3093               	movlw	high (STR_54| (0+32768))
  8880  0492  2CAA               	goto	L4
  8881  0493                     l4337:	
  8882                           ;Multi_RX_testjig_v2.c: 909: else
  8883                           ;Multi_RX_testjig_v2.c: 910: print_error("Comms Error", " Error 3");
  8884                           
  8885                           
  8886                           ;Multi_RX_testjig_v2.c: 912: else
  8887                           ;Multi_RX_testjig_v2.c: 913: print_error("Relay2 !latched", "Error 2");
  8888  0493  30FB               	movlw	low (STR_71| (0+32768))
  8889  0494  00F8               	movwf	print_error@top
  8890  0495  3090               	movlw	high (STR_71| (0+32768))
  8891  0496  00F9               	movwf	print_error@top+1
  8892  0497  3061               	movlw	low ((STR_54+1)| (0+32768))
  8893  0498  00FA               	movwf	print_error@bottom
  8894  0499  3093               	movlw	high ((STR_54+1)| (0+32768))
  8895  049A  2CAA               	goto	L4
  8896  049B                     l4341:	
  8897                           ;Multi_RX_testjig_v2.c: 915: else
  8898                           ;Multi_RX_testjig_v2.c: 916: print_error("Comms Error", " Error 3");
  8899                           
  8900                           
  8901                           ;Multi_RX_testjig_v2.c: 918: else
  8902                           ;Multi_RX_testjig_v2.c: 919: print_error("Relay2 latched", "Error 4");
  8903  049B  303A               	movlw	low (STR_75| (0+32768))
  8904  049C  00F8               	movwf	print_error@top
  8905  049D  3091               	movlw	high (STR_75| (0+32768))
  8906  049E  00F9               	movwf	print_error@top+1
  8907  049F  30A6               	movlw	low (STR_62| (0+32768))
  8908  04A0  00FA               	movwf	print_error@bottom
  8909  04A1  3093               	movlw	high (STR_62| (0+32768))
  8910  04A2  2CAA               	goto	L4
  8911  04A3                     l4343:	
  8912                           
  8913                           ;Multi_RX_testjig_v2.c: 921: else
  8914                           ;Multi_RX_testjig_v2.c: 922: print_error("Comms Error", " Error 3");
  8915  04A3  30DF               	movlw	low (STR_35| (0+32768))
  8916  04A4  00F8               	movwf	print_error@top
  8917  04A5  3092               	movlw	high (STR_35| (0+32768))
  8918  04A6  00F9               	movwf	print_error@top+1
  8919  04A7  3069               	movlw	low (STR_56| (0+32768))
  8920  04A8  00FA               	movwf	print_error@bottom
  8921  04A9  3093               	movlw	high (STR_56| (0+32768))
  8922  04AA                     L4:	
  8923  04AA  00FB               	movwf	print_error@bottom+1
  8924  04AB  318A  22F6  3180   	fcall	_print_error
  8925  04AE                     l4345:	
  8926                           
  8927                           ;Multi_RX_testjig_v2.c: 928: TX_one(0x51);
  8928  04AE  3051               	movlw	81
  8929  04AF  3188  2023  3180   	fcall	_TX_one
  8930                           
  8931                           ;Multi_RX_testjig_v2.c: 929: if(RX_one() == 0x5B)
  8932  04B2  3188  2047  3180   	fcall	_RX_one
  8933  04B5  3A5B               	xorlw	91
  8934  04B6  1D03               	skipz
  8935  04B7  2D20               	goto	l4377
  8936                           
  8937                           ;Multi_RX_testjig_v2.c: 930: {
  8938                           ;Multi_RX_testjig_v2.c: 931: _delay((unsigned long)((100)*(16000000/4000.0)));
  8939  04B8  3003               	movlw	3
  8940  04B9  0020               	movlb	0	; select bank0
  8941  04BA  00E3               	movwf	??_main+2
  8942  04BB  3008               	movlw	8
  8943  04BC  00E2               	movwf	??_main+1
  8944  04BD  3078               	movlw	120
  8945  04BE  00E1               	movwf	??_main
  8946  04BF                     u5537:	
  8947  04BF  0BE1               	decfsz	??_main,f
  8948  04C0  2CBF               	goto	u5537
  8949  04C1  0BE2               	decfsz	??_main+1,f
  8950  04C2  2CBF               	goto	u5537
  8951  04C3  0BE3               	decfsz	??_main+2,f
  8952  04C4  2CBF               	goto	u5537
  8953                           
  8954                           ;Multi_RX_testjig_v2.c: 932: if(RF1)
  8955  04C5  0025               	movlb	5	; select bank5
  8956  04C6  1C8C               	btfss	12,1	;volatile
  8957  04C7  2D18               	goto	l4375
  8958                           
  8959                           ;Multi_RX_testjig_v2.c: 933: {
  8960                           ;Multi_RX_testjig_v2.c: 935: TX_one(0x50);
  8961  04C8  3050               	movlw	80
  8962  04C9  3188  2023  3180   	fcall	_TX_one
  8963                           
  8964                           ;Multi_RX_testjig_v2.c: 936: if(RX_one() == 0x5A)
  8965  04CC  3188  2047  3180   	fcall	_RX_one
  8966  04CF  3A5A               	xorlw	90
  8967  04D0  1D03               	skipz
  8968  04D1  2D20               	goto	l4377
  8969                           
  8970                           ;Multi_RX_testjig_v2.c: 937: {
  8971                           ;Multi_RX_testjig_v2.c: 938: _delay((unsigned long)((100)*(16000000/4000.0)));
  8972  04D2  3003               	movlw	3
  8973  04D3  0020               	movlb	0	; select bank0
  8974  04D4  00E3               	movwf	??_main+2
  8975  04D5  3008               	movlw	8
  8976  04D6  00E2               	movwf	??_main+1
  8977  04D7  3078               	movlw	120
  8978  04D8  00E1               	movwf	??_main
  8979  04D9                     u5547:	
  8980  04D9  0BE1               	decfsz	??_main,f
  8981  04DA  2CD9               	goto	u5547
  8982  04DB  0BE2               	decfsz	??_main+1,f
  8983  04DC  2CD9               	goto	u5547
  8984  04DD  0BE3               	decfsz	??_main+2,f
  8985  04DE  2CD9               	goto	u5547
  8986                           
  8987                           ;Multi_RX_testjig_v2.c: 940: if(RF1 == 0)
  8988  04DF  0025               	movlb	5	; select bank5
  8989  04E0  188C               	btfsc	12,1	;volatile
  8990  04E1  2D10               	goto	l4371
  8991                           
  8992                           ;Multi_RX_testjig_v2.c: 941: {
  8993                           ;Multi_RX_testjig_v2.c: 942: TX_one(0x51);
  8994  04E2  3051               	movlw	81
  8995  04E3  3188  2023  3180   	fcall	_TX_one
  8996                           
  8997                           ;Multi_RX_testjig_v2.c: 943: if(RX_one() == 0x5B)
  8998  04E6  3188  2047  3180   	fcall	_RX_one
  8999  04E9  3A5B               	xorlw	91
  9000  04EA  1D03               	skipz
  9001  04EB  2D20               	goto	l4377
  9002                           
  9003                           ;Multi_RX_testjig_v2.c: 944: {
  9004                           ;Multi_RX_testjig_v2.c: 945: _delay((unsigned long)((100)*(16000000/4000.0)));
  9005  04EC  3003               	movlw	3
  9006  04ED  0020               	movlb	0	; select bank0
  9007  04EE  00E3               	movwf	??_main+2
  9008  04EF  3008               	movlw	8
  9009  04F0  00E2               	movwf	??_main+1
  9010  04F1  3078               	movlw	120
  9011  04F2  00E1               	movwf	??_main
  9012  04F3                     u5557:	
  9013  04F3  0BE1               	decfsz	??_main,f
  9014  04F4  2CF3               	goto	u5557
  9015  04F5  0BE2               	decfsz	??_main+1,f
  9016  04F6  2CF3               	goto	u5557
  9017  04F7  0BE3               	decfsz	??_main+2,f
  9018  04F8  2CF3               	goto	u5557
  9019                           
  9020                           ;Multi_RX_testjig_v2.c: 946: if(RF1 == 1)
  9021  04F9  0025               	movlb	5	; select bank5
  9022  04FA  1C8C               	btfss	12,1	;volatile
  9023  04FB  2D08               	goto	l4367
  9024                           
  9025                           ;Multi_RX_testjig_v2.c: 947: print_screen("Test Relay", "Pass");
  9026  04FC  3019               	movlw	low (STR_49| (0+32768))
  9027  04FD  00F4               	movwf	print_screen@top
  9028  04FE  3093               	movlw	high (STR_49| (0+32768))
  9029  04FF  00F5               	movwf	print_screen@top+1
  9030  0500  3091               	movlw	low ((STR_141+4)| (0+32768))
  9031  0501  00F6               	movwf	print_screen@bottom
  9032  0502  3093               	movlw	high ((STR_141+4)| (0+32768))
  9033  0503  00F7               	movwf	print_screen@bottom+1
  9034  0504  318A  22D4  3180   	fcall	_print_screen
  9035  0507  2D2B               	goto	l398
  9036  0508                     l4367:	
  9037                           
  9038                           ;Multi_RX_testjig_v2.c: 948: else
  9039                           ;Multi_RX_testjig_v2.c: 949: print_error("Relay3 !de-energized", " Error 2");
  9040  0508  302A               	movlw	low (STR_81| (0+32768))
  9041  0509  00F8               	movwf	print_error@top
  9042  050A  3090               	movlw	high (STR_81| (0+32768))
  9043  050B  00F9               	movwf	print_error@top+1
  9044  050C  3060               	movlw	low (STR_54| (0+32768))
  9045  050D  00FA               	movwf	print_error@bottom
  9046  050E  3093               	movlw	high (STR_54| (0+32768))
  9047  050F  2D27               	goto	L5
  9048  0510                     l4371:	
  9049                           ;Multi_RX_testjig_v2.c: 951: else
  9050                           ;Multi_RX_testjig_v2.c: 952: print_error("Comms Error", " Error 3");
  9051                           
  9052                           
  9053                           ;Multi_RX_testjig_v2.c: 954: else
  9054                           ;Multi_RX_testjig_v2.c: 955: print_error("Relay3 !latched", "Error 2");
  9055  0510  300B               	movlw	low (STR_85| (0+32768))
  9056  0511  00F8               	movwf	print_error@top
  9057  0512  3091               	movlw	high (STR_85| (0+32768))
  9058  0513  00F9               	movwf	print_error@top+1
  9059  0514  3061               	movlw	low ((STR_54+1)| (0+32768))
  9060  0515  00FA               	movwf	print_error@bottom
  9061  0516  3093               	movlw	high ((STR_54+1)| (0+32768))
  9062  0517  2D27               	goto	L5
  9063  0518                     l4375:	
  9064                           ;Multi_RX_testjig_v2.c: 957: else
  9065                           ;Multi_RX_testjig_v2.c: 958: print_error("Comms Error", " Error 3");
  9066                           
  9067                           
  9068                           ;Multi_RX_testjig_v2.c: 960: else
  9069                           ;Multi_RX_testjig_v2.c: 961: print_error("Relay3 latched", "Error 4");
  9070  0518  3049               	movlw	low (STR_89| (0+32768))
  9071  0519  00F8               	movwf	print_error@top
  9072  051A  3091               	movlw	high (STR_89| (0+32768))
  9073  051B  00F9               	movwf	print_error@top+1
  9074  051C  30A6               	movlw	low (STR_62| (0+32768))
  9075  051D  00FA               	movwf	print_error@bottom
  9076  051E  3093               	movlw	high (STR_62| (0+32768))
  9077  051F  2D27               	goto	L5
  9078  0520                     l4377:	
  9079                           
  9080                           ;Multi_RX_testjig_v2.c: 963: else
  9081                           ;Multi_RX_testjig_v2.c: 964: print_error("Comms Error", " Error 3");
  9082  0520  30DF               	movlw	low (STR_35| (0+32768))
  9083  0521  00F8               	movwf	print_error@top
  9084  0522  3092               	movlw	high (STR_35| (0+32768))
  9085  0523  00F9               	movwf	print_error@top+1
  9086  0524  3069               	movlw	low (STR_56| (0+32768))
  9087  0525  00FA               	movwf	print_error@bottom
  9088  0526  3093               	movlw	high (STR_56| (0+32768))
  9089  0527                     L5:	
  9090  0527  00FB               	movwf	print_error@bottom+1
  9091  0528  318A  22F6  3180   	fcall	_print_error
  9092  052B                     l398:	
  9093                           
  9094                           ;Multi_RX_testjig_v2.c: 966: print_screen("relays passed", "fuck yea");
  9095  052B  30CD               	movlw	low (STR_93| (0+32768))
  9096  052C  00F4               	movwf	print_screen@top
  9097  052D  3091               	movlw	high (STR_93| (0+32768))
  9098  052E  00F5               	movwf	print_screen@top+1
  9099  052F  307B               	movlw	low (STR_94| (0+32768))
  9100  0530  00F6               	movwf	print_screen@bottom
  9101  0531  3093               	movlw	high (STR_94| (0+32768))
  9102  0532  00F7               	movwf	print_screen@bottom+1
  9103  0533  318A  22D4  3180   	fcall	_print_screen
  9104  0536                     l399:	
  9105                           ;Multi_RX_testjig_v2.c: 967: while(1);
  9106                           
  9107  0536  2D36               	goto	l399
  9108  0537                     l4379:	
  9109                           
  9110                           ;Multi_RX_testjig_v2.c: 968: }
  9111                           ;Multi_RX_testjig_v2.c: 972: if((device_type == 0xAA)|| (device_type == 0xA1))
  9112  0537  30AA               	movlw	170
  9113  0538  066E               	xorwf	main@device_type,w
  9114  0539  1903               	btfsc	3,2
  9115  053A  2D3F               	goto	l4383
  9116  053B  30A1               	movlw	161
  9117  053C  066E               	xorwf	main@device_type,w
  9118  053D  1D03               	btfss	3,2
  9119  053E  2EF8               	goto	l4515
  9120  053F                     l4383:	
  9121                           
  9122                           ;Multi_RX_testjig_v2.c: 973: {
  9123                           ;Multi_RX_testjig_v2.c: 996: testjig_timer = (unsigned int)((3*7518.8));
  9124  053F  301C               	movlw	28
  9125  0540  0021               	movlb	1	; select bank1
  9126  0541  00AE               	movwf	_testjig_timer^(0+128)	;volatile
  9127  0542  3058               	movlw	88
  9128  0543  00AF               	movwf	(_testjig_timer^(0+128)+1)	;volatile
  9129                           
  9130                           ;Multi_RX_testjig_v2.c: 997: RE0 = 1;
  9131  0544  0020               	movlb	0	; select bank0
  9132  0545  1410               	bsf	16,0	;volatile
  9133                           
  9134                           ;Multi_RX_testjig_v2.c: 998: _delay((unsigned long)((200)*(16000000/4000.0)));
  9135  0546  3005               	movlw	5
  9136  0547  00E3               	movwf	??_main+2
  9137  0548  300F               	movlw	15
  9138  0549  00E2               	movwf	??_main+1
  9139  054A  30F4               	movlw	244
  9140  054B  00E1               	movwf	??_main
  9141  054C                     u5567:	
  9142  054C  0BE1               	decfsz	??_main,f
  9143  054D  2D4C               	goto	u5567
  9144  054E  0BE2               	decfsz	??_main+1,f
  9145  054F  2D4C               	goto	u5567
  9146  0550  0BE3               	decfsz	??_main+2,f
  9147  0551  2D4C               	goto	u5567
  9148                           
  9149                           ;Multi_RX_testjig_v2.c: 999: print_screen("Test RF", "RSSI");
  9150  0552  30AE               	movlw	low (STR_95| (0+32768))
  9151  0553  00F4               	movwf	print_screen@top
  9152  0554  3093               	movlw	high (STR_95| (0+32768))
  9153  0555  00F5               	movwf	print_screen@top+1
  9154  0556  3050               	movlw	low ((STR_105+8)| (0+32768))
  9155  0557  00F6               	movwf	print_screen@bottom
  9156  0558  3092               	movlw	high ((STR_105+8)| (0+32768))
  9157  0559  00F7               	movwf	print_screen@bottom+1
  9158  055A  318A  22D4  3180   	fcall	_print_screen
  9159                           
  9160                           ;Multi_RX_testjig_v2.c: 1000: TX_one(0x60);
  9161  055D  3060               	movlw	96
  9162  055E  3188  2023  3180   	fcall	_TX_one
  9163                           
  9164                           ;Multi_RX_testjig_v2.c: 1001: RX_data = RX_one();
  9165  0561  3188  2047  3180   	fcall	_RX_one
  9166  0564  0020               	movlb	0	; select bank0
  9167  0565  00ED               	movwf	main@RX_data
  9168                           
  9169                           ;Multi_RX_testjig_v2.c: 1002: TX_one(0x60);
  9170  0566  3060               	movlw	96
  9171  0567  3188  2023  3180   	fcall	_TX_one
  9172                           
  9173                           ;Multi_RX_testjig_v2.c: 1003: RX_data = RX_one();
  9174  056A  3188  2047  3180   	fcall	_RX_one
  9175  056D  0020               	movlb	0	; select bank0
  9176  056E  00ED               	movwf	main@RX_data
  9177                           
  9178                           ;Multi_RX_testjig_v2.c: 1015: RE0 = 0;
  9179  056F  1010               	bcf	16,0	;volatile
  9180                           
  9181                           ;Multi_RX_testjig_v2.c: 1016: if(RX_data == 0)
  9182  0570  086D               	movf	main@RX_data,w
  9183  0571  1D03               	btfss	3,2
  9184  0572  2D7B               	goto	l4403
  9185                           
  9186                           ;Multi_RX_testjig_v2.c: 1017: print_error("Comms Error", " 13");
  9187  0573  30DF               	movlw	low (STR_35| (0+32768))
  9188  0574  00F8               	movwf	print_error@top
  9189  0575  3092               	movlw	high (STR_35| (0+32768))
  9190  0576  00F9               	movwf	print_error@top+1
  9191  0577  30CA               	movlw	low (STR_98| (0+32768))
  9192  0578  00FA               	movwf	print_error@bottom
  9193  0579  3093               	movlw	high (STR_98| (0+32768))
  9194  057A  2DCF               	goto	L9
  9195  057B                     l4403:	
  9196                           
  9197                           ;Multi_RX_testjig_v2.c: 1018: else if(RX_data == 0xFF)
  9198  057B  0A6D               	incf	main@RX_data,w
  9199  057C  1D03               	btfss	3,2
  9200  057D  2D86               	goto	l4407
  9201                           
  9202                           ;Multi_RX_testjig_v2.c: 1019: print_error("Comms Error", " 14a");
  9203  057E  30DF               	movlw	low (STR_35| (0+32768))
  9204  057F  00F8               	movwf	print_error@top
  9205  0580  3092               	movlw	high (STR_35| (0+32768))
  9206  0581  00F9               	movwf	print_error@top+1
  9207  0582  30BB               	movlw	low (STR_100| (0+32768))
  9208  0583  00FA               	movwf	print_error@bottom
  9209  0584  3093               	movlw	high (STR_100| (0+32768))
  9210  0585  2DCF               	goto	L9
  9211  0586                     l4407:	
  9212                           
  9213                           ;Multi_RX_testjig_v2.c: 1020: else if(RX_data == 0xEE)
  9214  0586  30EE               	movlw	238
  9215  0587  066D               	xorwf	main@RX_data,w
  9216  0588  1D03               	btfss	3,2
  9217  0589  2D92               	goto	l4411
  9218                           
  9219                           ;Multi_RX_testjig_v2.c: 1021: print_error("Comms Error", " 14b");
  9220  058A  30DF               	movlw	low (STR_35| (0+32768))
  9221  058B  00F8               	movwf	print_error@top
  9222  058C  3092               	movlw	high (STR_35| (0+32768))
  9223  058D  00F9               	movwf	print_error@top+1
  9224  058E  30C0               	movlw	low (STR_102| (0+32768))
  9225  058F  00FA               	movwf	print_error@bottom
  9226  0590  3093               	movlw	high (STR_102| (0+32768))
  9227  0591  2DCF               	goto	L9
  9228  0592                     l4411:	
  9229                           
  9230                           ;Multi_RX_testjig_v2.c: 1022: else if(RX_data >230)
  9231  0592  30E7               	movlw	231
  9232  0593  026D               	subwf	main@RX_data,w
  9233  0594  1C03               	skipc
  9234  0595  2D9E               	goto	l4415
  9235                           
  9236                           ;Multi_RX_testjig_v2.c: 1023: print_error("Comms Error", " 14c");
  9237  0596  30DF               	movlw	low (STR_35| (0+32768))
  9238  0597  00F8               	movwf	print_error@top
  9239  0598  3092               	movlw	high (STR_35| (0+32768))
  9240  0599  00F9               	movwf	print_error@top+1
  9241  059A  30C5               	movlw	low (STR_104| (0+32768))
  9242  059B  00FA               	movwf	print_error@bottom
  9243  059C  3093               	movlw	high (STR_104| (0+32768))
  9244  059D  2DCF               	goto	L9
  9245  059E                     l4415:	
  9246                           
  9247                           ;Multi_RX_testjig_v2.c: 1024: else if(RX_data > 120)
  9248  059E  3079               	movlw	121
  9249  059F  026D               	subwf	main@RX_data,w
  9250  05A0  1C03               	skipc
  9251  05A1  2DC4               	goto	l4423
  9252                           
  9253                           ;Multi_RX_testjig_v2.c: 1025: {
  9254                           ;Multi_RX_testjig_v2.c: 1026: lcd_print_int(RX_data, 5, 0, 1);
  9255  05A2  086D               	movf	main@RX_data,w
  9256  05A3  00DB               	movwf	lcd_print_int@number
  9257  05A4  3005               	movlw	5
  9258  05A5  01DC               	clrf	lcd_print_int@number+1
  9259  05A6  00DD               	movwf	lcd_print_int@pos
  9260  05A7  01DE               	clrf	lcd_print_int@pos+1
  9261  05A8  01DF               	clrf	lcd_print_int@decimal
  9262  05A9  01E0               	clrf	lcd_print_int@ten_thou_digit
  9263  05AA  0AE0               	incf	lcd_print_int@ten_thou_digit,f
  9264  05AB  3188  20F7  3180   	fcall	_lcd_print_int
  9265                           
  9266                           ;Multi_RX_testjig_v2.c: 1027: _delay((unsigned long)((5000)*(16000000/4000.0)));
  9267  05AE  3066               	movlw	102
  9268  05AF  0020               	movlb	0	; select bank0
  9269  05B0  00E3               	movwf	??_main+2
  9270  05B1  3077               	movlw	119
  9271  05B2  00E2               	movwf	??_main+1
  9272  05B3  3024               	movlw	36
  9273  05B4  00E1               	movwf	??_main
  9274  05B5                     u5577:	
  9275  05B5  0BE1               	decfsz	??_main,f
  9276  05B6  2DB5               	goto	u5577
  9277  05B7  0BE2               	decfsz	??_main+1,f
  9278  05B8  2DB5               	goto	u5577
  9279  05B9  0BE3               	decfsz	??_main+2,f
  9280  05BA  2DB5               	goto	u5577
  9281  05BB  0000               	nop
  9282                           
  9283                           ;Multi_RX_testjig_v2.c: 1028: print_error("Test RF RSSI", " Error - High");
  9284  05BC  3048               	movlw	low (STR_105| (0+32768))
  9285  05BD  00F8               	movwf	print_error@top
  9286  05BE  3092               	movlw	high (STR_105| (0+32768))
  9287  05BF  00F9               	movwf	print_error@top+1
  9288  05C0  30E9               	movlw	low (STR_106| (0+32768))
  9289  05C1  00FA               	movwf	print_error@bottom
  9290  05C2  3091               	movlw	high (STR_106| (0+32768))
  9291  05C3  2DCF               	goto	L9
  9292  05C4                     l4423:	
  9293                           ;Multi_RX_testjig_v2.c: 1029: }
  9294                           
  9295                           
  9296                           ;Multi_RX_testjig_v2.c: 1030: else if(RX_data < 90)
  9297  05C4  305A               	movlw	90
  9298  05C5  026D               	subwf	main@RX_data,w
  9299  05C6  1803               	skipnc
  9300  05C7  2DD3               	goto	l406
  9301                           
  9302                           ;Multi_RX_testjig_v2.c: 1031: print_error("Test RF RSSI", " Error - Low");
  9303  05C8  3048               	movlw	low (STR_105| (0+32768))
  9304  05C9  00F8               	movwf	print_error@top
  9305  05CA  3092               	movlw	high (STR_105| (0+32768))
  9306  05CB  00F9               	movwf	print_error@top+1
  9307  05CC  3096               	movlw	low (STR_108| (0+32768))
  9308  05CD  00FA               	movwf	print_error@bottom
  9309  05CE  3092               	movlw	high (STR_108| (0+32768))
  9310  05CF                     L9:	
  9311  05CF  00FB               	movwf	print_error@bottom+1
  9312  05D0  318A  22F6  3180   	fcall	_print_error
  9313  05D3                     l406:	
  9314                           
  9315                           ;Multi_RX_testjig_v2.c: 1032: print_screen("Test RF", "RSSI - OK");
  9316  05D3  30AE               	movlw	low (STR_95| (0+32768))
  9317  05D4  00F4               	movwf	print_screen@top
  9318  05D5  3093               	movlw	high (STR_95| (0+32768))
  9319  05D6  00F5               	movwf	print_screen@top+1
  9320  05D7  3043               	movlw	low (STR_110| (0+32768))
  9321  05D8  00F6               	movwf	print_screen@bottom
  9322  05D9  3093               	movlw	high (STR_110| (0+32768))
  9323  05DA  00F7               	movwf	print_screen@bottom+1
  9324  05DB  318A  22D4  3180   	fcall	_print_screen
  9325                           
  9326                           ;Multi_RX_testjig_v2.c: 1034: _delay((unsigned long)((100)*(16000000/4000.0)));
  9327  05DE  3003               	movlw	3
  9328  05DF  0020               	movlb	0	; select bank0
  9329  05E0  00E3               	movwf	??_main+2
  9330  05E1  3008               	movlw	8
  9331  05E2  00E2               	movwf	??_main+1
  9332  05E3  3078               	movlw	120
  9333  05E4  00E1               	movwf	??_main
  9334  05E5                     u5587:	
  9335  05E5  0BE1               	decfsz	??_main,f
  9336  05E6  2DE5               	goto	u5587
  9337  05E7  0BE2               	decfsz	??_main+1,f
  9338  05E8  2DE5               	goto	u5587
  9339  05E9  0BE3               	decfsz	??_main+2,f
  9340  05EA  2DE5               	goto	u5587
  9341                           
  9342                           ;Multi_RX_testjig_v2.c: 1036: print_screen("Test RF", "Decode");
  9343  05EB  30AE               	movlw	low (STR_95| (0+32768))
  9344  05EC  00F4               	movwf	print_screen@top
  9345  05ED  3093               	movlw	high (STR_95| (0+32768))
  9346  05EE  00F5               	movwf	print_screen@top+1
  9347  05EF  306F               	movlw	low ((STR_120+8)| (0+32768))
  9348  05F0  00F6               	movwf	print_screen@bottom
  9349  05F1  3091               	movlw	high ((STR_120+8)| (0+32768))
  9350  05F2  00F7               	movwf	print_screen@bottom+1
  9351  05F3  318A  22D4  3180   	fcall	_print_screen
  9352                           
  9353                           ;Multi_RX_testjig_v2.c: 1037: int j;
  9354                           ;Multi_RX_testjig_v2.c: 1038: RX_data = 0;
  9355  05F6  0020               	movlb	0	; select bank0
  9356  05F7  01ED               	clrf	main@RX_data
  9357                           
  9358                           ;Multi_RX_testjig_v2.c: 1039: for(j = 0; j < 50; j++)
  9359  05F8  01E8               	clrf	main@j
  9360  05F9  01E9               	clrf	main@j+1
  9361  05FA  0869               	movf	main@j+1,w
  9362  05FB  3A80               	xorlw	128
  9363  05FC  00E1               	movwf	??_main
  9364  05FD  3080               	movlw	128
  9365  05FE  0261               	subwf	??_main,w
  9366  05FF  1D03               	skipz
  9367  0600  2E03               	goto	u5005
  9368  0601  3032               	movlw	50
  9369  0602  0268               	subwf	main@j,w
  9370  0603                     u5005:	
  9371  0603  1803               	btfsc	3,0
  9372  0604  2EC5               	goto	l4501
  9373  0605                     l4437:	
  9374                           
  9375                           ;Multi_RX_testjig_v2.c: 1040: {
  9376                           ;Multi_RX_testjig_v2.c: 1042: testjig_timer = (unsigned int)((3*7518.8));
  9377  0605  301C               	movlw	28
  9378  0606  0021               	movlb	1	; select bank1
  9379  0607  00AE               	movwf	_testjig_timer^(0+128)	;volatile
  9380  0608  3058               	movlw	88
  9381  0609  00AF               	movwf	(_testjig_timer^(0+128)+1)	;volatile
  9382                           
  9383                           ;Multi_RX_testjig_v2.c: 1043: RE0 = 1;
  9384  060A  0020               	movlb	0	; select bank0
  9385  060B  1410               	bsf	16,0	;volatile
  9386                           
  9387                           ;Multi_RX_testjig_v2.c: 1044: _delay((unsigned long)((200)*(16000000/4000.0)));
  9388  060C  3005               	movlw	5
  9389  060D  00E3               	movwf	??_main+2
  9390  060E  300F               	movlw	15
  9391  060F  00E2               	movwf	??_main+1
  9392  0610  30F4               	movlw	244
  9393  0611  00E1               	movwf	??_main
  9394  0612                     u5597:	
  9395  0612  0BE1               	decfsz	??_main,f
  9396  0613  2E12               	goto	u5597
  9397  0614  0BE2               	decfsz	??_main+1,f
  9398  0615  2E12               	goto	u5597
  9399  0616  0BE3               	decfsz	??_main+2,f
  9400  0617  2E12               	goto	u5597
  9401                           
  9402                           ;Multi_RX_testjig_v2.c: 1045: for(i = 0; i < 5; i++)
  9403  0618  0020               	movlb	0	; select bank0
  9404  0619  01EB               	clrf	main@i
  9405  061A  01EC               	clrf	main@i+1
  9406  061B  2E2C               	goto	l4443
  9407  061C                     l4453:	
  9408                           
  9409                           ;Multi_RX_testjig_v2.c: 1051: _delay((unsigned long)((200)*(16000000/4000.0)));
  9410  061C  3005               	movlw	5
  9411  061D  00E3               	movwf	??_main+2
  9412  061E  300F               	movlw	15
  9413  061F  00E2               	movwf	??_main+1
  9414  0620  30F4               	movlw	244
  9415  0621  00E1               	movwf	??_main
  9416  0622                     u5607:	
  9417  0622  0BE1               	decfsz	??_main,f
  9418  0623  2E22               	goto	u5607
  9419  0624  0BE2               	decfsz	??_main+1,f
  9420  0625  2E22               	goto	u5607
  9421  0626  0BE3               	decfsz	??_main+2,f
  9422  0627  2E22               	goto	u5607
  9423  0628  0020               	movlb	0	; select bank0
  9424  0629  0AEB               	incf	main@i,f
  9425  062A  1903               	skipnz
  9426  062B  0AEC               	incf	main@i+1,f
  9427  062C                     l4443:	
  9428  062C  3000               	movlw	0
  9429  062D  026C               	subwf	main@i+1,w
  9430  062E  3005               	movlw	5
  9431  062F  1903               	skipnz
  9432  0630  026B               	subwf	main@i,w
  9433  0631  1803               	btfsc	3,0
  9434  0632  2E3E               	goto	l419
  9435                           
  9436                           ;Multi_RX_testjig_v2.c: 1046: {
  9437                           ;Multi_RX_testjig_v2.c: 1047: TX_one(0x61);
  9438  0633  3061               	movlw	97
  9439  0634  3188  2023  3180   	fcall	_TX_one
  9440                           
  9441                           ;Multi_RX_testjig_v2.c: 1048: RX_data = RX_one();
  9442  0637  3188  2047  3180   	fcall	_RX_one
  9443  063A  0020               	movlb	0	; select bank0
  9444  063B  00ED               	movwf	main@RX_data
  9445                           
  9446                           ;Multi_RX_testjig_v2.c: 1049: if(RX_data == 1)
  9447  063C  0B6D               	decfsz	main@RX_data,w
  9448  063D  2E1C               	goto	l4453
  9449  063E                     l419:	
  9450                           
  9451                           ;Multi_RX_testjig_v2.c: 1052: }
  9452                           ;Multi_RX_testjig_v2.c: 1053: RE0 = 0;
  9453  063E  1010               	bcf	16,0	;volatile
  9454                           
  9455                           ;Multi_RX_testjig_v2.c: 1054: if(RX_data == 1)
  9456  063F  0B6D               	decfsz	main@RX_data,w
  9457  0640  2E42               	goto	l4463
  9458  0641  2EC5               	goto	l4501
  9459  0642                     l4463:	
  9460                           
  9461                           ;Multi_RX_testjig_v2.c: 1057: print_screen("Test RF", " cycling power");
  9462  0642  30AE               	movlw	low (STR_95| (0+32768))
  9463  0643  00F4               	movwf	print_screen@top
  9464  0644  3093               	movlw	high (STR_95| (0+32768))
  9465  0645  00F5               	movwf	print_screen@top+1
  9466  0646  3085               	movlw	low (STR_114| (0+32768))
  9467  0647  00F6               	movwf	print_screen@bottom
  9468  0648  3091               	movlw	high (STR_114| (0+32768))
  9469  0649  00F7               	movwf	print_screen@bottom+1
  9470  064A  318A  22D4  3180   	fcall	_print_screen
  9471                           
  9472                           ;Multi_RX_testjig_v2.c: 1058: power_supply_set(3);
  9473  064D  3003               	movlw	3
  9474  064E  318B  23F3  3180   	fcall	_power_supply_set
  9475                           
  9476                           ;Multi_RX_testjig_v2.c: 1060: LATB5 = 0;
  9477  0651  0022               	movlb	2	; select bank2
  9478  0652  128D               	bcf	13,5	;volatile
  9479                           
  9480                           ;Multi_RX_testjig_v2.c: 1061: LATA6 = 0;
  9481  0653  130C               	bcf	12,6	;volatile
  9482                           
  9483                           ;Multi_RX_testjig_v2.c: 1062: TRISG1 = 1;
  9484  0654  0026               	movlb	6	; select bank6
  9485  0655  148D               	bsf	13,1	;volatile
  9486  0656                     l4471:	
  9487                           ;Multi_RX_testjig_v2.c: 1063: while(ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.2));
  9488                           
  9489  0656  305F               	movlw	95
  9490  0657  318C  245E  3180   	fcall	_ADC_get_val
  9491  065A  3000               	movlw	0
  9492  065B  0271               	subwf	?_ADC_get_val+1,w
  9493  065C  3017               	movlw	23
  9494  065D  1903               	skipnz
  9495  065E  0270               	subwf	?_ADC_get_val,w
  9496  065F  1803               	skipnc
  9497  0660  2E56               	goto	l4471
  9498                           
  9499                           ;Multi_RX_testjig_v2.c: 1064: power_supply_set(0);
  9500  0661  3000               	movlw	0
  9501  0662  318B  23F3  3180   	fcall	_power_supply_set
  9502                           
  9503                           ;Multi_RX_testjig_v2.c: 1065: _delay((unsigned long)((200)*(16000000/4000.0)));
  9504  0665  3005               	movlw	5
  9505  0666  0020               	movlb	0	; select bank0
  9506  0667  00E3               	movwf	??_main+2
  9507  0668  300F               	movlw	15
  9508  0669  00E2               	movwf	??_main+1
  9509  066A  30F4               	movlw	244
  9510  066B  00E1               	movwf	??_main
  9511  066C                     u5617:	
  9512  066C  0BE1               	decfsz	??_main,f
  9513  066D  2E6C               	goto	u5617
  9514  066E  0BE2               	decfsz	??_main+1,f
  9515  066F  2E6C               	goto	u5617
  9516  0670  0BE3               	decfsz	??_main+2,f
  9517  0671  2E6C               	goto	u5617
  9518                           
  9519                           ;Multi_RX_testjig_v2.c: 1067: for(i = 0; i < 10; i++)
  9520  0672  0020               	movlb	0	; select bank0
  9521  0673  01EB               	clrf	main@i
  9522  0674  01EC               	clrf	main@i+1
  9523  0675                     l4479:	
  9524  0675  3000               	movlw	0
  9525  0676  026C               	subwf	main@i+1,w
  9526  0677  300A               	movlw	10
  9527  0678  1903               	skipnz
  9528  0679  026B               	subwf	main@i,w
  9529  067A  1803               	btfsc	3,0
  9530  067B  2EB7               	goto	l4497
  9531                           
  9532                           ;Multi_RX_testjig_v2.c: 1068: {
  9533                           ;Multi_RX_testjig_v2.c: 1069: TX_one(0x01);
  9534  067C  3001               	movlw	1
  9535  067D  3188  2023  3180   	fcall	_TX_one
  9536                           
  9537                           ;Multi_RX_testjig_v2.c: 1070: unsigned char response;
  9538                           ;Multi_RX_testjig_v2.c: 1071: response = RX_one_timeout();
  9539  0680  3187  27C1  3180   	fcall	_RX_one_timeout
  9540  0683  0020               	movlb	0	; select bank0
  9541  0684  00EA               	movwf	main@response
  9542                           
  9543                           ;Multi_RX_testjig_v2.c: 1072: if((response == 0xAA) || (response == 0xA1))
  9544  0685  3AAA               	xorlw	170
  9545  0686  1903               	btfsc	3,2
  9546  0687  2EB7               	goto	l4497
  9547  0688  30A1               	movlw	161
  9548  0689  066A               	xorwf	main@response,w
  9549  068A  1903               	btfsc	3,2
  9550  068B  2EB7               	goto	l4497
  9551                           
  9552                           ;Multi_RX_testjig_v2.c: 1074: lcd_print_int(i, 11, 0, 0);
  9553  068C  086C               	movf	main@i+1,w
  9554  068D  00DC               	movwf	lcd_print_int@number+1
  9555  068E  086B               	movf	main@i,w
  9556  068F  00DB               	movwf	lcd_print_int@number
  9557  0690  300B               	movlw	11
  9558  0691  00DD               	movwf	lcd_print_int@pos
  9559  0692  01DE               	clrf	lcd_print_int@pos+1
  9560  0693  01DF               	clrf	lcd_print_int@decimal
  9561  0694  01E0               	clrf	lcd_print_int@ten_thou_digit
  9562  0695  3188  20F7  3180   	fcall	_lcd_print_int
  9563                           
  9564                           ;Multi_RX_testjig_v2.c: 1075: lcd_print_int(device_type, 5, 0, 0);
  9565  0698  0020               	movlb	0	; select bank0
  9566  0699  086E               	movf	main@device_type,w
  9567  069A  00DB               	movwf	lcd_print_int@number
  9568  069B  3005               	movlw	5
  9569  069C  01DC               	clrf	lcd_print_int@number+1
  9570  069D  00DD               	movwf	lcd_print_int@pos
  9571  069E  01DE               	clrf	lcd_print_int@pos+1
  9572  069F  01DF               	clrf	lcd_print_int@decimal
  9573  06A0  01E0               	clrf	lcd_print_int@ten_thou_digit
  9574  06A1  3188  20F7  3180   	fcall	_lcd_print_int
  9575                           
  9576                           ;Multi_RX_testjig_v2.c: 1076: _delay((unsigned long)((50)*(16000000/4000.0)));
  9577  06A4  3002               	movlw	2
  9578  06A5  0020               	movlb	0	; select bank0
  9579  06A6  00E3               	movwf	??_main+2
  9580  06A7  3004               	movlw	4
  9581  06A8  00E2               	movwf	??_main+1
  9582  06A9  30BA               	movlw	186
  9583  06AA  00E1               	movwf	??_main
  9584  06AB                     u5627:	
  9585  06AB  0BE1               	decfsz	??_main,f
  9586  06AC  2EAB               	goto	u5627
  9587  06AD  0BE2               	decfsz	??_main+1,f
  9588  06AE  2EAB               	goto	u5627
  9589  06AF  0BE3               	decfsz	??_main+2,f
  9590  06B0  2EAB               	goto	u5627
  9591  06B1  0000               	nop
  9592  06B2  0020               	movlb	0	; select bank0
  9593  06B3  0AEB               	incf	main@i,f
  9594  06B4  1903               	skipnz
  9595  06B5  0AEC               	incf	main@i+1,f
  9596  06B6  2E75               	goto	l4479
  9597  06B7                     l4497:	
  9598  06B7  0AE8               	incf	main@j,f
  9599  06B8  1903               	skipnz
  9600  06B9  0AE9               	incf	main@j+1,f
  9601  06BA  0869               	movf	main@j+1,w
  9602  06BB  3A80               	xorlw	128
  9603  06BC  00E1               	movwf	??_main
  9604  06BD  3080               	movlw	128
  9605  06BE  0261               	subwf	??_main,w
  9606  06BF  1D03               	skipz
  9607  06C0  2EC3               	goto	u5085
  9608  06C1  3032               	movlw	50
  9609  06C2  0268               	subwf	main@j,w
  9610  06C3                     u5085:	
  9611  06C3  1C03               	skipc
  9612  06C4  2E05               	goto	l4437
  9613  06C5                     l4501:	
  9614                           
  9615                           ;Multi_RX_testjig_v2.c: 1077: }
  9616                           ;Multi_RX_testjig_v2.c: 1078: }
  9617                           ;Multi_RX_testjig_v2.c: 1079: if(RX_data == 1)
  9618  06C5  0020               	movlb	0	; select bank0
  9619  06C6  036D               	decf	main@RX_data,w
  9620  06C7  1D03               	btfss	3,2
  9621  06C8  2ED5               	goto	l4505
  9622                           
  9623                           ;Multi_RX_testjig_v2.c: 1080: print_screen("Test RF", "Decode New - OK");
  9624  06C9  30AE               	movlw	low (STR_95| (0+32768))
  9625  06CA  00F4               	movwf	print_screen@top
  9626  06CB  3093               	movlw	high (STR_95| (0+32768))
  9627  06CC  00F5               	movwf	print_screen@top+1
  9628  06CD  30DB               	movlw	low (STR_116| (0+32768))
  9629  06CE  00F6               	movwf	print_screen@bottom
  9630  06CF  3090               	movlw	high (STR_116| (0+32768))
  9631  06D0  00F7               	movwf	print_screen@bottom+1
  9632  06D1  318A  22D4  3180   	fcall	_print_screen
  9633  06D4  2EF8               	goto	l4515
  9634  06D5                     l4505:	
  9635                           
  9636                           ;Multi_RX_testjig_v2.c: 1081: else if(RX_data == 2)
  9637  06D5  3002               	movlw	2
  9638  06D6  066D               	xorwf	main@RX_data,w
  9639  06D7  1D03               	btfss	3,2
  9640  06D8  2EE1               	goto	l4509
  9641                           
  9642                           ;Multi_RX_testjig_v2.c: 1082: print_error("Test RF", "Decode Old -Fail");
  9643  06D9  30AE               	movlw	low (STR_95| (0+32768))
  9644  06DA  00F8               	movwf	print_error@top
  9645  06DB  3093               	movlw	high (STR_95| (0+32768))
  9646  06DC  00F9               	movwf	print_error@top+1
  9647  06DD  3087               	movlw	low (STR_118| (0+32768))
  9648  06DE  00FA               	movwf	print_error@bottom
  9649  06DF  3090               	movlw	high (STR_118| (0+32768))
  9650  06E0  2EF4               	goto	L6
  9651  06E1                     l4509:	
  9652                           
  9653                           ;Multi_RX_testjig_v2.c: 1083: else if(RX_data == 3)
  9654  06E1  3003               	movlw	3
  9655  06E2  066D               	xorwf	main@RX_data,w
  9656  06E3  1D03               	btfss	3,2
  9657  06E4  2EED               	goto	l4513
  9658                           
  9659                           ;Multi_RX_testjig_v2.c: 1084: print_error("Test RF", "Error - Decode");
  9660  06E5  30AE               	movlw	low (STR_95| (0+32768))
  9661  06E6  00F8               	movwf	print_error@top
  9662  06E7  3093               	movlw	high (STR_95| (0+32768))
  9663  06E8  00F9               	movwf	print_error@top+1
  9664  06E9  3067               	movlw	low (STR_120| (0+32768))
  9665  06EA  00FA               	movwf	print_error@bottom
  9666  06EB  3091               	movlw	high (STR_120| (0+32768))
  9667  06EC  2EF4               	goto	L6
  9668  06ED                     l4513:	
  9669                           
  9670                           ;Multi_RX_testjig_v2.c: 1085: else
  9671                           ;Multi_RX_testjig_v2.c: 1086: print_error("Comms Error", " 15");
  9672  06ED  30DF               	movlw	low (STR_35| (0+32768))
  9673  06EE  00F8               	movwf	print_error@top
  9674  06EF  3092               	movlw	high (STR_35| (0+32768))
  9675  06F0  00F9               	movwf	print_error@top+1
  9676  06F1  30CE               	movlw	low (STR_122| (0+32768))
  9677  06F2  00FA               	movwf	print_error@bottom
  9678  06F3  3093               	movlw	high (STR_122| (0+32768))
  9679  06F4                     L6:	
  9680  06F4  00FB               	movwf	print_error@bottom+1
  9681  06F5  318A  22F6  3180   	fcall	_print_error
  9682  06F8                     l4515:	
  9683                           
  9684                           ;Multi_RX_testjig_v2.c: 1089: }
  9685                           ;Multi_RX_testjig_v2.c: 1091: if(device_type == 0xA2)
  9686  06F8  30A2               	movlw	162
  9687  06F9  0020               	movlb	0	; select bank0
  9688  06FA  066E               	xorwf	main@device_type,w
  9689  06FB  1D03               	btfss	3,2
  9690  06FC  2F1F               	goto	l4527
  9691                           
  9692                           ;Multi_RX_testjig_v2.c: 1092: {
  9693                           ;Multi_RX_testjig_v2.c: 1094: print_screen("T4 bus (CAN)", " ");
  9694  06FD  302E               	movlw	low (STR_123| (0+32768))
  9695  06FE  00F4               	movwf	print_screen@top
  9696  06FF  3092               	movlw	high (STR_123| (0+32768))
  9697  0700  00F5               	movwf	print_screen@top+1
  9698  0701  30D9               	movlw	low ((STR_135+14)| (0+32768))
  9699  0702  00F6               	movwf	print_screen@bottom
  9700  0703  3090               	movlw	high ((STR_135+14)| (0+32768))
  9701  0704  00F7               	movwf	print_screen@bottom+1
  9702  0705  318A  22D4  3180   	fcall	_print_screen
  9703                           
  9704                           ;Multi_RX_testjig_v2.c: 1095: TX_one(0xA0);
  9705  0708  30A0               	movlw	160
  9706  0709  3188  2023  3180   	fcall	_TX_one
  9707                           
  9708                           ;Multi_RX_testjig_v2.c: 1096: RX_data = RX_one();
  9709  070C  3188  2047  3180   	fcall	_RX_one
  9710  070F  0020               	movlb	0	; select bank0
  9711  0710  00ED               	movwf	main@RX_data
  9712                           
  9713                           ;Multi_RX_testjig_v2.c: 1097: if(RX_data != 0xAA)
  9714  0711  3AAA               	xorlw	170
  9715  0712  1903               	btfsc	3,2
  9716  0713  2F1F               	goto	l4527
  9717                           
  9718                           ;Multi_RX_testjig_v2.c: 1098: print_error("Comms Error", " 18");
  9719  0714  30DF               	movlw	low (STR_35| (0+32768))
  9720  0715  00F8               	movwf	print_error@top
  9721  0716  3092               	movlw	high (STR_35| (0+32768))
  9722  0717  00F9               	movwf	print_error@top+1
  9723  0718  30DA               	movlw	low (STR_126| (0+32768))
  9724  0719  00FA               	movwf	print_error@bottom
  9725  071A  3093               	movlw	high (STR_126| (0+32768))
  9726  071B  00FB               	movwf	print_error@bottom+1
  9727  071C  318A  22F6  3180   	fcall	_print_error
  9728  071F                     l4527:	
  9729                           
  9730                           ;Multi_RX_testjig_v2.c: 1102: }
  9731                           ;Multi_RX_testjig_v2.c: 1104: if((device_type == 0xAA) || (device_type == 0xA1) || (devi
      +                          ce_type == 0xA2))
  9732  071F  30AA               	movlw	170
  9733  0720  0020               	movlb	0	; select bank0
  9734  0721  066E               	xorwf	main@device_type,w
  9735  0722  1903               	btfsc	3,2
  9736  0723  2F2C               	goto	l4533
  9737  0724  30A1               	movlw	161
  9738  0725  066E               	xorwf	main@device_type,w
  9739  0726  1903               	btfsc	3,2
  9740  0727  2F2C               	goto	l4533
  9741  0728  30A2               	movlw	162
  9742  0729  066E               	xorwf	main@device_type,w
  9743  072A  1D03               	btfss	3,2
  9744  072B  2F4E               	goto	l4543
  9745  072C                     l4533:	
  9746                           
  9747                           ;Multi_RX_testjig_v2.c: 1105: {
  9748                           ;Multi_RX_testjig_v2.c: 1107: print_screen("Master Erase ", " ");
  9749  072C  30A3               	movlw	low (STR_127| (0+32768))
  9750  072D  00F4               	movwf	print_screen@top
  9751  072E  3091               	movlw	high (STR_127| (0+32768))
  9752  072F  00F5               	movwf	print_screen@top+1
  9753  0730  30D9               	movlw	low ((STR_135+14)| (0+32768))
  9754  0731  00F6               	movwf	print_screen@bottom
  9755  0732  3090               	movlw	high ((STR_135+14)| (0+32768))
  9756  0733  00F7               	movwf	print_screen@bottom+1
  9757  0734  318A  22D4  3180   	fcall	_print_screen
  9758                           
  9759                           ;Multi_RX_testjig_v2.c: 1108: TX_one(0x82);
  9760  0737  3082               	movlw	130
  9761  0738  3188  2023  3180   	fcall	_TX_one
  9762                           
  9763                           ;Multi_RX_testjig_v2.c: 1109: RX_data = RX_one();
  9764  073B  3188  2047  3180   	fcall	_RX_one
  9765  073E  0020               	movlb	0	; select bank0
  9766  073F  00ED               	movwf	main@RX_data
  9767                           
  9768                           ;Multi_RX_testjig_v2.c: 1110: if(RX_data != 0x8A)
  9769  0740  3A8A               	xorlw	138
  9770  0741  1903               	btfsc	3,2
  9771  0742  2F4E               	goto	l4543
  9772                           
  9773                           ;Multi_RX_testjig_v2.c: 1111: print_error("Comms Error", " 17");
  9774  0743  30DF               	movlw	low (STR_35| (0+32768))
  9775  0744  00F8               	movwf	print_error@top
  9776  0745  3092               	movlw	high (STR_35| (0+32768))
  9777  0746  00F9               	movwf	print_error@top+1
  9778  0747  30D6               	movlw	low (STR_130| (0+32768))
  9779  0748  00FA               	movwf	print_error@bottom
  9780  0749  3093               	movlw	high (STR_130| (0+32768))
  9781  074A  00FB               	movwf	print_error@bottom+1
  9782  074B  318A  22F6  3180   	fcall	_print_error
  9783  074E                     l4543:	
  9784                           
  9785                           ;Multi_RX_testjig_v2.c: 1112: }
  9786                           ;Multi_RX_testjig_v2.c: 1114: if((device_type == 0xAA) || (device_type == 0xA1))
  9787  074E  30AA               	movlw	170
  9788  074F  0020               	movlb	0	; select bank0
  9789  0750  066E               	xorwf	main@device_type,w
  9790  0751  1903               	btfsc	3,2
  9791  0752  2F57               	goto	l4547
  9792  0753  30A1               	movlw	161
  9793  0754  066E               	xorwf	main@device_type,w
  9794  0755  1D03               	btfss	3,2
  9795  0756  2F79               	goto	l4557
  9796  0757                     l4547:	
  9797                           
  9798                           ;Multi_RX_testjig_v2.c: 1115: {
  9799                           ;Multi_RX_testjig_v2.c: 1117: print_screen("Set # of ", " channels");
  9800  0757  3039               	movlw	low (STR_131| (0+32768))
  9801  0758  00F4               	movwf	print_screen@top
  9802  0759  3093               	movlw	high (STR_131| (0+32768))
  9803  075A  00F5               	movwf	print_screen@top+1
  9804  075B  304D               	movlw	low (STR_132| (0+32768))
  9805  075C  00F6               	movwf	print_screen@bottom
  9806  075D  3093               	movlw	high (STR_132| (0+32768))
  9807  075E  00F7               	movwf	print_screen@bottom+1
  9808  075F  318A  22D4  3180   	fcall	_print_screen
  9809                           
  9810                           ;Multi_RX_testjig_v2.c: 1118: TX_one(0x81);
  9811  0762  3081               	movlw	129
  9812  0763  3188  2023  3180   	fcall	_TX_one
  9813                           
  9814                           ;Multi_RX_testjig_v2.c: 1119: RX_data = RX_one();
  9815  0766  3188  2047  3180   	fcall	_RX_one
  9816  0769  0020               	movlb	0	; select bank0
  9817  076A  00ED               	movwf	main@RX_data
  9818                           
  9819                           ;Multi_RX_testjig_v2.c: 1120: if(RX_data != 0x8A)
  9820  076B  3A8A               	xorlw	138
  9821  076C  1903               	btfsc	3,2
  9822  076D  2F79               	goto	l4557
  9823                           
  9824                           ;Multi_RX_testjig_v2.c: 1121: print_error("Comms Error", " 16");
  9825  076E  30DF               	movlw	low (STR_35| (0+32768))
  9826  076F  00F8               	movwf	print_error@top
  9827  0770  3092               	movlw	high (STR_35| (0+32768))
  9828  0771  00F9               	movwf	print_error@top+1
  9829  0772  30D2               	movlw	low (STR_134| (0+32768))
  9830  0773  00FA               	movwf	print_error@bottom
  9831  0774  3093               	movlw	high (STR_134| (0+32768))
  9832  0775  00FB               	movwf	print_error@bottom+1
  9833  0776  318A  22F6  3180   	fcall	_print_error
  9834  0779                     l4557:	
  9835                           
  9836                           ;Multi_RX_testjig_v2.c: 1122: }
  9837                           ;Multi_RX_testjig_v2.c: 1124: if((device_type == 0xAA) || (device_type == 0xA1)|| (devic
      +                          e_type == 0xA2))
  9838  0779  30AA               	movlw	170
  9839  077A  0020               	movlb	0	; select bank0
  9840  077B  066E               	xorwf	main@device_type,w
  9841  077C  1903               	btfsc	3,2
  9842  077D  2F86               	goto	l4563
  9843  077E  30A1               	movlw	161
  9844  077F  066E               	xorwf	main@device_type,w
  9845  0780  1903               	btfsc	3,2
  9846  0781  2F86               	goto	l4563
  9847  0782  30A2               	movlw	162
  9848  0783  066E               	xorwf	main@device_type,w
  9849  0784  1D03               	btfss	3,2
  9850  0785  2FB2               	goto	l446
  9851  0786                     l4563:	
  9852                           
  9853                           ;Multi_RX_testjig_v2.c: 1125: {
  9854                           ;Multi_RX_testjig_v2.c: 1127: print_screen("7seg, buzzer,  ", " button test");
  9855  0786  30CB               	movlw	low (STR_135| (0+32768))
  9856  0787  00F4               	movwf	print_screen@top
  9857  0788  3090               	movlw	high (STR_135| (0+32768))
  9858  0789  00F5               	movwf	print_screen@top+1
  9859  078A  3089               	movlw	low (STR_136| (0+32768))
  9860  078B  00F6               	movwf	print_screen@bottom
  9861  078C  3092               	movlw	high (STR_136| (0+32768))
  9862  078D  00F7               	movwf	print_screen@bottom+1
  9863  078E  318A  22D4  3180   	fcall	_print_screen
  9864                           
  9865                           ;Multi_RX_testjig_v2.c: 1128: TX_one(0x90);
  9866  0791  3090               	movlw	144
  9867  0792  3188  2023  3180   	fcall	_TX_one
  9868                           
  9869                           ;Multi_RX_testjig_v2.c: 1129: TRISG1 = 1;
  9870  0795  0026               	movlb	6	; select bank6
  9871  0796  148D               	bsf	13,1	;volatile
  9872                           
  9873                           ;Multi_RX_testjig_v2.c: 1130: _delay((unsigned long)((100)*(16000000/4000.0)));
  9874  0797  3003               	movlw	3
  9875  0798  0020               	movlb	0	; select bank0
  9876  0799  00E3               	movwf	??_main+2
  9877  079A  3008               	movlw	8
  9878  079B  00E2               	movwf	??_main+1
  9879  079C  3078               	movlw	120
  9880  079D  00E1               	movwf	??_main
  9881  079E                     u5637:	
  9882  079E  0BE1               	decfsz	??_main,f
  9883  079F  2F9E               	goto	u5637
  9884  07A0  0BE2               	decfsz	??_main+1,f
  9885  07A1  2F9E               	goto	u5637
  9886  07A2  0BE3               	decfsz	??_main+2,f
  9887  07A3  2F9E               	goto	u5637
  9888  07A4                     l449:	
  9889                           ;Multi_RX_testjig_v2.c: 1131: while(RG1 == 1);
  9890                           
  9891  07A4  0025               	movlb	5	; select bank5
  9892  07A5  188D               	btfsc	13,1	;volatile
  9893  07A6  2FA4               	goto	l449
  9894                           
  9895                           ;Multi_RX_testjig_v2.c: 1132: print_screen("waiting  ", " for comms");
  9896  07A7  302F               	movlw	low (STR_137| (0+32768))
  9897  07A8  00F4               	movwf	print_screen@top
  9898  07A9  3093               	movlw	high (STR_137| (0+32768))
  9899  07AA  00F5               	movwf	print_screen@top+1
  9900  07AB  300E               	movlw	low (STR_138| (0+32768))
  9901  07AC  00F6               	movwf	print_screen@bottom
  9902  07AD  3093               	movlw	high (STR_138| (0+32768))
  9903  07AE  00F7               	movwf	print_screen@bottom+1
  9904  07AF  318A  22D4  3180   	fcall	_print_screen
  9905  07B2                     l446:	
  9906                           
  9907                           ;Multi_RX_testjig_v2.c: 1137: }
  9908                           ;Multi_RX_testjig_v2.c: 1139: testjig_done(1, device_type);
  9909  07B2  0020               	movlb	0	; select bank0
  9910  07B3  086E               	movf	main@device_type,w
  9911  07B4  00F8               	movwf	testjig_done@device_type
  9912  07B5  3001               	movlw	1
  9913  07B6  3189  217F  3180   	fcall	_testjig_done
  9914                           
  9915                           ;Multi_RX_testjig_v2.c: 1149: testjig_done(1, device_type);
  9916  07B9  0020               	movlb	0	; select bank0
  9917  07BA  086E               	movf	main@device_type,w
  9918  07BB  00F8               	movwf	testjig_done@device_type
  9919  07BC  3001               	movlw	1
  9920  07BD  3189  217F         	fcall	_testjig_done
  9921  07BF  3180  28A1         	ljmp	start
  9922  07C1                     __end_of_main:	


Data Sizes:
    Strings     993
    Constant    0
    Data        2
    BSS         26
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80      0      28
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0

Pointer List with Targets:

    print_screen@bottom	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_174(CODE[17]), STR_172(CODE[13]), STR_170(CODE[13]), STR_168(CODE[13]), 
		 -> STR_166(CODE[13]), STR_164(CODE[14]), STR_162(CODE[14]), STR_160(CODE[14]), 
		 -> STR_158(CODE[14]), STR_156(CODE[8]), STR_154(CODE[8]), STR_152(CODE[9]), 
		 -> STR_150(CODE[9]), STR_148(CODE[9]), STR_146(CODE[14]), STR_144(CODE[14]), 
		 -> STR_142(CODE[14]), STR_140(CODE[14]), STR_138(CODE[11]), STR_136(CODE[13]), 
		 -> STR_132(CODE[10]), STR_128(CODE[2]), STR_124(CODE[2]), STR_116(CODE[16]), 
		 -> STR_114(CODE[15]), STR_112(CODE[7]), STR_110(CODE[10]), STR_96(CODE[5]), 
		 -> STR_94(CODE[9]), STR_80(CODE[5]), STR_66(CODE[5]), STR_52(CODE[5]), 
		 -> STR_50(CODE[1]), STR_44(CODE[6]), STR_38(CODE[18]), STR_34(CODE[6]), 
		 -> STR_32(CODE[9]), STR_30(CODE[13]), STR_28(CODE[1]), STR_6(CODE[1]), 
		 -> STR_2(CODE[17]), 

    print_screen@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_173(CODE[12]), STR_171(CODE[17]), STR_169(CODE[16]), STR_167(CODE[12]), 
		 -> STR_165(CODE[15]), STR_163(CODE[17]), STR_161(CODE[16]), STR_159(CODE[12]), 
		 -> STR_157(CODE[15]), STR_155(CODE[17]), STR_153(CODE[9]), STR_151(CODE[16]), 
		 -> STR_149(CODE[5]), STR_147(CODE[8]), STR_145(CODE[14]), STR_143(CODE[16]), 
		 -> STR_141(CODE[9]), STR_139(CODE[12]), STR_137(CODE[10]), STR_135(CODE[16]), 
		 -> STR_131(CODE[10]), STR_127(CODE[14]), STR_123(CODE[13]), STR_115(CODE[8]), 
		 -> STR_113(CODE[8]), STR_111(CODE[8]), STR_109(CODE[8]), STR_95(CODE[8]), 
		 -> STR_93(CODE[14]), STR_79(CODE[11]), STR_65(CODE[12]), STR_51(CODE[11]), 
		 -> STR_49(CODE[11]), STR_43(CODE[13]), STR_37(CODE[9]), STR_33(CODE[13]), 
		 -> STR_31(CODE[19]), STR_29(CODE[12]), STR_27(CODE[19]), STR_5(CODE[15]), 
		 -> STR_1(CODE[9]), 

    print_error@bottom	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_134(CODE[4]), STR_130(CODE[4]), STR_126(CODE[4]), STR_122(CODE[4]), 
		 -> STR_120(CODE[15]), STR_118(CODE[17]), STR_108(CODE[13]), STR_106(CODE[14]), 
		 -> STR_104(CODE[5]), STR_102(CODE[5]), STR_100(CODE[5]), STR_98(CODE[4]), 
		 -> STR_92(CODE[9]), STR_90(CODE[8]), STR_88(CODE[9]), STR_86(CODE[8]), 
		 -> STR_84(CODE[9]), STR_82(CODE[9]), STR_78(CODE[9]), STR_76(CODE[8]), 
		 -> STR_74(CODE[9]), STR_72(CODE[8]), STR_70(CODE[9]), STR_68(CODE[9]), 
		 -> STR_64(CODE[9]), STR_62(CODE[8]), STR_60(CODE[9]), STR_58(CODE[8]), 
		 -> STR_56(CODE[9]), STR_54(CODE[9]), STR_48(CODE[18]), STR_46(CODE[14]), 
		 -> STR_42(CODE[3]), STR_40(CODE[12]), STR_36(CODE[3]), STR_26(CODE[12]), 
		 -> STR_24(CODE[11]), STR_22(CODE[13]), STR_20(CODE[13]), STR_18(CODE[13]), 
		 -> STR_16(CODE[13]), STR_14(CODE[12]), STR_12(CODE[11]), STR_10(CODE[13]), 
		 -> STR_8(CODE[13]), STR_4(CODE[14]), 

    print_error@top	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_133(CODE[12]), STR_129(CODE[12]), STR_125(CODE[12]), STR_121(CODE[12]), 
		 -> STR_119(CODE[8]), STR_117(CODE[8]), STR_107(CODE[13]), STR_105(CODE[13]), 
		 -> STR_103(CODE[12]), STR_101(CODE[12]), STR_99(CODE[12]), STR_97(CODE[12]), 
		 -> STR_91(CODE[12]), STR_89(CODE[15]), STR_87(CODE[12]), STR_85(CODE[16]), 
		 -> STR_83(CODE[12]), STR_81(CODE[21]), STR_77(CODE[12]), STR_75(CODE[15]), 
		 -> STR_73(CODE[12]), STR_71(CODE[16]), STR_69(CODE[12]), STR_67(CODE[21]), 
		 -> STR_63(CODE[12]), STR_61(CODE[15]), STR_59(CODE[12]), STR_57(CODE[16]), 
		 -> STR_55(CODE[12]), STR_53(CODE[21]), STR_47(CODE[12]), STR_45(CODE[12]), 
		 -> STR_41(CODE[12]), STR_39(CODE[13]), STR_35(CODE[12]), STR_25(CODE[14]), 
		 -> STR_23(CODE[11]), STR_21(CODE[15]), STR_19(CODE[15]), STR_17(CODE[14]), 
		 -> STR_15(CODE[14]), STR_13(CODE[14]), STR_11(CODE[11]), STR_9(CODE[14]), 
		 -> STR_7(CODE[14]), STR_3(CODE[9]), 

    i2c_Write_string@data	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_174(CODE[17]), STR_173(CODE[12]), STR_172(CODE[13]), STR_171(CODE[17]), 
		 -> STR_170(CODE[13]), STR_169(CODE[16]), STR_168(CODE[13]), STR_167(CODE[12]), 
		 -> STR_166(CODE[13]), STR_165(CODE[15]), STR_164(CODE[14]), STR_163(CODE[17]), 
		 -> STR_162(CODE[14]), STR_161(CODE[16]), STR_160(CODE[14]), STR_159(CODE[12]), 
		 -> STR_158(CODE[14]), STR_157(CODE[15]), STR_156(CODE[8]), STR_155(CODE[17]), 
		 -> STR_154(CODE[8]), STR_153(CODE[9]), STR_152(CODE[9]), STR_151(CODE[16]), 
		 -> STR_150(CODE[9]), STR_149(CODE[5]), STR_148(CODE[9]), STR_147(CODE[8]), 
		 -> STR_146(CODE[14]), STR_145(CODE[14]), STR_144(CODE[14]), STR_143(CODE[16]), 
		 -> STR_142(CODE[14]), STR_141(CODE[9]), STR_140(CODE[14]), STR_139(CODE[12]), 
		 -> STR_138(CODE[11]), STR_137(CODE[10]), STR_136(CODE[13]), STR_135(CODE[16]), 
		 -> STR_134(CODE[4]), STR_133(CODE[12]), STR_132(CODE[10]), STR_131(CODE[10]), 
		 -> STR_130(CODE[4]), STR_129(CODE[12]), STR_128(CODE[2]), STR_127(CODE[14]), 
		 -> STR_126(CODE[4]), STR_125(CODE[12]), STR_124(CODE[2]), STR_123(CODE[13]), 
		 -> STR_122(CODE[4]), STR_121(CODE[12]), STR_120(CODE[15]), STR_119(CODE[8]), 
		 -> STR_118(CODE[17]), STR_117(CODE[8]), STR_116(CODE[16]), STR_115(CODE[8]), 
		 -> STR_114(CODE[15]), STR_113(CODE[8]), STR_112(CODE[7]), STR_111(CODE[8]), 
		 -> STR_110(CODE[10]), STR_109(CODE[8]), STR_108(CODE[13]), STR_107(CODE[13]), 
		 -> STR_106(CODE[14]), STR_105(CODE[13]), STR_104(CODE[5]), STR_103(CODE[12]), 
		 -> STR_102(CODE[5]), STR_101(CODE[12]), STR_100(CODE[5]), STR_99(CODE[12]), 
		 -> STR_98(CODE[4]), STR_97(CODE[12]), STR_96(CODE[5]), STR_95(CODE[8]), 
		 -> STR_94(CODE[9]), STR_93(CODE[14]), STR_92(CODE[9]), STR_91(CODE[12]), 
		 -> STR_90(CODE[8]), STR_89(CODE[15]), STR_88(CODE[9]), STR_87(CODE[12]), 
		 -> STR_86(CODE[8]), STR_85(CODE[16]), STR_84(CODE[9]), STR_83(CODE[12]), 
		 -> STR_82(CODE[9]), STR_81(CODE[21]), STR_80(CODE[5]), STR_79(CODE[11]), 
		 -> STR_78(CODE[9]), STR_77(CODE[12]), STR_76(CODE[8]), STR_75(CODE[15]), 
		 -> STR_74(CODE[9]), STR_73(CODE[12]), STR_72(CODE[8]), STR_71(CODE[16]), 
		 -> STR_70(CODE[9]), STR_69(CODE[12]), STR_68(CODE[9]), STR_67(CODE[21]), 
		 -> STR_66(CODE[5]), STR_65(CODE[12]), STR_64(CODE[9]), STR_63(CODE[12]), 
		 -> STR_62(CODE[8]), STR_61(CODE[15]), STR_60(CODE[9]), STR_59(CODE[12]), 
		 -> STR_58(CODE[8]), STR_57(CODE[16]), STR_56(CODE[9]), STR_55(CODE[12]), 
		 -> STR_54(CODE[9]), STR_53(CODE[21]), STR_52(CODE[5]), STR_51(CODE[11]), 
		 -> STR_50(CODE[1]), STR_49(CODE[11]), STR_48(CODE[18]), STR_47(CODE[12]), 
		 -> STR_46(CODE[14]), STR_45(CODE[12]), STR_44(CODE[6]), STR_43(CODE[13]), 
		 -> STR_42(CODE[3]), STR_41(CODE[12]), STR_40(CODE[12]), STR_39(CODE[13]), 
		 -> STR_38(CODE[18]), STR_37(CODE[9]), STR_36(CODE[3]), STR_35(CODE[12]), 
		 -> STR_34(CODE[6]), STR_33(CODE[13]), STR_32(CODE[9]), STR_31(CODE[19]), 
		 -> STR_30(CODE[13]), STR_29(CODE[12]), STR_28(CODE[1]), STR_27(CODE[19]), 
		 -> STR_26(CODE[12]), STR_25(CODE[14]), STR_24(CODE[11]), STR_23(CODE[11]), 
		 -> STR_22(CODE[13]), STR_21(CODE[15]), STR_20(CODE[13]), STR_19(CODE[15]), 
		 -> STR_18(CODE[13]), STR_17(CODE[14]), STR_16(CODE[13]), STR_15(CODE[14]), 
		 -> STR_14(CODE[12]), STR_13(CODE[14]), STR_12(CODE[11]), STR_11(CODE[11]), 
		 -> STR_10(CODE[13]), STR_9(CODE[14]), STR_8(CODE[13]), STR_7(CODE[14]), 
		 -> STR_6(CODE[1]), STR_5(CODE[15]), STR_4(CODE[14]), STR_3(CODE[9]), 
		 -> STR_2(CODE[17]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _testjig_done->_print_screen
    _print_error->_print_screen
    _print_screen->_i2c_Write_string
    _i2c_second_line->_i2c_Write
    _i2c_first_line->_i2c_Write
    _i2c_Write_string->_i2c_Write
    _clear_lcd->_i2c_Write
    _ten_thou_conv->___wmul
    _lcd_set_cursor->_i2c_Write
    _i2c_write_char->_i2c_Write
    _init_i2c_lcd_5v->_i2c_Write
    _get_30v_current->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl
    _Vout_set->_digitalpot
    _digitalpot->_i2c_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_print_int
    _lcd_print_int->_get_30v_current
    _get_30v_current->___fltol
    ___fltol->___fladd
    ___fladd->___flmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   38961
                                             65 BANK0     14    14      0
                        _ADC_get_val
                             _RX_one
                     _RX_one_timeout
                             _TX_one
                           _Vout_set
                      _debug_fast_tx
                    _get_30v_current
                           _init_ADC
                  _init_current_sink
                           _init_i2c
                    _init_i2c_lcd_5v
                      _lcd_print_int
                   _power_supply_set
                        _print_error
                       _print_screen
                       _testjig_done
 ---------------------------------------------------------------------------------
 (1) _testjig_done                                         5     4      1    7000
                                              8 COMMON     5     4      1
                           _buzz_one
                      _debug_fast_tx
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (1) _print_error                                          7     3      4   12819
                                              8 COMMON     4     0      4
                                              0 BANK0      3     3      0
                           _buzz_one
                          _clear_lcd
                      _debug_fast_tx
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (2) _print_screen                                         4     0      4    5681
                                              4 COMMON     4     0      4
                          _clear_lcd
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
 ---------------------------------------------------------------------------------
 (3) _i2c_second_line                                      1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_first_line                                       1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write_string                                     3     1      2     323
                                              1 COMMON     3     1      2
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _clear_lcd                                            2     2      0      22
                                              1 COMMON     2     2      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _power_supply_set                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _debug_fast_tx                                        3     1      2     581
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _buzz_one                                             2     0      2     214
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd_print_int                                        6     0      6    5117
                                             59 BANK0      6     0      6
                    _get_30v_current (ARG)
                     _i2c_write_char
                     _lcd_set_cursor
                      _ten_thou_conv
 ---------------------------------------------------------------------------------
 (2) _ten_thou_conv                                        5     3      2    2091
                                              6 COMMON     5     3      2
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     910
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1    1029
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       3     2      1     158
                                              1 COMMON     3     2      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_write_char                                       1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c_lcd_5v                                      4     3      1     152
                                              1 COMMON     4     3      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init_current_sink                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_30v_current                                      4     2      2    5529
                                             55 BANK0      4     2      2
                        _ADC_get_val
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     386
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     293
                                             45 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2565
                                              0 BANK0     25    17      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            8     5      3     989
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2194
                                             25 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_get_val                                          6     3      3      46
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Vout_set                                             6     4      2     349
                                              4 COMMON     6     4      2
                         _digitalpot
 ---------------------------------------------------------------------------------
 (2) _digitalpot                                           3     3      0      44
                                              1 COMMON     3     3      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (4) _i2c_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TX_one                                               3     3      0      69
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one_timeout                                       3     3      0      93
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one                                               3     3      0      93
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_get_val
   _RX_one
   _RX_one_timeout
   _TX_one
   _Vout_set
     _digitalpot
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _debug_fast_tx
   _get_30v_current
     _ADC_get_val
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _init_ADC
   _init_current_sink
   _init_i2c
   _init_i2c_lcd_5v
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _lcd_print_int
     _get_30v_current (ARG)
       _ADC_get_val
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _i2c_write_char (ARG)
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _lcd_set_cursor (ARG)
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _ten_thou_conv (ARG)
       ___bmul
       ___wmul
   _power_supply_set
   _print_error
     _buzz_one
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _debug_fast_tx
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
   _print_screen
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _testjig_done
     _buzz_one
     _debug_fast_tx
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      1C       7       35.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0      7A      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      7A      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Feb 28 18:19:24 2019

         _motor_direction_timer 00AA             ??_init_current_sink 0070                     main@RX_data 006D  
                             pc 0002                  ___bmul@product 0071                     __CFG_CP$OFF 0000  
              _power_supply_set 0BF3             ___wmul@multiplicand 0072                      TX_one@data 0071  
           __Umul8_16@word_mpld 0076                             l315 17E1                             l308 172A  
                           l501 0BE3                             l406 05D3                             l353 0355  
                           l338 01EB                             l507 0BD8                             l419 063E  
                           l516 0BE8                             l532 0BC2                             l446 07B2  
                           l455 0980                             l720 085B                             l704 0AB4  
                           l464 09D4                             l481 0A66                             l449 07A4  
                           l714 0847                             l490 0A97                             l731 07DB  
                           l724 07CC                             l628 096E                             l717 0852  
                           l709 082E                             l398 052B                             l719 0859  
                           l399 0536                             l729 07D6                             l681 0BF9  
                           l682 0BFE                             l683 0C03                             l669 0C63  
                           l679 0BF5                             l697 08C8                             l971 0C83  
                           l972 0C81                             l982 0D03                             l984 0CF0  
                           l976 0C9E                             l993 0D1E                             l985 0CF6  
                           l977 0C9C                             l994 0D1F                             l986 0CF7  
                           _GIE 005F                             l999 0D70                             _RA2 0062  
                           _RA4 0064                             _RA5 0065               ??_i2c_second_line 0071  
                           _RE0 0080                             _RF0 1460                             _RF1 1461  
                           _RG0 1468                             _RF2 1462                             _RE4 0084  
                           _RG1 1469                             _RF3 1463                             _RE5 0085  
                           _RE6 0086                             _RF5 1465                             _PR2 001B  
                           _PR8 0596                             _isr 0004                             _ten 00B6  
                  __CFG_BORV$HI 0000                             wreg 0009                  ?_lcd_print_int 005B  
                  ___flmul@aexp 002D                    ___flmul@bexp 0032                    ___flmul@sign 002C  
                  ___flmul@temp 0037                    ___flmul@prod 0033                            S4633 07F8  
       __size_of_i2c_write_char 000D                 ?_lcd_set_cursor 0071                    __CFG_LVP$OFF 0000  
     __end_of_init_current_sink 159E                    ___fltol@exp1 0056                            l1004 0D89  
                          l1106 0FDB                            l1019 0DBB                            l1118 0F87  
                          l1064 0DD4                            l1065 0DD2                            l1068 0DEA  
                          l1069 0DE8                            l1093 0FA9                            l1086 0F38  
                          l3031 0F57                            l3025 0F4F                            l3201 0881  
                          l3043 0F67                            l3061 0F7F                            l3037 0F5F  
                          l3141 08F3                            l3055 0F77                            l3215 089D  
                          l3321 0CFE                            l3049 0F6F                            l3225 08A8  
                          l4201 0285                            l4121 0127                            l4113 0105  
                          l3403 0DBC                            l3307 0CC8                            l3227 08B1  
                          l3219 08A4                            l3139 08F1                            l3083 0ABB  
                          l3091 0C08                            l4107 00EF                            l4213 02B3  
                          l4221 02E4                            l4133 0165                            l4125 013A  
                          l4117 0114                            l4053 171C                            l3327 0D0D  
                          l4311 0431                            l4303 0416                            l4071 177B  
                          l4063 1770                            l3513 0F17                            l3441 0DF8  
                          l3425 0DD8                            l4233 0327                            l4225 02F8  
                          l4209 0299                            l4137 0175                            l4065 1756  
                          l3363 0D8A                            l3355 0D7E                            l3339 0D27  
                          l4411 0592                            l4403 057B                            l4307 041E  
                          l4243 0346                            l4171 0230                            l4075 178E  
                          l3349 0D68                            l3277 0CAA                            l3509 0F04  
                          l3437 0DEE                            l3541 0FB4                            l3613 0BBB  
                          l3701 0A7D                            l4501 06C5                            l4333 048B  
                          l4341 049B                            l4309 0426                            l4229 031E  
                          l2903 0BE6                            l3391 0DAB                            l3375 0D98  
                          l3367 0D8D                            l3519 0F2A                            l3199 087C  
                          l3631 0996                            l4423 05C4                            l4415 059E  
                          l4407 0586                            l4343 04A3                            l4271 0399  
                          l4175 0249                            l4095 00E4                            l4087 17D1  
                          l4079 17A1                            l3369 0D8F                            l3553 0FCB  
                          l3545 0FB6                            l3537 0FA1                            l2905 0B82  
                          l3705 0A85                            l4513 06ED                            l4505 06D5  
                          l4345 04AE                            l4337 0493                            l4265 0386  
                          l4097 00B4                            l3379 0D9A                            l3571 0FF7  
                          l3563 0FE4                            l3547 0FC0                            l3811 0942  
                          l3803 0933                            l2915 0B8A                            l3643 09AE  
                          l3635 099E                            l4443 062C                            l4515 06F8  
                          l4371 0510                            l4275 03A2                            l3557 0FD9  
                          l3813 0946                            l2917 0B9C                            l3709 0A8D  
                          l3661 09F2                            l4533 072C                            l4509 06E1  
                          l4453 061C                            l4437 0605                            l3743 08C1  
                          l3751 08CD                            l3399 0DB7                            l3495 0EF0  
                          l3559 0FD0                            l2951 1683                            l3831 0965  
                          l3727 0B0C                            l3655 09E4                            l3639 09A6  
                          l4543 074E                            l4527 071F                            l4471 0656  
                          l4463 0642                            l4383 053F                            l4367 0508  
                          l4375 0518                            l3745 08C3                            l3753 08DD  
                          l3489 0EDD                            l3665 09FA                            l4377 0520  
                          l4635 08D2                            l3747 08C5                            l3499 0EF2  
                          l2955 1689                            l3819 094F                            l4563 0786  
                          l4547 0757                            l4299 040E                            l4379 0537  
                          l3829 0961                            l3781 090E                            l3693 0A5C  
                          l3685 0A4C                            l3669 0A06                            l3677 0A36  
                          l4557 0779                            l3783 0911                            l3679 0A3E  
                          l4479 0675                            l3857 07C7                            l3769 0C5B  
                          l3785 0914                            l3689 0A54                            l4497 06B7  
                          l3859 07CF                            l2899 0BDA                            l3795 0926  
                          l3869 07DD                            l3797 092A                            l3789 091A  
                          ?_isr 0070                            STR_1 1372                            STR_2 10A9  
                          STR_3 1372                            STR_4 11BF                            STR_5 1158  
                          STR_6 10DA                            STR_7 1205                            STR_8 1255  
                          STR_9 1205                            u4100 0833                            u3160 0CE7  
                          u4114 0835                            u3170 0CE8                            u3155 0CDC  
                          u5005 0603                            u3263 0D39                            u3605 0F0D  
                          u3615 0F21                            u5307 17F2                            u2925 15A9  
                          u5085 06C3                            u5317 0156                            u2870 0AB9  
                          u2935 15B8                            u5407 0229                            u5327 0194  
                          u2945 15C7                            u5417 0242                            u5337 01B4  
                          u5257 16F6                            u2955 15E3                            u5507 0442  
                          u5427 0252                            u5347 01C3                            u5267 1705  
                          u2965 160F                            u5517 045C                            u5437 0261  
                          u5357 01D3                            u5277 1710                            u2975 1636  
                          u5607 0622                            u5527 0476                            u5447 02AB  
                          u5367 01E4                            u5287 1746                            u5617 066C  
                          u5537 04BF                            u5457 02D2                            u5377 01F9  
                          u5297 17C2                            u2995 088A                            u5707 0B25  
                          u5627 06AB                            u5547 04D9                            u5467 0317  
                          u5387 0208                            u5717 0B3C                            u5637 079E  
                          u5557 04F3                            u5477 03C4                            u5397 0218  
                          u5807 0844                            u5727 0AF2                            u5647 09C9  
                          u5567 054C                            u5487 03DE                            u5817 07D1  
                          u5737 0B51                            u5657 09DD                            u5577 05B5  
                          u5497 03F8                            u5827 07DF                            u5747 0B64  
                          u5667 0A16                            u5587 05E5                            u5837 07E8  
                          u5757 0BCF                            u5677 0A2C                            u5597 0612  
                          u5847 084D                            u5767 0813                            u5687 0A6F  
                          u5857 085F                            u5777 0B7C                            u5697 0AA0  
                          u5867 0869                            u5787 082B                            u5797 0838  
                          _TMR0 0015                            _WPUB 020D                            _WPUD 020F  
                          _WPUE 0210                            _WPUG 048D                    __CFG_WRT$OFF 0000  
                          _main 1696                            _hund 00B4                            _thou 00B8  
                          fsr0h 0005                            fsr0l 0004                            indf0 0000  
                          _unit 00B7                            btemp 007E               ??_get_30v_current 007E  
                 __CFG_BOREN$ON 0000                            ltemp 007E                            start 00A1  
                          ttemp 007E                            wtemp 007E                ??_RX_one_timeout 0070  
                 __CFG_IESO$OFF 0000         i2c_write_char@char_data 0071               ___bmul@multiplier 0072  
                 __CFG_MCLRE$ON 0000                 digitalpot@value 0073            __size_of_ADC_get_val 0012  
       __end_of_init_i2c_lcd_5v 0BD5                           ??_isr 0070                  _i2c_first_line 0B44  
                 ___fltol@sign1 0055                 __end_of___fladd 0DC1                           ?_main 0070  
                         STR_10 123B                           STR_11 1198                           STR_20 1255  
                         STR_12 1303                           STR_21 1194                           STR_13 1205  
                         STR_22 123B                           STR_30 1045                           STR_14 12EB  
                         STR_31 103F                           STR_23 1324                           STR_15 1213  
                         STR_16 1255                           STR_24 1303                           STR_32 1384  
                         STR_40 12AF                           STR_41 12DF                           STR_25 1213  
                         STR_17 1213                           STR_33 126F                           STR_50 10DA  
                         STR_42 1366                           STR_18 123B                           STR_26 12EB  
                         STR_34 1313                           STR_51 1319                           STR_35 12DF  
                         STR_43 1221                           STR_19 1194                           STR_27 103F  
                         STR_28 10DA                           STR_60 1369                           STR_44 12C1  
                         STR_52 1391                           STR_36 13DE                           STR_37 1357  
                         STR_29 12D3                           STR_45 12BB                           STR_61 112B  
                         STR_53 1000                           STR_70 1369                           STR_62 13A6  
                         STR_54 1360                           STR_46 11B1                           STR_38 1052  
                         STR_47 12BB                           STR_63 12DF                           STR_55 12DF  
                         STR_39 127C                           STR_71 10FB                           STR_72 1361  
                         STR_64 1369                           STR_80 1391                           STR_56 1369  
                         STR_48 1064                           STR_73 12DF                           STR_49 1319  
                         STR_65 12A3                           STR_57 10EB                           STR_81 102A  
                         STR_58 1361                           STR_82 1360                           STR_74 1369  
                         STR_90 13A6                           STR_66 1391                           STR_91 12DF  
                         STR_83 12DF                           STR_59 12DF                           STR_75 113A  
                         STR_67 1015                           STR_68 1360                           STR_92 1369  
                         STR_84 1369                           STR_76 13A6                           STR_77 12DF  
                         STR_69 12DF                           STR_93 11CD                           STR_85 110B  
                         STR_86 1361                           STR_78 1369                           STR_94 137B  
                         STR_87 12DF                           STR_79 1319                           STR_95 13AE  
                         STR_88 1369                           STR_96 1250                 __end_of___flmul 0F43  
                         STR_97 12DF                           STR_89 1149                           STR_98 13CA  
                         STR_99 12DF                 __end_of___fltol 08C0                           _T2CON 001C  
                         _LATC2 0872                           _LATA6 0866                           _LATB5 086D  
                         _LATA7 0867                           _LATD2 087A                           _LATC5 0875  
                         _LATB7 086F                           _LATD4 087C                           _LATC6 0876  
                         _LATD5 087D                           _LATC7 0877                           _LATD6 087E  
                         _LATG1 1C69                           _LATF4 1C64           __end_of_debug_fast_tx 0AD4  
                         _T8CON 0597                           i1l304 009F                           i1l280 001D  
                         i1l293 005D                           i1l286 0033                           i1l278 0012  
                         i1l296 0066                           i1l297 006A                           i1l289 0043  
                         i1l299 0085                           _PORTA 000C                           _PORTB 000D  
                         _PORTC 000E                           _PORTD 000F                           _PORTE 0010  
                         _PORTF 028C                           _PORTG 028D                    main@mem_size 0066  
                         _TRISA 008C                           _TRISB 008D                           _TRISC 008E  
                         _TRISD 008F                           _TRISE 0090                           _TRISF 030C  
                         _TRISG 030D                   __CFG_PWRTE$ON 0000                  __CFG_FCMEN$OFF 0000  
            _current_sink_timer 00A8        __end_of_i2c_Write_string 0B9D                           main@i 006B  
                         main@j 0068                    main@response 006A                           ltemp0 007E  
                         ltemp1 0082                           ltemp2 0086                           ltemp3 0080  
                         ttemp0 007E                           ttemp1 0081                           ttemp2 0084  
                         ttemp3 0087                           ttemp4 007F                           status 0003  
                         wtemp0 007E                           wtemp1 0080                           wtemp2 0082  
                         wtemp3 0084                           wtemp4 0086                           wtemp5 0088  
                         wtemp6 007F                 __initialization 00A3      lcd_set_cursor@LCD_position 0073  
                  __end_of_main 07C1          __end_of_i2c_first_line 0B55                __end_of_i2c_Stop 0BEB  
                __CFG_LPBOR$OFF 0000                          ??_main 0061                 ??_lcd_print_int 007E  
           lcd_print_int@number 005B                          _ADCON0 009D                          _ADCON1 009E  
                        i1S4637 07EC                          STR_100 13BB                          STR_101 12DF  
                        STR_102 13C0                          STR_110 1343                          STR_111 13AE  
                        STR_103 12DF                          STR_112 116F                          STR_104 13C5  
                        STR_120 1167                          STR_113 13AE                          STR_121 12DF  
                        STR_105 1248                          STR_130 13D6                          STR_122 13CE  
                        STR_106 11E9                          STR_114 1185                          _ADRESH 009C  
                        STR_115 13AE                          STR_107 1248                          STR_131 1339  
                        STR_123 122E                          STR_124 10D9                          STR_132 134D  
                        STR_108 1296                          STR_140 11DB                          STR_116 10DB  
                        STR_117 13AE                          STR_109 13AE                          STR_133 12DF  
                        STR_125 12DF                          STR_141 138D                          STR_142 11DB  
                        STR_150 12CA                          STR_126 13DA                          STR_134 13D2  
                        STR_118 1087                          _ADRESL 009B                          STR_119 13AE  
                        STR_151 111B                          STR_127 11A3                          STR_143 111B  
                        STR_135 10CB                          STR_128 10D9                          STR_160 11BF  
                        STR_144 11DB                          STR_152 12CA                          STR_136 1289  
                        STR_153 1372                          STR_129 12DF                          STR_161 111B  
                        STR_137 132F                          STR_145 11F7                          STR_162 11BF  
                        STR_170 1262                          STR_146 11DB                          STR_154 12CB  
                        STR_138 130E                          STR_171 1076                          STR_147 1396  
                        STR_139 12F7                          STR_155 1098                          STR_163 1076  
                        STR_164 11BF                          STR_172 1262                          STR_148 12CA  
                        STR_156 139E                          STR_173 1263                          STR_165 1176  
                        STR_149 13B6                          STR_157 1176                          STR_158 11BF  
                        STR_166 1262                          STR_174 10BA                          STR_167 12C7  
                        STR_159 12C7                          STR_168 1262                          STR_169 111B  
    __size_of_init_current_sink 0015                          _CCPR9L 061A                          _ANSELA 018C  
                        _ANSELB 018D                          _ANSELD 018F                          _ANSELE 0190  
                        _ANSELF 040C                          _ANSELG 040D              __size_of_i2c_Start 0005  
                        i1l3913 0025              __size_of_i2c_Write 000C                          i1l3923 003C  
                        i1l3907 0014                          i1l3915 0026                          i1l3941 0061  
                        i1l3933 0050                          i1l3935 0052                          i1l3953 0087  
                        i1l3963 009D                          i1l3947 0071                          i1l3957 0091  
                        i1l3949 007B                          i1l3959 0095                          _FVRCON 0117  
              __end_of_Vout_set 08DF                          _OSCCON 0099                          _TMR0IE 005D  
                        _TMR0IF 005A                          _TRISC3 0473                          _TRISC4 0474  
                        _TRISG1 1869                __end_of___xxtofl 1000               print_error@bottom 007A  
                        _RX_one 0847                          _TX_one 0823             _current_sink_stable 00A6  
                        ___bmul 165E                 ?_i2c_first_line 0070                       ??___fladd 0041  
                        ___wmul 1681                  __CFG_STVREN$ON 0000                       ??___flmul 0028  
                     ??___fltol 0051                __end_of_init_ADC 080C                ?_init_i2c_lcd_5v 0071  
              __end_of_init_i2c 0823                __end_of_buzz_one 0BF3                _ADC_cur_sink_val 00A0  
                 i2c_Write@data 0070              __size_of__Umul8_16 0049                  _i2c_write_char 0972  
             debug_fast_tx@data 0070        __end_of_power_supply_set 0C13                    ___xxtofl@arg 007A  
                  ___xxtofl@exp 0079                    ___xxtofl@val 0070                    ?_print_error 0078  
       __end_of__initialization 00B0                      ___fltol@f1 004D             ___bmul@multiplicand 0070  
               _i2c_second_line 0AE5                  __pcstackCOMMON 0070                    __pidataBANK1 0000  
                print_error@top 0078           __end_of_ten_thou_conv 165E               __end_of_i2c_Start 0BE6  
             __end_of_i2c_Write 0BE1              __size_of_clear_lcd 0015                ??_lcd_set_cursor 0072  
        __end_of_i2c_write_char 097F                 _get_30v_current 0C13            i2c_Write_string@data 0071  
          lcd_print_int@decimal 005F                _one_second_timer 00B9                      __pbssBANK0 006F  
                    __pbssBANK1 00A0                       ?_i2c_Stop 0070     lcd_print_int@ten_thou_digit 0060  
                       ?_RX_one 0070              ADC_get_val@channel 0073                         ?_TX_one 0070  
             __end_of__Umul8_16 0F8C                      __pmaintext 1696                         ?___bmul 0070  
                       ?___wmul 0070                      __pintentry 0004                      _digitalpot 0B6A  
                       _CCP9CON 061C                       ?_Vout_set 0074                 ?_i2c_write_char 0070  
                     ?___xxtofl 0070                         _SSP1ADD 0212                         _SSP1BUF 0211  
             ?_i2c_Write_string 0071                         RX_one@i 0071                         TX_one@i 0072  
            ??_i2c_Write_string 0073                      ??_i2c_Stop 0070                       ?_init_ADC 0070  
       __end_of_i2c_second_line 0AF6                       ?_init_i2c 0070               __end_of_clear_lcd 0B6A  
                     ?_buzz_one 0070                   ??_ADC_get_val 0073                 __size_of_RX_one 0026  
               __size_of_TX_one 0024                 __size_of___bmul 0023                         ___fladd 0C70  
                       ___flmul 0DC1                         ___fltol 086D                 __size_of___wmul 0015  
       __end_of_get_30v_current 0C5E                         __ptext1 097F                         __ptext2 0AF6  
                       __ptext3 0AD4                         __ptext4 0AE5                         __ptext5 0B44  
                       __ptext6 0B82                         __ptext7 0B55                         __ptext8 0BF3  
                       __ptext9 0AA7                      ??_Vout_set 0076                    __size_of_isr 009D  
                    ??___xxtofl 0074                      _buzz_timer 00A2  init_i2c_lcd_5v@single1_double2 0071  
                       clrloop0 1584            end_of_initialization 00B0                      ??_init_ADC 0070  
                    ??_init_i2c 0070                      ??_buzz_one 0072                ??_i2c_first_line 0071  
          __size_of_print_error 004E          __size_of_debug_fast_tx 002D                         psplit$0 C0034  
                  __pstringtext 1000                     ?_digitalpot 0070             __end_of_ADC_get_val 0C70  
            RX_one_timeout@data 0072         __size_of_RX_one_timeout 002B                     ___fladd@grs 004C  
              __CFG_FOSC$INTOSC 0000           __end_of_lcd_print_int 0972                   ___xxtofl@sign 0078  
                 ?_print_screen 0074            pnum$maintext_split_1 0034                   ?_testjig_done 0078  
                   ___flmul@grs 002E               ?_power_supply_set 0070                ?_i2c_second_line 0070  
            ??_power_supply_set 0070                  ten_thou_conv@n 0076                  __end_of_RX_one 086D  
                __end_of_TX_one 0847                  __end_of___bmul 1681                  __end_of___wmul 1696  
                  buzz_one@time 0070                ?_get_30v_current 0057                   _debug_fast_tx 0AA7  
                     _i2c_Start 0BE1                       _i2c_Write 0BD5             start_initialization 00A3  
      __size_of_init_i2c_lcd_5v 0038                  ??_print_screen 0078                     __end_of_isr 00A1  
                ??_testjig_done 0079             __size_of_digitalpot 0018               __size_of_i2c_Stop 0005  
               print_screen@top 0074                        ??_RX_one 0070                        ??_TX_one 0070  
                   _ADC_get_val 0C5E         testjig_done@device_type 0078                        ??___bmul 0071  
                      ??___wmul 0074                       __Umul8_16 0F43                     __pdataBANK1 00B9  
              ??_i2c_write_char 0071                       ___fladd@a 003D                       ___fladd@b 0039  
                ?_debug_fast_tx 0070                      ?_i2c_Start 0070                      ?_i2c_Write 0070  
                     ___flmul@a 0024                       ___flmul@b 0020               __size_of_Vout_set 001F  
                     ___latbits 0003                 main@device_type 006E                   __pcstackBANK0 0020  
            _pickit_red_counter 00B5               __size_of___xxtofl 0074                lcd_print_int@pos 005D  
        __size_of_ten_thou_conv 00C0                       __pnvBANK1 00BB               __size_of_init_ADC 0007  
             __size_of_init_i2c 0017                       _clear_lcd 0B55               __size_of_buzz_one 0008  
     __size_of_i2c_Write_string 001B                        ?___fladd 0039                        ?___flmul 0020  
                      ?___fltol 004D                      ?__Umul8_16 0070                  _RX_one_timeout 07C1  
                     __pswtext1 07F8                       __pswtext2 07EC                        _CCPTMRS2 029F  
              __CFG_WDTE$SWDTEN 0000               ??_init_i2c_lcd_5v 0072         __size_of_lcd_set_cursor 0018  
                ___wmul@product 0074                       clear_ram0 1583                        _PIE1bits 0091  
                      _PCONbits 0096                        _PIR1bits 0011                      ?_clear_lcd 0070  
          __end_of_print_screen 0AE5              print_screen@bottom 0076                        _SSP1CON1 0215  
                      _SSP1CON2 0216            __end_of_testjig_done 0AA7          __end_of_RX_one_timeout 07EC  
                  ??_digitalpot 0071                        _SSP1STAT 0214                    _pickit_timer 00AC  
                  _pickit_state 00BB                   _ten_thou_conv 159E                 ??_debug_fast_tx 0072  
                    _ADCON0bits 009D               ___wmul@multiplier 0070                     ??_i2c_Start 0070  
                   ??_i2c_Write 0070                  debug_fast_tx@i 0072               testjig_done@state 007C  
                      _i2c_Stop 0BE6                   ??_print_error 0020              __end_of_digitalpot 0B82  
         ADC_get_val@return_val 0074                   Vout_set@Volts 0074                 ?_RX_one_timeout 0070  
                   ??__Umul8_16 0073                 RX_one_timeout@i 0071                    pnum$maintext 000C  
              __size_of___fladd 0151                  ?_ten_thou_conv 0076                __size_of___flmul 0182  
              __size_of___fltol 0053       __size_of_power_supply_set 0020                        _Vout_set 08C0  
       init_i2c_lcd_5v@contrast 0074               Vout_set@digi_step 0076                        ___xxtofl 0F8C  
                      __ptext10 0BEB                        __ptext11 08F7                        __ptext20 0805  
                      __ptext12 159E                        __ptext21 0C13                        __ptext13 1681  
                      __ptext30 0BD5                        __ptext22 0F8C                        __ptext14 165E  
                      __ptext31 0BE6                        __ptext23 086D                        __ptext15 08DF  
                      __ptext32 0BE1                        __ptext24 0DC1                        __ptext16 0972  
                      __ptext33 0823                        __ptext25 0F43                        __ptext17 0B9D  
                      __ptext34 07C1                        __ptext26 0C70                        __ptext18 080C  
                      __ptext35 0847                        __ptext27 0C5E                        __ptext19 1589  
                      __ptext28 08C0                        __ptext29 0B6A                    _SSP1CON2bits 0216  
                      _init_ADC 0805                        _init_i2c 080C                   __size_of_main F12B  
                      _buzz_one 0BEB                    ?_ADC_get_val 0070                     ??_clear_lcd 0071  
           __end_of_print_error 0B44                _i2c_Write_string 0B82                        _ten_thou 006F  
                      _tj_timer 00B0          __size_of_lcd_print_int 007B        __size_of_i2c_second_line 0011  
                      int$flags 007E                    _SSP1STATbits 0214                        main@temp 0064  
       __size_of_i2c_first_line 0011              _uart_receive_timer 00B2             get_30v_current@temp 0059  
                    _INTCONbits 000B        __size_of_get_30v_current 004B                        intlevel1 0000  
                _lcd_set_cursor 08DF               lcd_set_cursor@col 0071               lcd_set_cursor@row 0072  
         __size_of_print_screen 0011               __CFG_CLKOUTEN$OFF 0000           __size_of_testjig_done 0128  
        power_supply_set@supply 0070                 ??_ten_thou_conv 0078          __Umul8_16@multiplicand 0070  
                    _OPTION_REG 0095                   _testjig_timer 00AE                 _init_i2c_lcd_5v 0B9D  
                 _lcd_print_int 08F7                 _curent_sink_val 00A4                    _print_screen 0AD4  
        __end_of_lcd_set_cursor 08F7                   ___fladd@signs 0049                    _testjig_done 097F  
             _init_current_sink 1589                      RX_one@data 0072                     _print_error 0AF6  
                  ___fladd@aexp 004A                    ___fladd@bexp 004B            __Umul8_16@multiplier 0075  
            ?_init_current_sink 0070               __Umul8_16@product 0073  
