

Microchip Technology PIC PRO Macro Assembler V1.35 build -356382666 
                                                                                               Mon Feb 25 08:28:08 2019

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	text12,local,class=CODE,merge=1,delta=2
    17                           	psect	text18,local,class=CODE,merge=1,delta=2
    18                           	psect	text19,local,class=CODE,merge=1,delta=2
    19                           	psect	text20,local,class=CODE,merge=1,delta=2
    20                           	psect	text21,local,class=CODE,merge=1,delta=2
    21                           	psect	text23,local,class=CODE,merge=1,delta=2
    22                           	psect	text28,local,class=CODE,merge=1,delta=2
    23                           	psect	swtext2,local,class=CONST,delta=2
    24                           	psect	text33,local,class=CODE,merge=1,delta=2
    25                           	psect	text34,local,class=CODE,merge=1,delta=2
    26                           	psect	text35,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	swtext3,local,class=CONST,delta=2
    29                           	psect	pa_nodes,global,class=CODE,delta=2
    30                           	psect	maintext_split_1,global,class=CODE,merge=1,split=1,delta=2
    31                           	psect	maintext_split_2,global,class=CODE,merge=1,split=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  000F                     	;# 
    49  0010                     	;# 
    50  0011                     	;# 
    51  0012                     	;# 
    52  0013                     	;# 
    53  0014                     	;# 
    54  0015                     	;# 
    55  0016                     	;# 
    56  0016                     	;# 
    57  0017                     	;# 
    58  0018                     	;# 
    59  0019                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001C                     	;# 
    63  008C                     	;# 
    64  008D                     	;# 
    65  008E                     	;# 
    66  008F                     	;# 
    67  0090                     	;# 
    68  0091                     	;# 
    69  0092                     	;# 
    70  0093                     	;# 
    71  0094                     	;# 
    72  0095                     	;# 
    73  0096                     	;# 
    74  0097                     	;# 
    75  0099                     	;# 
    76  009A                     	;# 
    77  009B                     	;# 
    78  009B                     	;# 
    79  009C                     	;# 
    80  009D                     	;# 
    81  009E                     	;# 
    82  010C                     	;# 
    83  010D                     	;# 
    84  010E                     	;# 
    85  010F                     	;# 
    86  0110                     	;# 
    87  0116                     	;# 
    88  0117                     	;# 
    89  011D                     	;# 
    90  018C                     	;# 
    91  018D                     	;# 
    92  018F                     	;# 
    93  0190                     	;# 
    94  0191                     	;# 
    95  0191                     	;# 
    96  0192                     	;# 
    97  0193                     	;# 
    98  0193                     	;# 
    99  0194                     	;# 
   100  0195                     	;# 
   101  0196                     	;# 
   102  0197                     	;# 
   103  0199                     	;# 
   104  0199                     	;# 
   105  0199                     	;# 
   106  019A                     	;# 
   107  019A                     	;# 
   108  019A                     	;# 
   109  019B                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019C                     	;# 
   115  019C                     	;# 
   116  019C                     	;# 
   117  019D                     	;# 
   118  019D                     	;# 
   119  019D                     	;# 
   120  019E                     	;# 
   121  019E                     	;# 
   122  019E                     	;# 
   123  019F                     	;# 
   124  019F                     	;# 
   125  019F                     	;# 
   126  020D                     	;# 
   127  020F                     	;# 
   128  0210                     	;# 
   129  0211                     	;# 
   130  0211                     	;# 
   131  0212                     	;# 
   132  0212                     	;# 
   133  0213                     	;# 
   134  0213                     	;# 
   135  0214                     	;# 
   136  0214                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0215                     	;# 
   140  0216                     	;# 
   141  0216                     	;# 
   142  0217                     	;# 
   143  0217                     	;# 
   144  0219                     	;# 
   145  021A                     	;# 
   146  021B                     	;# 
   147  021C                     	;# 
   148  021D                     	;# 
   149  021E                     	;# 
   150  021F                     	;# 
   151  028C                     	;# 
   152  028D                     	;# 
   153  0291                     	;# 
   154  0291                     	;# 
   155  0292                     	;# 
   156  0293                     	;# 
   157  0298                     	;# 
   158  0298                     	;# 
   159  0299                     	;# 
   160  029A                     	;# 
   161  029D                     	;# 
   162  029E                     	;# 
   163  029F                     	;# 
   164  030C                     	;# 
   165  030D                     	;# 
   166  0311                     	;# 
   167  0311                     	;# 
   168  0312                     	;# 
   169  0313                     	;# 
   170  0318                     	;# 
   171  0318                     	;# 
   172  0319                     	;# 
   173  031A                     	;# 
   174  031C                     	;# 
   175  031C                     	;# 
   176  031D                     	;# 
   177  031E                     	;# 
   178  038C                     	;# 
   179  038D                     	;# 
   180  0394                     	;# 
   181  0395                     	;# 
   182  0396                     	;# 
   183  040C                     	;# 
   184  040D                     	;# 
   185  0411                     	;# 
   186  0411                     	;# 
   187  0412                     	;# 
   188  0413                     	;# 
   189  0414                     	;# 
   190  0415                     	;# 
   191  0416                     	;# 
   192  0417                     	;# 
   193  0418                     	;# 
   194  0418                     	;# 
   195  0419                     	;# 
   196  041A                     	;# 
   197  041B                     	;# 
   198  041C                     	;# 
   199  041D                     	;# 
   200  041E                     	;# 
   201  048D                     	;# 
   202  0491                     	;# 
   203  0491                     	;# 
   204  0492                     	;# 
   205  0492                     	;# 
   206  0493                     	;# 
   207  0493                     	;# 
   208  0493                     	;# 
   209  0494                     	;# 
   210  0494                     	;# 
   211  0495                     	;# 
   212  0495                     	;# 
   213  0496                     	;# 
   214  0496                     	;# 
   215  0497                     	;# 
   216  0497                     	;# 
   217  0595                     	;# 
   218  0596                     	;# 
   219  0597                     	;# 
   220  059C                     	;# 
   221  059D                     	;# 
   222  059E                     	;# 
   223  0611                     	;# 
   224  0611                     	;# 
   225  0612                     	;# 
   226  0613                     	;# 
   227  0614                     	;# 
   228  0614                     	;# 
   229  0615                     	;# 
   230  0616                     	;# 
   231  0617                     	;# 
   232  0617                     	;# 
   233  0618                     	;# 
   234  0619                     	;# 
   235  061A                     	;# 
   236  061A                     	;# 
   237  061B                     	;# 
   238  061C                     	;# 
   239  061D                     	;# 
   240  061D                     	;# 
   241  061E                     	;# 
   242  061F                     	;# 
   243  0FE4                     	;# 
   244  0FE5                     	;# 
   245  0FE6                     	;# 
   246  0FE7                     	;# 
   247  0FE8                     	;# 
   248  0FE9                     	;# 
   249  0FEA                     	;# 
   250  0FEB                     	;# 
   251  0FED                     	;# 
   252  0FEE                     	;# 
   253  0FEF                     	;# 
   254                           
   255                           	psect	idataBANK1
   256  0000                     __pidataBANK1:	
   257                           
   258                           	psect	nvBANK1
   259  00B1                     __pnvBANK1:	
   260  00B1                     _buzz_timer:	
   261  00B1                     	ds	2
   262  00B3                     _pickit_state:	
   263  00B3                     	ds	1
   264  000B                     _INTCONbits	set	11
   265  0011                     _PIR1bits	set	17
   266  000C                     _PORTA	set	12
   267  000D                     _PORTB	set	13
   268  000E                     _PORTC	set	14
   269  000F                     _PORTD	set	15
   270  0010                     _PORTE	set	16
   271  001B                     _PR2	set	27
   272  001C                     _T2CON	set	28
   273  0015                     _TMR0	set	21
   274  005F                     _GIE	set	95
   275  0062                     _RA2	set	98
   276  0064                     _RA4	set	100
   277  0065                     _RA5	set	101
   278  0080                     _RE0	set	128
   279  0084                     _RE4	set	132
   280  0085                     _RE5	set	133
   281  0086                     _RE6	set	134
   282  005D                     _TMR0IE	set	93
   283  005A                     _TMR0IF	set	90
   284  009D                     _ADCON0	set	157
   285  009D                     _ADCON0bits	set	157
   286  009E                     _ADCON1	set	158
   287  009C                     _ADRESH	set	156
   288  009B                     _ADRESL	set	155
   289  0095                     _OPTION_REG	set	149
   290  0099                     _OSCCON	set	153
   291  0096                     _PCONbits	set	150
   292  0091                     _PIE1bits	set	145
   293  008C                     _TRISA	set	140
   294  008D                     _TRISB	set	141
   295  008E                     _TRISC	set	142
   296  008F                     _TRISD	set	143
   297  0090                     _TRISE	set	144
   298  0473                     _TRISC3	set	1139
   299  0474                     _TRISC4	set	1140
   300  0117                     _FVRCON	set	279
   301  0866                     _LATA6	set	2150
   302  0867                     _LATA7	set	2151
   303  086D                     _LATB5	set	2157
   304  0872                     _LATC2	set	2162
   305  0875                     _LATC5	set	2165
   306  0876                     _LATC6	set	2166
   307  0877                     _LATC7	set	2167
   308  087A                     _LATD2	set	2170
   309  087C                     _LATD4	set	2172
   310  087D                     _LATD5	set	2173
   311  087E                     _LATD6	set	2174
   312  018C                     _ANSELA	set	396
   313  018D                     _ANSELB	set	397
   314  018F                     _ANSELD	set	399
   315  0190                     _ANSELE	set	400
   316  0212                     _SSP1ADD	set	530
   317  0211                     _SSP1BUF	set	529
   318  0215                     _SSP1CON1	set	533
   319  0216                     _SSP1CON2	set	534
   320  0216                     _SSP1CON2bits	set	534
   321  0214                     _SSP1STAT	set	532
   322  0214                     _SSP1STATbits	set	532
   323  020D                     _WPUB	set	525
   324  020F                     _WPUD	set	527
   325  0210                     _WPUE	set	528
   326  029F                     _CCPTMRS2	set	671
   327  028C                     _PORTF	set	652
   328  028D                     _PORTG	set	653
   329  1460                     _RF0	set	5216
   330  1461                     _RF1	set	5217
   331  1462                     _RF2	set	5218
   332  1463                     _RF3	set	5219
   333  1465                     _RF5	set	5221
   334  1469                     _RG1	set	5225
   335  146B                     _RG3	set	5227
   336  030C                     _TRISF	set	780
   337  030D                     _TRISG	set	781
   338  1868                     _TRISG0	set	6248
   339  1C64                     _LATF4	set	7268
   340  1C68                     _LATG0	set	7272
   341  040C                     _ANSELF	set	1036
   342  040D                     _ANSELG	set	1037
   343  0596                     _PR8	set	1430
   344  0597                     _T8CON	set	1431
   345  061C                     _CCP9CON	set	1564
   346  061A                     _CCPR9L	set	1562
   347                           
   348                           	psect	stringtext
   349  1000                     __pstringtext:	
   350  1000                     STR_41:	
   351  1000  3452               	retlw	82	;'R'
   352  1001  3465               	retlw	101	;'e'
   353  1002  346C               	retlw	108	;'l'
   354  1003  3461               	retlw	97	;'a'
   355  1004  3479               	retlw	121	;'y'
   356  1005  3420               	retlw	32	;' '
   357  1006  3464               	retlw	100	;'d'
   358  1007  3465               	retlw	101	;'e'
   359  1008  342D               	retlw	45	;'-'
   360  1009  3465               	retlw	101	;'e'
   361  100A  346E               	retlw	110	;'n'
   362  100B  3465               	retlw	101	;'e'
   363  100C  3472               	retlw	114	;'r'
   364  100D  3467               	retlw	103	;'g'
   365  100E  3469               	retlw	105	;'i'
   366  100F  347A               	retlw	122	;'z'
   367  1010  3465               	retlw	101	;'e'
   368  1011  3464               	retlw	100	;'d'
   369  1012  3400               	retlw	0
   370  1013                     STR_15:	
   371  1013  3450               	retlw	80	;'P'
   372  1014  3469               	retlw	105	;'i'
   373  1015  3463               	retlw	99	;'c'
   374  1016  346B               	retlw	107	;'k'
   375  1017  3469               	retlw	105	;'i'
   376  1018  3474               	retlw	116	;'t'
   377  1019  3420               	retlw	32	;' '
   378  101A  3450               	retlw	80	;'P'
   379  101B  3472               	retlw	114	;'r'
   380  101C  346F               	retlw	111	;'o'
   381  101D  3467               	retlw	103	;'g'
   382  101E  3472               	retlw	114	;'r'
   383  101F  3461               	retlw	97	;'a'
   384  1020  346D               	retlw	109	;'m'
   385  1021  346D               	retlw	109	;'m'
   386  1022  3469               	retlw	105	;'i'
   387  1023  346E               	retlw	110	;'n'
   388  1024  3467               	retlw	103	;'g'
   389  1025  3400               	retlw	0
   390  1026                     STR_26:	
   391  1026  3445               	retlw	69	;'E'
   392  1027  3445               	retlw	69	;'E'
   393  1028  3450               	retlw	80	;'P'
   394  1029  3452               	retlw	82	;'R'
   395  102A  344F               	retlw	79	;'O'
   396  102B  344D               	retlw	77	;'M'
   397  102C  3420               	retlw	32	;' '
   398  102D  3472               	retlw	114	;'r'
   399  102E  3465               	retlw	101	;'e'
   400  102F  3461               	retlw	97	;'a'
   401  1030  3464               	retlw	100	;'d'
   402  1031  342F               	retlw	47	;'/'
   403  1032  3477               	retlw	119	;'w'
   404  1033  3472               	retlw	114	;'r'
   405  1034  3469               	retlw	105	;'i'
   406  1035  3474               	retlw	116	;'t'
   407  1036  3465               	retlw	101	;'e'
   408  1037  3400               	retlw	0
   409  1038                     STR_36:	
   410  1038  3420               	retlw	32	;' '
   411  1039  3445               	retlw	69	;'E'
   412  103A  3472               	retlw	114	;'r'
   413  103B  3472               	retlw	114	;'r'
   414  103C  346F               	retlw	111	;'o'
   415  103D  3472               	retlw	114	;'r'
   416  103E  3420               	retlw	32	;' '
   417  103F  344D               	retlw	77	;'M'
   418  1040  3465               	retlw	101	;'e'
   419  1041  346D               	retlw	109	;'m'
   420  1042  345F               	retlw	95	;'_'
   421  1043  3463               	retlw	99	;'c'
   422  1044  346F               	retlw	111	;'o'
   423  1045  3470               	retlw	112	;'p'
   424  1046  3469               	retlw	105	;'i'
   425  1047  3465               	retlw	101	;'e'
   426  1048  3472               	retlw	114	;'r'
   427  1049  3400               	retlw	0
   428  104A                     STR_181:	
   429  104A  344D               	retlw	77	;'M'
   430  104B  3475               	retlw	117	;'u'
   431  104C  346C               	retlw	108	;'l'
   432  104D  3474               	retlw	116	;'t'
   433  104E  3469               	retlw	105	;'i'
   434  104F  345F               	retlw	95	;'_'
   435  1050  3452               	retlw	82	;'R'
   436  1051  3458               	retlw	88	;'X'
   437  1052  3420               	retlw	32	;' '
   438  1053  3454               	retlw	84	;'T'
   439  1054  3465               	retlw	101	;'e'
   440  1055  3473               	retlw	115	;'s'
   441  1056  3474               	retlw	116	;'t'
   442  1057  346A               	retlw	106	;'j'
   443  1058  3469               	retlw	105	;'i'
   444  1059  3467               	retlw	103	;'g'
   445  105A  3400               	retlw	0
   446  105B                     STR_136:	
   447  105B  3444               	retlw	68	;'D'
   448  105C  3465               	retlw	101	;'e'
   449  105D  3463               	retlw	99	;'c'
   450  105E  346F               	retlw	111	;'o'
   451  105F  3464               	retlw	100	;'d'
   452  1060  3465               	retlw	101	;'e'
   453  1061  3420               	retlw	32	;' '
   454  1062  344F               	retlw	79	;'O'
   455  1063  346C               	retlw	108	;'l'
   456  1064  3464               	retlw	100	;'d'
   457  1065  3420               	retlw	32	;' '
   458  1066  342D               	retlw	45	;'-'
   459  1067  3446               	retlw	70	;'F'
   460  1068  3461               	retlw	97	;'a'
   461  1069  3469               	retlw	105	;'i'
   462  106A  346C               	retlw	108	;'l'
   463  106B  3400               	retlw	0
   464  106C                     STR_173:	
   465  106C  3454               	retlw	84	;'T'
   466  106D  3465               	retlw	101	;'e'
   467  106E  3473               	retlw	115	;'s'
   468  106F  3474               	retlw	116	;'t'
   469  1070  346A               	retlw	106	;'j'
   470  1071  3469               	retlw	105	;'i'
   471  1072  3467               	retlw	103	;'g'
   472  1073  3420               	retlw	32	;' '
   473  1074  3450               	retlw	80	;'P'
   474  1075  346F               	retlw	111	;'o'
   475  1076  3477               	retlw	119	;'w'
   476  1077  3465               	retlw	101	;'e'
   477  1078  3472               	retlw	114	;'r'
   478  1079  342D               	retlw	45	;'-'
   479  107A  3475               	retlw	117	;'u'
   480  107B  3470               	retlw	112	;'p'
   481  107C  3400               	retlw	0
   482  107D                     STR_2:	
   483  107D  3454               	retlw	84	;'T'
   484  107E  3465               	retlw	101	;'e'
   485  107F  3473               	retlw	115	;'s'
   486  1080  3474               	retlw	116	;'t'
   487  1081  342D               	retlw	45	;'-'
   488  1082  344A               	retlw	74	;'J'
   489  1083  3469               	retlw	105	;'i'
   490  1084  3467               	retlw	103	;'g'
   491  1085  347C               	retlw	124	;'|'
   492  1086  3453               	retlw	83	;'S'
   493  1087  3474               	retlw	116	;'t'
   494  1088  3461               	retlw	97	;'a'
   495  1089  3472               	retlw	114	;'r'
   496  108A  3474               	retlw	116	;'t'
   497  108B  3475               	retlw	117	;'u'
   498  108C  3470               	retlw	112	;'p'
   499  108D  3400               	retlw	0
   500  108E                     STR_192:	
   501  108E  3420               	retlw	32	;' '
   502  108F  3474               	retlw	116	;'t'
   503  1090  346F               	retlw	111	;'o'
   504  1091  3420               	retlw	32	;' '
   505  1092  3472               	retlw	114	;'r'
   506  1093  3465               	retlw	101	;'e'
   507  1094  3473               	retlw	115	;'s'
   508  1095  3474               	retlw	116	;'t'
   509  1096  3461               	retlw	97	;'a'
   510  1097  3472               	retlw	114	;'r'
   511  1098  3474               	retlw	116	;'t'
   512  1099  3420               	retlw	32	;' '
   513  109A  3474               	retlw	116	;'t'
   514  109B  3465               	retlw	101	;'e'
   515  109C  3473               	retlw	115	;'s'
   516  109D  3474               	retlw	116	;'t'
   517  109E  3400               	retlw	0
   518  109F                     STR_153:	
   519  109F  3437               	retlw	55	;'7'
   520  10A0  3473               	retlw	115	;'s'
   521  10A1  3465               	retlw	101	;'e'
   522  10A2  3467               	retlw	103	;'g'
   523  10A3  342C               	retlw	44	;','
   524  10A4  3420               	retlw	32	;' '
   525  10A5  3462               	retlw	98	;'b'
   526  10A6  3475               	retlw	117	;'u'
   527  10A7  347A               	retlw	122	;'z'
   528  10A8  347A               	retlw	122	;'z'
   529  10A9  3465               	retlw	101	;'e'
   530  10AA  3472               	retlw	114	;'r'
   531  10AB  342C               	retlw	44	;','
   532  10AC  3420               	retlw	32	;' '
   533  10AD  3420               	retlw	32	;' '
   534  10AE  3400               	retlw	0
   535  10AF                     STR_134:	
   536  10AF  3444               	retlw	68	;'D'
   537  10B0  3465               	retlw	101	;'e'
   538  10B1  3463               	retlw	99	;'c'
   539  10B2  346F               	retlw	111	;'o'
   540  10B3  3464               	retlw	100	;'d'
   541  10B4  3465               	retlw	101	;'e'
   542  10B5  3420               	retlw	32	;' '
   543  10B6  344E               	retlw	78	;'N'
   544  10B7  3465               	retlw	101	;'e'
   545  10B8  3477               	retlw	119	;'w'
   546  10B9  3420               	retlw	32	;' '
   547  10BA  342D               	retlw	45	;'-'
   548  10BB  3420               	retlw	32	;' '
   549  10BC  344F               	retlw	79	;'O'
   550  10BD  344B               	retlw	75	;'K'
   551  10BE  3400               	retlw	0
   552  10BF                     STR_45:	
   553  10BF  3452               	retlw	82	;'R'
   554  10C0  3465               	retlw	101	;'e'
   555  10C1  346C               	retlw	108	;'l'
   556  10C2  3461               	retlw	97	;'a'
   557  10C3  3479               	retlw	121	;'y'
   558  10C4  3420               	retlw	32	;' '
   559  10C5  3465               	retlw	101	;'e'
   560  10C6  346E               	retlw	110	;'n'
   561  10C7  3465               	retlw	101	;'e'
   562  10C8  3472               	retlw	114	;'r'
   563  10C9  3467               	retlw	103	;'g'
   564  10CA  3469               	retlw	105	;'i'
   565  10CB  347A               	retlw	122	;'z'
   566  10CC  3465               	retlw	101	;'e'
   567  10CD  3464               	retlw	100	;'d'
   568  10CE  3400               	retlw	0
   569  10CF                     STR_108:	
   570  10CF  3420               	retlw	32	;' '
   571  10D0  3445               	retlw	69	;'E'
   572  10D1  3472               	retlw	114	;'r'
   573  10D2  3472               	retlw	114	;'r'
   574  10D3  346F               	retlw	111	;'o'
   575  10D4  3472               	retlw	114	;'r'
   576  10D5  3420               	retlw	32	;' '
   577  10D6  342D               	retlw	45	;'-'
   578  10D7  3420               	retlw	32	;' '
   579  10D8  344D               	retlw	77	;'M'
   580  10D9  3469               	retlw	105	;'i'
   581  10DA  3463               	retlw	99	;'c'
   582  10DB  3472               	retlw	114	;'r'
   583  10DC  3465               	retlw	101	;'e'
   584  10DD  346C               	retlw	108	;'l'
   585  10DE  3400               	retlw	0
   586  10DF                     STR_161:	
   587  10DF  344D               	retlw	77	;'M'
   588  10E0  3465               	retlw	101	;'e'
   589  10E1  346D               	retlw	109	;'m'
   590  10E2  345F               	retlw	95	;'_'
   591  10E3  3443               	retlw	67	;'C'
   592  10E4  346F               	retlw	111	;'o'
   593  10E5  3470               	retlw	112	;'p'
   594  10E6  3469               	retlw	105	;'i'
   595  10E7  3465               	retlw	101	;'e'
   596  10E8  3472               	retlw	114	;'r'
   597  10E9  3420               	retlw	32	;' '
   598  10EA  3450               	retlw	80	;'P'
   599  10EB  3461               	retlw	97	;'a'
   600  10EC  3473               	retlw	115	;'s'
   601  10ED  3473               	retlw	115	;'s'
   602  10EE  3400               	retlw	0
   603  10EF                     STR_60:	
   604  10EF  3450               	retlw	80	;'P'
   605  10F0  3454               	retlw	84	;'T'
   606  10F1  3443               	retlw	67	;'C'
   607  10F2  3420               	retlw	32	;' '
   608  10F3  3445               	retlw	69	;'E'
   609  10F4  3472               	retlw	114	;'r'
   610  10F5  3472               	retlw	114	;'r'
   611  10F6  346F               	retlw	111	;'o'
   612  10F7  3472               	retlw	114	;'r'
   613  10F8  3420               	retlw	32	;' '
   614  10F9  3472               	retlw	114	;'r'
   615  10FA  3465               	retlw	101	;'e'
   616  10FB  3473               	retlw	115	;'s'
   617  10FC  3465               	retlw	101	;'e'
   618  10FD  3474               	retlw	116	;'t'
   619  10FE  3400               	retlw	0
   620  10FF                     STR_5:	
   621  10FF  3450               	retlw	80	;'P'
   622  1100  346F               	retlw	111	;'o'
   623  1101  3477               	retlw	119	;'w'
   624  1102  3465               	retlw	101	;'e'
   625  1103  3472               	retlw	114	;'r'
   626  1104  3469               	retlw	105	;'i'
   627  1105  346E               	retlw	110	;'n'
   628  1106  3467               	retlw	103	;'g'
   629  1107  3420               	retlw	32	;' '
   630  1108  3462               	retlw	98	;'b'
   631  1109  346F               	retlw	111	;'o'
   632  110A  3461               	retlw	97	;'a'
   633  110B  3472               	retlw	114	;'r'
   634  110C  3464               	retlw	100	;'d'
   635  110D  3400               	retlw	0
   636  110E                     STR_138:	
   637  110E  3445               	retlw	69	;'E'
   638  110F  3472               	retlw	114	;'r'
   639  1110  3472               	retlw	114	;'r'
   640  1111  346F               	retlw	111	;'o'
   641  1112  3472               	retlw	114	;'r'
   642  1113  3420               	retlw	32	;' '
   643  1114  342D               	retlw	45	;'-'
   644  1115  3420               	retlw	32	;' '
   645  1116  3444               	retlw	68	;'D'
   646  1117  3465               	retlw	101	;'e'
   647  1118  3463               	retlw	99	;'c'
   648  1119  346F               	retlw	111	;'o'
   649  111A  3464               	retlw	100	;'d'
   650  111B  3465               	retlw	101	;'e'
   651  111C  3400               	retlw	0
   652  111D                     STR_175:	
   653  111D  3443               	retlw	67	;'C'
   654  111E  346F               	retlw	111	;'o'
   655  111F  346E               	retlw	110	;'n'
   656  1120  3464               	retlw	100	;'d'
   657  1121  346F               	retlw	111	;'o'
   658  1122  3433               	retlw	51	;'3'
   659  1123  3420               	retlw	32	;' '
   660  1124  3454               	retlw	84	;'T'
   661  1125  3465               	retlw	101	;'e'
   662  1126  3473               	retlw	115	;'s'
   663  1127  3474               	retlw	116	;'t'
   664  1128  346A               	retlw	106	;'j'
   665  1129  3469               	retlw	105	;'i'
   666  112A  3467               	retlw	103	;'g'
   667  112B  3400               	retlw	0
   668  112C                     STR_62:	
   669  112C  3450               	retlw	80	;'P'
   670  112D  3454               	retlw	84	;'T'
   671  112E  3443               	retlw	67	;'C'
   672  112F  3420               	retlw	32	;' '
   673  1130  3445               	retlw	69	;'E'
   674  1131  3472               	retlw	114	;'r'
   675  1132  3472               	retlw	114	;'r'
   676  1133  346F               	retlw	111	;'o'
   677  1134  3472               	retlw	114	;'r'
   678  1135  3420               	retlw	32	;' '
   679  1136  3474               	retlw	116	;'t'
   680  1137  3472               	retlw	114	;'r'
   681  1138  3469               	retlw	105	;'i'
   682  1139  3470               	retlw	112	;'p'
   683  113A  3400               	retlw	0
   684  113B                     STR_132:	
   685  113B  3420               	retlw	32	;' '
   686  113C  3463               	retlw	99	;'c'
   687  113D  3479               	retlw	121	;'y'
   688  113E  3463               	retlw	99	;'c'
   689  113F  346C               	retlw	108	;'l'
   690  1140  3469               	retlw	105	;'i'
   691  1141  346E               	retlw	110	;'n'
   692  1142  3467               	retlw	103	;'g'
   693  1143  3420               	retlw	32	;' '
   694  1144  3470               	retlw	112	;'p'
   695  1145  346F               	retlw	111	;'o'
   696  1146  3477               	retlw	119	;'w'
   697  1147  3465               	retlw	101	;'e'
   698  1148  3472               	retlw	114	;'r'
   699  1149  3400               	retlw	0
   700  114A                     STR_7:	
   701  114A  3431               	retlw	49	;'1'
   702  114B  3436               	retlw	54	;'6'
   703  114C  3476               	retlw	118	;'v'
   704  114D  342D               	retlw	45	;'-'
   705  114E  3431               	retlw	49	;'1'
   706  114F  3432               	retlw	50	;'2'
   707  1150  3476               	retlw	118	;'v'
   708  1151  3420               	retlw	32	;' '
   709  1152  3473               	retlw	115	;'s'
   710  1153  3475               	retlw	117	;'u'
   711  1154  3470               	retlw	112	;'p'
   712  1155  3470               	retlw	112	;'p'
   713  1156  346C               	retlw	108	;'l'
   714  1157  3479               	retlw	121	;'y'
   715  1158  3400               	retlw	0
   716  1159                     STR_145:	
   717  1159  344D               	retlw	77	;'M'
   718  115A  3461               	retlw	97	;'a'
   719  115B  3473               	retlw	115	;'s'
   720  115C  3474               	retlw	116	;'t'
   721  115D  3465               	retlw	101	;'e'
   722  115E  3472               	retlw	114	;'r'
   723  115F  3420               	retlw	32	;' '
   724  1160  3445               	retlw	69	;'E'
   725  1161  3472               	retlw	114	;'r'
   726  1162  3461               	retlw	97	;'a'
   727  1163  3473               	retlw	115	;'s'
   728  1164  3465               	retlw	101	;'e'
   729  1165  3420               	retlw	32	;' '
   730  1166  3400               	retlw	0
   731  1167                     STR_34:	
   732  1167  3420               	retlw	32	;' '
   733  1168  3445               	retlw	69	;'E'
   734  1169  3472               	retlw	114	;'r'
   735  116A  3472               	retlw	114	;'r'
   736  116B  346F               	retlw	111	;'o'
   737  116C  3472               	retlw	114	;'r'
   738  116D  3420               	retlw	32	;' '
   739  116E  3443               	retlw	67	;'C'
   740  116F  346F               	retlw	111	;'o'
   741  1170  346E               	retlw	110	;'n'
   742  1171  3464               	retlw	100	;'d'
   743  1172  346F               	retlw	111	;'o'
   744  1173  3433               	retlw	51	;'3'
   745  1174  3400               	retlw	0
   746  1175                     STR_4:	
   747  1175  342D               	retlw	45	;'-'
   748  1176  343E               	retlw	62	;'>'
   749  1177  3420               	retlw	32	;' '
   750  1178  3449               	retlw	73	;'I'
   751  1179  346E               	retlw	110	;'n'
   752  117A  3473               	retlw	115	;'s'
   753  117B  3465               	retlw	101	;'e'
   754  117C  3472               	retlw	114	;'r'
   755  117D  3474               	retlw	116	;'t'
   756  117E  3420               	retlw	32	;' '
   757  117F  3450               	retlw	80	;'P'
   758  1180  3443               	retlw	67	;'C'
   759  1181  3442               	retlw	66	;'B'
   760  1182  3400               	retlw	0
   761  1183                     STR_158:	
   762  1183  3420               	retlw	32	;' '
   763  1184  3452               	retlw	82	;'R'
   764  1185  3465               	retlw	101	;'e'
   765  1186  346D               	retlw	109	;'m'
   766  1187  346F               	retlw	111	;'o'
   767  1188  3476               	retlw	118	;'v'
   768  1189  3465               	retlw	101	;'e'
   769  118A  3420               	retlw	32	;' '
   770  118B  3462               	retlw	98	;'b'
   771  118C  346F               	retlw	111	;'o'
   772  118D  3461               	retlw	97	;'a'
   773  118E  3472               	retlw	114	;'r'
   774  118F  3464               	retlw	100	;'d'
   775  1190  3400               	retlw	0
   776  1191                     STR_106:	
   777  1191  3420               	retlw	32	;' '
   778  1192  3445               	retlw	69	;'E'
   779  1193  3472               	retlw	114	;'r'
   780  1194  3472               	retlw	114	;'r'
   781  1195  346F               	retlw	111	;'o'
   782  1196  3472               	retlw	114	;'r'
   783  1197  3420               	retlw	32	;' '
   784  1198  342D               	retlw	45	;'-'
   785  1199  3420               	retlw	32	;' '
   786  119A  3448               	retlw	72	;'H'
   787  119B  3469               	retlw	105	;'i'
   788  119C  3467               	retlw	103	;'g'
   789  119D  3468               	retlw	104	;'h'
   790  119E  3400               	retlw	0
   791  119F                     STR_163:	
   792  119F  344D               	retlw	77	;'M'
   793  11A0  3475               	retlw	117	;'u'
   794  11A1  346C               	retlw	108	;'l'
   795  11A2  3474               	retlw	116	;'t'
   796  11A3  3469               	retlw	105	;'i'
   797  11A4  345F               	retlw	95	;'_'
   798  11A5  3452               	retlw	82	;'R'
   799  11A6  3458               	retlw	88	;'X'
   800  11A7  3420               	retlw	32	;' '
   801  11A8  3450               	retlw	80	;'P'
   802  11A9  3461               	retlw	97	;'a'
   803  11AA  3473               	retlw	115	;'s'
   804  11AB  3473               	retlw	115	;'s'
   805  11AC  3400               	retlw	0
   806  11AD                     STR_13:	
   807  11AD  3431               	retlw	49	;'1'
   808  11AE  3436               	retlw	54	;'6'
   809  11AF  3476               	retlw	118	;'v'
   810  11B0  342D               	retlw	45	;'-'
   811  11B1  3435               	retlw	53	;'5'
   812  11B2  3476               	retlw	118	;'v'
   813  11B3  3420               	retlw	32	;' '
   814  11B4  3473               	retlw	115	;'s'
   815  11B5  3475               	retlw	117	;'u'
   816  11B6  3470               	retlw	112	;'p'
   817  11B7  3470               	retlw	112	;'p'
   818  11B8  346C               	retlw	108	;'l'
   819  11B9  3479               	retlw	121	;'y'
   820  11BA  3400               	retlw	0
   821  11BB                     STR_31:	
   822  11BB  3454               	retlw	84	;'T'
   823  11BC  3465               	retlw	101	;'e'
   824  11BD  3473               	retlw	115	;'s'
   825  11BE  3474               	retlw	116	;'t'
   826  11BF  3420               	retlw	32	;' '
   827  11C0  3445               	retlw	69	;'E'
   828  11C1  3445               	retlw	69	;'E'
   829  11C2  3450               	retlw	80	;'P'
   830  11C3  3452               	retlw	82	;'R'
   831  11C4  344F               	retlw	79	;'O'
   832  11C5  344D               	retlw	77	;'M'
   833  11C6  3420               	retlw	32	;' '
   834  11C7  3400               	retlw	0
   835  11C8                     STR_141:	
   836  11C8  3454               	retlw	84	;'T'
   837  11C9  3434               	retlw	52	;'4'
   838  11CA  3420               	retlw	32	;' '
   839  11CB  3462               	retlw	98	;'b'
   840  11CC  3475               	retlw	117	;'u'
   841  11CD  3473               	retlw	115	;'s'
   842  11CE  3420               	retlw	32	;' '
   843  11CF  3428               	retlw	40	;'('
   844  11D0  3443               	retlw	67	;'C'
   845  11D1  3441               	retlw	65	;'A'
   846  11D2  344E               	retlw	78	;'N'
   847  11D3  3429               	retlw	41	;')'
   848  11D4  3400               	retlw	0
   849  11D5                     STR_10:	
   850  11D5  3456               	retlw	86	;'V'
   851  11D6  346F               	retlw	111	;'o'
   852  11D7  346C               	retlw	108	;'l'
   853  11D8  3474               	retlw	116	;'t'
   854  11D9  3420               	retlw	32	;' '
   855  11DA  3445               	retlw	69	;'E'
   856  11DB  3472               	retlw	114	;'r'
   857  11DC  3472               	retlw	114	;'r'
   858  11DD  346F               	retlw	111	;'o'
   859  11DE  3472               	retlw	114	;'r'
   860  11DF  3420               	retlw	32	;' '
   861  11E0  3448               	retlw	72	;'H'
   862  11E1  3400               	retlw	0
   863  11E2                     STR_123:	
   864  11E2  3454               	retlw	84	;'T'
   865  11E3  3465               	retlw	101	;'e'
   866  11E4  3473               	retlw	115	;'s'
   867  11E5  3474               	retlw	116	;'t'
   868  11E6  3420               	retlw	32	;' '
   869  11E7  3452               	retlw	82	;'R'
   870  11E8  3446               	retlw	70	;'F'
   871  11E9  3420               	retlw	32	;' '
   872  11EA  3452               	retlw	82	;'R'
   873  11EB  3453               	retlw	83	;'S'
   874  11EC  3453               	retlw	83	;'S'
   875  11ED  3449               	retlw	73	;'I'
   876  11EE  3400               	retlw	0
   877  11EF                     STR_8:	
   878  11EF  3456               	retlw	86	;'V'
   879  11F0  346F               	retlw	111	;'o'
   880  11F1  346C               	retlw	108	;'l'
   881  11F2  3474               	retlw	116	;'t'
   882  11F3  3420               	retlw	32	;' '
   883  11F4  3445               	retlw	69	;'E'
   884  11F5  3472               	retlw	114	;'r'
   885  11F6  3472               	retlw	114	;'r'
   886  11F7  346F               	retlw	111	;'o'
   887  11F8  3472               	retlw	114	;'r'
   888  11F9  3420               	retlw	32	;' '
   889  11FA  344C               	retlw	76	;'L'
   890  11FB  3400               	retlw	0
   891  11FC                     STR_184:	
   892  11FC  3420               	retlw	32	;' '
   893  11FD  3450               	retlw	80	;'P'
   894  11FE  3472               	retlw	114	;'r'
   895  11FF  3465               	retlw	101	;'e'
   896  1200  3473               	retlw	115	;'s'
   897  1201  3473               	retlw	115	;'s'
   898  1202  3420               	retlw	32	;' '
   899  1203  3453               	retlw	83	;'S'
   900  1204  3454               	retlw	84	;'T'
   901  1205  3441               	retlw	65	;'A'
   902  1206  3452               	retlw	82	;'R'
   903  1207  3454               	retlw	84	;'T'
   904  1208  3400               	retlw	0
   905  1209                     STR_21:	
   906  1209  3445               	retlw	69	;'E'
   907  120A  3473               	retlw	115	;'s'
   908  120B  3474               	retlw	116	;'t'
   909  120C  3461               	retlw	97	;'a'
   910  120D  3462               	retlw	98	;'b'
   911  120E  346C               	retlw	108	;'l'
   912  120F  3469               	retlw	105	;'i'
   913  1210  3473               	retlw	115	;'s'
   914  1211  3468               	retlw	104	;'h'
   915  1212  3469               	retlw	105	;'i'
   916  1213  346E               	retlw	110	;'n'
   917  1214  3467               	retlw	103	;'g'
   918  1215  3400               	retlw	0
   919  1216                     STR_27:	
   920  1216  3445               	retlw	69	;'E'
   921  1217  3445               	retlw	69	;'E'
   922  1218  3450               	retlw	80	;'P'
   923  1219  3452               	retlw	82	;'R'
   924  121A  344F               	retlw	79	;'O'
   925  121B  344D               	retlw	77	;'M'
   926  121C  3420               	retlw	32	;' '
   927  121D  3465               	retlw	101	;'e'
   928  121E  3472               	retlw	114	;'r'
   929  121F  3472               	retlw	114	;'r'
   930  1220  346F               	retlw	111	;'o'
   931  1221  3472               	retlw	114	;'r'
   932  1222  3400               	retlw	0
   933  1223                     STR_154:	
   934  1223  3420               	retlw	32	;' '
   935  1224  3462               	retlw	98	;'b'
   936  1225  3475               	retlw	117	;'u'
   937  1226  3474               	retlw	116	;'t'
   938  1227  3474               	retlw	116	;'t'
   939  1228  346F               	retlw	111	;'o'
   940  1229  346E               	retlw	110	;'n'
   941  122A  3420               	retlw	32	;' '
   942  122B  3474               	retlw	116	;'t'
   943  122C  3465               	retlw	101	;'e'
   944  122D  3473               	retlw	115	;'s'
   945  122E  3474               	retlw	116	;'t'
   946  122F  3400               	retlw	0
   947  1230                     STR_110:	
   948  1230  3420               	retlw	32	;' '
   949  1231  3445               	retlw	69	;'E'
   950  1232  3472               	retlw	114	;'r'
   951  1233  3472               	retlw	114	;'r'
   952  1234  346F               	retlw	111	;'o'
   953  1235  3472               	retlw	114	;'r'
   954  1236  3420               	retlw	32	;' '
   955  1237  342D               	retlw	45	;'-'
   956  1238  3420               	retlw	32	;' '
   957  1239  344C               	retlw	76	;'L'
   958  123A  346F               	retlw	111	;'o'
   959  123B  3477               	retlw	119	;'w'
   960  123C  3400               	retlw	0
   961  123D                     STR_105:	
   962  123D  3454               	retlw	84	;'T'
   963  123E  3465               	retlw	101	;'e'
   964  123F  3473               	retlw	115	;'s'
   965  1240  3474               	retlw	116	;'t'
   966  1241  3420               	retlw	32	;' '
   967  1242  3452               	retlw	82	;'R'
   968  1243  3446               	retlw	70	;'F'
   969  1244  3420               	retlw	32	;' '
   970  1245  3433               	retlw	51	;'3'
   971  1246  3476               	retlw	118	;'v'
   972  1247  3433               	retlw	51	;'3'
   973  1248  3400               	retlw	0
   974  1249                     STR_28:	
   975  1249  3420               	retlw	32	;' '
   976  124A  3452               	retlw	82	;'R'
   977  124B  3465               	retlw	101	;'e'
   978  124C  3461               	retlw	97	;'a'
   979  124D  3464               	retlw	100	;'d'
   980  124E  342F               	retlw	47	;'/'
   981  124F  3457               	retlw	87	;'W'
   982  1250  3472               	retlw	114	;'r'
   983  1251  3469               	retlw	105	;'i'
   984  1252  3474               	retlw	116	;'t'
   985  1253  3465               	retlw	101	;'e'
   986  1254  3400               	retlw	0
   987  1255                     STR_33:	
   988  1255  3445               	retlw	69	;'E'
   989  1256  3445               	retlw	69	;'E'
   990  1257  3450               	retlw	80	;'P'
   991  1258  3452               	retlw	82	;'R'
   992  1259  344F               	retlw	79	;'O'
   993  125A  344D               	retlw	77	;'M'
   994  125B  3420               	retlw	32	;' '
   995  125C  3473               	retlw	115	;'s'
   996  125D  3469               	retlw	105	;'i'
   997  125E  347A               	retlw	122	;'z'
   998  125F  3465               	retlw	101	;'e'
   999  1260  3400               	retlw	0
  1000  1261                     STR_177:	
  1001  1261  3452               	retlw	82	;'R'
  1002  1262  3458               	retlw	88	;'X'
  1003  1263  3433               	retlw	51	;'3'
  1004  1264  3420               	retlw	32	;' '
  1005  1265  3454               	retlw	84	;'T'
  1006  1266  3465               	retlw	101	;'e'
  1007  1267  3473               	retlw	115	;'s'
  1008  1268  3474               	retlw	116	;'t'
  1009  1269  346A               	retlw	106	;'j'
  1010  126A  3469               	retlw	105	;'i'
  1011  126B  3467               	retlw	103	;'g'
  1012  126C  3400               	retlw	0
  1013  126D                     STR_17:	
  1014  126D  3457               	retlw	87	;'W'
  1015  126E  3461               	retlw	97	;'a'
  1016  126F  3469               	retlw	105	;'i'
  1017  1270  3474               	retlw	116	;'t'
  1018  1271  3469               	retlw	105	;'i'
  1019  1272  346E               	retlw	110	;'n'
  1020  1273  3467               	retlw	103	;'g'
  1021  1274  3420               	retlw	32	;' '
  1022  1275  3466               	retlw	102	;'f'
  1023  1276  346F               	retlw	111	;'o'
  1024  1277  3472               	retlw	114	;'r'
  1025  1278  3400               	retlw	0
  1026  1279                     STR_23:	
  1027  1279  3443               	retlw	67	;'C'
  1028  127A  346F               	retlw	111	;'o'
  1029  127B  346D               	retlw	109	;'m'
  1030  127C  346D               	retlw	109	;'m'
  1031  127D  3473               	retlw	115	;'s'
  1032  127E  3420               	retlw	32	;' '
  1033  127F  3445               	retlw	69	;'E'
  1034  1280  3472               	retlw	114	;'r'
  1035  1281  3472               	retlw	114	;'r'
  1036  1282  346F               	retlw	111	;'o'
  1037  1283  3472               	retlw	114	;'r'
  1038  1284  3400               	retlw	0
  1039  1285                     STR_14:	
  1040  1285  3454               	retlw	84	;'T'
  1041  1286  342D               	retlw	45	;'-'
  1042  1287  346F               	retlw	111	;'o'
  1043  1288  3475               	retlw	117	;'u'
  1044  1289  3474               	retlw	116	;'t'
  1045  128A  3420               	retlw	32	;' '
  1046  128B  3445               	retlw	69	;'E'
  1047  128C  3472               	retlw	114	;'r'
  1048  128D  3472               	retlw	114	;'r'
  1049  128E  346F               	retlw	111	;'o'
  1050  128F  3472               	retlw	114	;'r'
  1051  1290  3400               	retlw	0
  1052  1291                     STR_157:	
  1053  1291  3443               	retlw	67	;'C'
  1054  1292  346F               	retlw	111	;'o'
  1055  1293  346E               	retlw	110	;'n'
  1056  1294  3464               	retlw	100	;'d'
  1057  1295  346F               	retlw	111	;'o'
  1058  1296  3433               	retlw	51	;'3'
  1059  1297  3420               	retlw	32	;' '
  1060  1298  3450               	retlw	80	;'P'
  1061  1299  3461               	retlw	97	;'a'
  1062  129A  3473               	retlw	115	;'s'
  1063  129B  3473               	retlw	115	;'s'
  1064  129C  3400               	retlw	0
  1065  129D                     STR_12:	
  1066  129D  3443               	retlw	67	;'C'
  1067  129E  3475               	retlw	117	;'u'
  1068  129F  3472               	retlw	114	;'r'
  1069  12A0  3472               	retlw	114	;'r'
  1070  12A1  3420               	retlw	32	;' '
  1071  12A2  3445               	retlw	69	;'E'
  1072  12A3  3472               	retlw	114	;'r'
  1073  12A4  3472               	retlw	114	;'r'
  1074  12A5  346F               	retlw	111	;'o'
  1075  12A6  3472               	retlw	114	;'r'
  1076  12A7  3400               	retlw	0
  1077  12A8                     STR_156:	
  1078  12A8  3420               	retlw	32	;' '
  1079  12A9  3466               	retlw	102	;'f'
  1080  12AA  346F               	retlw	111	;'o'
  1081  12AB  3472               	retlw	114	;'r'
  1082  12AC  3420               	retlw	32	;' '
  1083  12AD  3463               	retlw	99	;'c'
  1084  12AE  346F               	retlw	111	;'o'
  1085  12AF  346D               	retlw	109	;'m'
  1086  12B0  346D               	retlw	109	;'m'
  1087  12B1  3473               	retlw	115	;'s'
  1088  12B2  3400               	retlw	0
  1089  12B3                     STR_37:	
  1090  12B3  3454               	retlw	84	;'T'
  1091  12B4  3465               	retlw	101	;'e'
  1092  12B5  3473               	retlw	115	;'s'
  1093  12B6  3474               	retlw	116	;'t'
  1094  12B7  3420               	retlw	32	;' '
  1095  12B8  3452               	retlw	82	;'R'
  1096  12B9  3465               	retlw	101	;'e'
  1097  12BA  346C               	retlw	108	;'l'
  1098  12BB  3461               	retlw	97	;'a'
  1099  12BC  3479               	retlw	121	;'y'
  1100  12BD  3400               	retlw	0
  1101  12BE                     STR_11:	
  1102  12BE  3431               	retlw	49	;'1'
  1103  12BF  3436               	retlw	54	;'6'
  1104  12C0  3476               	retlw	118	;'v'
  1105  12C1  3420               	retlw	32	;' '
  1106  12C2  3473               	retlw	115	;'s'
  1107  12C3  3475               	retlw	117	;'u'
  1108  12C4  3470               	retlw	112	;'p'
  1109  12C5  3470               	retlw	112	;'p'
  1110  12C6  346C               	retlw	108	;'l'
  1111  12C7  3479               	retlw	121	;'y'
  1112  12C8  3400               	retlw	0
  1113  12C9                     STR_155:	
  1114  12C9  3477               	retlw	119	;'w'
  1115  12CA  3461               	retlw	97	;'a'
  1116  12CB  3469               	retlw	105	;'i'
  1117  12CC  3474               	retlw	116	;'t'
  1118  12CD  3469               	retlw	105	;'i'
  1119  12CE  346E               	retlw	110	;'n'
  1120  12CF  3467               	retlw	103	;'g'
  1121  12D0  3420               	retlw	32	;' '
  1122  12D1  3420               	retlw	32	;' '
  1123  12D2  3400               	retlw	0
  1124  12D3                     STR_149:	
  1125  12D3  3453               	retlw	83	;'S'
  1126  12D4  3465               	retlw	101	;'e'
  1127  12D5  3474               	retlw	116	;'t'
  1128  12D6  3420               	retlw	32	;' '
  1129  12D7  3423               	retlw	35	;'#'
  1130  12D8  3420               	retlw	32	;' '
  1131  12D9  346F               	retlw	111	;'o'
  1132  12DA  3466               	retlw	102	;'f'
  1133  12DB  3420               	retlw	32	;' '
  1134  12DC  3400               	retlw	0
  1135  12DD                     STR_55:	
  1136  12DD  3443               	retlw	67	;'C'
  1137  12DE  3448               	retlw	72	;'H'
  1138  12DF  3432               	retlw	50	;'2'
  1139  12E0  3420               	retlw	32	;' '
  1140  12E1  342D               	retlw	45	;'-'
  1141  12E2  3420               	retlw	32	;' '
  1142  12E3  344F               	retlw	79	;'O'
  1143  12E4  3446               	retlw	70	;'F'
  1144  12E5  3446               	retlw	70	;'F'
  1145  12E6  3400               	retlw	0
  1146  12E7                     STR_79:	
  1147  12E7  3443               	retlw	67	;'C'
  1148  12E8  3448               	retlw	72	;'H'
  1149  12E9  3433               	retlw	51	;'3'
  1150  12EA  3420               	retlw	32	;' '
  1151  12EB  342D               	retlw	45	;'-'
  1152  12EC  3420               	retlw	32	;' '
  1153  12ED  344F               	retlw	79	;'O'
  1154  12EE  3446               	retlw	70	;'F'
  1155  12EF  3446               	retlw	70	;'F'
  1156  12F0  3400               	retlw	0
  1157  12F1                     STR_128:	
  1158  12F1  3452               	retlw	82	;'R'
  1159  12F2  3453               	retlw	83	;'S'
  1160  12F3  3453               	retlw	83	;'S'
  1161  12F4  3449               	retlw	73	;'I'
  1162  12F5  3420               	retlw	32	;' '
  1163  12F6  342D               	retlw	45	;'-'
  1164  12F7  3420               	retlw	32	;' '
  1165  12F8  344F               	retlw	79	;'O'
  1166  12F9  344B               	retlw	75	;'K'
  1167  12FA  3400               	retlw	0
  1168  12FB                     STR_150:	
  1169  12FB  3420               	retlw	32	;' '
  1170  12FC  3463               	retlw	99	;'c'
  1171  12FD  3468               	retlw	104	;'h'
  1172  12FE  3461               	retlw	97	;'a'
  1173  12FF  346E               	retlw	110	;'n'
  1174  1300  346E               	retlw	110	;'n'
  1175  1301  3465               	retlw	101	;'e'
  1176  1302  346C               	retlw	108	;'l'
  1177  1303  3473               	retlw	115	;'s'
  1178  1304  3400               	retlw	0
  1179  1305                     STR_25:	
  1180  1305  3454               	retlw	84	;'T'
  1181  1306  3465               	retlw	101	;'e'
  1182  1307  3473               	retlw	115	;'s'
  1183  1308  3474               	retlw	116	;'t'
  1184  1309  3469               	retlw	105	;'i'
  1185  130A  346E               	retlw	110	;'n'
  1186  130B  3467               	retlw	103	;'g'
  1187  130C  3420               	retlw	32	;' '
  1188  130D  3400               	retlw	0
  1189  130E                     STR_50:	
  1190  130E  3420               	retlw	32	;' '
  1191  130F  3445               	retlw	69	;'E'
  1192  1310  3472               	retlw	114	;'r'
  1193  1311  3472               	retlw	114	;'r'
  1194  1312  346F               	retlw	111	;'o'
  1195  1313  3472               	retlw	114	;'r'
  1196  1314  3420               	retlw	32	;' '
  1197  1315  3431               	retlw	49	;'1'
  1198  1316  3400               	retlw	0
  1199  1317                     STR_42:	
  1200  1317  3420               	retlw	32	;' '
  1201  1318  3445               	retlw	69	;'E'
  1202  1319  3472               	retlw	114	;'r'
  1203  131A  3472               	retlw	114	;'r'
  1204  131B  346F               	retlw	111	;'o'
  1205  131C  3472               	retlw	114	;'r'
  1206  131D  3420               	retlw	32	;' '
  1207  131E  3432               	retlw	50	;'2'
  1208  131F  3400               	retlw	0
  1209  1320                     STR_51:	
  1210  1320  3454               	retlw	84	;'T'
  1211  1321  3465               	retlw	101	;'e'
  1212  1322  3473               	retlw	115	;'s'
  1213  1323  3474               	retlw	116	;'t'
  1214  1324  3420               	retlw	32	;' '
  1215  1325  3443               	retlw	67	;'C'
  1216  1326  3448               	retlw	72	;'H'
  1217  1327  3432               	retlw	50	;'2'
  1218  1328  3400               	retlw	0
  1219  1329                     STR_75:	
  1220  1329  3454               	retlw	84	;'T'
  1221  132A  3465               	retlw	101	;'e'
  1222  132B  3473               	retlw	115	;'s'
  1223  132C  3474               	retlw	116	;'t'
  1224  132D  3420               	retlw	32	;' '
  1225  132E  3443               	retlw	67	;'C'
  1226  132F  3448               	retlw	72	;'H'
  1227  1330  3433               	retlw	51	;'3'
  1228  1331  3400               	retlw	0
  1229  1332                     STR_112:	
  1230  1332  3433               	retlw	51	;'3'
  1231  1333  3476               	retlw	118	;'v'
  1232  1334  3433               	retlw	51	;'3'
  1233  1335  3420               	retlw	32	;' '
  1234  1336  342D               	retlw	45	;'-'
  1235  1337  3420               	retlw	32	;' '
  1236  1338  344F               	retlw	79	;'O'
  1237  1339  344B               	retlw	75	;'K'
  1238  133A  3400               	retlw	0
  1239  133B                     STR_59:	
  1240  133B  3443               	retlw	67	;'C'
  1241  133C  3448               	retlw	72	;'H'
  1242  133D  3432               	retlw	50	;'2'
  1243  133E  3420               	retlw	32	;' '
  1244  133F  342D               	retlw	45	;'-'
  1245  1340  3420               	retlw	32	;' '
  1246  1341  344F               	retlw	79	;'O'
  1247  1342  344E               	retlw	78	;'N'
  1248  1343  3400               	retlw	0
  1249  1344                     STR_83:	
  1250  1344  3443               	retlw	67	;'C'
  1251  1345  3448               	retlw	72	;'H'
  1252  1346  3433               	retlw	51	;'3'
  1253  1347  3420               	retlw	32	;' '
  1254  1348  342D               	retlw	45	;'-'
  1255  1349  3420               	retlw	32	;' '
  1256  134A  344F               	retlw	79	;'O'
  1257  134B  344E               	retlw	78	;'N'
  1258  134C  3400               	retlw	0
  1259  134D                     STR_1:	
  1260  134D  344D               	retlw	77	;'M'
  1261  134E  3475               	retlw	117	;'u'
  1262  134F  346C               	retlw	108	;'l'
  1263  1350  3474               	retlw	116	;'t'
  1264  1351  3469               	retlw	105	;'i'
  1265  1352  345F               	retlw	95	;'_'
  1266  1353  3452               	retlw	82	;'R'
  1267  1354  3458               	retlw	88	;'X'
  1268  1355  3400               	retlw	0
  1269  1356                     STR_20:	
  1270  1356  3420               	retlw	32	;' '
  1271  1357  3473               	retlw	115	;'s'
  1272  1358  346B               	retlw	107	;'k'
  1273  1359  3469               	retlw	105	;'i'
  1274  135A  3470               	retlw	112	;'p'
  1275  135B  3470               	retlw	112	;'p'
  1276  135C  3465               	retlw	101	;'e'
  1277  135D  3464               	retlw	100	;'d'
  1278  135E  3400               	retlw	0
  1279  135F                     STR_159:	
  1280  135F  3452               	retlw	82	;'R'
  1281  1360  3458               	retlw	88	;'X'
  1282  1361  3433               	retlw	51	;'3'
  1283  1362  3420               	retlw	32	;' '
  1284  1363  3450               	retlw	80	;'P'
  1285  1364  3461               	retlw	97	;'a'
  1286  1365  3473               	retlw	115	;'s'
  1287  1366  3473               	retlw	115	;'s'
  1288  1367  3400               	retlw	0
  1289  1368                     STR_165:	
  1290  1368  3443               	retlw	67	;'C'
  1291  1369  346F               	retlw	111	;'o'
  1292  136A  346E               	retlw	110	;'n'
  1293  136B  3464               	retlw	100	;'d'
  1294  136C  346F               	retlw	111	;'o'
  1295  136D  3433               	retlw	51	;'3'
  1296  136E  3420               	retlw	32	;' '
  1297  136F  3400               	retlw	0
  1298  1370                     STR_174:	
  1299  1370  3477               	retlw	119	;'w'
  1300  1371  3461               	retlw	97	;'a'
  1301  1372  3469               	retlw	105	;'i'
  1302  1373  3474               	retlw	116	;'t'
  1303  1374  342E               	retlw	46	;'.'
  1304  1375  342E               	retlw	46	;'.'
  1305  1376  342E               	retlw	46	;'.'
  1306  1377  3400               	retlw	0
  1307  1378                     STR_99:	
  1308  1378  3454               	retlw	84	;'T'
  1309  1379  3465               	retlw	101	;'e'
  1310  137A  3473               	retlw	115	;'s'
  1311  137B  3474               	retlw	116	;'t'
  1312  137C  3420               	retlw	32	;' '
  1313  137D  3452               	retlw	82	;'R'
  1314  137E  3446               	retlw	70	;'F'
  1315  137F  3400               	retlw	0
  1316  1380                     STR_167:	
  1317  1380  3452               	retlw	82	;'R'
  1318  1381  3458               	retlw	88	;'X'
  1319  1382  3433               	retlw	51	;'3'
  1320  1383  3420               	retlw	32	;' '
  1321  1384  3400               	retlw	0
  1322  1385                     STR_118:	
  1323  1385  3420               	retlw	32	;' '
  1324  1386  3431               	retlw	49	;'1'
  1325  1387  3434               	retlw	52	;'4'
  1326  1388  3461               	retlw	97	;'a'
  1327  1389  3400               	retlw	0
  1328  138A                     STR_120:	
  1329  138A  3420               	retlw	32	;' '
  1330  138B  3431               	retlw	49	;'1'
  1331  138C  3434               	retlw	52	;'4'
  1332  138D  3462               	retlw	98	;'b'
  1333  138E  3400               	retlw	0
  1334  138F                     STR_122:	
  1335  138F  3420               	retlw	32	;' '
  1336  1390  3431               	retlw	49	;'1'
  1337  1391  3434               	retlw	52	;'4'
  1338  1392  3463               	retlw	99	;'c'
  1339  1393  3400               	retlw	0
  1340  1394                     STR_98:	
  1341  1394  3420               	retlw	32	;' '
  1342  1395  3431               	retlw	49	;'1'
  1343  1396  3430               	retlw	48	;'0'
  1344  1397  3400               	retlw	0
  1345  1398                     STR_102:	
  1346  1398  3420               	retlw	32	;' '
  1347  1399  3431               	retlw	49	;'1'
  1348  139A  3431               	retlw	49	;'1'
  1349  139B  3400               	retlw	0
  1350  139C                     STR_104:	
  1351  139C  3420               	retlw	32	;' '
  1352  139D  3431               	retlw	49	;'1'
  1353  139E  3432               	retlw	50	;'2'
  1354  139F  3400               	retlw	0
  1355  13A0                     STR_116:	
  1356  13A0  3420               	retlw	32	;' '
  1357  13A1  3431               	retlw	49	;'1'
  1358  13A2  3433               	retlw	51	;'3'
  1359  13A3  3400               	retlw	0
  1360  13A4                     STR_140:	
  1361  13A4  3420               	retlw	32	;' '
  1362  13A5  3431               	retlw	49	;'1'
  1363  13A6  3435               	retlw	53	;'5'
  1364  13A7  3400               	retlw	0
  1365  13A8                     STR_152:	
  1366  13A8  3420               	retlw	32	;' '
  1367  13A9  3431               	retlw	49	;'1'
  1368  13AA  3436               	retlw	54	;'6'
  1369  13AB  3400               	retlw	0
  1370  13AC                     STR_148:	
  1371  13AC  3420               	retlw	32	;' '
  1372  13AD  3431               	retlw	49	;'1'
  1373  13AE  3437               	retlw	55	;'7'
  1374  13AF  3400               	retlw	0
  1375  13B0                     STR_144:	
  1376  13B0  3420               	retlw	32	;' '
  1377  13B1  3431               	retlw	49	;'1'
  1378  13B2  3438               	retlw	56	;'8'
  1379  13B3  3400               	retlw	0
  1380  13B4                     STR_64:	
  1381  13B4  3420               	retlw	32	;' '
  1382  13B5  3436               	retlw	54	;'6'
  1383  13B6  3461               	retlw	97	;'a'
  1384  13B7  3400               	retlw	0
  1385  13B8                     STR_90:	
  1386  13B8  3420               	retlw	32	;' '
  1387  13B9  3438               	retlw	56	;'8'
  1388  13BA  3461               	retlw	97	;'a'
  1389  13BB  3400               	retlw	0
  1390  13BC                     STR_66:	
  1391  13BC  3420               	retlw	32	;' '
  1392  13BD  3436               	retlw	54	;'6'
  1393  13BE  3462               	retlw	98	;'b'
  1394  13BF  3400               	retlw	0
  1395  13C0                     STR_88:	
  1396  13C0  3420               	retlw	32	;' '
  1397  13C1  3438               	retlw	56	;'8'
  1398  13C2  3462               	retlw	98	;'b'
  1399  13C3  3400               	retlw	0
  1400  13C4                     STR_44:	
  1401  13C4  3420               	retlw	32	;' '
  1402  13C5  3433               	retlw	51	;'3'
  1403  13C6  3400               	retlw	0
  1404  13C7                     STR_48:	
  1405  13C7  3420               	retlw	32	;' '
  1406  13C8  3434               	retlw	52	;'4'
  1407  13C9  3400               	retlw	0
  1408  13CA                     STR_58:	
  1409  13CA  3420               	retlw	32	;' '
  1410  13CB  3435               	retlw	53	;'5'
  1411  13CC  3400               	retlw	0
  1412  13CD                     STR_70:	
  1413  13CD  3420               	retlw	32	;' '
  1414  13CE  3436               	retlw	54	;'6'
  1415  13CF  3400               	retlw	0
  1416  13D0                     STR_74:	
  1417  13D0  3420               	retlw	32	;' '
  1418  13D1  3437               	retlw	55	;'7'
  1419  13D2  3400               	retlw	0
  1420  13D3                     STR_82:	
  1421  13D3  3420               	retlw	32	;' '
  1422  13D4  3438               	retlw	56	;'8'
  1423  13D5  3400               	retlw	0
  1424  13D6                     STR_94:	
  1425  13D6  3420               	retlw	32	;' '
  1426  13D7  3439               	retlw	57	;'9'
  1427  13D8  3400               	retlw	0
  1428  13D9                     STR_54:	
  1429  13D9  346F               	retlw	111	;'o'
  1430  13DA  346B               	retlw	107	;'k'
  1431  13DB  3400               	retlw	0
  1432  10AE                     
  1433                           ; #config settings
  1434  0000                     
  1435                           	psect	cinit
  1436  00A2                     start_initialization:	
  1437  00A2                     __initialization:	
  1438                           
  1439                           ; Clear objects allocated to BANK0
  1440  00A2  3069               	movlw	low __pbssBANK0
  1441  00A3  0084               	movwf	4
  1442  00A4  3000               	movlw	high __pbssBANK0
  1443  00A5  0085               	movwf	5
  1444  00A6  3007               	movlw	7
  1445  00A7  3194  2490  3180   	fcall	clear_ram0
  1446                           
  1447                           ; Clear objects allocated to BANK1
  1448  00AA  30A0               	movlw	low __pbssBANK1
  1449  00AB  0084               	movwf	4
  1450  00AC  3000               	movlw	high __pbssBANK1
  1451  00AD  0085               	movwf	5
  1452  00AE  3011               	movlw	17
  1453  00AF  3194  2490         	fcall	clear_ram0
  1454                           
  1455                           ; Initialize objects allocated to BANK1
  1456  00B1  0021               	movlb	1	; select bank1
  1457                           
  1458                           ;initializer for _one_second_timer
  1459  00B2  30E8               	movlw	232
  1460  00B3  00B4               	movwf	__pdataBANK1& (0+127)
  1461  00B4  3003               	movlw	3
  1462  00B5  00B5               	movwf	(__pdataBANK1+1)& (0+127)
  1463  00B6                     end_of_initialization:	
  1464                           ;End of C runtime variable initialization code
  1465                           
  1466  00B6                     __end_of__initialization:	
  1467  00B6  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1468  00B7  0020               	movlb	0
  1469  00B8  3195  2D7D         	ljmp	_main	;jump to C main() function
  1470                           
  1471                           	psect	bssBANK0
  1472  0069                     __pbssBANK0:	
  1473  0069                     _testjig_timer:	
  1474  0069                     	ds	2
  1475  006B                     _hund:	
  1476  006B                     	ds	1
  1477  006C                     _ten:	
  1478  006C                     	ds	1
  1479  006D                     _ten_thou:	
  1480  006D                     	ds	1
  1481  006E                     _unit:	
  1482  006E                     	ds	1
  1483  006F                     _thou:	
  1484  006F                     	ds	1
  1485                           
  1486                           	psect	bssBANK1
  1487  00A0                     __pbssBANK1:	
  1488  00A0                     _ADC_cur_sink_val:	
  1489  00A0                     	ds	2
  1490  00A2                     _curent_sink_val:	
  1491  00A2                     	ds	2
  1492  00A4                     _current_sink_stable:	
  1493  00A4                     	ds	2
  1494  00A6                     _current_sink_timer:	
  1495  00A6                     	ds	2
  1496  00A8                     _motor_direction_timer:	
  1497  00A8                     	ds	2
  1498  00AA                     _pickit_timer:	
  1499  00AA                     	ds	2
  1500  00AC                     _tj_timer:	
  1501  00AC                     	ds	2
  1502  00AE                     _uart_receive_timer:	
  1503  00AE                     	ds	2
  1504  00B0                     _pickit_red_counter:	
  1505  00B0                     	ds	1
  1506                           
  1507                           	psect	dataBANK1
  1508  00B4                     __pdataBANK1:	
  1509  00B4                     _one_second_timer:	
  1510  00B4                     	ds	2
  1511                           
  1512                           	psect	clrtext
  1513  1490                     clear_ram0:	
  1514                           ;	Called with FSR0 containing the base address, and
  1515                           ;	WREG with the size to clear
  1516                           
  1517  1490  0064               	clrwdt	;clear the watchdog before getting into this loop
  1518  1491                     clrloop0:	
  1519  1491  0180               	clrf	0	;clear RAM location pointed to by FSR
  1520  1492  3101               	addfsr 0,1
  1521  1493  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1522  1494  2C91               	goto	clrloop0	;have we reached the end yet?
  1523  1495  3400               	retlw	0	;all done for this memory range, return
  1524                           
  1525                           	psect	cstackCOMMON
  1526  0070                     __pcstackCOMMON:	
  1527  0070                     ?_init_ADC:	
  1528  0070                     ??_init_ADC:	
  1529                           ; 0 bytes @ 0x0
  1530                           
  1531  0070                     ?_init_current_sink:	
  1532                           ; 0 bytes @ 0x0
  1533                           
  1534  0070                     ??_init_current_sink:	
  1535                           ; 0 bytes @ 0x0
  1536                           
  1537  0070                     ?_buzz_one:	
  1538                           ; 0 bytes @ 0x0
  1539                           
  1540  0070                     ?_init_i2c:	
  1541                           ; 0 bytes @ 0x0
  1542                           
  1543  0070                     ??_init_i2c:	
  1544                           ; 0 bytes @ 0x0
  1545                           
  1546  0070                     ?_debug_fast_tx:	
  1547                           ; 0 bytes @ 0x0
  1548                           
  1549  0070                     ?_power_supply_set:	
  1550                           ; 0 bytes @ 0x0
  1551                           
  1552  0070                     ??_power_supply_set:	
  1553                           ; 0 bytes @ 0x0
  1554                           
  1555  0070                     ?_TX_one:	
  1556                           ; 0 bytes @ 0x0
  1557                           
  1558  0070                     ??_TX_one:	
  1559                           ; 0 bytes @ 0x0
  1560                           
  1561  0070                     ??_RX_one_timeout:	
  1562                           ; 0 bytes @ 0x0
  1563                           
  1564  0070                     ??_RX_one:	
  1565                           ; 0 bytes @ 0x0
  1566                           
  1567  0070                     ?_digitalpot:	
  1568                           ; 0 bytes @ 0x0
  1569                           
  1570  0070                     ?_isr:	
  1571                           ; 0 bytes @ 0x0
  1572                           
  1573  0070                     ??_isr:	
  1574                           ; 0 bytes @ 0x0
  1575                           
  1576  0070                     ?_main:	
  1577                           ; 0 bytes @ 0x0
  1578                           
  1579  0070                     ?_i2c_Start:	
  1580                           ; 0 bytes @ 0x0
  1581                           
  1582  0070                     ??_i2c_Start:	
  1583                           ; 0 bytes @ 0x0
  1584                           
  1585  0070                     ?_i2c_Write:	
  1586                           ; 0 bytes @ 0x0
  1587                           
  1588  0070                     ??_i2c_Write:	
  1589                           ; 0 bytes @ 0x0
  1590                           
  1591  0070                     ?_i2c_Stop:	
  1592                           ; 0 bytes @ 0x0
  1593                           
  1594  0070                     ??_i2c_Stop:	
  1595                           ; 0 bytes @ 0x0
  1596                           
  1597  0070                     ?_i2c_write_char:	
  1598                           ; 0 bytes @ 0x0
  1599                           
  1600  0070                     ?_clear_lcd:	
  1601                           ; 0 bytes @ 0x0
  1602                           
  1603  0070                     ?_i2c_first_line:	
  1604                           ; 0 bytes @ 0x0
  1605                           
  1606  0070                     ?_i2c_second_line:	
  1607                           ; 0 bytes @ 0x0
  1608                           
  1609  0070                     ?_RX_one_timeout:	
  1610                           ; 0 bytes @ 0x0
  1611                           
  1612  0070                     ?_RX_one:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0070                     ?___bmul:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0070                     ?_ADC_get_val:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0070                     ?__Umul8_16:	
  1622                           ; 2 bytes @ 0x0
  1623                           
  1624  0070                     ?___wmul:	
  1625                           ; 2 bytes @ 0x0
  1626                           
  1627  0070                     ?___xxtofl:	
  1628                           ; 2 bytes @ 0x0
  1629                           
  1630  0070                     i2c_Write@data:	
  1631                           ; 4 bytes @ 0x0
  1632                           
  1633  0070                     power_supply_set@supply:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0070                     ___bmul@multiplicand:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0070                     __Umul8_16@multiplicand:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0070                     buzz_one@time:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0070                     debug_fast_tx@data:	
  1646                           ; 2 bytes @ 0x0
  1647                           
  1648  0070                     ___wmul@multiplier:	
  1649                           ; 2 bytes @ 0x0
  1650                           
  1651  0070                     ___xxtofl@val:	
  1652                           ; 2 bytes @ 0x0
  1653                           
  1654                           
  1655                           ; 4 bytes @ 0x0
  1656  0070                     	ds	1
  1657  0071                     ?_init_i2c_lcd_5v:	
  1658  0071                     ??_digitalpot:	
  1659                           ; 0 bytes @ 0x1
  1660                           
  1661  0071                     ?_i2c_Write_string:	
  1662                           ; 0 bytes @ 0x1
  1663                           
  1664  0071                     ??_i2c_write_char:	
  1665                           ; 0 bytes @ 0x1
  1666                           
  1667  0071                     ??_clear_lcd:	
  1668                           ; 0 bytes @ 0x1
  1669                           
  1670  0071                     ??_i2c_first_line:	
  1671                           ; 0 bytes @ 0x1
  1672                           
  1673  0071                     ??_i2c_second_line:	
  1674                           ; 0 bytes @ 0x1
  1675                           
  1676  0071                     ?_lcd_set_cursor:	
  1677                           ; 0 bytes @ 0x1
  1678                           
  1679  0071                     ??___bmul:	
  1680                           ; 0 bytes @ 0x1
  1681                           
  1682  0071                     i2c_write_char@char_data:	
  1683                           ; 0 bytes @ 0x1
  1684                           
  1685  0071                     init_i2c_lcd_5v@single1_double2:	
  1686                           ; 1 bytes @ 0x1
  1687                           
  1688  0071                     lcd_set_cursor@col:	
  1689                           ; 1 bytes @ 0x1
  1690                           
  1691  0071                     TX_one@data:	
  1692                           ; 1 bytes @ 0x1
  1693                           
  1694  0071                     RX_one@i:	
  1695                           ; 1 bytes @ 0x1
  1696                           
  1697  0071                     RX_one_timeout@i:	
  1698                           ; 1 bytes @ 0x1
  1699                           
  1700  0071                     ___bmul@product:	
  1701                           ; 1 bytes @ 0x1
  1702                           
  1703  0071                     i2c_Write_string@data:	
  1704                           ; 1 bytes @ 0x1
  1705                           
  1706                           
  1707                           ; 2 bytes @ 0x1
  1708  0071                     	ds	1
  1709  0072                     ??_buzz_one:	
  1710  0072                     ??_init_i2c_lcd_5v:	
  1711                           ; 0 bytes @ 0x2
  1712                           
  1713  0072                     ??_debug_fast_tx:	
  1714                           ; 0 bytes @ 0x2
  1715                           
  1716  0072                     ??_lcd_set_cursor:	
  1717                           ; 0 bytes @ 0x2
  1718                           
  1719  0072                     lcd_set_cursor@row:	
  1720                           ; 0 bytes @ 0x2
  1721                           
  1722  0072                     debug_fast_tx@i:	
  1723                           ; 1 bytes @ 0x2
  1724                           
  1725  0072                     TX_one@i:	
  1726                           ; 1 bytes @ 0x2
  1727                           
  1728  0072                     RX_one@data:	
  1729                           ; 1 bytes @ 0x2
  1730                           
  1731  0072                     RX_one_timeout@data:	
  1732                           ; 1 bytes @ 0x2
  1733                           
  1734  0072                     ___bmul@multiplier:	
  1735                           ; 1 bytes @ 0x2
  1736                           
  1737  0072                     ___wmul@multiplicand:	
  1738                           ; 1 bytes @ 0x2
  1739                           
  1740                           
  1741                           ; 2 bytes @ 0x2
  1742  0072                     	ds	1
  1743  0073                     ??_ADC_get_val:	
  1744  0073                     ??__Umul8_16:	
  1745                           ; 0 bytes @ 0x3
  1746                           
  1747  0073                     ??_i2c_Write_string:	
  1748                           ; 0 bytes @ 0x3
  1749                           
  1750  0073                     lcd_set_cursor@LCD_position:	
  1751                           ; 0 bytes @ 0x3
  1752                           
  1753  0073                     ADC_get_val@channel:	
  1754                           ; 1 bytes @ 0x3
  1755                           
  1756  0073                     digitalpot@value:	
  1757                           ; 1 bytes @ 0x3
  1758                           
  1759  0073                     __Umul8_16@product:	
  1760                           ; 1 bytes @ 0x3
  1761                           
  1762                           
  1763                           ; 2 bytes @ 0x3
  1764  0073                     	ds	1
  1765  0074                     ?_print_screen:	
  1766  0074                     ?_Vout_set:	
  1767                           ; 0 bytes @ 0x4
  1768                           
  1769  0074                     ??___wmul:	
  1770                           ; 0 bytes @ 0x4
  1771                           
  1772  0074                     ??___xxtofl:	
  1773                           ; 0 bytes @ 0x4
  1774                           
  1775  0074                     init_i2c_lcd_5v@contrast:	
  1776                           ; 0 bytes @ 0x4
  1777                           
  1778  0074                     print_screen@top:	
  1779                           ; 1 bytes @ 0x4
  1780                           
  1781  0074                     ADC_get_val@return_val:	
  1782                           ; 2 bytes @ 0x4
  1783                           
  1784  0074                     Vout_set@Volts:	
  1785                           ; 2 bytes @ 0x4
  1786                           
  1787  0074                     ___wmul@product:	
  1788                           ; 2 bytes @ 0x4
  1789                           
  1790                           
  1791                           ; 2 bytes @ 0x4
  1792  0074                     	ds	1
  1793  0075                     __Umul8_16@multiplier:	
  1794                           
  1795                           ; 1 bytes @ 0x5
  1796  0075                     	ds	1
  1797  0076                     ??_Vout_set:	
  1798  0076                     ?_ten_thou_conv:	
  1799                           ; 0 bytes @ 0x6
  1800                           
  1801  0076                     ten_thou_conv@n:	
  1802                           ; 0 bytes @ 0x6
  1803                           
  1804  0076                     print_screen@bottom:	
  1805                           ; 2 bytes @ 0x6
  1806                           
  1807  0076                     __Umul8_16@word_mpld:	
  1808                           ; 2 bytes @ 0x6
  1809                           
  1810  0076                     Vout_set@digi_step:	
  1811                           ; 2 bytes @ 0x6
  1812                           
  1813                           
  1814                           ; 4 bytes @ 0x6
  1815  0076                     	ds	2
  1816  0078                     ??_print_screen:	
  1817  0078                     ?_testjig_done:	
  1818                           ; 0 bytes @ 0x8
  1819                           
  1820  0078                     ?_print_error:	
  1821                           ; 0 bytes @ 0x8
  1822                           
  1823  0078                     ??_ten_thou_conv:	
  1824                           ; 0 bytes @ 0x8
  1825                           
  1826  0078                     testjig_done@device_type:	
  1827                           ; 0 bytes @ 0x8
  1828                           
  1829  0078                     ___xxtofl@sign:	
  1830                           ; 1 bytes @ 0x8
  1831                           
  1832  0078                     print_error@top:	
  1833                           ; 1 bytes @ 0x8
  1834                           
  1835                           
  1836                           ; 2 bytes @ 0x8
  1837  0078                     	ds	1
  1838  0079                     ??_testjig_done:	
  1839  0079                     ___xxtofl@exp:	
  1840                           ; 0 bytes @ 0x9
  1841                           
  1842                           
  1843                           ; 1 bytes @ 0x9
  1844  0079                     	ds	1
  1845  007A                     print_error@bottom:	
  1846  007A                     ___xxtofl@arg:	
  1847                           ; 2 bytes @ 0xA
  1848                           
  1849                           
  1850                           ; 4 bytes @ 0xA
  1851  007A                     	ds	1
  1852  007B                     ??_lcd_print_int:	
  1853                           
  1854                           ; 0 bytes @ 0xB
  1855  007B                     	ds	1
  1856  007C                     testjig_done@state:	
  1857                           
  1858                           ; 1 bytes @ 0xC
  1859  007C                     	ds	2
  1860  007E                     ??_get_30v_current:	
  1861                           
  1862                           	psect	cstackBANK0
  1863  0020                     __pcstackBANK0:	
  1864                           ; 0 bytes @ 0xE
  1865                           
  1866  0020                     ??_print_error:	
  1867  0020                     ?_lcd_print_int:	
  1868                           ; 0 bytes @ 0x0
  1869                           
  1870  0020                     ?___flmul:	
  1871                           ; 0 bytes @ 0x0
  1872                           
  1873  0020                     lcd_print_int@number:	
  1874                           ; 4 bytes @ 0x0
  1875                           
  1876  0020                     ___flmul@b:	
  1877                           ; 2 bytes @ 0x0
  1878                           
  1879                           
  1880                           ; 4 bytes @ 0x0
  1881  0020                     	ds	2
  1882  0022                     lcd_print_int@pos:	
  1883                           
  1884                           ; 2 bytes @ 0x2
  1885  0022                     	ds	2
  1886  0024                     lcd_print_int@decimal:	
  1887  0024                     ___flmul@a:	
  1888                           ; 1 bytes @ 0x4
  1889                           
  1890                           
  1891                           ; 4 bytes @ 0x4
  1892  0024                     	ds	1
  1893  0025                     lcd_print_int@ten_thou_digit:	
  1894                           
  1895                           ; 1 bytes @ 0x5
  1896  0025                     	ds	3
  1897  0028                     ??___flmul:	
  1898                           
  1899                           ; 0 bytes @ 0x8
  1900  0028                     	ds	4
  1901  002C                     ___flmul@sign:	
  1902                           
  1903                           ; 1 bytes @ 0xC
  1904  002C                     	ds	1
  1905  002D                     ___flmul@aexp:	
  1906                           
  1907                           ; 1 bytes @ 0xD
  1908  002D                     	ds	1
  1909  002E                     ___flmul@grs:	
  1910                           
  1911                           ; 4 bytes @ 0xE
  1912  002E                     	ds	4
  1913  0032                     ___flmul@bexp:	
  1914                           
  1915                           ; 1 bytes @ 0x12
  1916  0032                     	ds	1
  1917  0033                     ___flmul@prod:	
  1918                           
  1919                           ; 4 bytes @ 0x13
  1920  0033                     	ds	4
  1921  0037                     ___flmul@temp:	
  1922                           
  1923                           ; 2 bytes @ 0x17
  1924  0037                     	ds	2
  1925  0039                     ?___fladd:	
  1926  0039                     ___fladd@b:	
  1927                           ; 4 bytes @ 0x19
  1928                           
  1929                           
  1930                           ; 4 bytes @ 0x19
  1931  0039                     	ds	4
  1932  003D                     ___fladd@a:	
  1933                           
  1934                           ; 4 bytes @ 0x1D
  1935  003D                     	ds	4
  1936  0041                     ??___fladd:	
  1937                           
  1938                           ; 0 bytes @ 0x21
  1939  0041                     	ds	8
  1940  0049                     ___fladd@signs:	
  1941                           
  1942                           ; 1 bytes @ 0x29
  1943  0049                     	ds	1
  1944  004A                     ___fladd@aexp:	
  1945                           
  1946                           ; 1 bytes @ 0x2A
  1947  004A                     	ds	1
  1948  004B                     ___fladd@bexp:	
  1949                           
  1950                           ; 1 bytes @ 0x2B
  1951  004B                     	ds	1
  1952  004C                     ___fladd@grs:	
  1953                           
  1954                           ; 1 bytes @ 0x2C
  1955  004C                     	ds	1
  1956  004D                     ?___fltol:	
  1957  004D                     ___fltol@f1:	
  1958                           ; 4 bytes @ 0x2D
  1959                           
  1960                           
  1961                           ; 4 bytes @ 0x2D
  1962  004D                     	ds	4
  1963  0051                     ??___fltol:	
  1964                           
  1965                           ; 0 bytes @ 0x31
  1966  0051                     	ds	4
  1967  0055                     ___fltol@sign1:	
  1968                           
  1969                           ; 1 bytes @ 0x35
  1970  0055                     	ds	1
  1971  0056                     ___fltol@exp1:	
  1972                           
  1973                           ; 1 bytes @ 0x36
  1974  0056                     	ds	1
  1975  0057                     ?_get_30v_current:	
  1976                           
  1977                           ; 2 bytes @ 0x37
  1978  0057                     	ds	2
  1979  0059                     get_30v_current@temp:	
  1980                           
  1981                           ; 2 bytes @ 0x39
  1982  0059                     	ds	2
  1983  005B                     ??_main:	
  1984                           
  1985                           ; 0 bytes @ 0x3B
  1986  005B                     	ds	3
  1987  005E                     main@temp:	
  1988                           
  1989                           ; 2 bytes @ 0x3E
  1990  005E                     	ds	2
  1991  0060                     main@mem_size:	
  1992                           
  1993                           ; 2 bytes @ 0x40
  1994  0060                     	ds	2
  1995  0062                     main@j:	
  1996                           
  1997                           ; 2 bytes @ 0x42
  1998  0062                     	ds	2
  1999  0064                     main@response:	
  2000                           
  2001                           ; 1 bytes @ 0x44
  2002  0064                     	ds	1
  2003  0065                     main@i:	
  2004                           
  2005                           ; 2 bytes @ 0x45
  2006  0065                     	ds	2
  2007  0067                     main@device_type:	
  2008                           
  2009                           ; 1 bytes @ 0x47
  2010  0067                     	ds	1
  2011  0068                     main@RX_data:	
  2012                           
  2013                           ; 1 bytes @ 0x48
  2014  0068                     	ds	1
  2015                           
  2016                           	psect	maintext
  2017  157D                     __pmaintext:	
  2018 ;;
  2019 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2020 ;;
  2021 ;; *************** function _main *****************
  2022 ;; Defined at:
  2023 ;;		line 472 in file "Multi_RX_testjig_v2.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  response        1   68[BANK0 ] unsigned char 
  2028 ;;  j               2   66[BANK0 ] int 
  2029 ;;  mem_size        2   64[BANK0 ] unsigned int 
  2030 ;;  i               2   69[BANK0 ] unsigned int 
  2031 ;;  temp            2   62[BANK0 ] unsigned int 
  2032 ;;  RX_data         1   72[BANK0 ] unsigned char 
  2033 ;;  device_type     1   71[BANK0 ] unsigned char 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;		None               void
  2036 ;; Registers used:
  2037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : B1F/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2044 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2045 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2046 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2047 ;;Total ram usage:       14 bytes
  2048 ;; Hardware stack levels required when called:    5
  2049 ;; This function calls:
  2050 ;;		_ADC_get_val
  2051 ;;		_RX_one
  2052 ;;		_RX_one_timeout
  2053 ;;		_TX_one
  2054 ;;		_Vout_set
  2055 ;;		_buzz_one
  2056 ;;		_debug_fast_tx
  2057 ;;		_get_30v_current
  2058 ;;		_init_ADC
  2059 ;;		_init_current_sink
  2060 ;;		_init_i2c
  2061 ;;		_init_i2c_lcd_5v
  2062 ;;		_lcd_print_int
  2063 ;;		_power_supply_set
  2064 ;;		_print_error
  2065 ;;		_print_screen
  2066 ;;		_testjig_done
  2067 ;; This function is called by:
  2068 ;;		Startup code after reset
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           
  2073                           ;psect for function _main
  2074  157D                     _main:	
  2075                           
  2076                           ;Multi_RX_testjig_v2.c: 475: OSCCON = 0x7A;
  2077                           
  2078                           ;incstack = 0
  2079                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2080  157D  307A               	movlw	122
  2081  157E  0021               	movlb	1	; select bank1
  2082  157F  0099               	movwf	25	;volatile
  2083                           
  2084                           ;Multi_RX_testjig_v2.c: 477: OPTION_REG = 0b11010000;
  2085  1580  30D0               	movlw	208
  2086  1581  0095               	movwf	21	;volatile
  2087                           
  2088                           ;Multi_RX_testjig_v2.c: 478: TMR0 = 0x00;
  2089  1582  0020               	movlb	0	; select bank0
  2090  1583  0195               	clrf	21	;volatile
  2091                           
  2092                           ;Multi_RX_testjig_v2.c: 479: TMR0IF = 0;
  2093  1584  110B               	bcf	11,2	;volatile
  2094                           
  2095                           ;Multi_RX_testjig_v2.c: 480: TMR0IE = 1;
  2096  1585  168B               	bsf	11,5	;volatile
  2097                           
  2098                           ;Multi_RX_testjig_v2.c: 483: TRISA = 0b00001111;
  2099  1586  300F               	movlw	15
  2100  1587  0021               	movlb	1	; select bank1
  2101  1588  008C               	movwf	12	;volatile
  2102                           
  2103                           ;Multi_RX_testjig_v2.c: 484: TRISB = 0b11001111;
  2104  1589  30CF               	movlw	207
  2105  158A  008D               	movwf	13	;volatile
  2106                           
  2107                           ;Multi_RX_testjig_v2.c: 485: TRISC = 0b00011010;
  2108  158B  301A               	movlw	26
  2109  158C  008E               	movwf	14	;volatile
  2110                           
  2111                           ;Multi_RX_testjig_v2.c: 486: TRISD = 0b10001011;
  2112  158D  308B               	movlw	139
  2113  158E  008F               	movwf	15	;volatile
  2114                           
  2115                           ;Multi_RX_testjig_v2.c: 487: TRISE = 0b11110110;
  2116  158F  30F6               	movlw	246
  2117  1590  0090               	movwf	16	;volatile
  2118                           
  2119                           ;Multi_RX_testjig_v2.c: 488: TRISF = 0b00101111;
  2120  1591  302F               	movlw	47
  2121  1592  0026               	movlb	6	; select bank6
  2122  1593  008C               	movwf	12	;volatile
  2123                           
  2124                           ;Multi_RX_testjig_v2.c: 489: TRISG = 0b11101111;
  2125  1594  30EF               	movlw	239
  2126  1595  008D               	movwf	13	;volatile
  2127                           
  2128                           ;Multi_RX_testjig_v2.c: 491: PORTA = 0b00000000;
  2129  1596  0020               	movlb	0	; select bank0
  2130  1597  018C               	clrf	12	;volatile
  2131                           
  2132                           ;Multi_RX_testjig_v2.c: 492: PORTB = 0b00000000;
  2133  1598  018D               	clrf	13	;volatile
  2134                           
  2135                           ;Multi_RX_testjig_v2.c: 493: PORTC = 0b00000000;
  2136  1599  018E               	clrf	14	;volatile
  2137                           
  2138                           ;Multi_RX_testjig_v2.c: 494: PORTD = 0b01000000;
  2139  159A  3040               	movlw	64
  2140  159B  008F               	movwf	15	;volatile
  2141                           
  2142                           ;Multi_RX_testjig_v2.c: 495: PORTE = 0b00000000;
  2143  159C  0190               	clrf	16	;volatile
  2144                           
  2145                           ;Multi_RX_testjig_v2.c: 496: PORTF = 0b00000000;
  2146  159D  0025               	movlb	5	; select bank5
  2147  159E  018C               	clrf	12	;volatile
  2148                           
  2149                           ;Multi_RX_testjig_v2.c: 497: PORTG = 0b00000000;
  2150  159F  018D               	clrf	13	;volatile
  2151                           
  2152                           ;Multi_RX_testjig_v2.c: 499: WPUB = 0b00000000;
  2153  15A0  0024               	movlb	4	; select bank4
  2154  15A1  018D               	clrf	13	;volatile
  2155                           
  2156                           ;Multi_RX_testjig_v2.c: 500: WPUD = 0b00000000;
  2157  15A2  018F               	clrf	15	;volatile
  2158                           
  2159                           ;Multi_RX_testjig_v2.c: 501: WPUE = 0b00000000;
  2160  15A3  0190               	clrf	16	;volatile
  2161                           
  2162                           ;Multi_RX_testjig_v2.c: 503: ANSELA = 0b00000000;
  2163  15A4  0023               	movlb	3	; select bank3
  2164  15A5  018C               	clrf	12	;volatile
  2165                           
  2166                           ;Multi_RX_testjig_v2.c: 504: ANSELB = 0b00001100;
  2167  15A6  300C               	movlw	12
  2168  15A7  008D               	movwf	13	;volatile
  2169                           
  2170                           ;Multi_RX_testjig_v2.c: 505: ANSELD = 0b00001111;
  2171  15A8  300F               	movlw	15
  2172  15A9  008F               	movwf	15	;volatile
  2173                           
  2174                           ;Multi_RX_testjig_v2.c: 506: ANSELE = 0b00000100;
  2175  15AA  3004               	movlw	4
  2176  15AB  0090               	movwf	16	;volatile
  2177                           
  2178                           ;Multi_RX_testjig_v2.c: 507: ANSELF = 0b00000000;
  2179  15AC  0028               	movlb	8	; select bank8
  2180  15AD  018C               	clrf	12	;volatile
  2181                           
  2182                           ;Multi_RX_testjig_v2.c: 508: ANSELG = 0b00000000;
  2183  15AE  018D               	clrf	13	;volatile
  2184                           
  2185                           ;Multi_RX_testjig_v2.c: 509: LATC5 = 1;
  2186  15AF  0022               	movlb	2	; select bank2
  2187  15B0  168E               	bsf	14,5	;volatile
  2188                           
  2189                           ;Multi_RX_testjig_v2.c: 512: init_ADC();
  2190  15B1  3194  248A  3195   	fcall	_init_ADC
  2191                           
  2192                           ;Multi_RX_testjig_v2.c: 513: init_current_sink();
  2193  15B4  3188  2002  3195   	fcall	_init_current_sink
  2194                           
  2195                           ;Multi_RX_testjig_v2.c: 514: pickit_state = pickit_idle;
  2196  15B7  3005               	movlw	5
  2197  15B8  0021               	movlb	1	; select bank1
  2198  15B9  00B3               	movwf	_pickit_state^(0+128)
  2199                           
  2200                           ;Multi_RX_testjig_v2.c: 516: RA5 = 0;
  2201  15BA  0020               	movlb	0	; select bank0
  2202  15BB  128C               	bcf	12,5	;volatile
  2203                           
  2204                           ;Multi_RX_testjig_v2.c: 517: buzz_one(200);
  2205  15BC  30C8               	movlw	200
  2206  15BD  00F0               	movwf	buzz_one@time
  2207  15BE  01F1               	clrf	buzz_one@time+1
  2208  15BF  318B  23EA  3195   	fcall	_buzz_one
  2209                           
  2210                           ;Multi_RX_testjig_v2.c: 518: RA5 = 1;
  2211  15C2  0020               	movlb	0	; select bank0
  2212  15C3  168C               	bsf	12,5	;volatile
  2213                           
  2214                           ;Multi_RX_testjig_v2.c: 519: init_i2c();
  2215  15C4  3188  2017  3195   	fcall	_init_i2c
  2216                           
  2217                           ;Multi_RX_testjig_v2.c: 526: init_i2c_lcd_5v(8, 0x38);
  2218  15C7  3038               	movlw	56
  2219  15C8  00F1               	movwf	init_i2c_lcd_5v@single1_double2
  2220  15C9  3008               	movlw	8
  2221  15CA  318B  239C  3195   	fcall	_init_i2c_lcd_5v
  2222                           
  2223                           ;Multi_RX_testjig_v2.c: 527: print_screen("Multi_RX", "Test-Jig|Startup");
  2224  15CD  304D               	movlw	low (STR_1| (0+32768))
  2225  15CE  00F4               	movwf	print_screen@top
  2226  15CF  3093               	movlw	high (STR_1| (0+32768))
  2227  15D0  00F5               	movwf	print_screen@top+1
  2228  15D1  307D               	movlw	low (STR_2| (0+32768))
  2229  15D2  00F6               	movwf	print_screen@bottom
  2230  15D3  3090               	movlw	high (STR_2| (0+32768))
  2231  15D4  00F7               	movwf	print_screen@bottom+1
  2232  15D5  318A  22D2  3195   	fcall	_print_screen
  2233                           
  2234                           ;Multi_RX_testjig_v2.c: 528: RA4 = 1;
  2235  15D8  0020               	movlb	0	; select bank0
  2236  15D9  160C               	bsf	12,4	;volatile
  2237                           
  2238                           ;Multi_RX_testjig_v2.c: 529: GIE = 1;
  2239  15DA  178B               	bsf	11,7	;volatile
  2240                           
  2241                           ;Multi_RX_testjig_v2.c: 530: LATC7 = 1;
  2242  15DB  0022               	movlb	2	; select bank2
  2243  15DC  178E               	bsf	14,7	;volatile
  2244                           
  2245                           ;Multi_RX_testjig_v2.c: 531: _delay((unsigned long)((100)*(16000000/4000.0)));
  2246  15DD  3003               	movlw	3
  2247  15DE  0020               	movlb	0	; select bank0
  2248  15DF  00DD               	movwf	??_main+2
  2249  15E0  3008               	movlw	8
  2250  15E1  00DC               	movwf	??_main+1
  2251  15E2  3078               	movlw	120
  2252  15E3  00DB               	movwf	??_main
  2253  15E4                     u5717:	
  2254  15E4  0BDB               	decfsz	??_main,f
  2255  15E5  2DE4               	goto	u5717
  2256  15E6  0BDC               	decfsz	??_main+1,f
  2257  15E7  2DE4               	goto	u5717
  2258  15E8  0BDD               	decfsz	??_main+2,f
  2259  15E9  2DE4               	goto	u5717
  2260                           
  2261                           ;Multi_RX_testjig_v2.c: 532: debug_fast_tx(0xAAAA);
  2262  15EA  30AA               	movlw	170
  2263  15EB  00F0               	movwf	debug_fast_tx@data
  2264  15EC  00F1               	movwf	debug_fast_tx@data+1
  2265  15ED  318A  22A5  3195   	fcall	_debug_fast_tx
  2266                           
  2267                           ;Multi_RX_testjig_v2.c: 533: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2268  15F0  3085               	movlw	133
  2269  15F1  0020               	movlb	0	; select bank0
  2270  15F2  00DB               	movwf	??_main
  2271  15F3                     u5727:	
  2272  15F3  0BDB               	decfsz	??_main,f
  2273  15F4  2DF3               	goto	u5727
  2274                           
  2275                           ;Multi_RX_testjig_v2.c: 534: debug_fast_tx(0x5555);
  2276  15F5  3055               	movlw	85
  2277  15F6  00F0               	movwf	debug_fast_tx@data
  2278  15F7  00F1               	movwf	debug_fast_tx@data+1
  2279  15F8  318A  22A5  3195   	fcall	_debug_fast_tx
  2280                           
  2281                           ;Multi_RX_testjig_v2.c: 535: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2282  15FB  3085               	movlw	133
  2283  15FC  0020               	movlb	0	; select bank0
  2284  15FD  00DB               	movwf	??_main
  2285  15FE                     u5737:	
  2286  15FE  0BDB               	decfsz	??_main,f
  2287  15FF  2DFE               	goto	u5737
  2288                           
  2289                           ;Multi_RX_testjig_v2.c: 537: RE0 = 0;
  2290  1600  0020               	movlb	0	; select bank0
  2291  1601  1010               	bcf	16,0	;volatile
  2292                           
  2293                           ;Multi_RX_testjig_v2.c: 539: if(PCONbits.nRMCLR == 1)
  2294  1602  0021               	movlb	1	; select bank1
  2295  1603  1D96               	btfss	22,3	;volatile
  2296  1604  2E0A               	goto	l4246
  2297  1605  3002               	movlw	2
  2298                           
  2299                           ;Multi_RX_testjig_v2.c: 540: testjig_done(2, 0);
  2300  1606  01F8               	clrf	testjig_done@device_type
  2301  1607  3189  217C  3195   	fcall	_testjig_done
  2302  160A                     l4246:	
  2303                           
  2304                           ;Multi_RX_testjig_v2.c: 543: if(RF3 == 1)
  2305  160A  0025               	movlb	5	; select bank5
  2306  160B  1D8C               	btfss	12,3	;volatile
  2307  160C  2E18               	goto	l304
  2308                           
  2309                           ;Multi_RX_testjig_v2.c: 544: print_error("Multi_RX", "-> Insert PCB");
  2310  160D  304D               	movlw	low (STR_1| (0+32768))
  2311  160E  00F8               	movwf	print_error@top
  2312  160F  3093               	movlw	high (STR_1| (0+32768))
  2313  1610  00F9               	movwf	print_error@top+1
  2314  1611  3075               	movlw	low (STR_4| (0+32768))
  2315  1612  00FA               	movwf	print_error@bottom
  2316  1613  3091               	movlw	high (STR_4| (0+32768))
  2317  1614  00FB               	movwf	print_error@bottom+1
  2318  1615  318A  22F4  3195   	fcall	_print_error
  2319  1618                     l304:	
  2320                           
  2321                           ;Multi_RX_testjig_v2.c: 547: print_screen("Powering board", "");
  2322  1618  30FF               	movlw	low (STR_5| (0+32768))
  2323  1619  00F4               	movwf	print_screen@top
  2324  161A  3090               	movlw	high (STR_5| (0+32768))
  2325  161B  00F5               	movwf	print_screen@top+1
  2326  161C  30AE               	movlw	low ((STR_153+15)| (0+32768))
  2327  161D  00F6               	movwf	print_screen@bottom
  2328  161E  3090               	movlw	high ((STR_153+15)| (0+32768))
  2329  161F  00F7               	movwf	print_screen@bottom+1
  2330  1620  318A  22D2  3195   	fcall	_print_screen
  2331                           
  2332                           ;Multi_RX_testjig_v2.c: 550: Vout_set(12);
  2333  1623  300C               	movlw	12
  2334  1624  00F4               	movwf	Vout_set@Volts
  2335  1625  01F5               	clrf	Vout_set@Volts+1
  2336  1626  3188  20AA  3195   	fcall	_Vout_set
  2337                           
  2338                           ;Multi_RX_testjig_v2.c: 551: power_supply_set(0);
  2339  1629  3000               	movlw	0
  2340  162A  318B  23F2  3195   	fcall	_power_supply_set
  2341                           
  2342                           ;Multi_RX_testjig_v2.c: 552: _delay((unsigned long)((50)*(16000000/4000.0)));
  2343  162D  3002               	movlw	2
  2344  162E  0020               	movlb	0	; select bank0
  2345  162F  00DD               	movwf	??_main+2
  2346  1630  3004               	movlw	4
  2347  1631  00DC               	movwf	??_main+1
  2348  1632  30BA               	movlw	186
  2349  1633  00DB               	movwf	??_main
  2350  1634                     u5747:	
  2351  1634  0BDB               	decfsz	??_main,f
  2352  1635  2E34               	goto	u5747
  2353  1636  0BDC               	decfsz	??_main+1,f
  2354  1637  2E34               	goto	u5747
  2355  1638  0BDD               	decfsz	??_main+2,f
  2356  1639  2E34               	goto	u5747
  2357  163A  0000               	nop
  2358                           
  2359                           ;Multi_RX_testjig_v2.c: 553: ADC_val = ADC_get_val(0b01011111);
  2360  163B  305F               	movlw	95
  2361  163C  318C  245E  3195   	fcall	_ADC_get_val
  2362                           
  2363                           ;Multi_RX_testjig_v2.c: 554: testjig_timer = (unsigned int)(7518.8/2);
  2364  163F  30AF               	movlw	175
  2365  1640  0020               	movlb	0	; select bank0
  2366  1641  00E9               	movwf	_testjig_timer	;volatile
  2367  1642  300E               	movlw	14
  2368  1643  00EA               	movwf	_testjig_timer+1	;volatile
  2369  1644  2E5E               	goto	l4256
  2370  1645                     l4258:	
  2371  1645  305F               	movlw	95
  2372  1646  318C  245E  3195   	fcall	_ADC_get_val
  2373  1649  3000               	movlw	0
  2374  164A  0271               	subwf	?_ADC_get_val+1,w
  2375  164B  307B               	movlw	123
  2376  164C  1903               	skipnz
  2377  164D  0270               	subwf	?_ADC_get_val,w
  2378  164E  1C03               	skipc
  2379  164F  2E69               	goto	l4264
  2380  1650  318C  2413  3195   	fcall	_get_30v_current
  2381  1653  3000               	movlw	0
  2382  1654  0258               	subwf	?_get_30v_current+1,w
  2383  1655  301E               	movlw	30
  2384  1656  1903               	skipnz
  2385  1657  0257               	subwf	?_get_30v_current,w
  2386  1658  1803               	skipnc
  2387  1659  2E69               	goto	l4264
  2388  165A  0869               	movf	_testjig_timer,w	;volatile
  2389  165B  046A               	iorwf	_testjig_timer+1,w	;volatile
  2390  165C  1903               	btfsc	3,2
  2391  165D  2E69               	goto	l4264
  2392  165E                     l4256:	
  2393                           ;Multi_RX_testjig_v2.c: 555: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08)) && (get_30v_current() < 30) && testjig_timer);
  2394                           
  2395  165E  305F               	movlw	95
  2396  165F  318C  245E  3195   	fcall	_ADC_get_val
  2397  1662  3000               	movlw	0
  2398  1663  0271               	subwf	?_ADC_get_val+1,w
  2399  1664  3068               	movlw	104
  2400  1665  1903               	skipnz
  2401  1666  0270               	subwf	?_ADC_get_val,w
  2402  1667  1C03               	btfss	3,0
  2403  1668  2E45               	goto	l4258
  2404  1669                     l4264:	
  2405                           
  2406                           ;Multi_RX_testjig_v2.c: 569: power_supply_set(1);
  2407  1669  3001               	movlw	1
  2408  166A  318B  23F2  3195   	fcall	_power_supply_set
  2409                           
  2410                           ;Multi_RX_testjig_v2.c: 570: Vout_set(16);
  2411  166D  3010               	movlw	16
  2412  166E  00F4               	movwf	Vout_set@Volts
  2413  166F  01F5               	clrf	Vout_set@Volts+1
  2414  1670  3188  20AA  3195   	fcall	_Vout_set
  2415                           
  2416                           ;Multi_RX_testjig_v2.c: 571: _delay((unsigned long)((150)*(16000000/4000.0)));
  2417  1673  3004               	movlw	4
  2418  1674  0020               	movlb	0	; select bank0
  2419  1675  00DD               	movwf	??_main+2
  2420  1676  300C               	movlw	12
  2421  1677  00DC               	movwf	??_main+1
  2422  1678  3035               	movlw	53
  2423  1679  00DB               	movwf	??_main
  2424  167A                     u5757:	
  2425  167A  0BDB               	decfsz	??_main,f
  2426  167B  2E7A               	goto	u5757
  2427  167C  0BDC               	decfsz	??_main+1,f
  2428  167D  2E7A               	goto	u5757
  2429  167E  0BDD               	decfsz	??_main+2,f
  2430  167F  2E7A               	goto	u5757
  2431  1680  3200               	nop2
  2432                           
  2433                           ;Multi_RX_testjig_v2.c: 572: testjig_timer = (unsigned int)(7518.8/2);
  2434  1681  30AF               	movlw	175
  2435  1682  0020               	movlb	0	; select bank0
  2436  1683  00E9               	movwf	_testjig_timer	;volatile
  2437  1684  300E               	movlw	14
  2438  1685  00EA               	movwf	_testjig_timer+1	;volatile
  2439  1686  3196  2EB7         	goto	l4270
  2440                           
  2441                           	psect	swtext1
  2442  13E8                     __pswtext1:	
  2443  13E8                     S4932:	
  2444  13E8  318B  2BF4         	ljmp	l694
  2445  13EA  318B  2BF9         	ljmp	l696
  2446  13EC  318B  2BFE         	ljmp	l697
  2447  13EE  318C  2C03         	ljmp	l698
  2448                           
  2449                           	psect	text12
  2450  1496                     __ptext12:	
  2451 ;; *************** function _ten_thou_conv *****************
  2452 ;; Defined at:
  2453 ;;		line 1540 in file "Multi_RX_testjig_v2.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  n               2    6[COMMON] int 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;		None
  2458 ;; Return value:  Size  Location     Type
  2459 ;;		None               void
  2460 ;; Registers used:
  2461 ;;		wreg, status,2, status,0, pclath, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 1F/0
  2464 ;;		On exit  : 1F/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2469 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2470 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2471 ;;Total ram usage:        5 bytes
  2472 ;; Hardware stack levels used:    1
  2473 ;; Hardware stack levels required when called:    2
  2474 ;; This function calls:
  2475 ;;		___bmul
  2476 ;;		___wmul
  2477 ;; This function is called by:
  2478 ;;		_lcd_print_int
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           
  2483                           ;psect for function _ten_thou_conv
  2484  1496                     _ten_thou_conv:	
  2485                           
  2486                           ;Multi_RX_testjig_v2.c: 1542: unit = n & 0x1F;
  2487                           
  2488                           ;incstack = 0
  2489                           ; Regs used in _ten_thou_conv: [wreg+status,2+status,0+pclath+cstack]
  2490  1496  0876               	movf	ten_thou_conv@n,w
  2491  1497  00EE               	movwf	_unit
  2492  1498  301F               	movlw	31
  2493  1499  05EE               	andwf	_unit,f
  2494                           
  2495                           ;Multi_RX_testjig_v2.c: 1543: ten = (n >> 5) & 0xF;
  2496  149A  0877               	movf	ten_thou_conv@n+1,w
  2497  149B  00F9               	movwf	??_ten_thou_conv+1
  2498  149C  0876               	movf	ten_thou_conv@n,w
  2499  149D  00F8               	movwf	??_ten_thou_conv
  2500  149E  3005               	movlw	5
  2501  149F  00FA               	movwf	??_ten_thou_conv+2
  2502  14A0                     u3155:	
  2503  14A0  0D79               	rlf	??_ten_thou_conv+1,w
  2504  14A1  0CF9               	rrf	??_ten_thou_conv+1,f
  2505  14A2  0CF8               	rrf	??_ten_thou_conv,f
  2506  14A3  0BFA               	decfsz	??_ten_thou_conv+2,f
  2507  14A4  2CA0               	goto	u3155
  2508  14A5  0878               	movf	??_ten_thou_conv,w
  2509  14A6  00EC               	movwf	_ten
  2510  14A7  300F               	movlw	15
  2511  14A8  05EC               	andwf	_ten,f
  2512                           
  2513                           ;Multi_RX_testjig_v2.c: 1544: hund = (n >> 9) & 0xF;
  2514  14A9  0877               	movf	ten_thou_conv@n+1,w
  2515  14AA  00F9               	movwf	??_ten_thou_conv+1
  2516  14AB  0876               	movf	ten_thou_conv@n,w
  2517  14AC  00F8               	movwf	??_ten_thou_conv
  2518  14AD  3009               	movlw	9
  2519  14AE  00FA               	movwf	??_ten_thou_conv+2
  2520  14AF                     u3165:	
  2521  14AF  0D79               	rlf	??_ten_thou_conv+1,w
  2522  14B0  0CF9               	rrf	??_ten_thou_conv+1,f
  2523  14B1  0CF8               	rrf	??_ten_thou_conv,f
  2524  14B2  0BFA               	decfsz	??_ten_thou_conv+2,f
  2525  14B3  2CAF               	goto	u3165
  2526  14B4  0878               	movf	??_ten_thou_conv,w
  2527  14B5  00EB               	movwf	_hund
  2528  14B6  300F               	movlw	15
  2529  14B7  05EB               	andwf	_hund,f
  2530                           
  2531                           ;Multi_RX_testjig_v2.c: 1545: thou = (n >> 13) & 0x7;
  2532  14B8  0877               	movf	ten_thou_conv@n+1,w
  2533  14B9  00F9               	movwf	??_ten_thou_conv+1
  2534  14BA  0876               	movf	ten_thou_conv@n,w
  2535  14BB  00F8               	movwf	??_ten_thou_conv
  2536  14BC  300D               	movlw	13
  2537  14BD  00FA               	movwf	??_ten_thou_conv+2
  2538  14BE                     u3175:	
  2539  14BE  0D79               	rlf	??_ten_thou_conv+1,w
  2540  14BF  0CF9               	rrf	??_ten_thou_conv+1,f
  2541  14C0  0CF8               	rrf	??_ten_thou_conv,f
  2542  14C1  0BFA               	decfsz	??_ten_thou_conv+2,f
  2543  14C2  2CBE               	goto	u3175
  2544  14C3  0878               	movf	??_ten_thou_conv,w
  2545  14C4  00EF               	movwf	_thou
  2546  14C5  3007               	movlw	7
  2547  14C6  05EF               	andwf	_thou,f
  2548                           
  2549                           ;Multi_RX_testjig_v2.c: 1547: unit = 2 * (thou + hund + ten) + unit;
  2550  14C7  086F               	movf	_thou,w
  2551  14C8  076B               	addwf	_hund,w
  2552  14C9  076C               	addwf	_ten,w
  2553  14CA  0709               	addwf	9,w
  2554  14CB  07EE               	addwf	_unit,f
  2555                           
  2556                           ;Multi_RX_testjig_v2.c: 1548: ten_thou = (unit * 0x67) >> 10;
  2557  14CC  086E               	movf	_unit,w
  2558  14CD  00F0               	movwf	___wmul@multiplier
  2559  14CE  3067               	movlw	103
  2560  14CF  01F1               	clrf	___wmul@multiplier+1
  2561  14D0  00F2               	movwf	___wmul@multiplicand
  2562  14D1  01F3               	clrf	___wmul@multiplicand+1
  2563  14D2  2568  3194         	fcall	___wmul
  2564  14D4  0870               	movf	?___wmul,w
  2565  14D5  00F8               	movwf	??_ten_thou_conv
  2566  14D6  0871               	movf	?___wmul+1,w
  2567  14D7  00F9               	movwf	??_ten_thou_conv+1
  2568  14D8  300A               	movlw	10
  2569  14D9  00FA               	movwf	??_ten_thou_conv+2
  2570  14DA                     u3185:	
  2571  14DA  0D79               	rlf	??_ten_thou_conv+1,w
  2572  14DB  0CF9               	rrf	??_ten_thou_conv+1,f
  2573  14DC  0CF8               	rrf	??_ten_thou_conv,f
  2574  14DD  0BFA               	decfsz	??_ten_thou_conv+2,f
  2575  14DE  2CDA               	goto	u3185
  2576  14DF  0878               	movf	??_ten_thou_conv,w
  2577  14E0  00ED               	movwf	_ten_thou
  2578                           
  2579                           ;Multi_RX_testjig_v2.c: 1549: unit = unit - 10 * ten_thou;
  2580  14E1  30F6               	movlw	246
  2581  14E2  00F0               	movwf	___bmul@multiplicand
  2582  14E3  086D               	movf	_ten_thou,w
  2583  14E4  2545  3194         	fcall	___bmul
  2584  14E6  07EE               	addwf	_unit,f
  2585                           
  2586                           ;Multi_RX_testjig_v2.c: 1551: ten = 9 * thou + hund + 3 * ten + ten_thou;
  2587  14E7  3009               	movlw	9
  2588  14E8  00F0               	movwf	___bmul@multiplicand
  2589  14E9  086F               	movf	_thou,w
  2590  14EA  2545  3194         	fcall	___bmul
  2591  14EC  00F8               	movwf	??_ten_thou_conv
  2592  14ED  086C               	movf	_ten,w
  2593  14EE  076C               	addwf	_ten,w
  2594  14EF  076C               	addwf	_ten,w
  2595  14F0  0778               	addwf	??_ten_thou_conv,w
  2596  14F1  076B               	addwf	_hund,w
  2597  14F2  076D               	addwf	_ten_thou,w
  2598  14F3  00EC               	movwf	_ten
  2599                           
  2600                           ;Multi_RX_testjig_v2.c: 1552: ten_thou = (ten * 0x67) >> 10;
  2601  14F4  00F0               	movwf	___wmul@multiplier
  2602  14F5  3067               	movlw	103
  2603  14F6  01F1               	clrf	___wmul@multiplier+1
  2604  14F7  00F2               	movwf	___wmul@multiplicand
  2605  14F8  01F3               	clrf	___wmul@multiplicand+1
  2606  14F9  2568  3194         	fcall	___wmul
  2607  14FB  0870               	movf	?___wmul,w
  2608  14FC  00F8               	movwf	??_ten_thou_conv
  2609  14FD  0871               	movf	?___wmul+1,w
  2610  14FE  00F9               	movwf	??_ten_thou_conv+1
  2611  14FF  300A               	movlw	10
  2612  1500  00FA               	movwf	??_ten_thou_conv+2
  2613  1501                     u3195:	
  2614  1501  0D79               	rlf	??_ten_thou_conv+1,w
  2615  1502  0CF9               	rrf	??_ten_thou_conv+1,f
  2616  1503  0CF8               	rrf	??_ten_thou_conv,f
  2617  1504  0BFA               	decfsz	??_ten_thou_conv+2,f
  2618  1505  2D01               	goto	u3195
  2619  1506  0878               	movf	??_ten_thou_conv,w
  2620  1507  00ED               	movwf	_ten_thou
  2621                           
  2622                           ;Multi_RX_testjig_v2.c: 1553: ten = ten - 10 * ten_thou;
  2623  1508  30F6               	movlw	246
  2624  1509  00F0               	movwf	___bmul@multiplicand
  2625  150A  086D               	movf	_ten_thou,w
  2626  150B  2545  3194         	fcall	___bmul
  2627  150D  07EC               	addwf	_ten,f
  2628                           
  2629                           ;Multi_RX_testjig_v2.c: 1555: hund = thou + 5 * hund + ten_thou;
  2630  150E  3005               	movlw	5
  2631  150F  00F0               	movwf	___bmul@multiplicand
  2632  1510  086B               	movf	_hund,w
  2633  1511  2545  3194         	fcall	___bmul
  2634  1513  076F               	addwf	_thou,w
  2635  1514  076D               	addwf	_ten_thou,w
  2636  1515  00EB               	movwf	_hund
  2637                           
  2638                           ;Multi_RX_testjig_v2.c: 1556: ten_thou = (hund * 0x67) >> 10;
  2639  1516  00F0               	movwf	___wmul@multiplier
  2640  1517  3067               	movlw	103
  2641  1518  01F1               	clrf	___wmul@multiplier+1
  2642  1519  00F2               	movwf	___wmul@multiplicand
  2643  151A  01F3               	clrf	___wmul@multiplicand+1
  2644  151B  2568  3194         	fcall	___wmul
  2645  151D  0870               	movf	?___wmul,w
  2646  151E  00F8               	movwf	??_ten_thou_conv
  2647  151F  0871               	movf	?___wmul+1,w
  2648  1520  00F9               	movwf	??_ten_thou_conv+1
  2649  1521  300A               	movlw	10
  2650  1522  00FA               	movwf	??_ten_thou_conv+2
  2651  1523                     u3205:	
  2652  1523  0D79               	rlf	??_ten_thou_conv+1,w
  2653  1524  0CF9               	rrf	??_ten_thou_conv+1,f
  2654  1525  0CF8               	rrf	??_ten_thou_conv,f
  2655  1526  0BFA               	decfsz	??_ten_thou_conv+2,f
  2656  1527  2D23               	goto	u3205
  2657  1528  0878               	movf	??_ten_thou_conv,w
  2658  1529  00ED               	movwf	_ten_thou
  2659                           
  2660                           ;Multi_RX_testjig_v2.c: 1557: hund = hund - 10 * ten_thou;
  2661  152A  30F6               	movlw	246
  2662  152B  00F0               	movwf	___bmul@multiplicand
  2663  152C  086D               	movf	_ten_thou,w
  2664  152D  2545  3194         	fcall	___bmul
  2665  152F  07EB               	addwf	_hund,f
  2666                           
  2667                           ;Multi_RX_testjig_v2.c: 1559: thou = 8 * thou + ten_thou;
  2668  1530  086F               	movf	_thou,w
  2669  1531  0709               	addwf	9,w
  2670  1532  0709               	addwf	9,w
  2671  1533  0709               	addwf	9,w
  2672  1534  076D               	addwf	_ten_thou,w
  2673  1535  00EF               	movwf	_thou
  2674                           
  2675                           ;Multi_RX_testjig_v2.c: 1560: ten_thou = (thou * 0x1A) >> 8;
  2676  1536  00F0               	movwf	___wmul@multiplier
  2677  1537  301A               	movlw	26
  2678  1538  01F1               	clrf	___wmul@multiplier+1
  2679  1539  00F2               	movwf	___wmul@multiplicand
  2680  153A  01F3               	clrf	___wmul@multiplicand+1
  2681  153B  2568  3194         	fcall	___wmul
  2682  153D  0871               	movf	?___wmul+1,w
  2683  153E  00ED               	movwf	_ten_thou
  2684                           
  2685                           ;Multi_RX_testjig_v2.c: 1561: thou = thou - 10 * ten_thou;
  2686  153F  30F6               	movlw	246
  2687  1540  00F0               	movwf	___bmul@multiplicand
  2688  1541  086D               	movf	_ten_thou,w
  2689  1542  2545               	fcall	___bmul
  2690  1543  07EF               	addwf	_thou,f
  2691  1544  0008               	return
  2692  1545                     __end_of_ten_thou_conv:	
  2693  1545                     __ptext14:	
  2694 ;; *************** function ___bmul *****************
  2695 ;; Defined at:
  2696 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  multiplier      1    wreg     unsigned char 
  2699 ;;  multiplicand    1    0[COMMON] unsigned char 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  multiplier      1    2[COMMON] unsigned char 
  2702 ;;  product         1    1[COMMON] unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      unsigned char 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0
  2707 ;; Tracked objects:
  2708 ;;		On entry : 1F/0
  2709 ;;		On exit  : 1F/0
  2710 ;;		Unchanged: 1F/0
  2711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2712 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2713 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2715 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2716 ;;Total ram usage:        3 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; Hardware stack levels required when called:    1
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		_ten_thou_conv
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           
  2727                           ;psect for function ___bmul
  2728  1545                     ___bmul:	
  2729                           
  2730                           ;incstack = 0
  2731                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2732                           ;___bmul@multiplier stored from wreg
  2733  1545  00F2               	movwf	___bmul@multiplier
  2734  1546  01F1               	clrf	___bmul@product
  2735  1547  0870               	movf	___bmul@multiplicand,w
  2736  1548  1872               	btfsc	___bmul@multiplier,0
  2737  1549  07F1               	addwf	___bmul@product,f
  2738  154A  35F0               	lslf	___bmul@multiplicand,f
  2739  154B  0870               	movf	___bmul@multiplicand,w
  2740  154C  18F2               	btfsc	___bmul@multiplier,1
  2741  154D  07F1               	addwf	___bmul@product,f
  2742  154E  35F0               	lslf	___bmul@multiplicand,f
  2743  154F  0870               	movf	___bmul@multiplicand,w
  2744  1550  1972               	btfsc	___bmul@multiplier,2
  2745  1551  07F1               	addwf	___bmul@product,f
  2746  1552  35F0               	lslf	___bmul@multiplicand,f
  2747  1553  0870               	movf	___bmul@multiplicand,w
  2748  1554  19F2               	btfsc	___bmul@multiplier,3
  2749  1555  07F1               	addwf	___bmul@product,f
  2750  1556  35F0               	lslf	___bmul@multiplicand,f
  2751  1557  0870               	movf	___bmul@multiplicand,w
  2752  1558  1A72               	btfsc	___bmul@multiplier,4
  2753  1559  07F1               	addwf	___bmul@product,f
  2754  155A  35F0               	lslf	___bmul@multiplicand,f
  2755  155B  0870               	movf	___bmul@multiplicand,w
  2756  155C  1AF2               	btfsc	___bmul@multiplier,5
  2757  155D  07F1               	addwf	___bmul@product,f
  2758  155E  35F0               	lslf	___bmul@multiplicand,f
  2759  155F  0870               	movf	___bmul@multiplicand,w
  2760  1560  1B72               	btfsc	___bmul@multiplier,6
  2761  1561  07F1               	addwf	___bmul@product,f
  2762  1562  35F0               	lslf	___bmul@multiplicand,f
  2763  1563  0870               	movf	___bmul@multiplicand,w
  2764  1564  1BF2               	btfsc	___bmul@multiplier,7
  2765  1565  07F1               	addwf	___bmul@product,f
  2766  1566  0871               	movf	___bmul@product,w
  2767  1567  0008               	return
  2768  1568                     __end_of___bmul:	
  2769  1568                     __ptext13:	
  2770 ;; *************** function ___wmul *****************
  2771 ;; Defined at:
  2772 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  multiplier      2    0[COMMON] unsigned int 
  2775 ;;  multiplicand    2    2[COMMON] unsigned int 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  product         2    4[COMMON] unsigned int 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  2    0[COMMON] unsigned int 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0
  2782 ;; Tracked objects:
  2783 ;;		On entry : 1F/0
  2784 ;;		On exit  : 1F/0
  2785 ;;		Unchanged: 1F/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2788 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2790 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2791 ;;Total ram usage:        6 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    1
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_ten_thou_conv
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function ___wmul
  2803  1568                     ___wmul:	
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2807  1568  01F4               	clrf	___wmul@product
  2808  1569  01F5               	clrf	___wmul@product+1
  2809  156A                     l3114:	
  2810  156A  1C70               	btfss	___wmul@multiplier,0
  2811  156B  2D70               	goto	l3118
  2812  156C  0872               	movf	___wmul@multiplicand,w
  2813  156D  07F4               	addwf	___wmul@product,f
  2814  156E  0873               	movf	___wmul@multiplicand+1,w
  2815  156F  3DF5               	addwfc	___wmul@product+1,f
  2816  1570                     l3118:	
  2817  1570  35F2               	lslf	___wmul@multiplicand,f
  2818  1571  0DF3               	rlf	___wmul@multiplicand+1,f
  2819  1572  36F1               	lsrf	___wmul@multiplier+1,f
  2820  1573  0CF0               	rrf	___wmul@multiplier,f
  2821  1574  0870               	movf	___wmul@multiplier,w
  2822  1575  0471               	iorwf	___wmul@multiplier+1,w
  2823  1576  1D03               	btfss	3,2
  2824  1577  2D6A               	goto	l3114
  2825  1578  0875               	movf	___wmul@product+1,w
  2826  1579  00F1               	movwf	?___wmul+1
  2827  157A  0874               	movf	___wmul@product,w
  2828  157B  00F0               	movwf	?___wmul
  2829  157C  0008               	return
  2830  157D                     __end_of___wmul:	
  2831                           
  2832                           	psect	text18
  2833  0817                     __ptext18:	
  2834 ;; *************** function _init_i2c *****************
  2835 ;; Defined at:
  2836 ;;		line 1988 in file "Multi_RX_testjig_v2.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;		None
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;		None
  2841 ;; Return value:  Size  Location     Type
  2842 ;;		None               void
  2843 ;; Registers used:
  2844 ;;		wreg
  2845 ;; Tracked objects:
  2846 ;;		On entry : 1F/0
  2847 ;;		On exit  : 1F/4
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2852 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2853 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2854 ;;Total ram usage:        3 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; Hardware stack levels required when called:    1
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_main
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           
  2865                           ;psect for function _init_i2c
  2866  0817                     _init_i2c:	
  2867                           
  2868                           ;Multi_RX_testjig_v2.c: 1990: RA5 = 1;
  2869                           
  2870                           ;incstack = 0
  2871                           ; Regs used in _init_i2c: [wreg]
  2872  0817  168C               	bsf	12,5	;volatile
  2873                           
  2874                           ;Multi_RX_testjig_v2.c: 1991: _delay((unsigned long)((200)*(16000000/4000.0)));
  2875  0818  3005               	movlw	5
  2876  0819  00F2               	movwf	??_init_i2c+2
  2877  081A  300F               	movlw	15
  2878  081B  00F1               	movwf	??_init_i2c+1
  2879  081C  30F4               	movlw	244
  2880  081D  00F0               	movwf	??_init_i2c
  2881  081E                     u6247:	
  2882  081E  0BF0               	decfsz	??_init_i2c,f
  2883  081F  281E               	goto	u6247
  2884  0820  0BF1               	decfsz	??_init_i2c+1,f
  2885  0821  281E               	goto	u6247
  2886  0822  0BF2               	decfsz	??_init_i2c+2,f
  2887  0823  281E               	goto	u6247
  2888                           
  2889                           ;Multi_RX_testjig_v2.c: 1992: TRISC3 = 1;
  2890  0824  0021               	movlb	1	; select bank1
  2891  0825  158E               	bsf	14,3	;volatile
  2892                           
  2893                           ;Multi_RX_testjig_v2.c: 1993: TRISC4 = 1;
  2894  0826  160E               	bsf	14,4	;volatile
  2895                           
  2896                           ;Multi_RX_testjig_v2.c: 1994: SSP1STAT |= 0x80;
  2897  0827  0024               	movlb	4	; select bank4
  2898  0828  1794               	bsf	20,7	;volatile
  2899                           
  2900                           ;Multi_RX_testjig_v2.c: 1995: SSP1CON1 = 0x28;
  2901  0829  3028               	movlw	40
  2902  082A  0095               	movwf	21	;volatile
  2903                           
  2904                           ;Multi_RX_testjig_v2.c: 1996: SSP1ADD = 0x14;
  2905  082B  3014               	movlw	20
  2906  082C  0092               	movwf	18	;volatile
  2907  082D  0008               	return
  2908  082E                     __end_of_init_i2c:	
  2909                           
  2910                           	psect	text19
  2911  0802                     __ptext19:	
  2912 ;; *************** function _init_current_sink *****************
  2913 ;; Defined at:
  2914 ;;		line 2017 in file "Multi_RX_testjig_v2.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;		None               void
  2921 ;; Registers used:
  2922 ;;		wreg, status,2
  2923 ;; Tracked objects:
  2924 ;;		On entry : B1F/1
  2925 ;;		On exit  : B1F/C
  2926 ;;		Unchanged: B00/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2932 ;;Total ram usage:        0 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    1
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           
  2943                           ;psect for function _init_current_sink
  2944  0802                     _init_current_sink:	
  2945                           
  2946                           ;Multi_RX_testjig_v2.c: 2019: T2CON = 0b00000110;
  2947                           
  2948                           ;incstack = 0
  2949                           ; Regs used in _init_current_sink: [wreg+status,2]
  2950  0802  3006               	movlw	6
  2951  0803  0020               	movlb	0	; select bank0
  2952  0804  009C               	movwf	28	;volatile
  2953                           
  2954                           ;Multi_RX_testjig_v2.c: 2020: PR2 = 0xFA;
  2955  0805  30FA               	movlw	250
  2956  0806  009B               	movwf	27	;volatile
  2957                           
  2958                           ;Multi_RX_testjig_v2.c: 2021: PIE1bits.TMR2IE = 1;
  2959  0807  0021               	movlb	1	; select bank1
  2960  0808  1491               	bsf	17,1	;volatile
  2961                           
  2962                           ;Multi_RX_testjig_v2.c: 2023: T8CON = 0b00000100;
  2963  0809  3004               	movlw	4
  2964  080A  002B               	movlb	11	; select bank11
  2965  080B  0097               	movwf	23	;volatile
  2966                           
  2967                           ;Multi_RX_testjig_v2.c: 2024: PR8 = 0xFF;
  2968  080C  30FF               	movlw	255
  2969  080D  0096               	movwf	22	;volatile
  2970                           
  2971                           ;Multi_RX_testjig_v2.c: 2025: CCP9CON = 0b00001100;
  2972  080E  300C               	movlw	12
  2973  080F  002C               	movlb	12	; select bank12
  2974  0810  009C               	movwf	28	;volatile
  2975                           
  2976                           ;Multi_RX_testjig_v2.c: 2026: CCPTMRS2 = 0b00000001;
  2977  0811  3001               	movlw	1
  2978  0812  0025               	movlb	5	; select bank5
  2979  0813  009F               	movwf	31	;volatile
  2980                           
  2981                           ;Multi_RX_testjig_v2.c: 2027: CCPR9L = 0x00;
  2982  0814  002C               	movlb	12	; select bank12
  2983  0815  019A               	clrf	26	;volatile
  2984  0816  0008               	return
  2985  0817                     __end_of_init_current_sink:	
  2986                           
  2987                           	psect	text20
  2988  148A                     __ptext20:	
  2989 ;; *************** function _init_ADC *****************
  2990 ;; Defined at:
  2991 ;;		line 1999 in file "Multi_RX_testjig_v2.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;		None               void
  2998 ;; Registers used:
  2999 ;;		wreg
  3000 ;; Tracked objects:
  3001 ;;		On entry : B1F/2
  3002 ;;		On exit  : B1F/1
  3003 ;;		Unchanged: B00/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    1
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_main
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           
  3020                           ;psect for function _init_ADC
  3021  148A                     _init_ADC:	
  3022                           
  3023                           ;Multi_RX_testjig_v2.c: 2001: FVRCON = 0b10000011;
  3024                           
  3025                           ;incstack = 0
  3026                           ; Regs used in _init_ADC: [wreg]
  3027  148A  3083               	movlw	131
  3028  148B  0097               	movwf	23	;volatile
  3029                           
  3030                           ;Multi_RX_testjig_v2.c: 2003: ADCON1 = 0b10100011;
  3031  148C  30A3               	movlw	163
  3032  148D  0021               	movlb	1	; select bank1
  3033  148E  009E               	movwf	30	;volatile
  3034  148F  0008               	return
  3035  1490                     __end_of_init_ADC:	
  3036                           
  3037                           	psect	text21
  3038  0C13                     __ptext21:	
  3039 ;; *************** function _get_30v_current *****************
  3040 ;; Defined at:
  3041 ;;		line 2057 in file "Multi_RX_testjig_v2.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  temp            2   57[BANK0 ] unsigned int 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  2   55[BANK0 ] unsigned int 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0, pclath, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 1A/1
  3052 ;;		On exit  : 1F/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3055 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3056 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3058 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3059 ;;Total ram usage:        4 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    3
  3062 ;; This function calls:
  3063 ;;		_ADC_get_val
  3064 ;;		___fladd
  3065 ;;		___flmul
  3066 ;;		___fltol
  3067 ;;		___xxtofl
  3068 ;; This function is called by:
  3069 ;;		_main
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           
  3074                           ;psect for function _get_30v_current
  3075  0C13                     _get_30v_current:	
  3076                           
  3077                           ;Multi_RX_testjig_v2.c: 2059: unsigned int temp;
  3078                           ;Multi_RX_testjig_v2.c: 2060: temp = ADC_get_val(0b01010011);
  3079                           
  3080                           ;incstack = 0
  3081                           ; Regs used in _get_30v_current: [wreg+status,2+status,0+pclath+cstack]
  3082  0C13  3053               	movlw	83
  3083  0C14  245E  318C         	fcall	_ADC_get_val
  3084  0C16  0871               	movf	?_ADC_get_val+1,w
  3085  0C17  0020               	movlb	0	; select bank0
  3086  0C18  00DA               	movwf	get_30v_current@temp+1
  3087  0C19  0870               	movf	?_ADC_get_val,w
  3088  0C1A  00D9               	movwf	get_30v_current@temp
  3089                           
  3090                           ;Multi_RX_testjig_v2.c: 2061: if(temp > 4)
  3091  0C1B  3000               	movlw	0
  3092  0C1C  025A               	subwf	get_30v_current@temp+1,w
  3093  0C1D  3005               	movlw	5
  3094  0C1E  1903               	skipnz
  3095  0C1F  0259               	subwf	get_30v_current@temp,w
  3096  0C20  1C03               	skipc
  3097  0C21  2C5B               	goto	l3964
  3098                           
  3099                           ;Multi_RX_testjig_v2.c: 2062: return ( temp * 3.4) - 16;
  3100  0C22  0859               	movf	get_30v_current@temp,w
  3101  0C23  00F0               	movwf	___xxtofl@val
  3102  0C24  085A               	movf	get_30v_current@temp+1,w
  3103  0C25  00F1               	movwf	___xxtofl@val+1
  3104  0C26  3000               	movlw	0
  3105  0C27  01F2               	clrf	___xxtofl@val+2
  3106  0C28  01F3               	clrf	___xxtofl@val+3
  3107  0C29  278C  318C         	fcall	___xxtofl
  3108  0C2B  0873               	movf	?___xxtofl+3,w
  3109  0C2C  00A7               	movwf	___flmul@a+3
  3110  0C2D  0872               	movf	?___xxtofl+2,w
  3111  0C2E  00A6               	movwf	___flmul@a+2
  3112  0C2F  0871               	movf	?___xxtofl+1,w
  3113  0C30  00A5               	movwf	___flmul@a+1
  3114  0C31  0870               	movf	?___xxtofl,w
  3115  0C32  00A4               	movwf	___flmul@a
  3116  0C33  3040               	movlw	64
  3117  0C34  00A3               	movwf	___flmul@b+3
  3118  0C35  3059               	movlw	89
  3119  0C36  00A2               	movwf	___flmul@b+2
  3120  0C37  3099               	movlw	153
  3121  0C38  00A1               	movwf	___flmul@b+1
  3122  0C39  309A               	movlw	154
  3123  0C3A  00A0               	movwf	___flmul@b
  3124  0C3B  25C1  318C         	fcall	___flmul
  3125  0C3D  0823               	movf	?___flmul+3,w
  3126  0C3E  00C0               	movwf	___fladd@a+3
  3127  0C3F  0822               	movf	?___flmul+2,w
  3128  0C40  00BF               	movwf	___fladd@a+2
  3129  0C41  0821               	movf	?___flmul+1,w
  3130  0C42  00BE               	movwf	___fladd@a+1
  3131  0C43  0820               	movf	?___flmul,w
  3132  0C44  00BD               	movwf	___fladd@a
  3133  0C45  30C1               	movlw	193
  3134  0C46  00BC               	movwf	___fladd@b+3
  3135  0C47  3080               	movlw	128
  3136  0C48  00BB               	movwf	___fladd@b+2
  3137  0C49  01BA               	clrf	___fladd@b+1
  3138  0C4A  01B9               	clrf	___fladd@b
  3139  0C4B  2470               	fcall	___fladd
  3140  0C4C  083C               	movf	?___fladd+3,w
  3141  0C4D  00D0               	movwf	___fltol@f1+3
  3142  0C4E  083B               	movf	?___fladd+2,w
  3143  0C4F  00CF               	movwf	___fltol@f1+2
  3144  0C50  083A               	movf	?___fladd+1,w
  3145  0C51  00CE               	movwf	___fltol@f1+1
  3146  0C52  0839               	movf	?___fladd,w
  3147  0C53  00CD               	movwf	___fltol@f1
  3148  0C54  3187  2785         	fcall	___fltol
  3149  0C56  084E               	movf	?___fltol+1,w
  3150  0C57  00D8               	movwf	?_get_30v_current+1
  3151  0C58  084D               	movf	?___fltol,w
  3152  0C59  00D7               	movwf	?_get_30v_current
  3153  0C5A  0008               	return
  3154  0C5B                     l3964:	
  3155                           
  3156                           ;Multi_RX_testjig_v2.c: 2063: else
  3157                           ;Multi_RX_testjig_v2.c: 2064: return 0;
  3158  0C5B  01D7               	clrf	?_get_30v_current
  3159  0C5C  01D8               	clrf	?_get_30v_current+1
  3160  0C5D  0008               	return
  3161  0C5E                     __end_of_get_30v_current:	
  3162  0C5E                     __ptext27:	
  3163 ;; *************** function _ADC_get_val *****************
  3164 ;; Defined at:
  3165 ;;		line 2006 in file "Multi_RX_testjig_v2.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  channel         1    wreg     unsigned char 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  channel         1    3[COMMON] unsigned char 
  3170 ;;  return_val      2    4[COMMON] unsigned int 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  2    0[COMMON] unsigned int 
  3173 ;; Registers used:
  3174 ;;		wreg
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/5
  3177 ;;		On exit  : 1F/1
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3180 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3181 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3183 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3184 ;;Total ram usage:        6 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    1
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_main
  3191 ;;		_get_30v_current
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           
  3196                           ;psect for function _ADC_get_val
  3197  0C5E                     _ADC_get_val:	
  3198                           
  3199                           ;incstack = 0
  3200                           ; Regs used in _ADC_get_val: [wreg]
  3201                           ;ADC_get_val@channel stored from wreg
  3202  0C5E  00F3               	movwf	ADC_get_val@channel
  3203                           
  3204                           ;Multi_RX_testjig_v2.c: 2008: unsigned int return_val;
  3205                           ;Multi_RX_testjig_v2.c: 2009: GIE = 0;
  3206  0C5F  138B               	bcf	11,7	;volatile
  3207                           
  3208                           ;Multi_RX_testjig_v2.c: 2010: ADCON0 = channel;
  3209  0C60  0873               	movf	ADC_get_val@channel,w
  3210  0C61  0021               	movlb	1	; select bank1
  3211  0C62  009D               	movwf	29	;volatile
  3212  0C63                     l684:	
  3213                           ;Multi_RX_testjig_v2.c: 2011: while(ADCON0bits.GO_nDONE == 1);
  3214                           
  3215  0C63  189D               	btfsc	29,1	;volatile
  3216  0C64  2C63               	goto	l684
  3217                           
  3218                           ;Multi_RX_testjig_v2.c: 2012: return_val = ADRESH << 8 | ADRESL;
  3219  0C65  081C               	movf	28,w	;volatile
  3220  0C66  00F5               	movwf	ADC_get_val@return_val+1
  3221  0C67  01F4               	clrf	ADC_get_val@return_val
  3222  0C68  081B               	movf	27,w	;volatile
  3223  0C69  04F4               	iorwf	ADC_get_val@return_val,f
  3224                           
  3225                           ;Multi_RX_testjig_v2.c: 2013: GIE = 1;
  3226  0C6A  178B               	bsf	11,7	;volatile
  3227                           
  3228                           ;Multi_RX_testjig_v2.c: 2014: return return_val;
  3229  0C6B  0875               	movf	ADC_get_val@return_val+1,w
  3230  0C6C  00F1               	movwf	?_ADC_get_val+1
  3231  0C6D  0874               	movf	ADC_get_val@return_val,w
  3232  0C6E  00F0               	movwf	?_ADC_get_val
  3233  0C6F  0008               	return
  3234  0C70                     __end_of_ADC_get_val:	
  3235  0C70                     __ptext26:	
  3236 ;; *************** function ___fladd *****************
  3237 ;; Defined at:
  3238 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  b               4   25[BANK0 ] unsigned int 
  3241 ;;  a               4   29[BANK0 ] unsigned int 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  grs             1   44[BANK0 ] unsigned char 
  3244 ;;  bexp            1   43[BANK0 ] unsigned char 
  3245 ;;  aexp            1   42[BANK0 ] unsigned char 
  3246 ;;  signs           1   41[BANK0 ] unsigned char 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  4   25[BANK0 ] unsigned char 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0
  3251 ;; Tracked objects:
  3252 ;;		On entry : 1F/0
  3253 ;;		On exit  : 1F/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3256 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3257 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3258 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3259 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3260 ;;Total ram usage:       20 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    1
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_get_30v_current
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           
  3271                           ;psect for function ___fladd
  3272  0C70                     ___fladd:	
  3273                           
  3274                           ;incstack = 0
  3275                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  3276  0C70  083C               	movf	___fladd@b+3,w
  3277  0C71  00C9               	movwf	___fladd@signs
  3278  0C72  3080               	movlw	128
  3279  0C73  05C9               	andwf	___fladd@signs,f
  3280  0C74  353C               	lslf	___fladd@b+3,w
  3281  0C75  00CB               	movwf	___fladd@bexp
  3282  0C76  1BBB               	btfsc	___fladd@b+2,7
  3283  0C77  144B               	bsf	___fladd@bexp,0
  3284  0C78  084B               	movf	___fladd@bexp,w
  3285  0C79  1903               	btfsc	3,2
  3286  0C7A  2C83               	goto	l998
  3287  0C7B  0F4B               	incfsz	___fladd@bexp,w
  3288  0C7C  2C81               	goto	l999
  3289  0C7D  01B9               	clrf	___fladd@b
  3290  0C7E  01BA               	clrf	___fladd@b+1
  3291  0C7F  01BB               	clrf	___fladd@b+2
  3292  0C80  01BC               	clrf	___fladd@b+3
  3293  0C81                     l999:	
  3294  0C81  17BB               	bsf	___fladd@b+2,7
  3295  0C82  2C86               	goto	L23
  3296  0C83                     l998:	
  3297  0C83  01B9               	clrf	___fladd@b
  3298  0C84  01BA               	clrf	___fladd@b+1
  3299  0C85  01BB               	clrf	___fladd@b+2
  3300  0C86                     L23:	
  3301  0C86  01BC               	clrf	___fladd@b+3
  3302  0C87  0840               	movf	___fladd@a+3,w
  3303  0C88  00CA               	movwf	___fladd@aexp
  3304  0C89  3080               	movlw	128
  3305  0C8A  05CA               	andwf	___fladd@aexp,f
  3306  0C8B  084A               	movf	___fladd@aexp,w
  3307  0C8C  0649               	xorwf	___fladd@signs,w
  3308  0C8D  1D03               	btfss	3,2
  3309  0C8E  1749               	bsf	___fladd@signs,6
  3310  0C8F  3540               	lslf	___fladd@a+3,w
  3311  0C90  00CA               	movwf	___fladd@aexp
  3312  0C91  1BBF               	btfsc	___fladd@a+2,7
  3313  0C92  144A               	bsf	___fladd@aexp,0
  3314  0C93  084A               	movf	___fladd@aexp,w
  3315  0C94  1903               	btfsc	3,2
  3316  0C95  2C9E               	goto	l1003
  3317  0C96  0F4A               	incfsz	___fladd@aexp,w
  3318  0C97  2C9C               	goto	l1004
  3319  0C98  01BD               	clrf	___fladd@a
  3320  0C99  01BE               	clrf	___fladd@a+1
  3321  0C9A  01BF               	clrf	___fladd@a+2
  3322  0C9B  01C0               	clrf	___fladd@a+3
  3323  0C9C                     l1004:	
  3324  0C9C  17BF               	bsf	___fladd@a+2,7
  3325  0C9D  2CA1               	goto	L24
  3326  0C9E                     l1003:	
  3327  0C9E  01BD               	clrf	___fladd@a
  3328  0C9F  01BE               	clrf	___fladd@a+1
  3329  0CA0  01BF               	clrf	___fladd@a+2
  3330  0CA1                     L24:	
  3331  0CA1  01C0               	clrf	___fladd@a+3
  3332  0CA2  084B               	movf	___fladd@bexp,w
  3333  0CA3  024A               	subwf	___fladd@aexp,w
  3334  0CA4  1803               	skipnc
  3335  0CA5  2CC8               	goto	l3470
  3336  0CA6  1F49               	btfss	___fladd@signs,6
  3337  0CA7  2CAA               	goto	l3440
  3338  0CA8  3080               	movlw	128
  3339  0CA9  06C9               	xorwf	___fladd@signs,f
  3340  0CAA                     l3440:	
  3341  0CAA  084B               	movf	___fladd@bexp,w
  3342  0CAB  00CC               	movwf	___fladd@grs
  3343  0CAC  084A               	movf	___fladd@aexp,w
  3344  0CAD  00CB               	movwf	___fladd@bexp
  3345  0CAE  084C               	movf	___fladd@grs,w
  3346  0CAF  00CA               	movwf	___fladd@aexp
  3347  0CB0  0839               	movf	___fladd@b,w
  3348  0CB1  00CC               	movwf	___fladd@grs
  3349  0CB2  083D               	movf	___fladd@a,w
  3350  0CB3  00B9               	movwf	___fladd@b
  3351  0CB4  084C               	movf	___fladd@grs,w
  3352  0CB5  00BD               	movwf	___fladd@a
  3353  0CB6  083A               	movf	___fladd@b+1,w
  3354  0CB7  00CC               	movwf	___fladd@grs
  3355  0CB8  083E               	movf	___fladd@a+1,w
  3356  0CB9  00BA               	movwf	___fladd@b+1
  3357  0CBA  084C               	movf	___fladd@grs,w
  3358  0CBB  00BE               	movwf	___fladd@a+1
  3359  0CBC  083B               	movf	___fladd@b+2,w
  3360  0CBD  00CC               	movwf	___fladd@grs
  3361  0CBE  083F               	movf	___fladd@a+2,w
  3362  0CBF  00BB               	movwf	___fladd@b+2
  3363  0CC0  084C               	movf	___fladd@grs,w
  3364  0CC1  00BF               	movwf	___fladd@a+2
  3365  0CC2  083C               	movf	___fladd@b+3,w
  3366  0CC3  00CC               	movwf	___fladd@grs
  3367  0CC4  0840               	movf	___fladd@a+3,w
  3368  0CC5  00BC               	movwf	___fladd@b+3
  3369  0CC6  084C               	movf	___fladd@grs,w
  3370  0CC7  00C0               	movwf	___fladd@a+3
  3371  0CC8                     l3470:	
  3372  0CC8  01CC               	clrf	___fladd@grs
  3373  0CC9  084A               	movf	___fladd@aexp,w
  3374  0CCA  00C1               	movwf	??___fladd
  3375  0CCB  01C2               	clrf	??___fladd+1
  3376  0CCC  0842               	movf	??___fladd+1,w
  3377  0CCD  00C4               	movwf	??___fladd+3
  3378  0CCE  084B               	movf	___fladd@bexp,w
  3379  0CCF  0241               	subwf	??___fladd,w
  3380  0CD0  00C3               	movwf	??___fladd+2
  3381  0CD1  1C03               	skipc
  3382  0CD2  03C4               	decf	??___fladd+3,f
  3383  0CD3  0844               	movf	??___fladd+3,w
  3384  0CD4  3A80               	xorlw	128
  3385  0CD5  00C5               	movwf	??___fladd+4
  3386  0CD6  3080               	movlw	128
  3387  0CD7  0245               	subwf	??___fladd+4,w
  3388  0CD8  1D03               	skipz
  3389  0CD9  2CDC               	goto	u3385
  3390  0CDA  301A               	movlw	26
  3391  0CDB  0243               	subwf	??___fladd+2,w
  3392  0CDC                     u3385:	
  3393  0CDC  1C03               	skipc
  3394  0CDD  2CFE               	goto	l3484
  3395  0CDE  0020               	movlb	0	; select bank0
  3396  0CDF  083C               	movf	___fladd@b+3,w
  3397  0CE0  043B               	iorwf	___fladd@b+2,w
  3398  0CE1  043A               	iorwf	___fladd@b+1,w
  3399  0CE2  0439               	iorwf	___fladd@b,w
  3400  0CE3  1903               	btfsc	3,2
  3401  0CE4  2CE7               	goto	u3390
  3402  0CE5  3001               	movlw	1
  3403  0CE6  2CE8               	goto	u3400
  3404  0CE7                     u3390:	
  3405  0CE7  3000               	movlw	0
  3406  0CE8                     u3400:	
  3407  0CE8  00CC               	movwf	___fladd@grs
  3408  0CE9  01B9               	clrf	___fladd@b
  3409  0CEA  01BA               	clrf	___fladd@b+1
  3410  0CEB  01BB               	clrf	___fladd@b+2
  3411  0CEC  01BC               	clrf	___fladd@b+3
  3412  0CED  084A               	movf	___fladd@aexp,w
  3413  0CEE  00CB               	movwf	___fladd@bexp
  3414  0CEF  2D03               	goto	l1009
  3415  0CF0                     l1011:	
  3416  0CF0  1C4C               	btfss	___fladd@grs,0
  3417  0CF1  2CF6               	goto	l1012
  3418  0CF2  364C               	lsrf	___fladd@grs,w
  3419  0CF3  3801               	iorlw	1
  3420  0CF4  00CC               	movwf	___fladd@grs
  3421  0CF5  2CF7               	goto	l1013
  3422  0CF6                     l1012:	
  3423  0CF6  36CC               	lsrf	___fladd@grs,f
  3424  0CF7                     l1013:	
  3425  0CF7  1839               	btfsc	___fladd@b,0
  3426  0CF8  17CC               	bsf	___fladd@grs,7
  3427  0CF9  37BC               	asrf	___fladd@b+3,f
  3428  0CFA  0CBB               	rrf	___fladd@b+2,f
  3429  0CFB  0CBA               	rrf	___fladd@b+1,f
  3430  0CFC  0CB9               	rrf	___fladd@b,f
  3431  0CFD  0ACB               	incf	___fladd@bexp,f
  3432  0CFE                     l3484:	
  3433  0CFE  0020               	movlb	0	; select bank0
  3434  0CFF  084A               	movf	___fladd@aexp,w
  3435  0D00  024B               	subwf	___fladd@bexp,w
  3436  0D01  1C03               	skipc
  3437  0D02  2CF0               	goto	l1011
  3438  0D03                     l1009:	
  3439  0D03  1B49               	btfsc	___fladd@signs,6
  3440  0D04  2D27               	goto	l3502
  3441  0D05  084B               	movf	___fladd@bexp,w
  3442  0D06  1D03               	btfss	3,2
  3443  0D07  2D0D               	goto	l3490
  3444  0D08  01B9               	clrf	?___fladd
  3445  0D09  01BA               	clrf	?___fladd+1
  3446  0D0A  01BB               	clrf	?___fladd+2
  3447  0D0B  01BC               	clrf	?___fladd+3
  3448  0D0C  0008               	return
  3449  0D0D                     l3490:	
  3450  0D0D  083D               	movf	___fladd@a,w
  3451  0D0E  07B9               	addwf	___fladd@b,f
  3452  0D0F  083E               	movf	___fladd@a+1,w
  3453  0D10  3DBA               	addwfc	___fladd@b+1,f
  3454  0D11  083F               	movf	___fladd@a+2,w
  3455  0D12  3DBB               	addwfc	___fladd@b+2,f
  3456  0D13  0840               	movf	___fladd@a+3,w
  3457  0D14  3DBC               	addwfc	___fladd@b+3,f
  3458  0D15  1C3C               	btfss	___fladd@b+3,0
  3459  0D16  2D8F               	goto	l3532
  3460  0D17  1C4C               	btfss	___fladd@grs,0
  3461  0D18  2D1E               	goto	l1020
  3462  0D19  36CC               	lsrf	___fladd@grs,f
  3463  0D1A  084C               	movf	___fladd@grs,w
  3464  0D1B  3801               	iorlw	1
  3465  0D1C  00CC               	movwf	___fladd@grs
  3466  0D1D  2D1F               	goto	l1021
  3467  0D1E                     l1020:	
  3468  0D1E  36CC               	lsrf	___fladd@grs,f
  3469  0D1F                     l1021:	
  3470  0D1F  1839               	btfsc	___fladd@b,0
  3471  0D20  17CC               	bsf	___fladd@grs,7
  3472  0D21  37BC               	asrf	___fladd@b+3,f
  3473  0D22  0CBB               	rrf	___fladd@b+2,f
  3474  0D23  0CBA               	rrf	___fladd@b+1,f
  3475  0D24  0CB9               	rrf	___fladd@b,f
  3476  0D25  0ACB               	incf	___fladd@bexp,f
  3477  0D26  2D8F               	goto	l3532
  3478  0D27                     l3502:	
  3479  0D27  083C               	movf	___fladd@b+3,w
  3480  0D28  3A80               	xorlw	128
  3481  0D29  00C1               	movwf	??___fladd
  3482  0D2A  0840               	movf	___fladd@a+3,w
  3483  0D2B  3A80               	xorlw	128
  3484  0D2C  0241               	subwf	??___fladd,w
  3485  0D2D  1D03               	skipz
  3486  0D2E  2D39               	goto	u3493
  3487  0D2F  083F               	movf	___fladd@a+2,w
  3488  0D30  023B               	subwf	___fladd@b+2,w
  3489  0D31  1D03               	skipz
  3490  0D32  2D39               	goto	u3493
  3491  0D33  083E               	movf	___fladd@a+1,w
  3492  0D34  023A               	subwf	___fladd@b+1,w
  3493  0D35  1D03               	skipz
  3494  0D36  2D39               	goto	u3493
  3495  0D37  083D               	movf	___fladd@a,w
  3496  0D38  0239               	subwf	___fladd@b,w
  3497  0D39                     u3493:	
  3498  0D39  1803               	skipnc
  3499  0D3A  2D68               	goto	l3512
  3500  0D3B  30FF               	movlw	255
  3501  0D3C  00C1               	movwf	??___fladd
  3502  0D3D  00C2               	movwf	??___fladd+1
  3503  0D3E  00C3               	movwf	??___fladd+2
  3504  0D3F  00C4               	movwf	??___fladd+3
  3505  0D40  0839               	movf	___fladd@b,w
  3506  0D41  023D               	subwf	___fladd@a,w
  3507  0D42  00C5               	movwf	??___fladd+4
  3508  0D43  083A               	movf	___fladd@b+1,w
  3509  0D44  3B3E               	subwfb	___fladd@a+1,w
  3510  0D45  00C6               	movwf	??___fladd+5
  3511  0D46  083B               	movf	___fladd@b+2,w
  3512  0D47  3B3F               	subwfb	___fladd@a+2,w
  3513  0D48  00C7               	movwf	??___fladd+6
  3514  0D49  083C               	movf	___fladd@b+3,w
  3515  0D4A  3B40               	subwfb	___fladd@a+3,w
  3516  0D4B  00C8               	movwf	??___fladd+7
  3517  0D4C  0845               	movf	??___fladd+4,w
  3518  0D4D  07C1               	addwf	??___fladd,f
  3519  0D4E  0846               	movf	??___fladd+5,w
  3520  0D4F  3DC2               	addwfc	??___fladd+1,f
  3521  0D50  0847               	movf	??___fladd+6,w
  3522  0D51  3DC3               	addwfc	??___fladd+2,f
  3523  0D52  0848               	movf	??___fladd+7,w
  3524  0D53  3DC4               	addwfc	??___fladd+3,f
  3525  0D54  0844               	movf	??___fladd+3,w
  3526  0D55  00BC               	movwf	___fladd@b+3
  3527  0D56  0843               	movf	??___fladd+2,w
  3528  0D57  00BB               	movwf	___fladd@b+2
  3529  0D58  0842               	movf	??___fladd+1,w
  3530  0D59  00BA               	movwf	___fladd@b+1
  3531  0D5A  0841               	movf	??___fladd,w
  3532  0D5B  00B9               	movwf	___fladd@b
  3533  0D5C  3080               	movlw	128
  3534  0D5D  06C9               	xorwf	___fladd@signs,f
  3535  0D5E  09CC               	comf	___fladd@grs,f
  3536  0D5F  0FCC               	incfsz	___fladd@grs,f
  3537  0D60  2D70               	goto	l1026
  3538  0D61  3001               	movlw	1
  3539  0D62  07B9               	addwf	___fladd@b,f
  3540  0D63  3000               	movlw	0
  3541  0D64  3DBA               	addwfc	___fladd@b+1,f
  3542  0D65  3DBB               	addwfc	___fladd@b+2,f
  3543  0D66  3DBC               	addwfc	___fladd@b+3,f
  3544  0D67  2D70               	goto	l1026
  3545  0D68                     l3512:	
  3546  0D68  083D               	movf	___fladd@a,w
  3547  0D69  02B9               	subwf	___fladd@b,f
  3548  0D6A  083E               	movf	___fladd@a+1,w
  3549  0D6B  3BBA               	subwfb	___fladd@b+1,f
  3550  0D6C  083F               	movf	___fladd@a+2,w
  3551  0D6D  3BBB               	subwfb	___fladd@b+2,f
  3552  0D6E  0840               	movf	___fladd@a+3,w
  3553  0D6F  3BBC               	subwfb	___fladd@b+3,f
  3554  0D70                     l1026:	
  3555  0D70  083C               	movf	___fladd@b+3,w
  3556  0D71  043B               	iorwf	___fladd@b+2,w
  3557  0D72  043A               	iorwf	___fladd@b+1,w
  3558  0D73  0439               	iorwf	___fladd@b,w
  3559  0D74  1D03               	skipz
  3560  0D75  2D8D               	goto	l3530
  3561  0D76  084C               	movf	___fladd@grs,w
  3562  0D77  1D03               	btfss	3,2
  3563  0D78  2D8D               	goto	l3530
  3564  0D79  01B9               	clrf	?___fladd
  3565  0D7A  01BA               	clrf	?___fladd+1
  3566  0D7B  01BB               	clrf	?___fladd+2
  3567  0D7C  01BC               	clrf	?___fladd+3
  3568  0D7D  0008               	return
  3569  0D7E                     l3518:	
  3570  0D7E  35B9               	lslf	___fladd@b,f
  3571  0D7F  0DBA               	rlf	___fladd@b+1,f
  3572  0D80  0DBB               	rlf	___fladd@b+2,f
  3573  0D81  0DBC               	rlf	___fladd@b+3,f
  3574  0D82  1BCC               	btfsc	___fladd@grs,7
  3575  0D83  1439               	bsf	___fladd@b,0
  3576  0D84  1C4C               	btfss	___fladd@grs,0
  3577  0D85  2D89               	goto	l1031
  3578  0D86  1403               	setc
  3579  0D87  0DCC               	rlf	___fladd@grs,f
  3580  0D88  2D8A               	goto	l3526
  3581  0D89                     l1031:	
  3582  0D89  35CC               	lslf	___fladd@grs,f
  3583  0D8A                     l3526:	
  3584  0D8A  084B               	movf	___fladd@bexp,w
  3585  0D8B  1D03               	btfss	3,2
  3586  0D8C  03CB               	decf	___fladd@bexp,f
  3587  0D8D                     l3530:	
  3588  0D8D  1FBB               	btfss	___fladd@b+2,7
  3589  0D8E  2D7E               	goto	l3518
  3590  0D8F                     l3532:	
  3591  0D8F  01CA               	clrf	___fladd@aexp
  3592  0D90  1FCC               	btfss	___fladd@grs,7
  3593  0D91  2D9A               	goto	l3542
  3594  0D92  084C               	movf	___fladd@grs,w
  3595  0D93  397F               	andlw	127
  3596  0D94  1903               	btfsc	3,2
  3597  0D95  1839               	btfsc	___fladd@b,0
  3598  0D96  2D98               	goto	l3538
  3599  0D97  2D9A               	goto	l3542
  3600  0D98                     l3538:	
  3601  0D98  01CA               	clrf	___fladd@aexp
  3602  0D99  0ACA               	incf	___fladd@aexp,f
  3603  0D9A                     l3542:	
  3604  0D9A  084A               	movf	___fladd@aexp,w
  3605  0D9B  1903               	btfsc	3,2
  3606  0D9C  2DAB               	goto	l3554
  3607  0D9D  3001               	movlw	1
  3608  0D9E  07B9               	addwf	___fladd@b,f
  3609  0D9F  3000               	movlw	0
  3610  0DA0  3DBA               	addwfc	___fladd@b+1,f
  3611  0DA1  3DBB               	addwfc	___fladd@b+2,f
  3612  0DA2  3DBC               	addwfc	___fladd@b+3,f
  3613  0DA3  1C3C               	btfss	___fladd@b+3,0
  3614  0DA4  2DAB               	goto	l3554
  3615  0DA5  37BC               	asrf	___fladd@b+3,f
  3616  0DA6  0CBB               	rrf	___fladd@b+2,f
  3617  0DA7  0CBA               	rrf	___fladd@b+1,f
  3618  0DA8  0CB9               	rrf	___fladd@b,f
  3619  0DA9  0F4B               	incfsz	___fladd@bexp,w
  3620  0DAA  0ACB               	incf	___fladd@bexp,f
  3621  0DAB                     l3554:	
  3622  0DAB  0A4B               	incf	___fladd@bexp,w
  3623  0DAC  1D03               	btfss	3,2
  3624  0DAD  084B               	movf	___fladd@bexp,w
  3625  0DAE  1D03               	btfss	3,2
  3626  0DAF  2DB7               	goto	l3562
  3627  0DB0  01B9               	clrf	___fladd@b
  3628  0DB1  01BA               	clrf	___fladd@b+1
  3629  0DB2  01BB               	clrf	___fladd@b+2
  3630  0DB3  01BC               	clrf	___fladd@b+3
  3631  0DB4  084B               	movf	___fladd@bexp,w
  3632  0DB5  1903               	btfsc	3,2
  3633  0DB6  01C9               	clrf	___fladd@signs
  3634  0DB7                     l3562:	
  3635  0DB7  1C4B               	btfss	___fladd@bexp,0
  3636  0DB8  2DBB               	goto	l1046
  3637  0DB9  17BB               	bsf	___fladd@b+2,7
  3638  0DBA  2DBC               	goto	l3566
  3639  0DBB                     l1046:	
  3640  0DBB  13BB               	bcf	___fladd@b+2,7
  3641  0DBC                     l3566:	
  3642  0DBC  364B               	lsrf	___fladd@bexp,w
  3643  0DBD  00BC               	movwf	___fladd@b+3
  3644  0DBE  1BC9               	btfsc	___fladd@signs,7
  3645  0DBF  17BC               	bsf	___fladd@b+3,7
  3646  0DC0  0008               	return
  3647  0DC1                     __end_of___fladd:	
  3648  0DC1                     __ptext24:	
  3649 ;; *************** function ___flmul *****************
  3650 ;; Defined at:
  3651 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  b               4    0[BANK0 ] long 
  3654 ;;  a               4    4[BANK0 ] long 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;  prod            4   19[BANK0 ] struct .
  3657 ;;  grs             4   14[BANK0 ] unsigned long 
  3658 ;;  temp            2   23[BANK0 ] struct .
  3659 ;;  bexp            1   18[BANK0 ] unsigned char 
  3660 ;;  aexp            1   13[BANK0 ] unsigned char 
  3661 ;;  sign            1   12[BANK0 ] unsigned char 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  4    0[BANK0 ] unsigned char 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0, pclath, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 1F/0
  3668 ;;		On exit  : 1F/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3671 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3672 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3673 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3674 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3675 ;;Total ram usage:       25 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:    2
  3678 ;; This function calls:
  3679 ;;		__Umul8_16
  3680 ;; This function is called by:
  3681 ;;		_get_30v_current
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           
  3686                           ;psect for function ___flmul
  3687  0DC1                     ___flmul:	
  3688                           
  3689                           ;incstack = 0
  3690                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  3691  0DC1  0823               	movf	___flmul@b+3,w
  3692  0DC2  00AC               	movwf	___flmul@sign
  3693  0DC3  3080               	movlw	128
  3694  0DC4  05AC               	andwf	___flmul@sign,f
  3695  0DC5  3523               	lslf	___flmul@b+3,w
  3696  0DC6  00B2               	movwf	___flmul@bexp
  3697  0DC7  1BA2               	btfsc	___flmul@b+2,7
  3698  0DC8  1432               	bsf	___flmul@bexp,0
  3699  0DC9  0832               	movf	___flmul@bexp,w
  3700  0DCA  1903               	btfsc	3,2
  3701  0DCB  2DD4               	goto	l1091
  3702  0DCC  0F32               	incfsz	___flmul@bexp,w
  3703  0DCD  2DD2               	goto	l1092
  3704  0DCE  01A0               	clrf	___flmul@b
  3705  0DCF  01A1               	clrf	___flmul@b+1
  3706  0DD0  01A2               	clrf	___flmul@b+2
  3707  0DD1  01A3               	clrf	___flmul@b+3
  3708  0DD2                     l1092:	
  3709  0DD2  17A2               	bsf	___flmul@b+2,7
  3710  0DD3  2DD8               	goto	l3588
  3711  0DD4                     l1091:	
  3712  0DD4  01A0               	clrf	___flmul@b
  3713  0DD5  01A1               	clrf	___flmul@b+1
  3714  0DD6  01A2               	clrf	___flmul@b+2
  3715  0DD7  01A3               	clrf	___flmul@b+3
  3716  0DD8                     l3588:	
  3717  0DD8  0827               	movf	___flmul@a+3,w
  3718  0DD9  3980               	andlw	128
  3719  0DDA  06AC               	xorwf	___flmul@sign,f
  3720  0DDB  3527               	lslf	___flmul@a+3,w
  3721  0DDC  00AD               	movwf	___flmul@aexp
  3722  0DDD  1BA6               	btfsc	___flmul@a+2,7
  3723  0DDE  142D               	bsf	___flmul@aexp,0
  3724  0DDF  082D               	movf	___flmul@aexp,w
  3725  0DE0  1903               	btfsc	3,2
  3726  0DE1  2DEA               	goto	l1095
  3727  0DE2  0F2D               	incfsz	___flmul@aexp,w
  3728  0DE3  2DE8               	goto	l1096
  3729  0DE4  01A4               	clrf	___flmul@a
  3730  0DE5  01A5               	clrf	___flmul@a+1
  3731  0DE6  01A6               	clrf	___flmul@a+2
  3732  0DE7  01A7               	clrf	___flmul@a+3
  3733  0DE8                     l1096:	
  3734  0DE8  17A6               	bsf	___flmul@a+2,7
  3735  0DE9  2DEE               	goto	l3600
  3736  0DEA                     l1095:	
  3737  0DEA  01A4               	clrf	___flmul@a
  3738  0DEB  01A5               	clrf	___flmul@a+1
  3739  0DEC  01A6               	clrf	___flmul@a+2
  3740  0DED  01A7               	clrf	___flmul@a+3
  3741  0DEE                     l3600:	
  3742  0DEE  082D               	movf	___flmul@aexp,w
  3743  0DEF  1D03               	btfss	3,2
  3744  0DF0  0832               	movf	___flmul@bexp,w
  3745  0DF1  1D03               	btfss	3,2
  3746  0DF2  2DF8               	goto	l3604
  3747  0DF3  01A0               	clrf	?___flmul
  3748  0DF4  01A1               	clrf	?___flmul+1
  3749  0DF5  01A2               	clrf	?___flmul+2
  3750  0DF6  01A3               	clrf	?___flmul+3
  3751  0DF7  0008               	return
  3752  0DF8                     l3604:	
  3753  0DF8  0820               	movf	___flmul@b,w
  3754  0DF9  00F0               	movwf	__Umul8_16@multiplicand
  3755  0DFA  0826               	movf	___flmul@a+2,w
  3756  0DFB  2743  318C         	fcall	__Umul8_16
  3757  0DFD  0871               	movf	?__Umul8_16+1,w
  3758  0DFE  00B8               	movwf	___flmul@temp+1
  3759  0DFF  0870               	movf	?__Umul8_16,w
  3760  0E00  00B7               	movwf	___flmul@temp
  3761  0E01  00AE               	movwf	___flmul@grs
  3762  0E02  01AF               	clrf	___flmul@grs+1
  3763  0E03  01B0               	clrf	___flmul@grs+2
  3764  0E04  01B1               	clrf	___flmul@grs+3
  3765  0E05  0838               	movf	___flmul@temp+1,w
  3766  0E06  00B3               	movwf	___flmul@prod
  3767  0E07  01B4               	clrf	___flmul@prod+1
  3768  0E08  01B5               	clrf	___flmul@prod+2
  3769  0E09  01B6               	clrf	___flmul@prod+3
  3770  0E0A  0821               	movf	___flmul@b+1,w
  3771  0E0B  00F0               	movwf	__Umul8_16@multiplicand
  3772  0E0C  0825               	movf	___flmul@a+1,w
  3773  0E0D  2743  318C         	fcall	__Umul8_16
  3774  0E0F  0871               	movf	?__Umul8_16+1,w
  3775  0E10  00B8               	movwf	___flmul@temp+1
  3776  0E11  0870               	movf	?__Umul8_16,w
  3777  0E12  00B7               	movwf	___flmul@temp
  3778  0E13  07AE               	addwf	___flmul@grs,f
  3779  0E14  3001               	movlw	1
  3780  0E15  1803               	skipnc
  3781  0E16  07AF               	addwf	___flmul@grs+1,f
  3782  0E17  1803               	skipnc
  3783  0E18  07B0               	addwf	___flmul@grs+2,f
  3784  0E19  1803               	skipnc
  3785  0E1A  07B1               	addwf	___flmul@grs+3,f
  3786  0E1B  0838               	movf	___flmul@temp+1,w
  3787  0E1C  07B3               	addwf	___flmul@prod,f
  3788  0E1D  3001               	movlw	1
  3789  0E1E  1803               	skipnc
  3790  0E1F  07B4               	addwf	___flmul@prod+1,f
  3791  0E20  1803               	skipnc
  3792  0E21  07B5               	addwf	___flmul@prod+2,f
  3793  0E22  1803               	skipnc
  3794  0E23  07B6               	addwf	___flmul@prod+3,f
  3795  0E24  0822               	movf	___flmul@b+2,w
  3796  0E25  00F0               	movwf	__Umul8_16@multiplicand
  3797  0E26  0824               	movf	___flmul@a,w
  3798  0E27  2743  318C         	fcall	__Umul8_16
  3799  0E29  0871               	movf	?__Umul8_16+1,w
  3800  0E2A  00B8               	movwf	___flmul@temp+1
  3801  0E2B  0870               	movf	?__Umul8_16,w
  3802  0E2C  00B7               	movwf	___flmul@temp
  3803  0E2D  07AE               	addwf	___flmul@grs,f
  3804  0E2E  3001               	movlw	1
  3805  0E2F  1803               	skipnc
  3806  0E30  07AF               	addwf	___flmul@grs+1,f
  3807  0E31  1803               	skipnc
  3808  0E32  07B0               	addwf	___flmul@grs+2,f
  3809  0E33  1803               	skipnc
  3810  0E34  07B1               	addwf	___flmul@grs+3,f
  3811  0E35  0838               	movf	___flmul@temp+1,w
  3812  0E36  07B3               	addwf	___flmul@prod,f
  3813  0E37  3001               	movlw	1
  3814  0E38  1803               	skipnc
  3815  0E39  07B4               	addwf	___flmul@prod+1,f
  3816  0E3A  1803               	skipnc
  3817  0E3B  07B5               	addwf	___flmul@prod+2,f
  3818  0E3C  1803               	skipnc
  3819  0E3D  07B6               	addwf	___flmul@prod+3,f
  3820  0E3E  0830               	movf	___flmul@grs+2,w
  3821  0E3F  00B1               	movwf	___flmul@grs+3
  3822  0E40  082F               	movf	___flmul@grs+1,w
  3823  0E41  00B0               	movwf	___flmul@grs+2
  3824  0E42  082E               	movf	___flmul@grs,w
  3825  0E43  00AF               	movwf	___flmul@grs+1
  3826  0E44  01AE               	clrf	___flmul@grs
  3827  0E45  0821               	movf	___flmul@b+1,w
  3828  0E46  00F0               	movwf	__Umul8_16@multiplicand
  3829  0E47  0824               	movf	___flmul@a,w
  3830  0E48  2743  318C         	fcall	__Umul8_16
  3831  0E4A  0871               	movf	?__Umul8_16+1,w
  3832  0E4B  00B8               	movwf	___flmul@temp+1
  3833  0E4C  0870               	movf	?__Umul8_16,w
  3834  0E4D  00B7               	movwf	___flmul@temp
  3835  0E4E  07AE               	addwf	___flmul@grs,f
  3836  0E4F  0838               	movf	___flmul@temp+1,w
  3837  0E50  3DAF               	addwfc	___flmul@grs+1,f
  3838  0E51  3000               	movlw	0
  3839  0E52  3DB0               	addwfc	___flmul@grs+2,f
  3840  0E53  3DB1               	addwfc	___flmul@grs+3,f
  3841  0E54  0820               	movf	___flmul@b,w
  3842  0E55  00F0               	movwf	__Umul8_16@multiplicand
  3843  0E56  0825               	movf	___flmul@a+1,w
  3844  0E57  2743  318C         	fcall	__Umul8_16
  3845  0E59  0871               	movf	?__Umul8_16+1,w
  3846  0E5A  00B8               	movwf	___flmul@temp+1
  3847  0E5B  0870               	movf	?__Umul8_16,w
  3848  0E5C  00B7               	movwf	___flmul@temp
  3849  0E5D  07AE               	addwf	___flmul@grs,f
  3850  0E5E  0838               	movf	___flmul@temp+1,w
  3851  0E5F  3DAF               	addwfc	___flmul@grs+1,f
  3852  0E60  3000               	movlw	0
  3853  0E61  3DB0               	addwfc	___flmul@grs+2,f
  3854  0E62  3DB1               	addwfc	___flmul@grs+3,f
  3855  0E63  0830               	movf	___flmul@grs+2,w
  3856  0E64  00B1               	movwf	___flmul@grs+3
  3857  0E65  082F               	movf	___flmul@grs+1,w
  3858  0E66  00B0               	movwf	___flmul@grs+2
  3859  0E67  082E               	movf	___flmul@grs,w
  3860  0E68  00AF               	movwf	___flmul@grs+1
  3861  0E69  01AE               	clrf	___flmul@grs
  3862  0E6A  0820               	movf	___flmul@b,w
  3863  0E6B  00F0               	movwf	__Umul8_16@multiplicand
  3864  0E6C  0824               	movf	___flmul@a,w
  3865  0E6D  2743  318C         	fcall	__Umul8_16
  3866  0E6F  0871               	movf	?__Umul8_16+1,w
  3867  0E70  00B8               	movwf	___flmul@temp+1
  3868  0E71  0870               	movf	?__Umul8_16,w
  3869  0E72  00B7               	movwf	___flmul@temp
  3870  0E73  07AE               	addwf	___flmul@grs,f
  3871  0E74  0838               	movf	___flmul@temp+1,w
  3872  0E75  3DAF               	addwfc	___flmul@grs+1,f
  3873  0E76  3000               	movlw	0
  3874  0E77  3DB0               	addwfc	___flmul@grs+2,f
  3875  0E78  3DB1               	addwfc	___flmul@grs+3,f
  3876  0E79  0821               	movf	___flmul@b+1,w
  3877  0E7A  00F0               	movwf	__Umul8_16@multiplicand
  3878  0E7B  0826               	movf	___flmul@a+2,w
  3879  0E7C  2743  318C         	fcall	__Umul8_16
  3880  0E7E  0871               	movf	?__Umul8_16+1,w
  3881  0E7F  00B8               	movwf	___flmul@temp+1
  3882  0E80  0870               	movf	?__Umul8_16,w
  3883  0E81  00B7               	movwf	___flmul@temp
  3884  0E82  07B3               	addwf	___flmul@prod,f
  3885  0E83  0838               	movf	___flmul@temp+1,w
  3886  0E84  3DB4               	addwfc	___flmul@prod+1,f
  3887  0E85  3000               	movlw	0
  3888  0E86  3DB5               	addwfc	___flmul@prod+2,f
  3889  0E87  3DB6               	addwfc	___flmul@prod+3,f
  3890  0E88  0822               	movf	___flmul@b+2,w
  3891  0E89  00F0               	movwf	__Umul8_16@multiplicand
  3892  0E8A  0825               	movf	___flmul@a+1,w
  3893  0E8B  2743  318C         	fcall	__Umul8_16
  3894  0E8D  0871               	movf	?__Umul8_16+1,w
  3895  0E8E  00B8               	movwf	___flmul@temp+1
  3896  0E8F  0870               	movf	?__Umul8_16,w
  3897  0E90  00B7               	movwf	___flmul@temp
  3898  0E91  07B3               	addwf	___flmul@prod,f
  3899  0E92  0838               	movf	___flmul@temp+1,w
  3900  0E93  3DB4               	addwfc	___flmul@prod+1,f
  3901  0E94  3000               	movlw	0
  3902  0E95  3DB5               	addwfc	___flmul@prod+2,f
  3903  0E96  3DB6               	addwfc	___flmul@prod+3,f
  3904  0E97  0822               	movf	___flmul@b+2,w
  3905  0E98  00F0               	movwf	__Umul8_16@multiplicand
  3906  0E99  0826               	movf	___flmul@a+2,w
  3907  0E9A  2743  318C         	fcall	__Umul8_16
  3908  0E9C  0871               	movf	?__Umul8_16+1,w
  3909  0E9D  00B8               	movwf	___flmul@temp+1
  3910  0E9E  0870               	movf	?__Umul8_16,w
  3911  0E9F  00B7               	movwf	___flmul@temp
  3912  0EA0  00A8               	movwf	??___flmul
  3913  0EA1  0838               	movf	___flmul@temp+1,w
  3914  0EA2  00A9               	movwf	??___flmul+1
  3915  0EA3  01AA               	clrf	??___flmul+2
  3916  0EA4  01AB               	clrf	??___flmul+3
  3917  0EA5  082A               	movf	??___flmul+2,w
  3918  0EA6  00AB               	movwf	??___flmul+3
  3919  0EA7  0829               	movf	??___flmul+1,w
  3920  0EA8  00AA               	movwf	??___flmul+2
  3921  0EA9  0828               	movf	??___flmul,w
  3922  0EAA  00A9               	movwf	??___flmul+1
  3923  0EAB  01A8               	clrf	??___flmul
  3924  0EAC  0828               	movf	??___flmul,w
  3925  0EAD  07B3               	addwf	___flmul@prod,f
  3926  0EAE  0829               	movf	??___flmul+1,w
  3927  0EAF  3DB4               	addwfc	___flmul@prod+1,f
  3928  0EB0  082A               	movf	??___flmul+2,w
  3929  0EB1  3DB5               	addwfc	___flmul@prod+2,f
  3930  0EB2  082B               	movf	??___flmul+3,w
  3931  0EB3  3DB6               	addwfc	___flmul@prod+3,f
  3932  0EB4  0831               	movf	___flmul@grs+3,w
  3933  0EB5  07B3               	addwf	___flmul@prod,f
  3934  0EB6  3001               	movlw	1
  3935  0EB7  1803               	skipnc
  3936  0EB8  07B4               	addwf	___flmul@prod+1,f
  3937  0EB9  1803               	skipnc
  3938  0EBA  07B5               	addwf	___flmul@prod+2,f
  3939  0EBB  1803               	skipnc
  3940  0EBC  07B6               	addwf	___flmul@prod+3,f
  3941  0EBD  0830               	movf	___flmul@grs+2,w
  3942  0EBE  00B1               	movwf	___flmul@grs+3
  3943  0EBF  082F               	movf	___flmul@grs+1,w
  3944  0EC0  00B0               	movwf	___flmul@grs+2
  3945  0EC1  082E               	movf	___flmul@grs,w
  3946  0EC2  00AF               	movwf	___flmul@grs+1
  3947  0EC3  01AE               	clrf	___flmul@grs
  3948  0EC4  0832               	movf	___flmul@bexp,w
  3949  0EC5  00B7               	movwf	___flmul@temp
  3950  0EC6  01B8               	clrf	___flmul@temp+1
  3951  0EC7  082D               	movf	___flmul@aexp,w
  3952  0EC8  07B7               	addwf	___flmul@temp,f
  3953  0EC9  1803               	skipnc
  3954  0ECA  0AB8               	incf	___flmul@temp+1,f
  3955  0ECB  3082               	movlw	-126
  3956  0ECC                     L22:	
  3957  0ECC  07B7               	addwf	___flmul@temp,f
  3958  0ECD  1C03               	skipc
  3959  0ECE  03B8               	decf	___flmul@temp+1,f
  3960  0ECF  1BB5               	btfsc	___flmul@prod+2,7
  3961  0ED0  2EDD               	goto	l3652
  3962  0ED1  35B3               	lslf	___flmul@prod,f
  3963  0ED2  0DB4               	rlf	___flmul@prod+1,f
  3964  0ED3  0DB5               	rlf	___flmul@prod+2,f
  3965  0ED4  0DB6               	rlf	___flmul@prod+3,f
  3966  0ED5  1BB1               	btfsc	___flmul@grs+3,7
  3967  0ED6  1433               	bsf	___flmul@prod,0
  3968  0ED7  30FF               	movlw	-1
  3969  0ED8  35AE               	lslf	___flmul@grs,f
  3970  0ED9  0DAF               	rlf	___flmul@grs+1,f
  3971  0EDA  0DB0               	rlf	___flmul@grs+2,f
  3972  0EDB  0DB1               	rlf	___flmul@grs+3,f
  3973  0EDC  2ECC               	goto	L22
  3974  0EDD                     l3652:	
  3975  0EDD  01AD               	clrf	___flmul@aexp
  3976  0EDE  1FB1               	btfss	___flmul@grs+3,7
  3977  0EDF  2EF2               	goto	l3662
  3978  0EE0  082E               	movf	___flmul@grs,w
  3979  0EE1  00A8               	movwf	??___flmul
  3980  0EE2  082F               	movf	___flmul@grs+1,w
  3981  0EE3  00A9               	movwf	??___flmul+1
  3982  0EE4  0830               	movf	___flmul@grs+2,w
  3983  0EE5  00AA               	movwf	??___flmul+2
  3984  0EE6  307F               	movlw	127
  3985  0EE7  0531               	andwf	___flmul@grs+3,w
  3986  0EE8  00AB               	movwf	??___flmul+3
  3987  0EE9  042A               	iorwf	??___flmul+2,w
  3988  0EEA  0429               	iorwf	??___flmul+1,w
  3989  0EEB  0428               	iorwf	??___flmul,w
  3990  0EEC  1903               	skipnz
  3991  0EED  1833               	btfsc	___flmul@prod,0
  3992  0EEE  2EF0               	goto	l3658
  3993  0EEF  2EF2               	goto	l3662
  3994  0EF0                     l3658:	
  3995  0EF0  01AD               	clrf	___flmul@aexp
  3996  0EF1  0AAD               	incf	___flmul@aexp,f
  3997  0EF2                     l3662:	
  3998  0EF2  082D               	movf	___flmul@aexp,w
  3999  0EF3  1903               	btfsc	3,2
  4000  0EF4  2F04               	goto	l3672
  4001  0EF5  3001               	movlw	1
  4002  0EF6  07B3               	addwf	___flmul@prod,f
  4003  0EF7  3000               	movlw	0
  4004  0EF8  3DB4               	addwfc	___flmul@prod+1,f
  4005  0EF9  3DB5               	addwfc	___flmul@prod+2,f
  4006  0EFA  3DB6               	addwfc	___flmul@prod+3,f
  4007  0EFB  1C36               	btfss	___flmul@prod+3,0
  4008  0EFC  2F04               	goto	l3672
  4009  0EFD  37B6               	asrf	___flmul@prod+3,f
  4010  0EFE  0CB5               	rrf	___flmul@prod+2,f
  4011  0EFF  0CB4               	rrf	___flmul@prod+1,f
  4012  0F00  0CB3               	rrf	___flmul@prod,f
  4013  0F01  0AB7               	incf	___flmul@temp,f
  4014  0F02  1903               	skipnz
  4015  0F03  0AB8               	incf	___flmul@temp+1,f
  4016  0F04                     l3672:	
  4017  0F04  0838               	movf	___flmul@temp+1,w
  4018  0F05  3A80               	xorlw	128
  4019  0F06  00A8               	movwf	??___flmul
  4020  0F07  3080               	movlw	128
  4021  0F08  0228               	subwf	??___flmul,w
  4022  0F09  1D03               	skipz
  4023  0F0A  2F0D               	goto	u3835
  4024  0F0B  30FF               	movlw	255
  4025  0F0C  0237               	subwf	___flmul@temp,w
  4026  0F0D                     u3835:	
  4027  0F0D  1C03               	skipc
  4028  0F0E  2F17               	goto	l3676
  4029  0F0F  307F               	movlw	127
  4030  0F10  0020               	movlb	0	; select bank0
  4031  0F11  00B6               	movwf	___flmul@prod+3
  4032  0F12  3080               	movlw	128
  4033  0F13  00B5               	movwf	___flmul@prod+2
  4034  0F14  01B4               	clrf	___flmul@prod+1
  4035  0F15  01B3               	clrf	___flmul@prod
  4036  0F16  2F38               	goto	l1113
  4037  0F17                     l3676:	
  4038  0F17  0020               	movlb	0	; select bank0
  4039  0F18  0838               	movf	___flmul@temp+1,w
  4040  0F19  3A80               	xorlw	128
  4041  0F1A  00A8               	movwf	??___flmul
  4042  0F1B  3080               	movlw	128
  4043  0F1C  0228               	subwf	??___flmul,w
  4044  0F1D  1D03               	skipz
  4045  0F1E  2F21               	goto	u3845
  4046  0F1F  3001               	movlw	1
  4047  0F20  0237               	subwf	___flmul@temp,w
  4048  0F21                     u3845:	
  4049  0F21  1803               	skipnc
  4050  0F22  2F2A               	goto	l3682
  4051  0F23  0020               	movlb	0	; select bank0
  4052  0F24  01B3               	clrf	___flmul@prod
  4053  0F25  01B4               	clrf	___flmul@prod+1
  4054  0F26  01B5               	clrf	___flmul@prod+2
  4055  0F27  01B6               	clrf	___flmul@prod+3
  4056  0F28  01AC               	clrf	___flmul@sign
  4057  0F29  2F38               	goto	l1113
  4058  0F2A                     l3682:	
  4059  0F2A  0020               	movlb	0	; select bank0
  4060  0F2B  0837               	movf	___flmul@temp,w
  4061  0F2C  00B2               	movwf	___flmul@bexp
  4062  0F2D  30FF               	movlw	255
  4063  0F2E  05B3               	andwf	___flmul@prod,f
  4064  0F2F  05B4               	andwf	___flmul@prod+1,f
  4065  0F30  307F               	movlw	127
  4066  0F31  05B5               	andwf	___flmul@prod+2,f
  4067  0F32  3000               	movlw	0
  4068  0F33  01B6               	clrf	___flmul@prod+3
  4069  0F34  1832               	btfsc	___flmul@bexp,0
  4070  0F35  17B5               	bsf	___flmul@prod+2,7
  4071  0F36  3632               	lsrf	___flmul@bexp,w
  4072  0F37  00B6               	movwf	___flmul@prod+3
  4073  0F38                     l1113:	
  4074  0F38  082C               	movf	___flmul@sign,w
  4075  0F39  04B6               	iorwf	___flmul@prod+3,f
  4076  0F3A  0836               	movf	___flmul@prod+3,w
  4077  0F3B  00A3               	movwf	?___flmul+3
  4078  0F3C  0835               	movf	___flmul@prod+2,w
  4079  0F3D  00A2               	movwf	?___flmul+2
  4080  0F3E  0834               	movf	___flmul@prod+1,w
  4081  0F3F  00A1               	movwf	?___flmul+1
  4082  0F40  0833               	movf	___flmul@prod,w
  4083  0F41  00A0               	movwf	?___flmul
  4084  0F42  0008               	return
  4085  0F43                     __end_of___flmul:	
  4086  0F43                     __ptext25:	
  4087 ;; *************** function __Umul8_16 *****************
  4088 ;; Defined at:
  4089 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8_16.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;  multiplier      1    wreg     unsigned char 
  4092 ;;  multiplicand    1    0[COMMON] unsigned char 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  multiplier      1    5[COMMON] unsigned char 
  4095 ;;  word_mpld       2    6[COMMON] unsigned int 
  4096 ;;  product         2    3[COMMON] unsigned int 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  2    0[COMMON] unsigned int 
  4099 ;; Registers used:
  4100 ;;		wreg, status,2, status,0
  4101 ;; Tracked objects:
  4102 ;;		On entry : 1F/0
  4103 ;;		On exit  : 1F/0
  4104 ;;		Unchanged: 1F/0
  4105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4106 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4107 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4109 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4110 ;;Total ram usage:        8 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    1
  4113 ;; This function calls:
  4114 ;;		Nothing
  4115 ;; This function is called by:
  4116 ;;		___flmul
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           
  4121                           ;psect for function __Umul8_16
  4122  0F43                     __Umul8_16:	
  4123                           
  4124                           ;incstack = 0
  4125                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4126                           ;__Umul8_16@multiplier stored from wreg
  4127  0F43  00F5               	movwf	__Umul8_16@multiplier
  4128  0F44  01F3               	clrf	__Umul8_16@product
  4129  0F45  01F4               	clrf	__Umul8_16@product+1
  4130  0F46  0870               	movf	__Umul8_16@multiplicand,w
  4131  0F47  00F6               	movwf	__Umul8_16@word_mpld
  4132  0F48  01F7               	clrf	__Umul8_16@word_mpld+1
  4133  0F49  1C75               	btfss	__Umul8_16@multiplier,0
  4134  0F4A  2F4F               	goto	l3188
  4135  0F4B  0876               	movf	__Umul8_16@word_mpld,w
  4136  0F4C  07F3               	addwf	__Umul8_16@product,f
  4137  0F4D  0877               	movf	__Umul8_16@word_mpld+1,w
  4138  0F4E  3DF4               	addwfc	__Umul8_16@product+1,f
  4139  0F4F                     l3188:	
  4140  0F4F  35F6               	lslf	__Umul8_16@word_mpld,f
  4141  0F50  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4142  0F51  1CF5               	btfss	__Umul8_16@multiplier,1
  4143  0F52  2F57               	goto	l3194
  4144  0F53  0876               	movf	__Umul8_16@word_mpld,w
  4145  0F54  07F3               	addwf	__Umul8_16@product,f
  4146  0F55  0877               	movf	__Umul8_16@word_mpld+1,w
  4147  0F56  3DF4               	addwfc	__Umul8_16@product+1,f
  4148  0F57                     l3194:	
  4149  0F57  35F6               	lslf	__Umul8_16@word_mpld,f
  4150  0F58  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4151  0F59  1D75               	btfss	__Umul8_16@multiplier,2
  4152  0F5A  2F5F               	goto	l3200
  4153  0F5B  0876               	movf	__Umul8_16@word_mpld,w
  4154  0F5C  07F3               	addwf	__Umul8_16@product,f
  4155  0F5D  0877               	movf	__Umul8_16@word_mpld+1,w
  4156  0F5E  3DF4               	addwfc	__Umul8_16@product+1,f
  4157  0F5F                     l3200:	
  4158  0F5F  35F6               	lslf	__Umul8_16@word_mpld,f
  4159  0F60  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4160  0F61  1DF5               	btfss	__Umul8_16@multiplier,3
  4161  0F62  2F67               	goto	l3206
  4162  0F63  0876               	movf	__Umul8_16@word_mpld,w
  4163  0F64  07F3               	addwf	__Umul8_16@product,f
  4164  0F65  0877               	movf	__Umul8_16@word_mpld+1,w
  4165  0F66  3DF4               	addwfc	__Umul8_16@product+1,f
  4166  0F67                     l3206:	
  4167  0F67  35F6               	lslf	__Umul8_16@word_mpld,f
  4168  0F68  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4169  0F69  1E75               	btfss	__Umul8_16@multiplier,4
  4170  0F6A  2F6F               	goto	l3212
  4171  0F6B  0876               	movf	__Umul8_16@word_mpld,w
  4172  0F6C  07F3               	addwf	__Umul8_16@product,f
  4173  0F6D  0877               	movf	__Umul8_16@word_mpld+1,w
  4174  0F6E  3DF4               	addwfc	__Umul8_16@product+1,f
  4175  0F6F                     l3212:	
  4176  0F6F  35F6               	lslf	__Umul8_16@word_mpld,f
  4177  0F70  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4178  0F71  1EF5               	btfss	__Umul8_16@multiplier,5
  4179  0F72  2F77               	goto	l3218
  4180  0F73  0876               	movf	__Umul8_16@word_mpld,w
  4181  0F74  07F3               	addwf	__Umul8_16@product,f
  4182  0F75  0877               	movf	__Umul8_16@word_mpld+1,w
  4183  0F76  3DF4               	addwfc	__Umul8_16@product+1,f
  4184  0F77                     l3218:	
  4185  0F77  35F6               	lslf	__Umul8_16@word_mpld,f
  4186  0F78  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4187  0F79  1F75               	btfss	__Umul8_16@multiplier,6
  4188  0F7A  2F7F               	goto	l3224
  4189  0F7B  0876               	movf	__Umul8_16@word_mpld,w
  4190  0F7C  07F3               	addwf	__Umul8_16@product,f
  4191  0F7D  0877               	movf	__Umul8_16@word_mpld+1,w
  4192  0F7E  3DF4               	addwfc	__Umul8_16@product+1,f
  4193  0F7F                     l3224:	
  4194  0F7F  35F6               	lslf	__Umul8_16@word_mpld,f
  4195  0F80  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4196  0F81  1FF5               	btfss	__Umul8_16@multiplier,7
  4197  0F82  2F87               	goto	l1145
  4198  0F83  0876               	movf	__Umul8_16@word_mpld,w
  4199  0F84  07F3               	addwf	__Umul8_16@product,f
  4200  0F85  0877               	movf	__Umul8_16@word_mpld+1,w
  4201  0F86  3DF4               	addwfc	__Umul8_16@product+1,f
  4202  0F87                     l1145:	
  4203  0F87  0874               	movf	__Umul8_16@product+1,w
  4204  0F88  00F1               	movwf	?__Umul8_16+1
  4205  0F89  0873               	movf	__Umul8_16@product,w
  4206  0F8A  00F0               	movwf	?__Umul8_16
  4207  0F8B  0008               	return
  4208  0F8C                     __end_of__Umul8_16:	
  4209  0F8C                     __ptext22:	
  4210 ;; *************** function ___xxtofl *****************
  4211 ;; Defined at:
  4212 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;  sign            1    wreg     unsigned char 
  4215 ;;  val             4    0[COMMON] long 
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  sign            1    8[COMMON] unsigned char 
  4218 ;;  arg             4   10[COMMON] unsigned long 
  4219 ;;  exp             1    9[COMMON] unsigned char 
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  4    0[COMMON] unsigned char 
  4222 ;; Registers used:
  4223 ;;		wreg, status,2, status,0
  4224 ;; Tracked objects:
  4225 ;;		On entry : 1F/0
  4226 ;;		On exit  : 1F/0
  4227 ;;		Unchanged: 1F/0
  4228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4230 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4231 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4232 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4233 ;;Total ram usage:       14 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; Hardware stack levels required when called:    1
  4236 ;; This function calls:
  4237 ;;		Nothing
  4238 ;; This function is called by:
  4239 ;;		_get_30v_current
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           
  4244                           ;psect for function ___xxtofl
  4245  0F8C                     ___xxtofl:	
  4246                           
  4247                           ;incstack = 0
  4248                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4249                           ;___xxtofl@sign stored from wreg
  4250  0F8C  00F8               	movwf	___xxtofl@sign
  4251  0F8D  0878               	movf	___xxtofl@sign,w
  4252  0F8E  1D03               	btfss	3,2
  4253  0F8F  1FF3               	btfss	___xxtofl@val+3,7
  4254  0F90  2FA1               	goto	l3700
  4255  0F91  0970               	comf	___xxtofl@val,w
  4256  0F92  00FA               	movwf	___xxtofl@arg
  4257  0F93  0971               	comf	___xxtofl@val+1,w
  4258  0F94  00FB               	movwf	___xxtofl@arg+1
  4259  0F95  0972               	comf	___xxtofl@val+2,w
  4260  0F96  00FC               	movwf	___xxtofl@arg+2
  4261  0F97  0973               	comf	___xxtofl@val+3,w
  4262  0F98  00FD               	movwf	___xxtofl@arg+3
  4263  0F99  0AFA               	incf	___xxtofl@arg,f
  4264  0F9A  1903               	skipnz
  4265  0F9B  0AFB               	incf	___xxtofl@arg+1,f
  4266  0F9C  1903               	skipnz
  4267  0F9D  0AFC               	incf	___xxtofl@arg+2,f
  4268  0F9E  1903               	skipnz
  4269  0F9F  0AFD               	incf	___xxtofl@arg+3,f
  4270  0FA0  2FA9               	goto	l1120
  4271  0FA1                     l3700:	
  4272  0FA1  0873               	movf	___xxtofl@val+3,w
  4273  0FA2  00FD               	movwf	___xxtofl@arg+3
  4274  0FA3  0872               	movf	___xxtofl@val+2,w
  4275  0FA4  00FC               	movwf	___xxtofl@arg+2
  4276  0FA5  0871               	movf	___xxtofl@val+1,w
  4277  0FA6  00FB               	movwf	___xxtofl@arg+1
  4278  0FA7  0870               	movf	___xxtofl@val,w
  4279  0FA8  00FA               	movwf	___xxtofl@arg
  4280  0FA9                     l1120:	
  4281  0FA9  0873               	movf	___xxtofl@val+3,w
  4282  0FAA  0472               	iorwf	___xxtofl@val+2,w
  4283  0FAB  0471               	iorwf	___xxtofl@val+1,w
  4284  0FAC  0470               	iorwf	___xxtofl@val,w
  4285  0FAD  1D03               	skipz
  4286  0FAE  2FB4               	goto	l3704
  4287  0FAF  01F0               	clrf	?___xxtofl
  4288  0FB0  01F1               	clrf	?___xxtofl+1
  4289  0FB1  01F2               	clrf	?___xxtofl+2
  4290  0FB2  01F3               	clrf	?___xxtofl+3
  4291  0FB3  0008               	return
  4292  0FB4                     l3704:	
  4293  0FB4  3096               	movlw	150
  4294  0FB5  00F9               	movwf	___xxtofl@exp
  4295  0FB6                     l3708:	
  4296  0FB6  30FE               	movlw	254
  4297  0FB7  057D               	andwf	___xxtofl@arg+3,w
  4298  0FB8  1903               	btfsc	3,2
  4299  0FB9  2FCB               	goto	l3716
  4300  0FBA  0AF9               	incf	___xxtofl@exp,f
  4301  0FBB  36FD               	lsrf	___xxtofl@arg+3,f
  4302  0FBC  0CFC               	rrf	___xxtofl@arg+2,f
  4303  0FBD  0CFB               	rrf	___xxtofl@arg+1,f
  4304  0FBE  0CFA               	rrf	___xxtofl@arg,f
  4305  0FBF  2FB6               	goto	l3708
  4306  0FC0                     l3710:	
  4307  0FC0  3001               	movlw	1
  4308  0FC1  0AF9               	incf	___xxtofl@exp,f
  4309  0FC2  07FA               	addwf	___xxtofl@arg,f
  4310  0FC3  3000               	movlw	0
  4311  0FC4  3DFB               	addwfc	___xxtofl@arg+1,f
  4312  0FC5  3DFC               	addwfc	___xxtofl@arg+2,f
  4313  0FC6  3DFD               	addwfc	___xxtofl@arg+3,f
  4314  0FC7  36FD               	lsrf	___xxtofl@arg+3,f
  4315  0FC8  0CFC               	rrf	___xxtofl@arg+2,f
  4316  0FC9  0CFB               	rrf	___xxtofl@arg+1,f
  4317  0FCA  0CFA               	rrf	___xxtofl@arg,f
  4318  0FCB                     l3716:	
  4319  0FCB  30FF               	movlw	255
  4320  0FCC  057D               	andwf	___xxtofl@arg+3,w
  4321  0FCD  1903               	btfsc	3,2
  4322  0FCE  2FD9               	goto	l3720
  4323  0FCF  2FC0               	goto	l3710
  4324  0FD0                     l3722:	
  4325  0FD0  3002               	movlw	2
  4326  0FD1  0279               	subwf	___xxtofl@exp,w
  4327  0FD2  1C03               	btfss	3,0
  4328  0FD3  2FDB               	goto	l1133
  4329  0FD4  03F9               	decf	___xxtofl@exp,f
  4330  0FD5  35FA               	lslf	___xxtofl@arg,f
  4331  0FD6  0DFB               	rlf	___xxtofl@arg+1,f
  4332  0FD7  0DFC               	rlf	___xxtofl@arg+2,f
  4333  0FD8  0DFD               	rlf	___xxtofl@arg+3,f
  4334  0FD9                     l3720:	
  4335  0FD9  1FFC               	btfss	___xxtofl@arg+2,7
  4336  0FDA  2FD0               	goto	l3722
  4337  0FDB                     l1133:	
  4338  0FDB  1879               	btfsc	___xxtofl@exp,0
  4339  0FDC  2FE4               	goto	l3726
  4340  0FDD  30FF               	movlw	255
  4341  0FDE  05FA               	andwf	___xxtofl@arg,f
  4342  0FDF  05FB               	andwf	___xxtofl@arg+1,f
  4343  0FE0  307F               	movlw	127
  4344  0FE1  05FC               	andwf	___xxtofl@arg+2,f
  4345  0FE2  30FF               	movlw	255
  4346  0FE3  05FD               	andwf	___xxtofl@arg+3,f
  4347  0FE4                     l3726:	
  4348  0FE4  36F9               	lsrf	___xxtofl@exp,f
  4349  0FE5  0879               	movf	___xxtofl@exp,w
  4350  0FE6  00F7               	movwf	??___xxtofl+3
  4351  0FE7  01F6               	clrf	??___xxtofl+2
  4352  0FE8  01F5               	clrf	??___xxtofl+1
  4353  0FE9  01F4               	clrf	??___xxtofl
  4354  0FEA  0874               	movf	??___xxtofl,w
  4355  0FEB  04FA               	iorwf	___xxtofl@arg,f
  4356  0FEC  0875               	movf	??___xxtofl+1,w
  4357  0FED  04FB               	iorwf	___xxtofl@arg+1,f
  4358  0FEE  0876               	movf	??___xxtofl+2,w
  4359  0FEF  04FC               	iorwf	___xxtofl@arg+2,f
  4360  0FF0  0877               	movf	??___xxtofl+3,w
  4361  0FF1  04FD               	iorwf	___xxtofl@arg+3,f
  4362  0FF2  0878               	movf	___xxtofl@sign,w
  4363  0FF3  1D03               	btfss	3,2
  4364  0FF4  1FF3               	btfss	___xxtofl@val+3,7
  4365  0FF5  2FF7               	goto	l3734
  4366  0FF6  17FD               	bsf	___xxtofl@arg+3,7
  4367  0FF7                     l3734:	
  4368  0FF7  087D               	movf	___xxtofl@arg+3,w
  4369  0FF8  00F3               	movwf	?___xxtofl+3
  4370  0FF9  087C               	movf	___xxtofl@arg+2,w
  4371  0FFA  00F2               	movwf	?___xxtofl+2
  4372  0FFB  087B               	movf	___xxtofl@arg+1,w
  4373  0FFC  00F1               	movwf	?___xxtofl+1
  4374  0FFD  087A               	movf	___xxtofl@arg,w
  4375  0FFE  00F0               	movwf	?___xxtofl
  4376  0FFF  0008               	return
  4377  1000                     __end_of___xxtofl:	
  4378                           
  4379                           	psect	text23
  4380  0785                     __ptext23:	
  4381 ;; *************** function ___fltol *****************
  4382 ;; Defined at:
  4383 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;  f1              4   45[BANK0 ] unsigned char 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  exp1            1   54[BANK0 ] unsigned char 
  4388 ;;  sign1           1   53[BANK0 ] unsigned char 
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  4   45[BANK0 ] long 
  4391 ;; Registers used:
  4392 ;;		wreg, status,2, status,0
  4393 ;; Tracked objects:
  4394 ;;		On entry : 1F/0
  4395 ;;		On exit  : 1F/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4398 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4399 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4400 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4401 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4402 ;;Total ram usage:       10 bytes
  4403 ;; Hardware stack levels used:    1
  4404 ;; Hardware stack levels required when called:    1
  4405 ;; This function calls:
  4406 ;;		Nothing
  4407 ;; This function is called by:
  4408 ;;		_get_30v_current
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           
  4413                           ;psect for function ___fltol
  4414  0785                     ___fltol:	
  4415                           
  4416                           ;incstack = 0
  4417                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4418  0785  084D               	movf	___fltol@f1,w
  4419  0786  00D1               	movwf	??___fltol
  4420  0787  084E               	movf	___fltol@f1+1,w
  4421  0788  00D2               	movwf	??___fltol+1
  4422  0789  084F               	movf	___fltol@f1+2,w
  4423  078A  00D3               	movwf	??___fltol+2
  4424  078B  0850               	movf	___fltol@f1+3,w
  4425  078C  00D4               	movwf	??___fltol+3
  4426  078D  1003               	clrc
  4427  078E  0D53               	rlf	??___fltol+2,w
  4428  078F  0D54               	rlf	??___fltol+3,w
  4429  0790  00D6               	movwf	___fltol@exp1
  4430  0791  0856               	movf	___fltol@exp1,w
  4431  0792  1D03               	btfss	3,2
  4432  0793  2F99               	goto	l3364
  4433  0794                     l3362:	
  4434  0794  01CD               	clrf	?___fltol
  4435  0795  01CE               	clrf	?___fltol+1
  4436  0796  01CF               	clrf	?___fltol+2
  4437  0797  01D0               	clrf	?___fltol+3
  4438  0798  0008               	return
  4439  0799                     l3364:	
  4440  0799  084D               	movf	___fltol@f1,w
  4441  079A  00D1               	movwf	??___fltol
  4442  079B  084E               	movf	___fltol@f1+1,w
  4443  079C  00D2               	movwf	??___fltol+1
  4444  079D  084F               	movf	___fltol@f1+2,w
  4445  079E  00D3               	movwf	??___fltol+2
  4446  079F  0850               	movf	___fltol@f1+3,w
  4447  07A0  00D4               	movwf	??___fltol+3
  4448  07A1  301F               	movlw	31
  4449  07A2                     u3225:	
  4450  07A2  36D4               	lsrf	??___fltol+3,f
  4451  07A3  0CD3               	rrf	??___fltol+2,f
  4452  07A4  0CD2               	rrf	??___fltol+1,f
  4453  07A5  0CD1               	rrf	??___fltol,f
  4454  07A6  0B89               	decfsz	9,f
  4455  07A7  2FA2               	goto	u3225
  4456  07A8  0851               	movf	??___fltol,w
  4457  07A9  00D5               	movwf	___fltol@sign1
  4458  07AA  3096               	movlw	150
  4459  07AB  17CF               	bsf	___fltol@f1+2,7
  4460  07AC  01D0               	clrf	___fltol@f1+3
  4461  07AD  02D6               	subwf	___fltol@exp1,f
  4462  07AE  1FD6               	btfss	___fltol@exp1,7
  4463  07AF  2FBC               	goto	l3382
  4464  07B0  0856               	movf	___fltol@exp1,w
  4465  07B1  3A80               	xorlw	128
  4466  07B2  3E97               	addlw	151
  4467  07B3  1C03               	btfss	3,0
  4468  07B4  2F94               	goto	l3362
  4469  07B5                     l3378:	
  4470  07B5  36D0               	lsrf	___fltol@f1+3,f
  4471  07B6  0CCF               	rrf	___fltol@f1+2,f
  4472  07B7  0CCE               	rrf	___fltol@f1+1,f
  4473  07B8  0CCD               	rrf	___fltol@f1,f
  4474  07B9  0FD6               	incfsz	___fltol@exp1,f
  4475  07BA  2FB5               	goto	l3378
  4476  07BB  2FC9               	goto	l3390
  4477  07BC                     l3382:	
  4478  07BC  3020               	movlw	32
  4479  07BD  0256               	subwf	___fltol@exp1,w
  4480  07BE  1803               	btfsc	3,0
  4481  07BF  2F94               	goto	l3362
  4482  07C0                     l3388:	
  4483  07C0  0856               	movf	___fltol@exp1,w
  4484  07C1  1903               	btfsc	3,2
  4485  07C2  2FC9               	goto	l3390
  4486  07C3  35CD               	lslf	___fltol@f1,f
  4487  07C4  0DCE               	rlf	___fltol@f1+1,f
  4488  07C5  0DCF               	rlf	___fltol@f1+2,f
  4489  07C6  0DD0               	rlf	___fltol@f1+3,f
  4490  07C7  03D6               	decf	___fltol@exp1,f
  4491  07C8  2FC0               	goto	l3388
  4492  07C9                     l3390:	
  4493  07C9  0855               	movf	___fltol@sign1,w
  4494  07CA  1903               	btfsc	3,2
  4495  07CB  0008               	return
  4496  07CC  09CD               	comf	___fltol@f1,f
  4497  07CD  09CE               	comf	___fltol@f1+1,f
  4498  07CE  09CF               	comf	___fltol@f1+2,f
  4499  07CF  09D0               	comf	___fltol@f1+3,f
  4500  07D0  0ACD               	incf	___fltol@f1,f
  4501  07D1  1903               	skipnz
  4502  07D2  0ACE               	incf	___fltol@f1+1,f
  4503  07D3  1903               	skipnz
  4504  07D4  0ACF               	incf	___fltol@f1+2,f
  4505  07D5  1903               	skipnz
  4506  07D6  0AD0               	incf	___fltol@f1+3,f
  4507  07D7  0008               	return
  4508  07D8                     __end_of___fltol:	
  4509                           
  4510                           	psect	text28
  4511  08AA                     __ptext28:	
  4512 ;; *************** function _Vout_set *****************
  4513 ;; Defined at:
  4514 ;;		line 2067 in file "Multi_RX_testjig_v2.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  Volts           2    4[COMMON] int 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  digi_step       4    6[COMMON] unsigned long 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;		None               void
  4521 ;; Registers used:
  4522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/4
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4529 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4531 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4532 ;;Total ram usage:        6 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    3
  4535 ;; This function calls:
  4536 ;;		_digitalpot
  4537 ;; This function is called by:
  4538 ;;		_main
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           
  4543                           ;psect for function _Vout_set
  4544  08AA                     _Vout_set:	
  4545                           
  4546                           ;Multi_RX_testjig_v2.c: 2075: switch(Volts)
  4547                           
  4548                           ;incstack = 0
  4549                           ; Regs used in _Vout_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4550  08AA  28CF               	goto	l3942
  4551  08AB                     l3910:	
  4552                           
  4553                           ;Multi_RX_testjig_v2.c: 2078: digi_step = 20;
  4554  08AB  3014               	movlw	20
  4555  08AC  28C8               	goto	L38
  4556  08AD                     l3912:	
  4557                           ;Multi_RX_testjig_v2.c: 2079: break;
  4558                           
  4559                           
  4560                           ;Multi_RX_testjig_v2.c: 2081: digi_step = 39;
  4561  08AD  3027               	movlw	39
  4562  08AE  28C8               	goto	L38
  4563  08AF                     l3914:	
  4564                           ;Multi_RX_testjig_v2.c: 2082: break;
  4565                           
  4566                           
  4567                           ;Multi_RX_testjig_v2.c: 2084: digi_step = 52;
  4568  08AF  3034               	movlw	52
  4569  08B0  28C8               	goto	L38
  4570  08B1                     l3916:	
  4571                           ;Multi_RX_testjig_v2.c: 2085: break;
  4572                           
  4573                           
  4574                           ;Multi_RX_testjig_v2.c: 2087: digi_step = 62;
  4575  08B1  303E               	movlw	62
  4576  08B2  28C8               	goto	L38
  4577  08B3                     l3918:	
  4578                           ;Multi_RX_testjig_v2.c: 2088: break;
  4579                           
  4580                           
  4581                           ;Multi_RX_testjig_v2.c: 2090: digi_step = 70;
  4582  08B3  3046               	movlw	70
  4583  08B4  28C8               	goto	L38
  4584  08B5                     l3920:	
  4585                           ;Multi_RX_testjig_v2.c: 2091: break;
  4586                           
  4587                           
  4588                           ;Multi_RX_testjig_v2.c: 2093: digi_step = 76;
  4589  08B5  304C               	movlw	76
  4590  08B6  28C8               	goto	L38
  4591  08B7                     l3922:	
  4592                           ;Multi_RX_testjig_v2.c: 2094: break;
  4593                           
  4594                           
  4595                           ;Multi_RX_testjig_v2.c: 2096: digi_step = 81;
  4596  08B7  3051               	movlw	81
  4597  08B8  28C8               	goto	L38
  4598  08B9                     l3924:	
  4599                           ;Multi_RX_testjig_v2.c: 2097: break;
  4600                           
  4601                           
  4602                           ;Multi_RX_testjig_v2.c: 2099: digi_step = 85;
  4603  08B9  3055               	movlw	85
  4604  08BA  28C8               	goto	L38
  4605  08BB                     l3926:	
  4606                           ;Multi_RX_testjig_v2.c: 2100: break;
  4607                           
  4608                           
  4609                           ;Multi_RX_testjig_v2.c: 2102: digi_step = 88;
  4610  08BB  3058               	movlw	88
  4611  08BC  28C8               	goto	L38
  4612  08BD                     l3928:	
  4613                           ;Multi_RX_testjig_v2.c: 2103: break;
  4614                           
  4615                           
  4616                           ;Multi_RX_testjig_v2.c: 2105: digi_step = 91;
  4617  08BD  305B               	movlw	91
  4618  08BE  28C8               	goto	L38
  4619  08BF                     l3930:	
  4620                           ;Multi_RX_testjig_v2.c: 2106: break;
  4621                           
  4622                           
  4623                           ;Multi_RX_testjig_v2.c: 2108: digi_step = 94;
  4624  08BF  305E               	movlw	94
  4625  08C0  28C8               	goto	L38
  4626  08C1                     l3932:	
  4627                           ;Multi_RX_testjig_v2.c: 2109: break;
  4628                           
  4629                           
  4630                           ;Multi_RX_testjig_v2.c: 2111: digi_step = 96;
  4631  08C1  3060               	movlw	96
  4632  08C2  28C8               	goto	L38
  4633  08C3                     l3934:	
  4634                           ;Multi_RX_testjig_v2.c: 2112: break;
  4635                           
  4636                           
  4637                           ;Multi_RX_testjig_v2.c: 2114: digi_step = 98;
  4638  08C3  3062               	movlw	98
  4639  08C4  28C8               	goto	L38
  4640  08C5                     l3936:	
  4641                           ;Multi_RX_testjig_v2.c: 2115: break;
  4642                           
  4643                           
  4644                           ;Multi_RX_testjig_v2.c: 2117: digi_step = 102;
  4645  08C5  3066               	movlw	102
  4646  08C6  28C8               	goto	L38
  4647  08C7                     l3938:	
  4648                           ;Multi_RX_testjig_v2.c: 2118: break;
  4649                           
  4650                           
  4651                           ;Multi_RX_testjig_v2.c: 2120: digi_step = 112;
  4652  08C7  3070               	movlw	112
  4653  08C8                     L38:	
  4654  08C8  00F6               	movwf	Vout_set@digi_step
  4655  08C9  28CB               	goto	L39
  4656  08CA                     l724:	
  4657                           ;Multi_RX_testjig_v2.c: 2122: default:
  4658                           
  4659                           ;Multi_RX_testjig_v2.c: 2121: break;
  4660                           
  4661                           
  4662                           ;Multi_RX_testjig_v2.c: 2123: digi_step = 0;
  4663  08CA  01F6               	clrf	Vout_set@digi_step
  4664  08CB                     L39:	
  4665  08CB  01F7               	clrf	Vout_set@digi_step+1
  4666  08CC  01F8               	clrf	Vout_set@digi_step+2
  4667  08CD  01F9               	clrf	Vout_set@digi_step+3
  4668                           
  4669                           ;Multi_RX_testjig_v2.c: 2124: break;
  4670  08CE  28E1               	goto	l3944
  4671  08CF                     l3942:	
  4672                           
  4673                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4674                           ; Switch size 1, requested type "speed"
  4675                           ; Number of cases is 1, Range of values is 0 to 0
  4676                           ; switch strategies available:
  4677                           ; Name         Instructions Cycles
  4678                           ; simple_byte            4     3 (average)
  4679                           ; direct_byte            8     6 (fixed)
  4680                           ; jumptable            260     6 (fixed)
  4681                           ;	Chosen strategy is simple_byte
  4682  08CF  0875               	movf	Vout_set@Volts+1,w
  4683  08D0  3A00               	xorlw	0	; case 0
  4684  08D1  1903               	skipnz
  4685  08D2  28D4               	goto	l4934
  4686  08D3  28CA               	goto	l724
  4687  08D4                     l4934:	
  4688                           
  4689                           ; Switch size 1, requested type "speed"
  4690                           ; Number of cases is 15, Range of values is 6 to 25
  4691                           ; switch strategies available:
  4692                           ; Name         Instructions Cycles
  4693                           ; direct_byte           49     9 (fixed)
  4694                           ; simple_byte           46    24 (average)
  4695                           ; jumptable            263     9 (fixed)
  4696                           ;	Chosen strategy is direct_byte
  4697  08D4  0874               	movf	Vout_set@Volts,w
  4698  08D5  3EFA               	addlw	-6
  4699  08D6  1C03               	skipc
  4700  08D7  28CA               	goto	l724
  4701  08D8  0084               	movwf	4
  4702  08D9  3014               	movlw	20
  4703  08DA  0204               	subwf	4,w
  4704  08DB  1803               	skipnc
  4705  08DC  28CA               	goto	l724
  4706  08DD  3187               	movlp	high S4936
  4707  08DE  3504               	lslf	4,w
  4708  08DF  3ED8               	addlw	low S4936
  4709  08E0  0082               	movwf	2
  4710  08E1                     l3944:	
  4711                           
  4712                           ;Multi_RX_testjig_v2.c: 2131: digitalpot((unsigned char) digi_step);
  4713  08E1  0876               	movf	Vout_set@digi_step,w
  4714  08E2  2B69               	ljmp	_digitalpot
  4715  08E3                     __end_of_Vout_set:	
  4716  08E3                     __ptext15:	
  4717 ;; *************** function _lcd_set_cursor *****************
  4718 ;; Defined at:
  4719 ;;		line 1285 in file "Multi_RX_testjig_v2.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;  row             1    wreg     unsigned char 
  4722 ;;  col             1    1[COMMON] unsigned char 
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;  row             1    2[COMMON] unsigned char 
  4725 ;;  LCD_position    1    3[COMMON] unsigned char 
  4726 ;; Return value:  Size  Location     Type
  4727 ;;		None               void
  4728 ;; Registers used:
  4729 ;;		wreg, status,2, status,0, pclath, cstack
  4730 ;; Tracked objects:
  4731 ;;		On entry : 1F/0
  4732 ;;		On exit  : 1F/4
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4735 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4736 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4738 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4739 ;;Total ram usage:        3 bytes
  4740 ;; Hardware stack levels used:    1
  4741 ;; Hardware stack levels required when called:    2
  4742 ;; This function calls:
  4743 ;;		_i2c_Start
  4744 ;;		_i2c_Stop
  4745 ;;		_i2c_Write
  4746 ;; This function is called by:
  4747 ;;		_lcd_print_int
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           
  4752                           ;psect for function _lcd_set_cursor
  4753  08E3                     _lcd_set_cursor:	
  4754                           
  4755                           ;incstack = 0
  4756                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4757                           ;lcd_set_cursor@row stored from wreg
  4758  08E3  00F2               	movwf	lcd_set_cursor@row
  4759                           
  4760                           ;Multi_RX_testjig_v2.c: 1288: col--;
  4761  08E4  03F1               	decf	lcd_set_cursor@col,f
  4762                           
  4763                           ;Multi_RX_testjig_v2.c: 1289: i2c_Start();
  4764  08E5  23E0  3188         	fcall	_i2c_Start
  4765                           
  4766                           ;Multi_RX_testjig_v2.c: 1290: i2c_Write(0x7C);
  4767  08E7  307C               	movlw	124
  4768  08E8  23D4  3188         	fcall	_i2c_Write
  4769                           
  4770                           ;Multi_RX_testjig_v2.c: 1291: i2c_Write(0x00);
  4771  08EA  3000               	movlw	0
  4772  08EB  23D4  3188         	fcall	_i2c_Write
  4773                           
  4774                           ;Multi_RX_testjig_v2.c: 1292: LCD_position = col & 0b11001111;
  4775  08ED  0871               	movf	lcd_set_cursor@col,w
  4776  08EE  00F3               	movwf	lcd_set_cursor@LCD_position
  4777  08EF  30CF               	movlw	207
  4778  08F0  05F3               	andwf	lcd_set_cursor@LCD_position,f
  4779                           
  4780                           ;Multi_RX_testjig_v2.c: 1293: if(row == 1)
  4781  08F1  0B72               	decfsz	lcd_set_cursor@row,w
  4782  08F2  28F5               	goto	l3302
  4783                           
  4784                           ;Multi_RX_testjig_v2.c: 1294: LCD_position |= 0b10000000;
  4785  08F3  17F3               	bsf	lcd_set_cursor@LCD_position,7
  4786  08F4  28F7               	goto	l3304
  4787  08F5                     l3302:	
  4788                           
  4789                           ;Multi_RX_testjig_v2.c: 1295: else
  4790                           ;Multi_RX_testjig_v2.c: 1296: LCD_position |= 0b11000000;
  4791  08F5  30C0               	movlw	192
  4792  08F6  04F3               	iorwf	lcd_set_cursor@LCD_position,f
  4793  08F7                     l3304:	
  4794                           
  4795                           ;Multi_RX_testjig_v2.c: 1297: i2c_Write(LCD_position);
  4796  08F7  0873               	movf	lcd_set_cursor@LCD_position,w
  4797  08F8  23D4  3188         	fcall	_i2c_Write
  4798                           
  4799                           ;Multi_RX_testjig_v2.c: 1298: i2c_Stop();
  4800  08FA  2BE5               	ljmp	l3066
  4801  08FB                     __end_of_lcd_set_cursor:	
  4802  08FB                     __ptext11:	
  4803 ;; *************** function _lcd_print_int *****************
  4804 ;; Defined at:
  4805 ;;		line 1861 in file "Multi_RX_testjig_v2.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  number          2    0[BANK0 ] unsigned int 
  4808 ;;  pos             2    2[BANK0 ] unsigned int 
  4809 ;;  decimal         1    4[BANK0 ] unsigned char 
  4810 ;;  ten_thou_dig    1    5[BANK0 ] unsigned char 
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;		None               void
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0, pclath, cstack
  4817 ;; Tracked objects:
  4818 ;;		On entry : 1F/0
  4819 ;;		On exit  : 1F/4
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4822 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4825 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4826 ;;Total ram usage:        6 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:    3
  4829 ;; This function calls:
  4830 ;;		_i2c_write_char
  4831 ;;		_lcd_set_cursor
  4832 ;;		_ten_thou_conv
  4833 ;; This function is called by:
  4834 ;;		_main
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           
  4839                           ;psect for function _lcd_print_int
  4840  08FB                     _lcd_print_int:	
  4841                           
  4842                           ;Multi_RX_testjig_v2.c: 1863: lcd_set_cursor(2, pos + 1 - ten_thou_digit);
  4843                           
  4844                           ;incstack = 0
  4845                           ; Regs used in _lcd_print_int: [wreg+status,2+status,0+pclath+cstack]
  4846  08FB  0825               	movf	lcd_print_int@ten_thou_digit,w
  4847  08FC  0222               	subwf	lcd_print_int@pos,w
  4848  08FD  3E01               	addlw	1
  4849  08FE  00F1               	movwf	lcd_set_cursor@col
  4850  08FF  3002               	movlw	2
  4851  0900  20E3               	fcall	_lcd_set_cursor
  4852                           
  4853                           ;Multi_RX_testjig_v2.c: 1864: ten_thou_conv(number);
  4854  0901  0020               	movlb	0	; select bank0
  4855  0902  0821               	movf	lcd_print_int@number+1,w
  4856  0903  00F7               	movwf	ten_thou_conv@n+1
  4857  0904  0820               	movf	lcd_print_int@number,w
  4858  0905  00F6               	movwf	ten_thou_conv@n
  4859  0906  3194  2496  3188   	fcall	_ten_thou_conv
  4860                           
  4861                           ;Multi_RX_testjig_v2.c: 1865: if(ten_thou_digit)
  4862  0909  0825               	movf	lcd_print_int@ten_thou_digit,w
  4863  090A  1903               	btfsc	3,2
  4864  090B  2917               	goto	l3980
  4865                           
  4866                           ;Multi_RX_testjig_v2.c: 1866: {
  4867                           ;Multi_RX_testjig_v2.c: 1867: if(ten_thou != 0 || decimal & 0x10)
  4868  090C  086D               	movf	_ten_thou,w
  4869  090D  1D03               	btfss	3,2
  4870  090E  2911               	goto	l3976
  4871  090F  1E24               	btfss	lcd_print_int@decimal,4
  4872  0910  2914               	goto	l3978
  4873  0911                     l3976:	
  4874                           
  4875                           ;Multi_RX_testjig_v2.c: 1868: i2c_write_char(ten_thou + 48);
  4876  0911  086D               	movf	_ten_thou,w
  4877  0912  3E30               	addlw	48
  4878  0913  2915               	goto	L18
  4879  0914                     l3978:	
  4880                           
  4881                           ;Multi_RX_testjig_v2.c: 1869: else i2c_write_char(' ');
  4882  0914  3020               	movlw	32
  4883  0915                     L18:	
  4884  0915  216F  3188         	fcall	_i2c_write_char
  4885  0917                     l3980:	
  4886                           
  4887                           ;Multi_RX_testjig_v2.c: 1870: }
  4888                           ;Multi_RX_testjig_v2.c: 1871: if(decimal & 0x10)i2c_write_char('.');
  4889  0917  0020               	movlb	0	; select bank0
  4890  0918  1E24               	btfss	lcd_print_int@decimal,4
  4891  0919  291D               	goto	l3984
  4892  091A  302E               	movlw	46
  4893  091B  216F  3188         	fcall	_i2c_write_char
  4894  091D                     l3984:	
  4895                           
  4896                           ;Multi_RX_testjig_v2.c: 1872: if(thou != 0 || ten_thou != 0 || decimal & 0x18)
  4897  091D  0020               	movlb	0	; select bank0
  4898  091E  086F               	movf	_thou,w
  4899  091F  1D03               	btfss	3,2
  4900  0920  2928               	goto	l3990
  4901  0921  086D               	movf	_ten_thou,w
  4902  0922  1D03               	btfss	3,2
  4903  0923  2928               	goto	l3990
  4904  0924  0824               	movf	lcd_print_int@decimal,w
  4905  0925  3918               	andlw	24
  4906  0926  1903               	btfsc	3,2
  4907  0927  292B               	goto	l3992
  4908  0928                     l3990:	
  4909                           
  4910                           ;Multi_RX_testjig_v2.c: 1873: i2c_write_char(thou + 48);
  4911  0928  086F               	movf	_thou,w
  4912  0929  3E30               	addlw	48
  4913  092A  292C               	goto	L19
  4914  092B                     l3992:	
  4915                           
  4916                           ;Multi_RX_testjig_v2.c: 1874: else i2c_write_char(' ');
  4917  092B  3020               	movlw	32
  4918  092C                     L19:	
  4919  092C  216F  3188         	fcall	_i2c_write_char
  4920                           
  4921                           ;Multi_RX_testjig_v2.c: 1875: if(decimal & 0x08)i2c_write_char('.');
  4922  092E  0020               	movlb	0	; select bank0
  4923  092F  1DA4               	btfss	lcd_print_int@decimal,3
  4924  0930  2934               	goto	l3998
  4925  0931  302E               	movlw	46
  4926  0932  216F  3188         	fcall	_i2c_write_char
  4927  0934                     l3998:	
  4928                           
  4929                           ;Multi_RX_testjig_v2.c: 1876: if(hund != 0 || thou != 0 || ten_thou != 0 || decimal & 0x
      +                          1C)
  4930  0934  0020               	movlb	0	; select bank0
  4931  0935  086B               	movf	_hund,w
  4932  0936  1D03               	btfss	3,2
  4933  0937  2942               	goto	l4006
  4934  0938  086F               	movf	_thou,w
  4935  0939  1D03               	btfss	3,2
  4936  093A  2942               	goto	l4006
  4937  093B  086D               	movf	_ten_thou,w
  4938  093C  1D03               	btfss	3,2
  4939  093D  2942               	goto	l4006
  4940  093E  0824               	movf	lcd_print_int@decimal,w
  4941  093F  391C               	andlw	28
  4942  0940  1903               	btfsc	3,2
  4943  0941  2945               	goto	l4008
  4944  0942                     l4006:	
  4945                           
  4946                           ;Multi_RX_testjig_v2.c: 1877: i2c_write_char(hund + 48);
  4947  0942  086B               	movf	_hund,w
  4948  0943  3E30               	addlw	48
  4949  0944  2946               	goto	L20
  4950  0945                     l4008:	
  4951                           
  4952                           ;Multi_RX_testjig_v2.c: 1878: else i2c_write_char(' ');
  4953  0945  3020               	movlw	32
  4954  0946                     L20:	
  4955  0946  216F  3188         	fcall	_i2c_write_char
  4956                           
  4957                           ;Multi_RX_testjig_v2.c: 1879: if(decimal & 0x04)i2c_write_char('.');
  4958  0948  0020               	movlb	0	; select bank0
  4959  0949  1D24               	btfss	lcd_print_int@decimal,2
  4960  094A  294E               	goto	l4014
  4961  094B  302E               	movlw	46
  4962  094C  216F  3188         	fcall	_i2c_write_char
  4963  094E                     l4014:	
  4964                           
  4965                           ;Multi_RX_testjig_v2.c: 1880: if(ten != 0 || hund != 0 || thou != 0 || ten_thou != 0 || 
      +                          decimal & 0x1E)
  4966  094E  0020               	movlb	0	; select bank0
  4967  094F  086C               	movf	_ten,w
  4968  0950  1D03               	btfss	3,2
  4969  0951  295F               	goto	l4024
  4970  0952  086B               	movf	_hund,w
  4971  0953  1D03               	btfss	3,2
  4972  0954  295F               	goto	l4024
  4973  0955  086F               	movf	_thou,w
  4974  0956  1D03               	btfss	3,2
  4975  0957  295F               	goto	l4024
  4976  0958  086D               	movf	_ten_thou,w
  4977  0959  1D03               	btfss	3,2
  4978  095A  295F               	goto	l4024
  4979  095B  0824               	movf	lcd_print_int@decimal,w
  4980  095C  391E               	andlw	30
  4981  095D  1903               	btfsc	3,2
  4982  095E  2962               	goto	l4026
  4983  095F                     l4024:	
  4984                           
  4985                           ;Multi_RX_testjig_v2.c: 1881: i2c_write_char(ten + 48);
  4986  095F  086C               	movf	_ten,w
  4987  0960  3E30               	addlw	48
  4988  0961  2963               	goto	L21
  4989  0962                     l4026:	
  4990                           
  4991                           ;Multi_RX_testjig_v2.c: 1882: else i2c_write_char(' ');
  4992  0962  3020               	movlw	32
  4993  0963                     L21:	
  4994  0963  216F  3188         	fcall	_i2c_write_char
  4995                           
  4996                           ;Multi_RX_testjig_v2.c: 1883: if(decimal & 0x02)i2c_write_char('.');
  4997  0965  0020               	movlb	0	; select bank0
  4998  0966  1CA4               	btfss	lcd_print_int@decimal,1
  4999  0967  296B               	goto	l643
  5000  0968  302E               	movlw	46
  5001  0969  216F  3188         	fcall	_i2c_write_char
  5002  096B                     l643:	
  5003                           
  5004                           ;Multi_RX_testjig_v2.c: 1884: i2c_write_char(unit + 48);
  5005  096B  0020               	movlb	0	; select bank0
  5006  096C  086E               	movf	_unit,w
  5007  096D  3E30               	addlw	48
  5008  096E  296F               	ljmp	_i2c_write_char
  5009  096F                     __end_of_lcd_print_int:	
  5010  096F                     __ptext16:	
  5011 ;; *************** function _i2c_write_char *****************
  5012 ;; Defined at:
  5013 ;;		line 1201 in file "Multi_RX_testjig_v2.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  char_data       1    wreg     unsigned char 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  char_data       1    1[COMMON] unsigned char 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;		None               void
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0, pclath, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 1F/0
  5024 ;;		On exit  : 1F/4
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5031 ;;Total ram usage:        1 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    2
  5034 ;; This function calls:
  5035 ;;		_i2c_Start
  5036 ;;		_i2c_Stop
  5037 ;;		_i2c_Write
  5038 ;; This function is called by:
  5039 ;;		_lcd_print_int
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           
  5044                           ;psect for function _i2c_write_char
  5045  096F                     _i2c_write_char:	
  5046                           
  5047                           ;incstack = 0
  5048                           ; Regs used in _i2c_write_char: [wreg+status,2+status,0+pclath+cstack]
  5049                           ;i2c_write_char@char_data stored from wreg
  5050  096F  00F1               	movwf	i2c_write_char@char_data
  5051                           
  5052                           ;Multi_RX_testjig_v2.c: 1203: i2c_Start();
  5053  0970  23E0  3188         	fcall	_i2c_Start
  5054                           
  5055                           ;Multi_RX_testjig_v2.c: 1204: i2c_Write(0x7C);
  5056  0972  307C               	movlw	124
  5057  0973  23D4  3188         	fcall	_i2c_Write
  5058                           
  5059                           ;Multi_RX_testjig_v2.c: 1205: i2c_Write(0x40);
  5060  0975  3040               	movlw	64
  5061  0976  23D4  3188         	fcall	_i2c_Write
  5062                           
  5063                           ;Multi_RX_testjig_v2.c: 1206: i2c_Write(char_data);
  5064  0978  0871               	movf	i2c_write_char@char_data,w
  5065  0979  23D4  3188         	fcall	_i2c_Write
  5066                           
  5067                           ;Multi_RX_testjig_v2.c: 1207: i2c_Stop();
  5068  097B  2BE5               	ljmp	l3066
  5069  097C                     __end_of_i2c_write_char:	
  5070  097C                     __ptext1:	
  5071 ;; *************** function _testjig_done *****************
  5072 ;; Defined at:
  5073 ;;		line 1082 in file "Multi_RX_testjig_v2.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;  state           1    wreg     unsigned char 
  5076 ;;  device_type     1    8[COMMON] unsigned char 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  state           1   12[COMMON] unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;		None               void
  5081 ;; Registers used:
  5082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 1E/1
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5088 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5090 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5091 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5092 ;;Total ram usage:        5 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    4
  5095 ;; This function calls:
  5096 ;;		_buzz_one
  5097 ;;		_debug_fast_tx
  5098 ;;		_power_supply_set
  5099 ;;		_print_screen
  5100 ;; This function is called by:
  5101 ;;		_main
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           
  5106                           ;psect for function _testjig_done
  5107  097C                     _testjig_done:	
  5108                           
  5109                           ;incstack = 0
  5110                           ; Regs used in _testjig_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5111                           ;testjig_done@state stored from wreg
  5112  097C  00FC               	movwf	testjig_done@state
  5113  097D                     l470:	
  5114                           ;Multi_RX_testjig_v2.c: 1084: while(1)
  5115                           
  5116                           
  5117                           ;Multi_RX_testjig_v2.c: 1085: {
  5118                           ;Multi_RX_testjig_v2.c: 1086: RE0 = 0;
  5119  097D  0020               	movlb	0	; select bank0
  5120  097E  1010               	bcf	16,0	;volatile
  5121                           
  5122                           ;Multi_RX_testjig_v2.c: 1087: power_supply_set(3);
  5123  097F  3003               	movlw	3
  5124  0980  23F2  3188         	fcall	_power_supply_set
  5125                           
  5126                           ;Multi_RX_testjig_v2.c: 1088: LATA7 = 0;
  5127  0982  0022               	movlb	2	; select bank2
  5128  0983  138C               	bcf	12,7	;volatile
  5129                           
  5130                           ;Multi_RX_testjig_v2.c: 1089: LATB5 = 0;
  5131  0984  128D               	bcf	13,5	;volatile
  5132                           
  5133                           ;Multi_RX_testjig_v2.c: 1090: LATA6 = 0;
  5134  0985  130C               	bcf	12,6	;volatile
  5135                           
  5136                           ;Multi_RX_testjig_v2.c: 1091: TRISG0 = 1;
  5137  0986  0026               	movlb	6	; select bank6
  5138  0987  140D               	bsf	13,0	;volatile
  5139                           
  5140                           ;Multi_RX_testjig_v2.c: 1092: debug_fast_tx(11110);
  5141  0988  3066               	movlw	102
  5142  0989  00F0               	movwf	debug_fast_tx@data
  5143  098A  302B               	movlw	43
  5144  098B  00F1               	movwf	debug_fast_tx@data+1
  5145  098C  22A5  3188         	fcall	_debug_fast_tx
  5146                           
  5147                           ;Multi_RX_testjig_v2.c: 1093: debug_fast_tx(state);
  5148  098E  087C               	movf	testjig_done@state,w
  5149  098F  00F0               	movwf	debug_fast_tx@data
  5150  0990  01F1               	clrf	debug_fast_tx@data+1
  5151  0991  22A5  3188         	fcall	_debug_fast_tx
  5152                           
  5153                           ;Multi_RX_testjig_v2.c: 1094: switch(state)
  5154  0993  2A34               	goto	l3842
  5155  0994                     l3796:	
  5156                           
  5157                           ;Multi_RX_testjig_v2.c: 1097: if(device_type == 0xAA)
  5158  0994  30AA               	movlw	170
  5159  0995  0678               	xorwf	testjig_done@device_type,w
  5160  0996  1D03               	btfss	3,2
  5161  0997  299C               	goto	l3800
  5162                           
  5163                           ;Multi_RX_testjig_v2.c: 1098: print_screen("Condo3 Pass", " Remove board");
  5164  0998  3091               	movlw	low (STR_157| (0+32768))
  5165  0999  00F4               	movwf	print_screen@top
  5166  099A  3092               	movlw	high (STR_157| (0+32768))
  5167  099B  29AF               	goto	L11
  5168  099C                     l3800:	
  5169                           
  5170                           ;Multi_RX_testjig_v2.c: 1099: else if(device_type == 0xA1)
  5171  099C  30A1               	movlw	161
  5172  099D  0678               	xorwf	testjig_done@device_type,w
  5173  099E  1D03               	btfss	3,2
  5174  099F  29A4               	goto	l3804
  5175                           
  5176                           ;Multi_RX_testjig_v2.c: 1100: print_screen("RX3 Pass", " Remove board");
  5177  09A0  305F               	movlw	low (STR_159| (0+32768))
  5178  09A1  00F4               	movwf	print_screen@top
  5179  09A2  3093               	movlw	high (STR_159| (0+32768))
  5180  09A3  29AF               	goto	L11
  5181  09A4                     l3804:	
  5182                           
  5183                           ;Multi_RX_testjig_v2.c: 1101: else if(device_type == 0xA2)
  5184  09A4  30A2               	movlw	162
  5185  09A5  0678               	xorwf	testjig_done@device_type,w
  5186  09A6  1D03               	btfss	3,2
  5187  09A7  29AC               	goto	l3808
  5188                           
  5189                           ;Multi_RX_testjig_v2.c: 1102: print_screen("Mem_Copier Pass", " Remove board");
  5190  09A8  30DF               	movlw	low (STR_161| (0+32768))
  5191  09A9  00F4               	movwf	print_screen@top
  5192  09AA  3090               	movlw	high (STR_161| (0+32768))
  5193  09AB  29AF               	goto	L11
  5194  09AC                     l3808:	
  5195                           
  5196                           ;Multi_RX_testjig_v2.c: 1103: else
  5197                           ;Multi_RX_testjig_v2.c: 1104: print_screen("Multi_RX Pass", " Remove board");
  5198  09AC  309F               	movlw	low (STR_163| (0+32768))
  5199  09AD  00F4               	movwf	print_screen@top
  5200  09AE  3091               	movlw	high (STR_163| (0+32768))
  5201  09AF                     L11:	
  5202  09AF  00F5               	movwf	print_screen@top+1
  5203  09B0  3083               	movlw	low (STR_158| (0+32768))
  5204  09B1  00F6               	movwf	print_screen@bottom
  5205  09B2  3091               	movlw	high (STR_158| (0+32768))
  5206  09B3  00F7               	movwf	print_screen@bottom+1
  5207  09B4  22D2  3188         	fcall	_print_screen
  5208                           
  5209                           ;Multi_RX_testjig_v2.c: 1105: debug_fast_tx(11111);
  5210  09B6  3067               	movlw	103
  5211  09B7  00F0               	movwf	debug_fast_tx@data
  5212  09B8  302B               	movlw	43
  5213  09B9  00F1               	movwf	debug_fast_tx@data+1
  5214  09BA  22A5  3188         	fcall	_debug_fast_tx
  5215                           
  5216                           ;Multi_RX_testjig_v2.c: 1106: buzz_one(100);
  5217  09BC  3064               	movlw	100
  5218  09BD  00F0               	movwf	buzz_one@time
  5219  09BE  01F1               	clrf	buzz_one@time+1
  5220  09BF  23EA  3188         	fcall	_buzz_one
  5221                           
  5222                           ;Multi_RX_testjig_v2.c: 1107: _delay((unsigned long)((200)*(16000000/4000.0)));
  5223  09C1  3005               	movlw	5
  5224  09C2  00FB               	movwf	??_testjig_done+2
  5225  09C3  300F               	movlw	15
  5226  09C4  00FA               	movwf	??_testjig_done+1
  5227  09C5  30F4               	movlw	244
  5228  09C6  00F9               	movwf	??_testjig_done
  5229  09C7                     u6127:	
  5230  09C7  0BF9               	decfsz	??_testjig_done,f
  5231  09C8  29C7               	goto	u6127
  5232  09C9  0BFA               	decfsz	??_testjig_done+1,f
  5233  09CA  29C7               	goto	u6127
  5234  09CB  0BFB               	decfsz	??_testjig_done+2,f
  5235  09CC  29C7               	goto	u6127
  5236                           
  5237                           ;Multi_RX_testjig_v2.c: 1108: buzz_one(100);
  5238  09CD  3064               	movlw	100
  5239  09CE  00F0               	movwf	buzz_one@time
  5240  09CF  01F1               	clrf	buzz_one@time+1
  5241  09D0  23EA  3188         	fcall	_buzz_one
  5242  09D2                     l479:	
  5243                           ;Multi_RX_testjig_v2.c: 1109: while(RF3 == 0);
  5244                           
  5245  09D2  0025               	movlb	5	; select bank5
  5246  09D3  1D8C               	btfss	12,3	;volatile
  5247  09D4  29D2               	goto	l479
  5248                           
  5249                           ;Multi_RX_testjig_v2.c: 1110: _delay((unsigned long)((100)*(16000000/4000.0)));
  5250  09D5  3003               	movlw	3
  5251  09D6  00FB               	movwf	??_testjig_done+2
  5252  09D7  3008               	movlw	8
  5253  09D8  00FA               	movwf	??_testjig_done+1
  5254  09D9  3078               	movlw	120
  5255  09DA  00F9               	movwf	??_testjig_done
  5256  09DB                     u6137:	
  5257  09DB  0BF9               	decfsz	??_testjig_done,f
  5258  09DC  29DB               	goto	u6137
  5259  09DD  0BFA               	decfsz	??_testjig_done+1,f
  5260  09DE  29DB               	goto	u6137
  5261  09DF  0BFB               	decfsz	??_testjig_done+2,f
  5262  09E0  29DB               	goto	u6137
  5263  09E1  2A31               	goto	L12
  5264  09E2                     l3820:	
  5265                           ;Multi_RX_testjig_v2.c: 1112: break;
  5266                           
  5267                           ;Multi_RX_testjig_v2.c: 1111: state = 0xFF;
  5268                           
  5269                           
  5270                           ;Multi_RX_testjig_v2.c: 1114: debug_fast_tx(11112);
  5271  09E2  3068               	movlw	104
  5272  09E3  00F0               	movwf	debug_fast_tx@data
  5273  09E4  302B               	movlw	43
  5274  09E5  00F1               	movwf	debug_fast_tx@data+1
  5275  09E6  22A5  3188         	fcall	_debug_fast_tx
  5276                           
  5277                           ;Multi_RX_testjig_v2.c: 1116: if(device_type == 0xAA)
  5278  09E8  30AA               	movlw	170
  5279  09E9  0678               	xorwf	testjig_done@device_type,w
  5280  09EA  1D03               	btfss	3,2
  5281  09EB  29F0               	goto	l3826
  5282                           
  5283                           ;Multi_RX_testjig_v2.c: 1117: print_screen("Condo3 ", " Testjig");
  5284  09EC  3068               	movlw	low (STR_165| (0+32768))
  5285  09ED  00F4               	movwf	print_screen@top
  5286  09EE  3093               	movlw	high (STR_165| (0+32768))
  5287  09EF  29FF               	goto	L17
  5288  09F0                     l3826:	
  5289                           
  5290                           ;Multi_RX_testjig_v2.c: 1118: else if(device_type == 0xA1)
  5291  09F0  30A1               	movlw	161
  5292  09F1  0678               	xorwf	testjig_done@device_type,w
  5293  09F2  1D03               	btfss	3,2
  5294  09F3  29F8               	goto	l3830
  5295                           
  5296                           ;Multi_RX_testjig_v2.c: 1119: print_screen("RX3 ", " Testjig");
  5297  09F4  3080               	movlw	low (STR_167| (0+32768))
  5298  09F5  00F4               	movwf	print_screen@top
  5299  09F6  3093               	movlw	high (STR_167| (0+32768))
  5300  09F7  29FF               	goto	L17
  5301  09F8                     l3830:	
  5302                           
  5303                           ;Multi_RX_testjig_v2.c: 1120: else if(device_type == 0xA2)
  5304  09F8  30A2               	movlw	162
  5305  09F9  0678               	xorwf	testjig_done@device_type,w
  5306  09FA  1D03               	btfss	3,2
  5307  09FB  2A04               	goto	l3834
  5308                           
  5309                           ;Multi_RX_testjig_v2.c: 1121: print_screen("Mem_Copier Pass", " Testjig");
  5310  09FC  30DF               	movlw	low (STR_161| (0+32768))
  5311  09FD  00F4               	movwf	print_screen@top
  5312  09FE  3090               	movlw	high (STR_161| (0+32768))
  5313  09FF                     L17:	
  5314  09FF  00F5               	movwf	print_screen@top+1
  5315  0A00  3064               	movlw	low ((STR_177+3)| (0+32768))
  5316  0A01  00F6               	movwf	print_screen@bottom
  5317  0A02  3092               	movlw	high ((STR_177+3)| (0+32768))
  5318  0A03  2A0B               	goto	L13
  5319  0A04                     l3834:	
  5320                           
  5321                           ;Multi_RX_testjig_v2.c: 1122: else
  5322                           ;Multi_RX_testjig_v2.c: 1123: print_screen("Multi_RX", "Testjig");
  5323  0A04  304D               	movlw	low (STR_1| (0+32768))
  5324  0A05  00F4               	movwf	print_screen@top
  5325  0A06  3093               	movlw	high (STR_1| (0+32768))
  5326  0A07  00F5               	movwf	print_screen@top+1
  5327  0A08  3065               	movlw	low ((STR_177+4)| (0+32768))
  5328  0A09  00F6               	movwf	print_screen@bottom
  5329  0A0A  3092               	movlw	high ((STR_177+4)| (0+32768))
  5330  0A0B                     L13:	
  5331  0A0B  00F7               	movwf	print_screen@bottom+1
  5332  0A0C  22D2  3188         	fcall	_print_screen
  5333                           
  5334                           ;Multi_RX_testjig_v2.c: 1124: _delay((unsigned long)((2000)*(16000000/4000.0)));
  5335  0A0E  3029               	movlw	41
  5336  0A0F  00FB               	movwf	??_testjig_done+2
  5337  0A10  3096               	movlw	150
  5338  0A11  00FA               	movwf	??_testjig_done+1
  5339  0A12  30A6               	movlw	166
  5340  0A13  00F9               	movwf	??_testjig_done
  5341  0A14                     u6147:	
  5342  0A14  0BF9               	decfsz	??_testjig_done,f
  5343  0A15  2A14               	goto	u6147
  5344  0A16  0BFA               	decfsz	??_testjig_done+1,f
  5345  0A17  2A14               	goto	u6147
  5346  0A18  0BFB               	decfsz	??_testjig_done+2,f
  5347  0A19  2A14               	goto	u6147
  5348                           
  5349                           ;Multi_RX_testjig_v2.c: 1125: print_screen("Testjig Power-up", "wait...");
  5350  0A1A  306C               	movlw	low (STR_173| (0+32768))
  5351  0A1B  00F4               	movwf	print_screen@top
  5352  0A1C  3090               	movlw	high (STR_173| (0+32768))
  5353  0A1D  00F5               	movwf	print_screen@top+1
  5354  0A1E  3070               	movlw	low (STR_174| (0+32768))
  5355  0A1F  00F6               	movwf	print_screen@bottom
  5356  0A20  3093               	movlw	high (STR_174| (0+32768))
  5357  0A21  00F7               	movwf	print_screen@bottom+1
  5358  0A22  22D2  3188         	fcall	_print_screen
  5359                           
  5360                           ;Multi_RX_testjig_v2.c: 1126: _delay((unsigned long)((3000)*(16000000/4000.0)));
  5361  0A24  303D               	movlw	61
  5362  0A25  00FB               	movwf	??_testjig_done+2
  5363  0A26  30E1               	movlw	225
  5364  0A27  00FA               	movwf	??_testjig_done+1
  5365  0A28  307A               	movlw	122
  5366  0A29  00F9               	movwf	??_testjig_done
  5367  0A2A                     u6157:	
  5368  0A2A  0BF9               	decfsz	??_testjig_done,f
  5369  0A2B  2A2A               	goto	u6157
  5370  0A2C  0BFA               	decfsz	??_testjig_done+1,f
  5371  0A2D  2A2A               	goto	u6157
  5372  0A2E  0BFB               	decfsz	??_testjig_done+2,f
  5373  0A2F  2A2A               	goto	u6157
  5374  0A30  3200               	nop2
  5375  0A31                     L12:	
  5376                           
  5377                           ;Multi_RX_testjig_v2.c: 1127: state = 0xFF;
  5378  0A31  30FF               	movlw	255
  5379  0A32  00FC               	movwf	testjig_done@state
  5380                           
  5381                           ;Multi_RX_testjig_v2.c: 1128: break;
  5382  0A33  2A3C               	goto	l3844
  5383  0A34                     l3842:	
  5384  0A34  087C               	movf	testjig_done@state,w
  5385                           
  5386                           ; Switch size 1, requested type "speed"
  5387                           ; Number of cases is 2, Range of values is 1 to 2
  5388                           ; switch strategies available:
  5389                           ; Name         Instructions Cycles
  5390                           ; simple_byte            7     4 (average)
  5391                           ; direct_byte           13     9 (fixed)
  5392                           ; jumptable            263     9 (fixed)
  5393                           ;	Chosen strategy is simple_byte
  5394  0A35  3A01               	xorlw	1	; case 1
  5395  0A36  1903               	skipnz
  5396  0A37  2994               	goto	l3796
  5397  0A38  3A03               	xorlw	3	; case 2
  5398  0A39  1903               	skipnz
  5399  0A3A  29E2               	goto	l3820
  5400  0A3B  2A3C               	goto	l3844
  5401  0A3C                     l3844:	
  5402                           
  5403                           ;Multi_RX_testjig_v2.c: 1130: debug_fast_tx(11113);
  5404  0A3C  3069               	movlw	105
  5405  0A3D  00F0               	movwf	debug_fast_tx@data
  5406  0A3E  302B               	movlw	43
  5407  0A3F  00F1               	movwf	debug_fast_tx@data+1
  5408  0A40  22A5  3188         	fcall	_debug_fast_tx
  5409                           
  5410                           ;Multi_RX_testjig_v2.c: 1131: if(device_type == 0xAA)
  5411  0A42  30AA               	movlw	170
  5412  0A43  0678               	xorwf	testjig_done@device_type,w
  5413  0A44  1D03               	btfss	3,2
  5414  0A45  2A4A               	goto	l3850
  5415                           
  5416                           ;Multi_RX_testjig_v2.c: 1132: print_screen("Condo3 Testjig", "-> Insert PCB");
  5417  0A46  301D               	movlw	low (STR_175| (0+32768))
  5418  0A47  00F4               	movwf	print_screen@top
  5419  0A48  3091               	movlw	high (STR_175| (0+32768))
  5420  0A49  2A5D               	goto	L14
  5421  0A4A                     l3850:	
  5422                           
  5423                           ;Multi_RX_testjig_v2.c: 1133: else if(device_type == 0xA1)
  5424  0A4A  30A1               	movlw	161
  5425  0A4B  0678               	xorwf	testjig_done@device_type,w
  5426  0A4C  1D03               	btfss	3,2
  5427  0A4D  2A52               	goto	l3854
  5428                           
  5429                           ;Multi_RX_testjig_v2.c: 1134: print_screen("RX3 Testjig", "-> Insert PCB");
  5430  0A4E  3061               	movlw	low (STR_177| (0+32768))
  5431  0A4F  00F4               	movwf	print_screen@top
  5432  0A50  3092               	movlw	high (STR_177| (0+32768))
  5433  0A51  2A5D               	goto	L14
  5434  0A52                     l3854:	
  5435                           
  5436                           ;Multi_RX_testjig_v2.c: 1135: else if(device_type == 0xA2)
  5437  0A52  30A2               	movlw	162
  5438  0A53  0678               	xorwf	testjig_done@device_type,w
  5439  0A54  1D03               	btfss	3,2
  5440  0A55  2A5A               	goto	l3858
  5441                           
  5442                           ;Multi_RX_testjig_v2.c: 1136: print_screen("Mem_Copier Pass", "-> Insert PCB");
  5443  0A56  30DF               	movlw	low (STR_161| (0+32768))
  5444  0A57  00F4               	movwf	print_screen@top
  5445  0A58  3090               	movlw	high (STR_161| (0+32768))
  5446  0A59  2A5D               	goto	L14
  5447  0A5A                     l3858:	
  5448                           
  5449                           ;Multi_RX_testjig_v2.c: 1137: else
  5450                           ;Multi_RX_testjig_v2.c: 1138: print_screen("Multi_RX Testjig", "-> Insert PCB");
  5451  0A5A  304A               	movlw	low (STR_181| (0+32768))
  5452  0A5B  00F4               	movwf	print_screen@top
  5453  0A5C  3090               	movlw	high (STR_181| (0+32768))
  5454  0A5D                     L14:	
  5455  0A5D  00F5               	movwf	print_screen@top+1
  5456  0A5E  3075               	movlw	low (STR_4| (0+32768))
  5457  0A5F  00F6               	movwf	print_screen@bottom
  5458  0A60  3091               	movlw	high (STR_4| (0+32768))
  5459  0A61  00F7               	movwf	print_screen@bottom+1
  5460  0A62  22D2  3188         	fcall	_print_screen
  5461  0A64                     l496:	
  5462  0A64  0025               	movlb	5	; select bank5
  5463  0A65  198C               	btfsc	12,3	;volatile
  5464  0A66  2A64               	goto	l496
  5465                           
  5466                           ;Multi_RX_testjig_v2.c: 1140: _delay((unsigned long)((100)*(16000000/4000.0)));
  5467  0A67  3003               	movlw	3
  5468  0A68  00FB               	movwf	??_testjig_done+2
  5469  0A69  3008               	movlw	8
  5470  0A6A  00FA               	movwf	??_testjig_done+1
  5471  0A6B  3078               	movlw	120
  5472  0A6C  00F9               	movwf	??_testjig_done
  5473  0A6D                     u6167:	
  5474  0A6D  0BF9               	decfsz	??_testjig_done,f
  5475  0A6E  2A6D               	goto	u6167
  5476  0A6F  0BFA               	decfsz	??_testjig_done+1,f
  5477  0A70  2A6D               	goto	u6167
  5478  0A71  0BFB               	decfsz	??_testjig_done+2,f
  5479  0A72  2A6D               	goto	u6167
  5480                           
  5481                           ;Multi_RX_testjig_v2.c: 1141: if(device_type == 0xAA)
  5482  0A73  30AA               	movlw	170
  5483  0A74  0678               	xorwf	testjig_done@device_type,w
  5484  0A75  1D03               	btfss	3,2
  5485  0A76  2A7B               	goto	l3866
  5486                           
  5487                           ;Multi_RX_testjig_v2.c: 1142: print_screen("Condo3 Testjig", " Press START");
  5488  0A77  301D               	movlw	low (STR_175| (0+32768))
  5489  0A78  00F4               	movwf	print_screen@top
  5490  0A79  3091               	movlw	high (STR_175| (0+32768))
  5491  0A7A  2A8E               	goto	L15
  5492  0A7B                     l3866:	
  5493                           
  5494                           ;Multi_RX_testjig_v2.c: 1143: else if(device_type == 0xA1)
  5495  0A7B  30A1               	movlw	161
  5496  0A7C  0678               	xorwf	testjig_done@device_type,w
  5497  0A7D  1D03               	btfss	3,2
  5498  0A7E  2A83               	goto	l3870
  5499                           
  5500                           ;Multi_RX_testjig_v2.c: 1144: print_screen("RX3 Testjig", " Press START");
  5501  0A7F  3061               	movlw	low (STR_177| (0+32768))
  5502  0A80  00F4               	movwf	print_screen@top
  5503  0A81  3092               	movlw	high (STR_177| (0+32768))
  5504  0A82  2A8E               	goto	L15
  5505  0A83                     l3870:	
  5506                           
  5507                           ;Multi_RX_testjig_v2.c: 1145: else if(device_type == 0xA2)
  5508  0A83  30A2               	movlw	162
  5509  0A84  0678               	xorwf	testjig_done@device_type,w
  5510  0A85  1D03               	btfss	3,2
  5511  0A86  2A8B               	goto	l3874
  5512                           
  5513                           ;Multi_RX_testjig_v2.c: 1146: print_screen("Mem_Copier Pass", " Press START");
  5514  0A87  30DF               	movlw	low (STR_161| (0+32768))
  5515  0A88  00F4               	movwf	print_screen@top
  5516  0A89  3090               	movlw	high (STR_161| (0+32768))
  5517  0A8A  2A8E               	goto	L15
  5518  0A8B                     l3874:	
  5519                           
  5520                           ;Multi_RX_testjig_v2.c: 1147: else
  5521                           ;Multi_RX_testjig_v2.c: 1148: print_screen("Multi_RX Testjig", " Press START");
  5522  0A8B  304A               	movlw	low (STR_181| (0+32768))
  5523  0A8C  00F4               	movwf	print_screen@top
  5524  0A8D  3090               	movlw	high (STR_181| (0+32768))
  5525  0A8E                     L15:	
  5526  0A8E  00F5               	movwf	print_screen@top+1
  5527  0A8F  30FC               	movlw	low (STR_184| (0+32768))
  5528  0A90  00F6               	movwf	print_screen@bottom
  5529  0A91  3091               	movlw	high (STR_184| (0+32768))
  5530  0A92  00F7               	movwf	print_screen@bottom+1
  5531  0A93  22D2  3188         	fcall	_print_screen
  5532  0A95                     l505:	
  5533  0A95  0025               	movlb	5	; select bank5
  5534  0A96  1D8C               	btfss	12,3	;volatile
  5535  0A97  2A95               	goto	l505
  5536                           
  5537                           ;Multi_RX_testjig_v2.c: 1150: _delay((unsigned long)((100)*(16000000/4000.0)));
  5538  0A98  3003               	movlw	3
  5539  0A99  00FB               	movwf	??_testjig_done+2
  5540  0A9A  3008               	movlw	8
  5541  0A9B  00FA               	movwf	??_testjig_done+1
  5542  0A9C  3078               	movlw	120
  5543  0A9D  00F9               	movwf	??_testjig_done
  5544  0A9E                     u6177:	
  5545  0A9E  0BF9               	decfsz	??_testjig_done,f
  5546  0A9F  2A9E               	goto	u6177
  5547  0AA0  0BFA               	decfsz	??_testjig_done+1,f
  5548  0AA1  2A9E               	goto	u6177
  5549  0AA2  0BFB               	decfsz	??_testjig_done+2,f
  5550  0AA3  2A9E               	goto	u6177
  5551  0AA4  297D               	goto	l470
  5552  0AA5                     __end_of_testjig_done:	
  5553  0AA5                     __ptext9:	
  5554 ;; *************** function _debug_fast_tx *****************
  5555 ;; Defined at:
  5556 ;;		line 2144 in file "Multi_RX_testjig_v2.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  data            2    0[COMMON] unsigned int 
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;  i               1    2[COMMON] unsigned char 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;		None               void
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/2
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5573 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5574 ;;Total ram usage:        3 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    1
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_main
  5581 ;;		_testjig_done
  5582 ;;		_print_error
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           
  5587                           ;psect for function _debug_fast_tx
  5588  0AA5                     _debug_fast_tx:	
  5589                           
  5590                           ;Multi_RX_testjig_v2.c: 2146: GIE = 0;
  5591                           
  5592                           ;incstack = 0
  5593                           ; Regs used in _debug_fast_tx: [wreg+status,2+status,0]
  5594  0AA5  138B               	bcf	11,7	;volatile
  5595                           
  5596                           ;Multi_RX_testjig_v2.c: 2147: LATD2 = 0;
  5597  0AA6  0022               	movlb	2	; select bank2
  5598  0AA7  110F               	bcf	15,2	;volatile
  5599                           
  5600                           ;Multi_RX_testjig_v2.c: 2153: __nop();
  5601  0AA8  0000               	nop
  5602                           
  5603                           ;Multi_RX_testjig_v2.c: 2154: __nop();
  5604  0AA9  0000               	nop
  5605                           
  5606                           ;Multi_RX_testjig_v2.c: 2155: __nop();
  5607  0AAA  0000               	nop
  5608                           
  5609                           ;Multi_RX_testjig_v2.c: 2156: __nop();
  5610  0AAB  0000               	nop
  5611                           
  5612                           ;Multi_RX_testjig_v2.c: 2157: __nop();
  5613  0AAC  0000               	nop
  5614                           
  5615                           ;Multi_RX_testjig_v2.c: 2158: __nop();
  5616  0AAD  0000               	nop
  5617                           
  5618                           ;Multi_RX_testjig_v2.c: 2159: __nop();
  5619  0AAE  0000               	nop
  5620                           
  5621                           ;Multi_RX_testjig_v2.c: 2160: __nop();
  5622  0AAF  0000               	nop
  5623                           
  5624                           ;Multi_RX_testjig_v2.c: 2161: __nop();
  5625  0AB0  0000               	nop
  5626                           
  5627                           ;Multi_RX_testjig_v2.c: 2162: unsigned char i;
  5628                           ;Multi_RX_testjig_v2.c: 2163: for(i = 0; i < 16; i++)
  5629  0AB1  01F2               	clrf	debug_fast_tx@i
  5630  0AB2                     l731:	
  5631                           
  5632                           ;Multi_RX_testjig_v2.c: 2164: {
  5633                           ;Multi_RX_testjig_v2.c: 2165: LATD2 = data & 0x01;
  5634  0AB2  1C70               	btfss	debug_fast_tx@data,0
  5635  0AB3  2AB7               	goto	u3100
  5636  0AB4  0022               	movlb	2	; select bank2
  5637  0AB5  150F               	bsf	15,2	;volatile
  5638  0AB6  2AB9               	goto	l3250
  5639  0AB7                     u3100:	
  5640  0AB7  0022               	movlb	2	; select bank2
  5641  0AB8  110F               	bcf	15,2	;volatile
  5642  0AB9                     l3250:	
  5643  0AB9  3010               	movlw	16
  5644                           
  5645                           ;Multi_RX_testjig_v2.c: 2166: data = data >> 1;
  5646  0ABA  36F1               	lsrf	debug_fast_tx@data+1,f
  5647  0ABB  0CF0               	rrf	debug_fast_tx@data,f
  5648  0ABC  0AF2               	incf	debug_fast_tx@i,f
  5649  0ABD  0272               	subwf	debug_fast_tx@i,w
  5650  0ABE  1C03               	skipc
  5651  0ABF  2AB2               	goto	l731
  5652                           
  5653                           ;Multi_RX_testjig_v2.c: 2167: }
  5654                           ;Multi_RX_testjig_v2.c: 2168: __nop();
  5655  0AC0  0000               	nop
  5656                           
  5657                           ;Multi_RX_testjig_v2.c: 2169: __nop();
  5658  0AC1  0000               	nop
  5659                           
  5660                           ;Multi_RX_testjig_v2.c: 2170: __nop();
  5661  0AC2  0000               	nop
  5662                           
  5663                           ;Multi_RX_testjig_v2.c: 2171: __nop();
  5664  0AC3  0000               	nop
  5665                           
  5666                           ;Multi_RX_testjig_v2.c: 2172: __nop();
  5667  0AC4  0000               	nop
  5668                           
  5669                           ;Multi_RX_testjig_v2.c: 2173: __nop();
  5670  0AC5  0000               	nop
  5671                           
  5672                           ;Multi_RX_testjig_v2.c: 2174: LATD2 = 1;
  5673  0AC6  0022               	movlb	2	; select bank2
  5674  0AC7  150F               	bsf	15,2	;volatile
  5675                           
  5676                           ;Multi_RX_testjig_v2.c: 2175: __nop();
  5677  0AC8  0000               	nop
  5678                           
  5679                           ;Multi_RX_testjig_v2.c: 2176: __nop();
  5680  0AC9  0000               	nop
  5681                           
  5682                           ;Multi_RX_testjig_v2.c: 2177: __nop();
  5683  0ACA  0000               	nop
  5684                           
  5685                           ;Multi_RX_testjig_v2.c: 2178: __nop();
  5686  0ACB  0000               	nop
  5687                           
  5688                           ;Multi_RX_testjig_v2.c: 2179: __nop();
  5689  0ACC  0000               	nop
  5690                           
  5691                           ;Multi_RX_testjig_v2.c: 2180: __nop();
  5692  0ACD  0000               	nop
  5693                           
  5694                           ;Multi_RX_testjig_v2.c: 2181: __nop();
  5695  0ACE  0000               	nop
  5696                           
  5697                           ;Multi_RX_testjig_v2.c: 2182: __nop();
  5698  0ACF  0000               	nop
  5699                           
  5700                           ;Multi_RX_testjig_v2.c: 2183: GIE = 1;
  5701  0AD0  178B               	bsf	11,7	;volatile
  5702  0AD1  0008               	return
  5703  0AD2                     __end_of_debug_fast_tx:	
  5704  0AD2                     __ptext3:	
  5705 ;; *************** function _print_screen *****************
  5706 ;; Defined at:
  5707 ;;		line 1651 in file "Multi_RX_testjig_v2.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  top             2    4[COMMON] PTR const unsigned char 
  5710 ;;		 -> STR_191(12), STR_189(17), STR_187(16), STR_185(12), 
  5711 ;;		 -> STR_183(15), STR_181(17), STR_179(16), STR_177(12), 
  5712 ;;		 -> STR_175(15), STR_173(17), STR_171(9), STR_169(16), 
  5713 ;;		 -> STR_167(5), STR_165(8), STR_163(14), STR_161(16), 
  5714 ;;		 -> STR_159(9), STR_157(12), STR_155(10), STR_153(16), 
  5715 ;;		 -> STR_149(10), STR_145(14), STR_141(13), STR_133(8), 
  5716 ;;		 -> STR_131(8), STR_129(8), STR_127(8), STR_113(8), 
  5717 ;;		 -> STR_111(8), STR_99(8), STR_77(9), STR_75(9), 
  5718 ;;		 -> STR_53(9), STR_51(9), STR_39(11), STR_37(11), 
  5719 ;;		 -> STR_31(13), STR_25(9), STR_21(13), STR_19(19), 
  5720 ;;		 -> STR_17(12), STR_15(19), STR_5(15), STR_1(9), 
  5721 ;;  bottom          2    6[COMMON] PTR const unsigned char 
  5722 ;;		 -> STR_192(17), STR_190(13), STR_188(13), STR_186(13), 
  5723 ;;		 -> STR_184(13), STR_182(14), STR_180(14), STR_178(14), 
  5724 ;;		 -> STR_176(14), STR_174(8), STR_172(8), STR_170(9), 
  5725 ;;		 -> STR_168(9), STR_166(9), STR_164(14), STR_162(14), 
  5726 ;;		 -> STR_160(14), STR_158(14), STR_156(11), STR_154(13), 
  5727 ;;		 -> STR_150(10), STR_146(2), STR_142(2), STR_134(16), 
  5728 ;;		 -> STR_132(15), STR_130(7), STR_128(10), STR_114(5), 
  5729 ;;		 -> STR_112(9), STR_100(4), STR_78(3), STR_76(1), 
  5730 ;;		 -> STR_54(3), STR_52(1), STR_40(5), STR_38(1), 
  5731 ;;		 -> STR_32(6), STR_26(18), STR_22(6), STR_20(9), 
  5732 ;;		 -> STR_18(13), STR_16(1), STR_6(1), STR_2(17), 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;		None
  5735 ;; Return value:  Size  Location     Type
  5736 ;;		None               void
  5737 ;; Registers used:
  5738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/4
  5741 ;;		On exit  : 1F/4
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5744 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5747 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5748 ;;Total ram usage:        4 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:    3
  5751 ;; This function calls:
  5752 ;;		_clear_lcd
  5753 ;;		_i2c_Write_string
  5754 ;;		_i2c_first_line
  5755 ;;		_i2c_second_line
  5756 ;; This function is called by:
  5757 ;;		_main
  5758 ;;		_testjig_done
  5759 ;;		_print_error
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763                           
  5764                           ;psect for function _print_screen
  5765  0AD2                     _print_screen:	
  5766                           
  5767                           ;Multi_RX_testjig_v2.c: 1653: clear_lcd();
  5768                           
  5769                           ;incstack = 0
  5770                           ; Regs used in _print_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5771  0AD2  2354  3188         	fcall	_clear_lcd
  5772                           
  5773                           ;Multi_RX_testjig_v2.c: 1654: i2c_first_line();
  5774  0AD4  2343  3188         	fcall	_i2c_first_line
  5775                           
  5776                           ;Multi_RX_testjig_v2.c: 1655: i2c_Write_string(top);
  5777  0AD6  0875               	movf	print_screen@top+1,w
  5778  0AD7  00F2               	movwf	i2c_Write_string@data+1
  5779  0AD8  0874               	movf	print_screen@top,w
  5780  0AD9  00F1               	movwf	i2c_Write_string@data
  5781  0ADA  2381  3188         	fcall	_i2c_Write_string
  5782                           
  5783                           ;Multi_RX_testjig_v2.c: 1656: i2c_second_line();
  5784  0ADC  22E3  3188         	fcall	_i2c_second_line
  5785                           
  5786                           ;Multi_RX_testjig_v2.c: 1657: i2c_Write_string(bottom);
  5787  0ADE  0877               	movf	print_screen@bottom+1,w
  5788  0ADF  00F2               	movwf	i2c_Write_string@data+1
  5789  0AE0  0876               	movf	print_screen@bottom,w
  5790  0AE1  00F1               	movwf	i2c_Write_string@data
  5791  0AE2  2B81               	ljmp	l3068
  5792  0AE3                     __end_of_print_screen:	
  5793  0AE3                     __ptext4:	
  5794 ;; *************** function _i2c_second_line *****************
  5795 ;; Defined at:
  5796 ;;		line 1275 in file "Multi_RX_testjig_v2.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;		None
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;		None
  5801 ;; Return value:  Size  Location     Type
  5802 ;;		None               void
  5803 ;; Registers used:
  5804 ;;		wreg, status,2, status,0, pclath, cstack
  5805 ;; Tracked objects:
  5806 ;;		On entry : 1F/4
  5807 ;;		On exit  : 1F/4
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5814 ;;Total ram usage:        1 bytes
  5815 ;; Hardware stack levels used:    1
  5816 ;; Hardware stack levels required when called:    2
  5817 ;; This function calls:
  5818 ;;		_i2c_Start
  5819 ;;		_i2c_Stop
  5820 ;;		_i2c_Write
  5821 ;; This function is called by:
  5822 ;;		_print_error
  5823 ;;		_print_screen
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           
  5828                           ;psect for function _i2c_second_line
  5829  0AE3                     _i2c_second_line:	
  5830                           
  5831                           ;Multi_RX_testjig_v2.c: 1277: i2c_Start();
  5832                           
  5833                           ;incstack = 0
  5834                           ; Regs used in _i2c_second_line: [wreg+status,2+status,0+pclath+cstack]
  5835  0AE3  23E0  3188         	fcall	_i2c_Start
  5836                           
  5837                           ;Multi_RX_testjig_v2.c: 1278: i2c_Write(0x7C);
  5838  0AE5  307C               	movlw	124
  5839  0AE6  23D4  3188         	fcall	_i2c_Write
  5840                           
  5841                           ;Multi_RX_testjig_v2.c: 1279: i2c_Write(0x00);
  5842  0AE8  3000               	movlw	0
  5843  0AE9  23D4  3188         	fcall	_i2c_Write
  5844                           
  5845                           ;Multi_RX_testjig_v2.c: 1280: i2c_Write(0xC0);
  5846  0AEB  30C0               	movlw	192
  5847  0AEC  23D4  3188         	fcall	_i2c_Write
  5848                           
  5849                           ;Multi_RX_testjig_v2.c: 1281: _delay((unsigned long)((27)*(16000000/4000000.0)));
  5850  0AEE  3023               	movlw	35
  5851  0AEF  00F1               	movwf	??_i2c_second_line
  5852  0AF0                     u6207:	
  5853  0AF0  0BF1               	decfsz	??_i2c_second_line,f
  5854  0AF1  2AF0               	goto	u6207
  5855  0AF2  3200               	nop2	;nop
  5856                           
  5857                           ;Multi_RX_testjig_v2.c: 1282: i2c_Stop();
  5858  0AF3  2BE5               	ljmp	l3066
  5859  0AF4                     __end_of_i2c_second_line:	
  5860  0AF4                     __ptext2:	
  5861 ;; *************** function _print_error *****************
  5862 ;; Defined at:
  5863 ;;		line 1627 in file "Multi_RX_testjig_v2.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  top             2    8[COMMON] PTR const unsigned char 
  5866 ;;		 -> STR_151(12), STR_147(12), STR_143(12), STR_139(12), 
  5867 ;;		 -> STR_137(8), STR_135(8), STR_125(13), STR_123(13), 
  5868 ;;		 -> STR_121(12), STR_119(12), STR_117(12), STR_115(12), 
  5869 ;;		 -> STR_109(12), STR_107(12), STR_105(12), STR_103(12), 
  5870 ;;		 -> STR_101(12), STR_97(12), STR_95(10), STR_93(12), 
  5871 ;;		 -> STR_91(9), STR_89(12), STR_87(12), STR_85(9), 
  5872 ;;		 -> STR_83(9), STR_81(12), STR_79(10), STR_73(12), 
  5873 ;;		 -> STR_71(10), STR_69(12), STR_67(9), STR_65(12), 
  5874 ;;		 -> STR_63(12), STR_61(9), STR_59(9), STR_57(12), 
  5875 ;;		 -> STR_55(10), STR_49(19), STR_47(12), STR_45(16), 
  5876 ;;		 -> STR_43(12), STR_41(19), STR_35(12), STR_33(12), 
  5877 ;;		 -> STR_29(12), STR_27(13), STR_23(12), STR_13(14), 
  5878 ;;		 -> STR_11(11), STR_9(15), STR_7(15), STR_3(9), 
  5879 ;;  bottom          2   10[COMMON] PTR const unsigned char 
  5880 ;;		 -> STR_152(4), STR_148(4), STR_144(4), STR_140(4), 
  5881 ;;		 -> STR_138(15), STR_136(17), STR_126(13), STR_124(14), 
  5882 ;;		 -> STR_122(5), STR_120(5), STR_118(5), STR_116(4), 
  5883 ;;		 -> STR_110(13), STR_108(16), STR_106(14), STR_104(4), 
  5884 ;;		 -> STR_102(4), STR_98(4), STR_96(9), STR_94(3), 
  5885 ;;		 -> STR_92(7), STR_90(4), STR_88(4), STR_86(15), 
  5886 ;;		 -> STR_84(16), STR_82(3), STR_80(9), STR_74(3), 
  5887 ;;		 -> STR_72(9), STR_70(3), STR_68(7), STR_66(4), 
  5888 ;;		 -> STR_64(4), STR_62(15), STR_60(16), STR_58(3), 
  5889 ;;		 -> STR_56(9), STR_50(9), STR_48(3), STR_46(7), 
  5890 ;;		 -> STR_44(3), STR_42(9), STR_36(18), STR_34(14), 
  5891 ;;		 -> STR_30(3), STR_28(12), STR_24(3), STR_14(12), 
  5892 ;;		 -> STR_12(11), STR_10(13), STR_8(13), STR_4(14), 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;		None
  5895 ;; Return value:  Size  Location     Type
  5896 ;;		None               void
  5897 ;; Registers used:
  5898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/5
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5904 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5906 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5907 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5908 ;;Total ram usage:        7 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; Hardware stack levels required when called:    4
  5911 ;; This function calls:
  5912 ;;		_buzz_one
  5913 ;;		_clear_lcd
  5914 ;;		_debug_fast_tx
  5915 ;;		_i2c_Write_string
  5916 ;;		_i2c_first_line
  5917 ;;		_i2c_second_line
  5918 ;;		_power_supply_set
  5919 ;;		_print_screen
  5920 ;; This function is called by:
  5921 ;;		_main
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           
  5926                           ;psect for function _print_error
  5927  0AF4                     _print_error:	
  5928                           
  5929                           ;Multi_RX_testjig_v2.c: 1629: power_supply_set(3);
  5930                           
  5931                           ;incstack = 0
  5932                           ; Regs used in _print_error: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5933  0AF4  3003               	movlw	3
  5934  0AF5  23F2  3188         	fcall	_power_supply_set
  5935                           
  5936                           ;Multi_RX_testjig_v2.c: 1630: LATA7 = 0;
  5937  0AF7  0022               	movlb	2	; select bank2
  5938  0AF8  138C               	bcf	12,7	;volatile
  5939                           
  5940                           ;Multi_RX_testjig_v2.c: 1631: LATB5 = 0;
  5941  0AF9  128D               	bcf	13,5	;volatile
  5942                           
  5943                           ;Multi_RX_testjig_v2.c: 1632: LATA6 = 0;
  5944  0AFA  130C               	bcf	12,6	;volatile
  5945                           
  5946                           ;Multi_RX_testjig_v2.c: 1633: TRISG0 = 1;
  5947  0AFB  0026               	movlb	6	; select bank6
  5948  0AFC  140D               	bsf	13,0	;volatile
  5949                           
  5950                           ;Multi_RX_testjig_v2.c: 1634: RE0 = 0;
  5951  0AFD  0020               	movlb	0	; select bank0
  5952  0AFE  1010               	bcf	16,0	;volatile
  5953                           
  5954                           ;Multi_RX_testjig_v2.c: 1635: debug_fast_tx(12345);
  5955  0AFF  3039               	movlw	57
  5956  0B00  00F0               	movwf	debug_fast_tx@data
  5957  0B01  3030               	movlw	48
  5958  0B02  00F1               	movwf	debug_fast_tx@data+1
  5959  0B03  22A5  3188         	fcall	_debug_fast_tx
  5960                           
  5961                           ;Multi_RX_testjig_v2.c: 1636: buzz_one(1000);
  5962  0B05  30E8               	movlw	232
  5963  0B06  00F0               	movwf	buzz_one@time
  5964  0B07  3003               	movlw	3
  5965  0B08  00F1               	movwf	buzz_one@time+1
  5966  0B09  23EA  3188         	fcall	_buzz_one
  5967  0B0B                     l3894:	
  5968                           
  5969                           ;Multi_RX_testjig_v2.c: 1638: {
  5970                           ;Multi_RX_testjig_v2.c: 1639: clear_lcd();
  5971  0B0B  2354  3188         	fcall	_clear_lcd
  5972                           
  5973                           ;Multi_RX_testjig_v2.c: 1640: i2c_first_line();
  5974  0B0D  2343  3188         	fcall	_i2c_first_line
  5975                           
  5976                           ;Multi_RX_testjig_v2.c: 1641: i2c_Write_string(top);
  5977  0B0F  0879               	movf	print_error@top+1,w
  5978  0B10  00F2               	movwf	i2c_Write_string@data+1
  5979  0B11  0878               	movf	print_error@top,w
  5980  0B12  00F1               	movwf	i2c_Write_string@data
  5981  0B13  2381  3188         	fcall	_i2c_Write_string
  5982                           
  5983                           ;Multi_RX_testjig_v2.c: 1642: i2c_second_line();
  5984  0B15  22E3  3188         	fcall	_i2c_second_line
  5985                           
  5986                           ;Multi_RX_testjig_v2.c: 1643: i2c_Write_string(bottom);
  5987  0B17  087B               	movf	print_error@bottom+1,w
  5988  0B18  00F2               	movwf	i2c_Write_string@data+1
  5989  0B19  087A               	movf	print_error@bottom,w
  5990  0B1A  00F1               	movwf	i2c_Write_string@data
  5991  0B1B  2381  3188         	fcall	_i2c_Write_string
  5992                           
  5993                           ;Multi_RX_testjig_v2.c: 1644: _delay((unsigned long)((2000)*(16000000/4000.0)));
  5994  0B1D  3029               	movlw	41
  5995  0B1E  0020               	movlb	0	; select bank0
  5996  0B1F  00A2               	movwf	??_print_error+2
  5997  0B20  3096               	movlw	150
  5998  0B21  00A1               	movwf	??_print_error+1
  5999  0B22  30A6               	movlw	166
  6000  0B23  00A0               	movwf	??_print_error
  6001  0B24                     u6187:	
  6002  0B24  0BA0               	decfsz	??_print_error,f
  6003  0B25  2B24               	goto	u6187
  6004  0B26  0BA1               	decfsz	??_print_error+1,f
  6005  0B27  2B24               	goto	u6187
  6006  0B28  0BA2               	decfsz	??_print_error+2,f
  6007  0B29  2B24               	goto	u6187
  6008                           
  6009                           ;Multi_RX_testjig_v2.c: 1645: print_screen("Press START", " to restart test");
  6010  0B2A  30FD               	movlw	low ((STR_184+1)| (0+32768))
  6011  0B2B  00F4               	movwf	print_screen@top
  6012  0B2C  3091               	movlw	high ((STR_184+1)| (0+32768))
  6013  0B2D  00F5               	movwf	print_screen@top+1
  6014  0B2E  308E               	movlw	low (STR_192| (0+32768))
  6015  0B2F  00F6               	movwf	print_screen@bottom
  6016  0B30  3090               	movlw	high (STR_192| (0+32768))
  6017  0B31  00F7               	movwf	print_screen@bottom+1
  6018  0B32  22D2  3188         	fcall	_print_screen
  6019                           
  6020                           ;Multi_RX_testjig_v2.c: 1647: _delay((unsigned long)((1200)*(16000000/4000.0)));
  6021  0B34  3019               	movlw	25
  6022  0B35  0020               	movlb	0	; select bank0
  6023  0B36  00A2               	movwf	??_print_error+2
  6024  0B37  305A               	movlw	90
  6025  0B38  00A1               	movwf	??_print_error+1
  6026  0B39  30C8               	movlw	200
  6027  0B3A  00A0               	movwf	??_print_error
  6028  0B3B                     u6197:	
  6029  0B3B  0BA0               	decfsz	??_print_error,f
  6030  0B3C  2B3B               	goto	u6197
  6031  0B3D  0BA1               	decfsz	??_print_error+1,f
  6032  0B3E  2B3B               	goto	u6197
  6033  0B3F  0BA2               	decfsz	??_print_error+2,f
  6034  0B40  2B3B               	goto	u6197
  6035  0B41  3200               	nop2
  6036  0B42  2B0B               	goto	l3894
  6037  0B43                     __end_of_print_error:	
  6038  0B43                     __ptext5:	
  6039 ;; *************** function _i2c_first_line *****************
  6040 ;; Defined at:
  6041 ;;		line 1265 in file "Multi_RX_testjig_v2.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;		None
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;		None
  6046 ;; Return value:  Size  Location     Type
  6047 ;;		None               void
  6048 ;; Registers used:
  6049 ;;		wreg, status,2, status,0, pclath, cstack
  6050 ;; Tracked objects:
  6051 ;;		On entry : 1F/4
  6052 ;;		On exit  : 1F/4
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6058 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6059 ;;Total ram usage:        1 bytes
  6060 ;; Hardware stack levels used:    1
  6061 ;; Hardware stack levels required when called:    2
  6062 ;; This function calls:
  6063 ;;		_i2c_Start
  6064 ;;		_i2c_Stop
  6065 ;;		_i2c_Write
  6066 ;; This function is called by:
  6067 ;;		_print_error
  6068 ;;		_print_screen
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           
  6073                           ;psect for function _i2c_first_line
  6074  0B43                     _i2c_first_line:	
  6075                           
  6076                           ;Multi_RX_testjig_v2.c: 1267: i2c_Start();
  6077                           
  6078                           ;incstack = 0
  6079                           ; Regs used in _i2c_first_line: [wreg+status,2+status,0+pclath+cstack]
  6080  0B43  23E0  3188         	fcall	_i2c_Start
  6081                           
  6082                           ;Multi_RX_testjig_v2.c: 1268: i2c_Write(0x7C);
  6083  0B45  307C               	movlw	124
  6084  0B46  23D4  3188         	fcall	_i2c_Write
  6085                           
  6086                           ;Multi_RX_testjig_v2.c: 1269: i2c_Write(0x00);
  6087  0B48  3000               	movlw	0
  6088  0B49  23D4  3188         	fcall	_i2c_Write
  6089                           
  6090                           ;Multi_RX_testjig_v2.c: 1270: i2c_Write(0x80);
  6091  0B4B  3080               	movlw	128
  6092  0B4C  23D4  3188         	fcall	_i2c_Write
  6093                           
  6094                           ;Multi_RX_testjig_v2.c: 1271: _delay((unsigned long)((27)*(16000000/4000000.0)));
  6095  0B4E  3023               	movlw	35
  6096  0B4F  00F1               	movwf	??_i2c_first_line
  6097  0B50                     u6217:	
  6098  0B50  0BF1               	decfsz	??_i2c_first_line,f
  6099  0B51  2B50               	goto	u6217
  6100  0B52  3200               	nop2	;nop
  6101                           
  6102                           ;Multi_RX_testjig_v2.c: 1272: i2c_Stop();
  6103  0B53  2BE5               	ljmp	l3066
  6104  0B54                     __end_of_i2c_first_line:	
  6105  0B54                     __ptext7:	
  6106 ;; *************** function _clear_lcd *****************
  6107 ;; Defined at:
  6108 ;;		line 1255 in file "Multi_RX_testjig_v2.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;		None
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;		None
  6113 ;; Return value:  Size  Location     Type
  6114 ;;		None               void
  6115 ;; Registers used:
  6116 ;;		wreg, status,2, status,0, pclath, cstack
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/2
  6119 ;;		On exit  : 1F/4
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6124 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6126 ;;Total ram usage:        2 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; Hardware stack levels required when called:    2
  6129 ;; This function calls:
  6130 ;;		_i2c_Start
  6131 ;;		_i2c_Stop
  6132 ;;		_i2c_Write
  6133 ;; This function is called by:
  6134 ;;		_print_error
  6135 ;;		_print_screen
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           
  6140                           ;psect for function _clear_lcd
  6141  0B54                     _clear_lcd:	
  6142                           
  6143                           ;Multi_RX_testjig_v2.c: 1257: i2c_Start();
  6144                           
  6145                           ;incstack = 0
  6146                           ; Regs used in _clear_lcd: [wreg+status,2+status,0+pclath+cstack]
  6147  0B54  23E0  3188         	fcall	_i2c_Start
  6148                           
  6149                           ;Multi_RX_testjig_v2.c: 1258: i2c_Write(0x7C);
  6150  0B56  307C               	movlw	124
  6151  0B57  23D4  3188         	fcall	_i2c_Write
  6152                           
  6153                           ;Multi_RX_testjig_v2.c: 1259: i2c_Write(0x00);
  6154  0B59  3000               	movlw	0
  6155  0B5A  23D4  3188         	fcall	_i2c_Write
  6156                           
  6157                           ;Multi_RX_testjig_v2.c: 1260: i2c_Write(0x01);
  6158  0B5C  3001               	movlw	1
  6159  0B5D  23D4  3188         	fcall	_i2c_Write
  6160                           
  6161                           ;Multi_RX_testjig_v2.c: 1261: _delay((unsigned long)((2)*(16000000/4000.0)));
  6162  0B5F  300B               	movlw	11
  6163  0B60  00F2               	movwf	??_clear_lcd+1
  6164  0B61  3062               	movlw	98
  6165  0B62  00F1               	movwf	??_clear_lcd
  6166  0B63                     u6227:	
  6167  0B63  0BF1               	decfsz	??_clear_lcd,f
  6168  0B64  2B63               	goto	u6227
  6169  0B65  0BF2               	decfsz	??_clear_lcd+1,f
  6170  0B66  2B63               	goto	u6227
  6171  0B67  0000               	nop
  6172                           
  6173                           ;Multi_RX_testjig_v2.c: 1262: i2c_Stop();
  6174  0B68  2BE5               	ljmp	l3066
  6175  0B69                     __end_of_clear_lcd:	
  6176  0B69                     __ptext29:	
  6177 ;; *************** function _digitalpot *****************
  6178 ;; Defined at:
  6179 ;;		line 2134 in file "Multi_RX_testjig_v2.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  value           1    wreg     unsigned char 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  value           1    3[COMMON] unsigned char 
  6184 ;; Return value:  Size  Location     Type
  6185 ;;		None               void
  6186 ;; Registers used:
  6187 ;;		wreg, status,2, status,0, pclath, cstack
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/4
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6196 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6197 ;;Total ram usage:        3 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; Hardware stack levels required when called:    2
  6200 ;; This function calls:
  6201 ;;		_i2c_Start
  6202 ;;		_i2c_Stop
  6203 ;;		_i2c_Write
  6204 ;; This function is called by:
  6205 ;;		_Vout_set
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           
  6210                           ;psect for function _digitalpot
  6211  0B69                     _digitalpot:	
  6212                           
  6213                           ;incstack = 0
  6214                           ; Regs used in _digitalpot: [wreg+status,2+status,0+pclath+cstack]
  6215                           ;digitalpot@value stored from wreg
  6216  0B69  00F3               	movwf	digitalpot@value
  6217                           
  6218                           ;Multi_RX_testjig_v2.c: 2136: i2c_Start();
  6219  0B6A  23E0  3188         	fcall	_i2c_Start
  6220                           
  6221                           ;Multi_RX_testjig_v2.c: 2137: i2c_Write(0x5C);
  6222  0B6C  305C               	movlw	92
  6223  0B6D  23D4  3188         	fcall	_i2c_Write
  6224                           
  6225                           ;Multi_RX_testjig_v2.c: 2138: i2c_Write(0b00000000);
  6226  0B6F  3000               	movlw	0
  6227  0B70  23D4  3188         	fcall	_i2c_Write
  6228                           
  6229                           ;Multi_RX_testjig_v2.c: 2139: i2c_Write(value);
  6230  0B72  0873               	movf	digitalpot@value,w
  6231  0B73  23D4  3188         	fcall	_i2c_Write
  6232                           
  6233                           ;Multi_RX_testjig_v2.c: 2140: i2c_Stop();
  6234  0B75  23E5  3188         	fcall	_i2c_Stop
  6235                           
  6236                           ;Multi_RX_testjig_v2.c: 2141: _delay((unsigned long)((20)*(16000000/4000.0)));
  6237  0B77  3068               	movlw	104
  6238  0B78  00F2               	movwf	??_digitalpot+1
  6239  0B79  30E4               	movlw	228
  6240  0B7A  00F1               	movwf	??_digitalpot
  6241  0B7B                     u6257:	
  6242  0B7B  0BF1               	decfsz	??_digitalpot,f
  6243  0B7C  2B7B               	goto	u6257
  6244  0B7D  0BF2               	decfsz	??_digitalpot+1,f
  6245  0B7E  2B7B               	goto	u6257
  6246  0B7F  0000               	nop
  6247  0B80  0008               	return
  6248  0B81                     __end_of_digitalpot:	
  6249  0B81                     __ptext6:	
  6250 ;; *************** function _i2c_Write_string *****************
  6251 ;; Defined at:
  6252 ;;		line 1187 in file "Multi_RX_testjig_v2.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;  data            2    1[COMMON] PTR const unsigned char 
  6255 ;;		 -> STR_192(17), STR_191(12), STR_190(13), STR_189(17), 
  6256 ;;		 -> STR_188(13), STR_187(16), STR_186(13), STR_185(12), 
  6257 ;;		 -> STR_184(13), STR_183(15), STR_182(14), STR_181(17), 
  6258 ;;		 -> STR_180(14), STR_179(16), STR_178(14), STR_177(12), 
  6259 ;;		 -> STR_176(14), STR_175(15), STR_174(8), STR_173(17), 
  6260 ;;		 -> STR_172(8), STR_171(9), STR_170(9), STR_169(16), 
  6261 ;;		 -> STR_168(9), STR_167(5), STR_166(9), STR_165(8), 
  6262 ;;		 -> STR_164(14), STR_163(14), STR_162(14), STR_161(16), 
  6263 ;;		 -> STR_160(14), STR_159(9), STR_158(14), STR_157(12), 
  6264 ;;		 -> STR_156(11), STR_155(10), STR_154(13), STR_153(16), 
  6265 ;;		 -> STR_152(4), STR_151(12), STR_150(10), STR_149(10), 
  6266 ;;		 -> STR_148(4), STR_147(12), STR_146(2), STR_145(14), 
  6267 ;;		 -> STR_144(4), STR_143(12), STR_142(2), STR_141(13), 
  6268 ;;		 -> STR_140(4), STR_139(12), STR_138(15), STR_137(8), 
  6269 ;;		 -> STR_136(17), STR_135(8), STR_134(16), STR_133(8), 
  6270 ;;		 -> STR_132(15), STR_131(8), STR_130(7), STR_129(8), 
  6271 ;;		 -> STR_128(10), STR_127(8), STR_126(13), STR_125(13), 
  6272 ;;		 -> STR_124(14), STR_123(13), STR_122(5), STR_121(12), 
  6273 ;;		 -> STR_120(5), STR_119(12), STR_118(5), STR_117(12), 
  6274 ;;		 -> STR_116(4), STR_115(12), STR_114(5), STR_113(8), 
  6275 ;;		 -> STR_112(9), STR_111(8), STR_110(13), STR_109(12), 
  6276 ;;		 -> STR_108(16), STR_107(12), STR_106(14), STR_105(12), 
  6277 ;;		 -> STR_104(4), STR_103(12), STR_102(4), STR_101(12), 
  6278 ;;		 -> STR_100(4), STR_99(8), STR_98(4), STR_97(12), 
  6279 ;;		 -> STR_96(9), STR_95(10), STR_94(3), STR_93(12), 
  6280 ;;		 -> STR_92(7), STR_91(9), STR_90(4), STR_89(12), 
  6281 ;;		 -> STR_88(4), STR_87(12), STR_86(15), STR_85(9), 
  6282 ;;		 -> STR_84(16), STR_83(9), STR_82(3), STR_81(12), 
  6283 ;;		 -> STR_80(9), STR_79(10), STR_78(3), STR_77(9), 
  6284 ;;		 -> STR_76(1), STR_75(9), STR_74(3), STR_73(12), 
  6285 ;;		 -> STR_72(9), STR_71(10), STR_70(3), STR_69(12), 
  6286 ;;		 -> STR_68(7), STR_67(9), STR_66(4), STR_65(12), 
  6287 ;;		 -> STR_64(4), STR_63(12), STR_62(15), STR_61(9), 
  6288 ;;		 -> STR_60(16), STR_59(9), STR_58(3), STR_57(12), 
  6289 ;;		 -> STR_56(9), STR_55(10), STR_54(3), STR_53(9), 
  6290 ;;		 -> STR_52(1), STR_51(9), STR_50(9), STR_49(19), 
  6291 ;;		 -> STR_48(3), STR_47(12), STR_46(7), STR_45(16), 
  6292 ;;		 -> STR_44(3), STR_43(12), STR_42(9), STR_41(19), 
  6293 ;;		 -> STR_40(5), STR_39(11), STR_38(1), STR_37(11), 
  6294 ;;		 -> STR_36(18), STR_35(12), STR_34(14), STR_33(12), 
  6295 ;;		 -> STR_32(6), STR_31(13), STR_30(3), STR_29(12), 
  6296 ;;		 -> STR_28(12), STR_27(13), STR_26(18), STR_25(9), 
  6297 ;;		 -> STR_24(3), STR_23(12), STR_22(6), STR_21(13), 
  6298 ;;		 -> STR_20(9), STR_19(19), STR_18(13), STR_17(12), 
  6299 ;;		 -> STR_16(1), STR_15(19), STR_14(12), STR_13(14), 
  6300 ;;		 -> STR_12(11), STR_11(11), STR_10(13), STR_9(15), 
  6301 ;;		 -> STR_8(13), STR_7(15), STR_6(1), STR_5(15), 
  6302 ;;		 -> STR_4(14), STR_3(9), STR_2(17), STR_1(9), 
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;		None
  6305 ;; Return value:  Size  Location     Type
  6306 ;;		None               void
  6307 ;; Registers used:
  6308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6309 ;; Tracked objects:
  6310 ;;		On entry : 1F/4
  6311 ;;		On exit  : 1F/4
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6317 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6318 ;;Total ram usage:        3 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; Hardware stack levels required when called:    2
  6321 ;; This function calls:
  6322 ;;		_i2c_Start
  6323 ;;		_i2c_Stop
  6324 ;;		_i2c_Write
  6325 ;; This function is called by:
  6326 ;;		_print_error
  6327 ;;		_print_screen
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           
  6332                           ;psect for function _i2c_Write_string
  6333  0B81                     _i2c_Write_string:	
  6334  0B81                     l3068:	
  6335                           ;incstack = 0
  6336                           ; Regs used in _i2c_Write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6337                           
  6338                           
  6339                           ;Multi_RX_testjig_v2.c: 1189: i2c_Start();
  6340  0B81  23E0  3188         	fcall	_i2c_Start
  6341                           
  6342                           ;Multi_RX_testjig_v2.c: 1190: i2c_Write(0x7C);
  6343  0B83  307C               	movlw	124
  6344  0B84  23D4  3188         	fcall	_i2c_Write
  6345                           
  6346                           ;Multi_RX_testjig_v2.c: 1191: i2c_Write(0x40);
  6347  0B86  3040               	movlw	64
  6348  0B87  23D4  3188         	fcall	_i2c_Write
  6349  0B89                     l3078:	
  6350                           ;Multi_RX_testjig_v2.c: 1193: while(*data != (0))
  6351                           
  6352  0B89  0871               	movf	i2c_Write_string@data,w
  6353  0B8A  0084               	movwf	4
  6354  0B8B  0872               	movf	i2c_Write_string@data+1,w
  6355  0B8C  0085               	movwf	5
  6356  0B8D  0012               	moviw fsr0++
  6357  0B8E  1903               	btfsc	3,2
  6358  0B8F  2B9B               	goto	l3080
  6359                           
  6360                           ;Multi_RX_testjig_v2.c: 1194: {
  6361                           ;Multi_RX_testjig_v2.c: 1195: i2c_Write(*data);
  6362  0B90  0871               	movf	i2c_Write_string@data,w
  6363  0B91  0084               	movwf	4
  6364  0B92  0872               	movf	i2c_Write_string@data+1,w
  6365  0B93  0085               	movwf	5
  6366  0B94  0800               	movf	0,w	;code access
  6367  0B95  23D4  3188         	fcall	_i2c_Write
  6368                           
  6369                           ;Multi_RX_testjig_v2.c: 1196: data++;
  6370  0B97  0AF1               	incf	i2c_Write_string@data,f
  6371  0B98  1903               	skipnz
  6372  0B99  0AF2               	incf	i2c_Write_string@data+1,f
  6373  0B9A  2B89               	goto	l3078
  6374  0B9B                     l3080:	
  6375                           
  6376                           ;Multi_RX_testjig_v2.c: 1197: }
  6377                           ;Multi_RX_testjig_v2.c: 1198: i2c_Stop();
  6378  0B9B  2BE5               	ljmp	l3066
  6379  0B9C                     __end_of_i2c_Write_string:	
  6380  0B9C                     __ptext17:	
  6381 ;; *************** function _init_i2c_lcd_5v *****************
  6382 ;; Defined at:
  6383 ;;		line 1211 in file "Multi_RX_testjig_v2.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  contrast        1    wreg     unsigned char 
  6386 ;;  single1_doub    1    1[COMMON] unsigned char 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  contrast        1    4[COMMON] unsigned char 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;		None               void
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0, pclath, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 1F/4
  6395 ;;		On exit  : 1F/4
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6398 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6400 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6401 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6402 ;;Total ram usage:        4 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    2
  6405 ;; This function calls:
  6406 ;;		_i2c_Start
  6407 ;;		_i2c_Stop
  6408 ;;		_i2c_Write
  6409 ;; This function is called by:
  6410 ;;		_main
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           
  6415                           ;psect for function _init_i2c_lcd_5v
  6416  0B9C                     _init_i2c_lcd_5v:	
  6417                           
  6418                           ;incstack = 0
  6419                           ; Regs used in _init_i2c_lcd_5v: [wreg+status,2+status,0+pclath+cstack]
  6420                           ;init_i2c_lcd_5v@contrast stored from wreg
  6421  0B9C  00F4               	movwf	init_i2c_lcd_5v@contrast
  6422                           
  6423                           ;Multi_RX_testjig_v2.c: 1213: i2c_Start();
  6424  0B9D  23E0  3188         	fcall	_i2c_Start
  6425                           
  6426                           ;Multi_RX_testjig_v2.c: 1214: i2c_Write(0x7C);
  6427  0B9F  307C               	movlw	124
  6428  0BA0  23D4  3188         	fcall	_i2c_Write
  6429                           
  6430                           ;Multi_RX_testjig_v2.c: 1215: i2c_Write(0x00);
  6431  0BA2  3000               	movlw	0
  6432  0BA3  23D4  3188         	fcall	_i2c_Write
  6433                           
  6434                           ;Multi_RX_testjig_v2.c: 1216: i2c_Write(0x39);
  6435  0BA5  3039               	movlw	57
  6436  0BA6  23D4  3188         	fcall	_i2c_Write
  6437                           
  6438                           ;Multi_RX_testjig_v2.c: 1217: i2c_Write(0x1C);
  6439  0BA8  301C               	movlw	28
  6440  0BA9  23D4  3188         	fcall	_i2c_Write
  6441                           
  6442                           ;Multi_RX_testjig_v2.c: 1218: i2c_Write(0x70 | contrast);
  6443  0BAB  0874               	movf	init_i2c_lcd_5v@contrast,w
  6444  0BAC  3870               	iorlw	112
  6445  0BAD  23D4  3188         	fcall	_i2c_Write
  6446                           
  6447                           ;Multi_RX_testjig_v2.c: 1219: i2c_Write(0x50);
  6448  0BAF  3050               	movlw	80
  6449  0BB0  23D4  3188         	fcall	_i2c_Write
  6450                           
  6451                           ;Multi_RX_testjig_v2.c: 1220: i2c_Write(0x6C);
  6452  0BB2  306C               	movlw	108
  6453  0BB3  23D4  3188         	fcall	_i2c_Write
  6454                           
  6455                           ;Multi_RX_testjig_v2.c: 1221: if(single1_double2 == 1)
  6456  0BB5  0B71               	decfsz	init_i2c_lcd_5v@single1_double2,w
  6457  0BB6  2BBA               	goto	l3776
  6458                           
  6459                           ;Multi_RX_testjig_v2.c: 1222: i2c_Write(0x38);
  6460  0BB7  3038               	movlw	56
  6461  0BB8  23D4  3188         	fcall	_i2c_Write
  6462  0BBA                     l3776:	
  6463                           
  6464                           ;Multi_RX_testjig_v2.c: 1223: if(single1_double2 == 2)
  6465  0BBA  3002               	movlw	2
  6466  0BBB  0671               	xorwf	init_i2c_lcd_5v@single1_double2,w
  6467  0BBC  1D03               	btfss	3,2
  6468  0BBD  2BC1               	goto	l547
  6469                           
  6470                           ;Multi_RX_testjig_v2.c: 1224: i2c_Write(0x34);
  6471  0BBE  3034               	movlw	52
  6472  0BBF  23D4  3188         	fcall	_i2c_Write
  6473  0BC1                     l547:	
  6474                           
  6475                           ;Multi_RX_testjig_v2.c: 1225: i2c_Write(0x0C);
  6476  0BC1  300C               	movlw	12
  6477  0BC2  23D4  3188         	fcall	_i2c_Write
  6478                           
  6479                           ;Multi_RX_testjig_v2.c: 1226: i2c_Write(0x06);
  6480  0BC4  3006               	movlw	6
  6481  0BC5  23D4  3188         	fcall	_i2c_Write
  6482                           
  6483                           ;Multi_RX_testjig_v2.c: 1227: i2c_Write(0x01);
  6484  0BC7  3001               	movlw	1
  6485  0BC8  23D4  3188         	fcall	_i2c_Write
  6486                           
  6487                           ;Multi_RX_testjig_v2.c: 1228: _delay((unsigned long)((2)*(16000000/4000.0)));
  6488  0BCA  300B               	movlw	11
  6489  0BCB  00F3               	movwf	??_init_i2c_lcd_5v+1
  6490  0BCC  3062               	movlw	98
  6491  0BCD  00F2               	movwf	??_init_i2c_lcd_5v
  6492  0BCE                     u6237:	
  6493  0BCE  0BF2               	decfsz	??_init_i2c_lcd_5v,f
  6494  0BCF  2BCE               	goto	u6237
  6495  0BD0  0BF3               	decfsz	??_init_i2c_lcd_5v+1,f
  6496  0BD1  2BCE               	goto	u6237
  6497  0BD2  0000               	nop
  6498                           
  6499                           ;Multi_RX_testjig_v2.c: 1229: i2c_Stop();
  6500  0BD3  2BE5               	ljmp	l3066
  6501  0BD4                     __end_of_init_i2c_lcd_5v:	
  6502  0BD4                     __ptext30:	
  6503 ;; *************** function _i2c_Write *****************
  6504 ;; Defined at:
  6505 ;;		line 1173 in file "Multi_RX_testjig_v2.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  data            1    wreg     unsigned char 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  data            1    0[COMMON] unsigned char 
  6510 ;; Return value:  Size  Location     Type
  6511 ;;		None               void
  6512 ;; Registers used:
  6513 ;;		wreg, status,2
  6514 ;; Tracked objects:
  6515 ;;		On entry : 1F/4
  6516 ;;		On exit  : 1F/4
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6523 ;;Total ram usage:        1 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    1
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_i2c_Write_string
  6530 ;;		_i2c_write_char
  6531 ;;		_init_i2c_lcd_5v
  6532 ;;		_clear_lcd
  6533 ;;		_i2c_first_line
  6534 ;;		_i2c_second_line
  6535 ;;		_lcd_set_cursor
  6536 ;;		_digitalpot
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           
  6541                           ;psect for function _i2c_Write
  6542  0BD4                     _i2c_Write:	
  6543                           
  6544                           ;incstack = 0
  6545                           ; Regs used in _i2c_Write: [wreg+status,2]
  6546                           ;i2c_Write@data stored from wreg
  6547  0BD4  00F0               	movwf	i2c_Write@data
  6548                           
  6549                           ;Multi_RX_testjig_v2.c: 1175: SSP1BUF = data;
  6550  0BD5  0870               	movf	i2c_Write@data,w
  6551  0BD6  0091               	movwf	17	;volatile
  6552  0BD7                     l522:	
  6553                           ;Multi_RX_testjig_v2.c: 1176: while(SSP1STATbits.BF == 1);
  6554                           
  6555  0BD7  1814               	btfsc	20,0	;volatile
  6556  0BD8  2BD7               	goto	l522
  6557  0BD9                     l3062:	
  6558  0BD9  0816               	movf	22,w	;volatile
  6559  0BDA  391F               	andlw	31
  6560  0BDB  1D03               	btfss	3,2
  6561  0BDC  2BD9               	goto	l3062
  6562  0BDD  1D14               	btfss	20,2	;volatile
  6563  0BDE  0008               	return
  6564  0BDF  2BD9               	goto	l3062
  6565  0BE0                     __end_of_i2c_Write:	
  6566  0BE0                     __ptext32:	
  6567 ;; *************** function _i2c_Start *****************
  6568 ;; Defined at:
  6569 ;;		line 1164 in file "Multi_RX_testjig_v2.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;		None
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;		None
  6574 ;; Return value:  Size  Location     Type
  6575 ;;		None               void
  6576 ;; Registers used:
  6577 ;;		None
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/4
  6580 ;;		On exit  : 1F/4
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6587 ;;Total ram usage:        0 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; Hardware stack levels required when called:    1
  6590 ;; This function calls:
  6591 ;;		Nothing
  6592 ;; This function is called by:
  6593 ;;		_i2c_Write_string
  6594 ;;		_i2c_write_char
  6595 ;;		_init_i2c_lcd_5v
  6596 ;;		_clear_lcd
  6597 ;;		_i2c_first_line
  6598 ;;		_i2c_second_line
  6599 ;;		_lcd_set_cursor
  6600 ;;		_digitalpot
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           
  6605                           ;psect for function _i2c_Start
  6606  0BE0                     _i2c_Start:	
  6607                           
  6608                           ;Multi_RX_testjig_v2.c: 1167: SSP1CON2bits.SEN = 1;
  6609                           
  6610                           ;incstack = 0
  6611                           ; Regs used in _i2c_Start: []
  6612  0BE0  0024               	movlb	4	; select bank4
  6613  0BE1  1416               	bsf	22,0	;volatile
  6614  0BE2                     l516:	
  6615                           ;Multi_RX_testjig_v2.c: 1169: while(SSP1CON2bits.SEN == 1);
  6616                           
  6617  0BE2  1C16               	btfss	22,0	;volatile
  6618  0BE3  0008               	return
  6619  0BE4  2BE2               	goto	l516
  6620  0BE5                     __end_of_i2c_Start:	
  6621  0BE5                     __ptext31:	
  6622 ;; *************** function _i2c_Stop *****************
  6623 ;; Defined at:
  6624 ;;		line 1180 in file "Multi_RX_testjig_v2.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;		None
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;		None
  6629 ;; Return value:  Size  Location     Type
  6630 ;;		None               void
  6631 ;; Registers used:
  6632 ;;		None
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/4
  6635 ;;		On exit  : 1F/4
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6642 ;;Total ram usage:        0 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:    1
  6645 ;; This function calls:
  6646 ;;		Nothing
  6647 ;; This function is called by:
  6648 ;;		_i2c_Write_string
  6649 ;;		_i2c_write_char
  6650 ;;		_init_i2c_lcd_5v
  6651 ;;		_clear_lcd
  6652 ;;		_i2c_first_line
  6653 ;;		_i2c_second_line
  6654 ;;		_lcd_set_cursor
  6655 ;;		_digitalpot
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           
  6660                           ;psect for function _i2c_Stop
  6661  0BE5                     _i2c_Stop:	
  6662  0BE5                     l3066:	
  6663                           ;incstack = 0
  6664                           ; Regs used in _i2c_Stop: []
  6665                           
  6666                           
  6667                           ;Multi_RX_testjig_v2.c: 1182: SSP1CON2bits.PEN = 1;
  6668  0BE5  0024               	movlb	4	; select bank4
  6669  0BE6  1516               	bsf	22,2	;volatile
  6670  0BE7                     l531:	
  6671                           ;Multi_RX_testjig_v2.c: 1183: while(SSP1CON2bits.PEN == 1);
  6672                           
  6673  0BE7  1D16               	btfss	22,2	;volatile
  6674  0BE8  0008               	return
  6675  0BE9  2BE7               	goto	l531
  6676  0BEA                     __end_of_i2c_Stop:	
  6677  0BEA                     __ptext10:	
  6678 ;; *************** function _buzz_one *****************
  6679 ;; Defined at:
  6680 ;;		line 1154 in file "Multi_RX_testjig_v2.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  time            2    0[COMMON] unsigned int 
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;		None
  6685 ;; Return value:  Size  Location     Type
  6686 ;;		None               void
  6687 ;; Registers used:
  6688 ;;		wreg
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 1F/2
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6698 ;;Total ram usage:        2 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; Hardware stack levels required when called:    1
  6701 ;; This function calls:
  6702 ;;		Nothing
  6703 ;; This function is called by:
  6704 ;;		_main
  6705 ;;		_testjig_done
  6706 ;;		_print_error
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           
  6711                           ;psect for function _buzz_one
  6712  0BEA                     _buzz_one:	
  6713                           
  6714                           ;Multi_RX_testjig_v2.c: 1156: buzz_timer = time;
  6715                           
  6716                           ;incstack = 0
  6717                           ; Regs used in _buzz_one: [wreg]
  6718  0BEA  0871               	movf	buzz_one@time+1,w
  6719  0BEB  0021               	movlb	1	; select bank1
  6720  0BEC  00B2               	movwf	(_buzz_timer+1)^(0+128)	;volatile
  6721  0BED  0870               	movf	buzz_one@time,w
  6722  0BEE  00B1               	movwf	_buzz_timer^(0+128)	;volatile
  6723                           
  6724                           ;Multi_RX_testjig_v2.c: 1157: LATC5 = 1;
  6725  0BEF  0022               	movlb	2	; select bank2
  6726  0BF0  168E               	bsf	14,5	;volatile
  6727  0BF1  0008               	return
  6728  0BF2                     __end_of_buzz_one:	
  6729  0BF2                     __ptext8:	
  6730 ;; *************** function _power_supply_set *****************
  6731 ;; Defined at:
  6732 ;;		line 2030 in file "Multi_RX_testjig_v2.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  supply          1    wreg     unsigned char 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  supply          1    0[COMMON] unsigned char 
  6737 ;; Return value:  Size  Location     Type
  6738 ;;		None               void
  6739 ;; Registers used:
  6740 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/4
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6747 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6749 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6750 ;;Total ram usage:        1 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; Hardware stack levels required when called:    1
  6753 ;; This function calls:
  6754 ;;		Nothing
  6755 ;; This function is called by:
  6756 ;;		_main
  6757 ;;		_testjig_done
  6758 ;;		_print_error
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761                           
  6762                           
  6763                           ;psect for function _power_supply_set
  6764  0BF2                     _power_supply_set:	
  6765                           
  6766                           ;incstack = 0
  6767                           ; Regs used in _power_supply_set: [wreg-fsr0h+status,2+status,0]
  6768                           ;power_supply_set@supply stored from wreg
  6769  0BF2  00F0               	movwf	power_supply_set@supply
  6770                           
  6771                           ;Multi_RX_testjig_v2.c: 2032: switch(supply)
  6772  0BF3  2C08               	goto	l3258
  6773  0BF4                     l694:	
  6774                           ;Multi_RX_testjig_v2.c: 2033: {
  6775                           ;Multi_RX_testjig_v2.c: 2034: case 0:
  6776                           
  6777                           
  6778                           ;Multi_RX_testjig_v2.c: 2035: LATD4 = 1;
  6779  0BF4  0022               	movlb	2	; select bank2
  6780  0BF5  160F               	bsf	15,4	;volatile
  6781                           
  6782                           ;Multi_RX_testjig_v2.c: 2036: LATD5 = 1;
  6783  0BF6  168F               	bsf	15,5	;volatile
  6784                           
  6785                           ;Multi_RX_testjig_v2.c: 2037: LATD6 = 1;
  6786  0BF7  170F               	bsf	15,6	;volatile
  6787                           
  6788                           ;Multi_RX_testjig_v2.c: 2038: break;
  6789  0BF8  0008               	return
  6790  0BF9                     l696:	
  6791                           ;Multi_RX_testjig_v2.c: 2039: case 1:
  6792                           
  6793                           
  6794                           ;Multi_RX_testjig_v2.c: 2040: LATD4 = 1;
  6795  0BF9  0022               	movlb	2	; select bank2
  6796  0BFA  160F               	bsf	15,4	;volatile
  6797                           
  6798                           ;Multi_RX_testjig_v2.c: 2041: LATD5 = 0;
  6799  0BFB  128F               	bcf	15,5	;volatile
  6800                           
  6801                           ;Multi_RX_testjig_v2.c: 2042: LATD6 = 1;
  6802  0BFC  170F               	bsf	15,6	;volatile
  6803                           
  6804                           ;Multi_RX_testjig_v2.c: 2043: break;
  6805  0BFD  0008               	return
  6806  0BFE                     l697:	
  6807                           ;Multi_RX_testjig_v2.c: 2044: case 2:
  6808                           
  6809                           
  6810                           ;Multi_RX_testjig_v2.c: 2045: LATD4 = 0;
  6811  0BFE  0022               	movlb	2	; select bank2
  6812  0BFF  120F               	bcf	15,4	;volatile
  6813                           
  6814                           ;Multi_RX_testjig_v2.c: 2046: LATD5 = 0;
  6815  0C00  128F               	bcf	15,5	;volatile
  6816                           
  6817                           ;Multi_RX_testjig_v2.c: 2047: LATD6 = 0;
  6818  0C01  130F               	bcf	15,6	;volatile
  6819                           
  6820                           ;Multi_RX_testjig_v2.c: 2048: break;
  6821  0C02  0008               	return
  6822  0C03                     l698:	
  6823                           ;Multi_RX_testjig_v2.c: 2049: case 3:
  6824                           
  6825                           
  6826                           ;Multi_RX_testjig_v2.c: 2050: LATD4 = 0;
  6827  0C03  0022               	movlb	2	; select bank2
  6828  0C04  120F               	bcf	15,4	;volatile
  6829                           
  6830                           ;Multi_RX_testjig_v2.c: 2051: LATD5 = 0;
  6831  0C05  128F               	bcf	15,5	;volatile
  6832                           
  6833                           ;Multi_RX_testjig_v2.c: 2052: LATD6 = 1;
  6834  0C06  170F               	bsf	15,6	;volatile
  6835                           
  6836                           ;Multi_RX_testjig_v2.c: 2053: break;
  6837  0C07  0008               	return
  6838  0C08                     l3258:	
  6839  0C08  0870               	movf	power_supply_set@supply,w
  6840                           
  6841                           ; Switch size 1, requested type "speed"
  6842                           ; Number of cases is 4, Range of values is 0 to 3
  6843                           ; switch strategies available:
  6844                           ; Name         Instructions Cycles
  6845                           ; direct_byte           14     6 (fixed)
  6846                           ; simple_byte           13     7 (average)
  6847                           ; jumptable            260     6 (fixed)
  6848                           ;	Chosen strategy is direct_byte
  6849  0C09  0084               	movwf	4
  6850  0C0A  3004               	movlw	4
  6851  0C0B  0204               	subwf	4,w
  6852  0C0C  1803               	skipnc
  6853  0C0D  0008               	return
  6854  0C0E  3193               	movlp	high S4932
  6855  0C0F  3504               	lslf	4,w
  6856  0C10  3EE8               	addlw	low S4932
  6857  0C11  0082               	movwf	2
  6858  0C12  0008               	return
  6859  0C13                     __end_of_power_supply_set:	
  6860                           
  6861                           	psect	swtext2
  6862  07D8                     __pswtext2:	
  6863  07D8                     S4936:	
  6864  07D8  3188  28AB         	ljmp	l3910
  6865  07DA  3188  28AD         	ljmp	l3912
  6866  07DC  3188  28AF         	ljmp	l3914
  6867  07DE  3188  28B1         	ljmp	l3916
  6868  07E0  3188  28B3         	ljmp	l3918
  6869  07E2  3188  28B5         	ljmp	l3920
  6870  07E4  3188  28B7         	ljmp	l3922
  6871  07E6  3188  28B9         	ljmp	l3924
  6872  07E8  3188  28BB         	ljmp	l3926
  6873  07EA  3188  28BD         	ljmp	l3928
  6874  07EC  3188  28BF         	ljmp	l3930
  6875  07EE  3188  28C1         	ljmp	l3932
  6876  07F0  3188  28C3         	ljmp	l3934
  6877  07F2  3188  28CA         	ljmp	l724
  6878  07F4  3188  28C5         	ljmp	l3936
  6879  07F6  3188  28CA         	ljmp	l724
  6880  07F8  3188  28CA         	ljmp	l724
  6881  07FA  3188  28CA         	ljmp	l724
  6882  07FC  3188  28CA         	ljmp	l724
  6883  07FE  3188  28C7         	ljmp	l3938
  6884                           
  6885                           	psect	text33
  6886  082E                     __ptext33:	
  6887 ;; *************** function _TX_one *****************
  6888 ;; Defined at:
  6889 ;;		line 2186 in file "Multi_RX_testjig_v2.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;  data            1    wreg     unsigned char 
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;  data            1    1[COMMON] unsigned char 
  6894 ;;  i               1    2[COMMON] unsigned char 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;		None               void
  6897 ;; Registers used:
  6898 ;;		wreg, status,2, status,0
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6905 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6906 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6907 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6908 ;;Total ram usage:        3 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    1
  6911 ;; This function calls:
  6912 ;;		Nothing
  6913 ;; This function is called by:
  6914 ;;		_main
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           
  6919                           ;psect for function _TX_one
  6920  082E                     _TX_one:	
  6921                           
  6922                           ;incstack = 0
  6923                           ; Regs used in _TX_one: [wreg+status,2+status,0]
  6924                           ;TX_one@data stored from wreg
  6925  082E  00F1               	movwf	TX_one@data
  6926                           
  6927                           ;Multi_RX_testjig_v2.c: 2188: TRISG0 = 0;
  6928  082F  0026               	movlb	6	; select bank6
  6929  0830  100D               	bcf	13,0	;volatile
  6930                           
  6931                           ;Multi_RX_testjig_v2.c: 2189: GIE = 0;
  6932  0831  138B               	bcf	11,7	;volatile
  6933                           
  6934                           ;Multi_RX_testjig_v2.c: 2190: LATG0 = 0;
  6935  0832  0027               	movlb	7	; select bank7
  6936  0833  100D               	bcf	13,0	;volatile
  6937                           
  6938                           ;Multi_RX_testjig_v2.c: 2191: _delay((unsigned long)((105)*(16000000/4000000.0)));
  6939  0834  308B               	movlw	139
  6940  0835  00F0               	movwf	??_TX_one
  6941  0836                     u6267:	
  6942  0836  0BF0               	decfsz	??_TX_one,f
  6943  0837  2836               	goto	u6267
  6944  0838  3200               	nop2	;nop
  6945                           
  6946                           ;Multi_RX_testjig_v2.c: 2193: unsigned char i;
  6947                           ;Multi_RX_testjig_v2.c: 2194: for(i = 0; i < 8; i++)
  6948  0839  01F2               	clrf	TX_one@i
  6949  083A                     l736:	
  6950                           
  6951                           ;Multi_RX_testjig_v2.c: 2195: {
  6952                           ;Multi_RX_testjig_v2.c: 2196: LATG0 = data & 0x01;
  6953  083A  1C71               	btfss	TX_one@data,0
  6954  083B  283F               	goto	u4330
  6955  083C  0027               	movlb	7	; select bank7
  6956  083D  140D               	bsf	13,0	;volatile
  6957  083E  2841               	goto	u4344
  6958  083F                     u4330:	
  6959  083F  0027               	movlb	7	; select bank7
  6960  0840  100D               	bcf	13,0	;volatile
  6961  0841                     u4344:	
  6962  0841  308B               	movlw	139
  6963                           
  6964                           ;Multi_RX_testjig_v2.c: 2197: data = data >> 1;
  6965  0842  36F1               	lsrf	TX_one@data,f
  6966                           
  6967                           ;Multi_RX_testjig_v2.c: 2198: _delay((unsigned long)((105)*(16000000/4000000.0)));
  6968  0843  00F0               	movwf	??_TX_one
  6969  0844                     u6277:	
  6970  0844  0BF0               	decfsz	??_TX_one,f
  6971  0845  2844               	goto	u6277
  6972  0846  3200               	nop2	;nop
  6973  0847  3008               	movlw	8
  6974  0848  0AF2               	incf	TX_one@i,f
  6975  0849  0272               	subwf	TX_one@i,w
  6976  084A  1C03               	skipc
  6977  084B  283A               	goto	l736
  6978                           
  6979                           ;Multi_RX_testjig_v2.c: 2199: }
  6980                           ;Multi_RX_testjig_v2.c: 2200: LATG0 = 1;
  6981  084C  0027               	movlb	7	; select bank7
  6982  084D  140D               	bsf	13,0	;volatile
  6983                           
  6984                           ;Multi_RX_testjig_v2.c: 2201: GIE = 1;
  6985  084E  178B               	bsf	11,7	;volatile
  6986                           
  6987                           ;Multi_RX_testjig_v2.c: 2202: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6988  084F  3085               	movlw	133
  6989  0850  00F0               	movwf	??_TX_one
  6990  0851                     u6287:	
  6991  0851  0BF0               	decfsz	??_TX_one,f
  6992  0852  2851               	goto	u6287
  6993  0853  0008               	return
  6994  0854                     __end_of_TX_one:	
  6995                           
  6996                           	psect	text34
  6997  087B                     __ptext34:	
  6998 ;; *************** function _RX_one_timeout *****************
  6999 ;; Defined at:
  7000 ;;		line 2229 in file "Multi_RX_testjig_v2.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;		None
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;  data            1    2[COMMON] unsigned char 
  7005 ;;  i               1    1[COMMON] unsigned char 
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  1    wreg      unsigned char 
  7008 ;; Registers used:
  7009 ;;		wreg, status,2, status,0
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7016 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7018 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7019 ;;Total ram usage:        3 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; Hardware stack levels required when called:    1
  7022 ;; This function calls:
  7023 ;;		Nothing
  7024 ;; This function is called by:
  7025 ;;		_main
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           
  7030                           ;psect for function _RX_one_timeout
  7031  087B                     _RX_one_timeout:	
  7032                           
  7033                           ;Multi_RX_testjig_v2.c: 2232: uart_receive_timer = 500;
  7034                           
  7035                           ;incstack = 0
  7036                           ; Regs used in _RX_one_timeout: [wreg+status,2+status,0]
  7037  087B  30F4               	movlw	244
  7038  087C  0021               	movlb	1	; select bank1
  7039  087D  00AE               	movwf	_uart_receive_timer^(0+128)	;volatile
  7040  087E  3001               	movlw	1
  7041  087F  00AF               	movwf	(_uart_receive_timer^(0+128)+1)	;volatile
  7042  0880  2886               	goto	l751
  7043  0881                     l4052:	
  7044  0881  0021               	movlb	1	; select bank1
  7045  0882  082E               	movf	_uart_receive_timer^(0+128),w	;volatile
  7046  0883  042F               	iorwf	(_uart_receive_timer+1)^(0+128),w	;volatile
  7047  0884  1903               	btfsc	3,2
  7048  0885  2889               	goto	l4054
  7049  0886                     l751:	
  7050                           ;Multi_RX_testjig_v2.c: 2233: while(RG3 == 1 && uart_receive_timer);
  7051                           
  7052  0886  0025               	movlb	5	; select bank5
  7053  0887  198D               	btfsc	13,3	;volatile
  7054  0888  2881               	goto	l4052
  7055  0889                     l4054:	
  7056                           
  7057                           ;Multi_RX_testjig_v2.c: 2234: _delay((unsigned long)((150)*(16000000/4000000.0)));
  7058  0889  30C7               	movlw	199
  7059  088A  00F0               	movwf	??_RX_one_timeout
  7060  088B                     u6297:	
  7061  088B  0BF0               	decfsz	??_RX_one_timeout,f
  7062  088C  288B               	goto	u6297
  7063  088D  3200               	nop2	;nop
  7064                           
  7065                           ;Multi_RX_testjig_v2.c: 2235: unsigned char i;
  7066                           ;Multi_RX_testjig_v2.c: 2236: unsigned char data = 0;
  7067  088E  01F2               	clrf	RX_one_timeout@data
  7068                           
  7069                           ;Multi_RX_testjig_v2.c: 2237: for(i = 0; i < 8; i++)
  7070  088F  01F1               	clrf	RX_one_timeout@i
  7071  0890                     l756:	
  7072                           
  7073                           ;Multi_RX_testjig_v2.c: 2238: {
  7074                           ;Multi_RX_testjig_v2.c: 2239: LATF4 = 1;
  7075  0890  0027               	movlb	7	; select bank7
  7076  0891  160C               	bsf	12,4	;volatile
  7077                           
  7078                           ;Multi_RX_testjig_v2.c: 2240: if(RG3 == 0)
  7079  0892  0025               	movlb	5	; select bank5
  7080  0893  198D               	btfsc	13,3	;volatile
  7081  0894  2897               	goto	l758
  7082                           
  7083                           ;Multi_RX_testjig_v2.c: 2241: data = data >> 1;
  7084  0895  36F2               	lsrf	RX_one_timeout@data,f
  7085  0896  2899               	goto	l759
  7086  0897                     l758:	
  7087                           
  7088                           ;Multi_RX_testjig_v2.c: 2242: else
  7089                           ;Multi_RX_testjig_v2.c: 2243: data = (data >> 1) | 0x80;
  7090  0897  1403               	setc
  7091  0898  0CF2               	rrf	RX_one_timeout@data,f
  7092  0899                     l759:	
  7093                           
  7094                           ;Multi_RX_testjig_v2.c: 2244: LATF4 = 0;
  7095  0899  0027               	movlb	7	; select bank7
  7096  089A  120C               	bcf	12,4	;volatile
  7097                           
  7098                           ;Multi_RX_testjig_v2.c: 2245: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7099  089B  3085               	movlw	133
  7100  089C  00F0               	movwf	??_RX_one_timeout
  7101  089D                     u6307:	
  7102  089D  0BF0               	decfsz	??_RX_one_timeout,f
  7103  089E  289D               	goto	u6307
  7104  089F  3008               	movlw	8
  7105  08A0  0AF1               	incf	RX_one_timeout@i,f
  7106  08A1  0271               	subwf	RX_one_timeout@i,w
  7107  08A2  1C03               	skipc
  7108  08A3  2890               	goto	l756
  7109                           
  7110                           ;Multi_RX_testjig_v2.c: 2246: }
  7111                           ;Multi_RX_testjig_v2.c: 2247: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7112  08A4  3085               	movlw	133
  7113  08A5  00F0               	movwf	??_RX_one_timeout
  7114  08A6                     u6317:	
  7115  08A6  0BF0               	decfsz	??_RX_one_timeout,f
  7116  08A7  28A6               	goto	u6317
  7117                           
  7118                           ;Multi_RX_testjig_v2.c: 2249: return data;
  7119  08A8  0872               	movf	RX_one_timeout@data,w
  7120  08A9  0008               	return
  7121  08AA                     __end_of_RX_one_timeout:	
  7122                           
  7123                           	psect	text35
  7124  0854                     __ptext35:	
  7125 ;; *************** function _RX_one *****************
  7126 ;; Defined at:
  7127 ;;		line 2205 in file "Multi_RX_testjig_v2.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;		None
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;  data            1    2[COMMON] unsigned char 
  7132 ;;  i               1    1[COMMON] unsigned char 
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  1    wreg      unsigned char 
  7135 ;; Registers used:
  7136 ;;		wreg, status,2, status,0
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/4
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7143 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7144 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7145 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7146 ;;Total ram usage:        3 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; Hardware stack levels required when called:    1
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_main
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           
  7157                           ;psect for function _RX_one
  7158  0854                     _RX_one:	
  7159  0854                     l741:	
  7160                           ;Multi_RX_testjig_v2.c: 2208: while(RG3 == 1);
  7161                           
  7162                           ;incstack = 0
  7163                           ; Regs used in _RX_one: [wreg+status,2+status,0]
  7164                           
  7165  0854  0025               	movlb	5	; select bank5
  7166  0855  198D               	btfsc	13,3	;volatile
  7167  0856  2854               	goto	l741
  7168                           
  7169                           ;Multi_RX_testjig_v2.c: 2209: GIE = 0;
  7170  0857  138B               	bcf	11,7	;volatile
  7171                           
  7172                           ;Multi_RX_testjig_v2.c: 2210: _delay((unsigned long)((150)*(16000000/4000000.0)));
  7173  0858  30C7               	movlw	199
  7174  0859  00F0               	movwf	??_RX_one
  7175  085A                     u6327:	
  7176  085A  0BF0               	decfsz	??_RX_one,f
  7177  085B  285A               	goto	u6327
  7178  085C  3200               	nop2	;nop
  7179                           
  7180                           ;Multi_RX_testjig_v2.c: 2211: unsigned char i;
  7181                           ;Multi_RX_testjig_v2.c: 2212: unsigned char data = 0;
  7182  085D  01F2               	clrf	RX_one@data
  7183                           
  7184                           ;Multi_RX_testjig_v2.c: 2213: for(i = 0; i < 8; i++)
  7185  085E  01F1               	clrf	RX_one@i
  7186  085F                     l744:	
  7187                           
  7188                           ;Multi_RX_testjig_v2.c: 2214: {
  7189                           ;Multi_RX_testjig_v2.c: 2215: LATF4 = 1;
  7190  085F  0027               	movlb	7	; select bank7
  7191  0860  160C               	bsf	12,4	;volatile
  7192                           
  7193                           ;Multi_RX_testjig_v2.c: 2216: if(RG3 == 0)
  7194  0861  0025               	movlb	5	; select bank5
  7195  0862  198D               	btfsc	13,3	;volatile
  7196  0863  2866               	goto	l746
  7197                           
  7198                           ;Multi_RX_testjig_v2.c: 2217: data = data >> 1;
  7199  0864  36F2               	lsrf	RX_one@data,f
  7200  0865  2868               	goto	l747
  7201  0866                     l746:	
  7202                           
  7203                           ;Multi_RX_testjig_v2.c: 2218: else
  7204                           ;Multi_RX_testjig_v2.c: 2219: data = (data >> 1) | 0x80;
  7205  0866  1403               	setc
  7206  0867  0CF2               	rrf	RX_one@data,f
  7207  0868                     l747:	
  7208                           
  7209                           ;Multi_RX_testjig_v2.c: 2220: LATF4 = 0;
  7210  0868  0027               	movlb	7	; select bank7
  7211  0869  120C               	bcf	12,4	;volatile
  7212                           
  7213                           ;Multi_RX_testjig_v2.c: 2221: _delay((unsigned long)((105)*(16000000/4000000.0)));
  7214  086A  308B               	movlw	139
  7215  086B  00F0               	movwf	??_RX_one
  7216  086C                     u6337:	
  7217  086C  0BF0               	decfsz	??_RX_one,f
  7218  086D  286C               	goto	u6337
  7219  086E  3200               	nop2	;nop
  7220  086F  3008               	movlw	8
  7221  0870  0AF1               	incf	RX_one@i,f
  7222  0871  0271               	subwf	RX_one@i,w
  7223  0872  1C03               	skipc
  7224  0873  285F               	goto	l744
  7225                           
  7226                           ;Multi_RX_testjig_v2.c: 2222: }
  7227                           ;Multi_RX_testjig_v2.c: 2223: GIE = 1;
  7228  0874  178B               	bsf	11,7	;volatile
  7229                           
  7230                           ;Multi_RX_testjig_v2.c: 2224: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7231  0875  3085               	movlw	133
  7232  0876  00F0               	movwf	??_RX_one
  7233  0877                     u6347:	
  7234  0877  0BF0               	decfsz	??_RX_one,f
  7235  0878  2877               	goto	u6347
  7236                           
  7237                           ;Multi_RX_testjig_v2.c: 2226: return data;
  7238  0879  0872               	movf	RX_one@data,w
  7239  087A  0008               	return
  7240  087B                     __end_of_RX_one:	
  7241                           
  7242                           	psect	intentry
  7243  0004                     __pintentry:	
  7244 ;; *************** function _isr *****************
  7245 ;; Defined at:
  7246 ;;		line 323 in file "Multi_RX_testjig_v2.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;		None
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;		None
  7251 ;; Return value:  Size  Location     Type
  7252 ;;		None               void
  7253 ;; Registers used:
  7254 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7255 ;; Tracked objects:
  7256 ;;		On entry : 0/0
  7257 ;;		On exit  : 1F/0
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7264 ;;Total ram usage:        0 bytes
  7265 ;; Hardware stack levels used:    1
  7266 ;; This function calls:
  7267 ;;		Nothing
  7268 ;; This function is called by:
  7269 ;;		Interrupt level 1
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273  0004                     _isr:	
  7274                           
  7275                           ;incstack = 0
  7276                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  7277  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7278  0005  3180               	pagesel	$
  7279                           
  7280                           ;Multi_RX_testjig_v2.c: 325: if(INTCONbits.TMR0IF == 1)
  7281  0006  1D0B               	btfss	11,2	;volatile
  7282  0007  2825               	goto	i1l4110
  7283                           
  7284                           ;Multi_RX_testjig_v2.c: 326: {
  7285                           ;Multi_RX_testjig_v2.c: 328: if(testjig_timer)
  7286  0008  0020               	movlb	0	; select bank0
  7287  0009  0869               	movf	_testjig_timer,w	;volatile
  7288  000A  046A               	iorwf	_testjig_timer+1,w	;volatile
  7289  000B  1903               	btfsc	3,2
  7290  000C  2812               	goto	i1l274
  7291                           
  7292                           ;Multi_RX_testjig_v2.c: 329: testjig_timer--;
  7293  000D  3001               	movlw	1
  7294  000E  02E9               	subwf	_testjig_timer,f	;volatile
  7295  000F  3000               	movlw	0
  7296  0010  3BEA               	subwfb	_testjig_timer+1,f	;volatile
  7297  0011  2813               	goto	i1l4102
  7298  0012                     i1l274:	
  7299                           
  7300                           ;Multi_RX_testjig_v2.c: 330: else
  7301                           ;Multi_RX_testjig_v2.c: 331: RE0 = 0;
  7302  0012  1010               	bcf	16,0	;volatile
  7303  0013                     i1l4102:	
  7304                           
  7305                           ;Multi_RX_testjig_v2.c: 332: if(uart_receive_timer)
  7306  0013  0021               	movlb	1	; select bank1
  7307  0014  082E               	movf	_uart_receive_timer^(0+128),w	;volatile
  7308  0015  042F               	iorwf	(_uart_receive_timer+1)^(0+128),w	;volatile
  7309  0016  1903               	btfsc	3,2
  7310  0017  281C               	goto	i1l276
  7311                           
  7312                           ;Multi_RX_testjig_v2.c: 333: uart_receive_timer--;
  7313  0018  30FF               	movlw	-1
  7314  0019  07AE               	addwf	_uart_receive_timer^(0+128),f	;volatile
  7315  001A  1C03               	skipc
  7316  001B  03AF               	decf	(_uart_receive_timer+1)^(0+128),f	;volatile
  7317  001C                     i1l276:	
  7318                           
  7319                           ;Multi_RX_testjig_v2.c: 334: if(motor_direction_timer)
  7320  001C  0828               	movf	_motor_direction_timer^(0+128),w	;volatile
  7321  001D  0429               	iorwf	(_motor_direction_timer+1)^(0+128),w	;volatile
  7322  001E  1903               	btfsc	3,2
  7323  001F  2824               	goto	i1l4108
  7324                           
  7325                           ;Multi_RX_testjig_v2.c: 335: motor_direction_timer--;
  7326  0020  30FF               	movlw	-1
  7327  0021  07A8               	addwf	_motor_direction_timer^(0+128),f	;volatile
  7328  0022  1C03               	skipc
  7329  0023  03A9               	decf	(_motor_direction_timer+1)^(0+128),f	;volatile
  7330  0024                     i1l4108:	
  7331                           
  7332                           ;Multi_RX_testjig_v2.c: 337: INTCONbits.TMR0IF = 0;
  7333  0024  110B               	bcf	11,2	;volatile
  7334  0025                     i1l4110:	
  7335                           
  7336                           ;Multi_RX_testjig_v2.c: 339: }
  7337                           ;Multi_RX_testjig_v2.c: 340: if(PIR1bits.TMR2IF == 1)
  7338  0025  0020               	movlb	0	; select bank0
  7339  0026  1C91               	btfss	17,1	;volatile
  7340  0027  289E               	goto	i1l300
  7341                           
  7342                           ;Multi_RX_testjig_v2.c: 341: {
  7343                           ;Multi_RX_testjig_v2.c: 343: if(pickit_timer)
  7344  0028  0021               	movlb	1	; select bank1
  7345  0029  082A               	movf	_pickit_timer^(0+128),w	;volatile
  7346  002A  042B               	iorwf	(_pickit_timer+1)^(0+128),w	;volatile
  7347  002B  1903               	btfsc	3,2
  7348  002C  2870               	goto	i1l4142
  7349                           
  7350                           ;Multi_RX_testjig_v2.c: 344: pickit_timer--;
  7351  002D  3001               	movlw	1
  7352  002E  02AA               	subwf	_pickit_timer^(0+128),f	;volatile
  7353  002F  3000               	movlw	0
  7354  0030  3BAB               	subwfb	(_pickit_timer+1)^(0+128),f	;volatile
  7355  0031  287A               	goto	i1l4144
  7356  0032                     i1l282:	
  7357                           ;Multi_RX_testjig_v2.c: 348: {
  7358                           ;Multi_RX_testjig_v2.c: 349: case pickit_start:
  7359                           
  7360                           
  7361                           ;Multi_RX_testjig_v2.c: 350: LATC2 = 1;
  7362  0032  0022               	movlb	2	; select bank2
  7363  0033  150E               	bsf	14,2	;volatile
  7364                           
  7365                           ;Multi_RX_testjig_v2.c: 351: LATC7 = 1;
  7366  0034  178E               	bsf	14,7	;volatile
  7367                           
  7368                           ;Multi_RX_testjig_v2.c: 352: pickit_timer = 10;
  7369  0035  300A               	movlw	10
  7370  0036  0021               	movlb	1	; select bank1
  7371  0037  00AA               	movwf	_pickit_timer^(0+128)	;volatile
  7372  0038  01AB               	clrf	(_pickit_timer+1)^(0+128)	;volatile
  7373                           
  7374                           ;Multi_RX_testjig_v2.c: 353: pickit_state = pickit_push_button;
  7375  0039  3002               	movlw	2
  7376  003A  286E               	goto	L41
  7377  003B                     i1l4118:	
  7378                           ;Multi_RX_testjig_v2.c: 354: break;
  7379                           
  7380                           
  7381                           ;Multi_RX_testjig_v2.c: 356: pickit_timer = 1000;
  7382  003B  30E8               	movlw	232
  7383  003C  00AA               	movwf	_pickit_timer^(0+128)	;volatile
  7384  003D  3003               	movlw	3
  7385  003E  00AB               	movwf	(_pickit_timer^(0+128)+1)	;volatile
  7386                           
  7387                           ;Multi_RX_testjig_v2.c: 357: LATC6 = 1;
  7388  003F  0022               	movlb	2	; select bank2
  7389  0040  170E               	bsf	14,6	;volatile
  7390                           
  7391                           ;Multi_RX_testjig_v2.c: 358: pickit_state = pickit_busy;
  7392  0041  286D               	goto	L42
  7393  0042                     i1l285:	
  7394                           ;Multi_RX_testjig_v2.c: 360: case pickit_busy:
  7395                           
  7396                           ;Multi_RX_testjig_v2.c: 359: break;
  7397                           
  7398                           
  7399                           ;Multi_RX_testjig_v2.c: 361: LATC6 = 0;
  7400  0042  0022               	movlb	2	; select bank2
  7401  0043  130E               	bcf	14,6	;volatile
  7402                           
  7403                           ;Multi_RX_testjig_v2.c: 362: if(RE6 == 0)
  7404  0044  0020               	movlb	0	; select bank0
  7405  0045  1B10               	btfsc	16,6	;volatile
  7406  0046  284F               	goto	i1l4128
  7407                           
  7408                           ;Multi_RX_testjig_v2.c: 363: {
  7409                           ;Multi_RX_testjig_v2.c: 364: pickit_red_counter++;
  7410  0047  0021               	movlb	1	; select bank1
  7411  0048  3065               	movlw	101
  7412  0049  0AB0               	incf	_pickit_red_counter^(0+128),f
  7413                           
  7414                           ;Multi_RX_testjig_v2.c: 365: if(pickit_red_counter > 100)
  7415  004A  0230               	subwf	_pickit_red_counter^(0+128),w
  7416  004B  1C03               	skipc
  7417  004C  2851               	goto	i1l4130
  7418                           
  7419                           ;Multi_RX_testjig_v2.c: 366: pickit_state = pickit_finish;
  7420  004D  01B3               	clrf	_pickit_state^(0+128)
  7421  004E  2851               	goto	i1l4130
  7422  004F                     i1l4128:	
  7423                           
  7424                           ;Multi_RX_testjig_v2.c: 368: else
  7425                           ;Multi_RX_testjig_v2.c: 369: pickit_red_counter = 0;
  7426  004F  0021               	movlb	1	; select bank1
  7427  0050  01B0               	clrf	_pickit_red_counter^(0+128)
  7428  0051                     i1l4130:	
  7429                           
  7430                           ;Multi_RX_testjig_v2.c: 370: if(RE5 == 0)
  7431  0051  0020               	movlb	0	; select bank0
  7432  0052  1A90               	btfsc	16,5	;volatile
  7433  0053  285C               	goto	i1l289
  7434                           
  7435                           ;Multi_RX_testjig_v2.c: 371: {
  7436                           ;Multi_RX_testjig_v2.c: 372: pickit_state = pickit_error;
  7437  0054  3004               	movlw	4
  7438  0055  0021               	movlb	1	; select bank1
  7439  0056  00B3               	movwf	_pickit_state^(0+128)
  7440                           
  7441                           ;Multi_RX_testjig_v2.c: 373: pickit_timer = 1000;
  7442  0057  30E8               	movlw	232
  7443  0058  00AA               	movwf	_pickit_timer^(0+128)	;volatile
  7444  0059  3003               	movlw	3
  7445  005A  00AB               	movwf	(_pickit_timer^(0+128)+1)	;volatile
  7446                           
  7447                           ;Multi_RX_testjig_v2.c: 374: }
  7448  005B  2860               	goto	i1l4136
  7449  005C                     i1l289:	
  7450                           
  7451                           ;Multi_RX_testjig_v2.c: 375: else if(RE4 == 0)
  7452  005C  1A10               	btfsc	16,4	;volatile
  7453  005D  2860               	goto	i1l4136
  7454                           
  7455                           ;Multi_RX_testjig_v2.c: 376: {
  7456                           ;Multi_RX_testjig_v2.c: 377: pickit_state = pickit_finish;
  7457  005E  0021               	movlb	1	; select bank1
  7458  005F  01B3               	clrf	_pickit_state^(0+128)
  7459  0060                     i1l4136:	
  7460                           
  7461                           ;Multi_RX_testjig_v2.c: 378: }
  7462                           ;Multi_RX_testjig_v2.c: 379: pickit_timer = 1;
  7463  0060  3001               	movlw	1
  7464  0061  0021               	movlb	1	; select bank1
  7465  0062  00AA               	movwf	_pickit_timer^(0+128)	;volatile
  7466  0063  01AB               	clrf	(_pickit_timer+1)^(0+128)	;volatile
  7467                           
  7468                           ;Multi_RX_testjig_v2.c: 380: break;
  7469  0064  287A               	goto	i1l4144
  7470  0065                     i1l292:	
  7471                           ;Multi_RX_testjig_v2.c: 381: case pickit_error:
  7472                           
  7473                           
  7474                           ;Multi_RX_testjig_v2.c: 382: LATC2 = 0;
  7475  0065  0022               	movlb	2	; select bank2
  7476  0066  110E               	bcf	14,2	;volatile
  7477                           
  7478                           ;Multi_RX_testjig_v2.c: 383: LATC7 = 0;
  7479  0067  138E               	bcf	14,7	;volatile
  7480                           
  7481                           ;Multi_RX_testjig_v2.c: 384: break;
  7482  0068  287A               	goto	i1l4144
  7483  0069                     i1l293:	
  7484                           ;Multi_RX_testjig_v2.c: 385: case pickit_finish:
  7485                           
  7486                           
  7487                           ;Multi_RX_testjig_v2.c: 386: LATC2 = 0;
  7488  0069  0022               	movlb	2	; select bank2
  7489  006A  110E               	bcf	14,2	;volatile
  7490                           
  7491                           ;Multi_RX_testjig_v2.c: 387: LATC7 = 0;
  7492  006B  138E               	bcf	14,7	;volatile
  7493                           
  7494                           ;Multi_RX_testjig_v2.c: 388: pickit_state = pickit_idle;
  7495  006C  3005               	movlw	5
  7496  006D                     L42:	
  7497  006D  0021               	movlb	1	; select bank1
  7498  006E                     L41:	
  7499  006E  00B3               	movwf	_pickit_state^(0+128)
  7500                           
  7501                           ;Multi_RX_testjig_v2.c: 389: break;
  7502  006F  287A               	goto	i1l4144
  7503  0070                     i1l4142:	
  7504  0070  0833               	movf	_pickit_state^(0+128),w
  7505                           
  7506                           ; Switch size 1, requested type "speed"
  7507                           ; Number of cases is 6, Range of values is 0 to 5
  7508                           ; switch strategies available:
  7509                           ; Name         Instructions Cycles
  7510                           ; direct_byte           18     6 (fixed)
  7511                           ; simple_byte           19    10 (average)
  7512                           ; jumptable            260     6 (fixed)
  7513                           ;	Chosen strategy is direct_byte
  7514  0071  0084               	movwf	4
  7515  0072  3006               	movlw	6
  7516  0073  0204               	subwf	4,w
  7517  0074  1803               	skipnc
  7518  0075  287A               	goto	i1l4144
  7519  0076  3193               	movlp	high i1S4938
  7520  0077  3504               	lslf	4,w
  7521  0078  3EDC               	addlw	low i1S4938
  7522  0079  0082               	movwf	2
  7523  007A                     i1l4144:	
  7524                           
  7525                           ;Multi_RX_testjig_v2.c: 393: }
  7526                           ;Multi_RX_testjig_v2.c: 455: if(buzz_timer)
  7527  007A  0021               	movlb	1	; select bank1
  7528  007B  0831               	movf	_buzz_timer^(0+128),w	;volatile
  7529  007C  0432               	iorwf	(_buzz_timer+1)^(0+128),w	;volatile
  7530  007D  1903               	btfsc	3,2
  7531  007E  2884               	goto	i1l295
  7532                           
  7533                           ;Multi_RX_testjig_v2.c: 456: buzz_timer--;
  7534  007F  3001               	movlw	1
  7535  0080  02B1               	subwf	_buzz_timer^(0+128),f	;volatile
  7536  0081  3000               	movlw	0
  7537  0082  3BB2               	subwfb	(_buzz_timer+1)^(0+128),f	;volatile
  7538  0083  2886               	goto	i1l4148
  7539  0084                     i1l295:	
  7540                           
  7541                           ;Multi_RX_testjig_v2.c: 457: else
  7542                           ;Multi_RX_testjig_v2.c: 458: LATC5 = 0;
  7543  0084  0022               	movlb	2	; select bank2
  7544  0085  128E               	bcf	14,5	;volatile
  7545  0086                     i1l4148:	
  7546                           
  7547                           ;Multi_RX_testjig_v2.c: 459: if(one_second_timer)
  7548  0086  0021               	movlb	1	; select bank1
  7549  0087  0834               	movf	_one_second_timer^(0+128),w	;volatile
  7550  0088  0435               	iorwf	(_one_second_timer+1)^(0+128),w	;volatile
  7551  0089  1903               	btfsc	3,2
  7552  008A  2890               	goto	i1l4152
  7553                           
  7554                           ;Multi_RX_testjig_v2.c: 460: one_second_timer--;
  7555  008B  3001               	movlw	1
  7556  008C  02B4               	subwf	_one_second_timer^(0+128),f	;volatile
  7557  008D  3000               	movlw	0
  7558  008E  3BB5               	subwfb	(_one_second_timer+1)^(0+128),f	;volatile
  7559  008F  2894               	goto	i1l4154
  7560  0090                     i1l4152:	
  7561                           
  7562                           ;Multi_RX_testjig_v2.c: 461: else
  7563                           ;Multi_RX_testjig_v2.c: 462: {
  7564                           ;Multi_RX_testjig_v2.c: 463: one_second_timer = 1000;
  7565  0090  30E8               	movlw	232
  7566  0091  00B4               	movwf	_one_second_timer^(0+128)	;volatile
  7567  0092  3003               	movlw	3
  7568  0093  00B5               	movwf	(_one_second_timer^(0+128)+1)	;volatile
  7569  0094                     i1l4154:	
  7570                           
  7571                           ;Multi_RX_testjig_v2.c: 464: }
  7572                           ;Multi_RX_testjig_v2.c: 465: if(tj_timer)
  7573  0094  082C               	movf	_tj_timer^(0+128),w
  7574  0095  042D               	iorwf	(_tj_timer+1)^(0+128),w
  7575  0096  1903               	btfsc	3,2
  7576  0097  289C               	goto	i1l4158
  7577                           
  7578                           ;Multi_RX_testjig_v2.c: 466: tj_timer--;
  7579  0098  3001               	movlw	1
  7580  0099  02AC               	subwf	_tj_timer^(0+128),f
  7581  009A  3000               	movlw	0
  7582  009B  3BAD               	subwfb	(_tj_timer+1)^(0+128),f
  7583  009C                     i1l4158:	
  7584                           
  7585                           ;Multi_RX_testjig_v2.c: 467: PIR1bits.TMR2IF = 0;
  7586  009C  0020               	movlb	0	; select bank0
  7587  009D  1091               	bcf	17,1	;volatile
  7588  009E                     i1l300:	
  7589  009E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7590  009F  0009               	retfie
  7591  00A0                     __end_of_isr:	
  7592  007E                     btemp	set	126	;btemp
  7593  007E                     int$flags	set	126
  7594  007E                     wtemp	set	126
  7595  007E                     wtemp0	set	126
  7596  0080                     wtemp1	set	128
  7597  0082                     wtemp2	set	130
  7598  0084                     wtemp3	set	132
  7599  0086                     wtemp4	set	134
  7600  0088                     wtemp5	set	136
  7601  007F                     wtemp6	set	127
  7602  007E                     ttemp	set	126
  7603  007E                     ttemp0	set	126
  7604  0081                     ttemp1	set	129
  7605  0084                     ttemp2	set	132
  7606  0087                     ttemp3	set	135
  7607  007F                     ttemp4	set	127
  7608  007E                     ltemp	set	126
  7609  007E                     ltemp0	set	126
  7610  0082                     ltemp1	set	130
  7611  0086                     ltemp2	set	134
  7612  0080                     ltemp3	set	128
  7613                           
  7614                           	psect	swtext3
  7615  13DC                     __pswtext3:	
  7616  13DC                     i1S4938:	
  7617  13DC  3180  2869         	ljmp	i1l293
  7618  13DE  3180  2832         	ljmp	i1l282
  7619  13E0  3180  283B         	ljmp	i1l4118
  7620  13E2  3180  2842         	ljmp	i1l285
  7621  13E4  3180  2865         	ljmp	i1l292
  7622  13E6  3180  287A         	ljmp	i1l4144
  7623                           
  7624                           	psect	maintext_split_1
  7625  1688                     l4272:	
  7626  1688  305F               	movlw	95
  7627  1689  318C  245E  3196   	fcall	_ADC_get_val
  7628  168C  3000               	movlw	0
  7629  168D  0271               	subwf	?_ADC_get_val+1,w
  7630  168E  307B               	movlw	123
  7631  168F  1903               	skipnz
  7632  1690  0270               	subwf	?_ADC_get_val,w
  7633  1691  1C03               	skipc
  7634  1692  2EC2               	goto	l4282
  7635  1693  3063               	movlw	99
  7636  1694  318C  245E  3196   	fcall	_ADC_get_val
  7637  1697  3000               	movlw	0
  7638  1698  0271               	subwf	?_ADC_get_val+1,w
  7639  1699  30F5               	movlw	245
  7640  169A  1903               	skipnz
  7641  169B  0270               	subwf	?_ADC_get_val,w
  7642  169C  1803               	skipnc
  7643  169D  2EC2               	goto	l4282
  7644  169E  3063               	movlw	99
  7645  169F  318C  245E  3196   	fcall	_ADC_get_val
  7646  16A2  3001               	movlw	1
  7647  16A3  0271               	subwf	?_ADC_get_val+1,w
  7648  16A4  3048               	movlw	72
  7649  16A5  1903               	skipnz
  7650  16A6  0270               	subwf	?_ADC_get_val,w
  7651  16A7  1C03               	skipc
  7652  16A8  2EC2               	goto	l4282
  7653  16A9  318C  2413  3196   	fcall	_get_30v_current
  7654  16AC  3000               	movlw	0
  7655  16AD  0258               	subwf	?_get_30v_current+1,w
  7656  16AE  303C               	movlw	60
  7657  16AF  1903               	skipnz
  7658  16B0  0257               	subwf	?_get_30v_current,w
  7659  16B1  1803               	skipnc
  7660  16B2  2EC2               	goto	l4282
  7661  16B3  0869               	movf	_testjig_timer,w	;volatile
  7662  16B4  046A               	iorwf	_testjig_timer+1,w	;volatile
  7663  16B5  1903               	btfsc	3,2
  7664  16B6  2EC2               	goto	l4282
  7665  16B7                     l4270:	
  7666                           ;Multi_RX_testjig_v2.c: 573: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08))&&(ADC_get_val(0b01100011) < (unsigned int)((((12/11.0)*1024)/4.096)*0.9)) && (AD
      +                          C_get_val(0b011
  7667                           
  7668  16B7  305F               	movlw	95
  7669  16B8  318C  245E  3196   	fcall	_ADC_get_val
  7670  16BB  3000               	movlw	0
  7671  16BC  0271               	subwf	?_ADC_get_val+1,w
  7672  16BD  3068               	movlw	104
  7673  16BE  1903               	skipnz
  7674  16BF  0270               	subwf	?_ADC_get_val,w
  7675  16C0  1C03               	btfss	3,0
  7676  16C1  2E88               	goto	l4272
  7677  16C2                     l4282:	
  7678                           
  7679                           ;Multi_RX_testjig_v2.c: 574: unsigned int temp;
  7680                           ;Multi_RX_testjig_v2.c: 575: temp = get_30v_current();
  7681  16C2  318C  2413  3196   	fcall	_get_30v_current
  7682  16C5  0858               	movf	?_get_30v_current+1,w
  7683  16C6  00DF               	movwf	main@temp+1
  7684  16C7  0857               	movf	?_get_30v_current,w
  7685  16C8  00DE               	movwf	main@temp
  7686                           
  7687                           ;Multi_RX_testjig_v2.c: 577: lcd_print_int(ADC_get_val(0b01011111), 5, 0, 1);
  7688  16C9  305F               	movlw	95
  7689  16CA  318C  245E  3196   	fcall	_ADC_get_val
  7690  16CD  0871               	movf	?_ADC_get_val+1,w
  7691  16CE  0020               	movlb	0	; select bank0
  7692  16CF  00A1               	movwf	lcd_print_int@number+1
  7693  16D0  0870               	movf	?_ADC_get_val,w
  7694  16D1  00A0               	movwf	lcd_print_int@number
  7695  16D2  3005               	movlw	5
  7696  16D3  00A2               	movwf	lcd_print_int@pos
  7697  16D4  01A3               	clrf	lcd_print_int@pos+1
  7698  16D5  01A4               	clrf	lcd_print_int@decimal
  7699  16D6  01A5               	clrf	lcd_print_int@ten_thou_digit
  7700  16D7  0AA5               	incf	lcd_print_int@ten_thou_digit,f
  7701  16D8  3188  20FB  3196   	fcall	_lcd_print_int
  7702                           
  7703                           ;Multi_RX_testjig_v2.c: 578: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7704  16DB  3015               	movlw	21
  7705  16DC  0020               	movlb	0	; select bank0
  7706  16DD  00DD               	movwf	??_main+2
  7707  16DE  304B               	movlw	75
  7708  16DF  00DC               	movwf	??_main+1
  7709  16E0  30D1               	movlw	209
  7710  16E1  00DB               	movwf	??_main
  7711  16E2                     u5767:	
  7712  16E2  0BDB               	decfsz	??_main,f
  7713  16E3  2EE2               	goto	u5767
  7714  16E4  0BDC               	decfsz	??_main+1,f
  7715  16E5  2EE2               	goto	u5767
  7716  16E6  0BDD               	decfsz	??_main+2,f
  7717  16E7  2EE2               	goto	u5767
  7718  16E8  0000               	nop
  7719                           
  7720                           ;Multi_RX_testjig_v2.c: 584: if((ADC_get_val(0b01100011) < (unsigned int)((((12/11.0)*10
      +                          24)/4.096)*0.9)))
  7721  16E9  3063               	movlw	99
  7722  16EA  318C  245E  3196   	fcall	_ADC_get_val
  7723  16ED  3000               	movlw	0
  7724  16EE  0271               	subwf	?_ADC_get_val+1,w
  7725  16EF  30F5               	movlw	245
  7726  16F0  1903               	skipnz
  7727  16F1  0270               	subwf	?_ADC_get_val,w
  7728  16F2  1803               	skipnc
  7729  16F3  2EFC               	goto	l4290
  7730                           
  7731                           ;Multi_RX_testjig_v2.c: 585: print_error("16v-12v supply", "Volt Error L");
  7732  16F4  304A               	movlw	low (STR_7| (0+32768))
  7733  16F5  00F8               	movwf	print_error@top
  7734  16F6  3091               	movlw	high (STR_7| (0+32768))
  7735  16F7  00F9               	movwf	print_error@top+1
  7736  16F8  30EF               	movlw	low (STR_8| (0+32768))
  7737  16F9  00FA               	movwf	print_error@bottom
  7738  16FA  3091               	movlw	high (STR_8| (0+32768))
  7739  16FB  2F45               	goto	L6
  7740  16FC                     l4290:	
  7741                           
  7742                           ;Multi_RX_testjig_v2.c: 586: else if((ADC_get_val(0b01100011) > (unsigned int)((((12/11.
      +                          0)*1024)/4.096)*1.2)))
  7743  16FC  3063               	movlw	99
  7744  16FD  318C  245E  3196   	fcall	_ADC_get_val
  7745  1700  3001               	movlw	1
  7746  1701  0271               	subwf	?_ADC_get_val+1,w
  7747  1702  3048               	movlw	72
  7748  1703  1903               	skipnz
  7749  1704  0270               	subwf	?_ADC_get_val,w
  7750  1705  1C03               	skipc
  7751  1706  2F0F               	goto	l4294
  7752                           
  7753                           ;Multi_RX_testjig_v2.c: 587: print_error("16v-12v supply", "Volt Error H");
  7754  1707  304A               	movlw	low (STR_7| (0+32768))
  7755  1708  00F8               	movwf	print_error@top
  7756  1709  3091               	movlw	high (STR_7| (0+32768))
  7757  170A  00F9               	movwf	print_error@top+1
  7758  170B  30D5               	movlw	low (STR_10| (0+32768))
  7759  170C  00FA               	movwf	print_error@bottom
  7760  170D  3091               	movlw	high (STR_10| (0+32768))
  7761  170E  2F45               	goto	L6
  7762  170F                     l4294:	
  7763                           
  7764                           ;Multi_RX_testjig_v2.c: 588: else if((temp >= 60))
  7765  170F  3000               	movlw	0
  7766  1710  0020               	movlb	0	; select bank0
  7767  1711  025F               	subwf	main@temp+1,w
  7768  1712  303C               	movlw	60
  7769  1713  1903               	skipnz
  7770  1714  025E               	subwf	main@temp,w
  7771  1715  1C03               	skipc
  7772  1716  2F3A               	goto	l4302
  7773                           
  7774                           ;Multi_RX_testjig_v2.c: 589: {
  7775                           ;Multi_RX_testjig_v2.c: 590: lcd_print_int(temp, 5, 0, 1);
  7776  1717  085F               	movf	main@temp+1,w
  7777  1718  00A1               	movwf	lcd_print_int@number+1
  7778  1719  085E               	movf	main@temp,w
  7779  171A  00A0               	movwf	lcd_print_int@number
  7780  171B  3005               	movlw	5
  7781  171C  00A2               	movwf	lcd_print_int@pos
  7782  171D  01A3               	clrf	lcd_print_int@pos+1
  7783  171E  01A4               	clrf	lcd_print_int@decimal
  7784  171F  01A5               	clrf	lcd_print_int@ten_thou_digit
  7785  1720  0AA5               	incf	lcd_print_int@ten_thou_digit,f
  7786  1721  3188  20FB  3196   	fcall	_lcd_print_int
  7787                           
  7788                           ;Multi_RX_testjig_v2.c: 591: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7789  1724  3015               	movlw	21
  7790  1725  0020               	movlb	0	; select bank0
  7791  1726  00DD               	movwf	??_main+2
  7792  1727  304B               	movlw	75
  7793  1728  00DC               	movwf	??_main+1
  7794  1729  30D1               	movlw	209
  7795  172A  00DB               	movwf	??_main
  7796  172B                     u5777:	
  7797  172B  0BDB               	decfsz	??_main,f
  7798  172C  2F2B               	goto	u5777
  7799  172D  0BDC               	decfsz	??_main+1,f
  7800  172E  2F2B               	goto	u5777
  7801  172F  0BDD               	decfsz	??_main+2,f
  7802  1730  2F2B               	goto	u5777
  7803  1731  0000               	nop
  7804                           
  7805                           ;Multi_RX_testjig_v2.c: 592: print_error("16v supply", "Curr Error");
  7806  1732  30BE               	movlw	low (STR_11| (0+32768))
  7807  1733  00F8               	movwf	print_error@top
  7808  1734  3092               	movlw	high (STR_11| (0+32768))
  7809  1735  00F9               	movwf	print_error@top+1
  7810  1736  309D               	movlw	low (STR_12| (0+32768))
  7811  1737  00FA               	movwf	print_error@bottom
  7812  1738  3092               	movlw	high (STR_12| (0+32768))
  7813  1739  2F45               	goto	L6
  7814  173A                     l4302:	
  7815                           ;Multi_RX_testjig_v2.c: 593: }
  7816                           
  7817                           
  7818                           ;Multi_RX_testjig_v2.c: 594: else if(testjig_timer == 0)
  7819  173A  0869               	movf	_testjig_timer,w	;volatile
  7820  173B  046A               	iorwf	_testjig_timer+1,w	;volatile
  7821  173C  1D03               	btfss	3,2
  7822  173D  2F49               	goto	l4306
  7823                           
  7824                           ;Multi_RX_testjig_v2.c: 595: print_error("16v-5v supply", "T-out Error");
  7825  173E  30AD               	movlw	low (STR_13| (0+32768))
  7826  173F  00F8               	movwf	print_error@top
  7827  1740  3091               	movlw	high (STR_13| (0+32768))
  7828  1741  00F9               	movwf	print_error@top+1
  7829  1742  3085               	movlw	low (STR_14| (0+32768))
  7830  1743  00FA               	movwf	print_error@bottom
  7831  1744  3092               	movlw	high (STR_14| (0+32768))
  7832  1745                     L6:	
  7833  1745  00FB               	movwf	print_error@bottom+1
  7834  1746  318A  22F4  3196   	fcall	_print_error
  7835  1749                     l4306:	
  7836                           
  7837                           ;Multi_RX_testjig_v2.c: 601: if(RA2 == 1)
  7838  1749  0020               	movlb	0	; select bank0
  7839  174A  1D0C               	btfss	12,2	;volatile
  7840  174B  2FB6               	goto	l4328
  7841                           
  7842                           ;Multi_RX_testjig_v2.c: 602: {
  7843                           ;Multi_RX_testjig_v2.c: 603: power_supply_set(0);
  7844  174C  3000               	movlw	0
  7845  174D  318B  23F2  3196   	fcall	_power_supply_set
  7846                           
  7847                           ;Multi_RX_testjig_v2.c: 605: print_screen("Pickit Programming", "");
  7848  1750  3013               	movlw	low (STR_15| (0+32768))
  7849  1751  00F4               	movwf	print_screen@top
  7850  1752  3090               	movlw	high (STR_15| (0+32768))
  7851  1753  00F5               	movwf	print_screen@top+1
  7852  1754  30AE               	movlw	low ((STR_153+15)| (0+32768))
  7853  1755  00F6               	movwf	print_screen@bottom
  7854  1756  3090               	movlw	high ((STR_153+15)| (0+32768))
  7855  1757  00F7               	movwf	print_screen@bottom+1
  7856  1758  318A  22D2  3196   	fcall	_print_screen
  7857                           
  7858                           ;Multi_RX_testjig_v2.c: 606: LATA7 = 1;
  7859  175B  0022               	movlb	2	; select bank2
  7860  175C  178C               	bsf	12,7	;volatile
  7861                           
  7862                           ;Multi_RX_testjig_v2.c: 607: _delay((unsigned long)((100)*(16000000/4000.0)));
  7863  175D  3003               	movlw	3
  7864  175E  0020               	movlb	0	; select bank0
  7865  175F  00DD               	movwf	??_main+2
  7866  1760  3008               	movlw	8
  7867  1761  00DC               	movwf	??_main+1
  7868  1762  3078               	movlw	120
  7869  1763  00DB               	movwf	??_main
  7870  1764                     u5787:	
  7871  1764  0BDB               	decfsz	??_main,f
  7872  1765  2F64               	goto	u5787
  7873  1766  0BDC               	decfsz	??_main+1,f
  7874  1767  2F64               	goto	u5787
  7875  1768  0BDD               	decfsz	??_main+2,f
  7876  1769  2F64               	goto	u5787
  7877                           
  7878                           ;Multi_RX_testjig_v2.c: 608: print_screen("Waiting for", " Programming");
  7879  176A  306D               	movlw	low (STR_17| (0+32768))
  7880  176B  00F4               	movwf	print_screen@top
  7881  176C  3092               	movlw	high (STR_17| (0+32768))
  7882  176D  00F5               	movwf	print_screen@top+1
  7883  176E  3019               	movlw	low ((STR_15+6)| (0+32768))
  7884  176F  00F6               	movwf	print_screen@bottom
  7885  1770  3090               	movlw	high ((STR_15+6)| (0+32768))
  7886  1771  00F7               	movwf	print_screen@bottom+1
  7887  1772  318A  22D2  3196   	fcall	_print_screen
  7888                           
  7889                           ;Multi_RX_testjig_v2.c: 611: LATC2 = 1;
  7890  1775  0022               	movlb	2	; select bank2
  7891  1776  150E               	bsf	14,2	;volatile
  7892                           
  7893                           ;Multi_RX_testjig_v2.c: 612: LATC7 = 1;
  7894  1777  178E               	bsf	14,7	;volatile
  7895                           
  7896                           ;Multi_RX_testjig_v2.c: 613: _delay((unsigned long)((100)*(16000000/4000.0)));
  7897  1778  3003               	movlw	3
  7898  1779  0020               	movlb	0	; select bank0
  7899  177A  00DD               	movwf	??_main+2
  7900  177B  3008               	movlw	8
  7901  177C  00DC               	movwf	??_main+1
  7902  177D  3078               	movlw	120
  7903  177E  00DB               	movwf	??_main
  7904  177F                     u5797:	
  7905  177F  0BDB               	decfsz	??_main,f
  7906  1780  2F7F               	goto	u5797
  7907  1781  0BDC               	decfsz	??_main+1,f
  7908  1782  2F7F               	goto	u5797
  7909  1783  0BDD               	decfsz	??_main+2,f
  7910  1784  2F7F               	goto	u5797
  7911                           
  7912                           ;Multi_RX_testjig_v2.c: 614: LATC6 = 1;
  7913  1785  0022               	movlb	2	; select bank2
  7914  1786  170E               	bsf	14,6	;volatile
  7915                           
  7916                           ;Multi_RX_testjig_v2.c: 615: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7917  1787  3015               	movlw	21
  7918  1788  0020               	movlb	0	; select bank0
  7919  1789  00DD               	movwf	??_main+2
  7920  178A  304B               	movlw	75
  7921  178B  00DC               	movwf	??_main+1
  7922  178C  30D1               	movlw	209
  7923  178D  00DB               	movwf	??_main
  7924  178E                     u5807:	
  7925  178E  0BDB               	decfsz	??_main,f
  7926  178F  2F8E               	goto	u5807
  7927  1790  0BDC               	decfsz	??_main+1,f
  7928  1791  2F8E               	goto	u5807
  7929  1792  0BDD               	decfsz	??_main+2,f
  7930  1793  2F8E               	goto	u5807
  7931  1794  0000               	nop
  7932                           
  7933                           ;Multi_RX_testjig_v2.c: 616: LATC6 = 0;
  7934  1795  0022               	movlb	2	; select bank2
  7935  1796  130E               	bcf	14,6	;volatile
  7936                           
  7937                           ;Multi_RX_testjig_v2.c: 617: _delay((unsigned long)((4500)*(16000000/4000.0)));
  7938  1797  305C               	movlw	92
  7939  1798  0020               	movlb	0	; select bank0
  7940  1799  00DD               	movwf	??_main+2
  7941  179A  3051               	movlw	81
  7942  179B  00DC               	movwf	??_main+1
  7943  179C  30BA               	movlw	186
  7944  179D  00DB               	movwf	??_main
  7945  179E                     u5817:	
  7946  179E  0BDB               	decfsz	??_main,f
  7947  179F  2F9E               	goto	u5817
  7948  17A0  0BDC               	decfsz	??_main+1,f
  7949  17A1  2F9E               	goto	u5817
  7950  17A2  0BDD               	decfsz	??_main+2,f
  7951  17A3  2F9E               	goto	u5817
  7952  17A4  0000               	nop
  7953                           
  7954                           ;Multi_RX_testjig_v2.c: 618: LATC2 = 0;
  7955  17A5  0022               	movlb	2	; select bank2
  7956  17A6  110E               	bcf	14,2	;volatile
  7957                           
  7958                           ;Multi_RX_testjig_v2.c: 619: LATC7 = 0;
  7959  17A7  138E               	bcf	14,7	;volatile
  7960                           
  7961                           ;Multi_RX_testjig_v2.c: 620: _delay((unsigned long)((100)*(16000000/4000.0)));
  7962  17A8  3003               	movlw	3
  7963  17A9  0020               	movlb	0	; select bank0
  7964  17AA  00DD               	movwf	??_main+2
  7965  17AB  3008               	movlw	8
  7966  17AC  00DC               	movwf	??_main+1
  7967  17AD  3078               	movlw	120
  7968  17AE  00DB               	movwf	??_main
  7969  17AF                     u5827:	
  7970  17AF  0BDB               	decfsz	??_main,f
  7971  17B0  2FAF               	goto	u5827
  7972  17B1  0BDC               	decfsz	??_main+1,f
  7973  17B2  2FAF               	goto	u5827
  7974  17B3  0BDD               	decfsz	??_main+2,f
  7975  17B4  2FAF               	goto	u5827
  7976                           
  7977                           ;Multi_RX_testjig_v2.c: 627: }
  7978  17B5  2FCF               	goto	l4332
  7979  17B6                     l4328:	
  7980                           
  7981                           ;Multi_RX_testjig_v2.c: 628: else
  7982                           ;Multi_RX_testjig_v2.c: 629: {
  7983                           ;Multi_RX_testjig_v2.c: 630: print_screen("Pickit Programming", " skipped");
  7984  17B6  3013               	movlw	low (STR_15| (0+32768))
  7985  17B7  00F4               	movwf	print_screen@top
  7986  17B8  3090               	movlw	high (STR_15| (0+32768))
  7987  17B9  00F5               	movwf	print_screen@top+1
  7988  17BA  3056               	movlw	low (STR_20| (0+32768))
  7989  17BB  00F6               	movwf	print_screen@bottom
  7990  17BC  3093               	movlw	high (STR_20| (0+32768))
  7991  17BD  00F7               	movwf	print_screen@bottom+1
  7992  17BE  318A  22D2  3196   	fcall	_print_screen
  7993                           
  7994                           ;Multi_RX_testjig_v2.c: 631: _delay((unsigned long)((300)*(16000000/4000.0)));
  7995  17C1  3007               	movlw	7
  7996  17C2  0020               	movlb	0	; select bank0
  7997  17C3  00DD               	movwf	??_main+2
  7998  17C4  3017               	movlw	23
  7999  17C5  00DC               	movwf	??_main+1
  8000  17C6  306F               	movlw	111
  8001  17C7  00DB               	movwf	??_main
  8002  17C8                     u5837:	
  8003  17C8  0BDB               	decfsz	??_main,f
  8004  17C9  2FC8               	goto	u5837
  8005  17CA  0BDC               	decfsz	??_main+1,f
  8006  17CB  2FC8               	goto	u5837
  8007  17CC  0BDD               	decfsz	??_main+2,f
  8008  17CD  2FC8               	goto	u5837
  8009  17CE  0000               	nop
  8010  17CF                     l4332:	
  8011                           
  8012                           ;Multi_RX_testjig_v2.c: 632: }
  8013                           ;Multi_RX_testjig_v2.c: 647: LATF4 = 0;
  8014  17CF  0027               	movlb	7	; select bank7
  8015  17D0  120C               	bcf	12,4	;volatile
  8016                           
  8017                           ;Multi_RX_testjig_v2.c: 648: _delay((unsigned long)((100)*(16000000/4000.0)));
  8018  17D1  3003               	movlw	3
  8019  17D2  0020               	movlb	0	; select bank0
  8020  17D3  00DD               	movwf	??_main+2
  8021  17D4  3008               	movlw	8
  8022  17D5  00DC               	movwf	??_main+1
  8023  17D6  3078               	movlw	120
  8024  17D7  00DB               	movwf	??_main
  8025  17D8                     u5847:	
  8026  17D8  0BDB               	decfsz	??_main,f
  8027  17D9  2FD8               	goto	u5847
  8028  17DA  0BDC               	decfsz	??_main+1,f
  8029  17DB  2FD8               	goto	u5847
  8030  17DC  0BDD               	decfsz	??_main+2,f
  8031  17DD  2FD8               	goto	u5847
  8032                           
  8033                           ;Multi_RX_testjig_v2.c: 649: LATF4 = 1;
  8034  17DE  0027               	movlb	7	; select bank7
  8035  17DF  160C               	bsf	12,4	;volatile
  8036                           
  8037                           ;Multi_RX_testjig_v2.c: 650: _delay((unsigned long)((100)*(16000000/4000.0)));
  8038  17E0  3003               	movlw	3
  8039  17E1  0020               	movlb	0	; select bank0
  8040  17E2  00DD               	movwf	??_main+2
  8041  17E3  3008               	movlw	8
  8042  17E4  00DC               	movwf	??_main+1
  8043  17E5  3078               	movlw	120
  8044  17E6  00DB               	movwf	??_main
  8045  17E7                     u5857:	
  8046  17E7  0BDB               	decfsz	??_main,f
  8047  17E8  2FE7               	goto	u5857
  8048  17E9  0BDC               	decfsz	??_main+1,f
  8049  17EA  2FE7               	goto	u5857
  8050  17EB  0BDD               	decfsz	??_main+2,f
  8051  17EC  2FE7               	goto	u5857
  8052                           
  8053                           ;Multi_RX_testjig_v2.c: 651: LATF4 = 0;
  8054  17ED  0027               	movlb	7	; select bank7
  8055  17EE  120C               	bcf	12,4	;volatile
  8056                           
  8057                           ;Multi_RX_testjig_v2.c: 652: print_screen("Establishing", "comms");
  8058  17EF  3009               	movlw	low (STR_21| (0+32768))
  8059  17F0  00F4               	movwf	print_screen@top
  8060  17F1  3092               	movlw	high (STR_21| (0+32768))
  8061  17F2  00F5               	movwf	print_screen@top+1
  8062  17F3  30AD               	movlw	low ((STR_156+5)| (0+32768))
  8063  17F4  00F6               	movwf	print_screen@bottom
  8064  17F5  3092               	movlw	high ((STR_156+5)| (0+32768))
  8065  17F6  00F7               	movwf	print_screen@bottom+1
  8066  17F7  318A  22D2         	fcall	_print_screen
  8067                           
  8068                           ;Multi_RX_testjig_v2.c: 653: unsigned char device_type;
  8069                           ;Multi_RX_testjig_v2.c: 654: unsigned char RX_data = 0;
  8070  17F9  0020               	movlb	0	; select bank0
  8071  17FA  3000               	movlw	0
  8072  17FB  01E8               	clrf	main@RX_data
  8073  17FC  01E5               	clrf	main@i
  8074  17FD  01E6               	clrf	main@i+1
  8075  17FE  3180  28ED         	goto	L7
  8076                           
  8077                           	psect	maintext_split_2
  8078  00BA                     l4354:	
  8079  00BA  30A1               	movlw	161
  8080  00BB  0667               	xorwf	main@device_type,w
  8081  00BC  1903               	btfsc	3,2
  8082  00BD  28FF               	goto	l4366
  8083  00BE  30A2               	movlw	162
  8084  00BF  0667               	xorwf	main@device_type,w
  8085  00C0  1903               	btfsc	3,2
  8086  00C1  28FF               	goto	l4366
  8087                           
  8088                           ;Multi_RX_testjig_v2.c: 662: lcd_print_int(i, 11, 0, 0);
  8089  00C2  0866               	movf	main@i+1,w
  8090  00C3  00A1               	movwf	lcd_print_int@number+1
  8091  00C4  0865               	movf	main@i,w
  8092  00C5  00A0               	movwf	lcd_print_int@number
  8093  00C6  300B               	movlw	11
  8094  00C7  00A2               	movwf	lcd_print_int@pos
  8095  00C8  01A3               	clrf	lcd_print_int@pos+1
  8096  00C9  01A4               	clrf	lcd_print_int@decimal
  8097  00CA  01A5               	clrf	lcd_print_int@ten_thou_digit
  8098  00CB  3188  20FB  3180   	fcall	_lcd_print_int
  8099                           
  8100                           ;Multi_RX_testjig_v2.c: 663: lcd_print_int(device_type, 5, 0, 0);
  8101  00CE  0020               	movlb	0	; select bank0
  8102  00CF  0867               	movf	main@device_type,w
  8103  00D0  00A0               	movwf	lcd_print_int@number
  8104  00D1  3005               	movlw	5
  8105  00D2  01A1               	clrf	lcd_print_int@number+1
  8106  00D3  00A2               	movwf	lcd_print_int@pos
  8107  00D4  01A3               	clrf	lcd_print_int@pos+1
  8108  00D5  01A4               	clrf	lcd_print_int@decimal
  8109  00D6  01A5               	clrf	lcd_print_int@ten_thou_digit
  8110  00D7  3188  20FB  3180   	fcall	_lcd_print_int
  8111                           
  8112                           ;Multi_RX_testjig_v2.c: 664: _delay((unsigned long)((50)*(16000000/4000.0)));
  8113  00DA  3002               	movlw	2
  8114  00DB  0020               	movlb	0	; select bank0
  8115  00DC  00DD               	movwf	??_main+2
  8116  00DD  3004               	movlw	4
  8117  00DE  00DC               	movwf	??_main+1
  8118  00DF  30BA               	movlw	186
  8119  00E0  00DB               	movwf	??_main
  8120  00E1                     u5867:	
  8121  00E1  0BDB               	decfsz	??_main,f
  8122  00E2  28E1               	goto	u5867
  8123  00E3  0BDC               	decfsz	??_main+1,f
  8124  00E4  28E1               	goto	u5867
  8125  00E5  0BDD               	decfsz	??_main+2,f
  8126  00E6  28E1               	goto	u5867
  8127  00E7  0000               	nop
  8128  00E8  0020               	movlb	0	; select bank0
  8129  00E9  0AE5               	incf	main@i,f
  8130  00EA  1903               	skipnz
  8131  00EB  0AE6               	incf	main@i+1,f
  8132  00EC  3000               	movlw	0
  8133  00ED                     L7:	
  8134  00ED  0266               	subwf	main@i+1,w
  8135  00EE  3064               	movlw	100
  8136  00EF  1903               	skipnz
  8137  00F0  0265               	subwf	main@i,w
  8138  00F1  1803               	btfsc	3,0
  8139  00F2  28FF               	goto	l4366
  8140                           
  8141                           ;Multi_RX_testjig_v2.c: 657: {
  8142                           ;Multi_RX_testjig_v2.c: 658: TX_one(0x01);
  8143  00F3  3001               	movlw	1
  8144  00F4  3188  202E  3180   	fcall	_TX_one
  8145                           
  8146                           ;Multi_RX_testjig_v2.c: 659: device_type = RX_one_timeout();
  8147  00F7  3188  207B  3180   	fcall	_RX_one_timeout
  8148  00FA  0020               	movlb	0	; select bank0
  8149  00FB  00E7               	movwf	main@device_type
  8150                           
  8151                           ;Multi_RX_testjig_v2.c: 660: if((device_type == 0xAA) || (device_type == 0xA1) || (devic
      +                          e_type == 0xA2))
  8152  00FC  3AAA               	xorlw	170
  8153  00FD  1D03               	btfss	3,2
  8154  00FE  28BA               	goto	l4354
  8155  00FF                     l4366:	
  8156                           
  8157                           ;Multi_RX_testjig_v2.c: 665: }
  8158                           ;Multi_RX_testjig_v2.c: 666: if(i >= 10)
  8159  00FF  3000               	movlw	0
  8160  0100  0266               	subwf	main@i+1,w
  8161  0101  300A               	movlw	10
  8162  0102  1903               	skipnz
  8163  0103  0265               	subwf	main@i,w
  8164  0104  1C03               	skipc
  8165  0105  2912               	goto	l4370
  8166                           
  8167                           ;Multi_RX_testjig_v2.c: 667: {
  8168                           ;Multi_RX_testjig_v2.c: 670: print_error("Comms Error", " 1");
  8169  0106  3079               	movlw	low (STR_23| (0+32768))
  8170  0107  00F8               	movwf	print_error@top
  8171  0108  3092               	movlw	high (STR_23| (0+32768))
  8172  0109  00F9               	movwf	print_error@top+1
  8173  010A  3014               	movlw	low ((STR_50+6)| (0+32768))
  8174  010B  00FA               	movwf	print_error@bottom
  8175  010C  3093               	movlw	high ((STR_50+6)| (0+32768))
  8176  010D  00FB               	movwf	print_error@bottom+1
  8177  010E  318A  22F4  3180   	fcall	_print_error
  8178                           
  8179                           ;Multi_RX_testjig_v2.c: 671: }
  8180  0111  2938               	goto	l4374
  8181  0112                     l4370:	
  8182                           
  8183                           ;Multi_RX_testjig_v2.c: 672: else
  8184                           ;Multi_RX_testjig_v2.c: 673: {
  8185                           ;Multi_RX_testjig_v2.c: 674: lcd_print_int(i, 11, 0, 0);
  8186  0112  0866               	movf	main@i+1,w
  8187  0113  00A1               	movwf	lcd_print_int@number+1
  8188  0114  0865               	movf	main@i,w
  8189  0115  00A0               	movwf	lcd_print_int@number
  8190  0116  300B               	movlw	11
  8191  0117  00A2               	movwf	lcd_print_int@pos
  8192  0118  01A3               	clrf	lcd_print_int@pos+1
  8193  0119  01A4               	clrf	lcd_print_int@decimal
  8194  011A  01A5               	clrf	lcd_print_int@ten_thou_digit
  8195  011B  3188  20FB  3180   	fcall	_lcd_print_int
  8196                           
  8197                           ;Multi_RX_testjig_v2.c: 675: lcd_print_int(device_type, 5, 0, 0);
  8198  011E  0020               	movlb	0	; select bank0
  8199  011F  0867               	movf	main@device_type,w
  8200  0120  00A0               	movwf	lcd_print_int@number
  8201  0121  3005               	movlw	5
  8202  0122  01A1               	clrf	lcd_print_int@number+1
  8203  0123  00A2               	movwf	lcd_print_int@pos
  8204  0124  01A3               	clrf	lcd_print_int@pos+1
  8205  0125  01A4               	clrf	lcd_print_int@decimal
  8206  0126  01A5               	clrf	lcd_print_int@ten_thou_digit
  8207  0127  3188  20FB  3180   	fcall	_lcd_print_int
  8208                           
  8209                           ;Multi_RX_testjig_v2.c: 676: _delay((unsigned long)((50)*(16000000/4000.0)));
  8210  012A  3002               	movlw	2
  8211  012B  0020               	movlb	0	; select bank0
  8212  012C  00DD               	movwf	??_main+2
  8213  012D  3004               	movlw	4
  8214  012E  00DC               	movwf	??_main+1
  8215  012F  30BA               	movlw	186
  8216  0130  00DB               	movwf	??_main
  8217  0131                     u5877:	
  8218  0131  0BDB               	decfsz	??_main,f
  8219  0132  2931               	goto	u5877
  8220  0133  0BDC               	decfsz	??_main+1,f
  8221  0134  2931               	goto	u5877
  8222  0135  0BDD               	decfsz	??_main+2,f
  8223  0136  2931               	goto	u5877
  8224  0137  0000               	nop
  8225  0138                     l4374:	
  8226                           
  8227                           ;Multi_RX_testjig_v2.c: 677: }
  8228                           ;Multi_RX_testjig_v2.c: 679: if((device_type == 0xAA)|| (device_type == 0xA2))
  8229  0138  30AA               	movlw	170
  8230  0139  0020               	movlb	0	; select bank0
  8231  013A  0667               	xorwf	main@device_type,w
  8232  013B  1903               	btfsc	3,2
  8233  013C  2941               	goto	l4378
  8234  013D  30A2               	movlw	162
  8235  013E  0667               	xorwf	main@device_type,w
  8236  013F  1D03               	btfss	3,2
  8237  0140  29B3               	goto	l4416
  8238  0141                     l4378:	
  8239                           
  8240                           ;Multi_RX_testjig_v2.c: 680: {
  8241                           ;Multi_RX_testjig_v2.c: 682: print_screen("Testing ", "EEPROM read/write");
  8242  0141  3005               	movlw	low (STR_25| (0+32768))
  8243  0142  00F4               	movwf	print_screen@top
  8244  0143  3093               	movlw	high (STR_25| (0+32768))
  8245  0144  00F5               	movwf	print_screen@top+1
  8246  0145  3026               	movlw	low (STR_26| (0+32768))
  8247  0146  00F6               	movwf	print_screen@bottom
  8248  0147  3090               	movlw	high (STR_26| (0+32768))
  8249  0148  00F7               	movwf	print_screen@bottom+1
  8250  0149  318A  22D2  3180   	fcall	_print_screen
  8251                           
  8252                           ;Multi_RX_testjig_v2.c: 683: TX_one(0x10);
  8253  014C  3010               	movlw	16
  8254  014D  3188  202E  3180   	fcall	_TX_one
  8255                           
  8256                           ;Multi_RX_testjig_v2.c: 684: RX_data = RX_one();
  8257  0150  3188  2054  3180   	fcall	_RX_one
  8258  0153  0020               	movlb	0	; select bank0
  8259  0154  00E8               	movwf	main@RX_data
  8260                           
  8261                           ;Multi_RX_testjig_v2.c: 685: if(RX_data == 0xEE)
  8262  0155  3AEE               	xorlw	238
  8263  0156  1D03               	btfss	3,2
  8264  0157  2960               	goto	l4388
  8265                           
  8266                           ;Multi_RX_testjig_v2.c: 686: print_error("EEPROM error", " Read/Write");
  8267  0158  3016               	movlw	low (STR_27| (0+32768))
  8268  0159  00F8               	movwf	print_error@top
  8269  015A  3092               	movlw	high (STR_27| (0+32768))
  8270  015B  00F9               	movwf	print_error@top+1
  8271  015C  3049               	movlw	low (STR_28| (0+32768))
  8272  015D  00FA               	movwf	print_error@bottom
  8273  015E  3092               	movlw	high (STR_28| (0+32768))
  8274  015F  296B               	goto	L1
  8275  0160                     l4388:	
  8276                           
  8277                           ;Multi_RX_testjig_v2.c: 687: else if(RX_data != 0x1A)
  8278  0160  301A               	movlw	26
  8279  0161  0668               	xorwf	main@RX_data,w
  8280  0162  1903               	btfsc	3,2
  8281  0163  296F               	goto	l335
  8282                           
  8283                           ;Multi_RX_testjig_v2.c: 688: print_error("Comms Error", " 2");
  8284  0164  3079               	movlw	low (STR_23| (0+32768))
  8285  0165  00F8               	movwf	print_error@top
  8286  0166  3092               	movlw	high (STR_23| (0+32768))
  8287  0167  00F9               	movwf	print_error@top+1
  8288  0168  301D               	movlw	low ((STR_42+6)| (0+32768))
  8289  0169  00FA               	movwf	print_error@bottom
  8290  016A  3093               	movlw	high ((STR_42+6)| (0+32768))
  8291  016B                     L1:	
  8292  016B  00FB               	movwf	print_error@bottom+1
  8293  016C  318A  22F4  3180   	fcall	_print_error
  8294  016F                     l335:	
  8295                           
  8296                           ;Multi_RX_testjig_v2.c: 691: unsigned int mem_size;
  8297                           ;Multi_RX_testjig_v2.c: 692: print_screen("Test EEPROM ", " size");
  8298  016F  30BB               	movlw	low (STR_31| (0+32768))
  8299  0170  00F4               	movwf	print_screen@top
  8300  0171  3091               	movlw	high (STR_31| (0+32768))
  8301  0172  00F5               	movwf	print_screen@top+1
  8302  0173  305B               	movlw	low ((STR_33+6)| (0+32768))
  8303  0174  00F6               	movwf	print_screen@bottom
  8304  0175  3092               	movlw	high ((STR_33+6)| (0+32768))
  8305  0176  00F7               	movwf	print_screen@bottom+1
  8306  0177  318A  22D2  3180   	fcall	_print_screen
  8307                           
  8308                           ;Multi_RX_testjig_v2.c: 693: TX_one(0x20);
  8309  017A  3020               	movlw	32
  8310  017B  3188  202E  3180   	fcall	_TX_one
  8311                           
  8312                           ;Multi_RX_testjig_v2.c: 694: RX_data = RX_one();
  8313  017E  3188  2054  3180   	fcall	_RX_one
  8314  0181  0020               	movlb	0	; select bank0
  8315  0182  00E8               	movwf	main@RX_data
  8316                           
  8317                           ;Multi_RX_testjig_v2.c: 695: mem_size = RX_data<<8;
  8318  0183  00E1               	movwf	main@mem_size+1
  8319  0184  3021               	movlw	33
  8320  0185  01E0               	clrf	main@mem_size
  8321                           
  8322                           ;Multi_RX_testjig_v2.c: 696: TX_one(0x21);
  8323  0186  3188  202E  3180   	fcall	_TX_one
  8324                           
  8325                           ;Multi_RX_testjig_v2.c: 697: RX_data = RX_one();
  8326  0189  3188  2054  3180   	fcall	_RX_one
  8327  018C  0020               	movlb	0	; select bank0
  8328  018D  00E8               	movwf	main@RX_data
  8329                           
  8330                           ;Multi_RX_testjig_v2.c: 698: mem_size = mem_size | RX_data;
  8331  018E  04E0               	iorwf	main@mem_size,f
  8332                           
  8333                           ;Multi_RX_testjig_v2.c: 699: if(device_type == 0xAA)
  8334  018F  30AA               	movlw	170
  8335  0190  0667               	xorwf	main@device_type,w
  8336  0191  1D03               	btfss	3,2
  8337  0192  29A0               	goto	l4410
  8338                           
  8339                           ;Multi_RX_testjig_v2.c: 700: {
  8340                           ;Multi_RX_testjig_v2.c: 701: if(mem_size != 0x2000)
  8341  0193  3020               	movlw	32
  8342  0194  0661               	xorwf	main@mem_size+1,w
  8343  0195  0460               	iorwf	main@mem_size,w
  8344  0196  1903               	btfsc	3,2
  8345  0197  29B3               	goto	l4416
  8346                           
  8347                           ;Multi_RX_testjig_v2.c: 702: print_error("EEPROM size", " Error Condo3");
  8348  0198  3055               	movlw	low (STR_33| (0+32768))
  8349  0199  00F8               	movwf	print_error@top
  8350  019A  3092               	movlw	high (STR_33| (0+32768))
  8351  019B  00F9               	movwf	print_error@top+1
  8352  019C  3067               	movlw	low (STR_34| (0+32768))
  8353  019D  00FA               	movwf	print_error@bottom
  8354  019E  3091               	movlw	high (STR_34| (0+32768))
  8355  019F  29AF               	goto	L8
  8356  01A0                     l4410:	
  8357                           
  8358                           ;Multi_RX_testjig_v2.c: 704: else if(device_type == 0xA2)
  8359  01A0  30A2               	movlw	162
  8360  01A1  0667               	xorwf	main@device_type,w
  8361  01A2  1D03               	btfss	3,2
  8362  01A3  29B3               	goto	l4416
  8363                           
  8364                           ;Multi_RX_testjig_v2.c: 705: {
  8365                           ;Multi_RX_testjig_v2.c: 706: if(mem_size != 0x0000)
  8366  01A4  0860               	movf	main@mem_size,w
  8367  01A5  0461               	iorwf	main@mem_size+1,w
  8368  01A6  1903               	btfsc	3,2
  8369  01A7  29B3               	goto	l4416
  8370                           
  8371                           ;Multi_RX_testjig_v2.c: 707: print_error("EEPROM size", " Error Mem_copier");
  8372  01A8  3055               	movlw	low (STR_33| (0+32768))
  8373  01A9  00F8               	movwf	print_error@top
  8374  01AA  3092               	movlw	high (STR_33| (0+32768))
  8375  01AB  00F9               	movwf	print_error@top+1
  8376  01AC  3038               	movlw	low (STR_36| (0+32768))
  8377  01AD  00FA               	movwf	print_error@bottom
  8378  01AE  3090               	movlw	high (STR_36| (0+32768))
  8379  01AF                     L8:	
  8380  01AF  00FB               	movwf	print_error@bottom+1
  8381  01B0  318A  22F4  3180   	fcall	_print_error
  8382  01B3                     l4416:	
  8383                           
  8384                           ;Multi_RX_testjig_v2.c: 708: }
  8385                           ;Multi_RX_testjig_v2.c: 709: }
  8386                           ;Multi_RX_testjig_v2.c: 711: if((device_type == 0xAA)|| (device_type == 0xA1))
  8387  01B3  30AA               	movlw	170
  8388  01B4  0020               	movlb	0	; select bank0
  8389  01B5  0667               	xorwf	main@device_type,w
  8390  01B6  1903               	btfsc	3,2
  8391  01B7  29BC               	goto	l4420
  8392  01B8  30A1               	movlw	161
  8393  01B9  0667               	xorwf	main@device_type,w
  8394  01BA  1D03               	btfss	3,2
  8395  01BB  2A40               	goto	l4454
  8396  01BC                     l4420:	
  8397                           
  8398                           ;Multi_RX_testjig_v2.c: 712: {
  8399                           ;Multi_RX_testjig_v2.c: 714: Vout_set(12);
  8400  01BC  300C               	movlw	12
  8401  01BD  00F4               	movwf	Vout_set@Volts
  8402  01BE  01F5               	clrf	Vout_set@Volts+1
  8403  01BF  3188  20AA  3180   	fcall	_Vout_set
  8404                           
  8405                           ;Multi_RX_testjig_v2.c: 715: print_screen("Test Relay", "");
  8406  01C2  30B3               	movlw	low (STR_37| (0+32768))
  8407  01C3  00F4               	movwf	print_screen@top
  8408  01C4  3092               	movlw	high (STR_37| (0+32768))
  8409  01C5  00F5               	movwf	print_screen@top+1
  8410  01C6  30AE               	movlw	low ((STR_153+15)| (0+32768))
  8411  01C7  00F6               	movwf	print_screen@bottom
  8412  01C8  3090               	movlw	high ((STR_153+15)| (0+32768))
  8413  01C9  00F7               	movwf	print_screen@bottom+1
  8414  01CA  318A  22D2  3180   	fcall	_print_screen
  8415                           
  8416                           ;Multi_RX_testjig_v2.c: 716: if(RF5 == 0 && RF2 == 1)
  8417  01CD  0025               	movlb	5	; select bank5
  8418  01CE  1E8C               	btfss	12,5	;volatile
  8419  01CF  1D0C               	btfss	12,2	;volatile
  8420  01D0  2A35               	goto	l4452
  8421                           
  8422                           ;Multi_RX_testjig_v2.c: 717: {
  8423                           ;Multi_RX_testjig_v2.c: 718: TX_one(0x30);
  8424  01D1  3030               	movlw	48
  8425  01D2  3188  202E  3180   	fcall	_TX_one
  8426                           
  8427                           ;Multi_RX_testjig_v2.c: 719: if(RX_one() == 0x3A)
  8428  01D5  3188  2054  3180   	fcall	_RX_one
  8429  01D8  3A3A               	xorlw	58
  8430  01D9  1D03               	skipz
  8431  01DA  2A2D               	goto	l4450
  8432                           
  8433                           ;Multi_RX_testjig_v2.c: 720: {
  8434                           ;Multi_RX_testjig_v2.c: 721: _delay((unsigned long)((50)*(16000000/4000.0)));
  8435  01DB  3002               	movlw	2
  8436  01DC  0020               	movlb	0	; select bank0
  8437  01DD  00DD               	movwf	??_main+2
  8438  01DE  3004               	movlw	4
  8439  01DF  00DC               	movwf	??_main+1
  8440  01E0  30BA               	movlw	186
  8441  01E1  00DB               	movwf	??_main
  8442  01E2                     u5887:	
  8443  01E2  0BDB               	decfsz	??_main,f
  8444  01E3  29E2               	goto	u5887
  8445  01E4  0BDC               	decfsz	??_main+1,f
  8446  01E5  29E2               	goto	u5887
  8447  01E6  0BDD               	decfsz	??_main+2,f
  8448  01E7  29E2               	goto	u5887
  8449  01E8  0000               	nop
  8450                           
  8451                           ;Multi_RX_testjig_v2.c: 722: if(RF5 == 1 && RF2 == 0)
  8452  01E9  0025               	movlb	5	; select bank5
  8453  01EA  1A8C               	btfsc	12,5	;volatile
  8454  01EB  190C               	btfsc	12,2	;volatile
  8455  01EC  2A25               	goto	l4448
  8456                           
  8457                           ;Multi_RX_testjig_v2.c: 723: {
  8458                           ;Multi_RX_testjig_v2.c: 724: TX_one(0x31);
  8459  01ED  3031               	movlw	49
  8460  01EE  3188  202E  3180   	fcall	_TX_one
  8461                           
  8462                           ;Multi_RX_testjig_v2.c: 725: if(RX_one() == 0x3A)
  8463  01F1  3188  2054  3180   	fcall	_RX_one
  8464  01F4  3A3A               	xorlw	58
  8465  01F5  1D03               	skipz
  8466  01F6  2A1D               	goto	l4446
  8467                           
  8468                           ;Multi_RX_testjig_v2.c: 726: {
  8469                           ;Multi_RX_testjig_v2.c: 727: _delay((unsigned long)((50)*(16000000/4000.0)));
  8470  01F7  3002               	movlw	2
  8471  01F8  0020               	movlb	0	; select bank0
  8472  01F9  00DD               	movwf	??_main+2
  8473  01FA  3004               	movlw	4
  8474  01FB  00DC               	movwf	??_main+1
  8475  01FC  30BA               	movlw	186
  8476  01FD  00DB               	movwf	??_main
  8477  01FE                     u5897:	
  8478  01FE  0BDB               	decfsz	??_main,f
  8479  01FF  29FE               	goto	u5897
  8480  0200  0BDC               	decfsz	??_main+1,f
  8481  0201  29FE               	goto	u5897
  8482  0202  0BDD               	decfsz	??_main+2,f
  8483  0203  29FE               	goto	u5897
  8484  0204  0000               	nop
  8485                           
  8486                           ;Multi_RX_testjig_v2.c: 728: if(RF5 == 0 && RF2 == 1)
  8487  0205  0025               	movlb	5	; select bank5
  8488  0206  1E8C               	btfss	12,5	;volatile
  8489  0207  1D0C               	btfss	12,2	;volatile
  8490  0208  2A15               	goto	l4444
  8491                           
  8492                           ;Multi_RX_testjig_v2.c: 729: {
  8493                           ;Multi_RX_testjig_v2.c: 730: print_screen("Test Relay", "Pass");
  8494  0209  30B3               	movlw	low (STR_37| (0+32768))
  8495  020A  00F4               	movwf	print_screen@top
  8496  020B  3092               	movlw	high (STR_37| (0+32768))
  8497  020C  00F5               	movwf	print_screen@top+1
  8498  020D  3063               	movlw	low ((STR_159+4)| (0+32768))
  8499  020E  00F6               	movwf	print_screen@bottom
  8500  020F  3093               	movlw	high ((STR_159+4)| (0+32768))
  8501  0210  00F7               	movwf	print_screen@bottom+1
  8502  0211  318A  22D2  3180   	fcall	_print_screen
  8503                           
  8504                           ;Multi_RX_testjig_v2.c: 731: }
  8505  0214  2A40               	goto	l4454
  8506  0215                     l4444:	
  8507                           
  8508                           ;Multi_RX_testjig_v2.c: 732: else
  8509                           ;Multi_RX_testjig_v2.c: 733: print_error("Relay de-energized", " Error 2");
  8510  0215  3000               	movlw	low (STR_41| (0+32768))
  8511  0216  00F8               	movwf	print_error@top
  8512  0217  3090               	movlw	high (STR_41| (0+32768))
  8513  0218  00F9               	movwf	print_error@top+1
  8514  0219  3017               	movlw	low (STR_42| (0+32768))
  8515  021A  00FA               	movwf	print_error@bottom
  8516  021B  3093               	movlw	high (STR_42| (0+32768))
  8517  021C  2A3C               	goto	L2
  8518  021D                     l4446:	
  8519                           
  8520                           ;Multi_RX_testjig_v2.c: 735: else
  8521                           ;Multi_RX_testjig_v2.c: 736: print_error("Comms Error", " 3");
  8522  021D  3079               	movlw	low (STR_23| (0+32768))
  8523  021E  00F8               	movwf	print_error@top
  8524  021F  3092               	movlw	high (STR_23| (0+32768))
  8525  0220  00F9               	movwf	print_error@top+1
  8526  0221  30C4               	movlw	low (STR_44| (0+32768))
  8527  0222  00FA               	movwf	print_error@bottom
  8528  0223  3093               	movlw	high (STR_44| (0+32768))
  8529  0224  2A3C               	goto	L2
  8530  0225                     l4448:	
  8531                           
  8532                           ;Multi_RX_testjig_v2.c: 738: else
  8533                           ;Multi_RX_testjig_v2.c: 739: print_error("Relay energized", " Error");
  8534  0225  30BF               	movlw	low (STR_45| (0+32768))
  8535  0226  00F8               	movwf	print_error@top
  8536  0227  3090               	movlw	high (STR_45| (0+32768))
  8537  0228  00F9               	movwf	print_error@top+1
  8538  0229  30A1               	movlw	low ((STR_12+4)| (0+32768))
  8539  022A  00FA               	movwf	print_error@bottom
  8540  022B  3092               	movlw	high ((STR_12+4)| (0+32768))
  8541  022C  2A3C               	goto	L2
  8542  022D                     l4450:	
  8543                           
  8544                           ;Multi_RX_testjig_v2.c: 741: else
  8545                           ;Multi_RX_testjig_v2.c: 742: print_error("Comms Error", " 4");
  8546  022D  3079               	movlw	low (STR_23| (0+32768))
  8547  022E  00F8               	movwf	print_error@top
  8548  022F  3092               	movlw	high (STR_23| (0+32768))
  8549  0230  00F9               	movwf	print_error@top+1
  8550  0231  30C7               	movlw	low (STR_48| (0+32768))
  8551  0232  00FA               	movwf	print_error@bottom
  8552  0233  3093               	movlw	high (STR_48| (0+32768))
  8553  0234  2A3C               	goto	L2
  8554  0235                     l4452:	
  8555                           
  8556                           ;Multi_RX_testjig_v2.c: 744: else
  8557                           ;Multi_RX_testjig_v2.c: 745: print_error("Relay de-energized", " Error 1");
  8558  0235  3000               	movlw	low (STR_41| (0+32768))
  8559  0236  00F8               	movwf	print_error@top
  8560  0237  3090               	movlw	high (STR_41| (0+32768))
  8561  0238  00F9               	movwf	print_error@top+1
  8562  0239  300E               	movlw	low (STR_50| (0+32768))
  8563  023A  00FA               	movwf	print_error@bottom
  8564  023B  3093               	movlw	high (STR_50| (0+32768))
  8565  023C                     L2:	
  8566  023C  00FB               	movwf	print_error@bottom+1
  8567  023D  318A  22F4  3180   	fcall	_print_error
  8568  0240                     l4454:	
  8569                           
  8570                           ;Multi_RX_testjig_v2.c: 746: }
  8571                           ;Multi_RX_testjig_v2.c: 748: if((device_type == 0xAA)|| (device_type == 0xA1))
  8572  0240  30AA               	movlw	170
  8573  0241  0020               	movlb	0	; select bank0
  8574  0242  0667               	xorwf	main@device_type,w
  8575  0243  1903               	btfsc	3,2
  8576  0244  2A49               	goto	l4458
  8577  0245  30A1               	movlw	161
  8578  0246  0667               	xorwf	main@device_type,w
  8579  0247  1D03               	btfss	3,2
  8580  0248  2C96               	goto	l4626
  8581  0249                     l4458:	
  8582                           
  8583                           ;Multi_RX_testjig_v2.c: 749: {
  8584                           ;Multi_RX_testjig_v2.c: 751: Vout_set(15);
  8585  0249  300F               	movlw	15
  8586  024A  00F4               	movwf	Vout_set@Volts
  8587  024B  01F5               	clrf	Vout_set@Volts+1
  8588  024C  3188  20AA  3180   	fcall	_Vout_set
  8589                           
  8590                           ;Multi_RX_testjig_v2.c: 752: print_screen("Test CH2", "");
  8591  024F  3020               	movlw	low (STR_51| (0+32768))
  8592  0250  00F4               	movwf	print_screen@top
  8593  0251  3093               	movlw	high (STR_51| (0+32768))
  8594  0252  00F5               	movwf	print_screen@top+1
  8595  0253  30AE               	movlw	low ((STR_153+15)| (0+32768))
  8596  0254  00F6               	movwf	print_screen@bottom
  8597  0255  3090               	movlw	high ((STR_153+15)| (0+32768))
  8598  0256  00F7               	movwf	print_screen@bottom+1
  8599  0257  318A  22D2  3180   	fcall	_print_screen
  8600                           
  8601                           ;Multi_RX_testjig_v2.c: 753: TX_one(0x41);
  8602  025A  3041               	movlw	65
  8603  025B  3188  202E  3180   	fcall	_TX_one
  8604                           
  8605                           ;Multi_RX_testjig_v2.c: 754: if(RX_one() == 0x4A)
  8606  025E  3188  2054  3180   	fcall	_RX_one
  8607  0261  3A4A               	xorlw	74
  8608  0262  1D03               	skipz
  8609  0263  2B69               	goto	l4542
  8610                           
  8611                           ;Multi_RX_testjig_v2.c: 755: {
  8612                           ;Multi_RX_testjig_v2.c: 756: _delay((unsigned long)((10)*(16000000/4000.0)));
  8613  0264  3034               	movlw	52
  8614  0265  0020               	movlb	0	; select bank0
  8615  0266  00DC               	movwf	??_main+1
  8616  0267  30F1               	movlw	241
  8617  0268  00DB               	movwf	??_main
  8618  0269                     u5907:	
  8619  0269  0BDB               	decfsz	??_main,f
  8620  026A  2A69               	goto	u5907
  8621  026B  0BDC               	decfsz	??_main+1,f
  8622  026C  2A69               	goto	u5907
  8623  026D  3200               	nop2
  8624                           
  8625                           ;Multi_RX_testjig_v2.c: 757: if(RF1 == 1 && RF0 == 1)
  8626  026E  0025               	movlb	5	; select bank5
  8627  026F  188C               	btfsc	12,1	;volatile
  8628  0270  1C0C               	btfss	12,0	;volatile
  8629  0271  2B61               	goto	l4540
  8630                           
  8631                           ;Multi_RX_testjig_v2.c: 758: {
  8632                           ;Multi_RX_testjig_v2.c: 759: TX_one(0x40);
  8633  0272  3040               	movlw	64
  8634  0273  3188  202E  3180   	fcall	_TX_one
  8635                           
  8636                           ;Multi_RX_testjig_v2.c: 760: if(RX_one() == 0x4A)
  8637  0276  3188  2054  3180   	fcall	_RX_one
  8638  0279  3A4A               	xorlw	74
  8639  027A  1D03               	skipz
  8640  027B  2B59               	goto	l4538
  8641                           
  8642                           ;Multi_RX_testjig_v2.c: 761: {
  8643                           ;Multi_RX_testjig_v2.c: 762: _delay((unsigned long)((10)*(16000000/4000.0)));
  8644  027C  3034               	movlw	52
  8645  027D  0020               	movlb	0	; select bank0
  8646  027E  00DC               	movwf	??_main+1
  8647  027F  30F1               	movlw	241
  8648  0280  00DB               	movwf	??_main
  8649  0281                     u5917:	
  8650  0281  0BDB               	decfsz	??_main,f
  8651  0282  2A81               	goto	u5917
  8652  0283  0BDC               	decfsz	??_main+1,f
  8653  0284  2A81               	goto	u5917
  8654  0285  3200               	nop2
  8655                           
  8656                           ;Multi_RX_testjig_v2.c: 763: if(RF1 == 0 && RF0 == 1)
  8657  0286  0025               	movlb	5	; select bank5
  8658  0287  1C8C               	btfss	12,1	;volatile
  8659  0288  1C0C               	btfss	12,0	;volatile
  8660  0289  2B51               	goto	l4536
  8661                           
  8662                           ;Multi_RX_testjig_v2.c: 764: {
  8663                           ;Multi_RX_testjig_v2.c: 765: TX_one(0x41);
  8664  028A  3041               	movlw	65
  8665  028B  3188  202E  3180   	fcall	_TX_one
  8666                           
  8667                           ;Multi_RX_testjig_v2.c: 766: if(RX_one() == 0x4A)
  8668  028E  3188  2054  3180   	fcall	_RX_one
  8669  0291  3A4A               	xorlw	74
  8670  0292  1D03               	skipz
  8671  0293  2B49               	goto	l4534
  8672                           
  8673                           ;Multi_RX_testjig_v2.c: 767: {
  8674                           ;Multi_RX_testjig_v2.c: 768: LATB5 = 1;
  8675  0294  0022               	movlb	2	; select bank2
  8676  0295  168D               	bsf	13,5	;volatile
  8677                           
  8678                           ;Multi_RX_testjig_v2.c: 769: _delay((unsigned long)((50)*(16000000/4000.0)));
  8679  0296  3002               	movlw	2
  8680  0297  0020               	movlb	0	; select bank0
  8681  0298  00DD               	movwf	??_main+2
  8682  0299  3004               	movlw	4
  8683  029A  00DC               	movwf	??_main+1
  8684  029B  30BA               	movlw	186
  8685  029C  00DB               	movwf	??_main
  8686  029D                     u5927:	
  8687  029D  0BDB               	decfsz	??_main,f
  8688  029E  2A9D               	goto	u5927
  8689  029F  0BDC               	decfsz	??_main+1,f
  8690  02A0  2A9D               	goto	u5927
  8691  02A1  0BDD               	decfsz	??_main+2,f
  8692  02A2  2A9D               	goto	u5927
  8693  02A3  0000               	nop
  8694                           
  8695                           ;Multi_RX_testjig_v2.c: 770: TX_one(0x40);
  8696  02A4  3040               	movlw	64
  8697  02A5  3188  202E  3180   	fcall	_TX_one
  8698                           
  8699                           ;Multi_RX_testjig_v2.c: 771: if(RX_one() == 0x4A)
  8700  02A8  3188  2054  3180   	fcall	_RX_one
  8701  02AB  3A4A               	xorlw	74
  8702  02AC  1D03               	skipz
  8703  02AD  2B41               	goto	l4532
  8704                           
  8705                           ;Multi_RX_testjig_v2.c: 772: {
  8706                           ;Multi_RX_testjig_v2.c: 773: _delay((unsigned long)((50)*(16000000/4000.0)));
  8707  02AE  3002               	movlw	2
  8708  02AF  0020               	movlb	0	; select bank0
  8709  02B0  00DD               	movwf	??_main+2
  8710  02B1  3004               	movlw	4
  8711  02B2  00DC               	movwf	??_main+1
  8712  02B3  30BA               	movlw	186
  8713  02B4  00DB               	movwf	??_main
  8714  02B5                     u5937:	
  8715  02B5  0BDB               	decfsz	??_main,f
  8716  02B6  2AB5               	goto	u5937
  8717  02B7  0BDC               	decfsz	??_main+1,f
  8718  02B8  2AB5               	goto	u5937
  8719  02B9  0BDD               	decfsz	??_main+2,f
  8720  02BA  2AB5               	goto	u5937
  8721  02BB  0000               	nop
  8722                           
  8723                           ;Multi_RX_testjig_v2.c: 774: tj_timer = 1500;
  8724  02BC  30DC               	movlw	220
  8725  02BD  0021               	movlb	1	; select bank1
  8726  02BE  00AC               	movwf	_tj_timer^(0+128)
  8727  02BF  3005               	movlw	5
  8728  02C0  00AD               	movwf	(_tj_timer^(0+128)+1)
  8729  02C1  2AC5               	goto	l4490
  8730  02C2                     l4492:	
  8731  02C2  0025               	movlb	5	; select bank5
  8732  02C3  188C               	btfsc	12,1	;volatile
  8733  02C4  2ACA               	goto	l368
  8734  02C5                     l4490:	
  8735                           ;Multi_RX_testjig_v2.c: 775: while(tj_timer && RF1 == 0);
  8736                           
  8737  02C5  0021               	movlb	1	; select bank1
  8738  02C6  082C               	movf	_tj_timer^(0+128),w
  8739  02C7  042D               	iorwf	(_tj_timer+1)^(0+128),w
  8740  02C8  1D03               	btfss	3,2
  8741  02C9  2AC2               	goto	l4492
  8742  02CA                     l368:	
  8743                           
  8744                           ;Multi_RX_testjig_v2.c: 776: if(RF1 == 1 && RF0 == 1)
  8745  02CA  0025               	movlb	5	; select bank5
  8746  02CB  188C               	btfsc	12,1	;volatile
  8747  02CC  1C0C               	btfss	12,0	;volatile
  8748  02CD  2B36               	goto	l4528
  8749                           
  8750                           ;Multi_RX_testjig_v2.c: 777: {
  8751                           ;Multi_RX_testjig_v2.c: 778: LATB5 = 0;
  8752  02CE  0022               	movlb	2	; select bank2
  8753  02CF  128D               	bcf	13,5	;volatile
  8754                           
  8755                           ;Multi_RX_testjig_v2.c: 779: TX_one(0x41);
  8756  02D0  3041               	movlw	65
  8757  02D1  3188  202E  3180   	fcall	_TX_one
  8758                           
  8759                           ;Multi_RX_testjig_v2.c: 780: RX_one();
  8760  02D4  3188  2054  3180   	fcall	_RX_one
  8761                           
  8762                           ;Multi_RX_testjig_v2.c: 781: _delay((unsigned long)((150)*(16000000/4000.0)));
  8763  02D7  3004               	movlw	4
  8764  02D8  0020               	movlb	0	; select bank0
  8765  02D9  00DD               	movwf	??_main+2
  8766  02DA  300C               	movlw	12
  8767  02DB  00DC               	movwf	??_main+1
  8768  02DC  3035               	movlw	53
  8769  02DD  00DB               	movwf	??_main
  8770  02DE                     u5947:	
  8771  02DE  0BDB               	decfsz	??_main,f
  8772  02DF  2ADE               	goto	u5947
  8773  02E0  0BDC               	decfsz	??_main+1,f
  8774  02E1  2ADE               	goto	u5947
  8775  02E2  0BDD               	decfsz	??_main+2,f
  8776  02E3  2ADE               	goto	u5947
  8777  02E4  3200               	nop2
  8778                           
  8779                           ;Multi_RX_testjig_v2.c: 782: TX_one(0x40);
  8780  02E5  3040               	movlw	64
  8781  02E6  3188  202E  3180   	fcall	_TX_one
  8782                           
  8783                           ;Multi_RX_testjig_v2.c: 783: RX_one();
  8784  02E9  3188  2054  3180   	fcall	_RX_one
  8785                           
  8786                           ;Multi_RX_testjig_v2.c: 784: _delay((unsigned long)((20)*(16000000/4000.0)));
  8787  02EC  3068               	movlw	104
  8788  02ED  0020               	movlb	0	; select bank0
  8789  02EE  00DC               	movwf	??_main+1
  8790  02EF  30E4               	movlw	228
  8791  02F0  00DB               	movwf	??_main
  8792  02F1                     u5957:	
  8793  02F1  0BDB               	decfsz	??_main,f
  8794  02F2  2AF1               	goto	u5957
  8795  02F3  0BDC               	decfsz	??_main+1,f
  8796  02F4  2AF1               	goto	u5957
  8797  02F5  0000               	nop
  8798                           
  8799                           ;Multi_RX_testjig_v2.c: 785: if(RF1 == 0 && RF0 == 1)
  8800  02F6  0025               	movlb	5	; select bank5
  8801  02F7  1C8C               	btfss	12,1	;volatile
  8802  02F8  1C0C               	btfss	12,0	;volatile
  8803  02F9  2B2E               	goto	l4526
  8804                           
  8805                           ;Multi_RX_testjig_v2.c: 786: {
  8806                           ;Multi_RX_testjig_v2.c: 787: TX_one(0x41);
  8807  02FA  3041               	movlw	65
  8808  02FB  3188  202E  3180   	fcall	_TX_one
  8809                           
  8810                           ;Multi_RX_testjig_v2.c: 788: if(RX_one() == 0x4A)
  8811  02FE  3188  2054  3180   	fcall	_RX_one
  8812  0301  3A4A               	xorlw	74
  8813  0302  1D03               	skipz
  8814  0303  2B26               	goto	l4524
  8815                           
  8816                           ;Multi_RX_testjig_v2.c: 789: {
  8817                           ;Multi_RX_testjig_v2.c: 790: _delay((unsigned long)((10)*(16000000/4000.0)));
  8818  0304  3034               	movlw	52
  8819  0305  0020               	movlb	0	; select bank0
  8820  0306  00DC               	movwf	??_main+1
  8821  0307  30F1               	movlw	241
  8822  0308  00DB               	movwf	??_main
  8823  0309                     u5967:	
  8824  0309  0BDB               	decfsz	??_main,f
  8825  030A  2B09               	goto	u5967
  8826  030B  0BDC               	decfsz	??_main+1,f
  8827  030C  2B09               	goto	u5967
  8828  030D  3200               	nop2
  8829                           
  8830                           ;Multi_RX_testjig_v2.c: 791: if(RF1 == 1 && RF0 == 1)
  8831  030E  0025               	movlb	5	; select bank5
  8832  030F  188C               	btfsc	12,1	;volatile
  8833  0310  1C0C               	btfss	12,0	;volatile
  8834  0311  2B1E               	goto	l4522
  8835                           
  8836                           ;Multi_RX_testjig_v2.c: 792: {
  8837                           ;Multi_RX_testjig_v2.c: 793: print_screen("Test CH2", "ok");
  8838  0312  3020               	movlw	low (STR_51| (0+32768))
  8839  0313  00F4               	movwf	print_screen@top
  8840  0314  3093               	movlw	high (STR_51| (0+32768))
  8841  0315  00F5               	movwf	print_screen@top+1
  8842  0316  30D9               	movlw	low (STR_54| (0+32768))
  8843  0317  00F6               	movwf	print_screen@bottom
  8844  0318  3093               	movlw	high (STR_54| (0+32768))
  8845  0319  00F7               	movwf	print_screen@bottom+1
  8846  031A  318A  22D2  3180   	fcall	_print_screen
  8847                           
  8848                           ;Multi_RX_testjig_v2.c: 794: }
  8849  031D  2B74               	goto	l382
  8850  031E                     l4522:	
  8851                           
  8852                           ;Multi_RX_testjig_v2.c: 795: else
  8853                           ;Multi_RX_testjig_v2.c: 796: print_error("CH2 - OFF", " Error 2");
  8854  031E  30DD               	movlw	low (STR_55| (0+32768))
  8855  031F  00F8               	movwf	print_error@top
  8856  0320  3092               	movlw	high (STR_55| (0+32768))
  8857  0321  00F9               	movwf	print_error@top+1
  8858  0322  3017               	movlw	low (STR_42| (0+32768))
  8859  0323  00FA               	movwf	print_error@bottom
  8860  0324  3093               	movlw	high (STR_42| (0+32768))
  8861  0325  2B70               	goto	L3
  8862  0326                     l4524:	
  8863                           
  8864                           ;Multi_RX_testjig_v2.c: 798: else
  8865                           ;Multi_RX_testjig_v2.c: 799: print_error("Comms Error", " 5");
  8866  0326  3079               	movlw	low (STR_23| (0+32768))
  8867  0327  00F8               	movwf	print_error@top
  8868  0328  3092               	movlw	high (STR_23| (0+32768))
  8869  0329  00F9               	movwf	print_error@top+1
  8870  032A  30CA               	movlw	low (STR_58| (0+32768))
  8871  032B  00FA               	movwf	print_error@bottom
  8872  032C  3093               	movlw	high (STR_58| (0+32768))
  8873  032D  2B70               	goto	L3
  8874  032E                     l4526:	
  8875                           
  8876                           ;Multi_RX_testjig_v2.c: 801: else
  8877                           ;Multi_RX_testjig_v2.c: 802: print_error("CH2 - ON", "PTC Error reset");
  8878  032E  303B               	movlw	low (STR_59| (0+32768))
  8879  032F  00F8               	movwf	print_error@top
  8880  0330  3093               	movlw	high (STR_59| (0+32768))
  8881  0331  00F9               	movwf	print_error@top+1
  8882  0332  30EF               	movlw	low (STR_60| (0+32768))
  8883  0333  00FA               	movwf	print_error@bottom
  8884  0334  3090               	movlw	high (STR_60| (0+32768))
  8885  0335  2B70               	goto	L3
  8886  0336                     l4528:	
  8887                           
  8888                           ;Multi_RX_testjig_v2.c: 804: else
  8889                           ;Multi_RX_testjig_v2.c: 805: {
  8890                           ;Multi_RX_testjig_v2.c: 806: trip_current = get_30v_current();
  8891  0336  318C  2413  3180   	fcall	_get_30v_current
  8892                           
  8893                           ;Multi_RX_testjig_v2.c: 807: print_error("CH2 - ON", "PTC Error trip");
  8894  0339  303B               	movlw	low (STR_59| (0+32768))
  8895  033A  00F8               	movwf	print_error@top
  8896  033B  3093               	movlw	high (STR_59| (0+32768))
  8897  033C  00F9               	movwf	print_error@top+1
  8898  033D  302C               	movlw	low (STR_62| (0+32768))
  8899  033E  00FA               	movwf	print_error@bottom
  8900  033F  3091               	movlw	high (STR_62| (0+32768))
  8901  0340  2B70               	goto	L3
  8902  0341                     l4532:	
  8903                           
  8904                           ;Multi_RX_testjig_v2.c: 810: else
  8905                           ;Multi_RX_testjig_v2.c: 811: print_error("Comms Error", " 6a");
  8906  0341  3079               	movlw	low (STR_23| (0+32768))
  8907  0342  00F8               	movwf	print_error@top
  8908  0343  3092               	movlw	high (STR_23| (0+32768))
  8909  0344  00F9               	movwf	print_error@top+1
  8910  0345  30B4               	movlw	low (STR_64| (0+32768))
  8911  0346  00FA               	movwf	print_error@bottom
  8912  0347  3093               	movlw	high (STR_64| (0+32768))
  8913  0348  2B70               	goto	L3
  8914  0349                     l4534:	
  8915                           
  8916                           ;Multi_RX_testjig_v2.c: 813: else
  8917                           ;Multi_RX_testjig_v2.c: 814: print_error("Comms Error", " 6b");
  8918  0349  3079               	movlw	low (STR_23| (0+32768))
  8919  034A  00F8               	movwf	print_error@top
  8920  034B  3092               	movlw	high (STR_23| (0+32768))
  8921  034C  00F9               	movwf	print_error@top+1
  8922  034D  30BC               	movlw	low (STR_66| (0+32768))
  8923  034E  00FA               	movwf	print_error@bottom
  8924  034F  3093               	movlw	high (STR_66| (0+32768))
  8925  0350  2B70               	goto	L3
  8926  0351                     l4536:	
  8927                           
  8928                           ;Multi_RX_testjig_v2.c: 816: else
  8929                           ;Multi_RX_testjig_v2.c: 817: print_error("CH2 - ON", " Error");
  8930  0351  303B               	movlw	low (STR_59| (0+32768))
  8931  0352  00F8               	movwf	print_error@top
  8932  0353  3093               	movlw	high (STR_59| (0+32768))
  8933  0354  00F9               	movwf	print_error@top+1
  8934  0355  30A1               	movlw	low ((STR_12+4)| (0+32768))
  8935  0356  00FA               	movwf	print_error@bottom
  8936  0357  3092               	movlw	high ((STR_12+4)| (0+32768))
  8937  0358  2B70               	goto	L3
  8938  0359                     l4538:	
  8939                           
  8940                           ;Multi_RX_testjig_v2.c: 819: else
  8941                           ;Multi_RX_testjig_v2.c: 820: print_error("Comms Error", " 6");
  8942  0359  3079               	movlw	low (STR_23| (0+32768))
  8943  035A  00F8               	movwf	print_error@top
  8944  035B  3092               	movlw	high (STR_23| (0+32768))
  8945  035C  00F9               	movwf	print_error@top+1
  8946  035D  30CD               	movlw	low (STR_70| (0+32768))
  8947  035E  00FA               	movwf	print_error@bottom
  8948  035F  3093               	movlw	high (STR_70| (0+32768))
  8949  0360  2B70               	goto	L3
  8950  0361                     l4540:	
  8951                           
  8952                           ;Multi_RX_testjig_v2.c: 822: else
  8953                           ;Multi_RX_testjig_v2.c: 823: print_error("CH2 - OFF", " Error 1");
  8954  0361  30DD               	movlw	low (STR_55| (0+32768))
  8955  0362  00F8               	movwf	print_error@top
  8956  0363  3092               	movlw	high (STR_55| (0+32768))
  8957  0364  00F9               	movwf	print_error@top+1
  8958  0365  300E               	movlw	low (STR_50| (0+32768))
  8959  0366  00FA               	movwf	print_error@bottom
  8960  0367  3093               	movlw	high (STR_50| (0+32768))
  8961  0368  2B70               	goto	L3
  8962  0369                     l4542:	
  8963                           
  8964                           ;Multi_RX_testjig_v2.c: 825: else
  8965                           ;Multi_RX_testjig_v2.c: 826: print_error("Comms Error", " 7");
  8966  0369  3079               	movlw	low (STR_23| (0+32768))
  8967  036A  00F8               	movwf	print_error@top
  8968  036B  3092               	movlw	high (STR_23| (0+32768))
  8969  036C  00F9               	movwf	print_error@top+1
  8970  036D  30D0               	movlw	low (STR_74| (0+32768))
  8971  036E  00FA               	movwf	print_error@bottom
  8972  036F  3093               	movlw	high (STR_74| (0+32768))
  8973  0370                     L3:	
  8974  0370  00FB               	movwf	print_error@bottom+1
  8975  0371  318A  22F4  3180   	fcall	_print_error
  8976  0374                     l382:	
  8977                           
  8978                           ;Multi_RX_testjig_v2.c: 830: print_screen("Test CH3", "");
  8979  0374  3029               	movlw	low (STR_75| (0+32768))
  8980  0375  00F4               	movwf	print_screen@top
  8981  0376  3093               	movlw	high (STR_75| (0+32768))
  8982  0377  00F5               	movwf	print_screen@top+1
  8983  0378  30AE               	movlw	low ((STR_153+15)| (0+32768))
  8984  0379  00F6               	movwf	print_screen@bottom
  8985  037A  3090               	movlw	high ((STR_153+15)| (0+32768))
  8986  037B  00F7               	movwf	print_screen@bottom+1
  8987  037C  318A  22D2  3180   	fcall	_print_screen
  8988                           
  8989                           ;Multi_RX_testjig_v2.c: 831: TX_one(0x51);
  8990  037F  3051               	movlw	81
  8991  0380  3188  202E  3180   	fcall	_TX_one
  8992                           
  8993                           ;Multi_RX_testjig_v2.c: 832: if(RX_one() == 0x5A)
  8994  0383  3188  2054  3180   	fcall	_RX_one
  8995  0386  3A5A               	xorlw	90
  8996  0387  1D03               	skipz
  8997  0388  2C8B               	goto	l4624
  8998                           
  8999                           ;Multi_RX_testjig_v2.c: 833: {
  9000                           ;Multi_RX_testjig_v2.c: 834: _delay((unsigned long)((10)*(16000000/4000.0)));
  9001  0389  3034               	movlw	52
  9002  038A  0020               	movlb	0	; select bank0
  9003  038B  00DC               	movwf	??_main+1
  9004  038C  30F1               	movlw	241
  9005  038D  00DB               	movwf	??_main
  9006  038E                     u5977:	
  9007  038E  0BDB               	decfsz	??_main,f
  9008  038F  2B8E               	goto	u5977
  9009  0390  0BDC               	decfsz	??_main+1,f
  9010  0391  2B8E               	goto	u5977
  9011  0392  3200               	nop2
  9012                           
  9013                           ;Multi_RX_testjig_v2.c: 835: if(RF1 == 1 && RF0 == 1)
  9014  0393  0025               	movlb	5	; select bank5
  9015  0394  188C               	btfsc	12,1	;volatile
  9016  0395  1C0C               	btfss	12,0	;volatile
  9017  0396  2C83               	goto	l4622
  9018                           
  9019                           ;Multi_RX_testjig_v2.c: 836: {
  9020                           ;Multi_RX_testjig_v2.c: 837: TX_one(0x50);
  9021  0397  3050               	movlw	80
  9022  0398  3188  202E  3180   	fcall	_TX_one
  9023                           
  9024                           ;Multi_RX_testjig_v2.c: 838: if(RX_one() == 0x5A)
  9025  039B  3188  2054  3180   	fcall	_RX_one
  9026  039E  3A5A               	xorlw	90
  9027  039F  1D03               	skipz
  9028  03A0  2C7B               	goto	l4620
  9029                           
  9030                           ;Multi_RX_testjig_v2.c: 839: {
  9031                           ;Multi_RX_testjig_v2.c: 840: _delay((unsigned long)((10)*(16000000/4000.0)));
  9032  03A1  3034               	movlw	52
  9033  03A2  0020               	movlb	0	; select bank0
  9034  03A3  00DC               	movwf	??_main+1
  9035  03A4  30F1               	movlw	241
  9036  03A5  00DB               	movwf	??_main
  9037  03A6                     u5987:	
  9038  03A6  0BDB               	decfsz	??_main,f
  9039  03A7  2BA6               	goto	u5987
  9040  03A8  0BDC               	decfsz	??_main+1,f
  9041  03A9  2BA6               	goto	u5987
  9042  03AA  3200               	nop2
  9043                           
  9044                           ;Multi_RX_testjig_v2.c: 841: if(RF1 == 1 && RF0 == 0)
  9045  03AB  0025               	movlb	5	; select bank5
  9046  03AC  188C               	btfsc	12,1	;volatile
  9047  03AD  180C               	btfsc	12,0	;volatile
  9048  03AE  2C73               	goto	l4618
  9049                           
  9050                           ;Multi_RX_testjig_v2.c: 842: {
  9051                           ;Multi_RX_testjig_v2.c: 843: TX_one(0x51);
  9052  03AF  3051               	movlw	81
  9053  03B0  3188  202E  3180   	fcall	_TX_one
  9054                           
  9055                           ;Multi_RX_testjig_v2.c: 844: if(RX_one() == 0x5A)
  9056  03B3  3188  2054  3180   	fcall	_RX_one
  9057  03B6  3A5A               	xorlw	90
  9058  03B7  1D03               	skipz
  9059  03B8  2C6B               	goto	l4616
  9060                           
  9061                           ;Multi_RX_testjig_v2.c: 845: {
  9062                           ;Multi_RX_testjig_v2.c: 846: LATA6 = 1;
  9063  03B9  0022               	movlb	2	; select bank2
  9064  03BA  170C               	bsf	12,6	;volatile
  9065                           
  9066                           ;Multi_RX_testjig_v2.c: 847: _delay((unsigned long)((50)*(16000000/4000.0)));
  9067  03BB  3002               	movlw	2
  9068  03BC  0020               	movlb	0	; select bank0
  9069  03BD  00DD               	movwf	??_main+2
  9070  03BE  3004               	movlw	4
  9071  03BF  00DC               	movwf	??_main+1
  9072  03C0  30BA               	movlw	186
  9073  03C1  00DB               	movwf	??_main
  9074  03C2                     u5997:	
  9075  03C2  0BDB               	decfsz	??_main,f
  9076  03C3  2BC2               	goto	u5997
  9077  03C4  0BDC               	decfsz	??_main+1,f
  9078  03C5  2BC2               	goto	u5997
  9079  03C6  0BDD               	decfsz	??_main+2,f
  9080  03C7  2BC2               	goto	u5997
  9081  03C8  0000               	nop
  9082                           
  9083                           ;Multi_RX_testjig_v2.c: 848: TX_one(0x50);
  9084  03C9  3050               	movlw	80
  9085  03CA  3188  202E  3180   	fcall	_TX_one
  9086                           
  9087                           ;Multi_RX_testjig_v2.c: 849: if(RX_one() == 0x5A)
  9088  03CD  3188  2054  3180   	fcall	_RX_one
  9089  03D0  3A5A               	xorlw	90
  9090  03D1  1D03               	skipz
  9091  03D2  2C63               	goto	l4614
  9092                           
  9093                           ;Multi_RX_testjig_v2.c: 850: {
  9094                           ;Multi_RX_testjig_v2.c: 851: _delay((unsigned long)((50)*(16000000/4000.0)));
  9095  03D3  3002               	movlw	2
  9096  03D4  0020               	movlb	0	; select bank0
  9097  03D5  00DD               	movwf	??_main+2
  9098  03D6  3004               	movlw	4
  9099  03D7  00DC               	movwf	??_main+1
  9100  03D8  30BA               	movlw	186
  9101  03D9  00DB               	movwf	??_main
  9102  03DA                     u6007:	
  9103  03DA  0BDB               	decfsz	??_main,f
  9104  03DB  2BDA               	goto	u6007
  9105  03DC  0BDC               	decfsz	??_main+1,f
  9106  03DD  2BDA               	goto	u6007
  9107  03DE  0BDD               	decfsz	??_main+2,f
  9108  03DF  2BDA               	goto	u6007
  9109  03E0  0000               	nop
  9110                           
  9111                           ;Multi_RX_testjig_v2.c: 852: tj_timer = 1500;
  9112  03E1  30DC               	movlw	220
  9113  03E2  0021               	movlb	1	; select bank1
  9114  03E3  00AC               	movwf	_tj_timer^(0+128)
  9115  03E4  3005               	movlw	5
  9116  03E5  00AD               	movwf	(_tj_timer^(0+128)+1)
  9117  03E6  2BEA               	goto	l4574
  9118  03E7                     l4576:	
  9119  03E7  0025               	movlb	5	; select bank5
  9120  03E8  180C               	btfsc	12,0	;volatile
  9121  03E9  2BEF               	goto	l393
  9122  03EA                     l4574:	
  9123                           ;Multi_RX_testjig_v2.c: 853: while(tj_timer && RF0 == 0);
  9124                           
  9125  03EA  0021               	movlb	1	; select bank1
  9126  03EB  082C               	movf	_tj_timer^(0+128),w
  9127  03EC  042D               	iorwf	(_tj_timer+1)^(0+128),w
  9128  03ED  1D03               	btfss	3,2
  9129  03EE  2BE7               	goto	l4576
  9130  03EF                     l393:	
  9131                           
  9132                           ;Multi_RX_testjig_v2.c: 854: if(RF1 == 1 && RF0 == 1)
  9133  03EF  0025               	movlb	5	; select bank5
  9134  03F0  188C               	btfsc	12,1	;volatile
  9135  03F1  1C0C               	btfss	12,0	;volatile
  9136  03F2  2C5B               	goto	l4612
  9137                           
  9138                           ;Multi_RX_testjig_v2.c: 855: {
  9139                           ;Multi_RX_testjig_v2.c: 856: LATA6 = 0;
  9140  03F3  0022               	movlb	2	; select bank2
  9141  03F4  130C               	bcf	12,6	;volatile
  9142                           
  9143                           ;Multi_RX_testjig_v2.c: 857: TX_one(0x51);
  9144  03F5  3051               	movlw	81
  9145  03F6  3188  202E  3180   	fcall	_TX_one
  9146                           
  9147                           ;Multi_RX_testjig_v2.c: 858: RX_one();
  9148  03F9  3188  2054  3180   	fcall	_RX_one
  9149                           
  9150                           ;Multi_RX_testjig_v2.c: 859: _delay((unsigned long)((150)*(16000000/4000.0)));
  9151  03FC  3004               	movlw	4
  9152  03FD  0020               	movlb	0	; select bank0
  9153  03FE  00DD               	movwf	??_main+2
  9154  03FF  300C               	movlw	12
  9155  0400  00DC               	movwf	??_main+1
  9156  0401  3035               	movlw	53
  9157  0402  00DB               	movwf	??_main
  9158  0403                     u6017:	
  9159  0403  0BDB               	decfsz	??_main,f
  9160  0404  2C03               	goto	u6017
  9161  0405  0BDC               	decfsz	??_main+1,f
  9162  0406  2C03               	goto	u6017
  9163  0407  0BDD               	decfsz	??_main+2,f
  9164  0408  2C03               	goto	u6017
  9165  0409  3200               	nop2
  9166                           
  9167                           ;Multi_RX_testjig_v2.c: 860: TX_one(0x50);
  9168  040A  3050               	movlw	80
  9169  040B  3188  202E  3180   	fcall	_TX_one
  9170                           
  9171                           ;Multi_RX_testjig_v2.c: 861: RX_one();
  9172  040E  3188  2054  3180   	fcall	_RX_one
  9173                           
  9174                           ;Multi_RX_testjig_v2.c: 862: _delay((unsigned long)((20)*(16000000/4000.0)));
  9175  0411  3068               	movlw	104
  9176  0412  0020               	movlb	0	; select bank0
  9177  0413  00DC               	movwf	??_main+1
  9178  0414  30E4               	movlw	228
  9179  0415  00DB               	movwf	??_main
  9180  0416                     u6027:	
  9181  0416  0BDB               	decfsz	??_main,f
  9182  0417  2C16               	goto	u6027
  9183  0418  0BDC               	decfsz	??_main+1,f
  9184  0419  2C16               	goto	u6027
  9185  041A  0000               	nop
  9186                           
  9187                           ;Multi_RX_testjig_v2.c: 863: if(RF1 == 1 && RF0 == 0)
  9188  041B  0025               	movlb	5	; select bank5
  9189  041C  188C               	btfsc	12,1	;volatile
  9190  041D  180C               	btfsc	12,0	;volatile
  9191  041E  2C53               	goto	l4610
  9192                           
  9193                           ;Multi_RX_testjig_v2.c: 864: {
  9194                           ;Multi_RX_testjig_v2.c: 865: TX_one(0x51);
  9195  041F  3051               	movlw	81
  9196  0420  3188  202E  3180   	fcall	_TX_one
  9197                           
  9198                           ;Multi_RX_testjig_v2.c: 866: if(RX_one() == 0x5A)
  9199  0423  3188  2054  3180   	fcall	_RX_one
  9200  0426  3A5A               	xorlw	90
  9201  0427  1D03               	skipz
  9202  0428  2C4B               	goto	l4608
  9203                           
  9204                           ;Multi_RX_testjig_v2.c: 867: {
  9205                           ;Multi_RX_testjig_v2.c: 868: _delay((unsigned long)((10)*(16000000/4000.0)));
  9206  0429  3034               	movlw	52
  9207  042A  0020               	movlb	0	; select bank0
  9208  042B  00DC               	movwf	??_main+1
  9209  042C  30F1               	movlw	241
  9210  042D  00DB               	movwf	??_main
  9211  042E                     u6037:	
  9212  042E  0BDB               	decfsz	??_main,f
  9213  042F  2C2E               	goto	u6037
  9214  0430  0BDC               	decfsz	??_main+1,f
  9215  0431  2C2E               	goto	u6037
  9216  0432  3200               	nop2
  9217                           
  9218                           ;Multi_RX_testjig_v2.c: 869: if(RF1 == 1 && RF0 == 1)
  9219  0433  0025               	movlb	5	; select bank5
  9220  0434  188C               	btfsc	12,1	;volatile
  9221  0435  1C0C               	btfss	12,0	;volatile
  9222  0436  2C43               	goto	l4606
  9223                           
  9224                           ;Multi_RX_testjig_v2.c: 870: {
  9225                           ;Multi_RX_testjig_v2.c: 871: print_screen("Test CH3", "ok");
  9226  0437  3029               	movlw	low (STR_75| (0+32768))
  9227  0438  00F4               	movwf	print_screen@top
  9228  0439  3093               	movlw	high (STR_75| (0+32768))
  9229  043A  00F5               	movwf	print_screen@top+1
  9230  043B  30D9               	movlw	low (STR_54| (0+32768))
  9231  043C  00F6               	movwf	print_screen@bottom
  9232  043D  3093               	movlw	high (STR_54| (0+32768))
  9233  043E  00F7               	movwf	print_screen@bottom+1
  9234  043F  318A  22D2  3180   	fcall	_print_screen
  9235                           
  9236                           ;Multi_RX_testjig_v2.c: 872: }
  9237  0442  2C96               	goto	l4626
  9238  0443                     l4606:	
  9239                           
  9240                           ;Multi_RX_testjig_v2.c: 873: else
  9241                           ;Multi_RX_testjig_v2.c: 874: print_error("CH3 - OFF", " Error 2");
  9242  0443  30E7               	movlw	low (STR_79| (0+32768))
  9243  0444  00F8               	movwf	print_error@top
  9244  0445  3092               	movlw	high (STR_79| (0+32768))
  9245  0446  00F9               	movwf	print_error@top+1
  9246  0447  3017               	movlw	low (STR_42| (0+32768))
  9247  0448  00FA               	movwf	print_error@bottom
  9248  0449  3093               	movlw	high (STR_42| (0+32768))
  9249  044A  2C92               	goto	L4
  9250  044B                     l4608:	
  9251                           
  9252                           ;Multi_RX_testjig_v2.c: 876: else
  9253                           ;Multi_RX_testjig_v2.c: 877: print_error("Comms Error", " 8");
  9254  044B  3079               	movlw	low (STR_23| (0+32768))
  9255  044C  00F8               	movwf	print_error@top
  9256  044D  3092               	movlw	high (STR_23| (0+32768))
  9257  044E  00F9               	movwf	print_error@top+1
  9258  044F  30D3               	movlw	low (STR_82| (0+32768))
  9259  0450  00FA               	movwf	print_error@bottom
  9260  0451  3093               	movlw	high (STR_82| (0+32768))
  9261  0452  2C92               	goto	L4
  9262  0453                     l4610:	
  9263                           
  9264                           ;Multi_RX_testjig_v2.c: 879: else
  9265                           ;Multi_RX_testjig_v2.c: 880: print_error("CH3 - ON", "PTC Error reset");
  9266  0453  3044               	movlw	low (STR_83| (0+32768))
  9267  0454  00F8               	movwf	print_error@top
  9268  0455  3093               	movlw	high (STR_83| (0+32768))
  9269  0456  00F9               	movwf	print_error@top+1
  9270  0457  30EF               	movlw	low (STR_60| (0+32768))
  9271  0458  00FA               	movwf	print_error@bottom
  9272  0459  3090               	movlw	high (STR_60| (0+32768))
  9273  045A  2C92               	goto	L4
  9274  045B                     l4612:	
  9275                           
  9276                           ;Multi_RX_testjig_v2.c: 882: else
  9277                           ;Multi_RX_testjig_v2.c: 883: print_error("CH3 - ON", "PTC Error trip");
  9278  045B  3044               	movlw	low (STR_83| (0+32768))
  9279  045C  00F8               	movwf	print_error@top
  9280  045D  3093               	movlw	high (STR_83| (0+32768))
  9281  045E  00F9               	movwf	print_error@top+1
  9282  045F  302C               	movlw	low (STR_62| (0+32768))
  9283  0460  00FA               	movwf	print_error@bottom
  9284  0461  3091               	movlw	high (STR_62| (0+32768))
  9285  0462  2C92               	goto	L4
  9286  0463                     l4614:	
  9287                           
  9288                           ;Multi_RX_testjig_v2.c: 885: else
  9289                           ;Multi_RX_testjig_v2.c: 886: print_error("Comms Error", " 8b");
  9290  0463  3079               	movlw	low (STR_23| (0+32768))
  9291  0464  00F8               	movwf	print_error@top
  9292  0465  3092               	movlw	high (STR_23| (0+32768))
  9293  0466  00F9               	movwf	print_error@top+1
  9294  0467  30C0               	movlw	low (STR_88| (0+32768))
  9295  0468  00FA               	movwf	print_error@bottom
  9296  0469  3093               	movlw	high (STR_88| (0+32768))
  9297  046A  2C92               	goto	L4
  9298  046B                     l4616:	
  9299                           
  9300                           ;Multi_RX_testjig_v2.c: 888: else
  9301                           ;Multi_RX_testjig_v2.c: 889: print_error("Comms Error", " 8a");
  9302  046B  3079               	movlw	low (STR_23| (0+32768))
  9303  046C  00F8               	movwf	print_error@top
  9304  046D  3092               	movlw	high (STR_23| (0+32768))
  9305  046E  00F9               	movwf	print_error@top+1
  9306  046F  30B8               	movlw	low (STR_90| (0+32768))
  9307  0470  00FA               	movwf	print_error@bottom
  9308  0471  3093               	movlw	high (STR_90| (0+32768))
  9309  0472  2C92               	goto	L4
  9310  0473                     l4618:	
  9311                           
  9312                           ;Multi_RX_testjig_v2.c: 891: else
  9313                           ;Multi_RX_testjig_v2.c: 892: print_error("CH3 - ON", " Error");
  9314  0473  3044               	movlw	low (STR_83| (0+32768))
  9315  0474  00F8               	movwf	print_error@top
  9316  0475  3093               	movlw	high (STR_83| (0+32768))
  9317  0476  00F9               	movwf	print_error@top+1
  9318  0477  30A1               	movlw	low ((STR_12+4)| (0+32768))
  9319  0478  00FA               	movwf	print_error@bottom
  9320  0479  3092               	movlw	high ((STR_12+4)| (0+32768))
  9321  047A  2C92               	goto	L4
  9322  047B                     l4620:	
  9323                           
  9324                           ;Multi_RX_testjig_v2.c: 894: else
  9325                           ;Multi_RX_testjig_v2.c: 895: print_error("Comms Error", " 9");
  9326  047B  3079               	movlw	low (STR_23| (0+32768))
  9327  047C  00F8               	movwf	print_error@top
  9328  047D  3092               	movlw	high (STR_23| (0+32768))
  9329  047E  00F9               	movwf	print_error@top+1
  9330  047F  30D6               	movlw	low (STR_94| (0+32768))
  9331  0480  00FA               	movwf	print_error@bottom
  9332  0481  3093               	movlw	high (STR_94| (0+32768))
  9333  0482  2C92               	goto	L4
  9334  0483                     l4622:	
  9335                           
  9336                           ;Multi_RX_testjig_v2.c: 897: else
  9337                           ;Multi_RX_testjig_v2.c: 898: print_error("CH3 - OFF", " Error 1");
  9338  0483  30E7               	movlw	low (STR_79| (0+32768))
  9339  0484  00F8               	movwf	print_error@top
  9340  0485  3092               	movlw	high (STR_79| (0+32768))
  9341  0486  00F9               	movwf	print_error@top+1
  9342  0487  300E               	movlw	low (STR_50| (0+32768))
  9343  0488  00FA               	movwf	print_error@bottom
  9344  0489  3093               	movlw	high (STR_50| (0+32768))
  9345  048A  2C92               	goto	L4
  9346  048B                     l4624:	
  9347                           
  9348                           ;Multi_RX_testjig_v2.c: 900: else
  9349                           ;Multi_RX_testjig_v2.c: 901: print_error("Comms Error", " 10");
  9350  048B  3079               	movlw	low (STR_23| (0+32768))
  9351  048C  00F8               	movwf	print_error@top
  9352  048D  3092               	movlw	high (STR_23| (0+32768))
  9353  048E  00F9               	movwf	print_error@top+1
  9354  048F  3094               	movlw	low (STR_98| (0+32768))
  9355  0490  00FA               	movwf	print_error@bottom
  9356  0491  3093               	movlw	high (STR_98| (0+32768))
  9357  0492                     L4:	
  9358  0492  00FB               	movwf	print_error@bottom+1
  9359  0493  318A  22F4  3180   	fcall	_print_error
  9360  0496                     l4626:	
  9361                           
  9362                           ;Multi_RX_testjig_v2.c: 902: }
  9363                           ;Multi_RX_testjig_v2.c: 904: if((device_type == 0xAA)|| (device_type == 0xA1))
  9364  0496  30AA               	movlw	170
  9365  0497  0020               	movlb	0	; select bank0
  9366  0498  0667               	xorwf	main@device_type,w
  9367  0499  1903               	btfsc	3,2
  9368  049A  2C9F               	goto	l4630
  9369  049B  30A1               	movlw	161
  9370  049C  0667               	xorwf	main@device_type,w
  9371  049D  1D03               	btfss	3,2
  9372  049E  2EBC               	goto	l4794
  9373  049F                     l4630:	
  9374                           
  9375                           ;Multi_RX_testjig_v2.c: 905: {
  9376                           ;Multi_RX_testjig_v2.c: 907: print_screen("Test RF", "3v3");
  9377  049F  3078               	movlw	low (STR_99| (0+32768))
  9378  04A0  00F4               	movwf	print_screen@top
  9379  04A1  3093               	movlw	high (STR_99| (0+32768))
  9380  04A2  00F5               	movwf	print_screen@top+1
  9381  04A3  3045               	movlw	low ((STR_105+8)| (0+32768))
  9382  04A4  00F6               	movwf	print_screen@bottom
  9383  04A5  3092               	movlw	high ((STR_105+8)| (0+32768))
  9384  04A6  00F7               	movwf	print_screen@bottom+1
  9385  04A7  318A  22D2  3180   	fcall	_print_screen
  9386                           
  9387                           ;Multi_RX_testjig_v2.c: 908: TX_one(0x70);
  9388  04AA  3070               	movlw	112
  9389  04AB  3188  202E  3180   	fcall	_TX_one
  9390                           
  9391                           ;Multi_RX_testjig_v2.c: 909: RX_data = RX_one();
  9392  04AE  3188  2054  3180   	fcall	_RX_one
  9393  04B1  0020               	movlb	0	; select bank0
  9394  04B2  00E8               	movwf	main@RX_data
  9395                           
  9396                           ;Multi_RX_testjig_v2.c: 910: TX_one(0x70);
  9397  04B3  3070               	movlw	112
  9398  04B4  3188  202E  3180   	fcall	_TX_one
  9399                           
  9400                           ;Multi_RX_testjig_v2.c: 911: RX_data = RX_one();
  9401  04B7  3188  2054  3180   	fcall	_RX_one
  9402  04BA  0020               	movlb	0	; select bank0
  9403  04BB  00E8               	movwf	main@RX_data
  9404                           
  9405                           ;Multi_RX_testjig_v2.c: 912: if(RX_data == 0)
  9406  04BC  0868               	movf	main@RX_data,w
  9407  04BD  1D03               	btfss	3,2
  9408  04BE  2CC7               	goto	l4644
  9409                           
  9410                           ;Multi_RX_testjig_v2.c: 913: print_error("Comms Error", " 11");
  9411  04BF  3079               	movlw	low (STR_23| (0+32768))
  9412  04C0  00F8               	movwf	print_error@top
  9413  04C1  3092               	movlw	high (STR_23| (0+32768))
  9414  04C2  00F9               	movwf	print_error@top+1
  9415  04C3  3098               	movlw	low (STR_102| (0+32768))
  9416  04C4  00FA               	movwf	print_error@bottom
  9417  04C5  3093               	movlw	high (STR_102| (0+32768))
  9418  04C6  2CF5               	goto	L9
  9419  04C7                     l4644:	
  9420                           
  9421                           ;Multi_RX_testjig_v2.c: 914: else if(RX_data == 0xFF)
  9422  04C7  0A68               	incf	main@RX_data,w
  9423  04C8  1D03               	btfss	3,2
  9424  04C9  2CD2               	goto	l4648
  9425                           
  9426                           ;Multi_RX_testjig_v2.c: 915: print_error("Comms Error", " 12");
  9427  04CA  3079               	movlw	low (STR_23| (0+32768))
  9428  04CB  00F8               	movwf	print_error@top
  9429  04CC  3092               	movlw	high (STR_23| (0+32768))
  9430  04CD  00F9               	movwf	print_error@top+1
  9431  04CE  309C               	movlw	low (STR_104| (0+32768))
  9432  04CF  00FA               	movwf	print_error@bottom
  9433  04D0  3093               	movlw	high (STR_104| (0+32768))
  9434  04D1  2CF5               	goto	L9
  9435  04D2                     l4648:	
  9436                           
  9437                           ;Multi_RX_testjig_v2.c: 916: else if(RX_data > 179)
  9438  04D2  30B4               	movlw	180
  9439  04D3  0268               	subwf	main@RX_data,w
  9440  04D4  1C03               	skipc
  9441  04D5  2CDE               	goto	l4652
  9442                           
  9443                           ;Multi_RX_testjig_v2.c: 917: print_error("Test RF 3v3", " Error - High");
  9444  04D6  303D               	movlw	low (STR_105| (0+32768))
  9445  04D7  00F8               	movwf	print_error@top
  9446  04D8  3092               	movlw	high (STR_105| (0+32768))
  9447  04D9  00F9               	movwf	print_error@top+1
  9448  04DA  3091               	movlw	low (STR_106| (0+32768))
  9449  04DB  00FA               	movwf	print_error@bottom
  9450  04DC  3091               	movlw	high (STR_106| (0+32768))
  9451  04DD  2CF5               	goto	L9
  9452  04DE                     l4652:	
  9453                           
  9454                           ;Multi_RX_testjig_v2.c: 918: else if(RX_data < 153)
  9455  04DE  3099               	movlw	153
  9456  04DF  0268               	subwf	main@RX_data,w
  9457  04E0  1803               	skipnc
  9458  04E1  2CEA               	goto	l4656
  9459                           
  9460                           ;Multi_RX_testjig_v2.c: 919: print_error("Test RF 3v3", " Error - Micrel");
  9461  04E2  303D               	movlw	low (STR_105| (0+32768))
  9462  04E3  00F8               	movwf	print_error@top
  9463  04E4  3092               	movlw	high (STR_105| (0+32768))
  9464  04E5  00F9               	movwf	print_error@top+1
  9465  04E6  30CF               	movlw	low (STR_108| (0+32768))
  9466  04E7  00FA               	movwf	print_error@bottom
  9467  04E8  3090               	movlw	high (STR_108| (0+32768))
  9468  04E9  2CF5               	goto	L9
  9469  04EA                     l4656:	
  9470                           
  9471                           ;Multi_RX_testjig_v2.c: 920: else if(RX_data < 158)
  9472  04EA  309E               	movlw	158
  9473  04EB  0268               	subwf	main@RX_data,w
  9474  04EC  1803               	skipnc
  9475  04ED  2CF9               	goto	l412
  9476                           
  9477                           ;Multi_RX_testjig_v2.c: 921: print_error("Test RF 3v3", " Error - Low");
  9478  04EE  303D               	movlw	low (STR_105| (0+32768))
  9479  04EF  00F8               	movwf	print_error@top
  9480  04F0  3092               	movlw	high (STR_105| (0+32768))
  9481  04F1  00F9               	movwf	print_error@top+1
  9482  04F2  3030               	movlw	low (STR_110| (0+32768))
  9483  04F3  00FA               	movwf	print_error@bottom
  9484  04F4  3092               	movlw	high (STR_110| (0+32768))
  9485  04F5                     L9:	
  9486  04F5  00FB               	movwf	print_error@bottom+1
  9487  04F6  318A  22F4  3180   	fcall	_print_error
  9488  04F9                     l412:	
  9489                           
  9490                           ;Multi_RX_testjig_v2.c: 923: print_screen("Test RF", "3v3 - OK");
  9491  04F9  3078               	movlw	low (STR_99| (0+32768))
  9492  04FA  00F4               	movwf	print_screen@top
  9493  04FB  3093               	movlw	high (STR_99| (0+32768))
  9494  04FC  00F5               	movwf	print_screen@top+1
  9495  04FD  3032               	movlw	low (STR_112| (0+32768))
  9496  04FE  00F6               	movwf	print_screen@bottom
  9497  04FF  3093               	movlw	high (STR_112| (0+32768))
  9498  0500  00F7               	movwf	print_screen@bottom+1
  9499  0501  318A  22D2  3180   	fcall	_print_screen
  9500                           
  9501                           ;Multi_RX_testjig_v2.c: 926: testjig_timer = (unsigned int)((3*7518.8));
  9502  0504  301C               	movlw	28
  9503  0505  0020               	movlb	0	; select bank0
  9504  0506  00E9               	movwf	_testjig_timer	;volatile
  9505  0507  3058               	movlw	88
  9506  0508  00EA               	movwf	_testjig_timer+1	;volatile
  9507                           
  9508                           ;Multi_RX_testjig_v2.c: 927: RE0 = 1;
  9509  0509  1410               	bsf	16,0	;volatile
  9510                           
  9511                           ;Multi_RX_testjig_v2.c: 928: _delay((unsigned long)((200)*(16000000/4000.0)));
  9512  050A  3005               	movlw	5
  9513  050B  00DD               	movwf	??_main+2
  9514  050C  300F               	movlw	15
  9515  050D  00DC               	movwf	??_main+1
  9516  050E  30F4               	movlw	244
  9517  050F  00DB               	movwf	??_main
  9518  0510                     u6047:	
  9519  0510  0BDB               	decfsz	??_main,f
  9520  0511  2D10               	goto	u6047
  9521  0512  0BDC               	decfsz	??_main+1,f
  9522  0513  2D10               	goto	u6047
  9523  0514  0BDD               	decfsz	??_main+2,f
  9524  0515  2D10               	goto	u6047
  9525                           
  9526                           ;Multi_RX_testjig_v2.c: 929: print_screen("Test RF", "RSSI");
  9527  0516  3078               	movlw	low (STR_99| (0+32768))
  9528  0517  00F4               	movwf	print_screen@top
  9529  0518  3093               	movlw	high (STR_99| (0+32768))
  9530  0519  00F5               	movwf	print_screen@top+1
  9531  051A  30EA               	movlw	low ((STR_123+8)| (0+32768))
  9532  051B  00F6               	movwf	print_screen@bottom
  9533  051C  3091               	movlw	high ((STR_123+8)| (0+32768))
  9534  051D  00F7               	movwf	print_screen@bottom+1
  9535  051E  318A  22D2  3180   	fcall	_print_screen
  9536                           
  9537                           ;Multi_RX_testjig_v2.c: 930: TX_one(0x60);
  9538  0521  3060               	movlw	96
  9539  0522  3188  202E  3180   	fcall	_TX_one
  9540                           
  9541                           ;Multi_RX_testjig_v2.c: 931: RX_data = RX_one();
  9542  0525  3188  2054  3180   	fcall	_RX_one
  9543  0528  0020               	movlb	0	; select bank0
  9544  0529  00E8               	movwf	main@RX_data
  9545                           
  9546                           ;Multi_RX_testjig_v2.c: 932: TX_one(0x60);
  9547  052A  3060               	movlw	96
  9548  052B  3188  202E  3180   	fcall	_TX_one
  9549                           
  9550                           ;Multi_RX_testjig_v2.c: 933: RX_data = RX_one();
  9551  052E  3188  2054  3180   	fcall	_RX_one
  9552  0531  0020               	movlb	0	; select bank0
  9553  0532  00E8               	movwf	main@RX_data
  9554                           
  9555                           ;Multi_RX_testjig_v2.c: 945: RE0 = 0;
  9556  0533  1010               	bcf	16,0	;volatile
  9557                           
  9558                           ;Multi_RX_testjig_v2.c: 946: if(RX_data == 0)
  9559  0534  0868               	movf	main@RX_data,w
  9560  0535  1D03               	btfss	3,2
  9561  0536  2D3F               	goto	l4680
  9562                           
  9563                           ;Multi_RX_testjig_v2.c: 947: print_error("Comms Error", " 13");
  9564  0537  3079               	movlw	low (STR_23| (0+32768))
  9565  0538  00F8               	movwf	print_error@top
  9566  0539  3092               	movlw	high (STR_23| (0+32768))
  9567  053A  00F9               	movwf	print_error@top+1
  9568  053B  30A0               	movlw	low (STR_116| (0+32768))
  9569  053C  00FA               	movwf	print_error@bottom
  9570  053D  3093               	movlw	high (STR_116| (0+32768))
  9571  053E  2D93               	goto	L10
  9572  053F                     l4680:	
  9573                           
  9574                           ;Multi_RX_testjig_v2.c: 948: else if(RX_data == 0xFF)
  9575  053F  0A68               	incf	main@RX_data,w
  9576  0540  1D03               	btfss	3,2
  9577  0541  2D4A               	goto	l4684
  9578                           
  9579                           ;Multi_RX_testjig_v2.c: 949: print_error("Comms Error", " 14a");
  9580  0542  3079               	movlw	low (STR_23| (0+32768))
  9581  0543  00F8               	movwf	print_error@top
  9582  0544  3092               	movlw	high (STR_23| (0+32768))
  9583  0545  00F9               	movwf	print_error@top+1
  9584  0546  3085               	movlw	low (STR_118| (0+32768))
  9585  0547  00FA               	movwf	print_error@bottom
  9586  0548  3093               	movlw	high (STR_118| (0+32768))
  9587  0549  2D93               	goto	L10
  9588  054A                     l4684:	
  9589                           
  9590                           ;Multi_RX_testjig_v2.c: 950: else if(RX_data == 0xEE)
  9591  054A  30EE               	movlw	238
  9592  054B  0668               	xorwf	main@RX_data,w
  9593  054C  1D03               	btfss	3,2
  9594  054D  2D56               	goto	l4688
  9595                           
  9596                           ;Multi_RX_testjig_v2.c: 951: print_error("Comms Error", " 14b");
  9597  054E  3079               	movlw	low (STR_23| (0+32768))
  9598  054F  00F8               	movwf	print_error@top
  9599  0550  3092               	movlw	high (STR_23| (0+32768))
  9600  0551  00F9               	movwf	print_error@top+1
  9601  0552  308A               	movlw	low (STR_120| (0+32768))
  9602  0553  00FA               	movwf	print_error@bottom
  9603  0554  3093               	movlw	high (STR_120| (0+32768))
  9604  0555  2D93               	goto	L10
  9605  0556                     l4688:	
  9606                           
  9607                           ;Multi_RX_testjig_v2.c: 952: else if(RX_data >230)
  9608  0556  30E7               	movlw	231
  9609  0557  0268               	subwf	main@RX_data,w
  9610  0558  1C03               	skipc
  9611  0559  2D62               	goto	l4692
  9612                           
  9613                           ;Multi_RX_testjig_v2.c: 953: print_error("Comms Error", " 14c");
  9614  055A  3079               	movlw	low (STR_23| (0+32768))
  9615  055B  00F8               	movwf	print_error@top
  9616  055C  3092               	movlw	high (STR_23| (0+32768))
  9617  055D  00F9               	movwf	print_error@top+1
  9618  055E  308F               	movlw	low (STR_122| (0+32768))
  9619  055F  00FA               	movwf	print_error@bottom
  9620  0560  3093               	movlw	high (STR_122| (0+32768))
  9621  0561  2D93               	goto	L10
  9622  0562                     l4692:	
  9623                           
  9624                           ;Multi_RX_testjig_v2.c: 954: else if(RX_data > 120)
  9625  0562  3079               	movlw	121
  9626  0563  0268               	subwf	main@RX_data,w
  9627  0564  1C03               	skipc
  9628  0565  2D88               	goto	l4700
  9629                           
  9630                           ;Multi_RX_testjig_v2.c: 955: {
  9631                           ;Multi_RX_testjig_v2.c: 956: lcd_print_int(RX_data, 5, 0, 1);
  9632  0566  0868               	movf	main@RX_data,w
  9633  0567  00A0               	movwf	lcd_print_int@number
  9634  0568  3005               	movlw	5
  9635  0569  01A1               	clrf	lcd_print_int@number+1
  9636  056A  00A2               	movwf	lcd_print_int@pos
  9637  056B  01A3               	clrf	lcd_print_int@pos+1
  9638  056C  01A4               	clrf	lcd_print_int@decimal
  9639  056D  01A5               	clrf	lcd_print_int@ten_thou_digit
  9640  056E  0AA5               	incf	lcd_print_int@ten_thou_digit,f
  9641  056F  3188  20FB  3180   	fcall	_lcd_print_int
  9642                           
  9643                           ;Multi_RX_testjig_v2.c: 957: _delay((unsigned long)((5000)*(16000000/4000.0)));
  9644  0572  3066               	movlw	102
  9645  0573  0020               	movlb	0	; select bank0
  9646  0574  00DD               	movwf	??_main+2
  9647  0575  3077               	movlw	119
  9648  0576  00DC               	movwf	??_main+1
  9649  0577  3024               	movlw	36
  9650  0578  00DB               	movwf	??_main
  9651  0579                     u6057:	
  9652  0579  0BDB               	decfsz	??_main,f
  9653  057A  2D79               	goto	u6057
  9654  057B  0BDC               	decfsz	??_main+1,f
  9655  057C  2D79               	goto	u6057
  9656  057D  0BDD               	decfsz	??_main+2,f
  9657  057E  2D79               	goto	u6057
  9658  057F  0000               	nop
  9659                           
  9660                           ;Multi_RX_testjig_v2.c: 958: print_error("Test RF RSSI", " Error - High");
  9661  0580  30E2               	movlw	low (STR_123| (0+32768))
  9662  0581  00F8               	movwf	print_error@top
  9663  0582  3091               	movlw	high (STR_123| (0+32768))
  9664  0583  00F9               	movwf	print_error@top+1
  9665  0584  3091               	movlw	low (STR_106| (0+32768))
  9666  0585  00FA               	movwf	print_error@bottom
  9667  0586  3091               	movlw	high (STR_106| (0+32768))
  9668  0587  2D93               	goto	L10
  9669  0588                     l4700:	
  9670                           ;Multi_RX_testjig_v2.c: 959: }
  9671                           
  9672                           
  9673                           ;Multi_RX_testjig_v2.c: 960: else if(RX_data < 90)
  9674  0588  305A               	movlw	90
  9675  0589  0268               	subwf	main@RX_data,w
  9676  058A  1803               	skipnc
  9677  058B  2D97               	goto	l421
  9678                           
  9679                           ;Multi_RX_testjig_v2.c: 961: print_error("Test RF RSSI", " Error - Low");
  9680  058C  30E2               	movlw	low (STR_123| (0+32768))
  9681  058D  00F8               	movwf	print_error@top
  9682  058E  3091               	movlw	high (STR_123| (0+32768))
  9683  058F  00F9               	movwf	print_error@top+1
  9684  0590  3030               	movlw	low (STR_110| (0+32768))
  9685  0591  00FA               	movwf	print_error@bottom
  9686  0592  3092               	movlw	high (STR_110| (0+32768))
  9687  0593                     L10:	
  9688  0593  00FB               	movwf	print_error@bottom+1
  9689  0594  318A  22F4  3180   	fcall	_print_error
  9690  0597                     l421:	
  9691                           
  9692                           ;Multi_RX_testjig_v2.c: 962: print_screen("Test RF", "RSSI - OK");
  9693  0597  3078               	movlw	low (STR_99| (0+32768))
  9694  0598  00F4               	movwf	print_screen@top
  9695  0599  3093               	movlw	high (STR_99| (0+32768))
  9696  059A  00F5               	movwf	print_screen@top+1
  9697  059B  30F1               	movlw	low (STR_128| (0+32768))
  9698  059C  00F6               	movwf	print_screen@bottom
  9699  059D  3092               	movlw	high (STR_128| (0+32768))
  9700  059E  00F7               	movwf	print_screen@bottom+1
  9701  059F  318A  22D2  3180   	fcall	_print_screen
  9702                           
  9703                           ;Multi_RX_testjig_v2.c: 964: _delay((unsigned long)((100)*(16000000/4000.0)));
  9704  05A2  3003               	movlw	3
  9705  05A3  0020               	movlb	0	; select bank0
  9706  05A4  00DD               	movwf	??_main+2
  9707  05A5  3008               	movlw	8
  9708  05A6  00DC               	movwf	??_main+1
  9709  05A7  3078               	movlw	120
  9710  05A8  00DB               	movwf	??_main
  9711  05A9                     u6067:	
  9712  05A9  0BDB               	decfsz	??_main,f
  9713  05AA  2DA9               	goto	u6067
  9714  05AB  0BDC               	decfsz	??_main+1,f
  9715  05AC  2DA9               	goto	u6067
  9716  05AD  0BDD               	decfsz	??_main+2,f
  9717  05AE  2DA9               	goto	u6067
  9718                           
  9719                           ;Multi_RX_testjig_v2.c: 966: print_screen("Test RF", "Decode");
  9720  05AF  3078               	movlw	low (STR_99| (0+32768))
  9721  05B0  00F4               	movwf	print_screen@top
  9722  05B1  3093               	movlw	high (STR_99| (0+32768))
  9723  05B2  00F5               	movwf	print_screen@top+1
  9724  05B3  3016               	movlw	low ((STR_138+8)| (0+32768))
  9725  05B4  00F6               	movwf	print_screen@bottom
  9726  05B5  3091               	movlw	high ((STR_138+8)| (0+32768))
  9727  05B6  00F7               	movwf	print_screen@bottom+1
  9728  05B7  318A  22D2  3180   	fcall	_print_screen
  9729                           
  9730                           ;Multi_RX_testjig_v2.c: 967: int j;
  9731                           ;Multi_RX_testjig_v2.c: 968: RX_data = 0;
  9732  05BA  0020               	movlb	0	; select bank0
  9733  05BB  01E8               	clrf	main@RX_data
  9734                           
  9735                           ;Multi_RX_testjig_v2.c: 969: for(j = 0; j < 50; j++)
  9736  05BC  01E2               	clrf	main@j
  9737  05BD  01E3               	clrf	main@j+1
  9738  05BE  0863               	movf	main@j+1,w
  9739  05BF  3A80               	xorlw	128
  9740  05C0  00DB               	movwf	??_main
  9741  05C1  3080               	movlw	128
  9742  05C2  025B               	subwf	??_main,w
  9743  05C3  1D03               	skipz
  9744  05C4  2DC7               	goto	u5465
  9745  05C5  3032               	movlw	50
  9746  05C6  0262               	subwf	main@j,w
  9747  05C7                     u5465:	
  9748  05C7  1803               	btfsc	3,0
  9749  05C8  2E89               	goto	l4780
  9750  05C9                     l4714:	
  9751                           
  9752                           ;Multi_RX_testjig_v2.c: 970: {
  9753                           ;Multi_RX_testjig_v2.c: 972: testjig_timer = (unsigned int)((3*7518.8));
  9754  05C9  301C               	movlw	28
  9755  05CA  0020               	movlb	0	; select bank0
  9756  05CB  00E9               	movwf	_testjig_timer	;volatile
  9757  05CC  3058               	movlw	88
  9758  05CD  00EA               	movwf	_testjig_timer+1	;volatile
  9759                           
  9760                           ;Multi_RX_testjig_v2.c: 973: RE0 = 1;
  9761  05CE  1410               	bsf	16,0	;volatile
  9762                           
  9763                           ;Multi_RX_testjig_v2.c: 974: _delay((unsigned long)((200)*(16000000/4000.0)));
  9764  05CF  3005               	movlw	5
  9765  05D0  00DD               	movwf	??_main+2
  9766  05D1  300F               	movlw	15
  9767  05D2  00DC               	movwf	??_main+1
  9768  05D3  30F4               	movlw	244
  9769  05D4  00DB               	movwf	??_main
  9770  05D5                     u6077:	
  9771  05D5  0BDB               	decfsz	??_main,f
  9772  05D6  2DD5               	goto	u6077
  9773  05D7  0BDC               	decfsz	??_main+1,f
  9774  05D8  2DD5               	goto	u6077
  9775  05D9  0BDD               	decfsz	??_main+2,f
  9776  05DA  2DD5               	goto	u6077
  9777                           
  9778                           ;Multi_RX_testjig_v2.c: 975: for(i = 0; i < 5; i++)
  9779  05DB  0020               	movlb	0	; select bank0
  9780  05DC  01E5               	clrf	main@i
  9781  05DD  01E6               	clrf	main@i+1
  9782  05DE  2DEF               	goto	l4720
  9783  05DF                     l4730:	
  9784                           
  9785                           ;Multi_RX_testjig_v2.c: 981: _delay((unsigned long)((200)*(16000000/4000.0)));
  9786  05DF  3005               	movlw	5
  9787  05E0  00DD               	movwf	??_main+2
  9788  05E1  300F               	movlw	15
  9789  05E2  00DC               	movwf	??_main+1
  9790  05E3  30F4               	movlw	244
  9791  05E4  00DB               	movwf	??_main
  9792  05E5                     u6087:	
  9793  05E5  0BDB               	decfsz	??_main,f
  9794  05E6  2DE5               	goto	u6087
  9795  05E7  0BDC               	decfsz	??_main+1,f
  9796  05E8  2DE5               	goto	u6087
  9797  05E9  0BDD               	decfsz	??_main+2,f
  9798  05EA  2DE5               	goto	u6087
  9799  05EB  0020               	movlb	0	; select bank0
  9800  05EC  0AE5               	incf	main@i,f
  9801  05ED  1903               	skipnz
  9802  05EE  0AE6               	incf	main@i+1,f
  9803  05EF                     l4720:	
  9804  05EF  3000               	movlw	0
  9805  05F0  0266               	subwf	main@i+1,w
  9806  05F1  3005               	movlw	5
  9807  05F2  1903               	skipnz
  9808  05F3  0265               	subwf	main@i,w
  9809  05F4  1803               	btfsc	3,0
  9810  05F5  2E01               	goto	l434
  9811                           
  9812                           ;Multi_RX_testjig_v2.c: 976: {
  9813                           ;Multi_RX_testjig_v2.c: 977: TX_one(0x61);
  9814  05F6  3061               	movlw	97
  9815  05F7  3188  202E  3180   	fcall	_TX_one
  9816                           
  9817                           ;Multi_RX_testjig_v2.c: 978: RX_data = RX_one();
  9818  05FA  3188  2054  3180   	fcall	_RX_one
  9819  05FD  0020               	movlb	0	; select bank0
  9820  05FE  00E8               	movwf	main@RX_data
  9821                           
  9822                           ;Multi_RX_testjig_v2.c: 979: if(RX_data == 1)
  9823  05FF  0B68               	decfsz	main@RX_data,w
  9824  0600  2DDF               	goto	l4730
  9825  0601                     l434:	
  9826                           
  9827                           ;Multi_RX_testjig_v2.c: 982: }
  9828                           ;Multi_RX_testjig_v2.c: 983: RE0 = 0;
  9829  0601  1010               	bcf	16,0	;volatile
  9830                           
  9831                           ;Multi_RX_testjig_v2.c: 984: if(RX_data == 1)
  9832  0602  0B68               	decfsz	main@RX_data,w
  9833  0603  2E05               	goto	l4740
  9834  0604  2E89               	goto	l4780
  9835  0605                     l4740:	
  9836                           
  9837                           ;Multi_RX_testjig_v2.c: 987: print_screen("Test RF", " cycling power");
  9838  0605  3078               	movlw	low (STR_99| (0+32768))
  9839  0606  00F4               	movwf	print_screen@top
  9840  0607  3093               	movlw	high (STR_99| (0+32768))
  9841  0608  00F5               	movwf	print_screen@top+1
  9842  0609  303B               	movlw	low (STR_132| (0+32768))
  9843  060A  00F6               	movwf	print_screen@bottom
  9844  060B  3091               	movlw	high (STR_132| (0+32768))
  9845  060C  00F7               	movwf	print_screen@bottom+1
  9846  060D  318A  22D2  3180   	fcall	_print_screen
  9847                           
  9848                           ;Multi_RX_testjig_v2.c: 988: power_supply_set(3);
  9849  0610  3003               	movlw	3
  9850  0611  318B  23F2  3180   	fcall	_power_supply_set
  9851                           
  9852                           ;Multi_RX_testjig_v2.c: 989: LATA7 = 0;
  9853  0614  0022               	movlb	2	; select bank2
  9854  0615  138C               	bcf	12,7	;volatile
  9855                           
  9856                           ;Multi_RX_testjig_v2.c: 990: LATB5 = 0;
  9857  0616  128D               	bcf	13,5	;volatile
  9858                           
  9859                           ;Multi_RX_testjig_v2.c: 991: LATA6 = 0;
  9860  0617  130C               	bcf	12,6	;volatile
  9861                           
  9862                           ;Multi_RX_testjig_v2.c: 992: TRISG0 = 1;
  9863  0618  0026               	movlb	6	; select bank6
  9864  0619  140D               	bsf	13,0	;volatile
  9865  061A                     l4750:	
  9866                           ;Multi_RX_testjig_v2.c: 993: while(ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1
      +                          024)/4.096)*0.2));
  9867                           
  9868  061A  305F               	movlw	95
  9869  061B  318C  245E  3180   	fcall	_ADC_get_val
  9870  061E  3000               	movlw	0
  9871  061F  0271               	subwf	?_ADC_get_val+1,w
  9872  0620  3017               	movlw	23
  9873  0621  1903               	skipnz
  9874  0622  0270               	subwf	?_ADC_get_val,w
  9875  0623  1803               	skipnc
  9876  0624  2E1A               	goto	l4750
  9877                           
  9878                           ;Multi_RX_testjig_v2.c: 994: power_supply_set(0);
  9879  0625  3000               	movlw	0
  9880  0626  318B  23F2  3180   	fcall	_power_supply_set
  9881                           
  9882                           ;Multi_RX_testjig_v2.c: 995: _delay((unsigned long)((200)*(16000000/4000.0)));
  9883  0629  3005               	movlw	5
  9884  062A  0020               	movlb	0	; select bank0
  9885  062B  00DD               	movwf	??_main+2
  9886  062C  300F               	movlw	15
  9887  062D  00DC               	movwf	??_main+1
  9888  062E  30F4               	movlw	244
  9889  062F  00DB               	movwf	??_main
  9890  0630                     u6097:	
  9891  0630  0BDB               	decfsz	??_main,f
  9892  0631  2E30               	goto	u6097
  9893  0632  0BDC               	decfsz	??_main+1,f
  9894  0633  2E30               	goto	u6097
  9895  0634  0BDD               	decfsz	??_main+2,f
  9896  0635  2E30               	goto	u6097
  9897                           
  9898                           ;Multi_RX_testjig_v2.c: 997: for(i = 0; i < 10; i++)
  9899  0636  0020               	movlb	0	; select bank0
  9900  0637  01E5               	clrf	main@i
  9901  0638  01E6               	clrf	main@i+1
  9902  0639                     l4758:	
  9903  0639  3000               	movlw	0
  9904  063A  0266               	subwf	main@i+1,w
  9905  063B  300A               	movlw	10
  9906  063C  1903               	skipnz
  9907  063D  0265               	subwf	main@i,w
  9908  063E  1803               	btfsc	3,0
  9909  063F  2E7B               	goto	l4776
  9910                           
  9911                           ;Multi_RX_testjig_v2.c: 998: {
  9912                           ;Multi_RX_testjig_v2.c: 999: TX_one(0x01);
  9913  0640  3001               	movlw	1
  9914  0641  3188  202E  3180   	fcall	_TX_one
  9915                           
  9916                           ;Multi_RX_testjig_v2.c: 1000: unsigned char response;
  9917                           ;Multi_RX_testjig_v2.c: 1001: response = RX_one_timeout();
  9918  0644  3188  207B  3180   	fcall	_RX_one_timeout
  9919  0647  0020               	movlb	0	; select bank0
  9920  0648  00E4               	movwf	main@response
  9921                           
  9922                           ;Multi_RX_testjig_v2.c: 1002: if((response == 0xAA) || (response == 0xA1))
  9923  0649  3AAA               	xorlw	170
  9924  064A  1903               	btfsc	3,2
  9925  064B  2E7B               	goto	l4776
  9926  064C  30A1               	movlw	161
  9927  064D  0664               	xorwf	main@response,w
  9928  064E  1903               	btfsc	3,2
  9929  064F  2E7B               	goto	l4776
  9930                           
  9931                           ;Multi_RX_testjig_v2.c: 1004: lcd_print_int(i, 11, 0, 0);
  9932  0650  0866               	movf	main@i+1,w
  9933  0651  00A1               	movwf	lcd_print_int@number+1
  9934  0652  0865               	movf	main@i,w
  9935  0653  00A0               	movwf	lcd_print_int@number
  9936  0654  300B               	movlw	11
  9937  0655  00A2               	movwf	lcd_print_int@pos
  9938  0656  01A3               	clrf	lcd_print_int@pos+1
  9939  0657  01A4               	clrf	lcd_print_int@decimal
  9940  0658  01A5               	clrf	lcd_print_int@ten_thou_digit
  9941  0659  3188  20FB  3180   	fcall	_lcd_print_int
  9942                           
  9943                           ;Multi_RX_testjig_v2.c: 1005: lcd_print_int(device_type, 5, 0, 0);
  9944  065C  0020               	movlb	0	; select bank0
  9945  065D  0867               	movf	main@device_type,w
  9946  065E  00A0               	movwf	lcd_print_int@number
  9947  065F  3005               	movlw	5
  9948  0660  01A1               	clrf	lcd_print_int@number+1
  9949  0661  00A2               	movwf	lcd_print_int@pos
  9950  0662  01A3               	clrf	lcd_print_int@pos+1
  9951  0663  01A4               	clrf	lcd_print_int@decimal
  9952  0664  01A5               	clrf	lcd_print_int@ten_thou_digit
  9953  0665  3188  20FB  3180   	fcall	_lcd_print_int
  9954                           
  9955                           ;Multi_RX_testjig_v2.c: 1006: _delay((unsigned long)((50)*(16000000/4000.0)));
  9956  0668  3002               	movlw	2
  9957  0669  0020               	movlb	0	; select bank0
  9958  066A  00DD               	movwf	??_main+2
  9959  066B  3004               	movlw	4
  9960  066C  00DC               	movwf	??_main+1
  9961  066D  30BA               	movlw	186
  9962  066E  00DB               	movwf	??_main
  9963  066F                     u6107:	
  9964  066F  0BDB               	decfsz	??_main,f
  9965  0670  2E6F               	goto	u6107
  9966  0671  0BDC               	decfsz	??_main+1,f
  9967  0672  2E6F               	goto	u6107
  9968  0673  0BDD               	decfsz	??_main+2,f
  9969  0674  2E6F               	goto	u6107
  9970  0675  0000               	nop
  9971  0676  0020               	movlb	0	; select bank0
  9972  0677  0AE5               	incf	main@i,f
  9973  0678  1903               	skipnz
  9974  0679  0AE6               	incf	main@i+1,f
  9975  067A  2E39               	goto	l4758
  9976  067B                     l4776:	
  9977  067B  0AE2               	incf	main@j,f
  9978  067C  1903               	skipnz
  9979  067D  0AE3               	incf	main@j+1,f
  9980  067E  0863               	movf	main@j+1,w
  9981  067F  3A80               	xorlw	128
  9982  0680  00DB               	movwf	??_main
  9983  0681  3080               	movlw	128
  9984  0682  025B               	subwf	??_main,w
  9985  0683  1D03               	skipz
  9986  0684  2E87               	goto	u5545
  9987  0685  3032               	movlw	50
  9988  0686  0262               	subwf	main@j,w
  9989  0687                     u5545:	
  9990  0687  1C03               	skipc
  9991  0688  2DC9               	goto	l4714
  9992  0689                     l4780:	
  9993                           
  9994                           ;Multi_RX_testjig_v2.c: 1007: }
  9995                           ;Multi_RX_testjig_v2.c: 1008: }
  9996                           ;Multi_RX_testjig_v2.c: 1009: if(RX_data == 1)
  9997  0689  0020               	movlb	0	; select bank0
  9998  068A  0368               	decf	main@RX_data,w
  9999  068B  1D03               	btfss	3,2
 10000  068C  2E99               	goto	l4784
 10001                           
 10002                           ;Multi_RX_testjig_v2.c: 1010: print_screen("Test RF", "Decode New - OK");
 10003  068D  3078               	movlw	low (STR_99| (0+32768))
 10004  068E  00F4               	movwf	print_screen@top
 10005  068F  3093               	movlw	high (STR_99| (0+32768))
 10006  0690  00F5               	movwf	print_screen@top+1
 10007  0691  30AF               	movlw	low (STR_134| (0+32768))
 10008  0692  00F6               	movwf	print_screen@bottom
 10009  0693  3090               	movlw	high (STR_134| (0+32768))
 10010  0694  00F7               	movwf	print_screen@bottom+1
 10011  0695  318A  22D2  3180   	fcall	_print_screen
 10012  0698  2EBC               	goto	l4794
 10013  0699                     l4784:	
 10014                           
 10015                           ;Multi_RX_testjig_v2.c: 1011: else if(RX_data == 2)
 10016  0699  3002               	movlw	2
 10017  069A  0668               	xorwf	main@RX_data,w
 10018  069B  1D03               	btfss	3,2
 10019  069C  2EA5               	goto	l4788
 10020                           
 10021                           ;Multi_RX_testjig_v2.c: 1012: print_error("Test RF", "Decode Old -Fail");
 10022  069D  3078               	movlw	low (STR_99| (0+32768))
 10023  069E  00F8               	movwf	print_error@top
 10024  069F  3093               	movlw	high (STR_99| (0+32768))
 10025  06A0  00F9               	movwf	print_error@top+1
 10026  06A1  305B               	movlw	low (STR_136| (0+32768))
 10027  06A2  00FA               	movwf	print_error@bottom
 10028  06A3  3090               	movlw	high (STR_136| (0+32768))
 10029  06A4  2EB8               	goto	L5
 10030  06A5                     l4788:	
 10031                           
 10032                           ;Multi_RX_testjig_v2.c: 1013: else if(RX_data == 3)
 10033  06A5  3003               	movlw	3
 10034  06A6  0668               	xorwf	main@RX_data,w
 10035  06A7  1D03               	btfss	3,2
 10036  06A8  2EB1               	goto	l4792
 10037                           
 10038                           ;Multi_RX_testjig_v2.c: 1014: print_error("Test RF", "Error - Decode");
 10039  06A9  3078               	movlw	low (STR_99| (0+32768))
 10040  06AA  00F8               	movwf	print_error@top
 10041  06AB  3093               	movlw	high (STR_99| (0+32768))
 10042  06AC  00F9               	movwf	print_error@top+1
 10043  06AD  300E               	movlw	low (STR_138| (0+32768))
 10044  06AE  00FA               	movwf	print_error@bottom
 10045  06AF  3091               	movlw	high (STR_138| (0+32768))
 10046  06B0  2EB8               	goto	L5
 10047  06B1                     l4792:	
 10048                           
 10049                           ;Multi_RX_testjig_v2.c: 1015: else
 10050                           ;Multi_RX_testjig_v2.c: 1016: print_error("Comms Error", " 15");
 10051  06B1  3079               	movlw	low (STR_23| (0+32768))
 10052  06B2  00F8               	movwf	print_error@top
 10053  06B3  3092               	movlw	high (STR_23| (0+32768))
 10054  06B4  00F9               	movwf	print_error@top+1
 10055  06B5  30A4               	movlw	low (STR_140| (0+32768))
 10056  06B6  00FA               	movwf	print_error@bottom
 10057  06B7  3093               	movlw	high (STR_140| (0+32768))
 10058  06B8                     L5:	
 10059  06B8  00FB               	movwf	print_error@bottom+1
 10060  06B9  318A  22F4  3180   	fcall	_print_error
 10061  06BC                     l4794:	
 10062                           
 10063                           ;Multi_RX_testjig_v2.c: 1019: }
 10064                           ;Multi_RX_testjig_v2.c: 1021: if(device_type == 0xA2)
 10065  06BC  30A2               	movlw	162
 10066  06BD  0020               	movlb	0	; select bank0
 10067  06BE  0667               	xorwf	main@device_type,w
 10068  06BF  1D03               	btfss	3,2
 10069  06C0  2EE3               	goto	l4806
 10070                           
 10071                           ;Multi_RX_testjig_v2.c: 1022: {
 10072                           ;Multi_RX_testjig_v2.c: 1024: print_screen("T4 bus (CAN)", " ");
 10073  06C1  30C8               	movlw	low (STR_141| (0+32768))
 10074  06C2  00F4               	movwf	print_screen@top
 10075  06C3  3091               	movlw	high (STR_141| (0+32768))
 10076  06C4  00F5               	movwf	print_screen@top+1
 10077  06C5  30AD               	movlw	low ((STR_153+14)| (0+32768))
 10078  06C6  00F6               	movwf	print_screen@bottom
 10079  06C7  3090               	movlw	high ((STR_153+14)| (0+32768))
 10080  06C8  00F7               	movwf	print_screen@bottom+1
 10081  06C9  318A  22D2  3180   	fcall	_print_screen
 10082                           
 10083                           ;Multi_RX_testjig_v2.c: 1025: TX_one(0xA0);
 10084  06CC  30A0               	movlw	160
 10085  06CD  3188  202E  3180   	fcall	_TX_one
 10086                           
 10087                           ;Multi_RX_testjig_v2.c: 1026: RX_data = RX_one();
 10088  06D0  3188  2054  3180   	fcall	_RX_one
 10089  06D3  0020               	movlb	0	; select bank0
 10090  06D4  00E8               	movwf	main@RX_data
 10091                           
 10092                           ;Multi_RX_testjig_v2.c: 1027: if(RX_data != 0xAA)
 10093  06D5  3AAA               	xorlw	170
 10094  06D6  1903               	btfsc	3,2
 10095  06D7  2EE3               	goto	l4806
 10096                           
 10097                           ;Multi_RX_testjig_v2.c: 1028: print_error("Comms Error", " 18");
 10098  06D8  3079               	movlw	low (STR_23| (0+32768))
 10099  06D9  00F8               	movwf	print_error@top
 10100  06DA  3092               	movlw	high (STR_23| (0+32768))
 10101  06DB  00F9               	movwf	print_error@top+1
 10102  06DC  30B0               	movlw	low (STR_144| (0+32768))
 10103  06DD  00FA               	movwf	print_error@bottom
 10104  06DE  3093               	movlw	high (STR_144| (0+32768))
 10105  06DF  00FB               	movwf	print_error@bottom+1
 10106  06E0  318A  22F4  3180   	fcall	_print_error
 10107  06E3                     l4806:	
 10108                           
 10109                           ;Multi_RX_testjig_v2.c: 1032: }
 10110                           ;Multi_RX_testjig_v2.c: 1034: if((device_type == 0xAA) || (device_type == 0xA1) || (devi
      +                          ce_type == 0xA2))
 10111  06E3  30AA               	movlw	170
 10112  06E4  0020               	movlb	0	; select bank0
 10113  06E5  0667               	xorwf	main@device_type,w
 10114  06E6  1903               	btfsc	3,2
 10115  06E7  2EF0               	goto	l4812
 10116  06E8  30A1               	movlw	161
 10117  06E9  0667               	xorwf	main@device_type,w
 10118  06EA  1903               	btfsc	3,2
 10119  06EB  2EF0               	goto	l4812
 10120  06EC  30A2               	movlw	162
 10121  06ED  0667               	xorwf	main@device_type,w
 10122  06EE  1D03               	btfss	3,2
 10123  06EF  2F12               	goto	l4822
 10124  06F0                     l4812:	
 10125                           
 10126                           ;Multi_RX_testjig_v2.c: 1035: {
 10127                           ;Multi_RX_testjig_v2.c: 1037: print_screen("Master Erase ", " ");
 10128  06F0  3059               	movlw	low (STR_145| (0+32768))
 10129  06F1  00F4               	movwf	print_screen@top
 10130  06F2  3091               	movlw	high (STR_145| (0+32768))
 10131  06F3  00F5               	movwf	print_screen@top+1
 10132  06F4  30AD               	movlw	low ((STR_153+14)| (0+32768))
 10133  06F5  00F6               	movwf	print_screen@bottom
 10134  06F6  3090               	movlw	high ((STR_153+14)| (0+32768))
 10135  06F7  00F7               	movwf	print_screen@bottom+1
 10136  06F8  318A  22D2  3180   	fcall	_print_screen
 10137                           
 10138                           ;Multi_RX_testjig_v2.c: 1038: TX_one(0x82);
 10139  06FB  3082               	movlw	130
 10140  06FC  3188  202E  3180   	fcall	_TX_one
 10141                           
 10142                           ;Multi_RX_testjig_v2.c: 1039: RX_data = RX_one();
 10143  06FF  3188  2054  3180   	fcall	_RX_one
 10144  0702  0020               	movlb	0	; select bank0
 10145  0703  00E8               	movwf	main@RX_data
 10146                           
 10147                           ;Multi_RX_testjig_v2.c: 1040: if(RX_data != 0x8A)
 10148  0704  3A8A               	xorlw	138
 10149  0705  1903               	btfsc	3,2
 10150  0706  2F12               	goto	l4822
 10151                           
 10152                           ;Multi_RX_testjig_v2.c: 1041: print_error("Comms Error", " 17");
 10153  0707  3079               	movlw	low (STR_23| (0+32768))
 10154  0708  00F8               	movwf	print_error@top
 10155  0709  3092               	movlw	high (STR_23| (0+32768))
 10156  070A  00F9               	movwf	print_error@top+1
 10157  070B  30AC               	movlw	low (STR_148| (0+32768))
 10158  070C  00FA               	movwf	print_error@bottom
 10159  070D  3093               	movlw	high (STR_148| (0+32768))
 10160  070E  00FB               	movwf	print_error@bottom+1
 10161  070F  318A  22F4  3180   	fcall	_print_error
 10162  0712                     l4822:	
 10163                           
 10164                           ;Multi_RX_testjig_v2.c: 1042: }
 10165                           ;Multi_RX_testjig_v2.c: 1044: if((device_type == 0xAA) || (device_type == 0xA1))
 10166  0712  30AA               	movlw	170
 10167  0713  0020               	movlb	0	; select bank0
 10168  0714  0667               	xorwf	main@device_type,w
 10169  0715  1903               	btfsc	3,2
 10170  0716  2F1B               	goto	l4826
 10171  0717  30A1               	movlw	161
 10172  0718  0667               	xorwf	main@device_type,w
 10173  0719  1D03               	btfss	3,2
 10174  071A  2F3D               	goto	l4836
 10175  071B                     l4826:	
 10176                           
 10177                           ;Multi_RX_testjig_v2.c: 1045: {
 10178                           ;Multi_RX_testjig_v2.c: 1047: print_screen("Set # of ", " channels");
 10179  071B  30D3               	movlw	low (STR_149| (0+32768))
 10180  071C  00F4               	movwf	print_screen@top
 10181  071D  3092               	movlw	high (STR_149| (0+32768))
 10182  071E  00F5               	movwf	print_screen@top+1
 10183  071F  30FB               	movlw	low (STR_150| (0+32768))
 10184  0720  00F6               	movwf	print_screen@bottom
 10185  0721  3092               	movlw	high (STR_150| (0+32768))
 10186  0722  00F7               	movwf	print_screen@bottom+1
 10187  0723  318A  22D2  3180   	fcall	_print_screen
 10188                           
 10189                           ;Multi_RX_testjig_v2.c: 1048: TX_one(0x81);
 10190  0726  3081               	movlw	129
 10191  0727  3188  202E  3180   	fcall	_TX_one
 10192                           
 10193                           ;Multi_RX_testjig_v2.c: 1049: RX_data = RX_one();
 10194  072A  3188  2054  3180   	fcall	_RX_one
 10195  072D  0020               	movlb	0	; select bank0
 10196  072E  00E8               	movwf	main@RX_data
 10197                           
 10198                           ;Multi_RX_testjig_v2.c: 1050: if(RX_data != 0x8A)
 10199  072F  3A8A               	xorlw	138
 10200  0730  1903               	btfsc	3,2
 10201  0731  2F3D               	goto	l4836
 10202                           
 10203                           ;Multi_RX_testjig_v2.c: 1051: print_error("Comms Error", " 16");
 10204  0732  3079               	movlw	low (STR_23| (0+32768))
 10205  0733  00F8               	movwf	print_error@top
 10206  0734  3092               	movlw	high (STR_23| (0+32768))
 10207  0735  00F9               	movwf	print_error@top+1
 10208  0736  30A8               	movlw	low (STR_152| (0+32768))
 10209  0737  00FA               	movwf	print_error@bottom
 10210  0738  3093               	movlw	high (STR_152| (0+32768))
 10211  0739  00FB               	movwf	print_error@bottom+1
 10212  073A  318A  22F4  3180   	fcall	_print_error
 10213  073D                     l4836:	
 10214                           
 10215                           ;Multi_RX_testjig_v2.c: 1052: }
 10216                           ;Multi_RX_testjig_v2.c: 1054: if((device_type == 0xAA) || (device_type == 0xA1)|| (devic
      +                          e_type == 0xA2))
 10217  073D  30AA               	movlw	170
 10218  073E  0020               	movlb	0	; select bank0
 10219  073F  0667               	xorwf	main@device_type,w
 10220  0740  1903               	btfsc	3,2
 10221  0741  2F4A               	goto	l4842
 10222  0742  30A1               	movlw	161
 10223  0743  0667               	xorwf	main@device_type,w
 10224  0744  1903               	btfsc	3,2
 10225  0745  2F4A               	goto	l4842
 10226  0746  30A2               	movlw	162
 10227  0747  0667               	xorwf	main@device_type,w
 10228  0748  1D03               	btfss	3,2
 10229  0749  2F76               	goto	l461
 10230  074A                     l4842:	
 10231                           
 10232                           ;Multi_RX_testjig_v2.c: 1055: {
 10233                           ;Multi_RX_testjig_v2.c: 1057: print_screen("7seg, buzzer,  ", " button test");
 10234  074A  309F               	movlw	low (STR_153| (0+32768))
 10235  074B  00F4               	movwf	print_screen@top
 10236  074C  3090               	movlw	high (STR_153| (0+32768))
 10237  074D  00F5               	movwf	print_screen@top+1
 10238  074E  3023               	movlw	low (STR_154| (0+32768))
 10239  074F  00F6               	movwf	print_screen@bottom
 10240  0750  3092               	movlw	high (STR_154| (0+32768))
 10241  0751  00F7               	movwf	print_screen@bottom+1
 10242  0752  318A  22D2  3180   	fcall	_print_screen
 10243                           
 10244                           ;Multi_RX_testjig_v2.c: 1058: TX_one(0x90);
 10245  0755  3090               	movlw	144
 10246  0756  3188  202E  3180   	fcall	_TX_one
 10247                           
 10248                           ;Multi_RX_testjig_v2.c: 1059: TRISG0 = 1;
 10249  0759  0026               	movlb	6	; select bank6
 10250  075A  140D               	bsf	13,0	;volatile
 10251                           
 10252                           ;Multi_RX_testjig_v2.c: 1060: _delay((unsigned long)((100)*(16000000/4000.0)));
 10253  075B  3003               	movlw	3
 10254  075C  0020               	movlb	0	; select bank0
 10255  075D  00DD               	movwf	??_main+2
 10256  075E  3008               	movlw	8
 10257  075F  00DC               	movwf	??_main+1
 10258  0760  3078               	movlw	120
 10259  0761  00DB               	movwf	??_main
 10260  0762                     u6117:	
 10261  0762  0BDB               	decfsz	??_main,f
 10262  0763  2F62               	goto	u6117
 10263  0764  0BDC               	decfsz	??_main+1,f
 10264  0765  2F62               	goto	u6117
 10265  0766  0BDD               	decfsz	??_main+2,f
 10266  0767  2F62               	goto	u6117
 10267  0768                     l464:	
 10268                           ;Multi_RX_testjig_v2.c: 1061: while(RG1 == 1);
 10269                           
 10270  0768  0025               	movlb	5	; select bank5
 10271  0769  188D               	btfsc	13,1	;volatile
 10272  076A  2F68               	goto	l464
 10273                           
 10274                           ;Multi_RX_testjig_v2.c: 1062: print_screen("waiting  ", " for comms");
 10275  076B  30C9               	movlw	low (STR_155| (0+32768))
 10276  076C  00F4               	movwf	print_screen@top
 10277  076D  3092               	movlw	high (STR_155| (0+32768))
 10278  076E  00F5               	movwf	print_screen@top+1
 10279  076F  30A8               	movlw	low (STR_156| (0+32768))
 10280  0770  00F6               	movwf	print_screen@bottom
 10281  0771  3092               	movlw	high (STR_156| (0+32768))
 10282  0772  00F7               	movwf	print_screen@bottom+1
 10283  0773  318A  22D2  3180   	fcall	_print_screen
 10284  0776                     l461:	
 10285                           
 10286                           ;Multi_RX_testjig_v2.c: 1067: }
 10287                           ;Multi_RX_testjig_v2.c: 1069: testjig_done(1, device_type);
 10288  0776  0020               	movlb	0	; select bank0
 10289  0777  0867               	movf	main@device_type,w
 10290  0778  00F8               	movwf	testjig_done@device_type
 10291  0779  3001               	movlw	1
 10292  077A  3189  217C  3180   	fcall	_testjig_done
 10293                           
 10294                           ;Multi_RX_testjig_v2.c: 1079: testjig_done(1, device_type);
 10295  077D  0020               	movlb	0	; select bank0
 10296  077E  0867               	movf	main@device_type,w
 10297  077F  00F8               	movwf	testjig_done@device_type
 10298  0780  3001               	movlw	1
 10299  0781  3189  217C         	fcall	_testjig_done
 10300  0783  3180  28A0         	ljmp	start
 10301  0785                     __end_of_main:	


Data Sizes:
    Strings     988
    Constant    0
    Data        2
    BSS         24
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     73      80
    BANK1            80      0      22
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0

Pointer List with Targets:

    print_screen@bottom	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_192(CODE[17]), STR_190(CODE[13]), STR_188(CODE[13]), STR_186(CODE[13]), 
		 -> STR_184(CODE[13]), STR_182(CODE[14]), STR_180(CODE[14]), STR_178(CODE[14]), 
		 -> STR_176(CODE[14]), STR_174(CODE[8]), STR_172(CODE[8]), STR_170(CODE[9]), 
		 -> STR_168(CODE[9]), STR_166(CODE[9]), STR_164(CODE[14]), STR_162(CODE[14]), 
		 -> STR_160(CODE[14]), STR_158(CODE[14]), STR_156(CODE[11]), STR_154(CODE[13]), 
		 -> STR_150(CODE[10]), STR_146(CODE[2]), STR_142(CODE[2]), STR_134(CODE[16]), 
		 -> STR_132(CODE[15]), STR_130(CODE[7]), STR_128(CODE[10]), STR_114(CODE[5]), 
		 -> STR_112(CODE[9]), STR_100(CODE[4]), STR_78(CODE[3]), STR_76(CODE[1]), 
		 -> STR_54(CODE[3]), STR_52(CODE[1]), STR_40(CODE[5]), STR_38(CODE[1]), 
		 -> STR_32(CODE[6]), STR_26(CODE[18]), STR_22(CODE[6]), STR_20(CODE[9]), 
		 -> STR_18(CODE[13]), STR_16(CODE[1]), STR_6(CODE[1]), STR_2(CODE[17]), 

    print_screen@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_191(CODE[12]), STR_189(CODE[17]), STR_187(CODE[16]), STR_185(CODE[12]), 
		 -> STR_183(CODE[15]), STR_181(CODE[17]), STR_179(CODE[16]), STR_177(CODE[12]), 
		 -> STR_175(CODE[15]), STR_173(CODE[17]), STR_171(CODE[9]), STR_169(CODE[16]), 
		 -> STR_167(CODE[5]), STR_165(CODE[8]), STR_163(CODE[14]), STR_161(CODE[16]), 
		 -> STR_159(CODE[9]), STR_157(CODE[12]), STR_155(CODE[10]), STR_153(CODE[16]), 
		 -> STR_149(CODE[10]), STR_145(CODE[14]), STR_141(CODE[13]), STR_133(CODE[8]), 
		 -> STR_131(CODE[8]), STR_129(CODE[8]), STR_127(CODE[8]), STR_113(CODE[8]), 
		 -> STR_111(CODE[8]), STR_99(CODE[8]), STR_77(CODE[9]), STR_75(CODE[9]), 
		 -> STR_53(CODE[9]), STR_51(CODE[9]), STR_39(CODE[11]), STR_37(CODE[11]), 
		 -> STR_31(CODE[13]), STR_25(CODE[9]), STR_21(CODE[13]), STR_19(CODE[19]), 
		 -> STR_17(CODE[12]), STR_15(CODE[19]), STR_5(CODE[15]), STR_1(CODE[9]), 

    print_error@bottom	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_152(CODE[4]), STR_148(CODE[4]), STR_144(CODE[4]), STR_140(CODE[4]), 
		 -> STR_138(CODE[15]), STR_136(CODE[17]), STR_126(CODE[13]), STR_124(CODE[14]), 
		 -> STR_122(CODE[5]), STR_120(CODE[5]), STR_118(CODE[5]), STR_116(CODE[4]), 
		 -> STR_110(CODE[13]), STR_108(CODE[16]), STR_106(CODE[14]), STR_104(CODE[4]), 
		 -> STR_102(CODE[4]), STR_98(CODE[4]), STR_96(CODE[9]), STR_94(CODE[3]), 
		 -> STR_92(CODE[7]), STR_90(CODE[4]), STR_88(CODE[4]), STR_86(CODE[15]), 
		 -> STR_84(CODE[16]), STR_82(CODE[3]), STR_80(CODE[9]), STR_74(CODE[3]), 
		 -> STR_72(CODE[9]), STR_70(CODE[3]), STR_68(CODE[7]), STR_66(CODE[4]), 
		 -> STR_64(CODE[4]), STR_62(CODE[15]), STR_60(CODE[16]), STR_58(CODE[3]), 
		 -> STR_56(CODE[9]), STR_50(CODE[9]), STR_48(CODE[3]), STR_46(CODE[7]), 
		 -> STR_44(CODE[3]), STR_42(CODE[9]), STR_36(CODE[18]), STR_34(CODE[14]), 
		 -> STR_30(CODE[3]), STR_28(CODE[12]), STR_24(CODE[3]), STR_14(CODE[12]), 
		 -> STR_12(CODE[11]), STR_10(CODE[13]), STR_8(CODE[13]), STR_4(CODE[14]), 

    print_error@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_151(CODE[12]), STR_147(CODE[12]), STR_143(CODE[12]), STR_139(CODE[12]), 
		 -> STR_137(CODE[8]), STR_135(CODE[8]), STR_125(CODE[13]), STR_123(CODE[13]), 
		 -> STR_121(CODE[12]), STR_119(CODE[12]), STR_117(CODE[12]), STR_115(CODE[12]), 
		 -> STR_109(CODE[12]), STR_107(CODE[12]), STR_105(CODE[12]), STR_103(CODE[12]), 
		 -> STR_101(CODE[12]), STR_97(CODE[12]), STR_95(CODE[10]), STR_93(CODE[12]), 
		 -> STR_91(CODE[9]), STR_89(CODE[12]), STR_87(CODE[12]), STR_85(CODE[9]), 
		 -> STR_83(CODE[9]), STR_81(CODE[12]), STR_79(CODE[10]), STR_73(CODE[12]), 
		 -> STR_71(CODE[10]), STR_69(CODE[12]), STR_67(CODE[9]), STR_65(CODE[12]), 
		 -> STR_63(CODE[12]), STR_61(CODE[9]), STR_59(CODE[9]), STR_57(CODE[12]), 
		 -> STR_55(CODE[10]), STR_49(CODE[19]), STR_47(CODE[12]), STR_45(CODE[16]), 
		 -> STR_43(CODE[12]), STR_41(CODE[19]), STR_35(CODE[12]), STR_33(CODE[12]), 
		 -> STR_29(CODE[12]), STR_27(CODE[13]), STR_23(CODE[12]), STR_13(CODE[14]), 
		 -> STR_11(CODE[11]), STR_9(CODE[15]), STR_7(CODE[15]), STR_3(CODE[9]), 

    i2c_Write_string@data	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_192(CODE[17]), STR_191(CODE[12]), STR_190(CODE[13]), STR_189(CODE[17]), 
		 -> STR_188(CODE[13]), STR_187(CODE[16]), STR_186(CODE[13]), STR_185(CODE[12]), 
		 -> STR_184(CODE[13]), STR_183(CODE[15]), STR_182(CODE[14]), STR_181(CODE[17]), 
		 -> STR_180(CODE[14]), STR_179(CODE[16]), STR_178(CODE[14]), STR_177(CODE[12]), 
		 -> STR_176(CODE[14]), STR_175(CODE[15]), STR_174(CODE[8]), STR_173(CODE[17]), 
		 -> STR_172(CODE[8]), STR_171(CODE[9]), STR_170(CODE[9]), STR_169(CODE[16]), 
		 -> STR_168(CODE[9]), STR_167(CODE[5]), STR_166(CODE[9]), STR_165(CODE[8]), 
		 -> STR_164(CODE[14]), STR_163(CODE[14]), STR_162(CODE[14]), STR_161(CODE[16]), 
		 -> STR_160(CODE[14]), STR_159(CODE[9]), STR_158(CODE[14]), STR_157(CODE[12]), 
		 -> STR_156(CODE[11]), STR_155(CODE[10]), STR_154(CODE[13]), STR_153(CODE[16]), 
		 -> STR_152(CODE[4]), STR_151(CODE[12]), STR_150(CODE[10]), STR_149(CODE[10]), 
		 -> STR_148(CODE[4]), STR_147(CODE[12]), STR_146(CODE[2]), STR_145(CODE[14]), 
		 -> STR_144(CODE[4]), STR_143(CODE[12]), STR_142(CODE[2]), STR_141(CODE[13]), 
		 -> STR_140(CODE[4]), STR_139(CODE[12]), STR_138(CODE[15]), STR_137(CODE[8]), 
		 -> STR_136(CODE[17]), STR_135(CODE[8]), STR_134(CODE[16]), STR_133(CODE[8]), 
		 -> STR_132(CODE[15]), STR_131(CODE[8]), STR_130(CODE[7]), STR_129(CODE[8]), 
		 -> STR_128(CODE[10]), STR_127(CODE[8]), STR_126(CODE[13]), STR_125(CODE[13]), 
		 -> STR_124(CODE[14]), STR_123(CODE[13]), STR_122(CODE[5]), STR_121(CODE[12]), 
		 -> STR_120(CODE[5]), STR_119(CODE[12]), STR_118(CODE[5]), STR_117(CODE[12]), 
		 -> STR_116(CODE[4]), STR_115(CODE[12]), STR_114(CODE[5]), STR_113(CODE[8]), 
		 -> STR_112(CODE[9]), STR_111(CODE[8]), STR_110(CODE[13]), STR_109(CODE[12]), 
		 -> STR_108(CODE[16]), STR_107(CODE[12]), STR_106(CODE[14]), STR_105(CODE[12]), 
		 -> STR_104(CODE[4]), STR_103(CODE[12]), STR_102(CODE[4]), STR_101(CODE[12]), 
		 -> STR_100(CODE[4]), STR_99(CODE[8]), STR_98(CODE[4]), STR_97(CODE[12]), 
		 -> STR_96(CODE[9]), STR_95(CODE[10]), STR_94(CODE[3]), STR_93(CODE[12]), 
		 -> STR_92(CODE[7]), STR_91(CODE[9]), STR_90(CODE[4]), STR_89(CODE[12]), 
		 -> STR_88(CODE[4]), STR_87(CODE[12]), STR_86(CODE[15]), STR_85(CODE[9]), 
		 -> STR_84(CODE[16]), STR_83(CODE[9]), STR_82(CODE[3]), STR_81(CODE[12]), 
		 -> STR_80(CODE[9]), STR_79(CODE[10]), STR_78(CODE[3]), STR_77(CODE[9]), 
		 -> STR_76(CODE[1]), STR_75(CODE[9]), STR_74(CODE[3]), STR_73(CODE[12]), 
		 -> STR_72(CODE[9]), STR_71(CODE[10]), STR_70(CODE[3]), STR_69(CODE[12]), 
		 -> STR_68(CODE[7]), STR_67(CODE[9]), STR_66(CODE[4]), STR_65(CODE[12]), 
		 -> STR_64(CODE[4]), STR_63(CODE[12]), STR_62(CODE[15]), STR_61(CODE[9]), 
		 -> STR_60(CODE[16]), STR_59(CODE[9]), STR_58(CODE[3]), STR_57(CODE[12]), 
		 -> STR_56(CODE[9]), STR_55(CODE[10]), STR_54(CODE[3]), STR_53(CODE[9]), 
		 -> STR_52(CODE[1]), STR_51(CODE[9]), STR_50(CODE[9]), STR_49(CODE[19]), 
		 -> STR_48(CODE[3]), STR_47(CODE[12]), STR_46(CODE[7]), STR_45(CODE[16]), 
		 -> STR_44(CODE[3]), STR_43(CODE[12]), STR_42(CODE[9]), STR_41(CODE[19]), 
		 -> STR_40(CODE[5]), STR_39(CODE[11]), STR_38(CODE[1]), STR_37(CODE[11]), 
		 -> STR_36(CODE[18]), STR_35(CODE[12]), STR_34(CODE[14]), STR_33(CODE[12]), 
		 -> STR_32(CODE[6]), STR_31(CODE[13]), STR_30(CODE[3]), STR_29(CODE[12]), 
		 -> STR_28(CODE[12]), STR_27(CODE[13]), STR_26(CODE[18]), STR_25(CODE[9]), 
		 -> STR_24(CODE[3]), STR_23(CODE[12]), STR_22(CODE[6]), STR_21(CODE[13]), 
		 -> STR_20(CODE[9]), STR_19(CODE[19]), STR_18(CODE[13]), STR_17(CODE[12]), 
		 -> STR_16(CODE[1]), STR_15(CODE[19]), STR_14(CODE[12]), STR_13(CODE[14]), 
		 -> STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[13]), STR_9(CODE[15]), 
		 -> STR_8(CODE[13]), STR_7(CODE[15]), STR_6(CODE[1]), STR_5(CODE[15]), 
		 -> STR_4(CODE[14]), STR_3(CODE[9]), STR_2(CODE[17]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _testjig_done->_print_screen
    _print_error->_print_screen
    _print_screen->_i2c_Write_string
    _i2c_second_line->_i2c_Write
    _i2c_first_line->_i2c_Write
    _i2c_Write_string->_i2c_Write
    _clear_lcd->_i2c_Write
    _lcd_print_int->_ten_thou_conv
    _ten_thou_conv->___wmul
    _lcd_set_cursor->_i2c_Write
    _i2c_write_char->_i2c_Write
    _init_i2c_lcd_5v->_i2c_Write
    _get_30v_current->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl
    _Vout_set->_digitalpot
    _digitalpot->_i2c_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_get_30v_current
    _get_30v_current->___fltol
    ___fltol->___fladd
    ___fladd->___flmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   41177
                                             59 BANK0     14    14      0
                        _ADC_get_val
                             _RX_one
                     _RX_one_timeout
                             _TX_one
                           _Vout_set
                           _buzz_one
                      _debug_fast_tx
                    _get_30v_current
                           _init_ADC
                  _init_current_sink
                           _init_i2c
                    _init_i2c_lcd_5v
                      _lcd_print_int
                   _power_supply_set
                        _print_error
                       _print_screen
                       _testjig_done
 ---------------------------------------------------------------------------------
 (1) _testjig_done                                         5     4      1    7448
                                              8 COMMON     5     4      1
                           _buzz_one
                      _debug_fast_tx
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (1) _print_error                                          7     3      4   14035
                                              8 COMMON     4     0      4
                                              0 BANK0      3     3      0
                           _buzz_one
                          _clear_lcd
                      _debug_fast_tx
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (2) _print_screen                                         4     0      4    6065
                                              4 COMMON     4     0      4
                          _clear_lcd
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
 ---------------------------------------------------------------------------------
 (3) _i2c_second_line                                      1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_first_line                                       1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write_string                                     3     1      2     323
                                              1 COMMON     3     1      2
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _clear_lcd                                            2     2      0      22
                                              1 COMMON     2     2      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _power_supply_set                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _debug_fast_tx                                        3     1      2     581
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _buzz_one                                             2     0      2     278
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd_print_int                                        6     0      6    4861
                                              0 BANK0      6     0      6
                        _ADC_get_val (ARG)
                     _i2c_write_char
                     _lcd_set_cursor
                      _ten_thou_conv
 ---------------------------------------------------------------------------------
 (2) _ten_thou_conv                                        5     3      2    2091
                                              6 COMMON     5     3      2
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     910
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1    1029
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       3     2      1     158
                                              1 COMMON     3     2      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_write_char                                       1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c_lcd_5v                                      4     3      1     152
                                              1 COMMON     4     3      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init_current_sink                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_30v_current                                      4     2      2    5529
                                             55 BANK0      4     2      2
                        _ADC_get_val
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     386
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     293
                                             45 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2565
                                              0 BANK0     25    17      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            8     5      3     989
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2194
                                             25 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_get_val                                          6     3      3      46
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Vout_set                                             6     4      2     361
                                              4 COMMON     6     4      2
                         _digitalpot
 ---------------------------------------------------------------------------------
 (2) _digitalpot                                           3     3      0      44
                                              1 COMMON     3     3      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (4) _i2c_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TX_one                                               3     3      0      69
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one_timeout                                       3     3      0      93
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one                                               3     3      0      93
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_get_val
   _RX_one
   _RX_one_timeout
   _TX_one
   _Vout_set
     _digitalpot
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _buzz_one
   _debug_fast_tx
   _get_30v_current
     _ADC_get_val
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _init_ADC
   _init_current_sink
   _init_i2c
   _init_i2c_lcd_5v
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _lcd_print_int
     _ADC_get_val (ARG)
     _i2c_write_char (ARG)
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _lcd_set_cursor (ARG)
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _ten_thou_conv (ARG)
       ___bmul
       ___wmul
   _power_supply_set
   _print_error
     _buzz_one
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _debug_fast_tx
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
   _print_screen
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _testjig_done
     _buzz_one
     _debug_fast_tx
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      16       7       27.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0      74      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      74      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Feb 25 08:28:08 2019

         _motor_direction_timer 00A8             ??_init_current_sink 0070                     main@RX_data 0068  
                             pc 0002                  ___bmul@product 0071                     __CFG_CP$OFF 0000  
              _power_supply_set 0BF2             ___wmul@multiplicand 0072                      TX_one@data 0071  
           __Umul8_16@word_mpld 0076                             l304 1618                             l412 04F9  
                           l421 0597                             l335 016F                             l505 0A95  
                           l522 0BD7                             l434 0601                             l531 0BE7  
                           l516 0BE2                             l461 0776                             l470 097D  
                           l382 0374                             l464 0768                             l368 02CA  
                           l393 03EF                             l547 0BC1                             l643 096B  
                           l731 0AB2                             l724 08CA                             l741 0854  
                           l751 0886                             l479 09D2                             l744 085F  
                           l736 083A                             l496 0A64                             l746 0866  
                           l747 0868                             l756 0890                             l684 0C63  
                           l758 0897                             l694 0BF4                             l759 0899  
                           l696 0BF9                             l697 0BFE                             l698 0C03  
                           _GIE 005F                             l998 0C83                             l999 0C81  
                           _RA2 0062                             _RA4 0064                             _RA5 0065  
             ??_i2c_second_line 0071                             _RE0 0080                             _RF0 1460  
                           _RF1 1461                             _RF2 1462                             _RE4 0084  
                           _RG1 1469                             _RF3 1463                             _RE5 0085  
                           _RE6 0086                             _RG3 146B                             _RF5 1465  
                           _PR2 001B                             _PR8 0596                             _isr 0004  
                           _ten 006C                    __CFG_BORV$HI 0000                             wreg 0009  
                ?_lcd_print_int 0020                    ___flmul@aexp 002D                    ___flmul@bexp 0032  
                  ___flmul@sign 002C                    ___flmul@temp 0037                    ___flmul@prod 0033  
                          S4932 13E8         __size_of_i2c_write_char 000D                            S4936 07D8  
               ?_lcd_set_cursor 0071                    __CFG_LVP$OFF 0000       __end_of_init_current_sink 0817  
                  ___fltol@exp1 0056                            l1011 0CF0                            l1003 0C9E  
                          l1020 0D1E                            l1012 0CF6                            l1004 0C9C  
                          l1021 0D1F                            l1013 0CF7                            l1031 0D89  
                          l1120 0FA9                            l1009 0D03                            l1113 0F38  
                          l1026 0D70                            l1133 0FDB                            l1046 0DBB  
                          l1145 0F87                            l1091 0DD4                            l1092 0DD2  
                          l1095 0DEA                            l3200 0F5F                            l1096 0DE8  
                          l3114 156A                            l3212 0F6F                            l3062 0BD9  
                          l3206 0F67                            l3302 08F5                            l3118 1570  
                          l4014 094E                            l4006 0942                            l3224 0F7F  
                          l3304 08F7                            l4024 095F                            l4008 0945  
                          l3080 0B9B                            l3066 0BE5                            l3218 0F77  
                          l4026 0962                            l3250 0AB9                            l4052 0881  
                          l3068 0B81                            l4054 0889                            l3502 0D27  
                          l3078 0B89                            l4302 173A                            l3512 0D68  
                          l3440 0CAA                            l3600 0DEE                            l3530 0D8D  
                          l3194 0F57                            l3362 0794                            l3258 0C08  
                          l4410 01A0                            l4306 1749                            l3532 0D8F  
                          l3188 0F4F                            l3604 0DF8                            l3364 0799  
                          l3700 0FA1                            l4420 01BC                            l4332 17CF  
                          l3542 0D9A                            l3526 0D8A                            l3518 0D7E  
                          l3470 0CC8                            l3390 07C9                            l3382 07BC  
                          l3710 0FC0                            l4270 16B7                            l4246 160A  
                          l3720 0FD9                            l3704 0FB4                            l3800 099C  
                          l4416 01B3                            l4328 17B6                            l4272 1688  
                          l4264 1669                            l4256 165E                            l3562 0DB7  
                          l3554 0DAB                            l3538 0D98                            l3490 0D0D  
                          l3378 07B5                            l3722 0FD0                            l4610 0453  
                          l4522 031E                            l4450 022D                            l4370 0112  
                          l4354 00BA                            l4290 16FC                            l4282 16C2  
                          l4258 1645                            l3484 0CFE                            l3652 0EDD  
                          l3388 07C0                            l3716 0FCB                            l3708 0FB6  
                          l3820 09E2                            l3804 09A4                            l4700 0588  
                          l4612 045B                            l4620 047B                            l4524 0326  
                          l4532 0341                            l4540 0361                            l4444 0215  
                          l4452 0235                            l3910 08AB                            l3566 0DBC  
                          l3662 0EF2                            l3734 0FF7                            l3726 0FE4  
                          l3830 09F8                            l4630 049F                            l4606 0443  
                          l4614 0463                            l4622 0483                            l4526 032E  
                          l4534 0349                            l4542 0369                            l4446 021D  
                          l4454 0240                            l4374 0138                            l4366 00FF  
                          l4294 170F                            l3920 08B5                            l3912 08AD  
                          l3672 0F04                            l3808 09AC                            l4720 05EF  
                          l4608 044B                            l4616 046B                            l4624 048B  
                          l4528 0336                            l4536 0351                            l4448 0225  
                          l3930 08BF                            l3922 08B7                            l3914 08AF  
                          l3682 0F2A                            l3658 0EF0                            l3850 0A4A  
                          l3834 0A04                            l3826 09F0                            l3842 0A34  
                          l4730 05DF                            l4714 05C9                            l4618 0473  
                          l4490 02C5                            l4538 0359                            l4626 0496  
                          l4458 0249                            l4378 0141                            l3932 08C1  
                          l3924 08B9                            l3916 08B1                            l3676 0F17  
                          l3588 0DD8                            l3844 0A3C                            l4812 06F0  
                          l4740 0605                            l4652 04DE                            l4644 04C7  
                          l4492 02C2                            l4388 0160                            l3934 08C3  
                          l3926 08BB                            l3918 08B3                            l3942 08CF  
                          l3870 0A83                            l3854 0A52                            l4822 0712  
                          l4806 06E3                            l4750 061A                            l4574 03EA  
                          l3936 08C5                            l3928 08BD                            l3944 08E1  
                          l3776 0BBA                            l4680 053F                            l4656 04EA  
                          l4648 04D2                            l4576 03E7                            l3938 08C7  
                          l3874 0A8B                            l3866 0A7B                            l3858 0A5A  
                          l4842 074A                            l4826 071B                            l3964 0C5B  
                          l3980 0917                            l3796 0994                            l4836 073D  
                          l4780 0689                            l4692 0562                            l4684 054A  
                          l4934 08D4                            l3990 0928                            l3894 0B0B  
                          l4758 0639                            l3992 092B                            l3984 091D  
                          l3976 0911                            l4792 06B1                            l4784 0699  
                          l4776 067B                            l4688 0556                            l3978 0914  
                          l4794 06BC                            l4788 06A5                            ?_isr 0070  
                          l3998 0934                            STR_1 134D                            STR_2 107D  
                          STR_3 134D                            STR_4 1175                            STR_5 10FF  
                          STR_6 10AE                            STR_7 114A                            STR_8 11EF  
                          STR_9 114A                            u3100 0AB7                            u3205 1523  
                          u3400 0CE8                            u3225 07A2                            u3155 14A0  
                          u3165 14AF                            u3175 14BE                            u3185 14DA  
                          u4330 083F                            u3195 1501                            u3390 0CE7  
                          u6007 03DA                            u4344 0841                            u3385 0CDC  
                          u6017 0403                            u6107 066F                            u6027 0416  
                          u3493 0D39                            u6117 0762                            u6037 042E  
                          u6207 0AF0                            u6127 09C7                            u6047 0510  
                          u6217 0B50                            u6137 09DB                            u6057 0579  
                          u6307 089D                            u3835 0F0D                            u6227 0B63  
                          u6147 0A14                            u6067 05A9                            u6317 08A6  
                          u3845 0F21                            u6237 0BCE                            u6157 0A2A  
                          u6077 05D5                            u6327 085A                            u6247 081E  
                          u6167 0A6D                            u6087 05E5                            u6337 086C  
                          u6257 0B7B                            u6177 0A9E                            u5545 0687  
                          u6097 0630                            u5465 05C7                            u6347 0877  
                          u6267 0836                            u6187 0B24                            u6277 0844  
                          u6197 0B3B                            u5717 15E4                            u6287 0851  
                          u5807 178E                            u5727 15F3                            u6297 088B  
                          u5817 179E                            u5737 15FE                            u5907 0269  
                          u5827 17AF                            u5747 1634                            u5917 0281  
                          u5837 17C8                            u5757 167A                            u5927 029D  
                          u5847 17D8                            u5767 16E2                            u5937 02B5  
                          u5857 17E7                            u5777 172B                            u5947 02DE  
                          u5867 00E1                            u5787 1764                            u5957 02F1  
                          u5877 0131                            u5797 177F                            u5967 0309  
                          u5887 01E2                            u5977 038E                            u5897 01FE  
                          u5987 03A6                            u5997 03C2                            _TMR0 0015  
                          _WPUB 020D                            _WPUD 020F                            _WPUE 0210  
                  __CFG_WRT$OFF 0000                            _main 157D                            _hund 006B  
                          _thou 006F                            fsr0h 0005                            fsr0l 0004  
                          indf0 0000                            _unit 006E                            btemp 007E  
             ??_get_30v_current 007E                   __CFG_BOREN$ON 0000                            ltemp 007E  
                          start 00A0                            ttemp 007E                            wtemp 007E  
              ??_RX_one_timeout 0070                   __CFG_IESO$OFF 0000         i2c_write_char@char_data 0071  
             ___bmul@multiplier 0072                   __CFG_MCLRE$ON 0000                 digitalpot@value 0073  
          __size_of_ADC_get_val 0012         __end_of_init_i2c_lcd_5v 0BD4                           ??_isr 0070  
                _i2c_first_line 0B43                   ___fltol@sign1 0055                 __end_of___fladd 0DC1  
                         ?_main 0070                           STR_10 11D5                           STR_11 12BE  
                         STR_20 1356                           STR_12 129D                           STR_21 1209  
                         STR_13 11AD                           STR_30 131D                           STR_22 12AD  
                         STR_14 1285                           STR_23 1279                           STR_31 11BB  
                         STR_15 1013                           STR_16 10AE                           STR_24 1314  
                         STR_32 125B                           STR_40 1363                           STR_25 1305  
                         STR_17 126D                           STR_33 1255                           STR_41 1000  
                         STR_18 1019                           STR_42 1317                           STR_50 130E  
                         STR_34 1167                           STR_26 1026                           STR_35 1255  
                         STR_19 1013                           STR_43 1279                           STR_51 1320  
                         STR_27 1216                           STR_52 10AE                           STR_44 13C4  
                         STR_28 1249                           STR_60 10EF                           STR_36 1038  
                         STR_53 1320                           STR_61 133B                           STR_29 1279  
                         STR_37 12B3                           STR_45 10BF                           STR_38 10AE  
                         STR_46 12A1                           STR_54 13D9                           STR_70 13CD  
                         STR_62 112C                           STR_71 12DD                           STR_63 1279  
                         STR_47 1279                           STR_39 12B3                           STR_55 12DD  
                         STR_72 130E                           STR_80 1317                           STR_56 1317  
                         STR_48 13C7                           STR_64 13B4                           STR_49 1000  
                         STR_81 1279                           STR_73 1279                           STR_65 1279  
                         STR_57 1279                           STR_82 13D3                           STR_74 13D0  
                         STR_58 13CA                           STR_66 13BC                           STR_90 13B8  
                         STR_67 133B                           STR_91 1344                           STR_83 1344  
                         STR_59 133B                           STR_75 1329                           STR_76 10AE  
                         STR_92 12A1                           STR_68 12A1                           STR_84 10EF  
                         STR_77 1329                           STR_85 1344                           STR_93 1279  
                         STR_69 1279                           STR_78 13D9                           STR_86 112C  
                         STR_94 13D6                           STR_95 12E7                           STR_87 1279  
                         STR_79 12E7                           STR_96 130E                           STR_88 13C0  
               __end_of___flmul 0F43                           STR_97 1279                           STR_89 1279  
                         STR_98 1394                           STR_99 1378                 __end_of___fltol 07D8  
                         _T2CON 001C                           _LATC2 0872                           _LATA6 0866  
                         _LATB5 086D                           _LATA7 0867                           _LATD2 087A  
                         _LATC5 0875                           _LATD4 087C                           _LATC6 0876  
                         _LATD5 087D                           _LATC7 0877                           _LATG0 1C68  
                         _LATD6 087E                           _LATF4 1C64           __end_of_debug_fast_tx 0AD2  
                         _T8CON 0597                           i1l300 009E                           i1l282 0032  
                         i1l274 0012                           i1l292 0065                           i1l276 001C  
                         i1l293 0069                           i1l285 0042                           i1l295 0084  
                         i1l289 005C                           _PORTA 000C                           _PORTB 000D  
                         _PORTC 000E                           _PORTD 000F                           _PORTE 0010  
                         _PORTF 028C                           _PORTG 028D                    main@mem_size 0060  
                         _TRISA 008C                           _TRISB 008D                           _TRISC 008E  
                         _TRISD 008F                           _TRISE 0090                           _TRISF 030C  
                         _TRISG 030D                   __CFG_PWRTE$ON 0000                  __CFG_FCMEN$OFF 0000  
            _current_sink_timer 00A6        __end_of_i2c_Write_string 0B9C                           main@i 0065  
                         main@j 0062                    main@response 0064                           ltemp0 007E  
                         ltemp1 0082                           ltemp2 0086                           ltemp3 0080  
                         ttemp0 007E                           ttemp1 0081                           ttemp2 0084  
                         ttemp3 0087                           ttemp4 007F                           status 0003  
                         wtemp0 007E                           wtemp1 0080                           wtemp2 0082  
                         wtemp3 0084                           wtemp4 0086                           wtemp5 0088  
                         wtemp6 007F                 __initialization 00A2      lcd_set_cursor@LCD_position 0073  
                  __end_of_main 0785          __end_of_i2c_first_line 0B54                __end_of_i2c_Stop 0BEA  
                __CFG_LPBOR$OFF 0000                          ??_main 005B                 ??_lcd_print_int 007B  
           lcd_print_int@number 0020                          _ADCON0 009D                          _ADCON1 009E  
                        STR_100 1245                          STR_101 1279                          STR_102 1398  
                        STR_110 1230                          STR_111 1378                          STR_103 1279  
                        STR_104 139C                          STR_120 138A                          STR_112 1332  
                        STR_113 1378                          STR_121 1279                          STR_105 123D  
                        i1S4938 13DC                          STR_114 11EA                          STR_130 1116  
                        STR_122 138F                          STR_106 1191                          _ADRESH 009C  
                        STR_107 123D                          STR_131 1378                          STR_115 1279  
                        STR_123 11E2                          STR_124 1191                          STR_140 13A4  
                        STR_116 13A0                          STR_132 113B                          STR_108 10CF  
                        STR_109 123D                          STR_133 1378                          STR_125 11E2  
                        STR_117 1279                          STR_141 11C8                          STR_142 10AD  
                        STR_126 1230                          STR_118 1385                          STR_150 12FB  
                        STR_134 10AF                          _ADRESL 009B                          STR_135 1378  
                        STR_127 1378                          STR_151 1279                          STR_143 1279  
                        STR_119 1279                          STR_160 1183                          STR_144 13B0  
                        STR_152 13A8                          STR_128 12F1                          STR_136 105B  
                        STR_137 1378                          STR_129 1378                          STR_145 1159  
                        STR_161 10DF                          STR_153 109F                          STR_146 10AD  
                        STR_162 1183                          STR_170 1264                          STR_154 1223  
                        STR_138 110E                          STR_171 134D                          STR_147 1279  
                        STR_139 1279                          STR_155 12C9                          STR_163 119F  
                        STR_180 1175                          STR_164 1183                          STR_172 1265  
                        STR_148 13AC                          STR_156 12A8                          STR_165 1368  
                        STR_149 12D3                          STR_157 1291                          STR_173 106C  
                        STR_181 104A                          STR_182 1175                          STR_190 11FC  
                        STR_166 1264                          STR_174 1370                          STR_158 1183  
                        STR_191 11FD                          STR_183 111D                          STR_167 1380  
                        STR_159 135F                          STR_175 111D                          STR_176 1175  
                        STR_168 1264                          STR_184 11FC                          STR_192 108E  
                        STR_185 1261                          STR_169 10DF                          STR_177 1261  
                        STR_178 1175                          STR_186 11FC                          STR_187 10DF  
                        STR_179 10DF                          STR_188 11FC                          STR_189 104A  
    __size_of_init_current_sink 0015                          _CCPR9L 061A                          _ANSELA 018C  
                        _ANSELB 018D                          _ANSELD 018F                          _ANSELE 0190  
                        _ANSELF 040C                          _ANSELG 040D              __size_of_i2c_Start 0005  
                        i1l4102 0013                          i1l4110 0025                          i1l4130 0051  
                        i1l4108 0024                          i1l4118 003B                          i1l4142 0070  
                        i1l4152 0090                          i1l4136 0060                          i1l4128 004F  
                        i1l4144 007A                          i1l4154 0094                          i1l4148 0086  
                        i1l4158 009C              __size_of_i2c_Write 000C                          _FVRCON 0117  
              __end_of_Vout_set 08E3                          _OSCCON 0099                          _TMR0IE 005D  
                        _TMR0IF 005A                          _TRISC3 0473                          _TRISC4 0474  
                        _TRISG0 1868                __end_of___xxtofl 1000               print_error@bottom 007A  
                        _RX_one 0854                          _TX_one 082E             _current_sink_stable 00A4  
                        ___bmul 1545                 ?_i2c_first_line 0070                       ??___fladd 0041  
                        ___wmul 1568                  __CFG_STVREN$ON 0000                       ??___flmul 0028  
                     ??___fltol 0051                __end_of_init_ADC 1490                ?_init_i2c_lcd_5v 0071  
              __end_of_init_i2c 082E                __end_of_buzz_one 0BF2                _ADC_cur_sink_val 00A0  
                 i2c_Write@data 0070              __size_of__Umul8_16 0049                  _i2c_write_char 096F  
             debug_fast_tx@data 0070        __end_of_power_supply_set 0C13                    ___xxtofl@arg 007A  
                  ___xxtofl@exp 0079                    ___xxtofl@val 0070                    ?_print_error 0078  
       __end_of__initialization 00B6                      ___fltol@f1 004D             ___bmul@multiplicand 0070  
               _i2c_second_line 0AE3                  __pcstackCOMMON 0070                    __pidataBANK1 0000  
                print_error@top 0078           __end_of_ten_thou_conv 1545               __end_of_i2c_Start 0BE5  
             __end_of_i2c_Write 0BE0              __size_of_clear_lcd 0015                ??_lcd_set_cursor 0072  
        __end_of_i2c_write_char 097C                 _get_30v_current 0C13            i2c_Write_string@data 0071  
          lcd_print_int@decimal 0024                _one_second_timer 00B4                      __pbssBANK0 0069  
                    __pbssBANK1 00A0                       ?_i2c_Stop 0070     lcd_print_int@ten_thou_digit 0025  
                       ?_RX_one 0070              ADC_get_val@channel 0073                         ?_TX_one 0070  
             __end_of__Umul8_16 0F8C                      __pmaintext 157D                         ?___bmul 0070  
                       ?___wmul 0070                      __pintentry 0004                      _digitalpot 0B69  
                       _CCP9CON 061C                       ?_Vout_set 0074                 ?_i2c_write_char 0070  
                     ?___xxtofl 0070                         _SSP1ADD 0212                         _SSP1BUF 0211  
             ?_i2c_Write_string 0071                         RX_one@i 0071                         TX_one@i 0072  
            ??_i2c_Write_string 0073                      ??_i2c_Stop 0070                       ?_init_ADC 0070  
       __end_of_i2c_second_line 0AF4                       ?_init_i2c 0070               __end_of_clear_lcd 0B69  
                     ?_buzz_one 0070                   ??_ADC_get_val 0073                 __size_of_RX_one 0027  
               __size_of_TX_one 0026                 __size_of___bmul 0023                         ___fladd 0C70  
                       ___flmul 0DC1                         ___fltol 0785                 __size_of___wmul 0015  
       __end_of_get_30v_current 0C5E                         __ptext1 097C                         __ptext2 0AF4  
                       __ptext3 0AD2                         __ptext4 0AE3                         __ptext5 0B43  
                       __ptext6 0B81                         __ptext7 0B54                         __ptext8 0BF2  
                       __ptext9 0AA5                      ??_Vout_set 0076                    __size_of_isr 009C  
                    ??___xxtofl 0074                      _buzz_timer 00B1  init_i2c_lcd_5v@single1_double2 0071  
                       clrloop0 1491            end_of_initialization 00B6                      ??_init_ADC 0070  
                    ??_init_i2c 0070                      ??_buzz_one 0072                ??_i2c_first_line 0071  
          __size_of_print_error 004F          __size_of_debug_fast_tx 002D                         psplit$0 C0035  
                       psplit$1 350036                    __pstringtext 1000                     ?_digitalpot 0070  
           __end_of_ADC_get_val 0C70              RX_one_timeout@data 0072         __size_of_RX_one_timeout 002F  
                   ___fladd@grs 004C                __CFG_FOSC$INTOSC 0000           __end_of_lcd_print_int 096F  
                 ___xxtofl@sign 0078                   ?_print_screen 0074            pnum$maintext_split_1 0035  
          pnum$maintext_split_2 0036                   ?_testjig_done 0078                     ___flmul@grs 002E  
             ?_power_supply_set 0070                ?_i2c_second_line 0070              ??_power_supply_set 0070  
                ten_thou_conv@n 0076                  __end_of_RX_one 087B                  __end_of_TX_one 0854  
                __end_of___bmul 1568                  __end_of___wmul 157D                    buzz_one@time 0070  
              ?_get_30v_current 0057                   _debug_fast_tx 0AA5                       _i2c_Start 0BE0  
                     _i2c_Write 0BD4             start_initialization 00A2        __size_of_init_i2c_lcd_5v 0038  
                ??_print_screen 0078                     __end_of_isr 00A0                  ??_testjig_done 0079  
           __size_of_digitalpot 0018               __size_of_i2c_Stop 0005                 print_screen@top 0074  
                      ??_RX_one 0070                        ??_TX_one 0070                     _ADC_get_val 0C5E  
       testjig_done@device_type 0078                        ??___bmul 0071                        ??___wmul 0074  
                     __Umul8_16 0F43                     __pdataBANK1 00B4                ??_i2c_write_char 0071  
                     ___fladd@a 003D                       ___fladd@b 0039                  ?_debug_fast_tx 0070  
                    ?_i2c_Start 0070                      ?_i2c_Write 0070                       ___flmul@a 0024  
                     ___flmul@b 0020               __size_of_Vout_set 0039                       ___latbits 0003  
               main@device_type 0067                   __pcstackBANK0 0020              _pickit_red_counter 00B0  
             __size_of___xxtofl 0074                lcd_print_int@pos 0022          __size_of_ten_thou_conv 00AF  
                     __pnvBANK1 00B1               __size_of_init_ADC 0006               __size_of_init_i2c 0017  
                     _clear_lcd 0B54               __size_of_buzz_one 0008       __size_of_i2c_Write_string 001B  
                      ?___fladd 0039                        ?___flmul 0020                        ?___fltol 004D  
                    ?__Umul8_16 0070                  _RX_one_timeout 087B                       __pswtext1 13E8  
                     __pswtext2 07D8                       __pswtext3 13DC                        _CCPTMRS2 029F  
              __CFG_WDTE$SWDTEN 0000               ??_init_i2c_lcd_5v 0072         __size_of_lcd_set_cursor 0018  
                ___wmul@product 0074                       clear_ram0 1490                        _PIE1bits 0091  
                      _PCONbits 0096                        _PIR1bits 0011                      ?_clear_lcd 0070  
          __end_of_print_screen 0AE3              print_screen@bottom 0076                        _SSP1CON1 0215  
                      _SSP1CON2 0216            __end_of_testjig_done 0AA5          __end_of_RX_one_timeout 08AA  
                  ??_digitalpot 0071                        _SSP1STAT 0214                    _pickit_timer 00AA  
                  _pickit_state 00B3                   _ten_thou_conv 1496                 ??_debug_fast_tx 0072  
                    _ADCON0bits 009D               ___wmul@multiplier 0070                     ??_i2c_Start 0070  
                   ??_i2c_Write 0070                  debug_fast_tx@i 0072               testjig_done@state 007C  
                      _i2c_Stop 0BE5                   ??_print_error 0020              __end_of_digitalpot 0B81  
         ADC_get_val@return_val 0074                   Vout_set@Volts 0074                 ?_RX_one_timeout 0070  
                   ??__Umul8_16 0073                 RX_one_timeout@i 0071                    pnum$maintext 000C  
              __size_of___fladd 0151                  ?_ten_thou_conv 0076                __size_of___flmul 0182  
              __size_of___fltol 0053       __size_of_power_supply_set 0021                        _Vout_set 08AA  
       init_i2c_lcd_5v@contrast 0074               Vout_set@digi_step 0076                        ___xxtofl 0F8C  
                      __ptext10 0BEA                        __ptext11 08FB                        __ptext20 148A  
                      __ptext12 1496                        __ptext21 0C13                        __ptext13 1568  
                      __ptext30 0BD4                        __ptext22 0F8C                        __ptext14 1545  
                      __ptext31 0BE5                        __ptext23 0785                        __ptext15 08E3  
                      __ptext32 0BE0                        __ptext24 0DC1                        __ptext16 096F  
                      __ptext33 082E                        __ptext25 0F43                        __ptext17 0B9C  
                      __ptext34 087B                        __ptext26 0C70                        __ptext18 0817  
                      __ptext35 0854                        __ptext27 0C5E                        __ptext19 0802  
                      __ptext28 08AA                        __ptext29 0B69                    _SSP1CON2bits 0216  
                      _init_ADC 148A                        _init_i2c 0817                   __size_of_main F208  
                      _buzz_one 0BEA                    ?_ADC_get_val 0070                     ??_clear_lcd 0071  
           __end_of_print_error 0B43                _i2c_Write_string 0B81                        _ten_thou 006D  
                      _tj_timer 00AC          __size_of_lcd_print_int 0074        __size_of_i2c_second_line 0011  
                      int$flags 007E                    _SSP1STATbits 0214                        main@temp 005E  
       __size_of_i2c_first_line 0011              _uart_receive_timer 00AE             get_30v_current@temp 0059  
                    _INTCONbits 000B        __size_of_get_30v_current 004B                        intlevel1 0000  
                _lcd_set_cursor 08E3               lcd_set_cursor@col 0071               lcd_set_cursor@row 0072  
         __size_of_print_screen 0011               __CFG_CLKOUTEN$OFF 0000           __size_of_testjig_done 0129  
        power_supply_set@supply 0070                 ??_ten_thou_conv 0078          __Umul8_16@multiplicand 0070  
                    _OPTION_REG 0095                   _testjig_timer 0069                 _init_i2c_lcd_5v 0B9C  
                 _lcd_print_int 08FB                 _curent_sink_val 00A2                    _print_screen 0AD2  
        __end_of_lcd_set_cursor 08FB                   ___fladd@signs 0049                    _testjig_done 097C  
             _init_current_sink 0802                      RX_one@data 0072                     _print_error 0AF4  
                  ___fladd@aexp 004A                    ___fladd@bexp 004B            __Umul8_16@multiplier 0075  
            ?_init_current_sink 0070               __Umul8_16@product 0073  
