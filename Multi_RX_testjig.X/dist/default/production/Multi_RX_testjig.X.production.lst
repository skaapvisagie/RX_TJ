

Microchip Technology PIC PRO Macro Assembler V1.35 build -356382666 
                                                                                               Fri Mar 01 14:16:08 2019

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	swtext2,local,class=CONST,delta=2
    17                           	psect	text12,local,class=CODE,merge=1,delta=2
    18                           	psect	text18,local,class=CODE,merge=1,delta=2
    19                           	psect	text19,local,class=CODE,merge=1,delta=2
    20                           	psect	text20,local,class=CODE,merge=1,delta=2
    21                           	psect	text21,local,class=CODE,merge=1,delta=2
    22                           	psect	text23,local,class=CODE,merge=1,delta=2
    23                           	psect	text28,local,class=CODE,merge=1,delta=2
    24                           	psect	text33,local,class=CODE,merge=1,delta=2
    25                           	psect	text34,local,class=CODE,merge=1,delta=2
    26                           	psect	text35,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	pa_nodes,global,class=CODE,delta=2
    29                           	psect	maintext_split_1,global,class=CODE,merge=1,split=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     	;# 
    32  0001                     	;# 
    33  0002                     	;# 
    34  0003                     	;# 
    35  0004                     	;# 
    36  0005                     	;# 
    37  0006                     	;# 
    38  0007                     	;# 
    39  0008                     	;# 
    40  0009                     	;# 
    41  000A                     	;# 
    42  000B                     	;# 
    43  000C                     	;# 
    44  000D                     	;# 
    45  000E                     	;# 
    46  000F                     	;# 
    47  0010                     	;# 
    48  0011                     	;# 
    49  0012                     	;# 
    50  0013                     	;# 
    51  0014                     	;# 
    52  0015                     	;# 
    53  0016                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  001A                     	;# 
    59  001B                     	;# 
    60  001C                     	;# 
    61  008C                     	;# 
    62  008D                     	;# 
    63  008E                     	;# 
    64  008F                     	;# 
    65  0090                     	;# 
    66  0091                     	;# 
    67  0092                     	;# 
    68  0093                     	;# 
    69  0094                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0097                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009B                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  010C                     	;# 
    81  010D                     	;# 
    82  010E                     	;# 
    83  010F                     	;# 
    84  0110                     	;# 
    85  0116                     	;# 
    86  0117                     	;# 
    87  011D                     	;# 
    88  018C                     	;# 
    89  018D                     	;# 
    90  018F                     	;# 
    91  0190                     	;# 
    92  0191                     	;# 
    93  0191                     	;# 
    94  0192                     	;# 
    95  0193                     	;# 
    96  0193                     	;# 
    97  0194                     	;# 
    98  0195                     	;# 
    99  0196                     	;# 
   100  0197                     	;# 
   101  0199                     	;# 
   102  0199                     	;# 
   103  0199                     	;# 
   104  019A                     	;# 
   105  019A                     	;# 
   106  019A                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019B                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019C                     	;# 
   113  019C                     	;# 
   114  019C                     	;# 
   115  019D                     	;# 
   116  019D                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019E                     	;# 
   120  019E                     	;# 
   121  019F                     	;# 
   122  019F                     	;# 
   123  019F                     	;# 
   124  020D                     	;# 
   125  020F                     	;# 
   126  0210                     	;# 
   127  0211                     	;# 
   128  0211                     	;# 
   129  0212                     	;# 
   130  0212                     	;# 
   131  0213                     	;# 
   132  0213                     	;# 
   133  0214                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  0219                     	;# 
   143  021A                     	;# 
   144  021B                     	;# 
   145  021C                     	;# 
   146  021D                     	;# 
   147  021E                     	;# 
   148  021F                     	;# 
   149  028C                     	;# 
   150  028D                     	;# 
   151  0291                     	;# 
   152  0291                     	;# 
   153  0292                     	;# 
   154  0293                     	;# 
   155  0298                     	;# 
   156  0298                     	;# 
   157  0299                     	;# 
   158  029A                     	;# 
   159  029D                     	;# 
   160  029E                     	;# 
   161  029F                     	;# 
   162  030C                     	;# 
   163  030D                     	;# 
   164  0311                     	;# 
   165  0311                     	;# 
   166  0312                     	;# 
   167  0313                     	;# 
   168  0318                     	;# 
   169  0318                     	;# 
   170  0319                     	;# 
   171  031A                     	;# 
   172  031C                     	;# 
   173  031C                     	;# 
   174  031D                     	;# 
   175  031E                     	;# 
   176  038C                     	;# 
   177  038D                     	;# 
   178  0394                     	;# 
   179  0395                     	;# 
   180  0396                     	;# 
   181  040C                     	;# 
   182  040D                     	;# 
   183  0411                     	;# 
   184  0411                     	;# 
   185  0412                     	;# 
   186  0413                     	;# 
   187  0414                     	;# 
   188  0415                     	;# 
   189  0416                     	;# 
   190  0417                     	;# 
   191  0418                     	;# 
   192  0418                     	;# 
   193  0419                     	;# 
   194  041A                     	;# 
   195  041B                     	;# 
   196  041C                     	;# 
   197  041D                     	;# 
   198  041E                     	;# 
   199  048D                     	;# 
   200  0491                     	;# 
   201  0491                     	;# 
   202  0492                     	;# 
   203  0492                     	;# 
   204  0493                     	;# 
   205  0493                     	;# 
   206  0493                     	;# 
   207  0494                     	;# 
   208  0494                     	;# 
   209  0495                     	;# 
   210  0495                     	;# 
   211  0496                     	;# 
   212  0496                     	;# 
   213  0497                     	;# 
   214  0497                     	;# 
   215  0595                     	;# 
   216  0596                     	;# 
   217  0597                     	;# 
   218  059C                     	;# 
   219  059D                     	;# 
   220  059E                     	;# 
   221  0611                     	;# 
   222  0611                     	;# 
   223  0612                     	;# 
   224  0613                     	;# 
   225  0614                     	;# 
   226  0614                     	;# 
   227  0615                     	;# 
   228  0616                     	;# 
   229  0617                     	;# 
   230  0617                     	;# 
   231  0618                     	;# 
   232  0619                     	;# 
   233  061A                     	;# 
   234  061A                     	;# 
   235  061B                     	;# 
   236  061C                     	;# 
   237  061D                     	;# 
   238  061D                     	;# 
   239  061E                     	;# 
   240  061F                     	;# 
   241  0FE4                     	;# 
   242  0FE5                     	;# 
   243  0FE6                     	;# 
   244  0FE7                     	;# 
   245  0FE8                     	;# 
   246  0FE9                     	;# 
   247  0FEA                     	;# 
   248  0FEB                     	;# 
   249  0FED                     	;# 
   250  0FEE                     	;# 
   251  0FEF                     	;# 
   252                           
   253                           	psect	idataBANK1
   254  0000                     __pidataBANK1:	
   255                           
   256                           	psect	nvBANK1
   257  00BB                     __pnvBANK1:	
   258  00BB                     _pickit_state:	
   259  00BB                     	ds	1
   260  000B                     _INTCONbits	set	11
   261  0011                     _PIR1bits	set	17
   262  000C                     _PORTA	set	12
   263  000D                     _PORTB	set	13
   264  000E                     _PORTC	set	14
   265  000F                     _PORTD	set	15
   266  0010                     _PORTE	set	16
   267  001B                     _PR2	set	27
   268  001C                     _T2CON	set	28
   269  0015                     _TMR0	set	21
   270  005F                     _GIE	set	95
   271  0062                     _RA2	set	98
   272  0064                     _RA4	set	100
   273  0065                     _RA5	set	101
   274  0080                     _RE0	set	128
   275  0084                     _RE4	set	132
   276  0085                     _RE5	set	133
   277  0086                     _RE6	set	134
   278  005D                     _TMR0IE	set	93
   279  005A                     _TMR0IF	set	90
   280  009D                     _ADCON0	set	157
   281  009D                     _ADCON0bits	set	157
   282  009E                     _ADCON1	set	158
   283  009C                     _ADRESH	set	156
   284  009B                     _ADRESL	set	155
   285  0095                     _OPTION_REG	set	149
   286  0099                     _OSCCON	set	153
   287  0096                     _PCONbits	set	150
   288  0091                     _PIE1bits	set	145
   289  008C                     _TRISA	set	140
   290  008D                     _TRISB	set	141
   291  008E                     _TRISC	set	142
   292  008F                     _TRISD	set	143
   293  0090                     _TRISE	set	144
   294  0473                     _TRISC3	set	1139
   295  0474                     _TRISC4	set	1140
   296  0117                     _FVRCON	set	279
   297  0866                     _LATA6	set	2150
   298  0867                     _LATA7	set	2151
   299  086D                     _LATB5	set	2157
   300  086F                     _LATB7	set	2159
   301  0872                     _LATC2	set	2162
   302  0875                     _LATC5	set	2165
   303  0876                     _LATC6	set	2166
   304  0877                     _LATC7	set	2167
   305  087A                     _LATD2	set	2170
   306  087C                     _LATD4	set	2172
   307  087D                     _LATD5	set	2173
   308  087E                     _LATD6	set	2174
   309  018C                     _ANSELA	set	396
   310  018D                     _ANSELB	set	397
   311  018F                     _ANSELD	set	399
   312  0190                     _ANSELE	set	400
   313  0212                     _SSP1ADD	set	530
   314  0211                     _SSP1BUF	set	529
   315  0215                     _SSP1CON1	set	533
   316  0216                     _SSP1CON2	set	534
   317  0216                     _SSP1CON2bits	set	534
   318  0214                     _SSP1STAT	set	532
   319  0214                     _SSP1STATbits	set	532
   320  020D                     _WPUB	set	525
   321  020F                     _WPUD	set	527
   322  0210                     _WPUE	set	528
   323  029F                     _CCPTMRS2	set	671
   324  028C                     _PORTF	set	652
   325  028D                     _PORTG	set	653
   326  1460                     _RF0	set	5216
   327  1461                     _RF1	set	5217
   328  1462                     _RF2	set	5218
   329  1463                     _RF3	set	5219
   330  1465                     _RF5	set	5221
   331  1468                     _RG0	set	5224
   332  1469                     _RG1	set	5225
   333  030C                     _TRISF	set	780
   334  030D                     _TRISG	set	781
   335  1869                     _TRISG1	set	6249
   336  1C64                     _LATF4	set	7268
   337  1C69                     _LATG1	set	7273
   338  040C                     _ANSELF	set	1036
   339  040D                     _ANSELG	set	1037
   340  048D                     _WPUG	set	1165
   341  0596                     _PR8	set	1430
   342  0597                     _T8CON	set	1431
   343  061C                     _CCP9CON	set	1564
   344  061A                     _CCPR9L	set	1562
   345                           
   346                           	psect	stringtext
   347  1000                     __pstringtext:	
   348  1000                     STR_53:	
   349  1000  3452               	retlw	82	;'R'
   350  1001  3465               	retlw	101	;'e'
   351  1002  346C               	retlw	108	;'l'
   352  1003  3461               	retlw	97	;'a'
   353  1004  3479               	retlw	121	;'y'
   354  1005  3431               	retlw	49	;'1'
   355  1006  3420               	retlw	32	;' '
   356  1007  3421               	retlw	33	;'!'
   357  1008  3464               	retlw	100	;'d'
   358  1009  3465               	retlw	101	;'e'
   359  100A  342D               	retlw	45	;'-'
   360  100B  3465               	retlw	101	;'e'
   361  100C  346E               	retlw	110	;'n'
   362  100D  3465               	retlw	101	;'e'
   363  100E  3472               	retlw	114	;'r'
   364  100F  3467               	retlw	103	;'g'
   365  1010  3469               	retlw	105	;'i'
   366  1011  347A               	retlw	122	;'z'
   367  1012  3465               	retlw	101	;'e'
   368  1013  3464               	retlw	100	;'d'
   369  1014  3400               	retlw	0
   370  1015                     STR_67:	
   371  1015  3452               	retlw	82	;'R'
   372  1016  3465               	retlw	101	;'e'
   373  1017  346C               	retlw	108	;'l'
   374  1018  3461               	retlw	97	;'a'
   375  1019  3479               	retlw	121	;'y'
   376  101A  3432               	retlw	50	;'2'
   377  101B  3420               	retlw	32	;' '
   378  101C  3421               	retlw	33	;'!'
   379  101D  3464               	retlw	100	;'d'
   380  101E  3465               	retlw	101	;'e'
   381  101F  342D               	retlw	45	;'-'
   382  1020  3465               	retlw	101	;'e'
   383  1021  346E               	retlw	110	;'n'
   384  1022  3465               	retlw	101	;'e'
   385  1023  3472               	retlw	114	;'r'
   386  1024  3467               	retlw	103	;'g'
   387  1025  3469               	retlw	105	;'i'
   388  1026  347A               	retlw	122	;'z'
   389  1027  3465               	retlw	101	;'e'
   390  1028  3464               	retlw	100	;'d'
   391  1029  3400               	retlw	0
   392  102A                     STR_81:	
   393  102A  3452               	retlw	82	;'R'
   394  102B  3465               	retlw	101	;'e'
   395  102C  346C               	retlw	108	;'l'
   396  102D  3461               	retlw	97	;'a'
   397  102E  3479               	retlw	121	;'y'
   398  102F  3433               	retlw	51	;'3'
   399  1030  3420               	retlw	32	;' '
   400  1031  3421               	retlw	33	;'!'
   401  1032  3464               	retlw	100	;'d'
   402  1033  3465               	retlw	101	;'e'
   403  1034  342D               	retlw	45	;'-'
   404  1035  3465               	retlw	101	;'e'
   405  1036  346E               	retlw	110	;'n'
   406  1037  3465               	retlw	101	;'e'
   407  1038  3472               	retlw	114	;'r'
   408  1039  3467               	retlw	103	;'g'
   409  103A  3469               	retlw	105	;'i'
   410  103B  347A               	retlw	122	;'z'
   411  103C  3465               	retlw	101	;'e'
   412  103D  3464               	retlw	100	;'d'
   413  103E  3400               	retlw	0
   414  103F                     STR_27:	
   415  103F  3450               	retlw	80	;'P'
   416  1040  3469               	retlw	105	;'i'
   417  1041  3463               	retlw	99	;'c'
   418  1042  346B               	retlw	107	;'k'
   419  1043  3469               	retlw	105	;'i'
   420  1044  3474               	retlw	116	;'t'
   421  1045  3420               	retlw	32	;' '
   422  1046  3450               	retlw	80	;'P'
   423  1047  3472               	retlw	114	;'r'
   424  1048  346F               	retlw	111	;'o'
   425  1049  3467               	retlw	103	;'g'
   426  104A  3472               	retlw	114	;'r'
   427  104B  3461               	retlw	97	;'a'
   428  104C  346D               	retlw	109	;'m'
   429  104D  346D               	retlw	109	;'m'
   430  104E  3469               	retlw	105	;'i'
   431  104F  346E               	retlw	110	;'n'
   432  1050  3467               	retlw	103	;'g'
   433  1051  3400               	retlw	0
   434  1052                     STR_38:	
   435  1052  3445               	retlw	69	;'E'
   436  1053  3445               	retlw	69	;'E'
   437  1054  3450               	retlw	80	;'P'
   438  1055  3452               	retlw	82	;'R'
   439  1056  344F               	retlw	79	;'O'
   440  1057  344D               	retlw	77	;'M'
   441  1058  3420               	retlw	32	;' '
   442  1059  3472               	retlw	114	;'r'
   443  105A  3465               	retlw	101	;'e'
   444  105B  3461               	retlw	97	;'a'
   445  105C  3464               	retlw	100	;'d'
   446  105D  342F               	retlw	47	;'/'
   447  105E  3477               	retlw	119	;'w'
   448  105F  3472               	retlw	114	;'r'
   449  1060  3469               	retlw	105	;'i'
   450  1061  3474               	retlw	116	;'t'
   451  1062  3465               	retlw	101	;'e'
   452  1063  3400               	retlw	0
   453  1064                     STR_48:	
   454  1064  3420               	retlw	32	;' '
   455  1065  3445               	retlw	69	;'E'
   456  1066  3472               	retlw	114	;'r'
   457  1067  3472               	retlw	114	;'r'
   458  1068  346F               	retlw	111	;'o'
   459  1069  3472               	retlw	114	;'r'
   460  106A  3420               	retlw	32	;' '
   461  106B  344D               	retlw	77	;'M'
   462  106C  3465               	retlw	101	;'e'
   463  106D  346D               	retlw	109	;'m'
   464  106E  345F               	retlw	95	;'_'
   465  106F  3463               	retlw	99	;'c'
   466  1070  346F               	retlw	111	;'o'
   467  1071  3470               	retlw	112	;'p'
   468  1072  3469               	retlw	105	;'i'
   469  1073  3465               	retlw	101	;'e'
   470  1074  3472               	retlw	114	;'r'
   471  1075  3400               	retlw	0
   472  1076                     STR_165:	
   473  1076  344D               	retlw	77	;'M'
   474  1077  3475               	retlw	117	;'u'
   475  1078  346C               	retlw	108	;'l'
   476  1079  3474               	retlw	116	;'t'
   477  107A  3469               	retlw	105	;'i'
   478  107B  345F               	retlw	95	;'_'
   479  107C  3452               	retlw	82	;'R'
   480  107D  3458               	retlw	88	;'X'
   481  107E  3420               	retlw	32	;' '
   482  107F  3454               	retlw	84	;'T'
   483  1080  3465               	retlw	101	;'e'
   484  1081  3473               	retlw	115	;'s'
   485  1082  3474               	retlw	116	;'t'
   486  1083  346A               	retlw	106	;'j'
   487  1084  3469               	retlw	105	;'i'
   488  1085  3467               	retlw	103	;'g'
   489  1086  3400               	retlw	0
   490  1087                     STR_120:	
   491  1087  3444               	retlw	68	;'D'
   492  1088  3465               	retlw	101	;'e'
   493  1089  3463               	retlw	99	;'c'
   494  108A  346F               	retlw	111	;'o'
   495  108B  3464               	retlw	100	;'d'
   496  108C  3465               	retlw	101	;'e'
   497  108D  3420               	retlw	32	;' '
   498  108E  344F               	retlw	79	;'O'
   499  108F  346C               	retlw	108	;'l'
   500  1090  3464               	retlw	100	;'d'
   501  1091  3420               	retlw	32	;' '
   502  1092  342D               	retlw	45	;'-'
   503  1093  3446               	retlw	70	;'F'
   504  1094  3461               	retlw	97	;'a'
   505  1095  3469               	retlw	105	;'i'
   506  1096  346C               	retlw	108	;'l'
   507  1097  3400               	retlw	0
   508  1098                     STR_157:	
   509  1098  3454               	retlw	84	;'T'
   510  1099  3465               	retlw	101	;'e'
   511  109A  3473               	retlw	115	;'s'
   512  109B  3474               	retlw	116	;'t'
   513  109C  346A               	retlw	106	;'j'
   514  109D  3469               	retlw	105	;'i'
   515  109E  3467               	retlw	103	;'g'
   516  109F  3420               	retlw	32	;' '
   517  10A0  3450               	retlw	80	;'P'
   518  10A1  346F               	retlw	111	;'o'
   519  10A2  3477               	retlw	119	;'w'
   520  10A3  3465               	retlw	101	;'e'
   521  10A4  3472               	retlw	114	;'r'
   522  10A5  342D               	retlw	45	;'-'
   523  10A6  3475               	retlw	117	;'u'
   524  10A7  3470               	retlw	112	;'p'
   525  10A8  3400               	retlw	0
   526  10A9                     STR_2:	
   527  10A9  3454               	retlw	84	;'T'
   528  10AA  3465               	retlw	101	;'e'
   529  10AB  3473               	retlw	115	;'s'
   530  10AC  3474               	retlw	116	;'t'
   531  10AD  342D               	retlw	45	;'-'
   532  10AE  344A               	retlw	74	;'J'
   533  10AF  3469               	retlw	105	;'i'
   534  10B0  3467               	retlw	103	;'g'
   535  10B1  347C               	retlw	124	;'|'
   536  10B2  3453               	retlw	83	;'S'
   537  10B3  3474               	retlw	116	;'t'
   538  10B4  3461               	retlw	97	;'a'
   539  10B5  3472               	retlw	114	;'r'
   540  10B6  3474               	retlw	116	;'t'
   541  10B7  3475               	retlw	117	;'u'
   542  10B8  3470               	retlw	112	;'p'
   543  10B9  3400               	retlw	0
   544  10BA                     STR_176:	
   545  10BA  3420               	retlw	32	;' '
   546  10BB  3474               	retlw	116	;'t'
   547  10BC  346F               	retlw	111	;'o'
   548  10BD  3420               	retlw	32	;' '
   549  10BE  3472               	retlw	114	;'r'
   550  10BF  3465               	retlw	101	;'e'
   551  10C0  3473               	retlw	115	;'s'
   552  10C1  3474               	retlw	116	;'t'
   553  10C2  3461               	retlw	97	;'a'
   554  10C3  3472               	retlw	114	;'r'
   555  10C4  3474               	retlw	116	;'t'
   556  10C5  3420               	retlw	32	;' '
   557  10C6  3474               	retlw	116	;'t'
   558  10C7  3465               	retlw	101	;'e'
   559  10C8  3473               	retlw	115	;'s'
   560  10C9  3474               	retlw	116	;'t'
   561  10CA  3400               	retlw	0
   562  10CB                     STR_137:	
   563  10CB  3437               	retlw	55	;'7'
   564  10CC  3473               	retlw	115	;'s'
   565  10CD  3465               	retlw	101	;'e'
   566  10CE  3467               	retlw	103	;'g'
   567  10CF  342C               	retlw	44	;','
   568  10D0  3420               	retlw	32	;' '
   569  10D1  3462               	retlw	98	;'b'
   570  10D2  3475               	retlw	117	;'u'
   571  10D3  347A               	retlw	122	;'z'
   572  10D4  347A               	retlw	122	;'z'
   573  10D5  3465               	retlw	101	;'e'
   574  10D6  3472               	retlw	114	;'r'
   575  10D7  342C               	retlw	44	;','
   576  10D8  3420               	retlw	32	;' '
   577  10D9  3420               	retlw	32	;' '
   578  10DA  3400               	retlw	0
   579  10DB                     STR_118:	
   580  10DB  3444               	retlw	68	;'D'
   581  10DC  3465               	retlw	101	;'e'
   582  10DD  3463               	retlw	99	;'c'
   583  10DE  346F               	retlw	111	;'o'
   584  10DF  3464               	retlw	100	;'d'
   585  10E0  3465               	retlw	101	;'e'
   586  10E1  3420               	retlw	32	;' '
   587  10E2  344E               	retlw	78	;'N'
   588  10E3  3465               	retlw	101	;'e'
   589  10E4  3477               	retlw	119	;'w'
   590  10E5  3420               	retlw	32	;' '
   591  10E6  342D               	retlw	45	;'-'
   592  10E7  3420               	retlw	32	;' '
   593  10E8  344F               	retlw	79	;'O'
   594  10E9  344B               	retlw	75	;'K'
   595  10EA  3400               	retlw	0
   596  10EB                     STR_57:	
   597  10EB  3452               	retlw	82	;'R'
   598  10EC  3465               	retlw	101	;'e'
   599  10ED  346C               	retlw	108	;'l'
   600  10EE  3461               	retlw	97	;'a'
   601  10EF  3479               	retlw	121	;'y'
   602  10F0  3431               	retlw	49	;'1'
   603  10F1  3420               	retlw	32	;' '
   604  10F2  3421               	retlw	33	;'!'
   605  10F3  346C               	retlw	108	;'l'
   606  10F4  3461               	retlw	97	;'a'
   607  10F5  3474               	retlw	116	;'t'
   608  10F6  3463               	retlw	99	;'c'
   609  10F7  3468               	retlw	104	;'h'
   610  10F8  3465               	retlw	101	;'e'
   611  10F9  3464               	retlw	100	;'d'
   612  10FA  3400               	retlw	0
   613  10FB                     STR_71:	
   614  10FB  3452               	retlw	82	;'R'
   615  10FC  3465               	retlw	101	;'e'
   616  10FD  346C               	retlw	108	;'l'
   617  10FE  3461               	retlw	97	;'a'
   618  10FF  3479               	retlw	121	;'y'
   619  1100  3432               	retlw	50	;'2'
   620  1101  3420               	retlw	32	;' '
   621  1102  3421               	retlw	33	;'!'
   622  1103  346C               	retlw	108	;'l'
   623  1104  3461               	retlw	97	;'a'
   624  1105  3474               	retlw	116	;'t'
   625  1106  3463               	retlw	99	;'c'
   626  1107  3468               	retlw	104	;'h'
   627  1108  3465               	retlw	101	;'e'
   628  1109  3464               	retlw	100	;'d'
   629  110A  3400               	retlw	0
   630  110B                     STR_85:	
   631  110B  3452               	retlw	82	;'R'
   632  110C  3465               	retlw	101	;'e'
   633  110D  346C               	retlw	108	;'l'
   634  110E  3461               	retlw	97	;'a'
   635  110F  3479               	retlw	121	;'y'
   636  1110  3433               	retlw	51	;'3'
   637  1111  3420               	retlw	32	;' '
   638  1112  3421               	retlw	33	;'!'
   639  1113  346C               	retlw	108	;'l'
   640  1114  3461               	retlw	97	;'a'
   641  1115  3474               	retlw	116	;'t'
   642  1116  3463               	retlw	99	;'c'
   643  1117  3468               	retlw	104	;'h'
   644  1118  3465               	retlw	101	;'e'
   645  1119  3464               	retlw	100	;'d'
   646  111A  3400               	retlw	0
   647  111B                     STR_145:	
   648  111B  344D               	retlw	77	;'M'
   649  111C  3465               	retlw	101	;'e'
   650  111D  346D               	retlw	109	;'m'
   651  111E  345F               	retlw	95	;'_'
   652  111F  3443               	retlw	67	;'C'
   653  1120  346F               	retlw	111	;'o'
   654  1121  3470               	retlw	112	;'p'
   655  1122  3469               	retlw	105	;'i'
   656  1123  3465               	retlw	101	;'e'
   657  1124  3472               	retlw	114	;'r'
   658  1125  3420               	retlw	32	;' '
   659  1126  3450               	retlw	80	;'P'
   660  1127  3461               	retlw	97	;'a'
   661  1128  3473               	retlw	115	;'s'
   662  1129  3473               	retlw	115	;'s'
   663  112A  3400               	retlw	0
   664  112B                     STR_61:	
   665  112B  3452               	retlw	82	;'R'
   666  112C  3465               	retlw	101	;'e'
   667  112D  346C               	retlw	108	;'l'
   668  112E  3461               	retlw	97	;'a'
   669  112F  3479               	retlw	121	;'y'
   670  1130  3431               	retlw	49	;'1'
   671  1131  3420               	retlw	32	;' '
   672  1132  346C               	retlw	108	;'l'
   673  1133  3461               	retlw	97	;'a'
   674  1134  3474               	retlw	116	;'t'
   675  1135  3463               	retlw	99	;'c'
   676  1136  3468               	retlw	104	;'h'
   677  1137  3465               	retlw	101	;'e'
   678  1138  3464               	retlw	100	;'d'
   679  1139  3400               	retlw	0
   680  113A                     STR_75:	
   681  113A  3452               	retlw	82	;'R'
   682  113B  3465               	retlw	101	;'e'
   683  113C  346C               	retlw	108	;'l'
   684  113D  3461               	retlw	97	;'a'
   685  113E  3479               	retlw	121	;'y'
   686  113F  3432               	retlw	50	;'2'
   687  1140  3420               	retlw	32	;' '
   688  1141  346C               	retlw	108	;'l'
   689  1142  3461               	retlw	97	;'a'
   690  1143  3474               	retlw	116	;'t'
   691  1144  3463               	retlw	99	;'c'
   692  1145  3468               	retlw	104	;'h'
   693  1146  3465               	retlw	101	;'e'
   694  1147  3464               	retlw	100	;'d'
   695  1148  3400               	retlw	0
   696  1149                     STR_89:	
   697  1149  3452               	retlw	82	;'R'
   698  114A  3465               	retlw	101	;'e'
   699  114B  346C               	retlw	108	;'l'
   700  114C  3461               	retlw	97	;'a'
   701  114D  3479               	retlw	121	;'y'
   702  114E  3433               	retlw	51	;'3'
   703  114F  3420               	retlw	32	;' '
   704  1150  346C               	retlw	108	;'l'
   705  1151  3461               	retlw	97	;'a'
   706  1152  3474               	retlw	116	;'t'
   707  1153  3463               	retlw	99	;'c'
   708  1154  3468               	retlw	104	;'h'
   709  1155  3465               	retlw	101	;'e'
   710  1156  3464               	retlw	100	;'d'
   711  1157  3400               	retlw	0
   712  1158                     STR_5:	
   713  1158  3450               	retlw	80	;'P'
   714  1159  346F               	retlw	111	;'o'
   715  115A  3477               	retlw	119	;'w'
   716  115B  3465               	retlw	101	;'e'
   717  115C  3472               	retlw	114	;'r'
   718  115D  3469               	retlw	105	;'i'
   719  115E  346E               	retlw	110	;'n'
   720  115F  3467               	retlw	103	;'g'
   721  1160  3420               	retlw	32	;' '
   722  1161  3462               	retlw	98	;'b'
   723  1162  346F               	retlw	111	;'o'
   724  1163  3461               	retlw	97	;'a'
   725  1164  3472               	retlw	114	;'r'
   726  1165  3464               	retlw	100	;'d'
   727  1166  3400               	retlw	0
   728  1167                     STR_122:	
   729  1167  3445               	retlw	69	;'E'
   730  1168  3472               	retlw	114	;'r'
   731  1169  3472               	retlw	114	;'r'
   732  116A  346F               	retlw	111	;'o'
   733  116B  3472               	retlw	114	;'r'
   734  116C  3420               	retlw	32	;' '
   735  116D  342D               	retlw	45	;'-'
   736  116E  3420               	retlw	32	;' '
   737  116F  3444               	retlw	68	;'D'
   738  1170  3465               	retlw	101	;'e'
   739  1171  3463               	retlw	99	;'c'
   740  1172  346F               	retlw	111	;'o'
   741  1173  3464               	retlw	100	;'d'
   742  1174  3465               	retlw	101	;'e'
   743  1175  3400               	retlw	0
   744  1176                     STR_159:	
   745  1176  3443               	retlw	67	;'C'
   746  1177  346F               	retlw	111	;'o'
   747  1178  346E               	retlw	110	;'n'
   748  1179  3464               	retlw	100	;'d'
   749  117A  346F               	retlw	111	;'o'
   750  117B  3433               	retlw	51	;'3'
   751  117C  3420               	retlw	32	;' '
   752  117D  3454               	retlw	84	;'T'
   753  117E  3465               	retlw	101	;'e'
   754  117F  3473               	retlw	115	;'s'
   755  1180  3474               	retlw	116	;'t'
   756  1181  346A               	retlw	106	;'j'
   757  1182  3469               	retlw	105	;'i'
   758  1183  3467               	retlw	103	;'g'
   759  1184  3400               	retlw	0
   760  1185                     STR_116:	
   761  1185  3420               	retlw	32	;' '
   762  1186  3463               	retlw	99	;'c'
   763  1187  3479               	retlw	121	;'y'
   764  1188  3463               	retlw	99	;'c'
   765  1189  346C               	retlw	108	;'l'
   766  118A  3469               	retlw	105	;'i'
   767  118B  346E               	retlw	110	;'n'
   768  118C  3467               	retlw	103	;'g'
   769  118D  3420               	retlw	32	;' '
   770  118E  3470               	retlw	112	;'p'
   771  118F  346F               	retlw	111	;'o'
   772  1190  3477               	retlw	119	;'w'
   773  1191  3465               	retlw	101	;'e'
   774  1192  3472               	retlw	114	;'r'
   775  1193  3400               	retlw	0
   776  1194                     STR_19:	
   777  1194  3431               	retlw	49	;'1'
   778  1195  3436               	retlw	54	;'6'
   779  1196  3476               	retlw	118	;'v'
   780  1197  342D               	retlw	45	;'-'
   781  1198  3431               	retlw	49	;'1'
   782  1199  3432               	retlw	50	;'2'
   783  119A  3476               	retlw	118	;'v'
   784  119B  3420               	retlw	32	;' '
   785  119C  3473               	retlw	115	;'s'
   786  119D  3475               	retlw	117	;'u'
   787  119E  3470               	retlw	112	;'p'
   788  119F  3470               	retlw	112	;'p'
   789  11A0  346C               	retlw	108	;'l'
   790  11A1  3479               	retlw	121	;'y'
   791  11A2  3400               	retlw	0
   792  11A3                     STR_129:	
   793  11A3  344D               	retlw	77	;'M'
   794  11A4  3461               	retlw	97	;'a'
   795  11A5  3473               	retlw	115	;'s'
   796  11A6  3474               	retlw	116	;'t'
   797  11A7  3465               	retlw	101	;'e'
   798  11A8  3472               	retlw	114	;'r'
   799  11A9  3420               	retlw	32	;' '
   800  11AA  3445               	retlw	69	;'E'
   801  11AB  3472               	retlw	114	;'r'
   802  11AC  3461               	retlw	97	;'a'
   803  11AD  3473               	retlw	115	;'s'
   804  11AE  3465               	retlw	101	;'e'
   805  11AF  3420               	retlw	32	;' '
   806  11B0  3400               	retlw	0
   807  11B1                     STR_46:	
   808  11B1  3420               	retlw	32	;' '
   809  11B2  3445               	retlw	69	;'E'
   810  11B3  3472               	retlw	114	;'r'
   811  11B4  3472               	retlw	114	;'r'
   812  11B5  346F               	retlw	111	;'o'
   813  11B6  3472               	retlw	114	;'r'
   814  11B7  3420               	retlw	32	;' '
   815  11B8  3443               	retlw	67	;'C'
   816  11B9  346F               	retlw	111	;'o'
   817  11BA  346E               	retlw	110	;'n'
   818  11BB  3464               	retlw	100	;'d'
   819  11BC  346F               	retlw	111	;'o'
   820  11BD  3433               	retlw	51	;'3'
   821  11BE  3400               	retlw	0
   822  11BF                     STR_4:	
   823  11BF  342D               	retlw	45	;'-'
   824  11C0  343E               	retlw	62	;'>'
   825  11C1  3420               	retlw	32	;' '
   826  11C2  3449               	retlw	73	;'I'
   827  11C3  346E               	retlw	110	;'n'
   828  11C4  3473               	retlw	115	;'s'
   829  11C5  3465               	retlw	101	;'e'
   830  11C6  3472               	retlw	114	;'r'
   831  11C7  3474               	retlw	116	;'t'
   832  11C8  3420               	retlw	32	;' '
   833  11C9  3450               	retlw	80	;'P'
   834  11CA  3443               	retlw	67	;'C'
   835  11CB  3442               	retlw	66	;'B'
   836  11CC  3400               	retlw	0
   837  11CD                     STR_142:	
   838  11CD  3420               	retlw	32	;' '
   839  11CE  3452               	retlw	82	;'R'
   840  11CF  3465               	retlw	101	;'e'
   841  11D0  346D               	retlw	109	;'m'
   842  11D1  346F               	retlw	111	;'o'
   843  11D2  3476               	retlw	118	;'v'
   844  11D3  3465               	retlw	101	;'e'
   845  11D4  3420               	retlw	32	;' '
   846  11D5  3462               	retlw	98	;'b'
   847  11D6  346F               	retlw	111	;'o'
   848  11D7  3461               	retlw	97	;'a'
   849  11D8  3472               	retlw	114	;'r'
   850  11D9  3464               	retlw	100	;'d'
   851  11DA  3400               	retlw	0
   852  11DB                     STR_104:	
   853  11DB  3420               	retlw	32	;' '
   854  11DC  3445               	retlw	69	;'E'
   855  11DD  3472               	retlw	114	;'r'
   856  11DE  3472               	retlw	114	;'r'
   857  11DF  346F               	retlw	111	;'o'
   858  11E0  3472               	retlw	114	;'r'
   859  11E1  3420               	retlw	32	;' '
   860  11E2  342D               	retlw	45	;'-'
   861  11E3  3420               	retlw	32	;' '
   862  11E4  3448               	retlw	72	;'H'
   863  11E5  3469               	retlw	105	;'i'
   864  11E6  3467               	retlw	103	;'g'
   865  11E7  3468               	retlw	104	;'h'
   866  11E8  3400               	retlw	0
   867  11E9                     STR_147:	
   868  11E9  344D               	retlw	77	;'M'
   869  11EA  3475               	retlw	117	;'u'
   870  11EB  346C               	retlw	108	;'l'
   871  11EC  3474               	retlw	116	;'t'
   872  11ED  3469               	retlw	105	;'i'
   873  11EE  345F               	retlw	95	;'_'
   874  11EF  3452               	retlw	82	;'R'
   875  11F0  3458               	retlw	88	;'X'
   876  11F1  3420               	retlw	32	;' '
   877  11F2  3450               	retlw	80	;'P'
   878  11F3  3461               	retlw	97	;'a'
   879  11F4  3473               	retlw	115	;'s'
   880  11F5  3473               	retlw	115	;'s'
   881  11F6  3400               	retlw	0
   882  11F7                     STR_7:	
   883  11F7  3431               	retlw	49	;'1'
   884  11F8  3432               	retlw	50	;'2'
   885  11F9  3476               	retlw	118	;'v'
   886  11FA  342D               	retlw	45	;'-'
   887  11FB  3435               	retlw	53	;'5'
   888  11FC  3476               	retlw	118	;'v'
   889  11FD  3420               	retlw	32	;' '
   890  11FE  3473               	retlw	115	;'s'
   891  11FF  3475               	retlw	117	;'u'
   892  1200  3470               	retlw	112	;'p'
   893  1201  3470               	retlw	112	;'p'
   894  1202  346C               	retlw	108	;'l'
   895  1203  3479               	retlw	121	;'y'
   896  1204  3400               	retlw	0
   897  1205                     STR_15:	
   898  1205  3431               	retlw	49	;'1'
   899  1206  3436               	retlw	54	;'6'
   900  1207  3476               	retlw	118	;'v'
   901  1208  342D               	retlw	45	;'-'
   902  1209  3435               	retlw	53	;'5'
   903  120A  3476               	retlw	118	;'v'
   904  120B  3420               	retlw	32	;' '
   905  120C  3473               	retlw	115	;'s'
   906  120D  3475               	retlw	117	;'u'
   907  120E  3470               	retlw	112	;'p'
   908  120F  3470               	retlw	112	;'p'
   909  1210  346C               	retlw	108	;'l'
   910  1211  3479               	retlw	121	;'y'
   911  1212  3400               	retlw	0
   912  1213                     STR_43:	
   913  1213  3454               	retlw	84	;'T'
   914  1214  3465               	retlw	101	;'e'
   915  1215  3473               	retlw	115	;'s'
   916  1216  3474               	retlw	116	;'t'
   917  1217  3420               	retlw	32	;' '
   918  1218  3445               	retlw	69	;'E'
   919  1219  3445               	retlw	69	;'E'
   920  121A  3450               	retlw	80	;'P'
   921  121B  3452               	retlw	82	;'R'
   922  121C  344F               	retlw	79	;'O'
   923  121D  344D               	retlw	77	;'M'
   924  121E  3420               	retlw	32	;' '
   925  121F  3400               	retlw	0
   926  1220                     STR_125:	
   927  1220  3454               	retlw	84	;'T'
   928  1221  3434               	retlw	52	;'4'
   929  1222  3420               	retlw	32	;' '
   930  1223  3462               	retlw	98	;'b'
   931  1224  3475               	retlw	117	;'u'
   932  1225  3473               	retlw	115	;'s'
   933  1226  3420               	retlw	32	;' '
   934  1227  3428               	retlw	40	;'('
   935  1228  3443               	retlw	67	;'C'
   936  1229  3441               	retlw	65	;'A'
   937  122A  344E               	retlw	78	;'N'
   938  122B  3429               	retlw	41	;')'
   939  122C  3400               	retlw	0
   940  122D                     STR_10:	
   941  122D  3456               	retlw	86	;'V'
   942  122E  346F               	retlw	111	;'o'
   943  122F  346C               	retlw	108	;'l'
   944  1230  3474               	retlw	116	;'t'
   945  1231  3420               	retlw	32	;' '
   946  1232  3445               	retlw	69	;'E'
   947  1233  3472               	retlw	114	;'r'
   948  1234  3472               	retlw	114	;'r'
   949  1235  346F               	retlw	111	;'o'
   950  1236  3472               	retlw	114	;'r'
   951  1237  3420               	retlw	32	;' '
   952  1238  3448               	retlw	72	;'H'
   953  1239  3400               	retlw	0
   954  123A                     STR_103:	
   955  123A  3454               	retlw	84	;'T'
   956  123B  3465               	retlw	101	;'e'
   957  123C  3473               	retlw	115	;'s'
   958  123D  3474               	retlw	116	;'t'
   959  123E  3420               	retlw	32	;' '
   960  123F  3452               	retlw	82	;'R'
   961  1240  3446               	retlw	70	;'F'
   962  1241  3420               	retlw	32	;' '
   963  1242  3452               	retlw	82	;'R'
   964  1243  3453               	retlw	83	;'S'
   965  1244  3453               	retlw	83	;'S'
   966  1245  3449               	retlw	73	;'I'
   967  1246  3400               	retlw	0
   968  1247                     STR_8:	
   969  1247  3456               	retlw	86	;'V'
   970  1248  346F               	retlw	111	;'o'
   971  1249  346C               	retlw	108	;'l'
   972  124A  3474               	retlw	116	;'t'
   973  124B  3420               	retlw	32	;' '
   974  124C  3445               	retlw	69	;'E'
   975  124D  3472               	retlw	114	;'r'
   976  124E  3472               	retlw	114	;'r'
   977  124F  346F               	retlw	111	;'o'
   978  1250  3472               	retlw	114	;'r'
   979  1251  3420               	retlw	32	;' '
   980  1252  344C               	retlw	76	;'L'
   981  1253  3400               	retlw	0
   982  1254                     STR_168:	
   983  1254  3420               	retlw	32	;' '
   984  1255  3450               	retlw	80	;'P'
   985  1256  3472               	retlw	114	;'r'
   986  1257  3465               	retlw	101	;'e'
   987  1258  3473               	retlw	115	;'s'
   988  1259  3473               	retlw	115	;'s'
   989  125A  3420               	retlw	32	;' '
   990  125B  3453               	retlw	83	;'S'
   991  125C  3454               	retlw	84	;'T'
   992  125D  3441               	retlw	65	;'A'
   993  125E  3452               	retlw	82	;'R'
   994  125F  3454               	retlw	84	;'T'
   995  1260  3400               	retlw	0
   996  1261                     STR_33:	
   997  1261  3445               	retlw	69	;'E'
   998  1262  3473               	retlw	115	;'s'
   999  1263  3474               	retlw	116	;'t'
  1000  1264  3461               	retlw	97	;'a'
  1001  1265  3462               	retlw	98	;'b'
  1002  1266  346C               	retlw	108	;'l'
  1003  1267  3469               	retlw	105	;'i'
  1004  1268  3473               	retlw	115	;'s'
  1005  1269  3468               	retlw	104	;'h'
  1006  126A  3469               	retlw	105	;'i'
  1007  126B  346E               	retlw	110	;'n'
  1008  126C  3467               	retlw	103	;'g'
  1009  126D  3400               	retlw	0
  1010  126E                     STR_39:	
  1011  126E  3445               	retlw	69	;'E'
  1012  126F  3445               	retlw	69	;'E'
  1013  1270  3450               	retlw	80	;'P'
  1014  1271  3452               	retlw	82	;'R'
  1015  1272  344F               	retlw	79	;'O'
  1016  1273  344D               	retlw	77	;'M'
  1017  1274  3420               	retlw	32	;' '
  1018  1275  3465               	retlw	101	;'e'
  1019  1276  3472               	retlw	114	;'r'
  1020  1277  3472               	retlw	114	;'r'
  1021  1278  346F               	retlw	111	;'o'
  1022  1279  3472               	retlw	114	;'r'
  1023  127A  3400               	retlw	0
  1024  127B                     STR_138:	
  1025  127B  3420               	retlw	32	;' '
  1026  127C  3462               	retlw	98	;'b'
  1027  127D  3475               	retlw	117	;'u'
  1028  127E  3474               	retlw	116	;'t'
  1029  127F  3474               	retlw	116	;'t'
  1030  1280  346F               	retlw	111	;'o'
  1031  1281  346E               	retlw	110	;'n'
  1032  1282  3420               	retlw	32	;' '
  1033  1283  3474               	retlw	116	;'t'
  1034  1284  3465               	retlw	101	;'e'
  1035  1285  3473               	retlw	115	;'s'
  1036  1286  3474               	retlw	116	;'t'
  1037  1287  3400               	retlw	0
  1038  1288                     STR_106:	
  1039  1288  3420               	retlw	32	;' '
  1040  1289  3445               	retlw	69	;'E'
  1041  128A  3472               	retlw	114	;'r'
  1042  128B  3472               	retlw	114	;'r'
  1043  128C  346F               	retlw	111	;'o'
  1044  128D  3472               	retlw	114	;'r'
  1045  128E  3420               	retlw	32	;' '
  1046  128F  342D               	retlw	45	;'-'
  1047  1290  3420               	retlw	32	;' '
  1048  1291  344C               	retlw	76	;'L'
  1049  1292  346F               	retlw	111	;'o'
  1050  1293  3477               	retlw	119	;'w'
  1051  1294  3400               	retlw	0
  1052  1295                     STR_65:	
  1053  1295  3454               	retlw	84	;'T'
  1054  1296  3465               	retlw	101	;'e'
  1055  1297  3473               	retlw	115	;'s'
  1056  1298  3474               	retlw	116	;'t'
  1057  1299  3420               	retlw	32	;' '
  1058  129A  3452               	retlw	82	;'R'
  1059  129B  3465               	retlw	101	;'e'
  1060  129C  346C               	retlw	108	;'l'
  1061  129D  3461               	retlw	97	;'a'
  1062  129E  3479               	retlw	121	;'y'
  1063  129F  3432               	retlw	50	;'2'
  1064  12A0  3400               	retlw	0
  1065  12A1                     STR_40:	
  1066  12A1  3420               	retlw	32	;' '
  1067  12A2  3452               	retlw	82	;'R'
  1068  12A3  3465               	retlw	101	;'e'
  1069  12A4  3461               	retlw	97	;'a'
  1070  12A5  3464               	retlw	100	;'d'
  1071  12A6  342F               	retlw	47	;'/'
  1072  12A7  3457               	retlw	87	;'W'
  1073  12A8  3472               	retlw	114	;'r'
  1074  12A9  3469               	retlw	105	;'i'
  1075  12AA  3474               	retlw	116	;'t'
  1076  12AB  3465               	retlw	101	;'e'
  1077  12AC  3400               	retlw	0
  1078  12AD                     STR_45:	
  1079  12AD  3445               	retlw	69	;'E'
  1080  12AE  3445               	retlw	69	;'E'
  1081  12AF  3450               	retlw	80	;'P'
  1082  12B0  3452               	retlw	82	;'R'
  1083  12B1  344F               	retlw	79	;'O'
  1084  12B2  344D               	retlw	77	;'M'
  1085  12B3  3420               	retlw	32	;' '
  1086  12B4  3473               	retlw	115	;'s'
  1087  12B5  3469               	retlw	105	;'i'
  1088  12B6  347A               	retlw	122	;'z'
  1089  12B7  3465               	retlw	101	;'e'
  1090  12B8  3400               	retlw	0
  1091  12B9                     STR_161:	
  1092  12B9  3452               	retlw	82	;'R'
  1093  12BA  3458               	retlw	88	;'X'
  1094  12BB  3433               	retlw	51	;'3'
  1095  12BC  3420               	retlw	32	;' '
  1096  12BD  3454               	retlw	84	;'T'
  1097  12BE  3465               	retlw	101	;'e'
  1098  12BF  3473               	retlw	115	;'s'
  1099  12C0  3474               	retlw	116	;'t'
  1100  12C1  346A               	retlw	106	;'j'
  1101  12C2  3469               	retlw	105	;'i'
  1102  12C3  3467               	retlw	103	;'g'
  1103  12C4  3400               	retlw	0
  1104  12C5                     STR_29:	
  1105  12C5  3457               	retlw	87	;'W'
  1106  12C6  3461               	retlw	97	;'a'
  1107  12C7  3469               	retlw	105	;'i'
  1108  12C8  3474               	retlw	116	;'t'
  1109  12C9  3469               	retlw	105	;'i'
  1110  12CA  346E               	retlw	110	;'n'
  1111  12CB  3467               	retlw	103	;'g'
  1112  12CC  3420               	retlw	32	;' '
  1113  12CD  3466               	retlw	102	;'f'
  1114  12CE  346F               	retlw	111	;'o'
  1115  12CF  3472               	retlw	114	;'r'
  1116  12D0  3400               	retlw	0
  1117  12D1                     STR_35:	
  1118  12D1  3443               	retlw	67	;'C'
  1119  12D2  346F               	retlw	111	;'o'
  1120  12D3  346D               	retlw	109	;'m'
  1121  12D4  346D               	retlw	109	;'m'
  1122  12D5  3473               	retlw	115	;'s'
  1123  12D6  3420               	retlw	32	;' '
  1124  12D7  3445               	retlw	69	;'E'
  1125  12D8  3472               	retlw	114	;'r'
  1126  12D9  3472               	retlw	114	;'r'
  1127  12DA  346F               	retlw	111	;'o'
  1128  12DB  3472               	retlw	114	;'r'
  1129  12DC  3400               	retlw	0
  1130  12DD                     STR_14:	
  1131  12DD  3454               	retlw	84	;'T'
  1132  12DE  342D               	retlw	45	;'-'
  1133  12DF  346F               	retlw	111	;'o'
  1134  12E0  3475               	retlw	117	;'u'
  1135  12E1  3474               	retlw	116	;'t'
  1136  12E2  3420               	retlw	32	;' '
  1137  12E3  3445               	retlw	69	;'E'
  1138  12E4  3472               	retlw	114	;'r'
  1139  12E5  3472               	retlw	114	;'r'
  1140  12E6  346F               	retlw	111	;'o'
  1141  12E7  3472               	retlw	114	;'r'
  1142  12E8  3400               	retlw	0
  1143  12E9                     STR_141:	
  1144  12E9  3443               	retlw	67	;'C'
  1145  12EA  346F               	retlw	111	;'o'
  1146  12EB  346E               	retlw	110	;'n'
  1147  12EC  3464               	retlw	100	;'d'
  1148  12ED  346F               	retlw	111	;'o'
  1149  12EE  3433               	retlw	51	;'3'
  1150  12EF  3420               	retlw	32	;' '
  1151  12F0  3450               	retlw	80	;'P'
  1152  12F1  3461               	retlw	97	;'a'
  1153  12F2  3473               	retlw	115	;'s'
  1154  12F3  3473               	retlw	115	;'s'
  1155  12F4  3400               	retlw	0
  1156  12F5                     STR_12:	
  1157  12F5  3443               	retlw	67	;'C'
  1158  12F6  3475               	retlw	117	;'u'
  1159  12F7  3472               	retlw	114	;'r'
  1160  12F8  3472               	retlw	114	;'r'
  1161  12F9  3420               	retlw	32	;' '
  1162  12FA  3445               	retlw	69	;'E'
  1163  12FB  3472               	retlw	114	;'r'
  1164  12FC  3472               	retlw	114	;'r'
  1165  12FD  346F               	retlw	111	;'o'
  1166  12FE  3472               	retlw	114	;'r'
  1167  12FF  3400               	retlw	0
  1168  1300                     STR_140:	
  1169  1300  3420               	retlw	32	;' '
  1170  1301  3466               	retlw	102	;'f'
  1171  1302  346F               	retlw	111	;'o'
  1172  1303  3472               	retlw	114	;'r'
  1173  1304  3420               	retlw	32	;' '
  1174  1305  3463               	retlw	99	;'c'
  1175  1306  346F               	retlw	111	;'o'
  1176  1307  346D               	retlw	109	;'m'
  1177  1308  346D               	retlw	109	;'m'
  1178  1309  3473               	retlw	115	;'s'
  1179  130A  3400               	retlw	0
  1180  130B                     STR_49:	
  1181  130B  3454               	retlw	84	;'T'
  1182  130C  3465               	retlw	101	;'e'
  1183  130D  3473               	retlw	115	;'s'
  1184  130E  3474               	retlw	116	;'t'
  1185  130F  3420               	retlw	32	;' '
  1186  1310  3452               	retlw	82	;'R'
  1187  1311  3465               	retlw	101	;'e'
  1188  1312  346C               	retlw	108	;'l'
  1189  1313  3461               	retlw	97	;'a'
  1190  1314  3479               	retlw	121	;'y'
  1191  1315  3400               	retlw	0
  1192  1316                     STR_23:	
  1193  1316  3431               	retlw	49	;'1'
  1194  1317  3436               	retlw	54	;'6'
  1195  1318  3476               	retlw	118	;'v'
  1196  1319  3420               	retlw	32	;' '
  1197  131A  3473               	retlw	115	;'s'
  1198  131B  3475               	retlw	117	;'u'
  1199  131C  3470               	retlw	112	;'p'
  1200  131D  3470               	retlw	112	;'p'
  1201  131E  346C               	retlw	108	;'l'
  1202  131F  3479               	retlw	121	;'y'
  1203  1320  3400               	retlw	0
  1204  1321                     STR_139:	
  1205  1321  3477               	retlw	119	;'w'
  1206  1322  3461               	retlw	97	;'a'
  1207  1323  3469               	retlw	105	;'i'
  1208  1324  3474               	retlw	116	;'t'
  1209  1325  3469               	retlw	105	;'i'
  1210  1326  346E               	retlw	110	;'n'
  1211  1327  3467               	retlw	103	;'g'
  1212  1328  3420               	retlw	32	;' '
  1213  1329  3420               	retlw	32	;' '
  1214  132A  3400               	retlw	0
  1215  132B                     STR_133:	
  1216  132B  3453               	retlw	83	;'S'
  1217  132C  3465               	retlw	101	;'e'
  1218  132D  3474               	retlw	116	;'t'
  1219  132E  3420               	retlw	32	;' '
  1220  132F  3423               	retlw	35	;'#'
  1221  1330  3420               	retlw	32	;' '
  1222  1331  346F               	retlw	111	;'o'
  1223  1332  3466               	retlw	102	;'f'
  1224  1333  3420               	retlw	32	;' '
  1225  1334  3400               	retlw	0
  1226  1335                     STR_108:	
  1227  1335  3452               	retlw	82	;'R'
  1228  1336  3453               	retlw	83	;'S'
  1229  1337  3453               	retlw	83	;'S'
  1230  1338  3449               	retlw	73	;'I'
  1231  1339  3420               	retlw	32	;' '
  1232  133A  342D               	retlw	45	;'-'
  1233  133B  3420               	retlw	32	;' '
  1234  133C  344F               	retlw	79	;'O'
  1235  133D  344B               	retlw	75	;'K'
  1236  133E  3400               	retlw	0
  1237  133F                     STR_134:	
  1238  133F  3420               	retlw	32	;' '
  1239  1340  3463               	retlw	99	;'c'
  1240  1341  3468               	retlw	104	;'h'
  1241  1342  3461               	retlw	97	;'a'
  1242  1343  346E               	retlw	110	;'n'
  1243  1344  346E               	retlw	110	;'n'
  1244  1345  3465               	retlw	101	;'e'
  1245  1346  346C               	retlw	108	;'l'
  1246  1347  3473               	retlw	115	;'s'
  1247  1348  3400               	retlw	0
  1248  1349                     STR_37:	
  1249  1349  3454               	retlw	84	;'T'
  1250  134A  3465               	retlw	101	;'e'
  1251  134B  3473               	retlw	115	;'s'
  1252  134C  3474               	retlw	116	;'t'
  1253  134D  3469               	retlw	105	;'i'
  1254  134E  346E               	retlw	110	;'n'
  1255  134F  3467               	retlw	103	;'g'
  1256  1350  3420               	retlw	32	;' '
  1257  1351  3400               	retlw	0
  1258  1352                     STR_54:	
  1259  1352  3420               	retlw	32	;' '
  1260  1353  3445               	retlw	69	;'E'
  1261  1354  3472               	retlw	114	;'r'
  1262  1355  3472               	retlw	114	;'r'
  1263  1356  346F               	retlw	111	;'o'
  1264  1357  3472               	retlw	114	;'r'
  1265  1358  3420               	retlw	32	;' '
  1266  1359  3432               	retlw	50	;'2'
  1267  135A  3400               	retlw	0
  1268  135B                     STR_56:	
  1269  135B  3420               	retlw	32	;' '
  1270  135C  3445               	retlw	69	;'E'
  1271  135D  3472               	retlw	114	;'r'
  1272  135E  3472               	retlw	114	;'r'
  1273  135F  346F               	retlw	111	;'o'
  1274  1360  3472               	retlw	114	;'r'
  1275  1361  3420               	retlw	32	;' '
  1276  1362  3433               	retlw	51	;'3'
  1277  1363  3400               	retlw	0
  1278  1364                     STR_1:	
  1279  1364  344D               	retlw	77	;'M'
  1280  1365  3475               	retlw	117	;'u'
  1281  1366  346C               	retlw	108	;'l'
  1282  1367  3474               	retlw	116	;'t'
  1283  1368  3469               	retlw	105	;'i'
  1284  1369  345F               	retlw	95	;'_'
  1285  136A  3452               	retlw	82	;'R'
  1286  136B  3458               	retlw	88	;'X'
  1287  136C  3400               	retlw	0
  1288  136D                     STR_32:	
  1289  136D  3420               	retlw	32	;' '
  1290  136E  3473               	retlw	115	;'s'
  1291  136F  346B               	retlw	107	;'k'
  1292  1370  3469               	retlw	105	;'i'
  1293  1371  3470               	retlw	112	;'p'
  1294  1372  3470               	retlw	112	;'p'
  1295  1373  3465               	retlw	101	;'e'
  1296  1374  3464               	retlw	100	;'d'
  1297  1375  3400               	retlw	0
  1298  1376                     STR_143:	
  1299  1376  3452               	retlw	82	;'R'
  1300  1377  3458               	retlw	88	;'X'
  1301  1378  3433               	retlw	51	;'3'
  1302  1379  3420               	retlw	32	;' '
  1303  137A  3450               	retlw	80	;'P'
  1304  137B  3461               	retlw	97	;'a'
  1305  137C  3473               	retlw	115	;'s'
  1306  137D  3473               	retlw	115	;'s'
  1307  137E  3400               	retlw	0
  1308  137F                     STR_149:	
  1309  137F  3443               	retlw	67	;'C'
  1310  1380  346F               	retlw	111	;'o'
  1311  1381  346E               	retlw	110	;'n'
  1312  1382  3464               	retlw	100	;'d'
  1313  1383  346F               	retlw	111	;'o'
  1314  1384  3433               	retlw	51	;'3'
  1315  1385  3420               	retlw	32	;' '
  1316  1386  3400               	retlw	0
  1317  1387                     STR_158:	
  1318  1387  3477               	retlw	119	;'w'
  1319  1388  3461               	retlw	97	;'a'
  1320  1389  3469               	retlw	105	;'i'
  1321  138A  3474               	retlw	116	;'t'
  1322  138B  342E               	retlw	46	;'.'
  1323  138C  342E               	retlw	46	;'.'
  1324  138D  342E               	retlw	46	;'.'
  1325  138E  3400               	retlw	0
  1326  138F                     STR_111:	
  1327  138F  3452               	retlw	82	;'R'
  1328  1390  3458               	retlw	88	;'X'
  1329  1391  3420               	retlw	32	;' '
  1330  1392  3430               	retlw	48	;'0'
  1331  1393  3478               	retlw	120	;'x'
  1332  1394  3436               	retlw	54	;'6'
  1333  1395  3431               	retlw	49	;'1'
  1334  1396  3400               	retlw	0
  1335  1397                     STR_62:	
  1336  1397  3445               	retlw	69	;'E'
  1337  1398  3472               	retlw	114	;'r'
  1338  1399  3472               	retlw	114	;'r'
  1339  139A  346F               	retlw	111	;'o'
  1340  139B  3472               	retlw	114	;'r'
  1341  139C  3420               	retlw	32	;' '
  1342  139D  3434               	retlw	52	;'4'
  1343  139E  3400               	retlw	0
  1344  139F                     STR_93:	
  1345  139F  3454               	retlw	84	;'T'
  1346  13A0  3465               	retlw	101	;'e'
  1347  13A1  3473               	retlw	115	;'s'
  1348  13A2  3474               	retlw	116	;'t'
  1349  13A3  3420               	retlw	32	;' '
  1350  13A4  3452               	retlw	82	;'R'
  1351  13A5  3446               	retlw	70	;'F'
  1352  13A6  3400               	retlw	0
  1353  13A7                     STR_114:	
  1354  13A7  3442               	retlw	66	;'B'
  1355  13A8  3472               	retlw	114	;'r'
  1356  13A9  3465               	retlw	101	;'e'
  1357  13AA  3461               	retlw	97	;'a'
  1358  13AB  346B               	retlw	107	;'k'
  1359  13AC  3400               	retlw	0
  1360  13AD                     STR_113:	
  1361  13AD  3462               	retlw	98	;'b'
  1362  13AE  3472               	retlw	114	;'r'
  1363  13AF  3465               	retlw	101	;'e'
  1364  13B0  3461               	retlw	97	;'a'
  1365  13B1  346B               	retlw	107	;'k'
  1366  13B2  3400               	retlw	0
  1367  13B3                     STR_151:	
  1368  13B3  3452               	retlw	82	;'R'
  1369  13B4  3458               	retlw	88	;'X'
  1370  13B5  3433               	retlw	51	;'3'
  1371  13B6  3420               	retlw	32	;' '
  1372  13B7  3400               	retlw	0
  1373  13B8                     STR_98:	
  1374  13B8  3420               	retlw	32	;' '
  1375  13B9  3431               	retlw	49	;'1'
  1376  13BA  3434               	retlw	52	;'4'
  1377  13BB  3461               	retlw	97	;'a'
  1378  13BC  3400               	retlw	0
  1379  13BD                     STR_100:	
  1380  13BD  3420               	retlw	32	;' '
  1381  13BE  3431               	retlw	49	;'1'
  1382  13BF  3434               	retlw	52	;'4'
  1383  13C0  3462               	retlw	98	;'b'
  1384  13C1  3400               	retlw	0
  1385  13C2                     STR_102:	
  1386  13C2  3420               	retlw	32	;' '
  1387  13C3  3431               	retlw	49	;'1'
  1388  13C4  3434               	retlw	52	;'4'
  1389  13C5  3463               	retlw	99	;'c'
  1390  13C6  3400               	retlw	0
  1391  13C7                     STR_96:	
  1392  13C7  3420               	retlw	32	;' '
  1393  13C8  3431               	retlw	49	;'1'
  1394  13C9  3433               	retlw	51	;'3'
  1395  13CA  3400               	retlw	0
  1396  13CB                     STR_124:	
  1397  13CB  3420               	retlw	32	;' '
  1398  13CC  3431               	retlw	49	;'1'
  1399  13CD  3435               	retlw	53	;'5'
  1400  13CE  3400               	retlw	0
  1401  13CF                     STR_136:	
  1402  13CF  3420               	retlw	32	;' '
  1403  13D0  3431               	retlw	49	;'1'
  1404  13D1  3436               	retlw	54	;'6'
  1405  13D2  3400               	retlw	0
  1406  13D3                     STR_132:	
  1407  13D3  3420               	retlw	32	;' '
  1408  13D4  3431               	retlw	49	;'1'
  1409  13D5  3437               	retlw	55	;'7'
  1410  13D6  3400               	retlw	0
  1411  13D7                     STR_128:	
  1412  13D7  3420               	retlw	32	;' '
  1413  13D8  3431               	retlw	49	;'1'
  1414  13D9  3438               	retlw	56	;'8'
  1415  13DA  3400               	retlw	0
  1416  13DB                     STR_36:	
  1417  13DB  3420               	retlw	32	;' '
  1418  13DC  3431               	retlw	49	;'1'
  1419  13DD  3400               	retlw	0
  1420  10DA                     
  1421                           ; #config settings
  1422  0000                     
  1423                           	psect	cinit
  1424  0051                     start_initialization:	
  1425  0051                     __initialization:	
  1426  0051  30A0               	movlw	low __pbssBANK1
  1427                           
  1428                           ; Clear objects allocated to BANK0
  1429  0052  01EF               	clrf	__pbssBANK0& (0+127)
  1430                           
  1431                           ; Clear objects allocated to BANK1
  1432  0053  0084               	movwf	4
  1433  0054  3000               	movlw	high __pbssBANK1
  1434  0055  0085               	movwf	5
  1435  0056  3019               	movlw	25
  1436  0057  3187  27FA         	fcall	clear_ram0
  1437                           
  1438                           ; Initialize objects allocated to BANK1
  1439  0059  0021               	movlb	1	; select bank1
  1440                           
  1441                           ;initializer for _one_second_timer
  1442  005A  30E8               	movlw	232
  1443  005B  00B9               	movwf	__pdataBANK1& (0+127)
  1444  005C  3003               	movlw	3
  1445  005D  00BA               	movwf	(__pdataBANK1+1)& (0+127)
  1446  005E                     end_of_initialization:	
  1447                           ;End of C runtime variable initialization code
  1448                           
  1449  005E                     __end_of__initialization:	
  1450  005E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1451  005F  0020               	movlb	0
  1452  0060  3196  2E95         	ljmp	_main	;jump to C main() function
  1453                           
  1454                           	psect	bssBANK0
  1455  006F                     __pbssBANK0:	
  1456  006F                     _ten_thou:	
  1457  006F                     	ds	1
  1458                           
  1459                           	psect	bssBANK1
  1460  00A0                     __pbssBANK1:	
  1461  00A0                     _ADC_cur_sink_val:	
  1462  00A0                     	ds	2
  1463  00A2                     _buzz_timer:	
  1464  00A2                     	ds	2
  1465  00A4                     _curent_sink_val:	
  1466  00A4                     	ds	2
  1467  00A6                     _current_sink_stable:	
  1468  00A6                     	ds	2
  1469  00A8                     _current_sink_timer:	
  1470  00A8                     	ds	2
  1471  00AA                     _motor_direction_timer:	
  1472  00AA                     	ds	2
  1473  00AC                     _pickit_timer:	
  1474  00AC                     	ds	2
  1475  00AE                     _testjig_timer:	
  1476  00AE                     	ds	2
  1477  00B0                     _tj_timer:	
  1478  00B0                     	ds	2
  1479  00B2                     _uart_receive_timer:	
  1480  00B2                     	ds	2
  1481  00B4                     _hund:	
  1482  00B4                     	ds	1
  1483  00B5                     _pickit_red_counter:	
  1484  00B5                     	ds	1
  1485  00B6                     _ten:	
  1486  00B6                     	ds	1
  1487  00B7                     _unit:	
  1488  00B7                     	ds	1
  1489  00B8                     _thou:	
  1490  00B8                     	ds	1
  1491                           
  1492                           	psect	dataBANK1
  1493  00B9                     __pdataBANK1:	
  1494  00B9                     _one_second_timer:	
  1495  00B9                     	ds	2
  1496                           
  1497                           	psect	clrtext
  1498  07FA                     clear_ram0:	
  1499                           ;	Called with FSR0 containing the base address, and
  1500                           ;	WREG with the size to clear
  1501                           
  1502  07FA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1503  07FB                     clrloop0:	
  1504  07FB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1505  07FC  3101               	addfsr 0,1
  1506  07FD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1507  07FE  2FFB               	goto	clrloop0	;have we reached the end yet?
  1508  07FF  3400               	retlw	0	;all done for this memory range, return
  1509                           
  1510                           	psect	cstackCOMMON
  1511  0070                     __pcstackCOMMON:	
  1512  0070                     ?_init_ADC:	
  1513  0070                     ??_init_ADC:	
  1514                           ; 0 bytes @ 0x0
  1515                           
  1516  0070                     ?_init_current_sink:	
  1517                           ; 0 bytes @ 0x0
  1518                           
  1519  0070                     ??_init_current_sink:	
  1520                           ; 0 bytes @ 0x0
  1521                           
  1522  0070                     ?_init_i2c:	
  1523                           ; 0 bytes @ 0x0
  1524                           
  1525  0070                     ??_init_i2c:	
  1526                           ; 0 bytes @ 0x0
  1527                           
  1528  0070                     ?_debug_fast_tx:	
  1529                           ; 0 bytes @ 0x0
  1530                           
  1531  0070                     ?_power_supply_set:	
  1532                           ; 0 bytes @ 0x0
  1533                           
  1534  0070                     ??_power_supply_set:	
  1535                           ; 0 bytes @ 0x0
  1536                           
  1537  0070                     ?_TX_one:	
  1538                           ; 0 bytes @ 0x0
  1539                           
  1540  0070                     ??_TX_one:	
  1541                           ; 0 bytes @ 0x0
  1542                           
  1543  0070                     ??_RX_one_timeout:	
  1544                           ; 0 bytes @ 0x0
  1545                           
  1546  0070                     ??_RX_one:	
  1547                           ; 0 bytes @ 0x0
  1548                           
  1549  0070                     ?_clear_lcd:	
  1550                           ; 0 bytes @ 0x0
  1551                           
  1552  0070                     ?_buzz_one:	
  1553                           ; 0 bytes @ 0x0
  1554                           
  1555  0070                     ?_digitalpot:	
  1556                           ; 0 bytes @ 0x0
  1557                           
  1558  0070                     ?_isr:	
  1559                           ; 0 bytes @ 0x0
  1560                           
  1561  0070                     ??_isr:	
  1562                           ; 0 bytes @ 0x0
  1563                           
  1564  0070                     ?_main:	
  1565                           ; 0 bytes @ 0x0
  1566                           
  1567  0070                     ?_i2c_Start:	
  1568                           ; 0 bytes @ 0x0
  1569                           
  1570  0070                     ??_i2c_Start:	
  1571                           ; 0 bytes @ 0x0
  1572                           
  1573  0070                     ?_i2c_Write:	
  1574                           ; 0 bytes @ 0x0
  1575                           
  1576  0070                     ??_i2c_Write:	
  1577                           ; 0 bytes @ 0x0
  1578                           
  1579  0070                     ?_i2c_Stop:	
  1580                           ; 0 bytes @ 0x0
  1581                           
  1582  0070                     ??_i2c_Stop:	
  1583                           ; 0 bytes @ 0x0
  1584                           
  1585  0070                     ?_i2c_write_char:	
  1586                           ; 0 bytes @ 0x0
  1587                           
  1588  0070                     ?_i2c_first_line:	
  1589                           ; 0 bytes @ 0x0
  1590                           
  1591  0070                     ?_i2c_second_line:	
  1592                           ; 0 bytes @ 0x0
  1593                           
  1594  0070                     ?_RX_one_timeout:	
  1595                           ; 0 bytes @ 0x0
  1596                           
  1597  0070                     ?_RX_one:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600  0070                     ?___bmul:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603  0070                     ?_ADC_get_val:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606  0070                     ?__Umul8_16:	
  1607                           ; 2 bytes @ 0x0
  1608                           
  1609  0070                     ?___wmul:	
  1610                           ; 2 bytes @ 0x0
  1611                           
  1612  0070                     ?___xxtofl:	
  1613                           ; 2 bytes @ 0x0
  1614                           
  1615  0070                     i2c_Write@data:	
  1616                           ; 4 bytes @ 0x0
  1617                           
  1618  0070                     power_supply_set@supply:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0070                     ___bmul@multiplicand:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0070                     __Umul8_16@multiplicand:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0070                     buzz_one@time:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0070                     debug_fast_tx@data:	
  1631                           ; 2 bytes @ 0x0
  1632                           
  1633  0070                     ___wmul@multiplier:	
  1634                           ; 2 bytes @ 0x0
  1635                           
  1636  0070                     ___xxtofl@val:	
  1637                           ; 2 bytes @ 0x0
  1638                           
  1639                           
  1640                           ; 4 bytes @ 0x0
  1641  0070                     	ds	1
  1642  0071                     ?_init_i2c_lcd_5v:	
  1643  0071                     ??_clear_lcd:	
  1644                           ; 0 bytes @ 0x1
  1645                           
  1646  0071                     ??_digitalpot:	
  1647                           ; 0 bytes @ 0x1
  1648                           
  1649  0071                     ?_i2c_Write_string:	
  1650                           ; 0 bytes @ 0x1
  1651                           
  1652  0071                     ??_i2c_write_char:	
  1653                           ; 0 bytes @ 0x1
  1654                           
  1655  0071                     ??_i2c_first_line:	
  1656                           ; 0 bytes @ 0x1
  1657                           
  1658  0071                     ??_i2c_second_line:	
  1659                           ; 0 bytes @ 0x1
  1660                           
  1661  0071                     ?_lcd_set_cursor:	
  1662                           ; 0 bytes @ 0x1
  1663                           
  1664  0071                     ??___bmul:	
  1665                           ; 0 bytes @ 0x1
  1666                           
  1667  0071                     i2c_write_char@char_data:	
  1668                           ; 0 bytes @ 0x1
  1669                           
  1670  0071                     init_i2c_lcd_5v@single1_double2:	
  1671                           ; 1 bytes @ 0x1
  1672                           
  1673  0071                     lcd_set_cursor@col:	
  1674                           ; 1 bytes @ 0x1
  1675                           
  1676  0071                     TX_one@data:	
  1677                           ; 1 bytes @ 0x1
  1678                           
  1679  0071                     RX_one@i:	
  1680                           ; 1 bytes @ 0x1
  1681                           
  1682  0071                     RX_one_timeout@i:	
  1683                           ; 1 bytes @ 0x1
  1684                           
  1685  0071                     ___bmul@product:	
  1686                           ; 1 bytes @ 0x1
  1687                           
  1688  0071                     i2c_Write_string@data:	
  1689                           ; 1 bytes @ 0x1
  1690                           
  1691                           
  1692                           ; 2 bytes @ 0x1
  1693  0071                     	ds	1
  1694  0072                     ??_init_i2c_lcd_5v:	
  1695  0072                     ??_debug_fast_tx:	
  1696                           ; 0 bytes @ 0x2
  1697                           
  1698  0072                     ??_buzz_one:	
  1699                           ; 0 bytes @ 0x2
  1700                           
  1701  0072                     ??_lcd_set_cursor:	
  1702                           ; 0 bytes @ 0x2
  1703                           
  1704  0072                     lcd_set_cursor@row:	
  1705                           ; 0 bytes @ 0x2
  1706                           
  1707  0072                     debug_fast_tx@i:	
  1708                           ; 1 bytes @ 0x2
  1709                           
  1710  0072                     TX_one@i:	
  1711                           ; 1 bytes @ 0x2
  1712                           
  1713  0072                     RX_one@data:	
  1714                           ; 1 bytes @ 0x2
  1715                           
  1716  0072                     RX_one_timeout@data:	
  1717                           ; 1 bytes @ 0x2
  1718                           
  1719  0072                     ___bmul@multiplier:	
  1720                           ; 1 bytes @ 0x2
  1721                           
  1722  0072                     ___wmul@multiplicand:	
  1723                           ; 1 bytes @ 0x2
  1724                           
  1725                           
  1726                           ; 2 bytes @ 0x2
  1727  0072                     	ds	1
  1728  0073                     ??_ADC_get_val:	
  1729  0073                     ??__Umul8_16:	
  1730                           ; 0 bytes @ 0x3
  1731                           
  1732  0073                     ??_i2c_Write_string:	
  1733                           ; 0 bytes @ 0x3
  1734                           
  1735  0073                     lcd_set_cursor@LCD_position:	
  1736                           ; 0 bytes @ 0x3
  1737                           
  1738  0073                     ADC_get_val@channel:	
  1739                           ; 1 bytes @ 0x3
  1740                           
  1741  0073                     digitalpot@value:	
  1742                           ; 1 bytes @ 0x3
  1743                           
  1744  0073                     __Umul8_16@product:	
  1745                           ; 1 bytes @ 0x3
  1746                           
  1747                           
  1748                           ; 2 bytes @ 0x3
  1749  0073                     	ds	1
  1750  0074                     ?_print_screen:	
  1751  0074                     ?_Vout_set:	
  1752                           ; 0 bytes @ 0x4
  1753                           
  1754  0074                     ??___wmul:	
  1755                           ; 0 bytes @ 0x4
  1756                           
  1757  0074                     ??___xxtofl:	
  1758                           ; 0 bytes @ 0x4
  1759                           
  1760  0074                     init_i2c_lcd_5v@contrast:	
  1761                           ; 0 bytes @ 0x4
  1762                           
  1763  0074                     print_screen@top:	
  1764                           ; 1 bytes @ 0x4
  1765                           
  1766  0074                     ADC_get_val@return_val:	
  1767                           ; 2 bytes @ 0x4
  1768                           
  1769  0074                     Vout_set@Volts:	
  1770                           ; 2 bytes @ 0x4
  1771                           
  1772  0074                     ___wmul@product:	
  1773                           ; 2 bytes @ 0x4
  1774                           
  1775                           
  1776                           ; 2 bytes @ 0x4
  1777  0074                     	ds	1
  1778  0075                     __Umul8_16@multiplier:	
  1779                           
  1780                           ; 1 bytes @ 0x5
  1781  0075                     	ds	1
  1782  0076                     ??_Vout_set:	
  1783  0076                     ?_ten_thou_conv:	
  1784                           ; 0 bytes @ 0x6
  1785                           
  1786  0076                     ten_thou_conv@n:	
  1787                           ; 0 bytes @ 0x6
  1788                           
  1789  0076                     print_screen@bottom:	
  1790                           ; 2 bytes @ 0x6
  1791                           
  1792  0076                     __Umul8_16@word_mpld:	
  1793                           ; 2 bytes @ 0x6
  1794                           
  1795  0076                     Vout_set@digi_step:	
  1796                           ; 2 bytes @ 0x6
  1797                           
  1798                           
  1799                           ; 4 bytes @ 0x6
  1800  0076                     	ds	2
  1801  0078                     ??_print_screen:	
  1802  0078                     ?_testjig_done:	
  1803                           ; 0 bytes @ 0x8
  1804                           
  1805  0078                     ?_print_error:	
  1806                           ; 0 bytes @ 0x8
  1807                           
  1808  0078                     ??_ten_thou_conv:	
  1809                           ; 0 bytes @ 0x8
  1810                           
  1811  0078                     testjig_done@device_type:	
  1812                           ; 0 bytes @ 0x8
  1813                           
  1814  0078                     ___xxtofl@sign:	
  1815                           ; 1 bytes @ 0x8
  1816                           
  1817  0078                     print_error@top:	
  1818                           ; 1 bytes @ 0x8
  1819                           
  1820                           
  1821                           ; 2 bytes @ 0x8
  1822  0078                     	ds	1
  1823  0079                     ??_testjig_done:	
  1824  0079                     ___xxtofl@exp:	
  1825                           ; 0 bytes @ 0x9
  1826                           
  1827                           
  1828                           ; 1 bytes @ 0x9
  1829  0079                     	ds	1
  1830  007A                     print_error@bottom:	
  1831  007A                     ___xxtofl@arg:	
  1832                           ; 2 bytes @ 0xA
  1833                           
  1834                           
  1835                           ; 4 bytes @ 0xA
  1836  007A                     	ds	2
  1837  007C                     testjig_done@state:	
  1838                           
  1839                           ; 1 bytes @ 0xC
  1840  007C                     	ds	2
  1841  007E                     ??_get_30v_current:	
  1842  007E                     ??_lcd_print_int:	
  1843                           ; 0 bytes @ 0xE
  1844                           
  1845                           
  1846                           	psect	cstackBANK0
  1847  0020                     __pcstackBANK0:	
  1848                           ; 0 bytes @ 0xE
  1849                           
  1850  0020                     ??_print_error:	
  1851  0020                     ?___flmul:	
  1852                           ; 0 bytes @ 0x0
  1853                           
  1854  0020                     ___flmul@b:	
  1855                           ; 4 bytes @ 0x0
  1856                           
  1857                           
  1858                           ; 4 bytes @ 0x0
  1859  0020                     	ds	4
  1860  0024                     ___flmul@a:	
  1861                           
  1862                           ; 4 bytes @ 0x4
  1863  0024                     	ds	4
  1864  0028                     ??___flmul:	
  1865                           
  1866                           ; 0 bytes @ 0x8
  1867  0028                     	ds	4
  1868  002C                     ___flmul@sign:	
  1869                           
  1870                           ; 1 bytes @ 0xC
  1871  002C                     	ds	1
  1872  002D                     ___flmul@aexp:	
  1873                           
  1874                           ; 1 bytes @ 0xD
  1875  002D                     	ds	1
  1876  002E                     ___flmul@grs:	
  1877                           
  1878                           ; 4 bytes @ 0xE
  1879  002E                     	ds	4
  1880  0032                     ___flmul@bexp:	
  1881                           
  1882                           ; 1 bytes @ 0x12
  1883  0032                     	ds	1
  1884  0033                     ___flmul@prod:	
  1885                           
  1886                           ; 4 bytes @ 0x13
  1887  0033                     	ds	4
  1888  0037                     ___flmul@temp:	
  1889                           
  1890                           ; 2 bytes @ 0x17
  1891  0037                     	ds	2
  1892  0039                     ?___fladd:	
  1893  0039                     ___fladd@b:	
  1894                           ; 4 bytes @ 0x19
  1895                           
  1896                           
  1897                           ; 4 bytes @ 0x19
  1898  0039                     	ds	4
  1899  003D                     ___fladd@a:	
  1900                           
  1901                           ; 4 bytes @ 0x1D
  1902  003D                     	ds	4
  1903  0041                     ??___fladd:	
  1904                           
  1905                           ; 0 bytes @ 0x21
  1906  0041                     	ds	8
  1907  0049                     ___fladd@signs:	
  1908                           
  1909                           ; 1 bytes @ 0x29
  1910  0049                     	ds	1
  1911  004A                     ___fladd@aexp:	
  1912                           
  1913                           ; 1 bytes @ 0x2A
  1914  004A                     	ds	1
  1915  004B                     ___fladd@bexp:	
  1916                           
  1917                           ; 1 bytes @ 0x2B
  1918  004B                     	ds	1
  1919  004C                     ___fladd@grs:	
  1920                           
  1921                           ; 1 bytes @ 0x2C
  1922  004C                     	ds	1
  1923  004D                     ?___fltol:	
  1924  004D                     ___fltol@f1:	
  1925                           ; 4 bytes @ 0x2D
  1926                           
  1927                           
  1928                           ; 4 bytes @ 0x2D
  1929  004D                     	ds	4
  1930  0051                     ??___fltol:	
  1931                           
  1932                           ; 0 bytes @ 0x31
  1933  0051                     	ds	4
  1934  0055                     ___fltol@sign1:	
  1935                           
  1936                           ; 1 bytes @ 0x35
  1937  0055                     	ds	1
  1938  0056                     ___fltol@exp1:	
  1939                           
  1940                           ; 1 bytes @ 0x36
  1941  0056                     	ds	1
  1942  0057                     ?_get_30v_current:	
  1943                           
  1944                           ; 2 bytes @ 0x37
  1945  0057                     	ds	2
  1946  0059                     get_30v_current@temp:	
  1947                           
  1948                           ; 2 bytes @ 0x39
  1949  0059                     	ds	2
  1950  005B                     ?_lcd_print_int:	
  1951  005B                     lcd_print_int@number:	
  1952                           ; 0 bytes @ 0x3B
  1953                           
  1954                           
  1955                           ; 2 bytes @ 0x3B
  1956  005B                     	ds	2
  1957  005D                     lcd_print_int@pos:	
  1958                           
  1959                           ; 2 bytes @ 0x3D
  1960  005D                     	ds	2
  1961  005F                     lcd_print_int@decimal:	
  1962                           
  1963                           ; 1 bytes @ 0x3F
  1964  005F                     	ds	1
  1965  0060                     lcd_print_int@ten_thou_digit:	
  1966                           
  1967                           ; 1 bytes @ 0x40
  1968  0060                     	ds	1
  1969  0061                     ??_main:	
  1970                           
  1971                           ; 0 bytes @ 0x41
  1972  0061                     	ds	3
  1973  0064                     main@temp:	
  1974                           
  1975                           ; 2 bytes @ 0x44
  1976  0064                     	ds	2
  1977  0066                     main@mem_size:	
  1978                           
  1979                           ; 2 bytes @ 0x46
  1980  0066                     	ds	2
  1981  0068                     main@j:	
  1982                           
  1983                           ; 2 bytes @ 0x48
  1984  0068                     	ds	2
  1985  006A                     main@response:	
  1986                           
  1987                           ; 1 bytes @ 0x4A
  1988  006A                     	ds	1
  1989  006B                     main@i:	
  1990                           
  1991                           ; 2 bytes @ 0x4B
  1992  006B                     	ds	2
  1993  006D                     main@RX_data:	
  1994                           
  1995                           ; 1 bytes @ 0x4D
  1996  006D                     	ds	1
  1997  006E                     main@device_type:	
  1998                           
  1999                           ; 1 bytes @ 0x4E
  2000  006E                     	ds	1
  2001                           
  2002                           	psect	maintext
  2003  1695                     __pmaintext:	
  2004 ;;
  2005 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2006 ;;
  2007 ;; *************** function _main *****************
  2008 ;; Defined at:
  2009 ;;		line 476 in file "Multi_RX_testjig_v2.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  response        1   74[BANK0 ] unsigned char 
  2014 ;;  j               2   72[BANK0 ] int 
  2015 ;;  mem_size        2   70[BANK0 ] unsigned int 
  2016 ;;  i               2   75[BANK0 ] unsigned int 
  2017 ;;  temp            2   68[BANK0 ] unsigned int 
  2018 ;;  device_type     1   78[BANK0 ] unsigned char 
  2019 ;;  RX_data         1   77[BANK0 ] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;		None               void
  2022 ;; Registers used:
  2023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : B1F/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2030 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2031 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2032 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2033 ;;Total ram usage:       14 bytes
  2034 ;; Hardware stack levels required when called:    5
  2035 ;; This function calls:
  2036 ;;		_ADC_get_val
  2037 ;;		_RX_one
  2038 ;;		_RX_one_timeout
  2039 ;;		_TX_one
  2040 ;;		_Vout_set
  2041 ;;		_clear_lcd
  2042 ;;		_debug_fast_tx
  2043 ;;		_get_30v_current
  2044 ;;		_init_ADC
  2045 ;;		_init_current_sink
  2046 ;;		_init_i2c
  2047 ;;		_init_i2c_lcd_5v
  2048 ;;		_lcd_print_int
  2049 ;;		_power_supply_set
  2050 ;;		_print_error
  2051 ;;		_print_screen
  2052 ;;		_testjig_done
  2053 ;; This function is called by:
  2054 ;;		Startup code after reset
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           
  2059                           ;psect for function _main
  2060  1695                     _main:	
  2061                           
  2062                           ;Multi_RX_testjig_v2.c: 479: OSCCON = 0x7A;
  2063                           
  2064                           ;incstack = 0
  2065                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2066  1695  307A               	movlw	122
  2067  1696  0021               	movlb	1	; select bank1
  2068  1697  0099               	movwf	25	;volatile
  2069                           
  2070                           ;Multi_RX_testjig_v2.c: 481: OPTION_REG = 0b11010000;
  2071  1698  30D0               	movlw	208
  2072  1699  0095               	movwf	21	;volatile
  2073                           
  2074                           ;Multi_RX_testjig_v2.c: 482: TMR0 = 0x00;
  2075  169A  0020               	movlb	0	; select bank0
  2076  169B  0195               	clrf	21	;volatile
  2077                           
  2078                           ;Multi_RX_testjig_v2.c: 483: TMR0IF = 0;
  2079  169C  110B               	bcf	11,2	;volatile
  2080                           
  2081                           ;Multi_RX_testjig_v2.c: 484: TMR0IE = 1;
  2082  169D  168B               	bsf	11,5	;volatile
  2083                           
  2084                           ;Multi_RX_testjig_v2.c: 487: TRISA = 0b00001111;
  2085  169E  300F               	movlw	15
  2086  169F  0021               	movlb	1	; select bank1
  2087  16A0  008C               	movwf	12	;volatile
  2088                           
  2089                           ;Multi_RX_testjig_v2.c: 488: TRISB = 0b11001111;
  2090  16A1  30CF               	movlw	207
  2091  16A2  008D               	movwf	13	;volatile
  2092                           
  2093                           ;Multi_RX_testjig_v2.c: 489: TRISC = 0b00011010;
  2094  16A3  301A               	movlw	26
  2095  16A4  008E               	movwf	14	;volatile
  2096                           
  2097                           ;Multi_RX_testjig_v2.c: 490: TRISD = 0b10001011;
  2098  16A5  308B               	movlw	139
  2099  16A6  008F               	movwf	15	;volatile
  2100                           
  2101                           ;Multi_RX_testjig_v2.c: 491: TRISE = 0b11110110;
  2102  16A7  30F6               	movlw	246
  2103  16A8  0090               	movwf	16	;volatile
  2104                           
  2105                           ;Multi_RX_testjig_v2.c: 492: TRISF = 0b00101111;
  2106  16A9  302F               	movlw	47
  2107  16AA  0026               	movlb	6	; select bank6
  2108  16AB  008C               	movwf	12	;volatile
  2109                           
  2110                           ;Multi_RX_testjig_v2.c: 493: TRISG = 0b11101111;
  2111  16AC  30EF               	movlw	239
  2112  16AD  008D               	movwf	13	;volatile
  2113                           
  2114                           ;Multi_RX_testjig_v2.c: 495: PORTA = 0b00000000;
  2115  16AE  0020               	movlb	0	; select bank0
  2116  16AF  018C               	clrf	12	;volatile
  2117                           
  2118                           ;Multi_RX_testjig_v2.c: 496: PORTB = 0b00000000;
  2119  16B0  018D               	clrf	13	;volatile
  2120                           
  2121                           ;Multi_RX_testjig_v2.c: 497: PORTC = 0b00000000;
  2122  16B1  018E               	clrf	14	;volatile
  2123                           
  2124                           ;Multi_RX_testjig_v2.c: 498: PORTD = 0b01000000;
  2125  16B2  3040               	movlw	64
  2126  16B3  008F               	movwf	15	;volatile
  2127                           
  2128                           ;Multi_RX_testjig_v2.c: 499: PORTE = 0b00000000;
  2129  16B4  0190               	clrf	16	;volatile
  2130                           
  2131                           ;Multi_RX_testjig_v2.c: 500: PORTF = 0b00000000;
  2132  16B5  0025               	movlb	5	; select bank5
  2133  16B6  018C               	clrf	12	;volatile
  2134                           
  2135                           ;Multi_RX_testjig_v2.c: 501: PORTG = 0b00000000;
  2136  16B7  018D               	clrf	13	;volatile
  2137                           
  2138                           ;Multi_RX_testjig_v2.c: 503: WPUB = 0b00000000;
  2139  16B8  0024               	movlb	4	; select bank4
  2140  16B9  018D               	clrf	13	;volatile
  2141                           
  2142                           ;Multi_RX_testjig_v2.c: 504: WPUD = 0b00000000;
  2143  16BA  018F               	clrf	15	;volatile
  2144                           
  2145                           ;Multi_RX_testjig_v2.c: 505: WPUE = 0b00000000;
  2146  16BB  0190               	clrf	16	;volatile
  2147                           
  2148                           ;Multi_RX_testjig_v2.c: 506: WPUG = 0b00000010;
  2149  16BC  3002               	movlw	2
  2150  16BD  0029               	movlb	9	; select bank9
  2151  16BE  008D               	movwf	13	;volatile
  2152                           
  2153                           ;Multi_RX_testjig_v2.c: 510: ANSELA = 0b00000000;
  2154  16BF  0023               	movlb	3	; select bank3
  2155  16C0  018C               	clrf	12	;volatile
  2156                           
  2157                           ;Multi_RX_testjig_v2.c: 511: ANSELB = 0b00001100;
  2158  16C1  300C               	movlw	12
  2159  16C2  008D               	movwf	13	;volatile
  2160                           
  2161                           ;Multi_RX_testjig_v2.c: 512: ANSELD = 0b00001111;
  2162  16C3  300F               	movlw	15
  2163  16C4  008F               	movwf	15	;volatile
  2164                           
  2165                           ;Multi_RX_testjig_v2.c: 513: ANSELE = 0b00000100;
  2166  16C5  3004               	movlw	4
  2167  16C6  0090               	movwf	16	;volatile
  2168                           
  2169                           ;Multi_RX_testjig_v2.c: 514: ANSELF = 0b00000000;
  2170  16C7  0028               	movlb	8	; select bank8
  2171  16C8  018C               	clrf	12	;volatile
  2172                           
  2173                           ;Multi_RX_testjig_v2.c: 515: ANSELG = 0b00000000;
  2174  16C9  018D               	clrf	13	;volatile
  2175                           
  2176                           ;Multi_RX_testjig_v2.c: 522: init_ADC();
  2177  16CA  3195  255D  3196   	fcall	_init_ADC
  2178                           
  2179                           ;Multi_RX_testjig_v2.c: 523: init_current_sink();
  2180  16CD  3195  2564  3196   	fcall	_init_current_sink
  2181                           
  2182                           ;Multi_RX_testjig_v2.c: 524: pickit_state = pickit_idle;
  2183  16D0  3005               	movlw	5
  2184  16D1  0021               	movlb	1	; select bank1
  2185  16D2  00BB               	movwf	_pickit_state^(0+128)
  2186                           
  2187                           ;Multi_RX_testjig_v2.c: 526: RA5 = 0;
  2188  16D3  0020               	movlb	0	; select bank0
  2189  16D4  128C               	bcf	12,5	;volatile
  2190                           
  2191                           ;Multi_RX_testjig_v2.c: 528: RA5 = 1;
  2192  16D5  168C               	bsf	12,5	;volatile
  2193                           
  2194                           ;Multi_RX_testjig_v2.c: 532: init_i2c();
  2195  16D6  3188  2005  3196   	fcall	_init_i2c
  2196  16D9  3008               	movlw	8
  2197                           
  2198                           ;Multi_RX_testjig_v2.c: 542: init_i2c_lcd_5v(8, 1);
  2199  16DA  01F1               	clrf	init_i2c_lcd_5v@single1_double2
  2200  16DB  0AF1               	incf	init_i2c_lcd_5v@single1_double2,f
  2201  16DC  318B  239D  3196   	fcall	_init_i2c_lcd_5v
  2202                           
  2203                           ;Multi_RX_testjig_v2.c: 544: print_screen("Multi_RX", "Test-Jig|Startup");
  2204  16DF  3064               	movlw	low (STR_1| (0+32768))
  2205  16E0  00F4               	movwf	print_screen@top
  2206  16E1  3093               	movlw	high (STR_1| (0+32768))
  2207  16E2  00F5               	movwf	print_screen@top+1
  2208  16E3  30A9               	movlw	low (STR_2| (0+32768))
  2209  16E4  00F6               	movwf	print_screen@bottom
  2210  16E5  3090               	movlw	high (STR_2| (0+32768))
  2211  16E6  00F7               	movwf	print_screen@bottom+1
  2212  16E7  318A  22D4  3196   	fcall	_print_screen
  2213                           
  2214                           ;Multi_RX_testjig_v2.c: 545: RA4 = 1;
  2215  16EA  0020               	movlb	0	; select bank0
  2216  16EB  160C               	bsf	12,4	;volatile
  2217                           
  2218                           ;Multi_RX_testjig_v2.c: 546: GIE = 1;
  2219  16EC  178B               	bsf	11,7	;volatile
  2220                           
  2221                           ;Multi_RX_testjig_v2.c: 547: LATC7 = 1;
  2222  16ED  0022               	movlb	2	; select bank2
  2223  16EE  178E               	bsf	14,7	;volatile
  2224                           
  2225                           ;Multi_RX_testjig_v2.c: 548: _delay((unsigned long)((100)*(16000000/4000.0)));
  2226  16EF  3003               	movlw	3
  2227  16F0  0020               	movlb	0	; select bank0
  2228  16F1  00E3               	movwf	??_main+2
  2229  16F2  3008               	movlw	8
  2230  16F3  00E2               	movwf	??_main+1
  2231  16F4  3078               	movlw	120
  2232  16F5  00E1               	movwf	??_main
  2233  16F6                     u5257:	
  2234  16F6  0BE1               	decfsz	??_main,f
  2235  16F7  2EF6               	goto	u5257
  2236  16F8  0BE2               	decfsz	??_main+1,f
  2237  16F9  2EF6               	goto	u5257
  2238  16FA  0BE3               	decfsz	??_main+2,f
  2239  16FB  2EF6               	goto	u5257
  2240                           
  2241                           ;Multi_RX_testjig_v2.c: 549: debug_fast_tx(0xAAAA);
  2242  16FC  30AA               	movlw	170
  2243  16FD  00F0               	movwf	debug_fast_tx@data
  2244  16FE  00F1               	movwf	debug_fast_tx@data+1
  2245  16FF  318A  22A7  3196   	fcall	_debug_fast_tx
  2246                           
  2247                           ;Multi_RX_testjig_v2.c: 550: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2248  1702  3085               	movlw	133
  2249  1703  0020               	movlb	0	; select bank0
  2250  1704  00E1               	movwf	??_main
  2251  1705                     u5267:	
  2252  1705  0BE1               	decfsz	??_main,f
  2253  1706  2F05               	goto	u5267
  2254                           
  2255                           ;Multi_RX_testjig_v2.c: 551: debug_fast_tx(0x5555);
  2256  1707  3055               	movlw	85
  2257  1708  00F0               	movwf	debug_fast_tx@data
  2258  1709  00F1               	movwf	debug_fast_tx@data+1
  2259  170A  318A  22A7  3196   	fcall	_debug_fast_tx
  2260                           
  2261                           ;Multi_RX_testjig_v2.c: 552: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2262  170D  3085               	movlw	133
  2263  170E  0020               	movlb	0	; select bank0
  2264  170F  00E1               	movwf	??_main
  2265  1710                     u5277:	
  2266  1710  0BE1               	decfsz	??_main,f
  2267  1711  2F10               	goto	u5277
  2268                           
  2269                           ;Multi_RX_testjig_v2.c: 554: RE0 = 0;
  2270  1712  0020               	movlb	0	; select bank0
  2271  1713  1010               	bcf	16,0	;volatile
  2272                           
  2273                           ;Multi_RX_testjig_v2.c: 556: if(PCONbits.nRMCLR == 1)
  2274  1714  0021               	movlb	1	; select bank1
  2275  1715  1D96               	btfss	22,3	;volatile
  2276  1716  2F1C               	goto	l4030
  2277  1717  3002               	movlw	2
  2278                           
  2279                           ;Multi_RX_testjig_v2.c: 557: testjig_done(2, 0);
  2280  1718  01F8               	clrf	testjig_done@device_type
  2281  1719  3189  217F  3196   	fcall	_testjig_done
  2282  171C                     l4030:	
  2283                           
  2284                           ;Multi_RX_testjig_v2.c: 560: if(RF3 == 1)
  2285  171C  0025               	movlb	5	; select bank5
  2286  171D  1D8C               	btfss	12,3	;volatile
  2287  171E  2F2A               	goto	l294
  2288                           
  2289                           ;Multi_RX_testjig_v2.c: 561: print_error("Multi_RX", "-> Insert PCB");
  2290  171F  3064               	movlw	low (STR_1| (0+32768))
  2291  1720  00F8               	movwf	print_error@top
  2292  1721  3093               	movlw	high (STR_1| (0+32768))
  2293  1722  00F9               	movwf	print_error@top+1
  2294  1723  30BF               	movlw	low (STR_4| (0+32768))
  2295  1724  00FA               	movwf	print_error@bottom
  2296  1725  3091               	movlw	high (STR_4| (0+32768))
  2297  1726  00FB               	movwf	print_error@bottom+1
  2298  1727  318A  22F6  3196   	fcall	_print_error
  2299  172A                     l294:	
  2300                           
  2301                           ;Multi_RX_testjig_v2.c: 566: print_screen("Powering board", "");
  2302  172A  3058               	movlw	low (STR_5| (0+32768))
  2303  172B  00F4               	movwf	print_screen@top
  2304  172C  3091               	movlw	high (STR_5| (0+32768))
  2305  172D  00F5               	movwf	print_screen@top+1
  2306  172E  30DA               	movlw	low ((STR_137+15)| (0+32768))
  2307  172F  00F6               	movwf	print_screen@bottom
  2308  1730  3090               	movlw	high ((STR_137+15)| (0+32768))
  2309  1731  00F7               	movwf	print_screen@bottom+1
  2310  1732  318A  22D4  3196   	fcall	_print_screen
  2311                           
  2312                           ;Multi_RX_testjig_v2.c: 570: Vout_set(12);
  2313  1735  300C               	movlw	12
  2314  1736  00F4               	movwf	Vout_set@Volts
  2315  1737  01F5               	clrf	Vout_set@Volts+1
  2316  1738  3188  20C0  3196   	fcall	_Vout_set
  2317                           
  2318                           ;Multi_RX_testjig_v2.c: 571: power_supply_set(0);
  2319  173B  3000               	movlw	0
  2320  173C  318B  23F3  3196   	fcall	_power_supply_set
  2321                           
  2322                           ;Multi_RX_testjig_v2.c: 572: _delay((unsigned long)((150)*(16000000/4000.0)));
  2323  173F  3004               	movlw	4
  2324  1740  0020               	movlb	0	; select bank0
  2325  1741  00E3               	movwf	??_main+2
  2326  1742  300C               	movlw	12
  2327  1743  00E2               	movwf	??_main+1
  2328  1744  3035               	movlw	53
  2329  1745  00E1               	movwf	??_main
  2330  1746                     u5287:	
  2331  1746  0BE1               	decfsz	??_main,f
  2332  1747  2F46               	goto	u5287
  2333  1748  0BE2               	decfsz	??_main+1,f
  2334  1749  2F46               	goto	u5287
  2335  174A  0BE3               	decfsz	??_main+2,f
  2336  174B  2F46               	goto	u5287
  2337  174C  3200               	nop2
  2338                           
  2339                           ;Multi_RX_testjig_v2.c: 573: ADC_val = ADC_get_val(0b01011111);
  2340  174D  305F               	movlw	95
  2341  174E  318C  245E  3196   	fcall	_ADC_get_val
  2342                           
  2343                           ;Multi_RX_testjig_v2.c: 574: testjig_timer = (unsigned int)(7518.8/2);
  2344  1751  30AF               	movlw	175
  2345  1752  00AE               	movwf	_testjig_timer^(0+128)	;volatile
  2346  1753  300E               	movlw	14
  2347  1754  00AF               	movwf	(_testjig_timer^(0+128)+1)	;volatile
  2348  1755  2F70               	goto	l4040
  2349  1756                     l4042:	
  2350  1756  305F               	movlw	95
  2351  1757  318C  245E  3196   	fcall	_ADC_get_val
  2352  175A  3000               	movlw	0
  2353  175B  0271               	subwf	?_ADC_get_val+1,w
  2354  175C  307B               	movlw	123
  2355  175D  1903               	skipnz
  2356  175E  0270               	subwf	?_ADC_get_val,w
  2357  175F  1C03               	skipc
  2358  1760  2F7B               	goto	l4048
  2359  1761  318C  2413  3196   	fcall	_get_30v_current
  2360  1764  3000               	movlw	0
  2361  1765  0258               	subwf	?_get_30v_current+1,w
  2362  1766  301E               	movlw	30
  2363  1767  1903               	skipnz
  2364  1768  0257               	subwf	?_get_30v_current,w
  2365  1769  1803               	skipnc
  2366  176A  2F7B               	goto	l4048
  2367  176B  0021               	movlb	1	; select bank1
  2368  176C  082E               	movf	_testjig_timer^(0+128),w	;volatile
  2369  176D  042F               	iorwf	(_testjig_timer+1)^(0+128),w	;volatile
  2370  176E  1903               	btfsc	3,2
  2371  176F  2F7B               	goto	l4048
  2372  1770                     l4040:	
  2373                           ;Multi_RX_testjig_v2.c: 575: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08)) && (get_30v_current() < 30) && testjig_timer);
  2374                           
  2375  1770  305F               	movlw	95
  2376  1771  318C  245E  3196   	fcall	_ADC_get_val
  2377  1774  3000               	movlw	0
  2378  1775  0271               	subwf	?_ADC_get_val+1,w
  2379  1776  3068               	movlw	104
  2380  1777  1903               	skipnz
  2381  1778  0270               	subwf	?_ADC_get_val,w
  2382  1779  1C03               	btfss	3,0
  2383  177A  2F56               	goto	l4042
  2384  177B                     l4048:	
  2385                           
  2386                           ;Multi_RX_testjig_v2.c: 576: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  2387  177B  305F               	movlw	95
  2388  177C  318C  245E  3196   	fcall	_ADC_get_val
  2389  177F  3000               	movlw	0
  2390  1780  0271               	subwf	?_ADC_get_val+1,w
  2391  1781  3068               	movlw	104
  2392  1782  1903               	skipnz
  2393  1783  0270               	subwf	?_ADC_get_val,w
  2394  1784  1803               	skipnc
  2395  1785  2F8E               	goto	l4052
  2396                           
  2397                           ;Multi_RX_testjig_v2.c: 577: print_error("12v-5v supply", "Volt Error L");
  2398  1786  30F7               	movlw	low (STR_7| (0+32768))
  2399  1787  00F8               	movwf	print_error@top
  2400  1788  3091               	movlw	high (STR_7| (0+32768))
  2401  1789  00F9               	movwf	print_error@top+1
  2402  178A  3047               	movlw	low (STR_8| (0+32768))
  2403  178B  00FA               	movwf	print_error@bottom
  2404  178C  3092               	movlw	high (STR_8| (0+32768))
  2405  178D  2FDD               	goto	L1
  2406  178E                     l4052:	
  2407                           
  2408                           ;Multi_RX_testjig_v2.c: 578: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  2409  178E  305F               	movlw	95
  2410  178F  318C  245E  3196   	fcall	_ADC_get_val
  2411  1792  3000               	movlw	0
  2412  1793  0271               	subwf	?_ADC_get_val+1,w
  2413  1794  307B               	movlw	123
  2414  1795  1903               	skipnz
  2415  1796  0270               	subwf	?_ADC_get_val,w
  2416  1797  1C03               	skipc
  2417  1798  2FA1               	goto	l4056
  2418                           
  2419                           ;Multi_RX_testjig_v2.c: 579: print_error("12v-5v supply", "Volt Error H");
  2420  1799  30F7               	movlw	low (STR_7| (0+32768))
  2421  179A  00F8               	movwf	print_error@top
  2422  179B  3091               	movlw	high (STR_7| (0+32768))
  2423  179C  00F9               	movwf	print_error@top+1
  2424  179D  302D               	movlw	low (STR_10| (0+32768))
  2425  179E  00FA               	movwf	print_error@bottom
  2426  179F  3092               	movlw	high (STR_10| (0+32768))
  2427  17A0  2FDD               	goto	L1
  2428  17A1                     l4056:	
  2429                           
  2430                           ;Multi_RX_testjig_v2.c: 580: else if((get_30v_current() >= 60))
  2431  17A1  318C  2413  3196   	fcall	_get_30v_current
  2432  17A4  3000               	movlw	0
  2433  17A5  0258               	subwf	?_get_30v_current+1,w
  2434  17A6  303C               	movlw	60
  2435  17A7  1903               	skipnz
  2436  17A8  0257               	subwf	?_get_30v_current,w
  2437  17A9  1C03               	skipc
  2438  17AA  2FD1               	goto	l4064
  2439                           
  2440                           ;Multi_RX_testjig_v2.c: 581: {
  2441                           ;Multi_RX_testjig_v2.c: 582: lcd_print_int(get_30v_current(), 5, 0, 1);
  2442  17AB  318C  2413  3196   	fcall	_get_30v_current
  2443  17AE  0858               	movf	?_get_30v_current+1,w
  2444  17AF  00DC               	movwf	lcd_print_int@number+1
  2445  17B0  0857               	movf	?_get_30v_current,w
  2446  17B1  00DB               	movwf	lcd_print_int@number
  2447  17B2  3005               	movlw	5
  2448  17B3  00DD               	movwf	lcd_print_int@pos
  2449  17B4  01DE               	clrf	lcd_print_int@pos+1
  2450  17B5  01DF               	clrf	lcd_print_int@decimal
  2451  17B6  01E0               	clrf	lcd_print_int@ten_thou_digit
  2452  17B7  0AE0               	incf	lcd_print_int@ten_thou_digit,f
  2453  17B8  3188  20F7  3196   	fcall	_lcd_print_int
  2454                           
  2455                           ;Multi_RX_testjig_v2.c: 583: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2456  17BB  3015               	movlw	21
  2457  17BC  0020               	movlb	0	; select bank0
  2458  17BD  00E3               	movwf	??_main+2
  2459  17BE  304B               	movlw	75
  2460  17BF  00E2               	movwf	??_main+1
  2461  17C0  30D1               	movlw	209
  2462  17C1  00E1               	movwf	??_main
  2463  17C2                     u5297:	
  2464  17C2  0BE1               	decfsz	??_main,f
  2465  17C3  2FC2               	goto	u5297
  2466  17C4  0BE2               	decfsz	??_main+1,f
  2467  17C5  2FC2               	goto	u5297
  2468  17C6  0BE3               	decfsz	??_main+2,f
  2469  17C7  2FC2               	goto	u5297
  2470  17C8  0000               	nop
  2471                           
  2472                           ;Multi_RX_testjig_v2.c: 584: print_error("12v supply", "Curr Error");
  2473  17C9  3098               	movlw	low ((STR_19+4)| (0+32768))
  2474  17CA  00F8               	movwf	print_error@top
  2475  17CB  3091               	movlw	high ((STR_19+4)| (0+32768))
  2476  17CC  00F9               	movwf	print_error@top+1
  2477  17CD  30F5               	movlw	low (STR_12| (0+32768))
  2478  17CE  00FA               	movwf	print_error@bottom
  2479  17CF  3092               	movlw	high (STR_12| (0+32768))
  2480  17D0  2FDD               	goto	L1
  2481  17D1                     l4064:	
  2482                           ;Multi_RX_testjig_v2.c: 585: }
  2483                           
  2484                           
  2485                           ;Multi_RX_testjig_v2.c: 586: else if(testjig_timer == 0)
  2486  17D1  0021               	movlb	1	; select bank1
  2487  17D2  082E               	movf	_testjig_timer^(0+128),w	;volatile
  2488  17D3  042F               	iorwf	(_testjig_timer+1)^(0+128),w	;volatile
  2489  17D4  1D03               	btfss	3,2
  2490  17D5  2FE1               	goto	l301
  2491                           
  2492                           ;Multi_RX_testjig_v2.c: 587: print_error("12v-5v supply", "T-out Error");
  2493  17D6  30F7               	movlw	low (STR_7| (0+32768))
  2494  17D7  00F8               	movwf	print_error@top
  2495  17D8  3091               	movlw	high (STR_7| (0+32768))
  2496  17D9  00F9               	movwf	print_error@top+1
  2497  17DA  30DD               	movlw	low (STR_14| (0+32768))
  2498  17DB  00FA               	movwf	print_error@bottom
  2499  17DC  3092               	movlw	high (STR_14| (0+32768))
  2500  17DD                     L1:	
  2501  17DD  00FB               	movwf	print_error@bottom+1
  2502  17DE  318A  22F6  3196   	fcall	_print_error
  2503  17E1                     l301:	
  2504                           
  2505                           ;Multi_RX_testjig_v2.c: 593: Vout_set(27);
  2506  17E1  301B               	movlw	27
  2507  17E2  00F4               	movwf	Vout_set@Volts
  2508  17E3  01F5               	clrf	Vout_set@Volts+1
  2509  17E4  3188  20C0  3196   	fcall	_Vout_set
  2510                           
  2511                           ;Multi_RX_testjig_v2.c: 594: power_supply_set(0);
  2512  17E7  3000               	movlw	0
  2513  17E8  318B  23F3  3196   	fcall	_power_supply_set
  2514                           
  2515                           ;Multi_RX_testjig_v2.c: 595: _delay((unsigned long)((150)*(16000000/4000.0)));
  2516  17EB  3004               	movlw	4
  2517  17EC  0020               	movlb	0	; select bank0
  2518  17ED  00E3               	movwf	??_main+2
  2519  17EE  300C               	movlw	12
  2520  17EF  00E2               	movwf	??_main+1
  2521  17F0  3035               	movlw	53
  2522  17F1  00E1               	movwf	??_main
  2523  17F2                     u5307:	
  2524  17F2  0BE1               	decfsz	??_main,f
  2525  17F3  2FF2               	goto	u5307
  2526  17F4  0BE2               	decfsz	??_main+1,f
  2527  17F5  2FF2               	goto	u5307
  2528  17F6  0BE3               	decfsz	??_main+2,f
  2529  17F7  2FF2               	goto	u5307
  2530  17F8  3200               	nop2
  2531                           
  2532                           ;Multi_RX_testjig_v2.c: 596: testjig_timer = (unsigned int)(7518.8/2);
  2533  17F9  30AF               	movlw	175
  2534  17FA  0021               	movlb	1	; select bank1
  2535  17FB  00AE               	movwf	_testjig_timer^(0+128)	;volatile
  2536  17FC  300E               	movlw	14
  2537  17FD  00AF               	movwf	(_testjig_timer^(0+128)+1)	;volatile
  2538  17FE  3180  2892         	goto	l4072
  2539                           
  2540                           	psect	swtext1
  2541  13DE                     __pswtext1:	
  2542  13DE                     S4668:	
  2543  13DE  3182  2A1E         	ljmp	l341
  2544  13E0  3181  29E7         	ljmp	l330
  2545  13E2  3181  29F0         	ljmp	l4154
  2546  13E4  3181  29F7         	ljmp	l333
  2547  13E6  3182  2A1A         	ljmp	l340
  2548  13E8  3182  2A2F         	ljmp	l328
  2549                           
  2550                           	psect	swtext2
  2551  13EA                     __pswtext2:	
  2552  13EA                     S4670:	
  2553  13EA  318B  2BF5         	ljmp	l678
  2554  13EC  318B  2BF9         	ljmp	l680
  2555  13EE  318B  2BFE         	ljmp	l681
  2556  13F0  318C  2C03         	ljmp	l682
  2557                           
  2558                           	psect	text12
  2559  159D                     __ptext12:	
  2560 ;; *************** function _ten_thou_conv *****************
  2561 ;; Defined at:
  2562 ;;		line 1666 in file "Multi_RX_testjig_v2.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  n               2    6[COMMON] int 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;		None               void
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0, pclath, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 1F/0
  2573 ;;		On exit  : 1F/1
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2578 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2579 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2580 ;;Total ram usage:        5 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    2
  2583 ;; This function calls:
  2584 ;;		___bmul
  2585 ;;		___wmul
  2586 ;; This function is called by:
  2587 ;;		_lcd_print_int
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function _ten_thou_conv
  2593  159D                     _ten_thou_conv:	
  2594                           
  2595                           ;Multi_RX_testjig_v2.c: 1668: unit = n & 0x1F;
  2596                           
  2597                           ;incstack = 0
  2598                           ; Regs used in _ten_thou_conv: [wreg+status,2+status,0+pclath+cstack]
  2599  159D  0876               	movf	ten_thou_conv@n,w
  2600  159E  0021               	movlb	1	; select bank1
  2601  159F  00B7               	movwf	_unit^(0+128)
  2602  15A0  301F               	movlw	31
  2603  15A1  05B7               	andwf	_unit^(0+128),f
  2604                           
  2605                           ;Multi_RX_testjig_v2.c: 1669: ten = (n >> 5) & 0xF;
  2606  15A2  0877               	movf	ten_thou_conv@n+1,w
  2607  15A3  00F9               	movwf	??_ten_thou_conv+1
  2608  15A4  0876               	movf	ten_thou_conv@n,w
  2609  15A5  00F8               	movwf	??_ten_thou_conv
  2610  15A6  3005               	movlw	5
  2611  15A7  00FA               	movwf	??_ten_thou_conv+2
  2612  15A8                     u2925:	
  2613  15A8  0D79               	rlf	??_ten_thou_conv+1,w
  2614  15A9  0CF9               	rrf	??_ten_thou_conv+1,f
  2615  15AA  0CF8               	rrf	??_ten_thou_conv,f
  2616  15AB  0BFA               	decfsz	??_ten_thou_conv+2,f
  2617  15AC  2DA8               	goto	u2925
  2618  15AD  0878               	movf	??_ten_thou_conv,w
  2619  15AE  00B6               	movwf	_ten^(0+128)
  2620  15AF  300F               	movlw	15
  2621  15B0  05B6               	andwf	_ten^(0+128),f
  2622                           
  2623                           ;Multi_RX_testjig_v2.c: 1670: hund = (n >> 9) & 0xF;
  2624  15B1  0877               	movf	ten_thou_conv@n+1,w
  2625  15B2  00F9               	movwf	??_ten_thou_conv+1
  2626  15B3  0876               	movf	ten_thou_conv@n,w
  2627  15B4  00F8               	movwf	??_ten_thou_conv
  2628  15B5  3009               	movlw	9
  2629  15B6  00FA               	movwf	??_ten_thou_conv+2
  2630  15B7                     u2935:	
  2631  15B7  0D79               	rlf	??_ten_thou_conv+1,w
  2632  15B8  0CF9               	rrf	??_ten_thou_conv+1,f
  2633  15B9  0CF8               	rrf	??_ten_thou_conv,f
  2634  15BA  0BFA               	decfsz	??_ten_thou_conv+2,f
  2635  15BB  2DB7               	goto	u2935
  2636  15BC  0878               	movf	??_ten_thou_conv,w
  2637  15BD  00B4               	movwf	_hund^(0+128)
  2638  15BE  300F               	movlw	15
  2639  15BF  05B4               	andwf	_hund^(0+128),f
  2640                           
  2641                           ;Multi_RX_testjig_v2.c: 1671: thou = (n >> 13) & 0x7;
  2642  15C0  0877               	movf	ten_thou_conv@n+1,w
  2643  15C1  00F9               	movwf	??_ten_thou_conv+1
  2644  15C2  0876               	movf	ten_thou_conv@n,w
  2645  15C3  00F8               	movwf	??_ten_thou_conv
  2646  15C4  300D               	movlw	13
  2647  15C5  00FA               	movwf	??_ten_thou_conv+2
  2648  15C6                     u2945:	
  2649  15C6  0D79               	rlf	??_ten_thou_conv+1,w
  2650  15C7  0CF9               	rrf	??_ten_thou_conv+1,f
  2651  15C8  0CF8               	rrf	??_ten_thou_conv,f
  2652  15C9  0BFA               	decfsz	??_ten_thou_conv+2,f
  2653  15CA  2DC6               	goto	u2945
  2654  15CB  0878               	movf	??_ten_thou_conv,w
  2655  15CC  00B8               	movwf	_thou^(0+128)
  2656  15CD  3007               	movlw	7
  2657  15CE  05B8               	andwf	_thou^(0+128),f
  2658                           
  2659                           ;Multi_RX_testjig_v2.c: 1673: unit = 2 * (thou + hund + ten) + unit;
  2660  15CF  0838               	movf	_thou^(0+128),w
  2661  15D0  0734               	addwf	_hund^(0+128),w
  2662  15D1  0736               	addwf	_ten^(0+128),w
  2663  15D2  0709               	addwf	9,w
  2664  15D3  07B7               	addwf	_unit^(0+128),f
  2665                           
  2666                           ;Multi_RX_testjig_v2.c: 1674: ten_thou = (unit * 0x67) >> 10;
  2667  15D4  0837               	movf	_unit^(0+128),w
  2668  15D5  00F0               	movwf	___wmul@multiplier
  2669  15D6  3067               	movlw	103
  2670  15D7  01F1               	clrf	___wmul@multiplier+1
  2671  15D8  00F2               	movwf	___wmul@multiplicand
  2672  15D9  01F3               	clrf	___wmul@multiplicand+1
  2673  15DA  2680  3195         	fcall	___wmul
  2674  15DC  0870               	movf	?___wmul,w
  2675  15DD  00F8               	movwf	??_ten_thou_conv
  2676  15DE  0871               	movf	?___wmul+1,w
  2677  15DF  00F9               	movwf	??_ten_thou_conv+1
  2678  15E0  300A               	movlw	10
  2679  15E1  00FA               	movwf	??_ten_thou_conv+2
  2680  15E2                     u2955:	
  2681  15E2  0D79               	rlf	??_ten_thou_conv+1,w
  2682  15E3  0CF9               	rrf	??_ten_thou_conv+1,f
  2683  15E4  0CF8               	rrf	??_ten_thou_conv,f
  2684  15E5  0BFA               	decfsz	??_ten_thou_conv+2,f
  2685  15E6  2DE2               	goto	u2955
  2686  15E7  0878               	movf	??_ten_thou_conv,w
  2687  15E8  0020               	movlb	0	; select bank0
  2688  15E9  00EF               	movwf	_ten_thou
  2689                           
  2690                           ;Multi_RX_testjig_v2.c: 1675: unit = unit - 10 * ten_thou;
  2691  15EA  30F6               	movlw	246
  2692  15EB  00F0               	movwf	___bmul@multiplicand
  2693  15EC  086F               	movf	_ten_thou,w
  2694  15ED  265D  3195         	fcall	___bmul
  2695  15EF  0021               	movlb	1	; select bank1
  2696  15F0  07B7               	addwf	_unit^(0+128),f
  2697                           
  2698                           ;Multi_RX_testjig_v2.c: 1677: ten = 9 * thou + hund + 3 * ten + ten_thou;
  2699  15F1  3009               	movlw	9
  2700  15F2  00F0               	movwf	___bmul@multiplicand
  2701  15F3  0838               	movf	_thou^(0+128),w
  2702  15F4  265D  3195         	fcall	___bmul
  2703  15F6  00F8               	movwf	??_ten_thou_conv
  2704  15F7  0021               	movlb	1	; select bank1
  2705  15F8  0836               	movf	_ten^(0+128),w
  2706  15F9  0736               	addwf	_ten^(0+128),w
  2707  15FA  0736               	addwf	_ten^(0+128),w
  2708  15FB  0778               	addwf	??_ten_thou_conv,w
  2709  15FC  0734               	addwf	_hund^(0+128),w
  2710  15FD  0020               	movlb	0	; select bank0
  2711  15FE  076F               	addwf	_ten_thou,w
  2712  15FF  0021               	movlb	1	; select bank1
  2713  1600  00B6               	movwf	_ten^(0+128)
  2714                           
  2715                           ;Multi_RX_testjig_v2.c: 1678: ten_thou = (ten * 0x67) >> 10;
  2716  1601  00F0               	movwf	___wmul@multiplier
  2717  1602  3067               	movlw	103
  2718  1603  01F1               	clrf	___wmul@multiplier+1
  2719  1604  00F2               	movwf	___wmul@multiplicand
  2720  1605  01F3               	clrf	___wmul@multiplicand+1
  2721  1606  2680  3195         	fcall	___wmul
  2722  1608  0870               	movf	?___wmul,w
  2723  1609  00F8               	movwf	??_ten_thou_conv
  2724  160A  0871               	movf	?___wmul+1,w
  2725  160B  00F9               	movwf	??_ten_thou_conv+1
  2726  160C  300A               	movlw	10
  2727  160D  00FA               	movwf	??_ten_thou_conv+2
  2728  160E                     u2965:	
  2729  160E  0D79               	rlf	??_ten_thou_conv+1,w
  2730  160F  0CF9               	rrf	??_ten_thou_conv+1,f
  2731  1610  0CF8               	rrf	??_ten_thou_conv,f
  2732  1611  0BFA               	decfsz	??_ten_thou_conv+2,f
  2733  1612  2E0E               	goto	u2965
  2734  1613  0878               	movf	??_ten_thou_conv,w
  2735  1614  0020               	movlb	0	; select bank0
  2736  1615  00EF               	movwf	_ten_thou
  2737                           
  2738                           ;Multi_RX_testjig_v2.c: 1679: ten = ten - 10 * ten_thou;
  2739  1616  30F6               	movlw	246
  2740  1617  00F0               	movwf	___bmul@multiplicand
  2741  1618  086F               	movf	_ten_thou,w
  2742  1619  265D  3195         	fcall	___bmul
  2743  161B  0021               	movlb	1	; select bank1
  2744  161C  07B6               	addwf	_ten^(0+128),f
  2745                           
  2746                           ;Multi_RX_testjig_v2.c: 1681: hund = thou + 5 * hund + ten_thou;
  2747  161D  3005               	movlw	5
  2748  161E  00F0               	movwf	___bmul@multiplicand
  2749  161F  0834               	movf	_hund^(0+128),w
  2750  1620  265D  3195         	fcall	___bmul
  2751  1622  0021               	movlb	1	; select bank1
  2752  1623  0738               	addwf	_thou^(0+128),w
  2753  1624  0020               	movlb	0	; select bank0
  2754  1625  076F               	addwf	_ten_thou,w
  2755  1626  0021               	movlb	1	; select bank1
  2756  1627  00B4               	movwf	_hund^(0+128)
  2757                           
  2758                           ;Multi_RX_testjig_v2.c: 1682: ten_thou = (hund * 0x67) >> 10;
  2759  1628  00F0               	movwf	___wmul@multiplier
  2760  1629  3067               	movlw	103
  2761  162A  01F1               	clrf	___wmul@multiplier+1
  2762  162B  00F2               	movwf	___wmul@multiplicand
  2763  162C  01F3               	clrf	___wmul@multiplicand+1
  2764  162D  2680  3195         	fcall	___wmul
  2765  162F  0870               	movf	?___wmul,w
  2766  1630  00F8               	movwf	??_ten_thou_conv
  2767  1631  0871               	movf	?___wmul+1,w
  2768  1632  00F9               	movwf	??_ten_thou_conv+1
  2769  1633  300A               	movlw	10
  2770  1634  00FA               	movwf	??_ten_thou_conv+2
  2771  1635                     u2975:	
  2772  1635  0D79               	rlf	??_ten_thou_conv+1,w
  2773  1636  0CF9               	rrf	??_ten_thou_conv+1,f
  2774  1637  0CF8               	rrf	??_ten_thou_conv,f
  2775  1638  0BFA               	decfsz	??_ten_thou_conv+2,f
  2776  1639  2E35               	goto	u2975
  2777  163A  0878               	movf	??_ten_thou_conv,w
  2778  163B  0020               	movlb	0	; select bank0
  2779  163C  00EF               	movwf	_ten_thou
  2780                           
  2781                           ;Multi_RX_testjig_v2.c: 1683: hund = hund - 10 * ten_thou;
  2782  163D  30F6               	movlw	246
  2783  163E  00F0               	movwf	___bmul@multiplicand
  2784  163F  086F               	movf	_ten_thou,w
  2785  1640  265D  3195         	fcall	___bmul
  2786  1642  0021               	movlb	1	; select bank1
  2787  1643  07B4               	addwf	_hund^(0+128),f
  2788                           
  2789                           ;Multi_RX_testjig_v2.c: 1685: thou = 8 * thou + ten_thou;
  2790  1644  0838               	movf	_thou^(0+128),w
  2791  1645  0709               	addwf	9,w
  2792  1646  0709               	addwf	9,w
  2793  1647  0709               	addwf	9,w
  2794  1648  0020               	movlb	0	; select bank0
  2795  1649  076F               	addwf	_ten_thou,w
  2796  164A  0021               	movlb	1	; select bank1
  2797  164B  00B8               	movwf	_thou^(0+128)
  2798                           
  2799                           ;Multi_RX_testjig_v2.c: 1686: ten_thou = (thou * 0x1A) >> 8;
  2800  164C  00F0               	movwf	___wmul@multiplier
  2801  164D  301A               	movlw	26
  2802  164E  01F1               	clrf	___wmul@multiplier+1
  2803  164F  00F2               	movwf	___wmul@multiplicand
  2804  1650  01F3               	clrf	___wmul@multiplicand+1
  2805  1651  2680  3195         	fcall	___wmul
  2806  1653  0871               	movf	?___wmul+1,w
  2807  1654  0020               	movlb	0	; select bank0
  2808  1655  00EF               	movwf	_ten_thou
  2809                           
  2810                           ;Multi_RX_testjig_v2.c: 1687: thou = thou - 10 * ten_thou;
  2811  1656  30F6               	movlw	246
  2812  1657  00F0               	movwf	___bmul@multiplicand
  2813  1658  086F               	movf	_ten_thou,w
  2814  1659  265D               	fcall	___bmul
  2815  165A  0021               	movlb	1	; select bank1
  2816  165B  07B8               	addwf	_thou^(0+128),f
  2817  165C  0008               	return
  2818  165D                     __end_of_ten_thou_conv:	
  2819  165D                     __ptext14:	
  2820 ;; *************** function ___bmul *****************
  2821 ;; Defined at:
  2822 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;  multiplier      1    wreg     unsigned char 
  2825 ;;  multiplicand    1    0[COMMON] unsigned char 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  multiplier      1    2[COMMON] unsigned char 
  2828 ;;  product         1    1[COMMON] unsigned char 
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  1    wreg      unsigned char 
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0
  2833 ;; Tracked objects:
  2834 ;;		On entry : 1E/0
  2835 ;;		On exit  : 1E/0
  2836 ;;		Unchanged: 1E/0
  2837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2838 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2839 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2841 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2842 ;;Total ram usage:        3 bytes
  2843 ;; Hardware stack levels used:    1
  2844 ;; Hardware stack levels required when called:    1
  2845 ;; This function calls:
  2846 ;;		Nothing
  2847 ;; This function is called by:
  2848 ;;		_ten_thou_conv
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           
  2853                           ;psect for function ___bmul
  2854  165D                     ___bmul:	
  2855                           
  2856                           ;incstack = 0
  2857                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2858                           ;___bmul@multiplier stored from wreg
  2859  165D  00F2               	movwf	___bmul@multiplier
  2860  165E  01F1               	clrf	___bmul@product
  2861  165F  0870               	movf	___bmul@multiplicand,w
  2862  1660  1872               	btfsc	___bmul@multiplier,0
  2863  1661  07F1               	addwf	___bmul@product,f
  2864  1662  35F0               	lslf	___bmul@multiplicand,f
  2865  1663  0870               	movf	___bmul@multiplicand,w
  2866  1664  18F2               	btfsc	___bmul@multiplier,1
  2867  1665  07F1               	addwf	___bmul@product,f
  2868  1666  35F0               	lslf	___bmul@multiplicand,f
  2869  1667  0870               	movf	___bmul@multiplicand,w
  2870  1668  1972               	btfsc	___bmul@multiplier,2
  2871  1669  07F1               	addwf	___bmul@product,f
  2872  166A  35F0               	lslf	___bmul@multiplicand,f
  2873  166B  0870               	movf	___bmul@multiplicand,w
  2874  166C  19F2               	btfsc	___bmul@multiplier,3
  2875  166D  07F1               	addwf	___bmul@product,f
  2876  166E  35F0               	lslf	___bmul@multiplicand,f
  2877  166F  0870               	movf	___bmul@multiplicand,w
  2878  1670  1A72               	btfsc	___bmul@multiplier,4
  2879  1671  07F1               	addwf	___bmul@product,f
  2880  1672  35F0               	lslf	___bmul@multiplicand,f
  2881  1673  0870               	movf	___bmul@multiplicand,w
  2882  1674  1AF2               	btfsc	___bmul@multiplier,5
  2883  1675  07F1               	addwf	___bmul@product,f
  2884  1676  35F0               	lslf	___bmul@multiplicand,f
  2885  1677  0870               	movf	___bmul@multiplicand,w
  2886  1678  1B72               	btfsc	___bmul@multiplier,6
  2887  1679  07F1               	addwf	___bmul@product,f
  2888  167A  35F0               	lslf	___bmul@multiplicand,f
  2889  167B  0870               	movf	___bmul@multiplicand,w
  2890  167C  1BF2               	btfsc	___bmul@multiplier,7
  2891  167D  07F1               	addwf	___bmul@product,f
  2892  167E  0871               	movf	___bmul@product,w
  2893  167F  0008               	return
  2894  1680                     __end_of___bmul:	
  2895  1680                     __ptext13:	
  2896 ;; *************** function ___wmul *****************
  2897 ;; Defined at:
  2898 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  multiplier      2    0[COMMON] unsigned int 
  2901 ;;  multiplicand    2    2[COMMON] unsigned int 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  product         2    4[COMMON] unsigned int 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  2    0[COMMON] unsigned int 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0
  2908 ;; Tracked objects:
  2909 ;;		On entry : 1F/1
  2910 ;;		On exit  : 1F/1
  2911 ;;		Unchanged: 1F/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2914 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2916 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2917 ;;Total ram usage:        6 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    1
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_ten_thou_conv
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function ___wmul
  2929  1680                     ___wmul:	
  2930                           
  2931                           ;incstack = 0
  2932                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2933  1680  01F4               	clrf	___wmul@product
  2934  1681  01F5               	clrf	___wmul@product+1
  2935  1682                     l2962:	
  2936  1682  1C70               	btfss	___wmul@multiplier,0
  2937  1683  2E88               	goto	l2966
  2938  1684  0872               	movf	___wmul@multiplicand,w
  2939  1685  07F4               	addwf	___wmul@product,f
  2940  1686  0873               	movf	___wmul@multiplicand+1,w
  2941  1687  3DF5               	addwfc	___wmul@product+1,f
  2942  1688                     l2966:	
  2943  1688  35F2               	lslf	___wmul@multiplicand,f
  2944  1689  0DF3               	rlf	___wmul@multiplicand+1,f
  2945  168A  36F1               	lsrf	___wmul@multiplier+1,f
  2946  168B  0CF0               	rrf	___wmul@multiplier,f
  2947  168C  0870               	movf	___wmul@multiplier,w
  2948  168D  0471               	iorwf	___wmul@multiplier+1,w
  2949  168E  1D03               	btfss	3,2
  2950  168F  2E82               	goto	l2962
  2951  1690  0875               	movf	___wmul@product+1,w
  2952  1691  00F1               	movwf	?___wmul+1
  2953  1692  0874               	movf	___wmul@product,w
  2954  1693  00F0               	movwf	?___wmul
  2955  1694  0008               	return
  2956  1695                     __end_of___wmul:	
  2957                           
  2958                           	psect	text18
  2959  0805                     __ptext18:	
  2960 ;; *************** function _init_i2c *****************
  2961 ;; Defined at:
  2962 ;;		line 2114 in file "Multi_RX_testjig_v2.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;		None               void
  2969 ;; Registers used:
  2970 ;;		wreg
  2971 ;; Tracked objects:
  2972 ;;		On entry : B1F/0
  2973 ;;		On exit  : 1F/4
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2978 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2979 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2980 ;;Total ram usage:        3 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    1
  2983 ;; This function calls:
  2984 ;;		Nothing
  2985 ;; This function is called by:
  2986 ;;		_main
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           
  2991                           ;psect for function _init_i2c
  2992  0805                     _init_i2c:	
  2993                           
  2994                           ;Multi_RX_testjig_v2.c: 2116: RA5 = 1;
  2995                           
  2996                           ;incstack = 0
  2997                           ; Regs used in _init_i2c: [wreg]
  2998  0805  168C               	bsf	12,5	;volatile
  2999                           
  3000                           ;Multi_RX_testjig_v2.c: 2117: _delay((unsigned long)((200)*(16000000/4000.0)));
  3001  0806  3005               	movlw	5
  3002  0807  00F2               	movwf	??_init_i2c+2
  3003  0808  300F               	movlw	15
  3004  0809  00F1               	movwf	??_init_i2c+1
  3005  080A  30F4               	movlw	244
  3006  080B  00F0               	movwf	??_init_i2c
  3007  080C                     u5787:	
  3008  080C  0BF0               	decfsz	??_init_i2c,f
  3009  080D  280C               	goto	u5787
  3010  080E  0BF1               	decfsz	??_init_i2c+1,f
  3011  080F  280C               	goto	u5787
  3012  0810  0BF2               	decfsz	??_init_i2c+2,f
  3013  0811  280C               	goto	u5787
  3014                           
  3015                           ;Multi_RX_testjig_v2.c: 2118: TRISC3 = 1;
  3016  0812  0021               	movlb	1	; select bank1
  3017  0813  158E               	bsf	14,3	;volatile
  3018                           
  3019                           ;Multi_RX_testjig_v2.c: 2119: TRISC4 = 1;
  3020  0814  160E               	bsf	14,4	;volatile
  3021                           
  3022                           ;Multi_RX_testjig_v2.c: 2120: SSP1STAT |= 0x80;
  3023  0815  0024               	movlb	4	; select bank4
  3024  0816  1794               	bsf	20,7	;volatile
  3025                           
  3026                           ;Multi_RX_testjig_v2.c: 2121: SSP1CON1 = 0x28;
  3027  0817  3028               	movlw	40
  3028  0818  0095               	movwf	21	;volatile
  3029                           
  3030                           ;Multi_RX_testjig_v2.c: 2122: SSP1ADD = 0x22;
  3031  0819  3022               	movlw	34
  3032  081A  0092               	movwf	18	;volatile
  3033  081B  0008               	return
  3034  081C                     __end_of_init_i2c:	
  3035                           
  3036                           	psect	text19
  3037  1564                     __ptext19:	
  3038 ;; *************** function _init_current_sink *****************
  3039 ;; Defined at:
  3040 ;;		line 2143 in file "Multi_RX_testjig_v2.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;		None
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;		None               void
  3047 ;; Registers used:
  3048 ;;		wreg, status,2
  3049 ;; Tracked objects:
  3050 ;;		On entry : B1F/1
  3051 ;;		On exit  : B1F/C
  3052 ;;		Unchanged: B00/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3058 ;;Total ram usage:        0 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    1
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_main
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           
  3069                           ;psect for function _init_current_sink
  3070  1564                     _init_current_sink:	
  3071                           
  3072                           ;Multi_RX_testjig_v2.c: 2145: T2CON = 0b00000110;
  3073                           
  3074                           ;incstack = 0
  3075                           ; Regs used in _init_current_sink: [wreg+status,2]
  3076  1564  3006               	movlw	6
  3077  1565  0020               	movlb	0	; select bank0
  3078  1566  009C               	movwf	28	;volatile
  3079                           
  3080                           ;Multi_RX_testjig_v2.c: 2146: PR2 = 0xFA;
  3081  1567  30FA               	movlw	250
  3082  1568  009B               	movwf	27	;volatile
  3083                           
  3084                           ;Multi_RX_testjig_v2.c: 2147: PIE1bits.TMR2IE = 1;
  3085  1569  0021               	movlb	1	; select bank1
  3086  156A  1491               	bsf	17,1	;volatile
  3087                           
  3088                           ;Multi_RX_testjig_v2.c: 2149: T8CON = 0b00000100;
  3089  156B  3004               	movlw	4
  3090  156C  002B               	movlb	11	; select bank11
  3091  156D  0097               	movwf	23	;volatile
  3092                           
  3093                           ;Multi_RX_testjig_v2.c: 2150: PR8 = 0xFF;
  3094  156E  30FF               	movlw	255
  3095  156F  0096               	movwf	22	;volatile
  3096                           
  3097                           ;Multi_RX_testjig_v2.c: 2151: CCP9CON = 0b00001100;
  3098  1570  300C               	movlw	12
  3099  1571  002C               	movlb	12	; select bank12
  3100  1572  009C               	movwf	28	;volatile
  3101                           
  3102                           ;Multi_RX_testjig_v2.c: 2152: CCPTMRS2 = 0b00000001;
  3103  1573  3001               	movlw	1
  3104  1574  0025               	movlb	5	; select bank5
  3105  1575  009F               	movwf	31	;volatile
  3106                           
  3107                           ;Multi_RX_testjig_v2.c: 2153: CCPR9L = 0x00;
  3108  1576  002C               	movlb	12	; select bank12
  3109  1577  019A               	clrf	26	;volatile
  3110  1578  0008               	return
  3111  1579                     __end_of_init_current_sink:	
  3112                           
  3113                           	psect	text20
  3114  155D                     __ptext20:	
  3115 ;; *************** function _init_ADC *****************
  3116 ;; Defined at:
  3117 ;;		line 2125 in file "Multi_RX_testjig_v2.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;		None               void
  3124 ;; Registers used:
  3125 ;;		wreg
  3126 ;; Tracked objects:
  3127 ;;		On entry : B1F/8
  3128 ;;		On exit  : B1F/1
  3129 ;;		Unchanged: B00/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3135 ;;Total ram usage:        0 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    1
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_main
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           
  3146                           ;psect for function _init_ADC
  3147  155D                     _init_ADC:	
  3148                           
  3149                           ;Multi_RX_testjig_v2.c: 2127: FVRCON = 0b10000011;
  3150                           
  3151                           ;incstack = 0
  3152                           ; Regs used in _init_ADC: [wreg]
  3153  155D  3083               	movlw	131
  3154  155E  0022               	movlb	2	; select bank2
  3155  155F  0097               	movwf	23	;volatile
  3156                           
  3157                           ;Multi_RX_testjig_v2.c: 2129: ADCON1 = 0b10100011;
  3158  1560  30A3               	movlw	163
  3159  1561  0021               	movlb	1	; select bank1
  3160  1562  009E               	movwf	30	;volatile
  3161  1563  0008               	return
  3162  1564                     __end_of_init_ADC:	
  3163                           
  3164                           	psect	text21
  3165  0C13                     __ptext21:	
  3166 ;; *************** function _get_30v_current *****************
  3167 ;; Defined at:
  3168 ;;		line 2186 in file "Multi_RX_testjig_v2.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  temp            2   57[BANK0 ] unsigned int 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  2   55[BANK0 ] unsigned int 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0, pclath, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 1E/1
  3179 ;;		On exit  : 1F/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3182 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3183 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3185 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3186 ;;Total ram usage:        4 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    3
  3189 ;; This function calls:
  3190 ;;		_ADC_get_val
  3191 ;;		___fladd
  3192 ;;		___flmul
  3193 ;;		___fltol
  3194 ;;		___xxtofl
  3195 ;; This function is called by:
  3196 ;;		_main
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           
  3201                           ;psect for function _get_30v_current
  3202  0C13                     _get_30v_current:	
  3203                           
  3204                           ;Multi_RX_testjig_v2.c: 2188: unsigned int temp;
  3205                           ;Multi_RX_testjig_v2.c: 2189: temp = ADC_get_val(0b01010011);
  3206                           
  3207                           ;incstack = 0
  3208                           ; Regs used in _get_30v_current: [wreg+status,2+status,0+pclath+cstack]
  3209  0C13  3053               	movlw	83
  3210  0C14  245E  318C         	fcall	_ADC_get_val
  3211  0C16  0871               	movf	?_ADC_get_val+1,w
  3212  0C17  0020               	movlb	0	; select bank0
  3213  0C18  00DA               	movwf	get_30v_current@temp+1
  3214  0C19  0870               	movf	?_ADC_get_val,w
  3215  0C1A  00D9               	movwf	get_30v_current@temp
  3216                           
  3217                           ;Multi_RX_testjig_v2.c: 2190: if(temp > 4)
  3218  0C1B  3000               	movlw	0
  3219  0C1C  025A               	subwf	get_30v_current@temp+1,w
  3220  0C1D  3005               	movlw	5
  3221  0C1E  1903               	skipnz
  3222  0C1F  0259               	subwf	get_30v_current@temp,w
  3223  0C20  1C03               	skipc
  3224  0C21  2C5B               	goto	l3780
  3225                           
  3226                           ;Multi_RX_testjig_v2.c: 2191: return ( temp * 3.4) - 16;
  3227  0C22  0859               	movf	get_30v_current@temp,w
  3228  0C23  00F0               	movwf	___xxtofl@val
  3229  0C24  085A               	movf	get_30v_current@temp+1,w
  3230  0C25  00F1               	movwf	___xxtofl@val+1
  3231  0C26  3000               	movlw	0
  3232  0C27  01F2               	clrf	___xxtofl@val+2
  3233  0C28  01F3               	clrf	___xxtofl@val+3
  3234  0C29  278C  318C         	fcall	___xxtofl
  3235  0C2B  0873               	movf	?___xxtofl+3,w
  3236  0C2C  00A7               	movwf	___flmul@a+3
  3237  0C2D  0872               	movf	?___xxtofl+2,w
  3238  0C2E  00A6               	movwf	___flmul@a+2
  3239  0C2F  0871               	movf	?___xxtofl+1,w
  3240  0C30  00A5               	movwf	___flmul@a+1
  3241  0C31  0870               	movf	?___xxtofl,w
  3242  0C32  00A4               	movwf	___flmul@a
  3243  0C33  3040               	movlw	64
  3244  0C34  00A3               	movwf	___flmul@b+3
  3245  0C35  3059               	movlw	89
  3246  0C36  00A2               	movwf	___flmul@b+2
  3247  0C37  3099               	movlw	153
  3248  0C38  00A1               	movwf	___flmul@b+1
  3249  0C39  309A               	movlw	154
  3250  0C3A  00A0               	movwf	___flmul@b
  3251  0C3B  25C1  318C         	fcall	___flmul
  3252  0C3D  0823               	movf	?___flmul+3,w
  3253  0C3E  00C0               	movwf	___fladd@a+3
  3254  0C3F  0822               	movf	?___flmul+2,w
  3255  0C40  00BF               	movwf	___fladd@a+2
  3256  0C41  0821               	movf	?___flmul+1,w
  3257  0C42  00BE               	movwf	___fladd@a+1
  3258  0C43  0820               	movf	?___flmul,w
  3259  0C44  00BD               	movwf	___fladd@a
  3260  0C45  30C1               	movlw	193
  3261  0C46  00BC               	movwf	___fladd@b+3
  3262  0C47  3080               	movlw	128
  3263  0C48  00BB               	movwf	___fladd@b+2
  3264  0C49  01BA               	clrf	___fladd@b+1
  3265  0C4A  01B9               	clrf	___fladd@b
  3266  0C4B  2470               	fcall	___fladd
  3267  0C4C  083C               	movf	?___fladd+3,w
  3268  0C4D  00D0               	movwf	___fltol@f1+3
  3269  0C4E  083B               	movf	?___fladd+2,w
  3270  0C4F  00CF               	movwf	___fltol@f1+2
  3271  0C50  083A               	movf	?___fladd+1,w
  3272  0C51  00CE               	movwf	___fltol@f1+1
  3273  0C52  0839               	movf	?___fladd,w
  3274  0C53  00CD               	movwf	___fltol@f1
  3275  0C54  3188  206D         	fcall	___fltol
  3276  0C56  084E               	movf	?___fltol+1,w
  3277  0C57  00D8               	movwf	?_get_30v_current+1
  3278  0C58  084D               	movf	?___fltol,w
  3279  0C59  00D7               	movwf	?_get_30v_current
  3280  0C5A  0008               	return
  3281  0C5B                     l3780:	
  3282                           
  3283                           ;Multi_RX_testjig_v2.c: 2192: else
  3284                           ;Multi_RX_testjig_v2.c: 2193: return 0;
  3285  0C5B  01D7               	clrf	?_get_30v_current
  3286  0C5C  01D8               	clrf	?_get_30v_current+1
  3287  0C5D  0008               	return
  3288  0C5E                     __end_of_get_30v_current:	
  3289  0C5E                     __ptext27:	
  3290 ;; *************** function _ADC_get_val *****************
  3291 ;; Defined at:
  3292 ;;		line 2132 in file "Multi_RX_testjig_v2.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  channel         1    wreg     unsigned char 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  channel         1    3[COMMON] unsigned char 
  3297 ;;  return_val      2    4[COMMON] unsigned int 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  2    0[COMMON] unsigned int 
  3300 ;; Registers used:
  3301 ;;		wreg
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/5
  3304 ;;		On exit  : 1F/1
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3307 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3308 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3310 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3311 ;;Total ram usage:        6 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    1
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_main
  3318 ;;		_get_30v_current
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           
  3323                           ;psect for function _ADC_get_val
  3324  0C5E                     _ADC_get_val:	
  3325                           
  3326                           ;incstack = 0
  3327                           ; Regs used in _ADC_get_val: [wreg]
  3328                           ;ADC_get_val@channel stored from wreg
  3329  0C5E  00F3               	movwf	ADC_get_val@channel
  3330                           
  3331                           ;Multi_RX_testjig_v2.c: 2134: unsigned int return_val;
  3332                           ;Multi_RX_testjig_v2.c: 2135: GIE = 0;
  3333  0C5F  138B               	bcf	11,7	;volatile
  3334                           
  3335                           ;Multi_RX_testjig_v2.c: 2136: ADCON0 = channel;
  3336  0C60  0873               	movf	ADC_get_val@channel,w
  3337  0C61  0021               	movlb	1	; select bank1
  3338  0C62  009D               	movwf	29	;volatile
  3339  0C63                     l668:	
  3340                           ;Multi_RX_testjig_v2.c: 2137: while(ADCON0bits.GO_nDONE == 1);
  3341                           
  3342  0C63  189D               	btfsc	29,1	;volatile
  3343  0C64  2C63               	goto	l668
  3344                           
  3345                           ;Multi_RX_testjig_v2.c: 2138: return_val = ADRESH << 8 | ADRESL;
  3346  0C65  081C               	movf	28,w	;volatile
  3347  0C66  00F5               	movwf	ADC_get_val@return_val+1
  3348  0C67  01F4               	clrf	ADC_get_val@return_val
  3349  0C68  081B               	movf	27,w	;volatile
  3350  0C69  04F4               	iorwf	ADC_get_val@return_val,f
  3351                           
  3352                           ;Multi_RX_testjig_v2.c: 2139: GIE = 1;
  3353  0C6A  178B               	bsf	11,7	;volatile
  3354                           
  3355                           ;Multi_RX_testjig_v2.c: 2140: return return_val;
  3356  0C6B  0875               	movf	ADC_get_val@return_val+1,w
  3357  0C6C  00F1               	movwf	?_ADC_get_val+1
  3358  0C6D  0874               	movf	ADC_get_val@return_val,w
  3359  0C6E  00F0               	movwf	?_ADC_get_val
  3360  0C6F  0008               	return
  3361  0C70                     __end_of_ADC_get_val:	
  3362  0C70                     __ptext26:	
  3363 ;; *************** function ___fladd *****************
  3364 ;; Defined at:
  3365 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  b               4   25[BANK0 ] unsigned int 
  3368 ;;  a               4   29[BANK0 ] unsigned int 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  grs             1   44[BANK0 ] unsigned char 
  3371 ;;  bexp            1   43[BANK0 ] unsigned char 
  3372 ;;  aexp            1   42[BANK0 ] unsigned char 
  3373 ;;  signs           1   41[BANK0 ] unsigned char 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  4   25[BANK0 ] unsigned char 
  3376 ;; Registers used:
  3377 ;;		wreg, status,2, status,0
  3378 ;; Tracked objects:
  3379 ;;		On entry : 1F/0
  3380 ;;		On exit  : 1F/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3383 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3384 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3385 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3386 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3387 ;;Total ram usage:       20 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    1
  3390 ;; This function calls:
  3391 ;;		Nothing
  3392 ;; This function is called by:
  3393 ;;		_get_30v_current
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           
  3398                           ;psect for function ___fladd
  3399  0C70                     ___fladd:	
  3400                           
  3401                           ;incstack = 0
  3402                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  3403  0C70  083C               	movf	___fladd@b+3,w
  3404  0C71  00C9               	movwf	___fladd@signs
  3405  0C72  3080               	movlw	128
  3406  0C73  05C9               	andwf	___fladd@signs,f
  3407  0C74  353C               	lslf	___fladd@b+3,w
  3408  0C75  00CB               	movwf	___fladd@bexp
  3409  0C76  1BBB               	btfsc	___fladd@b+2,7
  3410  0C77  144B               	bsf	___fladd@bexp,0
  3411  0C78  084B               	movf	___fladd@bexp,w
  3412  0C79  1903               	btfsc	3,2
  3413  0C7A  2C83               	goto	l970
  3414  0C7B  0F4B               	incfsz	___fladd@bexp,w
  3415  0C7C  2C81               	goto	l971
  3416  0C7D  01B9               	clrf	___fladd@b
  3417  0C7E  01BA               	clrf	___fladd@b+1
  3418  0C7F  01BB               	clrf	___fladd@b+2
  3419  0C80  01BC               	clrf	___fladd@b+3
  3420  0C81                     l971:	
  3421  0C81  17BB               	bsf	___fladd@b+2,7
  3422  0C82  2C86               	goto	L30
  3423  0C83                     l970:	
  3424  0C83  01B9               	clrf	___fladd@b
  3425  0C84  01BA               	clrf	___fladd@b+1
  3426  0C85  01BB               	clrf	___fladd@b+2
  3427  0C86                     L30:	
  3428  0C86  01BC               	clrf	___fladd@b+3
  3429  0C87  0840               	movf	___fladd@a+3,w
  3430  0C88  00CA               	movwf	___fladd@aexp
  3431  0C89  3080               	movlw	128
  3432  0C8A  05CA               	andwf	___fladd@aexp,f
  3433  0C8B  084A               	movf	___fladd@aexp,w
  3434  0C8C  0649               	xorwf	___fladd@signs,w
  3435  0C8D  1D03               	btfss	3,2
  3436  0C8E  1749               	bsf	___fladd@signs,6
  3437  0C8F  3540               	lslf	___fladd@a+3,w
  3438  0C90  00CA               	movwf	___fladd@aexp
  3439  0C91  1BBF               	btfsc	___fladd@a+2,7
  3440  0C92  144A               	bsf	___fladd@aexp,0
  3441  0C93  084A               	movf	___fladd@aexp,w
  3442  0C94  1903               	btfsc	3,2
  3443  0C95  2C9E               	goto	l975
  3444  0C96  0F4A               	incfsz	___fladd@aexp,w
  3445  0C97  2C9C               	goto	l976
  3446  0C98  01BD               	clrf	___fladd@a
  3447  0C99  01BE               	clrf	___fladd@a+1
  3448  0C9A  01BF               	clrf	___fladd@a+2
  3449  0C9B  01C0               	clrf	___fladd@a+3
  3450  0C9C                     l976:	
  3451  0C9C  17BF               	bsf	___fladd@a+2,7
  3452  0C9D  2CA1               	goto	L31
  3453  0C9E                     l975:	
  3454  0C9E  01BD               	clrf	___fladd@a
  3455  0C9F  01BE               	clrf	___fladd@a+1
  3456  0CA0  01BF               	clrf	___fladd@a+2
  3457  0CA1                     L31:	
  3458  0CA1  01C0               	clrf	___fladd@a+3
  3459  0CA2  084B               	movf	___fladd@bexp,w
  3460  0CA3  024A               	subwf	___fladd@aexp,w
  3461  0CA4  1803               	skipnc
  3462  0CA5  2CC8               	goto	l3318
  3463  0CA6  1F49               	btfss	___fladd@signs,6
  3464  0CA7  2CAA               	goto	l3288
  3465  0CA8  3080               	movlw	128
  3466  0CA9  06C9               	xorwf	___fladd@signs,f
  3467  0CAA                     l3288:	
  3468  0CAA  084B               	movf	___fladd@bexp,w
  3469  0CAB  00CC               	movwf	___fladd@grs
  3470  0CAC  084A               	movf	___fladd@aexp,w
  3471  0CAD  00CB               	movwf	___fladd@bexp
  3472  0CAE  084C               	movf	___fladd@grs,w
  3473  0CAF  00CA               	movwf	___fladd@aexp
  3474  0CB0  0839               	movf	___fladd@b,w
  3475  0CB1  00CC               	movwf	___fladd@grs
  3476  0CB2  083D               	movf	___fladd@a,w
  3477  0CB3  00B9               	movwf	___fladd@b
  3478  0CB4  084C               	movf	___fladd@grs,w
  3479  0CB5  00BD               	movwf	___fladd@a
  3480  0CB6  083A               	movf	___fladd@b+1,w
  3481  0CB7  00CC               	movwf	___fladd@grs
  3482  0CB8  083E               	movf	___fladd@a+1,w
  3483  0CB9  00BA               	movwf	___fladd@b+1
  3484  0CBA  084C               	movf	___fladd@grs,w
  3485  0CBB  00BE               	movwf	___fladd@a+1
  3486  0CBC  083B               	movf	___fladd@b+2,w
  3487  0CBD  00CC               	movwf	___fladd@grs
  3488  0CBE  083F               	movf	___fladd@a+2,w
  3489  0CBF  00BB               	movwf	___fladd@b+2
  3490  0CC0  084C               	movf	___fladd@grs,w
  3491  0CC1  00BF               	movwf	___fladd@a+2
  3492  0CC2  083C               	movf	___fladd@b+3,w
  3493  0CC3  00CC               	movwf	___fladd@grs
  3494  0CC4  0840               	movf	___fladd@a+3,w
  3495  0CC5  00BC               	movwf	___fladd@b+3
  3496  0CC6  084C               	movf	___fladd@grs,w
  3497  0CC7  00C0               	movwf	___fladd@a+3
  3498  0CC8                     l3318:	
  3499  0CC8  01CC               	clrf	___fladd@grs
  3500  0CC9  084A               	movf	___fladd@aexp,w
  3501  0CCA  00C1               	movwf	??___fladd
  3502  0CCB  01C2               	clrf	??___fladd+1
  3503  0CCC  0842               	movf	??___fladd+1,w
  3504  0CCD  00C4               	movwf	??___fladd+3
  3505  0CCE  084B               	movf	___fladd@bexp,w
  3506  0CCF  0241               	subwf	??___fladd,w
  3507  0CD0  00C3               	movwf	??___fladd+2
  3508  0CD1  1C03               	skipc
  3509  0CD2  03C4               	decf	??___fladd+3,f
  3510  0CD3  0844               	movf	??___fladd+3,w
  3511  0CD4  3A80               	xorlw	128
  3512  0CD5  00C5               	movwf	??___fladd+4
  3513  0CD6  3080               	movlw	128
  3514  0CD7  0245               	subwf	??___fladd+4,w
  3515  0CD8  1D03               	skipz
  3516  0CD9  2CDC               	goto	u3155
  3517  0CDA  301A               	movlw	26
  3518  0CDB  0243               	subwf	??___fladd+2,w
  3519  0CDC                     u3155:	
  3520  0CDC  1C03               	skipc
  3521  0CDD  2CFE               	goto	l3332
  3522  0CDE  0020               	movlb	0	; select bank0
  3523  0CDF  083C               	movf	___fladd@b+3,w
  3524  0CE0  043B               	iorwf	___fladd@b+2,w
  3525  0CE1  043A               	iorwf	___fladd@b+1,w
  3526  0CE2  0439               	iorwf	___fladd@b,w
  3527  0CE3  1903               	btfsc	3,2
  3528  0CE4  2CE7               	goto	u3160
  3529  0CE5  3001               	movlw	1
  3530  0CE6  2CE8               	goto	u3170
  3531  0CE7                     u3160:	
  3532  0CE7  3000               	movlw	0
  3533  0CE8                     u3170:	
  3534  0CE8  00CC               	movwf	___fladd@grs
  3535  0CE9  01B9               	clrf	___fladd@b
  3536  0CEA  01BA               	clrf	___fladd@b+1
  3537  0CEB  01BB               	clrf	___fladd@b+2
  3538  0CEC  01BC               	clrf	___fladd@b+3
  3539  0CED  084A               	movf	___fladd@aexp,w
  3540  0CEE  00CB               	movwf	___fladd@bexp
  3541  0CEF  2D03               	goto	l981
  3542  0CF0                     l983:	
  3543  0CF0  1C4C               	btfss	___fladd@grs,0
  3544  0CF1  2CF6               	goto	l984
  3545  0CF2  364C               	lsrf	___fladd@grs,w
  3546  0CF3  3801               	iorlw	1
  3547  0CF4  00CC               	movwf	___fladd@grs
  3548  0CF5  2CF7               	goto	l985
  3549  0CF6                     l984:	
  3550  0CF6  36CC               	lsrf	___fladd@grs,f
  3551  0CF7                     l985:	
  3552  0CF7  1839               	btfsc	___fladd@b,0
  3553  0CF8  17CC               	bsf	___fladd@grs,7
  3554  0CF9  37BC               	asrf	___fladd@b+3,f
  3555  0CFA  0CBB               	rrf	___fladd@b+2,f
  3556  0CFB  0CBA               	rrf	___fladd@b+1,f
  3557  0CFC  0CB9               	rrf	___fladd@b,f
  3558  0CFD  0ACB               	incf	___fladd@bexp,f
  3559  0CFE                     l3332:	
  3560  0CFE  0020               	movlb	0	; select bank0
  3561  0CFF  084A               	movf	___fladd@aexp,w
  3562  0D00  024B               	subwf	___fladd@bexp,w
  3563  0D01  1C03               	skipc
  3564  0D02  2CF0               	goto	l983
  3565  0D03                     l981:	
  3566  0D03  1B49               	btfsc	___fladd@signs,6
  3567  0D04  2D27               	goto	l3350
  3568  0D05  084B               	movf	___fladd@bexp,w
  3569  0D06  1D03               	btfss	3,2
  3570  0D07  2D0D               	goto	l3338
  3571  0D08  01B9               	clrf	?___fladd
  3572  0D09  01BA               	clrf	?___fladd+1
  3573  0D0A  01BB               	clrf	?___fladd+2
  3574  0D0B  01BC               	clrf	?___fladd+3
  3575  0D0C  0008               	return
  3576  0D0D                     l3338:	
  3577  0D0D  083D               	movf	___fladd@a,w
  3578  0D0E  07B9               	addwf	___fladd@b,f
  3579  0D0F  083E               	movf	___fladd@a+1,w
  3580  0D10  3DBA               	addwfc	___fladd@b+1,f
  3581  0D11  083F               	movf	___fladd@a+2,w
  3582  0D12  3DBB               	addwfc	___fladd@b+2,f
  3583  0D13  0840               	movf	___fladd@a+3,w
  3584  0D14  3DBC               	addwfc	___fladd@b+3,f
  3585  0D15  1C3C               	btfss	___fladd@b+3,0
  3586  0D16  2D8F               	goto	l3380
  3587  0D17  1C4C               	btfss	___fladd@grs,0
  3588  0D18  2D1E               	goto	l992
  3589  0D19  36CC               	lsrf	___fladd@grs,f
  3590  0D1A  084C               	movf	___fladd@grs,w
  3591  0D1B  3801               	iorlw	1
  3592  0D1C  00CC               	movwf	___fladd@grs
  3593  0D1D  2D1F               	goto	l993
  3594  0D1E                     l992:	
  3595  0D1E  36CC               	lsrf	___fladd@grs,f
  3596  0D1F                     l993:	
  3597  0D1F  1839               	btfsc	___fladd@b,0
  3598  0D20  17CC               	bsf	___fladd@grs,7
  3599  0D21  37BC               	asrf	___fladd@b+3,f
  3600  0D22  0CBB               	rrf	___fladd@b+2,f
  3601  0D23  0CBA               	rrf	___fladd@b+1,f
  3602  0D24  0CB9               	rrf	___fladd@b,f
  3603  0D25  0ACB               	incf	___fladd@bexp,f
  3604  0D26  2D8F               	goto	l3380
  3605  0D27                     l3350:	
  3606  0D27  083C               	movf	___fladd@b+3,w
  3607  0D28  3A80               	xorlw	128
  3608  0D29  00C1               	movwf	??___fladd
  3609  0D2A  0840               	movf	___fladd@a+3,w
  3610  0D2B  3A80               	xorlw	128
  3611  0D2C  0241               	subwf	??___fladd,w
  3612  0D2D  1D03               	skipz
  3613  0D2E  2D39               	goto	u3263
  3614  0D2F  083F               	movf	___fladd@a+2,w
  3615  0D30  023B               	subwf	___fladd@b+2,w
  3616  0D31  1D03               	skipz
  3617  0D32  2D39               	goto	u3263
  3618  0D33  083E               	movf	___fladd@a+1,w
  3619  0D34  023A               	subwf	___fladd@b+1,w
  3620  0D35  1D03               	skipz
  3621  0D36  2D39               	goto	u3263
  3622  0D37  083D               	movf	___fladd@a,w
  3623  0D38  0239               	subwf	___fladd@b,w
  3624  0D39                     u3263:	
  3625  0D39  1803               	skipnc
  3626  0D3A  2D68               	goto	l3360
  3627  0D3B  30FF               	movlw	255
  3628  0D3C  00C1               	movwf	??___fladd
  3629  0D3D  00C2               	movwf	??___fladd+1
  3630  0D3E  00C3               	movwf	??___fladd+2
  3631  0D3F  00C4               	movwf	??___fladd+3
  3632  0D40  0839               	movf	___fladd@b,w
  3633  0D41  023D               	subwf	___fladd@a,w
  3634  0D42  00C5               	movwf	??___fladd+4
  3635  0D43  083A               	movf	___fladd@b+1,w
  3636  0D44  3B3E               	subwfb	___fladd@a+1,w
  3637  0D45  00C6               	movwf	??___fladd+5
  3638  0D46  083B               	movf	___fladd@b+2,w
  3639  0D47  3B3F               	subwfb	___fladd@a+2,w
  3640  0D48  00C7               	movwf	??___fladd+6
  3641  0D49  083C               	movf	___fladd@b+3,w
  3642  0D4A  3B40               	subwfb	___fladd@a+3,w
  3643  0D4B  00C8               	movwf	??___fladd+7
  3644  0D4C  0845               	movf	??___fladd+4,w
  3645  0D4D  07C1               	addwf	??___fladd,f
  3646  0D4E  0846               	movf	??___fladd+5,w
  3647  0D4F  3DC2               	addwfc	??___fladd+1,f
  3648  0D50  0847               	movf	??___fladd+6,w
  3649  0D51  3DC3               	addwfc	??___fladd+2,f
  3650  0D52  0848               	movf	??___fladd+7,w
  3651  0D53  3DC4               	addwfc	??___fladd+3,f
  3652  0D54  0844               	movf	??___fladd+3,w
  3653  0D55  00BC               	movwf	___fladd@b+3
  3654  0D56  0843               	movf	??___fladd+2,w
  3655  0D57  00BB               	movwf	___fladd@b+2
  3656  0D58  0842               	movf	??___fladd+1,w
  3657  0D59  00BA               	movwf	___fladd@b+1
  3658  0D5A  0841               	movf	??___fladd,w
  3659  0D5B  00B9               	movwf	___fladd@b
  3660  0D5C  3080               	movlw	128
  3661  0D5D  06C9               	xorwf	___fladd@signs,f
  3662  0D5E  09CC               	comf	___fladd@grs,f
  3663  0D5F  0FCC               	incfsz	___fladd@grs,f
  3664  0D60  2D70               	goto	l998
  3665  0D61  3001               	movlw	1
  3666  0D62  07B9               	addwf	___fladd@b,f
  3667  0D63  3000               	movlw	0
  3668  0D64  3DBA               	addwfc	___fladd@b+1,f
  3669  0D65  3DBB               	addwfc	___fladd@b+2,f
  3670  0D66  3DBC               	addwfc	___fladd@b+3,f
  3671  0D67  2D70               	goto	l998
  3672  0D68                     l3360:	
  3673  0D68  083D               	movf	___fladd@a,w
  3674  0D69  02B9               	subwf	___fladd@b,f
  3675  0D6A  083E               	movf	___fladd@a+1,w
  3676  0D6B  3BBA               	subwfb	___fladd@b+1,f
  3677  0D6C  083F               	movf	___fladd@a+2,w
  3678  0D6D  3BBB               	subwfb	___fladd@b+2,f
  3679  0D6E  0840               	movf	___fladd@a+3,w
  3680  0D6F  3BBC               	subwfb	___fladd@b+3,f
  3681  0D70                     l998:	
  3682  0D70  083C               	movf	___fladd@b+3,w
  3683  0D71  043B               	iorwf	___fladd@b+2,w
  3684  0D72  043A               	iorwf	___fladd@b+1,w
  3685  0D73  0439               	iorwf	___fladd@b,w
  3686  0D74  1D03               	skipz
  3687  0D75  2D8D               	goto	l3378
  3688  0D76  084C               	movf	___fladd@grs,w
  3689  0D77  1D03               	btfss	3,2
  3690  0D78  2D8D               	goto	l3378
  3691  0D79  01B9               	clrf	?___fladd
  3692  0D7A  01BA               	clrf	?___fladd+1
  3693  0D7B  01BB               	clrf	?___fladd+2
  3694  0D7C  01BC               	clrf	?___fladd+3
  3695  0D7D  0008               	return
  3696  0D7E                     l3366:	
  3697  0D7E  35B9               	lslf	___fladd@b,f
  3698  0D7F  0DBA               	rlf	___fladd@b+1,f
  3699  0D80  0DBB               	rlf	___fladd@b+2,f
  3700  0D81  0DBC               	rlf	___fladd@b+3,f
  3701  0D82  1BCC               	btfsc	___fladd@grs,7
  3702  0D83  1439               	bsf	___fladd@b,0
  3703  0D84  1C4C               	btfss	___fladd@grs,0
  3704  0D85  2D89               	goto	l1003
  3705  0D86  1403               	setc
  3706  0D87  0DCC               	rlf	___fladd@grs,f
  3707  0D88  2D8A               	goto	l3374
  3708  0D89                     l1003:	
  3709  0D89  35CC               	lslf	___fladd@grs,f
  3710  0D8A                     l3374:	
  3711  0D8A  084B               	movf	___fladd@bexp,w
  3712  0D8B  1D03               	btfss	3,2
  3713  0D8C  03CB               	decf	___fladd@bexp,f
  3714  0D8D                     l3378:	
  3715  0D8D  1FBB               	btfss	___fladd@b+2,7
  3716  0D8E  2D7E               	goto	l3366
  3717  0D8F                     l3380:	
  3718  0D8F  01CA               	clrf	___fladd@aexp
  3719  0D90  1FCC               	btfss	___fladd@grs,7
  3720  0D91  2D9A               	goto	l3390
  3721  0D92  084C               	movf	___fladd@grs,w
  3722  0D93  397F               	andlw	127
  3723  0D94  1903               	btfsc	3,2
  3724  0D95  1839               	btfsc	___fladd@b,0
  3725  0D96  2D98               	goto	l3386
  3726  0D97  2D9A               	goto	l3390
  3727  0D98                     l3386:	
  3728  0D98  01CA               	clrf	___fladd@aexp
  3729  0D99  0ACA               	incf	___fladd@aexp,f
  3730  0D9A                     l3390:	
  3731  0D9A  084A               	movf	___fladd@aexp,w
  3732  0D9B  1903               	btfsc	3,2
  3733  0D9C  2DAB               	goto	l3402
  3734  0D9D  3001               	movlw	1
  3735  0D9E  07B9               	addwf	___fladd@b,f
  3736  0D9F  3000               	movlw	0
  3737  0DA0  3DBA               	addwfc	___fladd@b+1,f
  3738  0DA1  3DBB               	addwfc	___fladd@b+2,f
  3739  0DA2  3DBC               	addwfc	___fladd@b+3,f
  3740  0DA3  1C3C               	btfss	___fladd@b+3,0
  3741  0DA4  2DAB               	goto	l3402
  3742  0DA5  37BC               	asrf	___fladd@b+3,f
  3743  0DA6  0CBB               	rrf	___fladd@b+2,f
  3744  0DA7  0CBA               	rrf	___fladd@b+1,f
  3745  0DA8  0CB9               	rrf	___fladd@b,f
  3746  0DA9  0F4B               	incfsz	___fladd@bexp,w
  3747  0DAA  0ACB               	incf	___fladd@bexp,f
  3748  0DAB                     l3402:	
  3749  0DAB  0A4B               	incf	___fladd@bexp,w
  3750  0DAC  1D03               	btfss	3,2
  3751  0DAD  084B               	movf	___fladd@bexp,w
  3752  0DAE  1D03               	btfss	3,2
  3753  0DAF  2DB7               	goto	l3410
  3754  0DB0  01B9               	clrf	___fladd@b
  3755  0DB1  01BA               	clrf	___fladd@b+1
  3756  0DB2  01BB               	clrf	___fladd@b+2
  3757  0DB3  01BC               	clrf	___fladd@b+3
  3758  0DB4  084B               	movf	___fladd@bexp,w
  3759  0DB5  1903               	btfsc	3,2
  3760  0DB6  01C9               	clrf	___fladd@signs
  3761  0DB7                     l3410:	
  3762  0DB7  1C4B               	btfss	___fladd@bexp,0
  3763  0DB8  2DBB               	goto	l1018
  3764  0DB9  17BB               	bsf	___fladd@b+2,7
  3765  0DBA  2DBC               	goto	l3414
  3766  0DBB                     l1018:	
  3767  0DBB  13BB               	bcf	___fladd@b+2,7
  3768  0DBC                     l3414:	
  3769  0DBC  364B               	lsrf	___fladd@bexp,w
  3770  0DBD  00BC               	movwf	___fladd@b+3
  3771  0DBE  1BC9               	btfsc	___fladd@signs,7
  3772  0DBF  17BC               	bsf	___fladd@b+3,7
  3773  0DC0  0008               	return
  3774  0DC1                     __end_of___fladd:	
  3775  0DC1                     __ptext24:	
  3776 ;; *************** function ___flmul *****************
  3777 ;; Defined at:
  3778 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  b               4    0[BANK0 ] long 
  3781 ;;  a               4    4[BANK0 ] long 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  prod            4   19[BANK0 ] struct .
  3784 ;;  grs             4   14[BANK0 ] unsigned long 
  3785 ;;  temp            2   23[BANK0 ] struct .
  3786 ;;  bexp            1   18[BANK0 ] unsigned char 
  3787 ;;  aexp            1   13[BANK0 ] unsigned char 
  3788 ;;  sign            1   12[BANK0 ] unsigned char 
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  4    0[BANK0 ] unsigned char 
  3791 ;; Registers used:
  3792 ;;		wreg, status,2, status,0, pclath, cstack
  3793 ;; Tracked objects:
  3794 ;;		On entry : 1F/0
  3795 ;;		On exit  : 1F/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3798 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3799 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3800 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3801 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3802 ;;Total ram usage:       25 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; Hardware stack levels required when called:    2
  3805 ;; This function calls:
  3806 ;;		__Umul8_16
  3807 ;; This function is called by:
  3808 ;;		_get_30v_current
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           
  3813                           ;psect for function ___flmul
  3814  0DC1                     ___flmul:	
  3815                           
  3816                           ;incstack = 0
  3817                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  3818  0DC1  0823               	movf	___flmul@b+3,w
  3819  0DC2  00AC               	movwf	___flmul@sign
  3820  0DC3  3080               	movlw	128
  3821  0DC4  05AC               	andwf	___flmul@sign,f
  3822  0DC5  3523               	lslf	___flmul@b+3,w
  3823  0DC6  00B2               	movwf	___flmul@bexp
  3824  0DC7  1BA2               	btfsc	___flmul@b+2,7
  3825  0DC8  1432               	bsf	___flmul@bexp,0
  3826  0DC9  0832               	movf	___flmul@bexp,w
  3827  0DCA  1903               	btfsc	3,2
  3828  0DCB  2DD4               	goto	l1063
  3829  0DCC  0F32               	incfsz	___flmul@bexp,w
  3830  0DCD  2DD2               	goto	l1064
  3831  0DCE  01A0               	clrf	___flmul@b
  3832  0DCF  01A1               	clrf	___flmul@b+1
  3833  0DD0  01A2               	clrf	___flmul@b+2
  3834  0DD1  01A3               	clrf	___flmul@b+3
  3835  0DD2                     l1064:	
  3836  0DD2  17A2               	bsf	___flmul@b+2,7
  3837  0DD3  2DD8               	goto	l3436
  3838  0DD4                     l1063:	
  3839  0DD4  01A0               	clrf	___flmul@b
  3840  0DD5  01A1               	clrf	___flmul@b+1
  3841  0DD6  01A2               	clrf	___flmul@b+2
  3842  0DD7  01A3               	clrf	___flmul@b+3
  3843  0DD8                     l3436:	
  3844  0DD8  0827               	movf	___flmul@a+3,w
  3845  0DD9  3980               	andlw	128
  3846  0DDA  06AC               	xorwf	___flmul@sign,f
  3847  0DDB  3527               	lslf	___flmul@a+3,w
  3848  0DDC  00AD               	movwf	___flmul@aexp
  3849  0DDD  1BA6               	btfsc	___flmul@a+2,7
  3850  0DDE  142D               	bsf	___flmul@aexp,0
  3851  0DDF  082D               	movf	___flmul@aexp,w
  3852  0DE0  1903               	btfsc	3,2
  3853  0DE1  2DEA               	goto	l1067
  3854  0DE2  0F2D               	incfsz	___flmul@aexp,w
  3855  0DE3  2DE8               	goto	l1068
  3856  0DE4  01A4               	clrf	___flmul@a
  3857  0DE5  01A5               	clrf	___flmul@a+1
  3858  0DE6  01A6               	clrf	___flmul@a+2
  3859  0DE7  01A7               	clrf	___flmul@a+3
  3860  0DE8                     l1068:	
  3861  0DE8  17A6               	bsf	___flmul@a+2,7
  3862  0DE9  2DEE               	goto	l3448
  3863  0DEA                     l1067:	
  3864  0DEA  01A4               	clrf	___flmul@a
  3865  0DEB  01A5               	clrf	___flmul@a+1
  3866  0DEC  01A6               	clrf	___flmul@a+2
  3867  0DED  01A7               	clrf	___flmul@a+3
  3868  0DEE                     l3448:	
  3869  0DEE  082D               	movf	___flmul@aexp,w
  3870  0DEF  1D03               	btfss	3,2
  3871  0DF0  0832               	movf	___flmul@bexp,w
  3872  0DF1  1D03               	btfss	3,2
  3873  0DF2  2DF8               	goto	l3452
  3874  0DF3  01A0               	clrf	?___flmul
  3875  0DF4  01A1               	clrf	?___flmul+1
  3876  0DF5  01A2               	clrf	?___flmul+2
  3877  0DF6  01A3               	clrf	?___flmul+3
  3878  0DF7  0008               	return
  3879  0DF8                     l3452:	
  3880  0DF8  0820               	movf	___flmul@b,w
  3881  0DF9  00F0               	movwf	__Umul8_16@multiplicand
  3882  0DFA  0826               	movf	___flmul@a+2,w
  3883  0DFB  2743  318C         	fcall	__Umul8_16
  3884  0DFD  0871               	movf	?__Umul8_16+1,w
  3885  0DFE  00B8               	movwf	___flmul@temp+1
  3886  0DFF  0870               	movf	?__Umul8_16,w
  3887  0E00  00B7               	movwf	___flmul@temp
  3888  0E01  00AE               	movwf	___flmul@grs
  3889  0E02  01AF               	clrf	___flmul@grs+1
  3890  0E03  01B0               	clrf	___flmul@grs+2
  3891  0E04  01B1               	clrf	___flmul@grs+3
  3892  0E05  0838               	movf	___flmul@temp+1,w
  3893  0E06  00B3               	movwf	___flmul@prod
  3894  0E07  01B4               	clrf	___flmul@prod+1
  3895  0E08  01B5               	clrf	___flmul@prod+2
  3896  0E09  01B6               	clrf	___flmul@prod+3
  3897  0E0A  0821               	movf	___flmul@b+1,w
  3898  0E0B  00F0               	movwf	__Umul8_16@multiplicand
  3899  0E0C  0825               	movf	___flmul@a+1,w
  3900  0E0D  2743  318C         	fcall	__Umul8_16
  3901  0E0F  0871               	movf	?__Umul8_16+1,w
  3902  0E10  00B8               	movwf	___flmul@temp+1
  3903  0E11  0870               	movf	?__Umul8_16,w
  3904  0E12  00B7               	movwf	___flmul@temp
  3905  0E13  07AE               	addwf	___flmul@grs,f
  3906  0E14  3001               	movlw	1
  3907  0E15  1803               	skipnc
  3908  0E16  07AF               	addwf	___flmul@grs+1,f
  3909  0E17  1803               	skipnc
  3910  0E18  07B0               	addwf	___flmul@grs+2,f
  3911  0E19  1803               	skipnc
  3912  0E1A  07B1               	addwf	___flmul@grs+3,f
  3913  0E1B  0838               	movf	___flmul@temp+1,w
  3914  0E1C  07B3               	addwf	___flmul@prod,f
  3915  0E1D  3001               	movlw	1
  3916  0E1E  1803               	skipnc
  3917  0E1F  07B4               	addwf	___flmul@prod+1,f
  3918  0E20  1803               	skipnc
  3919  0E21  07B5               	addwf	___flmul@prod+2,f
  3920  0E22  1803               	skipnc
  3921  0E23  07B6               	addwf	___flmul@prod+3,f
  3922  0E24  0822               	movf	___flmul@b+2,w
  3923  0E25  00F0               	movwf	__Umul8_16@multiplicand
  3924  0E26  0824               	movf	___flmul@a,w
  3925  0E27  2743  318C         	fcall	__Umul8_16
  3926  0E29  0871               	movf	?__Umul8_16+1,w
  3927  0E2A  00B8               	movwf	___flmul@temp+1
  3928  0E2B  0870               	movf	?__Umul8_16,w
  3929  0E2C  00B7               	movwf	___flmul@temp
  3930  0E2D  07AE               	addwf	___flmul@grs,f
  3931  0E2E  3001               	movlw	1
  3932  0E2F  1803               	skipnc
  3933  0E30  07AF               	addwf	___flmul@grs+1,f
  3934  0E31  1803               	skipnc
  3935  0E32  07B0               	addwf	___flmul@grs+2,f
  3936  0E33  1803               	skipnc
  3937  0E34  07B1               	addwf	___flmul@grs+3,f
  3938  0E35  0838               	movf	___flmul@temp+1,w
  3939  0E36  07B3               	addwf	___flmul@prod,f
  3940  0E37  3001               	movlw	1
  3941  0E38  1803               	skipnc
  3942  0E39  07B4               	addwf	___flmul@prod+1,f
  3943  0E3A  1803               	skipnc
  3944  0E3B  07B5               	addwf	___flmul@prod+2,f
  3945  0E3C  1803               	skipnc
  3946  0E3D  07B6               	addwf	___flmul@prod+3,f
  3947  0E3E  0830               	movf	___flmul@grs+2,w
  3948  0E3F  00B1               	movwf	___flmul@grs+3
  3949  0E40  082F               	movf	___flmul@grs+1,w
  3950  0E41  00B0               	movwf	___flmul@grs+2
  3951  0E42  082E               	movf	___flmul@grs,w
  3952  0E43  00AF               	movwf	___flmul@grs+1
  3953  0E44  01AE               	clrf	___flmul@grs
  3954  0E45  0821               	movf	___flmul@b+1,w
  3955  0E46  00F0               	movwf	__Umul8_16@multiplicand
  3956  0E47  0824               	movf	___flmul@a,w
  3957  0E48  2743  318C         	fcall	__Umul8_16
  3958  0E4A  0871               	movf	?__Umul8_16+1,w
  3959  0E4B  00B8               	movwf	___flmul@temp+1
  3960  0E4C  0870               	movf	?__Umul8_16,w
  3961  0E4D  00B7               	movwf	___flmul@temp
  3962  0E4E  07AE               	addwf	___flmul@grs,f
  3963  0E4F  0838               	movf	___flmul@temp+1,w
  3964  0E50  3DAF               	addwfc	___flmul@grs+1,f
  3965  0E51  3000               	movlw	0
  3966  0E52  3DB0               	addwfc	___flmul@grs+2,f
  3967  0E53  3DB1               	addwfc	___flmul@grs+3,f
  3968  0E54  0820               	movf	___flmul@b,w
  3969  0E55  00F0               	movwf	__Umul8_16@multiplicand
  3970  0E56  0825               	movf	___flmul@a+1,w
  3971  0E57  2743  318C         	fcall	__Umul8_16
  3972  0E59  0871               	movf	?__Umul8_16+1,w
  3973  0E5A  00B8               	movwf	___flmul@temp+1
  3974  0E5B  0870               	movf	?__Umul8_16,w
  3975  0E5C  00B7               	movwf	___flmul@temp
  3976  0E5D  07AE               	addwf	___flmul@grs,f
  3977  0E5E  0838               	movf	___flmul@temp+1,w
  3978  0E5F  3DAF               	addwfc	___flmul@grs+1,f
  3979  0E60  3000               	movlw	0
  3980  0E61  3DB0               	addwfc	___flmul@grs+2,f
  3981  0E62  3DB1               	addwfc	___flmul@grs+3,f
  3982  0E63  0830               	movf	___flmul@grs+2,w
  3983  0E64  00B1               	movwf	___flmul@grs+3
  3984  0E65  082F               	movf	___flmul@grs+1,w
  3985  0E66  00B0               	movwf	___flmul@grs+2
  3986  0E67  082E               	movf	___flmul@grs,w
  3987  0E68  00AF               	movwf	___flmul@grs+1
  3988  0E69  01AE               	clrf	___flmul@grs
  3989  0E6A  0820               	movf	___flmul@b,w
  3990  0E6B  00F0               	movwf	__Umul8_16@multiplicand
  3991  0E6C  0824               	movf	___flmul@a,w
  3992  0E6D  2743  318C         	fcall	__Umul8_16
  3993  0E6F  0871               	movf	?__Umul8_16+1,w
  3994  0E70  00B8               	movwf	___flmul@temp+1
  3995  0E71  0870               	movf	?__Umul8_16,w
  3996  0E72  00B7               	movwf	___flmul@temp
  3997  0E73  07AE               	addwf	___flmul@grs,f
  3998  0E74  0838               	movf	___flmul@temp+1,w
  3999  0E75  3DAF               	addwfc	___flmul@grs+1,f
  4000  0E76  3000               	movlw	0
  4001  0E77  3DB0               	addwfc	___flmul@grs+2,f
  4002  0E78  3DB1               	addwfc	___flmul@grs+3,f
  4003  0E79  0821               	movf	___flmul@b+1,w
  4004  0E7A  00F0               	movwf	__Umul8_16@multiplicand
  4005  0E7B  0826               	movf	___flmul@a+2,w
  4006  0E7C  2743  318C         	fcall	__Umul8_16
  4007  0E7E  0871               	movf	?__Umul8_16+1,w
  4008  0E7F  00B8               	movwf	___flmul@temp+1
  4009  0E80  0870               	movf	?__Umul8_16,w
  4010  0E81  00B7               	movwf	___flmul@temp
  4011  0E82  07B3               	addwf	___flmul@prod,f
  4012  0E83  0838               	movf	___flmul@temp+1,w
  4013  0E84  3DB4               	addwfc	___flmul@prod+1,f
  4014  0E85  3000               	movlw	0
  4015  0E86  3DB5               	addwfc	___flmul@prod+2,f
  4016  0E87  3DB6               	addwfc	___flmul@prod+3,f
  4017  0E88  0822               	movf	___flmul@b+2,w
  4018  0E89  00F0               	movwf	__Umul8_16@multiplicand
  4019  0E8A  0825               	movf	___flmul@a+1,w
  4020  0E8B  2743  318C         	fcall	__Umul8_16
  4021  0E8D  0871               	movf	?__Umul8_16+1,w
  4022  0E8E  00B8               	movwf	___flmul@temp+1
  4023  0E8F  0870               	movf	?__Umul8_16,w
  4024  0E90  00B7               	movwf	___flmul@temp
  4025  0E91  07B3               	addwf	___flmul@prod,f
  4026  0E92  0838               	movf	___flmul@temp+1,w
  4027  0E93  3DB4               	addwfc	___flmul@prod+1,f
  4028  0E94  3000               	movlw	0
  4029  0E95  3DB5               	addwfc	___flmul@prod+2,f
  4030  0E96  3DB6               	addwfc	___flmul@prod+3,f
  4031  0E97  0822               	movf	___flmul@b+2,w
  4032  0E98  00F0               	movwf	__Umul8_16@multiplicand
  4033  0E99  0826               	movf	___flmul@a+2,w
  4034  0E9A  2743  318C         	fcall	__Umul8_16
  4035  0E9C  0871               	movf	?__Umul8_16+1,w
  4036  0E9D  00B8               	movwf	___flmul@temp+1
  4037  0E9E  0870               	movf	?__Umul8_16,w
  4038  0E9F  00B7               	movwf	___flmul@temp
  4039  0EA0  00A8               	movwf	??___flmul
  4040  0EA1  0838               	movf	___flmul@temp+1,w
  4041  0EA2  00A9               	movwf	??___flmul+1
  4042  0EA3  01AA               	clrf	??___flmul+2
  4043  0EA4  01AB               	clrf	??___flmul+3
  4044  0EA5  082A               	movf	??___flmul+2,w
  4045  0EA6  00AB               	movwf	??___flmul+3
  4046  0EA7  0829               	movf	??___flmul+1,w
  4047  0EA8  00AA               	movwf	??___flmul+2
  4048  0EA9  0828               	movf	??___flmul,w
  4049  0EAA  00A9               	movwf	??___flmul+1
  4050  0EAB  01A8               	clrf	??___flmul
  4051  0EAC  0828               	movf	??___flmul,w
  4052  0EAD  07B3               	addwf	___flmul@prod,f
  4053  0EAE  0829               	movf	??___flmul+1,w
  4054  0EAF  3DB4               	addwfc	___flmul@prod+1,f
  4055  0EB0  082A               	movf	??___flmul+2,w
  4056  0EB1  3DB5               	addwfc	___flmul@prod+2,f
  4057  0EB2  082B               	movf	??___flmul+3,w
  4058  0EB3  3DB6               	addwfc	___flmul@prod+3,f
  4059  0EB4  0831               	movf	___flmul@grs+3,w
  4060  0EB5  07B3               	addwf	___flmul@prod,f
  4061  0EB6  3001               	movlw	1
  4062  0EB7  1803               	skipnc
  4063  0EB8  07B4               	addwf	___flmul@prod+1,f
  4064  0EB9  1803               	skipnc
  4065  0EBA  07B5               	addwf	___flmul@prod+2,f
  4066  0EBB  1803               	skipnc
  4067  0EBC  07B6               	addwf	___flmul@prod+3,f
  4068  0EBD  0830               	movf	___flmul@grs+2,w
  4069  0EBE  00B1               	movwf	___flmul@grs+3
  4070  0EBF  082F               	movf	___flmul@grs+1,w
  4071  0EC0  00B0               	movwf	___flmul@grs+2
  4072  0EC1  082E               	movf	___flmul@grs,w
  4073  0EC2  00AF               	movwf	___flmul@grs+1
  4074  0EC3  01AE               	clrf	___flmul@grs
  4075  0EC4  0832               	movf	___flmul@bexp,w
  4076  0EC5  00B7               	movwf	___flmul@temp
  4077  0EC6  01B8               	clrf	___flmul@temp+1
  4078  0EC7  082D               	movf	___flmul@aexp,w
  4079  0EC8  07B7               	addwf	___flmul@temp,f
  4080  0EC9  1803               	skipnc
  4081  0ECA  0AB8               	incf	___flmul@temp+1,f
  4082  0ECB  3082               	movlw	-126
  4083  0ECC                     L29:	
  4084  0ECC  07B7               	addwf	___flmul@temp,f
  4085  0ECD  1C03               	skipc
  4086  0ECE  03B8               	decf	___flmul@temp+1,f
  4087  0ECF  1BB5               	btfsc	___flmul@prod+2,7
  4088  0ED0  2EDD               	goto	l3500
  4089  0ED1  35B3               	lslf	___flmul@prod,f
  4090  0ED2  0DB4               	rlf	___flmul@prod+1,f
  4091  0ED3  0DB5               	rlf	___flmul@prod+2,f
  4092  0ED4  0DB6               	rlf	___flmul@prod+3,f
  4093  0ED5  1BB1               	btfsc	___flmul@grs+3,7
  4094  0ED6  1433               	bsf	___flmul@prod,0
  4095  0ED7  30FF               	movlw	-1
  4096  0ED8  35AE               	lslf	___flmul@grs,f
  4097  0ED9  0DAF               	rlf	___flmul@grs+1,f
  4098  0EDA  0DB0               	rlf	___flmul@grs+2,f
  4099  0EDB  0DB1               	rlf	___flmul@grs+3,f
  4100  0EDC  2ECC               	goto	L29
  4101  0EDD                     l3500:	
  4102  0EDD  01AD               	clrf	___flmul@aexp
  4103  0EDE  1FB1               	btfss	___flmul@grs+3,7
  4104  0EDF  2EF2               	goto	l3510
  4105  0EE0  082E               	movf	___flmul@grs,w
  4106  0EE1  00A8               	movwf	??___flmul
  4107  0EE2  082F               	movf	___flmul@grs+1,w
  4108  0EE3  00A9               	movwf	??___flmul+1
  4109  0EE4  0830               	movf	___flmul@grs+2,w
  4110  0EE5  00AA               	movwf	??___flmul+2
  4111  0EE6  307F               	movlw	127
  4112  0EE7  0531               	andwf	___flmul@grs+3,w
  4113  0EE8  00AB               	movwf	??___flmul+3
  4114  0EE9  042A               	iorwf	??___flmul+2,w
  4115  0EEA  0429               	iorwf	??___flmul+1,w
  4116  0EEB  0428               	iorwf	??___flmul,w
  4117  0EEC  1903               	skipnz
  4118  0EED  1833               	btfsc	___flmul@prod,0
  4119  0EEE  2EF0               	goto	l3506
  4120  0EEF  2EF2               	goto	l3510
  4121  0EF0                     l3506:	
  4122  0EF0  01AD               	clrf	___flmul@aexp
  4123  0EF1  0AAD               	incf	___flmul@aexp,f
  4124  0EF2                     l3510:	
  4125  0EF2  082D               	movf	___flmul@aexp,w
  4126  0EF3  1903               	btfsc	3,2
  4127  0EF4  2F04               	goto	l3520
  4128  0EF5  3001               	movlw	1
  4129  0EF6  07B3               	addwf	___flmul@prod,f
  4130  0EF7  3000               	movlw	0
  4131  0EF8  3DB4               	addwfc	___flmul@prod+1,f
  4132  0EF9  3DB5               	addwfc	___flmul@prod+2,f
  4133  0EFA  3DB6               	addwfc	___flmul@prod+3,f
  4134  0EFB  1C36               	btfss	___flmul@prod+3,0
  4135  0EFC  2F04               	goto	l3520
  4136  0EFD  37B6               	asrf	___flmul@prod+3,f
  4137  0EFE  0CB5               	rrf	___flmul@prod+2,f
  4138  0EFF  0CB4               	rrf	___flmul@prod+1,f
  4139  0F00  0CB3               	rrf	___flmul@prod,f
  4140  0F01  0AB7               	incf	___flmul@temp,f
  4141  0F02  1903               	skipnz
  4142  0F03  0AB8               	incf	___flmul@temp+1,f
  4143  0F04                     l3520:	
  4144  0F04  0838               	movf	___flmul@temp+1,w
  4145  0F05  3A80               	xorlw	128
  4146  0F06  00A8               	movwf	??___flmul
  4147  0F07  3080               	movlw	128
  4148  0F08  0228               	subwf	??___flmul,w
  4149  0F09  1D03               	skipz
  4150  0F0A  2F0D               	goto	u3605
  4151  0F0B  30FF               	movlw	255
  4152  0F0C  0237               	subwf	___flmul@temp,w
  4153  0F0D                     u3605:	
  4154  0F0D  1C03               	skipc
  4155  0F0E  2F17               	goto	l3524
  4156  0F0F  307F               	movlw	127
  4157  0F10  0020               	movlb	0	; select bank0
  4158  0F11  00B6               	movwf	___flmul@prod+3
  4159  0F12  3080               	movlw	128
  4160  0F13  00B5               	movwf	___flmul@prod+2
  4161  0F14  01B4               	clrf	___flmul@prod+1
  4162  0F15  01B3               	clrf	___flmul@prod
  4163  0F16  2F38               	goto	l1085
  4164  0F17                     l3524:	
  4165  0F17  0020               	movlb	0	; select bank0
  4166  0F18  0838               	movf	___flmul@temp+1,w
  4167  0F19  3A80               	xorlw	128
  4168  0F1A  00A8               	movwf	??___flmul
  4169  0F1B  3080               	movlw	128
  4170  0F1C  0228               	subwf	??___flmul,w
  4171  0F1D  1D03               	skipz
  4172  0F1E  2F21               	goto	u3615
  4173  0F1F  3001               	movlw	1
  4174  0F20  0237               	subwf	___flmul@temp,w
  4175  0F21                     u3615:	
  4176  0F21  1803               	skipnc
  4177  0F22  2F2A               	goto	l3530
  4178  0F23  0020               	movlb	0	; select bank0
  4179  0F24  01B3               	clrf	___flmul@prod
  4180  0F25  01B4               	clrf	___flmul@prod+1
  4181  0F26  01B5               	clrf	___flmul@prod+2
  4182  0F27  01B6               	clrf	___flmul@prod+3
  4183  0F28  01AC               	clrf	___flmul@sign
  4184  0F29  2F38               	goto	l1085
  4185  0F2A                     l3530:	
  4186  0F2A  0020               	movlb	0	; select bank0
  4187  0F2B  0837               	movf	___flmul@temp,w
  4188  0F2C  00B2               	movwf	___flmul@bexp
  4189  0F2D  30FF               	movlw	255
  4190  0F2E  05B3               	andwf	___flmul@prod,f
  4191  0F2F  05B4               	andwf	___flmul@prod+1,f
  4192  0F30  307F               	movlw	127
  4193  0F31  05B5               	andwf	___flmul@prod+2,f
  4194  0F32  3000               	movlw	0
  4195  0F33  01B6               	clrf	___flmul@prod+3
  4196  0F34  1832               	btfsc	___flmul@bexp,0
  4197  0F35  17B5               	bsf	___flmul@prod+2,7
  4198  0F36  3632               	lsrf	___flmul@bexp,w
  4199  0F37  00B6               	movwf	___flmul@prod+3
  4200  0F38                     l1085:	
  4201  0F38  082C               	movf	___flmul@sign,w
  4202  0F39  04B6               	iorwf	___flmul@prod+3,f
  4203  0F3A  0836               	movf	___flmul@prod+3,w
  4204  0F3B  00A3               	movwf	?___flmul+3
  4205  0F3C  0835               	movf	___flmul@prod+2,w
  4206  0F3D  00A2               	movwf	?___flmul+2
  4207  0F3E  0834               	movf	___flmul@prod+1,w
  4208  0F3F  00A1               	movwf	?___flmul+1
  4209  0F40  0833               	movf	___flmul@prod,w
  4210  0F41  00A0               	movwf	?___flmul
  4211  0F42  0008               	return
  4212  0F43                     __end_of___flmul:	
  4213  0F43                     __ptext25:	
  4214 ;; *************** function __Umul8_16 *****************
  4215 ;; Defined at:
  4216 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8_16.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  multiplier      1    wreg     unsigned char 
  4219 ;;  multiplicand    1    0[COMMON] unsigned char 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  multiplier      1    5[COMMON] unsigned char 
  4222 ;;  word_mpld       2    6[COMMON] unsigned int 
  4223 ;;  product         2    3[COMMON] unsigned int 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  2    0[COMMON] unsigned int 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0
  4228 ;; Tracked objects:
  4229 ;;		On entry : 1F/0
  4230 ;;		On exit  : 1F/0
  4231 ;;		Unchanged: 1F/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4233 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4234 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4236 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4237 ;;Total ram usage:        8 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    1
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		___flmul
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           
  4248                           ;psect for function __Umul8_16
  4249  0F43                     __Umul8_16:	
  4250                           
  4251                           ;incstack = 0
  4252                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4253                           ;__Umul8_16@multiplier stored from wreg
  4254  0F43  00F5               	movwf	__Umul8_16@multiplier
  4255  0F44  01F3               	clrf	__Umul8_16@product
  4256  0F45  01F4               	clrf	__Umul8_16@product+1
  4257  0F46  0870               	movf	__Umul8_16@multiplicand,w
  4258  0F47  00F6               	movwf	__Umul8_16@word_mpld
  4259  0F48  01F7               	clrf	__Umul8_16@word_mpld+1
  4260  0F49  1C75               	btfss	__Umul8_16@multiplier,0
  4261  0F4A  2F4F               	goto	l3036
  4262  0F4B  0876               	movf	__Umul8_16@word_mpld,w
  4263  0F4C  07F3               	addwf	__Umul8_16@product,f
  4264  0F4D  0877               	movf	__Umul8_16@word_mpld+1,w
  4265  0F4E  3DF4               	addwfc	__Umul8_16@product+1,f
  4266  0F4F                     l3036:	
  4267  0F4F  35F6               	lslf	__Umul8_16@word_mpld,f
  4268  0F50  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4269  0F51  1CF5               	btfss	__Umul8_16@multiplier,1
  4270  0F52  2F57               	goto	l3042
  4271  0F53  0876               	movf	__Umul8_16@word_mpld,w
  4272  0F54  07F3               	addwf	__Umul8_16@product,f
  4273  0F55  0877               	movf	__Umul8_16@word_mpld+1,w
  4274  0F56  3DF4               	addwfc	__Umul8_16@product+1,f
  4275  0F57                     l3042:	
  4276  0F57  35F6               	lslf	__Umul8_16@word_mpld,f
  4277  0F58  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4278  0F59  1D75               	btfss	__Umul8_16@multiplier,2
  4279  0F5A  2F5F               	goto	l3048
  4280  0F5B  0876               	movf	__Umul8_16@word_mpld,w
  4281  0F5C  07F3               	addwf	__Umul8_16@product,f
  4282  0F5D  0877               	movf	__Umul8_16@word_mpld+1,w
  4283  0F5E  3DF4               	addwfc	__Umul8_16@product+1,f
  4284  0F5F                     l3048:	
  4285  0F5F  35F6               	lslf	__Umul8_16@word_mpld,f
  4286  0F60  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4287  0F61  1DF5               	btfss	__Umul8_16@multiplier,3
  4288  0F62  2F67               	goto	l3054
  4289  0F63  0876               	movf	__Umul8_16@word_mpld,w
  4290  0F64  07F3               	addwf	__Umul8_16@product,f
  4291  0F65  0877               	movf	__Umul8_16@word_mpld+1,w
  4292  0F66  3DF4               	addwfc	__Umul8_16@product+1,f
  4293  0F67                     l3054:	
  4294  0F67  35F6               	lslf	__Umul8_16@word_mpld,f
  4295  0F68  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4296  0F69  1E75               	btfss	__Umul8_16@multiplier,4
  4297  0F6A  2F6F               	goto	l3060
  4298  0F6B  0876               	movf	__Umul8_16@word_mpld,w
  4299  0F6C  07F3               	addwf	__Umul8_16@product,f
  4300  0F6D  0877               	movf	__Umul8_16@word_mpld+1,w
  4301  0F6E  3DF4               	addwfc	__Umul8_16@product+1,f
  4302  0F6F                     l3060:	
  4303  0F6F  35F6               	lslf	__Umul8_16@word_mpld,f
  4304  0F70  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4305  0F71  1EF5               	btfss	__Umul8_16@multiplier,5
  4306  0F72  2F77               	goto	l3066
  4307  0F73  0876               	movf	__Umul8_16@word_mpld,w
  4308  0F74  07F3               	addwf	__Umul8_16@product,f
  4309  0F75  0877               	movf	__Umul8_16@word_mpld+1,w
  4310  0F76  3DF4               	addwfc	__Umul8_16@product+1,f
  4311  0F77                     l3066:	
  4312  0F77  35F6               	lslf	__Umul8_16@word_mpld,f
  4313  0F78  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4314  0F79  1F75               	btfss	__Umul8_16@multiplier,6
  4315  0F7A  2F7F               	goto	l3072
  4316  0F7B  0876               	movf	__Umul8_16@word_mpld,w
  4317  0F7C  07F3               	addwf	__Umul8_16@product,f
  4318  0F7D  0877               	movf	__Umul8_16@word_mpld+1,w
  4319  0F7E  3DF4               	addwfc	__Umul8_16@product+1,f
  4320  0F7F                     l3072:	
  4321  0F7F  35F6               	lslf	__Umul8_16@word_mpld,f
  4322  0F80  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4323  0F81  1FF5               	btfss	__Umul8_16@multiplier,7
  4324  0F82  2F87               	goto	l1117
  4325  0F83  0876               	movf	__Umul8_16@word_mpld,w
  4326  0F84  07F3               	addwf	__Umul8_16@product,f
  4327  0F85  0877               	movf	__Umul8_16@word_mpld+1,w
  4328  0F86  3DF4               	addwfc	__Umul8_16@product+1,f
  4329  0F87                     l1117:	
  4330  0F87  0874               	movf	__Umul8_16@product+1,w
  4331  0F88  00F1               	movwf	?__Umul8_16+1
  4332  0F89  0873               	movf	__Umul8_16@product,w
  4333  0F8A  00F0               	movwf	?__Umul8_16
  4334  0F8B  0008               	return
  4335  0F8C                     __end_of__Umul8_16:	
  4336  0F8C                     __ptext22:	
  4337 ;; *************** function ___xxtofl *****************
  4338 ;; Defined at:
  4339 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  sign            1    wreg     unsigned char 
  4342 ;;  val             4    0[COMMON] long 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  sign            1    8[COMMON] unsigned char 
  4345 ;;  arg             4   10[COMMON] unsigned long 
  4346 ;;  exp             1    9[COMMON] unsigned char 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  4    0[COMMON] unsigned char 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2, status,0
  4351 ;; Tracked objects:
  4352 ;;		On entry : 1F/0
  4353 ;;		On exit  : 1F/0
  4354 ;;		Unchanged: 1F/0
  4355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4357 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4358 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4359 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4360 ;;Total ram usage:       14 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; Hardware stack levels required when called:    1
  4363 ;; This function calls:
  4364 ;;		Nothing
  4365 ;; This function is called by:
  4366 ;;		_get_30v_current
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           
  4371                           ;psect for function ___xxtofl
  4372  0F8C                     ___xxtofl:	
  4373                           
  4374                           ;incstack = 0
  4375                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4376                           ;___xxtofl@sign stored from wreg
  4377  0F8C  00F8               	movwf	___xxtofl@sign
  4378  0F8D  0878               	movf	___xxtofl@sign,w
  4379  0F8E  1D03               	btfss	3,2
  4380  0F8F  1FF3               	btfss	___xxtofl@val+3,7
  4381  0F90  2FA1               	goto	l3548
  4382  0F91  0970               	comf	___xxtofl@val,w
  4383  0F92  00FA               	movwf	___xxtofl@arg
  4384  0F93  0971               	comf	___xxtofl@val+1,w
  4385  0F94  00FB               	movwf	___xxtofl@arg+1
  4386  0F95  0972               	comf	___xxtofl@val+2,w
  4387  0F96  00FC               	movwf	___xxtofl@arg+2
  4388  0F97  0973               	comf	___xxtofl@val+3,w
  4389  0F98  00FD               	movwf	___xxtofl@arg+3
  4390  0F99  0AFA               	incf	___xxtofl@arg,f
  4391  0F9A  1903               	skipnz
  4392  0F9B  0AFB               	incf	___xxtofl@arg+1,f
  4393  0F9C  1903               	skipnz
  4394  0F9D  0AFC               	incf	___xxtofl@arg+2,f
  4395  0F9E  1903               	skipnz
  4396  0F9F  0AFD               	incf	___xxtofl@arg+3,f
  4397  0FA0  2FA9               	goto	l1092
  4398  0FA1                     l3548:	
  4399  0FA1  0873               	movf	___xxtofl@val+3,w
  4400  0FA2  00FD               	movwf	___xxtofl@arg+3
  4401  0FA3  0872               	movf	___xxtofl@val+2,w
  4402  0FA4  00FC               	movwf	___xxtofl@arg+2
  4403  0FA5  0871               	movf	___xxtofl@val+1,w
  4404  0FA6  00FB               	movwf	___xxtofl@arg+1
  4405  0FA7  0870               	movf	___xxtofl@val,w
  4406  0FA8  00FA               	movwf	___xxtofl@arg
  4407  0FA9                     l1092:	
  4408  0FA9  0873               	movf	___xxtofl@val+3,w
  4409  0FAA  0472               	iorwf	___xxtofl@val+2,w
  4410  0FAB  0471               	iorwf	___xxtofl@val+1,w
  4411  0FAC  0470               	iorwf	___xxtofl@val,w
  4412  0FAD  1D03               	skipz
  4413  0FAE  2FB4               	goto	l3552
  4414  0FAF  01F0               	clrf	?___xxtofl
  4415  0FB0  01F1               	clrf	?___xxtofl+1
  4416  0FB1  01F2               	clrf	?___xxtofl+2
  4417  0FB2  01F3               	clrf	?___xxtofl+3
  4418  0FB3  0008               	return
  4419  0FB4                     l3552:	
  4420  0FB4  3096               	movlw	150
  4421  0FB5  00F9               	movwf	___xxtofl@exp
  4422  0FB6                     l3556:	
  4423  0FB6  30FE               	movlw	254
  4424  0FB7  057D               	andwf	___xxtofl@arg+3,w
  4425  0FB8  1903               	btfsc	3,2
  4426  0FB9  2FCB               	goto	l3564
  4427  0FBA  0AF9               	incf	___xxtofl@exp,f
  4428  0FBB  36FD               	lsrf	___xxtofl@arg+3,f
  4429  0FBC  0CFC               	rrf	___xxtofl@arg+2,f
  4430  0FBD  0CFB               	rrf	___xxtofl@arg+1,f
  4431  0FBE  0CFA               	rrf	___xxtofl@arg,f
  4432  0FBF  2FB6               	goto	l3556
  4433  0FC0                     l3558:	
  4434  0FC0  3001               	movlw	1
  4435  0FC1  0AF9               	incf	___xxtofl@exp,f
  4436  0FC2  07FA               	addwf	___xxtofl@arg,f
  4437  0FC3  3000               	movlw	0
  4438  0FC4  3DFB               	addwfc	___xxtofl@arg+1,f
  4439  0FC5  3DFC               	addwfc	___xxtofl@arg+2,f
  4440  0FC6  3DFD               	addwfc	___xxtofl@arg+3,f
  4441  0FC7  36FD               	lsrf	___xxtofl@arg+3,f
  4442  0FC8  0CFC               	rrf	___xxtofl@arg+2,f
  4443  0FC9  0CFB               	rrf	___xxtofl@arg+1,f
  4444  0FCA  0CFA               	rrf	___xxtofl@arg,f
  4445  0FCB                     l3564:	
  4446  0FCB  30FF               	movlw	255
  4447  0FCC  057D               	andwf	___xxtofl@arg+3,w
  4448  0FCD  1903               	btfsc	3,2
  4449  0FCE  2FD9               	goto	l3568
  4450  0FCF  2FC0               	goto	l3558
  4451  0FD0                     l3570:	
  4452  0FD0  3002               	movlw	2
  4453  0FD1  0279               	subwf	___xxtofl@exp,w
  4454  0FD2  1C03               	btfss	3,0
  4455  0FD3  2FDB               	goto	l1105
  4456  0FD4  03F9               	decf	___xxtofl@exp,f
  4457  0FD5  35FA               	lslf	___xxtofl@arg,f
  4458  0FD6  0DFB               	rlf	___xxtofl@arg+1,f
  4459  0FD7  0DFC               	rlf	___xxtofl@arg+2,f
  4460  0FD8  0DFD               	rlf	___xxtofl@arg+3,f
  4461  0FD9                     l3568:	
  4462  0FD9  1FFC               	btfss	___xxtofl@arg+2,7
  4463  0FDA  2FD0               	goto	l3570
  4464  0FDB                     l1105:	
  4465  0FDB  1879               	btfsc	___xxtofl@exp,0
  4466  0FDC  2FE4               	goto	l3574
  4467  0FDD  30FF               	movlw	255
  4468  0FDE  05FA               	andwf	___xxtofl@arg,f
  4469  0FDF  05FB               	andwf	___xxtofl@arg+1,f
  4470  0FE0  307F               	movlw	127
  4471  0FE1  05FC               	andwf	___xxtofl@arg+2,f
  4472  0FE2  30FF               	movlw	255
  4473  0FE3  05FD               	andwf	___xxtofl@arg+3,f
  4474  0FE4                     l3574:	
  4475  0FE4  36F9               	lsrf	___xxtofl@exp,f
  4476  0FE5  0879               	movf	___xxtofl@exp,w
  4477  0FE6  00F7               	movwf	??___xxtofl+3
  4478  0FE7  01F6               	clrf	??___xxtofl+2
  4479  0FE8  01F5               	clrf	??___xxtofl+1
  4480  0FE9  01F4               	clrf	??___xxtofl
  4481  0FEA  0874               	movf	??___xxtofl,w
  4482  0FEB  04FA               	iorwf	___xxtofl@arg,f
  4483  0FEC  0875               	movf	??___xxtofl+1,w
  4484  0FED  04FB               	iorwf	___xxtofl@arg+1,f
  4485  0FEE  0876               	movf	??___xxtofl+2,w
  4486  0FEF  04FC               	iorwf	___xxtofl@arg+2,f
  4487  0FF0  0877               	movf	??___xxtofl+3,w
  4488  0FF1  04FD               	iorwf	___xxtofl@arg+3,f
  4489  0FF2  0878               	movf	___xxtofl@sign,w
  4490  0FF3  1D03               	btfss	3,2
  4491  0FF4  1FF3               	btfss	___xxtofl@val+3,7
  4492  0FF5  2FF7               	goto	l3582
  4493  0FF6  17FD               	bsf	___xxtofl@arg+3,7
  4494  0FF7                     l3582:	
  4495  0FF7  087D               	movf	___xxtofl@arg+3,w
  4496  0FF8  00F3               	movwf	?___xxtofl+3
  4497  0FF9  087C               	movf	___xxtofl@arg+2,w
  4498  0FFA  00F2               	movwf	?___xxtofl+2
  4499  0FFB  087B               	movf	___xxtofl@arg+1,w
  4500  0FFC  00F1               	movwf	?___xxtofl+1
  4501  0FFD  087A               	movf	___xxtofl@arg,w
  4502  0FFE  00F0               	movwf	?___xxtofl
  4503  0FFF  0008               	return
  4504  1000                     __end_of___xxtofl:	
  4505                           
  4506                           	psect	text23
  4507  086D                     __ptext23:	
  4508 ;; *************** function ___fltol *****************
  4509 ;; Defined at:
  4510 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;  f1              4   45[BANK0 ] unsigned char 
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;  exp1            1   54[BANK0 ] unsigned char 
  4515 ;;  sign1           1   53[BANK0 ] unsigned char 
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  4   45[BANK0 ] long 
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, status,0
  4520 ;; Tracked objects:
  4521 ;;		On entry : 1F/0
  4522 ;;		On exit  : 1F/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4525 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4526 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4527 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4528 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4529 ;;Total ram usage:       10 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    1
  4532 ;; This function calls:
  4533 ;;		Nothing
  4534 ;; This function is called by:
  4535 ;;		_get_30v_current
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           
  4540                           ;psect for function ___fltol
  4541  086D                     ___fltol:	
  4542                           
  4543                           ;incstack = 0
  4544                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4545  086D  084D               	movf	___fltol@f1,w
  4546  086E  00D1               	movwf	??___fltol
  4547  086F  084E               	movf	___fltol@f1+1,w
  4548  0870  00D2               	movwf	??___fltol+1
  4549  0871  084F               	movf	___fltol@f1+2,w
  4550  0872  00D3               	movwf	??___fltol+2
  4551  0873  0850               	movf	___fltol@f1+3,w
  4552  0874  00D4               	movwf	??___fltol+3
  4553  0875  1003               	clrc
  4554  0876  0D53               	rlf	??___fltol+2,w
  4555  0877  0D54               	rlf	??___fltol+3,w
  4556  0878  00D6               	movwf	___fltol@exp1
  4557  0879  0856               	movf	___fltol@exp1,w
  4558  087A  1D03               	btfss	3,2
  4559  087B  2881               	goto	l3212
  4560  087C                     l3210:	
  4561  087C  01CD               	clrf	?___fltol
  4562  087D  01CE               	clrf	?___fltol+1
  4563  087E  01CF               	clrf	?___fltol+2
  4564  087F  01D0               	clrf	?___fltol+3
  4565  0880  0008               	return
  4566  0881                     l3212:	
  4567  0881  084D               	movf	___fltol@f1,w
  4568  0882  00D1               	movwf	??___fltol
  4569  0883  084E               	movf	___fltol@f1+1,w
  4570  0884  00D2               	movwf	??___fltol+1
  4571  0885  084F               	movf	___fltol@f1+2,w
  4572  0886  00D3               	movwf	??___fltol+2
  4573  0887  0850               	movf	___fltol@f1+3,w
  4574  0888  00D4               	movwf	??___fltol+3
  4575  0889  301F               	movlw	31
  4576  088A                     u2995:	
  4577  088A  36D4               	lsrf	??___fltol+3,f
  4578  088B  0CD3               	rrf	??___fltol+2,f
  4579  088C  0CD2               	rrf	??___fltol+1,f
  4580  088D  0CD1               	rrf	??___fltol,f
  4581  088E  0B89               	decfsz	9,f
  4582  088F  288A               	goto	u2995
  4583  0890  0851               	movf	??___fltol,w
  4584  0891  00D5               	movwf	___fltol@sign1
  4585  0892  3096               	movlw	150
  4586  0893  17CF               	bsf	___fltol@f1+2,7
  4587  0894  01D0               	clrf	___fltol@f1+3
  4588  0895  02D6               	subwf	___fltol@exp1,f
  4589  0896  1FD6               	btfss	___fltol@exp1,7
  4590  0897  28A4               	goto	l3230
  4591  0898  0856               	movf	___fltol@exp1,w
  4592  0899  3A80               	xorlw	128
  4593  089A  3E97               	addlw	151
  4594  089B  1C03               	btfss	3,0
  4595  089C  287C               	goto	l3210
  4596  089D                     l3226:	
  4597  089D  36D0               	lsrf	___fltol@f1+3,f
  4598  089E  0CCF               	rrf	___fltol@f1+2,f
  4599  089F  0CCE               	rrf	___fltol@f1+1,f
  4600  08A0  0CCD               	rrf	___fltol@f1,f
  4601  08A1  0FD6               	incfsz	___fltol@exp1,f
  4602  08A2  289D               	goto	l3226
  4603  08A3  28B1               	goto	l3238
  4604  08A4                     l3230:	
  4605  08A4  3020               	movlw	32
  4606  08A5  0256               	subwf	___fltol@exp1,w
  4607  08A6  1803               	btfsc	3,0
  4608  08A7  287C               	goto	l3210
  4609  08A8                     l3236:	
  4610  08A8  0856               	movf	___fltol@exp1,w
  4611  08A9  1903               	btfsc	3,2
  4612  08AA  28B1               	goto	l3238
  4613  08AB  35CD               	lslf	___fltol@f1,f
  4614  08AC  0DCE               	rlf	___fltol@f1+1,f
  4615  08AD  0DCF               	rlf	___fltol@f1+2,f
  4616  08AE  0DD0               	rlf	___fltol@f1+3,f
  4617  08AF  03D6               	decf	___fltol@exp1,f
  4618  08B0  28A8               	goto	l3236
  4619  08B1                     l3238:	
  4620  08B1  0855               	movf	___fltol@sign1,w
  4621  08B2  1903               	btfsc	3,2
  4622  08B3  0008               	return
  4623  08B4  09CD               	comf	___fltol@f1,f
  4624  08B5  09CE               	comf	___fltol@f1+1,f
  4625  08B6  09CF               	comf	___fltol@f1+2,f
  4626  08B7  09D0               	comf	___fltol@f1+3,f
  4627  08B8  0ACD               	incf	___fltol@f1,f
  4628  08B9  1903               	skipnz
  4629  08BA  0ACE               	incf	___fltol@f1+1,f
  4630  08BB  1903               	skipnz
  4631  08BC  0ACF               	incf	___fltol@f1+2,f
  4632  08BD  1903               	skipnz
  4633  08BE  0AD0               	incf	___fltol@f1+3,f
  4634  08BF  0008               	return
  4635  08C0                     __end_of___fltol:	
  4636                           
  4637                           	psect	text28
  4638  08C0                     __ptext28:	
  4639 ;; *************** function _Vout_set *****************
  4640 ;; Defined at:
  4641 ;;		line 2196 in file "Multi_RX_testjig_v2.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  Volts           2    4[COMMON] int 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  digi_step       4    6[COMMON] unsigned long 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;		None               void
  4648 ;; Registers used:
  4649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/4
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4656 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4658 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4659 ;;Total ram usage:        6 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:    3
  4662 ;; This function calls:
  4663 ;;		_digitalpot
  4664 ;; This function is called by:
  4665 ;;		_main
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           
  4670                           ;psect for function _Vout_set
  4671  08C0                     _Vout_set:	
  4672                           
  4673                           ;Multi_RX_testjig_v2.c: 2206: switch(Volts)
  4674                           
  4675                           ;incstack = 0
  4676                           ; Regs used in _Vout_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4677  08C0  28CD               	goto	l3762
  4678  08C1                     l3754:	
  4679                           
  4680                           ;Multi_RX_testjig_v2.c: 2211: digi_step = 52;
  4681  08C1  3034               	movlw	52
  4682  08C2  28C6               	goto	L33
  4683  08C3                     l3756:	
  4684                           ;Multi_RX_testjig_v2.c: 2212: break;
  4685                           
  4686                           
  4687                           ;Multi_RX_testjig_v2.c: 2214: digi_step = 75;
  4688  08C3  304B               	movlw	75
  4689  08C4  28C6               	goto	L33
  4690  08C5                     l3758:	
  4691                           ;Multi_RX_testjig_v2.c: 2215: break;
  4692                           
  4693                           
  4694                           ;Multi_RX_testjig_v2.c: 2217: digi_step = 126;
  4695  08C5  307E               	movlw	126
  4696  08C6                     L33:	
  4697  08C6  00F6               	movwf	Vout_set@digi_step
  4698  08C7  28C9               	goto	L34
  4699  08C8                     l696:	
  4700                           ;Multi_RX_testjig_v2.c: 2219: default:
  4701                           
  4702                           ;Multi_RX_testjig_v2.c: 2218: break;
  4703                           
  4704                           
  4705                           ;Multi_RX_testjig_v2.c: 2220: digi_step = 0;
  4706  08C8  01F6               	clrf	Vout_set@digi_step
  4707  08C9                     L34:	
  4708  08C9  01F7               	clrf	Vout_set@digi_step+1
  4709  08CA  01F8               	clrf	Vout_set@digi_step+2
  4710  08CB  01F9               	clrf	Vout_set@digi_step+3
  4711                           
  4712                           ;Multi_RX_testjig_v2.c: 2221: break;
  4713  08CC  28DD               	goto	l3764
  4714  08CD                     l3762:	
  4715                           
  4716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4717                           ; Switch size 1, requested type "speed"
  4718                           ; Number of cases is 1, Range of values is 0 to 0
  4719                           ; switch strategies available:
  4720                           ; Name         Instructions Cycles
  4721                           ; simple_byte            4     3 (average)
  4722                           ; direct_byte            8     6 (fixed)
  4723                           ; jumptable            260     6 (fixed)
  4724                           ;	Chosen strategy is simple_byte
  4725  08CD  0875               	movf	Vout_set@Volts+1,w
  4726  08CE  3A00               	xorlw	0	; case 0
  4727  08CF  1903               	skipnz
  4728  08D0  28D2               	goto	l4672
  4729  08D1  28C8               	goto	l696
  4730  08D2                     l4672:	
  4731                           
  4732                           ; Switch size 1, requested type "speed"
  4733                           ; Number of cases is 3, Range of values is 12 to 27
  4734                           ; switch strategies available:
  4735                           ; Name         Instructions Cycles
  4736                           ; simple_byte           10     6 (average)
  4737                           ; direct_byte           41     9 (fixed)
  4738                           ; jumptable            263     9 (fixed)
  4739                           ;	Chosen strategy is simple_byte
  4740  08D2  0874               	movf	Vout_set@Volts,w
  4741  08D3  3A0C               	xorlw	12	; case 12
  4742  08D4  1903               	skipnz
  4743  08D5  28C1               	goto	l3754
  4744  08D6  3A1C               	xorlw	28	; case 16
  4745  08D7  1903               	skipnz
  4746  08D8  28C3               	goto	l3756
  4747  08D9  3A0B               	xorlw	11	; case 27
  4748  08DA  1903               	skipnz
  4749  08DB  28C5               	goto	l3758
  4750  08DC  28C8               	goto	l696
  4751  08DD                     l3764:	
  4752                           
  4753                           ;Multi_RX_testjig_v2.c: 2228: digitalpot((unsigned char) digi_step);
  4754  08DD  0876               	movf	Vout_set@digi_step,w
  4755  08DE  2B6A               	ljmp	_digitalpot
  4756  08DF                     __end_of_Vout_set:	
  4757  08DF                     __ptext15:	
  4758 ;; *************** function _lcd_set_cursor *****************
  4759 ;; Defined at:
  4760 ;;		line 1411 in file "Multi_RX_testjig_v2.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  row             1    wreg     unsigned char 
  4763 ;;  col             1    1[COMMON] unsigned char 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  row             1    2[COMMON] unsigned char 
  4766 ;;  LCD_position    1    3[COMMON] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;		None               void
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, status,0, pclath, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 1F/0
  4773 ;;		On exit  : 1F/4
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4776 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4777 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4779 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4780 ;;Total ram usage:        3 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    2
  4783 ;; This function calls:
  4784 ;;		_i2c_Start
  4785 ;;		_i2c_Stop
  4786 ;;		_i2c_Write
  4787 ;; This function is called by:
  4788 ;;		_lcd_print_int
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           
  4793                           ;psect for function _lcd_set_cursor
  4794  08DF                     _lcd_set_cursor:	
  4795                           
  4796                           ;incstack = 0
  4797                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4798                           ;lcd_set_cursor@row stored from wreg
  4799  08DF  00F2               	movwf	lcd_set_cursor@row
  4800                           
  4801                           ;Multi_RX_testjig_v2.c: 1414: col--;
  4802  08E0  03F1               	decf	lcd_set_cursor@col,f
  4803                           
  4804                           ;Multi_RX_testjig_v2.c: 1415: i2c_Start();
  4805  08E1  23E1  3188         	fcall	_i2c_Start
  4806                           
  4807                           ;Multi_RX_testjig_v2.c: 1416: i2c_Write(0x7C);
  4808  08E3  307C               	movlw	124
  4809  08E4  23D5  3188         	fcall	_i2c_Write
  4810                           
  4811                           ;Multi_RX_testjig_v2.c: 1417: i2c_Write(0x00);
  4812  08E6  3000               	movlw	0
  4813  08E7  23D5  3188         	fcall	_i2c_Write
  4814                           
  4815                           ;Multi_RX_testjig_v2.c: 1418: LCD_position = col & 0b11001111;
  4816  08E9  0871               	movf	lcd_set_cursor@col,w
  4817  08EA  00F3               	movwf	lcd_set_cursor@LCD_position
  4818  08EB  30CF               	movlw	207
  4819  08EC  05F3               	andwf	lcd_set_cursor@LCD_position,f
  4820                           
  4821                           ;Multi_RX_testjig_v2.c: 1419: if(row == 1)
  4822  08ED  0B72               	decfsz	lcd_set_cursor@row,w
  4823  08EE  28F1               	goto	l3150
  4824                           
  4825                           ;Multi_RX_testjig_v2.c: 1420: LCD_position |= 0b10000000;
  4826  08EF  17F3               	bsf	lcd_set_cursor@LCD_position,7
  4827  08F0  28F3               	goto	l3152
  4828  08F1                     l3150:	
  4829                           
  4830                           ;Multi_RX_testjig_v2.c: 1421: else
  4831                           ;Multi_RX_testjig_v2.c: 1422: LCD_position |= 0b11000000;
  4832  08F1  30C0               	movlw	192
  4833  08F2  04F3               	iorwf	lcd_set_cursor@LCD_position,f
  4834  08F3                     l3152:	
  4835                           
  4836                           ;Multi_RX_testjig_v2.c: 1423: i2c_Write(LCD_position);
  4837  08F3  0873               	movf	lcd_set_cursor@LCD_position,w
  4838  08F4  23D5  3188         	fcall	_i2c_Write
  4839                           
  4840                           ;Multi_RX_testjig_v2.c: 1424: i2c_Stop();
  4841  08F6  2BE6               	ljmp	l2914
  4842  08F7                     __end_of_lcd_set_cursor:	
  4843  08F7                     __ptext11:	
  4844 ;; *************** function _lcd_print_int *****************
  4845 ;; Defined at:
  4846 ;;		line 1987 in file "Multi_RX_testjig_v2.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;  number          2   59[BANK0 ] unsigned int 
  4849 ;;  pos             2   61[BANK0 ] unsigned int 
  4850 ;;  decimal         1   63[BANK0 ] unsigned char 
  4851 ;;  ten_thou_dig    1   64[BANK0 ] unsigned char 
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;		None
  4854 ;; Return value:  Size  Location     Type
  4855 ;;		None               void
  4856 ;; Registers used:
  4857 ;;		wreg, status,2, status,0, pclath, cstack
  4858 ;; Tracked objects:
  4859 ;;		On entry : 1F/0
  4860 ;;		On exit  : 1F/4
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4863 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4866 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4867 ;;Total ram usage:        6 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:    3
  4870 ;; This function calls:
  4871 ;;		_i2c_write_char
  4872 ;;		_lcd_set_cursor
  4873 ;;		_ten_thou_conv
  4874 ;; This function is called by:
  4875 ;;		_main
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           
  4880                           ;psect for function _lcd_print_int
  4881  08F7                     _lcd_print_int:	
  4882                           
  4883                           ;Multi_RX_testjig_v2.c: 1989: lcd_set_cursor(2, pos + 1 - ten_thou_digit);
  4884                           
  4885                           ;incstack = 0
  4886                           ; Regs used in _lcd_print_int: [wreg+status,2+status,0+pclath+cstack]
  4887  08F7  0860               	movf	lcd_print_int@ten_thou_digit,w
  4888  08F8  025D               	subwf	lcd_print_int@pos,w
  4889  08F9  3E01               	addlw	1
  4890  08FA  00F1               	movwf	lcd_set_cursor@col
  4891  08FB  3002               	movlw	2
  4892  08FC  20DF               	fcall	_lcd_set_cursor
  4893                           
  4894                           ;Multi_RX_testjig_v2.c: 1990: ten_thou_conv(number);
  4895  08FD  0020               	movlb	0	; select bank0
  4896  08FE  085C               	movf	lcd_print_int@number+1,w
  4897  08FF  00F7               	movwf	ten_thou_conv@n+1
  4898  0900  085B               	movf	lcd_print_int@number,w
  4899  0901  00F6               	movwf	ten_thou_conv@n
  4900  0902  3195  259D  3188   	fcall	_ten_thou_conv
  4901                           
  4902                           ;Multi_RX_testjig_v2.c: 1991: if(ten_thou_digit)
  4903  0905  0020               	movlb	0	; select bank0
  4904  0906  0860               	movf	lcd_print_int@ten_thou_digit,w
  4905  0907  1903               	btfsc	3,2
  4906  0908  2914               	goto	l3796
  4907                           
  4908                           ;Multi_RX_testjig_v2.c: 1992: {
  4909                           ;Multi_RX_testjig_v2.c: 1993: if(ten_thou != 0 || decimal & 0x10)
  4910  0909  086F               	movf	_ten_thou,w
  4911  090A  1D03               	btfss	3,2
  4912  090B  290E               	goto	l3792
  4913  090C  1E5F               	btfss	lcd_print_int@decimal,4
  4914  090D  2911               	goto	l3794
  4915  090E                     l3792:	
  4916                           
  4917                           ;Multi_RX_testjig_v2.c: 1994: i2c_write_char(ten_thou + 48);
  4918  090E  086F               	movf	_ten_thou,w
  4919  090F  3E30               	addlw	48
  4920  0910  2912               	goto	L25
  4921  0911                     l3794:	
  4922                           
  4923                           ;Multi_RX_testjig_v2.c: 1995: else i2c_write_char(' ');
  4924  0911  3020               	movlw	32
  4925  0912                     L25:	
  4926  0912  2172  3188         	fcall	_i2c_write_char
  4927  0914                     l3796:	
  4928                           
  4929                           ;Multi_RX_testjig_v2.c: 1996: }
  4930                           ;Multi_RX_testjig_v2.c: 1997: if(decimal & 0x10)i2c_write_char('.');
  4931  0914  0020               	movlb	0	; select bank0
  4932  0915  1E5F               	btfss	lcd_print_int@decimal,4
  4933  0916  291A               	goto	l3800
  4934  0917  302E               	movlw	46
  4935  0918  2172  3188         	fcall	_i2c_write_char
  4936  091A                     l3800:	
  4937                           
  4938                           ;Multi_RX_testjig_v2.c: 1998: if(thou != 0 || ten_thou != 0 || decimal & 0x18)
  4939  091A  0021               	movlb	1	; select bank1
  4940  091B  0838               	movf	_thou^(0+128),w
  4941  091C  1D03               	btfss	3,2
  4942  091D  2926               	goto	l3806
  4943  091E  0020               	movlb	0	; select bank0
  4944  091F  086F               	movf	_ten_thou,w
  4945  0920  1D03               	btfss	3,2
  4946  0921  2926               	goto	l3806
  4947  0922  085F               	movf	lcd_print_int@decimal,w
  4948  0923  3918               	andlw	24
  4949  0924  1903               	btfsc	3,2
  4950  0925  292A               	goto	l3808
  4951  0926                     l3806:	
  4952                           
  4953                           ;Multi_RX_testjig_v2.c: 1999: i2c_write_char(thou + 48);
  4954  0926  0021               	movlb	1	; select bank1
  4955  0927  0838               	movf	_thou^(0+128),w
  4956  0928  3E30               	addlw	48
  4957  0929  292B               	goto	L26
  4958  092A                     l3808:	
  4959                           
  4960                           ;Multi_RX_testjig_v2.c: 2000: else i2c_write_char(' ');
  4961  092A  3020               	movlw	32
  4962  092B                     L26:	
  4963  092B  2172  3188         	fcall	_i2c_write_char
  4964                           
  4965                           ;Multi_RX_testjig_v2.c: 2001: if(decimal & 0x08)i2c_write_char('.');
  4966  092D  0020               	movlb	0	; select bank0
  4967  092E  1DDF               	btfss	lcd_print_int@decimal,3
  4968  092F  2933               	goto	l3814
  4969  0930  302E               	movlw	46
  4970  0931  2172  3188         	fcall	_i2c_write_char
  4971  0933                     l3814:	
  4972                           
  4973                           ;Multi_RX_testjig_v2.c: 2002: if(hund != 0 || thou != 0 || ten_thou != 0 || decimal & 0x
      +                          1C)
  4974  0933  0021               	movlb	1	; select bank1
  4975  0934  0834               	movf	_hund^(0+128),w
  4976  0935  1D03               	btfss	3,2
  4977  0936  2942               	goto	l3822
  4978  0937  0838               	movf	_thou^(0+128),w
  4979  0938  1D03               	btfss	3,2
  4980  0939  2942               	goto	l3822
  4981  093A  0020               	movlb	0	; select bank0
  4982  093B  086F               	movf	_ten_thou,w
  4983  093C  1D03               	btfss	3,2
  4984  093D  2942               	goto	l3822
  4985  093E  085F               	movf	lcd_print_int@decimal,w
  4986  093F  391C               	andlw	28
  4987  0940  1903               	btfsc	3,2
  4988  0941  2946               	goto	l3824
  4989  0942                     l3822:	
  4990                           
  4991                           ;Multi_RX_testjig_v2.c: 2003: i2c_write_char(hund + 48);
  4992  0942  0021               	movlb	1	; select bank1
  4993  0943  0834               	movf	_hund^(0+128),w
  4994  0944  3E30               	addlw	48
  4995  0945  2947               	goto	L27
  4996  0946                     l3824:	
  4997                           
  4998                           ;Multi_RX_testjig_v2.c: 2004: else i2c_write_char(' ');
  4999  0946  3020               	movlw	32
  5000  0947                     L27:	
  5001  0947  2172  3188         	fcall	_i2c_write_char
  5002                           
  5003                           ;Multi_RX_testjig_v2.c: 2005: if(decimal & 0x04)i2c_write_char('.');
  5004  0949  0020               	movlb	0	; select bank0
  5005  094A  1D5F               	btfss	lcd_print_int@decimal,2
  5006  094B  294F               	goto	l3830
  5007  094C  302E               	movlw	46
  5008  094D  2172  3188         	fcall	_i2c_write_char
  5009  094F                     l3830:	
  5010                           
  5011                           ;Multi_RX_testjig_v2.c: 2006: if(ten != 0 || hund != 0 || thou != 0 || ten_thou != 0 || 
      +                          decimal & 0x1E)
  5012  094F  0021               	movlb	1	; select bank1
  5013  0950  0836               	movf	_ten^(0+128),w
  5014  0951  1D03               	btfss	3,2
  5015  0952  2961               	goto	l3840
  5016  0953  0834               	movf	_hund^(0+128),w
  5017  0954  1D03               	btfss	3,2
  5018  0955  2961               	goto	l3840
  5019  0956  0838               	movf	_thou^(0+128),w
  5020  0957  1D03               	btfss	3,2
  5021  0958  2961               	goto	l3840
  5022  0959  0020               	movlb	0	; select bank0
  5023  095A  086F               	movf	_ten_thou,w
  5024  095B  1D03               	btfss	3,2
  5025  095C  2961               	goto	l3840
  5026  095D  085F               	movf	lcd_print_int@decimal,w
  5027  095E  391E               	andlw	30
  5028  095F  1903               	btfsc	3,2
  5029  0960  2965               	goto	l3842
  5030  0961                     l3840:	
  5031                           
  5032                           ;Multi_RX_testjig_v2.c: 2007: i2c_write_char(ten + 48);
  5033  0961  0021               	movlb	1	; select bank1
  5034  0962  0836               	movf	_ten^(0+128),w
  5035  0963  3E30               	addlw	48
  5036  0964  2966               	goto	L28
  5037  0965                     l3842:	
  5038                           
  5039                           ;Multi_RX_testjig_v2.c: 2008: else i2c_write_char(' ');
  5040  0965  3020               	movlw	32
  5041  0966                     L28:	
  5042  0966  2172  3188         	fcall	_i2c_write_char
  5043                           
  5044                           ;Multi_RX_testjig_v2.c: 2009: if(decimal & 0x02)i2c_write_char('.');
  5045  0968  0020               	movlb	0	; select bank0
  5046  0969  1CDF               	btfss	lcd_print_int@decimal,1
  5047  096A  296E               	goto	l627
  5048  096B  302E               	movlw	46
  5049  096C  2172  3188         	fcall	_i2c_write_char
  5050  096E                     l627:	
  5051                           
  5052                           ;Multi_RX_testjig_v2.c: 2010: i2c_write_char(unit + 48);
  5053  096E  0021               	movlb	1	; select bank1
  5054  096F  0837               	movf	_unit^(0+128),w
  5055  0970  3E30               	addlw	48
  5056  0971  2972               	ljmp	_i2c_write_char
  5057  0972                     __end_of_lcd_print_int:	
  5058  0972                     __ptext16:	
  5059 ;; *************** function _i2c_write_char *****************
  5060 ;; Defined at:
  5061 ;;		line 1327 in file "Multi_RX_testjig_v2.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;  char_data       1    wreg     unsigned char 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;  char_data       1    1[COMMON] unsigned char 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;		None               void
  5068 ;; Registers used:
  5069 ;;		wreg, status,2, status,0, pclath, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 1E/0
  5072 ;;		On exit  : 1F/4
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5076 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5079 ;;Total ram usage:        1 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    2
  5082 ;; This function calls:
  5083 ;;		_i2c_Start
  5084 ;;		_i2c_Stop
  5085 ;;		_i2c_Write
  5086 ;; This function is called by:
  5087 ;;		_lcd_print_int
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           
  5092                           ;psect for function _i2c_write_char
  5093  0972                     _i2c_write_char:	
  5094                           
  5095                           ;incstack = 0
  5096                           ; Regs used in _i2c_write_char: [wreg+status,2+status,0+pclath+cstack]
  5097                           ;i2c_write_char@char_data stored from wreg
  5098  0972  00F1               	movwf	i2c_write_char@char_data
  5099                           
  5100                           ;Multi_RX_testjig_v2.c: 1329: i2c_Start();
  5101  0973  23E1  3188         	fcall	_i2c_Start
  5102                           
  5103                           ;Multi_RX_testjig_v2.c: 1330: i2c_Write(0x7C);
  5104  0975  307C               	movlw	124
  5105  0976  23D5  3188         	fcall	_i2c_Write
  5106                           
  5107                           ;Multi_RX_testjig_v2.c: 1331: i2c_Write(0x40);
  5108  0978  3040               	movlw	64
  5109  0979  23D5  3188         	fcall	_i2c_Write
  5110                           
  5111                           ;Multi_RX_testjig_v2.c: 1332: i2c_Write(char_data);
  5112  097B  0871               	movf	i2c_write_char@char_data,w
  5113  097C  23D5  3188         	fcall	_i2c_Write
  5114                           
  5115                           ;Multi_RX_testjig_v2.c: 1333: i2c_Stop();
  5116  097E  2BE6               	ljmp	l2914
  5117  097F                     __end_of_i2c_write_char:	
  5118  097F                     __ptext1:	
  5119 ;; *************** function _testjig_done *****************
  5120 ;; Defined at:
  5121 ;;		line 1208 in file "Multi_RX_testjig_v2.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;  state           1    wreg     unsigned char 
  5124 ;;  device_type     1    8[COMMON] unsigned char 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  state           1   12[COMMON] unsigned char 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;		None               void
  5129 ;; Registers used:
  5130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 1E/1
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5136 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5138 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5139 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5140 ;;Total ram usage:        5 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    4
  5143 ;; This function calls:
  5144 ;;		_buzz_one
  5145 ;;		_debug_fast_tx
  5146 ;;		_power_supply_set
  5147 ;;		_print_screen
  5148 ;; This function is called by:
  5149 ;;		_main
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           
  5154                           ;psect for function _testjig_done
  5155  097F                     _testjig_done:	
  5156                           
  5157                           ;incstack = 0
  5158                           ; Regs used in _testjig_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5159                           ;testjig_done@state stored from wreg
  5160  097F  00FC               	movwf	testjig_done@state
  5161  0980                     l454:	
  5162                           ;Multi_RX_testjig_v2.c: 1210: while(1)
  5163                           
  5164                           
  5165                           ;Multi_RX_testjig_v2.c: 1211: {
  5166                           ;Multi_RX_testjig_v2.c: 1212: RE0 = 0;
  5167  0980  0020               	movlb	0	; select bank0
  5168  0981  1010               	bcf	16,0	;volatile
  5169                           
  5170                           ;Multi_RX_testjig_v2.c: 1213: power_supply_set(3);
  5171  0982  3003               	movlw	3
  5172  0983  23F3  3188         	fcall	_power_supply_set
  5173                           
  5174                           ;Multi_RX_testjig_v2.c: 1215: LATB5 = 0;
  5175  0985  0022               	movlb	2	; select bank2
  5176  0986  128D               	bcf	13,5	;volatile
  5177                           
  5178                           ;Multi_RX_testjig_v2.c: 1216: LATA6 = 0;
  5179  0987  130C               	bcf	12,6	;volatile
  5180                           
  5181                           ;Multi_RX_testjig_v2.c: 1217: TRISG1 = 1;
  5182  0988  0026               	movlb	6	; select bank6
  5183  0989  148D               	bsf	13,1	;volatile
  5184                           
  5185                           ;Multi_RX_testjig_v2.c: 1218: debug_fast_tx(11110);
  5186  098A  3066               	movlw	102
  5187  098B  00F0               	movwf	debug_fast_tx@data
  5188  098C  302B               	movlw	43
  5189  098D  00F1               	movwf	debug_fast_tx@data+1
  5190  098E  22A7  3188         	fcall	_debug_fast_tx
  5191                           
  5192                           ;Multi_RX_testjig_v2.c: 1219: debug_fast_tx(state);
  5193  0990  087C               	movf	testjig_done@state,w
  5194  0991  00F0               	movwf	debug_fast_tx@data
  5195  0992  01F1               	clrf	debug_fast_tx@data+1
  5196  0993  22A7  3188         	fcall	_debug_fast_tx
  5197                           
  5198                           ;Multi_RX_testjig_v2.c: 1220: switch(state)
  5199  0995  2A36               	goto	l3688
  5200  0996                     l3642:	
  5201                           
  5202                           ;Multi_RX_testjig_v2.c: 1223: if(device_type == 0xAA)
  5203  0996  30AA               	movlw	170
  5204  0997  0678               	xorwf	testjig_done@device_type,w
  5205  0998  1D03               	btfss	3,2
  5206  0999  299E               	goto	l3646
  5207                           
  5208                           ;Multi_RX_testjig_v2.c: 1224: print_screen("Condo3 Pass", " Remove board");
  5209  099A  30E9               	movlw	low (STR_141| (0+32768))
  5210  099B  00F4               	movwf	print_screen@top
  5211  099C  3092               	movlw	high (STR_141| (0+32768))
  5212  099D  29B1               	goto	L18
  5213  099E                     l3646:	
  5214                           
  5215                           ;Multi_RX_testjig_v2.c: 1225: else if(device_type == 0xA1)
  5216  099E  30A1               	movlw	161
  5217  099F  0678               	xorwf	testjig_done@device_type,w
  5218  09A0  1D03               	btfss	3,2
  5219  09A1  29A6               	goto	l3650
  5220                           
  5221                           ;Multi_RX_testjig_v2.c: 1226: print_screen("RX3 Pass", " Remove board");
  5222  09A2  3076               	movlw	low (STR_143| (0+32768))
  5223  09A3  00F4               	movwf	print_screen@top
  5224  09A4  3093               	movlw	high (STR_143| (0+32768))
  5225  09A5  29B1               	goto	L18
  5226  09A6                     l3650:	
  5227                           
  5228                           ;Multi_RX_testjig_v2.c: 1227: else if(device_type == 0xA2)
  5229  09A6  30A2               	movlw	162
  5230  09A7  0678               	xorwf	testjig_done@device_type,w
  5231  09A8  1D03               	btfss	3,2
  5232  09A9  29AE               	goto	l3654
  5233                           
  5234                           ;Multi_RX_testjig_v2.c: 1228: print_screen("Mem_Copier Pass", " Remove board");
  5235  09AA  301B               	movlw	low (STR_145| (0+32768))
  5236  09AB  00F4               	movwf	print_screen@top
  5237  09AC  3091               	movlw	high (STR_145| (0+32768))
  5238  09AD  29B1               	goto	L18
  5239  09AE                     l3654:	
  5240                           
  5241                           ;Multi_RX_testjig_v2.c: 1229: else
  5242                           ;Multi_RX_testjig_v2.c: 1230: print_screen("Multi_RX Pass", " Remove board");
  5243  09AE  30E9               	movlw	low (STR_147| (0+32768))
  5244  09AF  00F4               	movwf	print_screen@top
  5245  09B0  3091               	movlw	high (STR_147| (0+32768))
  5246  09B1                     L18:	
  5247  09B1  00F5               	movwf	print_screen@top+1
  5248  09B2  30CD               	movlw	low (STR_142| (0+32768))
  5249  09B3  00F6               	movwf	print_screen@bottom
  5250  09B4  3091               	movlw	high (STR_142| (0+32768))
  5251  09B5  00F7               	movwf	print_screen@bottom+1
  5252  09B6  22D4  3188         	fcall	_print_screen
  5253                           
  5254                           ;Multi_RX_testjig_v2.c: 1231: debug_fast_tx(11111);
  5255  09B8  3067               	movlw	103
  5256  09B9  00F0               	movwf	debug_fast_tx@data
  5257  09BA  302B               	movlw	43
  5258  09BB  00F1               	movwf	debug_fast_tx@data+1
  5259  09BC  22A7  3188         	fcall	_debug_fast_tx
  5260                           
  5261                           ;Multi_RX_testjig_v2.c: 1232: buzz_one(100);
  5262  09BE  3064               	movlw	100
  5263  09BF  00F0               	movwf	buzz_one@time
  5264  09C0  01F1               	clrf	buzz_one@time+1
  5265  09C1  23EB  3188         	fcall	_buzz_one
  5266                           
  5267                           ;Multi_RX_testjig_v2.c: 1233: _delay((unsigned long)((200)*(16000000/4000.0)));
  5268  09C3  3005               	movlw	5
  5269  09C4  00FB               	movwf	??_testjig_done+2
  5270  09C5  300F               	movlw	15
  5271  09C6  00FA               	movwf	??_testjig_done+1
  5272  09C7  30F4               	movlw	244
  5273  09C8  00F9               	movwf	??_testjig_done
  5274  09C9                     u5667:	
  5275  09C9  0BF9               	decfsz	??_testjig_done,f
  5276  09CA  29C9               	goto	u5667
  5277  09CB  0BFA               	decfsz	??_testjig_done+1,f
  5278  09CC  29C9               	goto	u5667
  5279  09CD  0BFB               	decfsz	??_testjig_done+2,f
  5280  09CE  29C9               	goto	u5667
  5281                           
  5282                           ;Multi_RX_testjig_v2.c: 1234: buzz_one(100);
  5283  09CF  3064               	movlw	100
  5284  09D0  00F0               	movwf	buzz_one@time
  5285  09D1  01F1               	clrf	buzz_one@time+1
  5286  09D2  23EB  3188         	fcall	_buzz_one
  5287  09D4                     l463:	
  5288                           ;Multi_RX_testjig_v2.c: 1235: while(RF3 == 0);
  5289                           
  5290  09D4  0025               	movlb	5	; select bank5
  5291  09D5  1D8C               	btfss	12,3	;volatile
  5292  09D6  29D4               	goto	l463
  5293                           
  5294                           ;Multi_RX_testjig_v2.c: 1236: _delay((unsigned long)((100)*(16000000/4000.0)));
  5295  09D7  3003               	movlw	3
  5296  09D8  00FB               	movwf	??_testjig_done+2
  5297  09D9  3008               	movlw	8
  5298  09DA  00FA               	movwf	??_testjig_done+1
  5299  09DB  3078               	movlw	120
  5300  09DC  00F9               	movwf	??_testjig_done
  5301  09DD                     u5677:	
  5302  09DD  0BF9               	decfsz	??_testjig_done,f
  5303  09DE  29DD               	goto	u5677
  5304  09DF  0BFA               	decfsz	??_testjig_done+1,f
  5305  09E0  29DD               	goto	u5677
  5306  09E1  0BFB               	decfsz	??_testjig_done+2,f
  5307  09E2  29DD               	goto	u5677
  5308  09E3  2A33               	goto	L19
  5309  09E4                     l3666:	
  5310                           ;Multi_RX_testjig_v2.c: 1238: break;
  5311                           
  5312                           ;Multi_RX_testjig_v2.c: 1237: state = 0xFF;
  5313                           
  5314                           
  5315                           ;Multi_RX_testjig_v2.c: 1240: debug_fast_tx(11112);
  5316  09E4  3068               	movlw	104
  5317  09E5  00F0               	movwf	debug_fast_tx@data
  5318  09E6  302B               	movlw	43
  5319  09E7  00F1               	movwf	debug_fast_tx@data+1
  5320  09E8  22A7  3188         	fcall	_debug_fast_tx
  5321                           
  5322                           ;Multi_RX_testjig_v2.c: 1242: if(device_type == 0xAA)
  5323  09EA  30AA               	movlw	170
  5324  09EB  0678               	xorwf	testjig_done@device_type,w
  5325  09EC  1D03               	btfss	3,2
  5326  09ED  29F2               	goto	l3672
  5327                           
  5328                           ;Multi_RX_testjig_v2.c: 1243: print_screen("Condo3 ", " Testjig");
  5329  09EE  307F               	movlw	low (STR_149| (0+32768))
  5330  09EF  00F4               	movwf	print_screen@top
  5331  09F0  3093               	movlw	high (STR_149| (0+32768))
  5332  09F1  2A01               	goto	L24
  5333  09F2                     l3672:	
  5334                           
  5335                           ;Multi_RX_testjig_v2.c: 1244: else if(device_type == 0xA1)
  5336  09F2  30A1               	movlw	161
  5337  09F3  0678               	xorwf	testjig_done@device_type,w
  5338  09F4  1D03               	btfss	3,2
  5339  09F5  29FA               	goto	l3676
  5340                           
  5341                           ;Multi_RX_testjig_v2.c: 1245: print_screen("RX3 ", " Testjig");
  5342  09F6  30B3               	movlw	low (STR_151| (0+32768))
  5343  09F7  00F4               	movwf	print_screen@top
  5344  09F8  3093               	movlw	high (STR_151| (0+32768))
  5345  09F9  2A01               	goto	L24
  5346  09FA                     l3676:	
  5347                           
  5348                           ;Multi_RX_testjig_v2.c: 1246: else if(device_type == 0xA2)
  5349  09FA  30A2               	movlw	162
  5350  09FB  0678               	xorwf	testjig_done@device_type,w
  5351  09FC  1D03               	btfss	3,2
  5352  09FD  2A06               	goto	l3680
  5353                           
  5354                           ;Multi_RX_testjig_v2.c: 1247: print_screen("Mem_Copier Pass", " Testjig");
  5355  09FE  301B               	movlw	low (STR_145| (0+32768))
  5356  09FF  00F4               	movwf	print_screen@top
  5357  0A00  3091               	movlw	high (STR_145| (0+32768))
  5358  0A01                     L24:	
  5359  0A01  00F5               	movwf	print_screen@top+1
  5360  0A02  30BC               	movlw	low ((STR_161+3)| (0+32768))
  5361  0A03  00F6               	movwf	print_screen@bottom
  5362  0A04  3092               	movlw	high ((STR_161+3)| (0+32768))
  5363  0A05  2A0D               	goto	L20
  5364  0A06                     l3680:	
  5365                           
  5366                           ;Multi_RX_testjig_v2.c: 1248: else
  5367                           ;Multi_RX_testjig_v2.c: 1249: print_screen("Multi_RX", "Testjig");
  5368  0A06  3064               	movlw	low (STR_1| (0+32768))
  5369  0A07  00F4               	movwf	print_screen@top
  5370  0A08  3093               	movlw	high (STR_1| (0+32768))
  5371  0A09  00F5               	movwf	print_screen@top+1
  5372  0A0A  30BD               	movlw	low ((STR_161+4)| (0+32768))
  5373  0A0B  00F6               	movwf	print_screen@bottom
  5374  0A0C  3092               	movlw	high ((STR_161+4)| (0+32768))
  5375  0A0D                     L20:	
  5376  0A0D  00F7               	movwf	print_screen@bottom+1
  5377  0A0E  22D4  3188         	fcall	_print_screen
  5378                           
  5379                           ;Multi_RX_testjig_v2.c: 1250: _delay((unsigned long)((2000)*(16000000/4000.0)));
  5380  0A10  3029               	movlw	41
  5381  0A11  00FB               	movwf	??_testjig_done+2
  5382  0A12  3096               	movlw	150
  5383  0A13  00FA               	movwf	??_testjig_done+1
  5384  0A14  30A6               	movlw	166
  5385  0A15  00F9               	movwf	??_testjig_done
  5386  0A16                     u5687:	
  5387  0A16  0BF9               	decfsz	??_testjig_done,f
  5388  0A17  2A16               	goto	u5687
  5389  0A18  0BFA               	decfsz	??_testjig_done+1,f
  5390  0A19  2A16               	goto	u5687
  5391  0A1A  0BFB               	decfsz	??_testjig_done+2,f
  5392  0A1B  2A16               	goto	u5687
  5393                           
  5394                           ;Multi_RX_testjig_v2.c: 1251: print_screen("Testjig Power-up", "wait...");
  5395  0A1C  3098               	movlw	low (STR_157| (0+32768))
  5396  0A1D  00F4               	movwf	print_screen@top
  5397  0A1E  3090               	movlw	high (STR_157| (0+32768))
  5398  0A1F  00F5               	movwf	print_screen@top+1
  5399  0A20  3087               	movlw	low (STR_158| (0+32768))
  5400  0A21  00F6               	movwf	print_screen@bottom
  5401  0A22  3093               	movlw	high (STR_158| (0+32768))
  5402  0A23  00F7               	movwf	print_screen@bottom+1
  5403  0A24  22D4  3188         	fcall	_print_screen
  5404                           
  5405                           ;Multi_RX_testjig_v2.c: 1252: _delay((unsigned long)((3000)*(16000000/4000.0)));
  5406  0A26  303D               	movlw	61
  5407  0A27  00FB               	movwf	??_testjig_done+2
  5408  0A28  30E1               	movlw	225
  5409  0A29  00FA               	movwf	??_testjig_done+1
  5410  0A2A  307A               	movlw	122
  5411  0A2B  00F9               	movwf	??_testjig_done
  5412  0A2C                     u5697:	
  5413  0A2C  0BF9               	decfsz	??_testjig_done,f
  5414  0A2D  2A2C               	goto	u5697
  5415  0A2E  0BFA               	decfsz	??_testjig_done+1,f
  5416  0A2F  2A2C               	goto	u5697
  5417  0A30  0BFB               	decfsz	??_testjig_done+2,f
  5418  0A31  2A2C               	goto	u5697
  5419  0A32  3200               	nop2
  5420  0A33                     L19:	
  5421                           
  5422                           ;Multi_RX_testjig_v2.c: 1253: state = 0xFF;
  5423  0A33  30FF               	movlw	255
  5424  0A34  00FC               	movwf	testjig_done@state
  5425                           
  5426                           ;Multi_RX_testjig_v2.c: 1254: break;
  5427  0A35  2A3E               	goto	l3690
  5428  0A36                     l3688:	
  5429  0A36  087C               	movf	testjig_done@state,w
  5430                           
  5431                           ; Switch size 1, requested type "speed"
  5432                           ; Number of cases is 2, Range of values is 1 to 2
  5433                           ; switch strategies available:
  5434                           ; Name         Instructions Cycles
  5435                           ; simple_byte            7     4 (average)
  5436                           ; direct_byte           13     9 (fixed)
  5437                           ; jumptable            263     9 (fixed)
  5438                           ;	Chosen strategy is simple_byte
  5439  0A37  3A01               	xorlw	1	; case 1
  5440  0A38  1903               	skipnz
  5441  0A39  2996               	goto	l3642
  5442  0A3A  3A03               	xorlw	3	; case 2
  5443  0A3B  1903               	skipnz
  5444  0A3C  29E4               	goto	l3666
  5445  0A3D  2A3E               	goto	l3690
  5446  0A3E                     l3690:	
  5447                           
  5448                           ;Multi_RX_testjig_v2.c: 1256: debug_fast_tx(11113);
  5449  0A3E  3069               	movlw	105
  5450  0A3F  00F0               	movwf	debug_fast_tx@data
  5451  0A40  302B               	movlw	43
  5452  0A41  00F1               	movwf	debug_fast_tx@data+1
  5453  0A42  22A7  3188         	fcall	_debug_fast_tx
  5454                           
  5455                           ;Multi_RX_testjig_v2.c: 1257: if(device_type == 0xAA)
  5456  0A44  30AA               	movlw	170
  5457  0A45  0678               	xorwf	testjig_done@device_type,w
  5458  0A46  1D03               	btfss	3,2
  5459  0A47  2A4C               	goto	l3696
  5460                           
  5461                           ;Multi_RX_testjig_v2.c: 1258: print_screen("Condo3 Testjig", "-> Insert PCB");
  5462  0A48  3076               	movlw	low (STR_159| (0+32768))
  5463  0A49  00F4               	movwf	print_screen@top
  5464  0A4A  3091               	movlw	high (STR_159| (0+32768))
  5465  0A4B  2A5F               	goto	L21
  5466  0A4C                     l3696:	
  5467                           
  5468                           ;Multi_RX_testjig_v2.c: 1259: else if(device_type == 0xA1)
  5469  0A4C  30A1               	movlw	161
  5470  0A4D  0678               	xorwf	testjig_done@device_type,w
  5471  0A4E  1D03               	btfss	3,2
  5472  0A4F  2A54               	goto	l3700
  5473                           
  5474                           ;Multi_RX_testjig_v2.c: 1260: print_screen("RX3 Testjig", "-> Insert PCB");
  5475  0A50  30B9               	movlw	low (STR_161| (0+32768))
  5476  0A51  00F4               	movwf	print_screen@top
  5477  0A52  3092               	movlw	high (STR_161| (0+32768))
  5478  0A53  2A5F               	goto	L21
  5479  0A54                     l3700:	
  5480                           
  5481                           ;Multi_RX_testjig_v2.c: 1261: else if(device_type == 0xA2)
  5482  0A54  30A2               	movlw	162
  5483  0A55  0678               	xorwf	testjig_done@device_type,w
  5484  0A56  1D03               	btfss	3,2
  5485  0A57  2A5C               	goto	l3704
  5486                           
  5487                           ;Multi_RX_testjig_v2.c: 1262: print_screen("Mem_Copier Pass", "-> Insert PCB");
  5488  0A58  301B               	movlw	low (STR_145| (0+32768))
  5489  0A59  00F4               	movwf	print_screen@top
  5490  0A5A  3091               	movlw	high (STR_145| (0+32768))
  5491  0A5B  2A5F               	goto	L21
  5492  0A5C                     l3704:	
  5493                           
  5494                           ;Multi_RX_testjig_v2.c: 1263: else
  5495                           ;Multi_RX_testjig_v2.c: 1264: print_screen("Multi_RX Testjig", "-> Insert PCB");
  5496  0A5C  3076               	movlw	low (STR_165| (0+32768))
  5497  0A5D  00F4               	movwf	print_screen@top
  5498  0A5E  3090               	movlw	high (STR_165| (0+32768))
  5499  0A5F                     L21:	
  5500  0A5F  00F5               	movwf	print_screen@top+1
  5501  0A60  30BF               	movlw	low (STR_4| (0+32768))
  5502  0A61  00F6               	movwf	print_screen@bottom
  5503  0A62  3091               	movlw	high (STR_4| (0+32768))
  5504  0A63  00F7               	movwf	print_screen@bottom+1
  5505  0A64  22D4  3188         	fcall	_print_screen
  5506  0A66                     l480:	
  5507  0A66  0025               	movlb	5	; select bank5
  5508  0A67  198C               	btfsc	12,3	;volatile
  5509  0A68  2A66               	goto	l480
  5510                           
  5511                           ;Multi_RX_testjig_v2.c: 1266: _delay((unsigned long)((100)*(16000000/4000.0)));
  5512  0A69  3003               	movlw	3
  5513  0A6A  00FB               	movwf	??_testjig_done+2
  5514  0A6B  3008               	movlw	8
  5515  0A6C  00FA               	movwf	??_testjig_done+1
  5516  0A6D  3078               	movlw	120
  5517  0A6E  00F9               	movwf	??_testjig_done
  5518  0A6F                     u5707:	
  5519  0A6F  0BF9               	decfsz	??_testjig_done,f
  5520  0A70  2A6F               	goto	u5707
  5521  0A71  0BFA               	decfsz	??_testjig_done+1,f
  5522  0A72  2A6F               	goto	u5707
  5523  0A73  0BFB               	decfsz	??_testjig_done+2,f
  5524  0A74  2A6F               	goto	u5707
  5525                           
  5526                           ;Multi_RX_testjig_v2.c: 1267: if(device_type == 0xAA)
  5527  0A75  30AA               	movlw	170
  5528  0A76  0678               	xorwf	testjig_done@device_type,w
  5529  0A77  1D03               	btfss	3,2
  5530  0A78  2A7D               	goto	l3712
  5531                           
  5532                           ;Multi_RX_testjig_v2.c: 1268: print_screen("Condo3 Testjig", " Press START");
  5533  0A79  3076               	movlw	low (STR_159| (0+32768))
  5534  0A7A  00F4               	movwf	print_screen@top
  5535  0A7B  3091               	movlw	high (STR_159| (0+32768))
  5536  0A7C  2A90               	goto	L22
  5537  0A7D                     l3712:	
  5538                           
  5539                           ;Multi_RX_testjig_v2.c: 1269: else if(device_type == 0xA1)
  5540  0A7D  30A1               	movlw	161
  5541  0A7E  0678               	xorwf	testjig_done@device_type,w
  5542  0A7F  1D03               	btfss	3,2
  5543  0A80  2A85               	goto	l3716
  5544                           
  5545                           ;Multi_RX_testjig_v2.c: 1270: print_screen("RX3 Testjig", " Press START");
  5546  0A81  30B9               	movlw	low (STR_161| (0+32768))
  5547  0A82  00F4               	movwf	print_screen@top
  5548  0A83  3092               	movlw	high (STR_161| (0+32768))
  5549  0A84  2A90               	goto	L22
  5550  0A85                     l3716:	
  5551                           
  5552                           ;Multi_RX_testjig_v2.c: 1271: else if(device_type == 0xA2)
  5553  0A85  30A2               	movlw	162
  5554  0A86  0678               	xorwf	testjig_done@device_type,w
  5555  0A87  1D03               	btfss	3,2
  5556  0A88  2A8D               	goto	l3720
  5557                           
  5558                           ;Multi_RX_testjig_v2.c: 1272: print_screen("Mem_Copier Pass", " Press START");
  5559  0A89  301B               	movlw	low (STR_145| (0+32768))
  5560  0A8A  00F4               	movwf	print_screen@top
  5561  0A8B  3091               	movlw	high (STR_145| (0+32768))
  5562  0A8C  2A90               	goto	L22
  5563  0A8D                     l3720:	
  5564                           
  5565                           ;Multi_RX_testjig_v2.c: 1273: else
  5566                           ;Multi_RX_testjig_v2.c: 1274: print_screen("Multi_RX Testjig", " Press START");
  5567  0A8D  3076               	movlw	low (STR_165| (0+32768))
  5568  0A8E  00F4               	movwf	print_screen@top
  5569  0A8F  3090               	movlw	high (STR_165| (0+32768))
  5570  0A90                     L22:	
  5571  0A90  00F5               	movwf	print_screen@top+1
  5572  0A91  3054               	movlw	low (STR_168| (0+32768))
  5573  0A92  00F6               	movwf	print_screen@bottom
  5574  0A93  3092               	movlw	high (STR_168| (0+32768))
  5575  0A94  00F7               	movwf	print_screen@bottom+1
  5576  0A95  22D4  3188         	fcall	_print_screen
  5577  0A97                     l489:	
  5578  0A97  0025               	movlb	5	; select bank5
  5579  0A98  1D8C               	btfss	12,3	;volatile
  5580  0A99  2A97               	goto	l489
  5581                           
  5582                           ;Multi_RX_testjig_v2.c: 1276: _delay((unsigned long)((100)*(16000000/4000.0)));
  5583  0A9A  3003               	movlw	3
  5584  0A9B  00FB               	movwf	??_testjig_done+2
  5585  0A9C  3008               	movlw	8
  5586  0A9D  00FA               	movwf	??_testjig_done+1
  5587  0A9E  3078               	movlw	120
  5588  0A9F  00F9               	movwf	??_testjig_done
  5589  0AA0                     u5717:	
  5590  0AA0  0BF9               	decfsz	??_testjig_done,f
  5591  0AA1  2AA0               	goto	u5717
  5592  0AA2  0BFA               	decfsz	??_testjig_done+1,f
  5593  0AA3  2AA0               	goto	u5717
  5594  0AA4  0BFB               	decfsz	??_testjig_done+2,f
  5595  0AA5  2AA0               	goto	u5717
  5596  0AA6  2980               	goto	l454
  5597  0AA7                     __end_of_testjig_done:	
  5598  0AA7                     __ptext9:	
  5599 ;; *************** function _debug_fast_tx *****************
  5600 ;; Defined at:
  5601 ;;		line 2246 in file "Multi_RX_testjig_v2.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  data            2    0[COMMON] unsigned int 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  i               1    2[COMMON] unsigned char 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;		None               void
  5608 ;; Registers used:
  5609 ;;		wreg, status,2, status,0
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/2
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5618 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5619 ;;Total ram usage:        3 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_main
  5626 ;;		_testjig_done
  5627 ;;		_print_error
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           
  5632                           ;psect for function _debug_fast_tx
  5633  0AA7                     _debug_fast_tx:	
  5634                           
  5635                           ;Multi_RX_testjig_v2.c: 2248: GIE = 0;
  5636                           
  5637                           ;incstack = 0
  5638                           ; Regs used in _debug_fast_tx: [wreg+status,2+status,0]
  5639  0AA7  138B               	bcf	11,7	;volatile
  5640                           
  5641                           ;Multi_RX_testjig_v2.c: 2249: LATD2 = 0;
  5642  0AA8  0022               	movlb	2	; select bank2
  5643  0AA9  110F               	bcf	15,2	;volatile
  5644                           
  5645                           ;Multi_RX_testjig_v2.c: 2255: __nop();
  5646  0AAA  0000               	nop
  5647                           
  5648                           ;Multi_RX_testjig_v2.c: 2256: __nop();
  5649  0AAB  0000               	nop
  5650                           
  5651                           ;Multi_RX_testjig_v2.c: 2257: __nop();
  5652  0AAC  0000               	nop
  5653                           
  5654                           ;Multi_RX_testjig_v2.c: 2258: __nop();
  5655  0AAD  0000               	nop
  5656                           
  5657                           ;Multi_RX_testjig_v2.c: 2259: __nop();
  5658  0AAE  0000               	nop
  5659                           
  5660                           ;Multi_RX_testjig_v2.c: 2260: __nop();
  5661  0AAF  0000               	nop
  5662                           
  5663                           ;Multi_RX_testjig_v2.c: 2261: __nop();
  5664  0AB0  0000               	nop
  5665                           
  5666                           ;Multi_RX_testjig_v2.c: 2262: __nop();
  5667  0AB1  0000               	nop
  5668                           
  5669                           ;Multi_RX_testjig_v2.c: 2263: __nop();
  5670  0AB2  0000               	nop
  5671                           
  5672                           ;Multi_RX_testjig_v2.c: 2264: unsigned char i;
  5673                           ;Multi_RX_testjig_v2.c: 2265: for(i = 0; i < 16; i++)
  5674  0AB3  01F2               	clrf	debug_fast_tx@i
  5675  0AB4                     l703:	
  5676                           
  5677                           ;Multi_RX_testjig_v2.c: 2266: {
  5678                           ;Multi_RX_testjig_v2.c: 2267: LATD2 = data & 0x01;
  5679  0AB4  1C70               	btfss	debug_fast_tx@data,0
  5680  0AB5  2AB9               	goto	u2870
  5681  0AB6  0022               	movlb	2	; select bank2
  5682  0AB7  150F               	bsf	15,2	;volatile
  5683  0AB8  2ABB               	goto	l3094
  5684  0AB9                     u2870:	
  5685  0AB9  0022               	movlb	2	; select bank2
  5686  0ABA  110F               	bcf	15,2	;volatile
  5687  0ABB                     l3094:	
  5688  0ABB  3010               	movlw	16
  5689                           
  5690                           ;Multi_RX_testjig_v2.c: 2268: data = data >> 1;
  5691  0ABC  36F1               	lsrf	debug_fast_tx@data+1,f
  5692  0ABD  0CF0               	rrf	debug_fast_tx@data,f
  5693  0ABE  0AF2               	incf	debug_fast_tx@i,f
  5694  0ABF  0272               	subwf	debug_fast_tx@i,w
  5695  0AC0  1C03               	skipc
  5696  0AC1  2AB4               	goto	l703
  5697                           
  5698                           ;Multi_RX_testjig_v2.c: 2269: }
  5699                           ;Multi_RX_testjig_v2.c: 2270: __nop();
  5700  0AC2  0000               	nop
  5701                           
  5702                           ;Multi_RX_testjig_v2.c: 2271: __nop();
  5703  0AC3  0000               	nop
  5704                           
  5705                           ;Multi_RX_testjig_v2.c: 2272: __nop();
  5706  0AC4  0000               	nop
  5707                           
  5708                           ;Multi_RX_testjig_v2.c: 2273: __nop();
  5709  0AC5  0000               	nop
  5710                           
  5711                           ;Multi_RX_testjig_v2.c: 2274: __nop();
  5712  0AC6  0000               	nop
  5713                           
  5714                           ;Multi_RX_testjig_v2.c: 2275: __nop();
  5715  0AC7  0000               	nop
  5716                           
  5717                           ;Multi_RX_testjig_v2.c: 2276: LATD2 = 1;
  5718  0AC8  0022               	movlb	2	; select bank2
  5719  0AC9  150F               	bsf	15,2	;volatile
  5720                           
  5721                           ;Multi_RX_testjig_v2.c: 2277: __nop();
  5722  0ACA  0000               	nop
  5723                           
  5724                           ;Multi_RX_testjig_v2.c: 2278: __nop();
  5725  0ACB  0000               	nop
  5726                           
  5727                           ;Multi_RX_testjig_v2.c: 2279: __nop();
  5728  0ACC  0000               	nop
  5729                           
  5730                           ;Multi_RX_testjig_v2.c: 2280: __nop();
  5731  0ACD  0000               	nop
  5732                           
  5733                           ;Multi_RX_testjig_v2.c: 2281: __nop();
  5734  0ACE  0000               	nop
  5735                           
  5736                           ;Multi_RX_testjig_v2.c: 2282: __nop();
  5737  0ACF  0000               	nop
  5738                           
  5739                           ;Multi_RX_testjig_v2.c: 2283: __nop();
  5740  0AD0  0000               	nop
  5741                           
  5742                           ;Multi_RX_testjig_v2.c: 2284: __nop();
  5743  0AD1  0000               	nop
  5744                           
  5745                           ;Multi_RX_testjig_v2.c: 2285: GIE = 1;
  5746  0AD2  178B               	bsf	11,7	;volatile
  5747  0AD3  0008               	return
  5748  0AD4                     __end_of_debug_fast_tx:	
  5749  0AD4                     __ptext3:	
  5750 ;; *************** function _print_screen *****************
  5751 ;; Defined at:
  5752 ;;		line 1777 in file "Multi_RX_testjig_v2.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  top             2    4[COMMON] PTR const unsigned char 
  5755 ;;		 -> STR_175(12), STR_173(17), STR_171(16), STR_169(12), 
  5756 ;;		 -> STR_167(15), STR_165(17), STR_163(16), STR_161(12), 
  5757 ;;		 -> STR_159(15), STR_157(17), STR_155(9), STR_153(16), 
  5758 ;;		 -> STR_151(5), STR_149(8), STR_147(14), STR_145(16), 
  5759 ;;		 -> STR_143(9), STR_141(12), STR_139(10), STR_137(16), 
  5760 ;;		 -> STR_133(10), STR_129(14), STR_125(13), STR_117(8), 
  5761 ;;		 -> STR_115(8), STR_113(6), STR_111(8), STR_109(8), 
  5762 ;;		 -> STR_107(8), STR_93(8), STR_79(11), STR_65(12), 
  5763 ;;		 -> STR_51(11), STR_49(11), STR_43(13), STR_37(9), 
  5764 ;;		 -> STR_33(13), STR_31(19), STR_29(12), STR_27(19), 
  5765 ;;		 -> STR_5(15), STR_1(9), 
  5766 ;;  bottom          2    6[COMMON] PTR const unsigned char 
  5767 ;;		 -> STR_176(17), STR_174(13), STR_172(13), STR_170(13), 
  5768 ;;		 -> STR_168(13), STR_166(14), STR_164(14), STR_162(14), 
  5769 ;;		 -> STR_160(14), STR_158(8), STR_156(8), STR_154(9), 
  5770 ;;		 -> STR_152(9), STR_150(9), STR_148(14), STR_146(14), 
  5771 ;;		 -> STR_144(14), STR_142(14), STR_140(11), STR_138(13), 
  5772 ;;		 -> STR_134(10), STR_130(2), STR_126(2), STR_118(16), 
  5773 ;;		 -> STR_116(15), STR_114(6), STR_112(1), STR_110(7), 
  5774 ;;		 -> STR_108(10), STR_94(5), STR_80(5), STR_66(5), 
  5775 ;;		 -> STR_52(5), STR_50(1), STR_44(6), STR_38(18), 
  5776 ;;		 -> STR_34(6), STR_32(9), STR_30(13), STR_28(1), 
  5777 ;;		 -> STR_6(1), STR_2(17), 
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;		None               void
  5782 ;; Registers used:
  5783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/4
  5786 ;;		On exit  : 1F/4
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5792 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5793 ;;Total ram usage:        4 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; Hardware stack levels required when called:    3
  5796 ;; This function calls:
  5797 ;;		_clear_lcd
  5798 ;;		_i2c_Write_string
  5799 ;;		_i2c_first_line
  5800 ;;		_i2c_second_line
  5801 ;; This function is called by:
  5802 ;;		_main
  5803 ;;		_testjig_done
  5804 ;;		_print_error
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           
  5809                           ;psect for function _print_screen
  5810  0AD4                     _print_screen:	
  5811                           
  5812                           ;Multi_RX_testjig_v2.c: 1779: clear_lcd();
  5813                           
  5814                           ;incstack = 0
  5815                           ; Regs used in _print_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5816  0AD4  2355  3188         	fcall	_clear_lcd
  5817                           
  5818                           ;Multi_RX_testjig_v2.c: 1780: i2c_first_line();
  5819  0AD6  2344  3188         	fcall	_i2c_first_line
  5820                           
  5821                           ;Multi_RX_testjig_v2.c: 1781: i2c_Write_string(top);
  5822  0AD8  0875               	movf	print_screen@top+1,w
  5823  0AD9  00F2               	movwf	i2c_Write_string@data+1
  5824  0ADA  0874               	movf	print_screen@top,w
  5825  0ADB  00F1               	movwf	i2c_Write_string@data
  5826  0ADC  2382  3188         	fcall	_i2c_Write_string
  5827                           
  5828                           ;Multi_RX_testjig_v2.c: 1782: i2c_second_line();
  5829  0ADE  22E5  3188         	fcall	_i2c_second_line
  5830                           
  5831                           ;Multi_RX_testjig_v2.c: 1783: i2c_Write_string(bottom);
  5832  0AE0  0877               	movf	print_screen@bottom+1,w
  5833  0AE1  00F2               	movwf	i2c_Write_string@data+1
  5834  0AE2  0876               	movf	print_screen@bottom,w
  5835  0AE3  00F1               	movwf	i2c_Write_string@data
  5836  0AE4  2B82               	ljmp	l2926
  5837  0AE5                     __end_of_print_screen:	
  5838  0AE5                     __ptext4:	
  5839 ;; *************** function _i2c_second_line *****************
  5840 ;; Defined at:
  5841 ;;		line 1401 in file "Multi_RX_testjig_v2.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;		None
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;		None
  5846 ;; Return value:  Size  Location     Type
  5847 ;;		None               void
  5848 ;; Registers used:
  5849 ;;		wreg, status,2, status,0, pclath, cstack
  5850 ;; Tracked objects:
  5851 ;;		On entry : 1F/4
  5852 ;;		On exit  : 1F/4
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5859 ;;Total ram usage:        1 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; Hardware stack levels required when called:    2
  5862 ;; This function calls:
  5863 ;;		_i2c_Start
  5864 ;;		_i2c_Stop
  5865 ;;		_i2c_Write
  5866 ;; This function is called by:
  5867 ;;		_print_error
  5868 ;;		_print_screen
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           
  5873                           ;psect for function _i2c_second_line
  5874  0AE5                     _i2c_second_line:	
  5875                           
  5876                           ;Multi_RX_testjig_v2.c: 1403: i2c_Start();
  5877                           
  5878                           ;incstack = 0
  5879                           ; Regs used in _i2c_second_line: [wreg+status,2+status,0+pclath+cstack]
  5880  0AE5  23E1  3188         	fcall	_i2c_Start
  5881                           
  5882                           ;Multi_RX_testjig_v2.c: 1404: i2c_Write(0x7C);
  5883  0AE7  307C               	movlw	124
  5884  0AE8  23D5  3188         	fcall	_i2c_Write
  5885                           
  5886                           ;Multi_RX_testjig_v2.c: 1405: i2c_Write(0x00);
  5887  0AEA  3000               	movlw	0
  5888  0AEB  23D5  3188         	fcall	_i2c_Write
  5889                           
  5890                           ;Multi_RX_testjig_v2.c: 1406: i2c_Write(0xC0);
  5891  0AED  30C0               	movlw	192
  5892  0AEE  23D5  3188         	fcall	_i2c_Write
  5893                           
  5894                           ;Multi_RX_testjig_v2.c: 1407: _delay((unsigned long)((27)*(16000000/4000000.0)));
  5895  0AF0  3023               	movlw	35
  5896  0AF1  00F1               	movwf	??_i2c_second_line
  5897  0AF2                     u5747:	
  5898  0AF2  0BF1               	decfsz	??_i2c_second_line,f
  5899  0AF3  2AF2               	goto	u5747
  5900  0AF4  3200               	nop2	;nop
  5901                           
  5902                           ;Multi_RX_testjig_v2.c: 1408: i2c_Stop();
  5903  0AF5  2BE6               	ljmp	l2914
  5904  0AF6                     __end_of_i2c_second_line:	
  5905  0AF6                     __ptext2:	
  5906 ;; *************** function _print_error *****************
  5907 ;; Defined at:
  5908 ;;		line 1753 in file "Multi_RX_testjig_v2.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  top             2    8[COMMON] PTR const unsigned char 
  5911 ;;		 -> STR_135(12), STR_131(12), STR_127(12), STR_123(12), 
  5912 ;;		 -> STR_121(8), STR_119(8), STR_105(13), STR_103(13), 
  5913 ;;		 -> STR_101(12), STR_99(12), STR_97(12), STR_95(12), 
  5914 ;;		 -> STR_91(12), STR_89(15), STR_87(12), STR_85(16), 
  5915 ;;		 -> STR_83(12), STR_81(21), STR_77(12), STR_75(15), 
  5916 ;;		 -> STR_73(12), STR_71(16), STR_69(12), STR_67(21), 
  5917 ;;		 -> STR_63(12), STR_61(15), STR_59(12), STR_57(16), 
  5918 ;;		 -> STR_55(12), STR_53(21), STR_47(12), STR_45(12), 
  5919 ;;		 -> STR_41(12), STR_39(13), STR_35(12), STR_25(14), 
  5920 ;;		 -> STR_23(11), STR_21(15), STR_19(15), STR_17(14), 
  5921 ;;		 -> STR_15(14), STR_13(14), STR_11(11), STR_9(14), 
  5922 ;;		 -> STR_7(14), STR_3(9), 
  5923 ;;  bottom          2   10[COMMON] PTR const unsigned char 
  5924 ;;		 -> STR_136(4), STR_132(4), STR_128(4), STR_124(4), 
  5925 ;;		 -> STR_122(15), STR_120(17), STR_106(13), STR_104(14), 
  5926 ;;		 -> STR_102(5), STR_100(5), STR_98(5), STR_96(4), 
  5927 ;;		 -> STR_92(9), STR_90(8), STR_88(9), STR_86(8), 
  5928 ;;		 -> STR_84(9), STR_82(9), STR_78(9), STR_76(8), 
  5929 ;;		 -> STR_74(9), STR_72(8), STR_70(9), STR_68(9), 
  5930 ;;		 -> STR_64(9), STR_62(8), STR_60(9), STR_58(8), 
  5931 ;;		 -> STR_56(9), STR_54(9), STR_48(18), STR_46(14), 
  5932 ;;		 -> STR_42(3), STR_40(12), STR_36(3), STR_26(12), 
  5933 ;;		 -> STR_24(11), STR_22(13), STR_20(13), STR_18(13), 
  5934 ;;		 -> STR_16(13), STR_14(12), STR_12(11), STR_10(13), 
  5935 ;;		 -> STR_8(13), STR_4(14), 
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;		None
  5938 ;; Return value:  Size  Location     Type
  5939 ;;		None               void
  5940 ;; Registers used:
  5941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/5
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5947 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5949 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5950 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5951 ;;Total ram usage:        7 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    4
  5954 ;; This function calls:
  5955 ;;		_buzz_one
  5956 ;;		_clear_lcd
  5957 ;;		_debug_fast_tx
  5958 ;;		_i2c_Write_string
  5959 ;;		_i2c_first_line
  5960 ;;		_i2c_second_line
  5961 ;;		_power_supply_set
  5962 ;;		_print_screen
  5963 ;; This function is called by:
  5964 ;;		_main
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968                           
  5969                           ;psect for function _print_error
  5970  0AF6                     _print_error:	
  5971                           
  5972                           ;Multi_RX_testjig_v2.c: 1755: power_supply_set(3);
  5973                           
  5974                           ;incstack = 0
  5975                           ; Regs used in _print_error: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5976  0AF6  3003               	movlw	3
  5977  0AF7  23F3  3188         	fcall	_power_supply_set
  5978                           
  5979                           ;Multi_RX_testjig_v2.c: 1757: LATB5 = 0;
  5980  0AF9  0022               	movlb	2	; select bank2
  5981  0AFA  128D               	bcf	13,5	;volatile
  5982                           
  5983                           ;Multi_RX_testjig_v2.c: 1758: LATA6 = 0;
  5984  0AFB  130C               	bcf	12,6	;volatile
  5985                           
  5986                           ;Multi_RX_testjig_v2.c: 1759: TRISG1 = 1;
  5987  0AFC  0026               	movlb	6	; select bank6
  5988  0AFD  148D               	bsf	13,1	;volatile
  5989                           
  5990                           ;Multi_RX_testjig_v2.c: 1760: RE0 = 0;
  5991  0AFE  0020               	movlb	0	; select bank0
  5992  0AFF  1010               	bcf	16,0	;volatile
  5993                           
  5994                           ;Multi_RX_testjig_v2.c: 1761: debug_fast_tx(12345);
  5995  0B00  3039               	movlw	57
  5996  0B01  00F0               	movwf	debug_fast_tx@data
  5997  0B02  3030               	movlw	48
  5998  0B03  00F1               	movwf	debug_fast_tx@data+1
  5999  0B04  22A7  3188         	fcall	_debug_fast_tx
  6000                           
  6001                           ;Multi_RX_testjig_v2.c: 1762: buzz_one(1000);
  6002  0B06  30E8               	movlw	232
  6003  0B07  00F0               	movwf	buzz_one@time
  6004  0B08  3003               	movlw	3
  6005  0B09  00F1               	movwf	buzz_one@time+1
  6006  0B0A  23EB  3188         	fcall	_buzz_one
  6007  0B0C                     l3738:	
  6008                           
  6009                           ;Multi_RX_testjig_v2.c: 1764: {
  6010                           ;Multi_RX_testjig_v2.c: 1765: clear_lcd();
  6011  0B0C  2355  3188         	fcall	_clear_lcd
  6012                           
  6013                           ;Multi_RX_testjig_v2.c: 1766: i2c_first_line();
  6014  0B0E  2344  3188         	fcall	_i2c_first_line
  6015                           
  6016                           ;Multi_RX_testjig_v2.c: 1767: i2c_Write_string(top);
  6017  0B10  0879               	movf	print_error@top+1,w
  6018  0B11  00F2               	movwf	i2c_Write_string@data+1
  6019  0B12  0878               	movf	print_error@top,w
  6020  0B13  00F1               	movwf	i2c_Write_string@data
  6021  0B14  2382  3188         	fcall	_i2c_Write_string
  6022                           
  6023                           ;Multi_RX_testjig_v2.c: 1768: i2c_second_line();
  6024  0B16  22E5  3188         	fcall	_i2c_second_line
  6025                           
  6026                           ;Multi_RX_testjig_v2.c: 1769: i2c_Write_string(bottom);
  6027  0B18  087B               	movf	print_error@bottom+1,w
  6028  0B19  00F2               	movwf	i2c_Write_string@data+1
  6029  0B1A  087A               	movf	print_error@bottom,w
  6030  0B1B  00F1               	movwf	i2c_Write_string@data
  6031  0B1C  2382  3188         	fcall	_i2c_Write_string
  6032                           
  6033                           ;Multi_RX_testjig_v2.c: 1770: _delay((unsigned long)((2000)*(16000000/4000.0)));
  6034  0B1E  3029               	movlw	41
  6035  0B1F  0020               	movlb	0	; select bank0
  6036  0B20  00A2               	movwf	??_print_error+2
  6037  0B21  3096               	movlw	150
  6038  0B22  00A1               	movwf	??_print_error+1
  6039  0B23  30A6               	movlw	166
  6040  0B24  00A0               	movwf	??_print_error
  6041  0B25                     u5727:	
  6042  0B25  0BA0               	decfsz	??_print_error,f
  6043  0B26  2B25               	goto	u5727
  6044  0B27  0BA1               	decfsz	??_print_error+1,f
  6045  0B28  2B25               	goto	u5727
  6046  0B29  0BA2               	decfsz	??_print_error+2,f
  6047  0B2A  2B25               	goto	u5727
  6048                           
  6049                           ;Multi_RX_testjig_v2.c: 1771: print_screen("Press START", " to restart test");
  6050  0B2B  3055               	movlw	low ((STR_168+1)| (0+32768))
  6051  0B2C  00F4               	movwf	print_screen@top
  6052  0B2D  3092               	movlw	high ((STR_168+1)| (0+32768))
  6053  0B2E  00F5               	movwf	print_screen@top+1
  6054  0B2F  30BA               	movlw	low (STR_176| (0+32768))
  6055  0B30  00F6               	movwf	print_screen@bottom
  6056  0B31  3090               	movlw	high (STR_176| (0+32768))
  6057  0B32  00F7               	movwf	print_screen@bottom+1
  6058  0B33  22D4  3188         	fcall	_print_screen
  6059                           
  6060                           ;Multi_RX_testjig_v2.c: 1773: _delay((unsigned long)((1200)*(16000000/4000.0)));
  6061  0B35  3019               	movlw	25
  6062  0B36  0020               	movlb	0	; select bank0
  6063  0B37  00A2               	movwf	??_print_error+2
  6064  0B38  305A               	movlw	90
  6065  0B39  00A1               	movwf	??_print_error+1
  6066  0B3A  30C8               	movlw	200
  6067  0B3B  00A0               	movwf	??_print_error
  6068  0B3C                     u5737:	
  6069  0B3C  0BA0               	decfsz	??_print_error,f
  6070  0B3D  2B3C               	goto	u5737
  6071  0B3E  0BA1               	decfsz	??_print_error+1,f
  6072  0B3F  2B3C               	goto	u5737
  6073  0B40  0BA2               	decfsz	??_print_error+2,f
  6074  0B41  2B3C               	goto	u5737
  6075  0B42  3200               	nop2
  6076  0B43  2B0C               	goto	l3738
  6077  0B44                     __end_of_print_error:	
  6078  0B44                     __ptext5:	
  6079 ;; *************** function _i2c_first_line *****************
  6080 ;; Defined at:
  6081 ;;		line 1391 in file "Multi_RX_testjig_v2.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;		None
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;		None
  6086 ;; Return value:  Size  Location     Type
  6087 ;;		None               void
  6088 ;; Registers used:
  6089 ;;		wreg, status,2, status,0, pclath, cstack
  6090 ;; Tracked objects:
  6091 ;;		On entry : 1F/4
  6092 ;;		On exit  : 1F/4
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6097 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6099 ;;Total ram usage:        1 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; Hardware stack levels required when called:    2
  6102 ;; This function calls:
  6103 ;;		_i2c_Start
  6104 ;;		_i2c_Stop
  6105 ;;		_i2c_Write
  6106 ;; This function is called by:
  6107 ;;		_print_error
  6108 ;;		_print_screen
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           
  6113                           ;psect for function _i2c_first_line
  6114  0B44                     _i2c_first_line:	
  6115                           
  6116                           ;Multi_RX_testjig_v2.c: 1393: i2c_Start();
  6117                           
  6118                           ;incstack = 0
  6119                           ; Regs used in _i2c_first_line: [wreg+status,2+status,0+pclath+cstack]
  6120  0B44  23E1  3188         	fcall	_i2c_Start
  6121                           
  6122                           ;Multi_RX_testjig_v2.c: 1394: i2c_Write(0x7C);
  6123  0B46  307C               	movlw	124
  6124  0B47  23D5  3188         	fcall	_i2c_Write
  6125                           
  6126                           ;Multi_RX_testjig_v2.c: 1395: i2c_Write(0x00);
  6127  0B49  3000               	movlw	0
  6128  0B4A  23D5  3188         	fcall	_i2c_Write
  6129                           
  6130                           ;Multi_RX_testjig_v2.c: 1396: i2c_Write(0x80);
  6131  0B4C  3080               	movlw	128
  6132  0B4D  23D5  3188         	fcall	_i2c_Write
  6133                           
  6134                           ;Multi_RX_testjig_v2.c: 1397: _delay((unsigned long)((27)*(16000000/4000000.0)));
  6135  0B4F  3023               	movlw	35
  6136  0B50  00F1               	movwf	??_i2c_first_line
  6137  0B51                     u5757:	
  6138  0B51  0BF1               	decfsz	??_i2c_first_line,f
  6139  0B52  2B51               	goto	u5757
  6140  0B53  3200               	nop2	;nop
  6141                           
  6142                           ;Multi_RX_testjig_v2.c: 1398: i2c_Stop();
  6143  0B54  2BE6               	ljmp	l2914
  6144  0B55                     __end_of_i2c_first_line:	
  6145  0B55                     __ptext7:	
  6146 ;; *************** function _clear_lcd *****************
  6147 ;; Defined at:
  6148 ;;		line 1381 in file "Multi_RX_testjig_v2.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;		None
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;		None
  6153 ;; Return value:  Size  Location     Type
  6154 ;;		None               void
  6155 ;; Registers used:
  6156 ;;		wreg, status,2, status,0, pclath, cstack
  6157 ;; Tracked objects:
  6158 ;;		On entry : 0/0
  6159 ;;		On exit  : 1F/4
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6165 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6166 ;;Total ram usage:        2 bytes
  6167 ;; Hardware stack levels used:    1
  6168 ;; Hardware stack levels required when called:    2
  6169 ;; This function calls:
  6170 ;;		_i2c_Start
  6171 ;;		_i2c_Stop
  6172 ;;		_i2c_Write
  6173 ;; This function is called by:
  6174 ;;		_main
  6175 ;;		_print_error
  6176 ;;		_print_screen
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180                           
  6181                           ;psect for function _clear_lcd
  6182  0B55                     _clear_lcd:	
  6183                           
  6184                           ;Multi_RX_testjig_v2.c: 1383: i2c_Start();
  6185                           
  6186                           ;incstack = 0
  6187                           ; Regs used in _clear_lcd: [wreg+status,2+status,0+pclath+cstack]
  6188  0B55  23E1  3188         	fcall	_i2c_Start
  6189                           
  6190                           ;Multi_RX_testjig_v2.c: 1384: i2c_Write(0x7C);
  6191  0B57  307C               	movlw	124
  6192  0B58  23D5  3188         	fcall	_i2c_Write
  6193                           
  6194                           ;Multi_RX_testjig_v2.c: 1385: i2c_Write(0x00);
  6195  0B5A  3000               	movlw	0
  6196  0B5B  23D5  3188         	fcall	_i2c_Write
  6197                           
  6198                           ;Multi_RX_testjig_v2.c: 1386: i2c_Write(0x01);
  6199  0B5D  3001               	movlw	1
  6200  0B5E  23D5  3188         	fcall	_i2c_Write
  6201                           
  6202                           ;Multi_RX_testjig_v2.c: 1387: _delay((unsigned long)((2)*(16000000/4000.0)));
  6203  0B60  300B               	movlw	11
  6204  0B61  00F2               	movwf	??_clear_lcd+1
  6205  0B62  3062               	movlw	98
  6206  0B63  00F1               	movwf	??_clear_lcd
  6207  0B64                     u5767:	
  6208  0B64  0BF1               	decfsz	??_clear_lcd,f
  6209  0B65  2B64               	goto	u5767
  6210  0B66  0BF2               	decfsz	??_clear_lcd+1,f
  6211  0B67  2B64               	goto	u5767
  6212  0B68  0000               	nop
  6213                           
  6214                           ;Multi_RX_testjig_v2.c: 1388: i2c_Stop();
  6215  0B69  2BE6               	ljmp	l2914
  6216  0B6A                     __end_of_clear_lcd:	
  6217  0B6A                     __ptext29:	
  6218 ;; *************** function _digitalpot *****************
  6219 ;; Defined at:
  6220 ;;		line 2234 in file "Multi_RX_testjig_v2.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  value           1    wreg     unsigned char 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  value           1    3[COMMON] unsigned char 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;		None               void
  6227 ;; Registers used:
  6228 ;;		wreg, status,2, status,0, pclath, cstack
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/4
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6235 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6237 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6238 ;;Total ram usage:        3 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    2
  6241 ;; This function calls:
  6242 ;;		_i2c_Start
  6243 ;;		_i2c_Stop
  6244 ;;		_i2c_Write
  6245 ;; This function is called by:
  6246 ;;		_Vout_set
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           
  6251                           ;psect for function _digitalpot
  6252  0B6A                     _digitalpot:	
  6253                           
  6254                           ;incstack = 0
  6255                           ; Regs used in _digitalpot: [wreg+status,2+status,0+pclath+cstack]
  6256                           ;digitalpot@value stored from wreg
  6257  0B6A  00F3               	movwf	digitalpot@value
  6258                           
  6259                           ;Multi_RX_testjig_v2.c: 2236: i2c_Start();
  6260  0B6B  23E1  3188         	fcall	_i2c_Start
  6261                           
  6262                           ;Multi_RX_testjig_v2.c: 2237: i2c_Write(0x5C);
  6263  0B6D  305C               	movlw	92
  6264  0B6E  23D5  3188         	fcall	_i2c_Write
  6265                           
  6266                           ;Multi_RX_testjig_v2.c: 2238: i2c_Write(0b00000000);
  6267  0B70  3000               	movlw	0
  6268  0B71  23D5  3188         	fcall	_i2c_Write
  6269                           
  6270                           ;Multi_RX_testjig_v2.c: 2239: i2c_Write(value);
  6271  0B73  0873               	movf	digitalpot@value,w
  6272  0B74  23D5  3188         	fcall	_i2c_Write
  6273                           
  6274                           ;Multi_RX_testjig_v2.c: 2240: i2c_Stop();
  6275  0B76  23E6  3188         	fcall	_i2c_Stop
  6276                           
  6277                           ;Multi_RX_testjig_v2.c: 2241: _delay((unsigned long)((20)*(16000000/4000.0)));
  6278  0B78  3068               	movlw	104
  6279  0B79  00F2               	movwf	??_digitalpot+1
  6280  0B7A  30E4               	movlw	228
  6281  0B7B  00F1               	movwf	??_digitalpot
  6282  0B7C                     u5797:	
  6283  0B7C  0BF1               	decfsz	??_digitalpot,f
  6284  0B7D  2B7C               	goto	u5797
  6285  0B7E  0BF2               	decfsz	??_digitalpot+1,f
  6286  0B7F  2B7C               	goto	u5797
  6287  0B80  0000               	nop
  6288  0B81  0008               	return
  6289  0B82                     __end_of_digitalpot:	
  6290  0B82                     __ptext6:	
  6291 ;; *************** function _i2c_Write_string *****************
  6292 ;; Defined at:
  6293 ;;		line 1313 in file "Multi_RX_testjig_v2.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;  data            2    1[COMMON] PTR const unsigned char 
  6296 ;;		 -> STR_176(17), STR_175(12), STR_174(13), STR_173(17), 
  6297 ;;		 -> STR_172(13), STR_171(16), STR_170(13), STR_169(12), 
  6298 ;;		 -> STR_168(13), STR_167(15), STR_166(14), STR_165(17), 
  6299 ;;		 -> STR_164(14), STR_163(16), STR_162(14), STR_161(12), 
  6300 ;;		 -> STR_160(14), STR_159(15), STR_158(8), STR_157(17), 
  6301 ;;		 -> STR_156(8), STR_155(9), STR_154(9), STR_153(16), 
  6302 ;;		 -> STR_152(9), STR_151(5), STR_150(9), STR_149(8), 
  6303 ;;		 -> STR_148(14), STR_147(14), STR_146(14), STR_145(16), 
  6304 ;;		 -> STR_144(14), STR_143(9), STR_142(14), STR_141(12), 
  6305 ;;		 -> STR_140(11), STR_139(10), STR_138(13), STR_137(16), 
  6306 ;;		 -> STR_136(4), STR_135(12), STR_134(10), STR_133(10), 
  6307 ;;		 -> STR_132(4), STR_131(12), STR_130(2), STR_129(14), 
  6308 ;;		 -> STR_128(4), STR_127(12), STR_126(2), STR_125(13), 
  6309 ;;		 -> STR_124(4), STR_123(12), STR_122(15), STR_121(8), 
  6310 ;;		 -> STR_120(17), STR_119(8), STR_118(16), STR_117(8), 
  6311 ;;		 -> STR_116(15), STR_115(8), STR_114(6), STR_113(6), 
  6312 ;;		 -> STR_112(1), STR_111(8), STR_110(7), STR_109(8), 
  6313 ;;		 -> STR_108(10), STR_107(8), STR_106(13), STR_105(13), 
  6314 ;;		 -> STR_104(14), STR_103(13), STR_102(5), STR_101(12), 
  6315 ;;		 -> STR_100(5), STR_99(12), STR_98(5), STR_97(12), 
  6316 ;;		 -> STR_96(4), STR_95(12), STR_94(5), STR_93(8), 
  6317 ;;		 -> STR_92(9), STR_91(12), STR_90(8), STR_89(15), 
  6318 ;;		 -> STR_88(9), STR_87(12), STR_86(8), STR_85(16), 
  6319 ;;		 -> STR_84(9), STR_83(12), STR_82(9), STR_81(21), 
  6320 ;;		 -> STR_80(5), STR_79(11), STR_78(9), STR_77(12), 
  6321 ;;		 -> STR_76(8), STR_75(15), STR_74(9), STR_73(12), 
  6322 ;;		 -> STR_72(8), STR_71(16), STR_70(9), STR_69(12), 
  6323 ;;		 -> STR_68(9), STR_67(21), STR_66(5), STR_65(12), 
  6324 ;;		 -> STR_64(9), STR_63(12), STR_62(8), STR_61(15), 
  6325 ;;		 -> STR_60(9), STR_59(12), STR_58(8), STR_57(16), 
  6326 ;;		 -> STR_56(9), STR_55(12), STR_54(9), STR_53(21), 
  6327 ;;		 -> STR_52(5), STR_51(11), STR_50(1), STR_49(11), 
  6328 ;;		 -> STR_48(18), STR_47(12), STR_46(14), STR_45(12), 
  6329 ;;		 -> STR_44(6), STR_43(13), STR_42(3), STR_41(12), 
  6330 ;;		 -> STR_40(12), STR_39(13), STR_38(18), STR_37(9), 
  6331 ;;		 -> STR_36(3), STR_35(12), STR_34(6), STR_33(13), 
  6332 ;;		 -> STR_32(9), STR_31(19), STR_30(13), STR_29(12), 
  6333 ;;		 -> STR_28(1), STR_27(19), STR_26(12), STR_25(14), 
  6334 ;;		 -> STR_24(11), STR_23(11), STR_22(13), STR_21(15), 
  6335 ;;		 -> STR_20(13), STR_19(15), STR_18(13), STR_17(14), 
  6336 ;;		 -> STR_16(13), STR_15(14), STR_14(12), STR_13(14), 
  6337 ;;		 -> STR_12(11), STR_11(11), STR_10(13), STR_9(14), 
  6338 ;;		 -> STR_8(13), STR_7(14), STR_6(1), STR_5(15), 
  6339 ;;		 -> STR_4(14), STR_3(9), STR_2(17), STR_1(9), 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;		None               void
  6344 ;; Registers used:
  6345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 1F/4
  6348 ;;		On exit  : 1F/4
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6353 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6354 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6355 ;;Total ram usage:        3 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    2
  6358 ;; This function calls:
  6359 ;;		_i2c_Start
  6360 ;;		_i2c_Stop
  6361 ;;		_i2c_Write
  6362 ;; This function is called by:
  6363 ;;		_print_error
  6364 ;;		_print_screen
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           
  6369                           ;psect for function _i2c_Write_string
  6370  0B82                     _i2c_Write_string:	
  6371  0B82                     l2926:	
  6372                           ;incstack = 0
  6373                           ; Regs used in _i2c_Write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6374                           
  6375                           
  6376                           ;Multi_RX_testjig_v2.c: 1315: i2c_Start();
  6377  0B82  23E1  3188         	fcall	_i2c_Start
  6378                           
  6379                           ;Multi_RX_testjig_v2.c: 1316: i2c_Write(0x7C);
  6380  0B84  307C               	movlw	124
  6381  0B85  23D5  3188         	fcall	_i2c_Write
  6382                           
  6383                           ;Multi_RX_testjig_v2.c: 1317: i2c_Write(0x40);
  6384  0B87  3040               	movlw	64
  6385  0B88  23D5  3188         	fcall	_i2c_Write
  6386  0B8A                     l2936:	
  6387                           ;Multi_RX_testjig_v2.c: 1319: while(*data != (0))
  6388                           
  6389  0B8A  0871               	movf	i2c_Write_string@data,w
  6390  0B8B  0084               	movwf	4
  6391  0B8C  0872               	movf	i2c_Write_string@data+1,w
  6392  0B8D  0085               	movwf	5
  6393  0B8E  0012               	moviw fsr0++
  6394  0B8F  1903               	btfsc	3,2
  6395  0B90  2B9C               	goto	l2938
  6396                           
  6397                           ;Multi_RX_testjig_v2.c: 1320: {
  6398                           ;Multi_RX_testjig_v2.c: 1321: i2c_Write(*data);
  6399  0B91  0871               	movf	i2c_Write_string@data,w
  6400  0B92  0084               	movwf	4
  6401  0B93  0872               	movf	i2c_Write_string@data+1,w
  6402  0B94  0085               	movwf	5
  6403  0B95  0800               	movf	0,w	;code access
  6404  0B96  23D5  3188         	fcall	_i2c_Write
  6405                           
  6406                           ;Multi_RX_testjig_v2.c: 1322: data++;
  6407  0B98  0AF1               	incf	i2c_Write_string@data,f
  6408  0B99  1903               	skipnz
  6409  0B9A  0AF2               	incf	i2c_Write_string@data+1,f
  6410  0B9B  2B8A               	goto	l2936
  6411  0B9C                     l2938:	
  6412                           
  6413                           ;Multi_RX_testjig_v2.c: 1323: }
  6414                           ;Multi_RX_testjig_v2.c: 1324: i2c_Stop();
  6415  0B9C  2BE6               	ljmp	l2914
  6416  0B9D                     __end_of_i2c_Write_string:	
  6417  0B9D                     __ptext17:	
  6418 ;; *************** function _init_i2c_lcd_5v *****************
  6419 ;; Defined at:
  6420 ;;		line 1337 in file "Multi_RX_testjig_v2.c"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;  contrast        1    wreg     unsigned char 
  6423 ;;  single1_doub    1    1[COMMON] unsigned char 
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;  contrast        1    4[COMMON] unsigned char 
  6426 ;; Return value:  Size  Location     Type
  6427 ;;		None               void
  6428 ;; Registers used:
  6429 ;;		wreg, status,2, status,0, pclath, cstack
  6430 ;; Tracked objects:
  6431 ;;		On entry : 1F/4
  6432 ;;		On exit  : 1F/4
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6435 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6437 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6438 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6439 ;;Total ram usage:        4 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; Hardware stack levels required when called:    2
  6442 ;; This function calls:
  6443 ;;		_i2c_Start
  6444 ;;		_i2c_Stop
  6445 ;;		_i2c_Write
  6446 ;; This function is called by:
  6447 ;;		_main
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           
  6452                           ;psect for function _init_i2c_lcd_5v
  6453  0B9D                     _init_i2c_lcd_5v:	
  6454                           
  6455                           ;incstack = 0
  6456                           ; Regs used in _init_i2c_lcd_5v: [wreg+status,2+status,0+pclath+cstack]
  6457                           ;init_i2c_lcd_5v@contrast stored from wreg
  6458  0B9D  00F4               	movwf	init_i2c_lcd_5v@contrast
  6459                           
  6460                           ;Multi_RX_testjig_v2.c: 1339: i2c_Start();
  6461  0B9E  23E1  3188         	fcall	_i2c_Start
  6462                           
  6463                           ;Multi_RX_testjig_v2.c: 1340: i2c_Write(0x7C);
  6464  0BA0  307C               	movlw	124
  6465  0BA1  23D5  3188         	fcall	_i2c_Write
  6466                           
  6467                           ;Multi_RX_testjig_v2.c: 1341: i2c_Write(0x00);
  6468  0BA3  3000               	movlw	0
  6469  0BA4  23D5  3188         	fcall	_i2c_Write
  6470                           
  6471                           ;Multi_RX_testjig_v2.c: 1342: i2c_Write(0x39);
  6472  0BA6  3039               	movlw	57
  6473  0BA7  23D5  3188         	fcall	_i2c_Write
  6474                           
  6475                           ;Multi_RX_testjig_v2.c: 1343: i2c_Write(0x1C);
  6476  0BA9  301C               	movlw	28
  6477  0BAA  23D5  3188         	fcall	_i2c_Write
  6478                           
  6479                           ;Multi_RX_testjig_v2.c: 1344: i2c_Write(0x70 | contrast);
  6480  0BAC  0874               	movf	init_i2c_lcd_5v@contrast,w
  6481  0BAD  3870               	iorlw	112
  6482  0BAE  23D5  3188         	fcall	_i2c_Write
  6483                           
  6484                           ;Multi_RX_testjig_v2.c: 1345: i2c_Write(0x50);
  6485  0BB0  3050               	movlw	80
  6486  0BB1  23D5  3188         	fcall	_i2c_Write
  6487                           
  6488                           ;Multi_RX_testjig_v2.c: 1346: i2c_Write(0x6C);
  6489  0BB3  306C               	movlw	108
  6490  0BB4  23D5  3188         	fcall	_i2c_Write
  6491                           
  6492                           ;Multi_RX_testjig_v2.c: 1347: if(single1_double2 == 1)
  6493  0BB6  0B71               	decfsz	init_i2c_lcd_5v@single1_double2,w
  6494  0BB7  2BBB               	goto	l3624
  6495                           
  6496                           ;Multi_RX_testjig_v2.c: 1348: i2c_Write(0x38);
  6497  0BB8  3038               	movlw	56
  6498  0BB9  23D5  3188         	fcall	_i2c_Write
  6499  0BBB                     l3624:	
  6500                           
  6501                           ;Multi_RX_testjig_v2.c: 1349: if(single1_double2 == 2)
  6502  0BBB  3002               	movlw	2
  6503  0BBC  0671               	xorwf	init_i2c_lcd_5v@single1_double2,w
  6504  0BBD  1D03               	btfss	3,2
  6505  0BBE  2BC2               	goto	l531
  6506                           
  6507                           ;Multi_RX_testjig_v2.c: 1350: i2c_Write(0x34);
  6508  0BBF  3034               	movlw	52
  6509  0BC0  23D5  3188         	fcall	_i2c_Write
  6510  0BC2                     l531:	
  6511                           
  6512                           ;Multi_RX_testjig_v2.c: 1351: i2c_Write(0x0C);
  6513  0BC2  300C               	movlw	12
  6514  0BC3  23D5  3188         	fcall	_i2c_Write
  6515                           
  6516                           ;Multi_RX_testjig_v2.c: 1352: i2c_Write(0x06);
  6517  0BC5  3006               	movlw	6
  6518  0BC6  23D5  3188         	fcall	_i2c_Write
  6519                           
  6520                           ;Multi_RX_testjig_v2.c: 1353: i2c_Write(0x01);
  6521  0BC8  3001               	movlw	1
  6522  0BC9  23D5  3188         	fcall	_i2c_Write
  6523                           
  6524                           ;Multi_RX_testjig_v2.c: 1354: _delay((unsigned long)((2)*(16000000/4000.0)));
  6525  0BCB  300B               	movlw	11
  6526  0BCC  00F3               	movwf	??_init_i2c_lcd_5v+1
  6527  0BCD  3062               	movlw	98
  6528  0BCE  00F2               	movwf	??_init_i2c_lcd_5v
  6529  0BCF                     u5777:	
  6530  0BCF  0BF2               	decfsz	??_init_i2c_lcd_5v,f
  6531  0BD0  2BCF               	goto	u5777
  6532  0BD1  0BF3               	decfsz	??_init_i2c_lcd_5v+1,f
  6533  0BD2  2BCF               	goto	u5777
  6534  0BD3  0000               	nop
  6535                           
  6536                           ;Multi_RX_testjig_v2.c: 1355: i2c_Stop();
  6537  0BD4  2BE6               	ljmp	l2914
  6538  0BD5                     __end_of_init_i2c_lcd_5v:	
  6539  0BD5                     __ptext30:	
  6540 ;; *************** function _i2c_Write *****************
  6541 ;; Defined at:
  6542 ;;		line 1299 in file "Multi_RX_testjig_v2.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;  data            1    wreg     unsigned char 
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;  data            1    0[COMMON] unsigned char 
  6547 ;; Return value:  Size  Location     Type
  6548 ;;		None               void
  6549 ;; Registers used:
  6550 ;;		wreg, status,2
  6551 ;; Tracked objects:
  6552 ;;		On entry : 1F/4
  6553 ;;		On exit  : 1F/4
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6560 ;;Total ram usage:        1 bytes
  6561 ;; Hardware stack levels used:    1
  6562 ;; Hardware stack levels required when called:    1
  6563 ;; This function calls:
  6564 ;;		Nothing
  6565 ;; This function is called by:
  6566 ;;		_i2c_Write_string
  6567 ;;		_i2c_write_char
  6568 ;;		_init_i2c_lcd_5v
  6569 ;;		_clear_lcd
  6570 ;;		_i2c_first_line
  6571 ;;		_i2c_second_line
  6572 ;;		_lcd_set_cursor
  6573 ;;		_digitalpot
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           
  6578                           ;psect for function _i2c_Write
  6579  0BD5                     _i2c_Write:	
  6580                           
  6581                           ;incstack = 0
  6582                           ; Regs used in _i2c_Write: [wreg+status,2]
  6583                           ;i2c_Write@data stored from wreg
  6584  0BD5  00F0               	movwf	i2c_Write@data
  6585                           
  6586                           ;Multi_RX_testjig_v2.c: 1301: SSP1BUF = data;
  6587  0BD6  0870               	movf	i2c_Write@data,w
  6588  0BD7  0091               	movwf	17	;volatile
  6589  0BD8                     l506:	
  6590                           ;Multi_RX_testjig_v2.c: 1302: while(SSP1STATbits.BF == 1);
  6591                           
  6592  0BD8  1814               	btfsc	20,0	;volatile
  6593  0BD9  2BD8               	goto	l506
  6594  0BDA                     l2910:	
  6595  0BDA  0816               	movf	22,w	;volatile
  6596  0BDB  391F               	andlw	31
  6597  0BDC  1D03               	btfss	3,2
  6598  0BDD  2BDA               	goto	l2910
  6599  0BDE  1D14               	btfss	20,2	;volatile
  6600  0BDF  0008               	return
  6601  0BE0  2BDA               	goto	l2910
  6602  0BE1                     __end_of_i2c_Write:	
  6603  0BE1                     __ptext32:	
  6604 ;; *************** function _i2c_Start *****************
  6605 ;; Defined at:
  6606 ;;		line 1290 in file "Multi_RX_testjig_v2.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;		None
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;		None
  6611 ;; Return value:  Size  Location     Type
  6612 ;;		None               void
  6613 ;; Registers used:
  6614 ;;		None
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/4
  6617 ;;		On exit  : 1F/4
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6624 ;;Total ram usage:        0 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    1
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_i2c_Write_string
  6631 ;;		_i2c_write_char
  6632 ;;		_init_i2c_lcd_5v
  6633 ;;		_clear_lcd
  6634 ;;		_i2c_first_line
  6635 ;;		_i2c_second_line
  6636 ;;		_lcd_set_cursor
  6637 ;;		_digitalpot
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641                           
  6642                           ;psect for function _i2c_Start
  6643  0BE1                     _i2c_Start:	
  6644                           
  6645                           ;Multi_RX_testjig_v2.c: 1293: SSP1CON2bits.SEN = 1;
  6646                           
  6647                           ;incstack = 0
  6648                           ; Regs used in _i2c_Start: []
  6649  0BE1  0024               	movlb	4	; select bank4
  6650  0BE2  1416               	bsf	22,0	;volatile
  6651  0BE3                     l500:	
  6652                           ;Multi_RX_testjig_v2.c: 1295: while(SSP1CON2bits.SEN == 1);
  6653                           
  6654  0BE3  1C16               	btfss	22,0	;volatile
  6655  0BE4  0008               	return
  6656  0BE5  2BE3               	goto	l500
  6657  0BE6                     __end_of_i2c_Start:	
  6658  0BE6                     __ptext31:	
  6659 ;; *************** function _i2c_Stop *****************
  6660 ;; Defined at:
  6661 ;;		line 1306 in file "Multi_RX_testjig_v2.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;		None
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;		None
  6666 ;; Return value:  Size  Location     Type
  6667 ;;		None               void
  6668 ;; Registers used:
  6669 ;;		None
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/4
  6672 ;;		On exit  : 1F/4
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6679 ;;Total ram usage:        0 bytes
  6680 ;; Hardware stack levels used:    1
  6681 ;; Hardware stack levels required when called:    1
  6682 ;; This function calls:
  6683 ;;		Nothing
  6684 ;; This function is called by:
  6685 ;;		_i2c_Write_string
  6686 ;;		_i2c_write_char
  6687 ;;		_init_i2c_lcd_5v
  6688 ;;		_clear_lcd
  6689 ;;		_i2c_first_line
  6690 ;;		_i2c_second_line
  6691 ;;		_lcd_set_cursor
  6692 ;;		_digitalpot
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           
  6697                           ;psect for function _i2c_Stop
  6698  0BE6                     _i2c_Stop:	
  6699  0BE6                     l2914:	
  6700                           ;incstack = 0
  6701                           ; Regs used in _i2c_Stop: []
  6702                           
  6703                           
  6704                           ;Multi_RX_testjig_v2.c: 1308: SSP1CON2bits.PEN = 1;
  6705  0BE6  0024               	movlb	4	; select bank4
  6706  0BE7  1516               	bsf	22,2	;volatile
  6707  0BE8                     l515:	
  6708                           ;Multi_RX_testjig_v2.c: 1309: while(SSP1CON2bits.PEN == 1);
  6709                           
  6710  0BE8  1D16               	btfss	22,2	;volatile
  6711  0BE9  0008               	return
  6712  0BEA  2BE8               	goto	l515
  6713  0BEB                     __end_of_i2c_Stop:	
  6714  0BEB                     __ptext10:	
  6715 ;; *************** function _buzz_one *****************
  6716 ;; Defined at:
  6717 ;;		line 1280 in file "Multi_RX_testjig_v2.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  time            2    0[COMMON] unsigned int 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;		None               void
  6724 ;; Registers used:
  6725 ;;		wreg
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/4
  6728 ;;		On exit  : 1F/2
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6734 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6735 ;;Total ram usage:        2 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; Hardware stack levels required when called:    1
  6738 ;; This function calls:
  6739 ;;		Nothing
  6740 ;; This function is called by:
  6741 ;;		_testjig_done
  6742 ;;		_print_error
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           
  6747                           ;psect for function _buzz_one
  6748  0BEB                     _buzz_one:	
  6749                           
  6750                           ;Multi_RX_testjig_v2.c: 1282: buzz_timer = time;
  6751                           
  6752                           ;incstack = 0
  6753                           ; Regs used in _buzz_one: [wreg]
  6754  0BEB  0871               	movf	buzz_one@time+1,w
  6755  0BEC  0021               	movlb	1	; select bank1
  6756  0BED  00A3               	movwf	(_buzz_timer+1)^(0+128)	;volatile
  6757  0BEE  0870               	movf	buzz_one@time,w
  6758  0BEF  00A2               	movwf	_buzz_timer^(0+128)	;volatile
  6759                           
  6760                           ;Multi_RX_testjig_v2.c: 1283: LATC5 = 1;
  6761  0BF0  0022               	movlb	2	; select bank2
  6762  0BF1  168E               	bsf	14,5	;volatile
  6763  0BF2  0008               	return
  6764  0BF3                     __end_of_buzz_one:	
  6765  0BF3                     __ptext8:	
  6766 ;; *************** function _power_supply_set *****************
  6767 ;; Defined at:
  6768 ;;		line 2156 in file "Multi_RX_testjig_v2.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;  supply          1    wreg     unsigned char 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  supply          1    0[COMMON] unsigned char 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;		None               void
  6775 ;; Registers used:
  6776 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/4
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6785 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6786 ;;Total ram usage:        1 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; Hardware stack levels required when called:    1
  6789 ;; This function calls:
  6790 ;;		Nothing
  6791 ;; This function is called by:
  6792 ;;		_main
  6793 ;;		_testjig_done
  6794 ;;		_print_error
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798                           
  6799                           ;psect for function _power_supply_set
  6800  0BF3                     _power_supply_set:	
  6801                           
  6802                           ;incstack = 0
  6803                           ; Regs used in _power_supply_set: [wreg-fsr0h+status,2+status,0]
  6804                           ;power_supply_set@supply stored from wreg
  6805  0BF3  00F0               	movwf	power_supply_set@supply
  6806                           
  6807                           ;Multi_RX_testjig_v2.c: 2158: switch(supply)
  6808  0BF4  2C08               	goto	l3102
  6809  0BF5                     l678:	
  6810                           ;Multi_RX_testjig_v2.c: 2159: {
  6811                           ;Multi_RX_testjig_v2.c: 2160: case 0:
  6812                           
  6813                           
  6814                           ;Multi_RX_testjig_v2.c: 2161: LATD4 = 1;
  6815  0BF5  0022               	movlb	2	; select bank2
  6816  0BF6  160F               	bsf	15,4	;volatile
  6817                           
  6818                           ;Multi_RX_testjig_v2.c: 2163: LATD5 = 1;
  6819  0BF7  168F               	bsf	15,5	;volatile
  6820                           
  6821                           ;Multi_RX_testjig_v2.c: 2167: break;
  6822  0BF8  0008               	return
  6823  0BF9                     l680:	
  6824                           ;Multi_RX_testjig_v2.c: 2168: case 1:
  6825                           
  6826                           
  6827                           ;Multi_RX_testjig_v2.c: 2169: LATD4 = 1;
  6828  0BF9  0022               	movlb	2	; select bank2
  6829  0BFA  160F               	bsf	15,4	;volatile
  6830                           
  6831                           ;Multi_RX_testjig_v2.c: 2170: LATD5 = 0;
  6832  0BFB  128F               	bcf	15,5	;volatile
  6833                           
  6834                           ;Multi_RX_testjig_v2.c: 2171: LATD6 = 1;
  6835  0BFC  170F               	bsf	15,6	;volatile
  6836                           
  6837                           ;Multi_RX_testjig_v2.c: 2172: break;
  6838  0BFD  0008               	return
  6839  0BFE                     l681:	
  6840                           ;Multi_RX_testjig_v2.c: 2173: case 2:
  6841                           
  6842                           
  6843                           ;Multi_RX_testjig_v2.c: 2174: LATD4 = 0;
  6844  0BFE  0022               	movlb	2	; select bank2
  6845  0BFF  120F               	bcf	15,4	;volatile
  6846                           
  6847                           ;Multi_RX_testjig_v2.c: 2175: LATD5 = 0;
  6848  0C00  128F               	bcf	15,5	;volatile
  6849                           
  6850                           ;Multi_RX_testjig_v2.c: 2176: LATD6 = 0;
  6851  0C01  130F               	bcf	15,6	;volatile
  6852                           
  6853                           ;Multi_RX_testjig_v2.c: 2177: break;
  6854  0C02  0008               	return
  6855  0C03                     l682:	
  6856                           ;Multi_RX_testjig_v2.c: 2178: case 3:
  6857                           
  6858                           
  6859                           ;Multi_RX_testjig_v2.c: 2179: LATD4 = 0;
  6860  0C03  0022               	movlb	2	; select bank2
  6861  0C04  120F               	bcf	15,4	;volatile
  6862                           
  6863                           ;Multi_RX_testjig_v2.c: 2180: LATD5 = 0;
  6864  0C05  128F               	bcf	15,5	;volatile
  6865                           
  6866                           ;Multi_RX_testjig_v2.c: 2181: LATD6 = 1;
  6867  0C06  170F               	bsf	15,6	;volatile
  6868                           
  6869                           ;Multi_RX_testjig_v2.c: 2182: break;
  6870  0C07  0008               	return
  6871  0C08                     l3102:	
  6872  0C08  0870               	movf	power_supply_set@supply,w
  6873                           
  6874                           ; Switch size 1, requested type "speed"
  6875                           ; Number of cases is 4, Range of values is 0 to 3
  6876                           ; switch strategies available:
  6877                           ; Name         Instructions Cycles
  6878                           ; direct_byte           14     6 (fixed)
  6879                           ; simple_byte           13     7 (average)
  6880                           ; jumptable            260     6 (fixed)
  6881                           ;	Chosen strategy is direct_byte
  6882  0C09  0084               	movwf	4
  6883  0C0A  3004               	movlw	4
  6884  0C0B  0204               	subwf	4,w
  6885  0C0C  1803               	skipnc
  6886  0C0D  0008               	return
  6887  0C0E  3193               	movlp	high S4670
  6888  0C0F  3504               	lslf	4,w
  6889  0C10  3EEA               	addlw	low S4670
  6890  0C11  0082               	movwf	2
  6891  0C12  0008               	return
  6892  0C13                     __end_of_power_supply_set:	
  6893                           
  6894                           	psect	text33
  6895  1579                     __ptext33:	
  6896 ;; *************** function _TX_one *****************
  6897 ;; Defined at:
  6898 ;;		line 2288 in file "Multi_RX_testjig_v2.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  data            1    wreg     unsigned char 
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;  data            1    1[COMMON] unsigned char 
  6903 ;;  i               1    2[COMMON] unsigned char 
  6904 ;; Return value:  Size  Location     Type
  6905 ;;		None               void
  6906 ;; Registers used:
  6907 ;;		wreg, status,2, status,0
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6914 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6915 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6916 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6917 ;;Total ram usage:        3 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; Hardware stack levels required when called:    1
  6920 ;; This function calls:
  6921 ;;		Nothing
  6922 ;; This function is called by:
  6923 ;;		_main
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           
  6928                           ;psect for function _TX_one
  6929  1579                     _TX_one:	
  6930                           
  6931                           ;incstack = 0
  6932                           ; Regs used in _TX_one: [wreg+status,2+status,0]
  6933                           ;TX_one@data stored from wreg
  6934  1579  00F1               	movwf	TX_one@data
  6935                           
  6936                           ;Multi_RX_testjig_v2.c: 2290: TRISG1 = 0;
  6937  157A  0026               	movlb	6	; select bank6
  6938  157B  108D               	bcf	13,1	;volatile
  6939                           
  6940                           ;Multi_RX_testjig_v2.c: 2291: GIE = 0;
  6941  157C  138B               	bcf	11,7	;volatile
  6942                           
  6943                           ;Multi_RX_testjig_v2.c: 2292: LATG1 = 0;
  6944  157D  0027               	movlb	7	; select bank7
  6945  157E  108D               	bcf	13,1	;volatile
  6946                           
  6947                           ;Multi_RX_testjig_v2.c: 2293: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6948  157F  3085               	movlw	133
  6949  1580  00F0               	movwf	??_TX_one
  6950  1581                     u5807:	
  6951  1581  0BF0               	decfsz	??_TX_one,f
  6952  1582  2D81               	goto	u5807
  6953                           
  6954                           ;Multi_RX_testjig_v2.c: 2295: unsigned char i;
  6955                           ;Multi_RX_testjig_v2.c: 2296: for(i = 0; i < 8; i++)
  6956  1583  01F2               	clrf	TX_one@i
  6957  1584                     l708:	
  6958                           
  6959                           ;Multi_RX_testjig_v2.c: 2297: {
  6960                           ;Multi_RX_testjig_v2.c: 2298: LATG1 = data & 0x01;
  6961  1584  1C71               	btfss	TX_one@data,0
  6962  1585  2D89               	goto	u4100
  6963  1586  0027               	movlb	7	; select bank7
  6964  1587  148D               	bsf	13,1	;volatile
  6965  1588  2D8B               	goto	u4114
  6966  1589                     u4100:	
  6967  1589  0027               	movlb	7	; select bank7
  6968  158A  108D               	bcf	13,1	;volatile
  6969  158B                     u4114:	
  6970  158B  3085               	movlw	133
  6971                           
  6972                           ;Multi_RX_testjig_v2.c: 2299: data = data >> 1;
  6973  158C  36F1               	lsrf	TX_one@data,f
  6974                           
  6975                           ;Multi_RX_testjig_v2.c: 2300: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6976  158D  00F0               	movwf	??_TX_one
  6977  158E                     u5817:	
  6978  158E  0BF0               	decfsz	??_TX_one,f
  6979  158F  2D8E               	goto	u5817
  6980  1590  3008               	movlw	8
  6981  1591  0AF2               	incf	TX_one@i,f
  6982  1592  0272               	subwf	TX_one@i,w
  6983  1593  1C03               	skipc
  6984  1594  2D84               	goto	l708
  6985                           
  6986                           ;Multi_RX_testjig_v2.c: 2301: }
  6987                           ;Multi_RX_testjig_v2.c: 2302: LATG1 = 1;
  6988  1595  0027               	movlb	7	; select bank7
  6989  1596  148D               	bsf	13,1	;volatile
  6990                           
  6991                           ;Multi_RX_testjig_v2.c: 2303: GIE = 1;
  6992  1597  178B               	bsf	11,7	;volatile
  6993                           
  6994                           ;Multi_RX_testjig_v2.c: 2304: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6995  1598  3085               	movlw	133
  6996  1599  00F0               	movwf	??_TX_one
  6997  159A                     u5827:	
  6998  159A  0BF0               	decfsz	??_TX_one,f
  6999  159B  2D9A               	goto	u5827
  7000  159C  0008               	return
  7001  159D                     __end_of_TX_one:	
  7002                           
  7003                           	psect	text34
  7004  0842                     __ptext34:	
  7005 ;; *************** function _RX_one_timeout *****************
  7006 ;; Defined at:
  7007 ;;		line 2331 in file "Multi_RX_testjig_v2.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;		None
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;  data            1    2[COMMON] unsigned char 
  7012 ;;  i               1    1[COMMON] unsigned char 
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  1    wreg      unsigned char 
  7015 ;; Registers used:
  7016 ;;		wreg, status,2, status,0
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7025 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7026 ;;Total ram usage:        3 bytes
  7027 ;; Hardware stack levels used:    1
  7028 ;; Hardware stack levels required when called:    1
  7029 ;; This function calls:
  7030 ;;		Nothing
  7031 ;; This function is called by:
  7032 ;;		_main
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           
  7037                           ;psect for function _RX_one_timeout
  7038  0842                     _RX_one_timeout:	
  7039                           
  7040                           ;Multi_RX_testjig_v2.c: 2334: uart_receive_timer = 500;
  7041                           
  7042                           ;incstack = 0
  7043                           ; Regs used in _RX_one_timeout: [wreg+status,2+status,0]
  7044  0842  30F4               	movlw	244
  7045  0843  0021               	movlb	1	; select bank1
  7046  0844  00B2               	movwf	_uart_receive_timer^(0+128)	;volatile
  7047  0845  3001               	movlw	1
  7048  0846  00B3               	movwf	(_uart_receive_timer^(0+128)+1)	;volatile
  7049  0847  284D               	goto	l723
  7050  0848                     l3868:	
  7051  0848  0021               	movlb	1	; select bank1
  7052  0849  0832               	movf	_uart_receive_timer^(0+128),w	;volatile
  7053  084A  0433               	iorwf	(_uart_receive_timer+1)^(0+128),w	;volatile
  7054  084B  1903               	btfsc	3,2
  7055  084C  2850               	goto	l3870
  7056  084D                     l723:	
  7057                           ;Multi_RX_testjig_v2.c: 2335: while(RG0 == 1 && uart_receive_timer);
  7058                           
  7059  084D  0025               	movlb	5	; select bank5
  7060  084E  180D               	btfsc	13,0	;volatile
  7061  084F  2848               	goto	l3868
  7062  0850                     l3870:	
  7063                           
  7064                           ;Multi_RX_testjig_v2.c: 2336: _delay((unsigned long)((150)*(16000000/4000000.0)));
  7065  0850  30C7               	movlw	199
  7066  0851  00F0               	movwf	??_RX_one_timeout
  7067  0852                     u5837:	
  7068  0852  0BF0               	decfsz	??_RX_one_timeout,f
  7069  0853  2852               	goto	u5837
  7070  0854  3200               	nop2	;nop
  7071                           
  7072                           ;Multi_RX_testjig_v2.c: 2337: unsigned char i;
  7073                           ;Multi_RX_testjig_v2.c: 2338: unsigned char data = 0;
  7074  0855  01F2               	clrf	RX_one_timeout@data
  7075                           
  7076                           ;Multi_RX_testjig_v2.c: 2339: for(i = 0; i < 8; i++)
  7077  0856  01F1               	clrf	RX_one_timeout@i
  7078  0857                     l728:	
  7079                           
  7080                           ;Multi_RX_testjig_v2.c: 2340: {
  7081                           ;Multi_RX_testjig_v2.c: 2342: if(RG0 == 0)
  7082  0857  0025               	movlb	5	; select bank5
  7083  0858  180D               	btfsc	13,0	;volatile
  7084  0859  285C               	goto	l730
  7085                           
  7086                           ;Multi_RX_testjig_v2.c: 2343: data = data >> 1;
  7087  085A  36F2               	lsrf	RX_one_timeout@data,f
  7088  085B  285E               	goto	l3880
  7089  085C                     l730:	
  7090                           
  7091                           ;Multi_RX_testjig_v2.c: 2344: else
  7092                           ;Multi_RX_testjig_v2.c: 2345: data = (data >> 1) | 0x80;
  7093  085C  1403               	setc
  7094  085D  0CF2               	rrf	RX_one_timeout@data,f
  7095  085E                     l3880:	
  7096                           
  7097                           ;Multi_RX_testjig_v2.c: 2347: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7098  085E  3085               	movlw	133
  7099  085F  00F0               	movwf	??_RX_one_timeout
  7100  0860                     u5847:	
  7101  0860  0BF0               	decfsz	??_RX_one_timeout,f
  7102  0861  2860               	goto	u5847
  7103  0862  3008               	movlw	8
  7104  0863  0AF1               	incf	RX_one_timeout@i,f
  7105  0864  0271               	subwf	RX_one_timeout@i,w
  7106  0865  1C03               	skipc
  7107  0866  2857               	goto	l728
  7108                           
  7109                           ;Multi_RX_testjig_v2.c: 2348: }
  7110                           ;Multi_RX_testjig_v2.c: 2349: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7111  0867  3085               	movlw	133
  7112  0868  00F0               	movwf	??_RX_one_timeout
  7113  0869                     u5857:	
  7114  0869  0BF0               	decfsz	??_RX_one_timeout,f
  7115  086A  2869               	goto	u5857
  7116                           
  7117                           ;Multi_RX_testjig_v2.c: 2351: return data;
  7118  086B  0872               	movf	RX_one_timeout@data,w
  7119  086C  0008               	return
  7120  086D                     __end_of_RX_one_timeout:	
  7121                           
  7122                           	psect	text35
  7123  081C                     __ptext35:	
  7124 ;; *************** function _RX_one *****************
  7125 ;; Defined at:
  7126 ;;		line 2307 in file "Multi_RX_testjig_v2.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;		None
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;  data            1    2[COMMON] unsigned char 
  7131 ;;  i               1    1[COMMON] unsigned char 
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  1    wreg      unsigned char 
  7134 ;; Registers used:
  7135 ;;		wreg, status,2, status,0
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/4
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7143 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7144 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7145 ;;Total ram usage:        3 bytes
  7146 ;; Hardware stack levels used:    1
  7147 ;; Hardware stack levels required when called:    1
  7148 ;; This function calls:
  7149 ;;		Nothing
  7150 ;; This function is called by:
  7151 ;;		_main
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           
  7156                           ;psect for function _RX_one
  7157  081C                     _RX_one:	
  7158  081C                     l713:	
  7159                           ;Multi_RX_testjig_v2.c: 2310: while(RG0 == 1);
  7160                           
  7161                           ;incstack = 0
  7162                           ; Regs used in _RX_one: [wreg+status,2+status,0]
  7163                           
  7164  081C  0025               	movlb	5	; select bank5
  7165  081D  180D               	btfsc	13,0	;volatile
  7166  081E  281C               	goto	l713
  7167                           
  7168                           ;Multi_RX_testjig_v2.c: 2311: GIE = 0;
  7169  081F  138B               	bcf	11,7	;volatile
  7170                           
  7171                           ;Multi_RX_testjig_v2.c: 2312: _delay((unsigned long)((150)*(16000000/4000000.0)));
  7172  0820  30C7               	movlw	199
  7173  0821  00F0               	movwf	??_RX_one
  7174  0822                     u5867:	
  7175  0822  0BF0               	decfsz	??_RX_one,f
  7176  0823  2822               	goto	u5867
  7177  0824  3200               	nop2	;nop
  7178                           
  7179                           ;Multi_RX_testjig_v2.c: 2313: unsigned char i;
  7180                           ;Multi_RX_testjig_v2.c: 2314: unsigned char data = 0;
  7181  0825  01F2               	clrf	RX_one@data
  7182                           
  7183                           ;Multi_RX_testjig_v2.c: 2315: for(i = 0; i < 8; i++)
  7184  0826  01F1               	clrf	RX_one@i
  7185  0827                     l716:	
  7186                           
  7187                           ;Multi_RX_testjig_v2.c: 2316: {
  7188                           ;Multi_RX_testjig_v2.c: 2317: LATF4 = 1;
  7189  0827  0027               	movlb	7	; select bank7
  7190  0828  160C               	bsf	12,4	;volatile
  7191                           
  7192                           ;Multi_RX_testjig_v2.c: 2318: if(RG0 == 0)
  7193  0829  0025               	movlb	5	; select bank5
  7194  082A  180D               	btfsc	13,0	;volatile
  7195  082B  282E               	goto	l718
  7196                           
  7197                           ;Multi_RX_testjig_v2.c: 2319: data = data >> 1;
  7198  082C  36F2               	lsrf	RX_one@data,f
  7199  082D  2830               	goto	l719
  7200  082E                     l718:	
  7201                           
  7202                           ;Multi_RX_testjig_v2.c: 2320: else
  7203                           ;Multi_RX_testjig_v2.c: 2321: data = (data >> 1) | 0x80;
  7204  082E  1403               	setc
  7205  082F  0CF2               	rrf	RX_one@data,f
  7206  0830                     l719:	
  7207                           
  7208                           ;Multi_RX_testjig_v2.c: 2322: LATF4 = 0;
  7209  0830  0027               	movlb	7	; select bank7
  7210  0831  120C               	bcf	12,4	;volatile
  7211                           
  7212                           ;Multi_RX_testjig_v2.c: 2323: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7213  0832  3085               	movlw	133
  7214  0833  00F0               	movwf	??_RX_one
  7215  0834                     u5877:	
  7216  0834  0BF0               	decfsz	??_RX_one,f
  7217  0835  2834               	goto	u5877
  7218  0836  3008               	movlw	8
  7219  0837  0AF1               	incf	RX_one@i,f
  7220  0838  0271               	subwf	RX_one@i,w
  7221  0839  1C03               	skipc
  7222  083A  2827               	goto	l716
  7223                           
  7224                           ;Multi_RX_testjig_v2.c: 2324: }
  7225                           ;Multi_RX_testjig_v2.c: 2325: GIE = 1;
  7226  083B  178B               	bsf	11,7	;volatile
  7227                           
  7228                           ;Multi_RX_testjig_v2.c: 2326: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7229  083C  3085               	movlw	133
  7230  083D  00F0               	movwf	??_RX_one
  7231  083E                     u5887:	
  7232  083E  0BF0               	decfsz	??_RX_one,f
  7233  083F  283E               	goto	u5887
  7234                           
  7235                           ;Multi_RX_testjig_v2.c: 2328: return data;
  7236  0840  0872               	movf	RX_one@data,w
  7237  0841  0008               	return
  7238  0842                     __end_of_RX_one:	
  7239                           
  7240                           	psect	intentry
  7241  0004                     __pintentry:	
  7242 ;; *************** function _isr *****************
  7243 ;; Defined at:
  7244 ;;		line 327 in file "Multi_RX_testjig_v2.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;		None
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;		None
  7249 ;; Return value:  Size  Location     Type
  7250 ;;		None               void
  7251 ;; Registers used:
  7252 ;;		wreg, status,2, status,0
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 1F/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7262 ;;Total ram usage:        0 bytes
  7263 ;; Hardware stack levels used:    1
  7264 ;; This function calls:
  7265 ;;		Nothing
  7266 ;; This function is called by:
  7267 ;;		Interrupt level 1
  7268 ;; This function uses a non-reentrant model
  7269 ;;
  7270                           
  7271  0004                     _isr:	
  7272                           
  7273                           ;incstack = 0
  7274                           ; Regs used in _isr: [wreg+status,2+status,0]
  7275  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7276  0005  3180               	pagesel	$
  7277                           
  7278                           ;Multi_RX_testjig_v2.c: 329: if(INTCONbits.TMR0IF == 1)
  7279  0006  1D0B               	btfss	11,2	;volatile
  7280  0007  2826               	goto	i1l3926
  7281                           
  7282                           ;Multi_RX_testjig_v2.c: 330: {
  7283                           ;Multi_RX_testjig_v2.c: 332: if(testjig_timer)
  7284  0008  0021               	movlb	1	; select bank1
  7285  0009  082E               	movf	_testjig_timer^(0+128),w	;volatile
  7286  000A  042F               	iorwf	(_testjig_timer+1)^(0+128),w	;volatile
  7287  000B  1903               	btfsc	3,2
  7288  000C  2812               	goto	i1l280
  7289                           
  7290                           ;Multi_RX_testjig_v2.c: 333: testjig_timer--;
  7291  000D  3001               	movlw	1
  7292  000E  02AE               	subwf	_testjig_timer^(0+128),f	;volatile
  7293  000F  3000               	movlw	0
  7294  0010  3BAF               	subwfb	(_testjig_timer+1)^(0+128),f	;volatile
  7295  0011  2814               	goto	i1l3918
  7296  0012                     i1l280:	
  7297                           
  7298                           ;Multi_RX_testjig_v2.c: 334: else
  7299                           ;Multi_RX_testjig_v2.c: 335: RE0 = 0;
  7300  0012  0020               	movlb	0	; select bank0
  7301  0013  1010               	bcf	16,0	;volatile
  7302  0014                     i1l3918:	
  7303                           
  7304                           ;Multi_RX_testjig_v2.c: 336: if(uart_receive_timer)
  7305  0014  0021               	movlb	1	; select bank1
  7306  0015  0832               	movf	_uart_receive_timer^(0+128),w	;volatile
  7307  0016  0433               	iorwf	(_uart_receive_timer+1)^(0+128),w	;volatile
  7308  0017  1903               	btfsc	3,2
  7309  0018  281D               	goto	i1l282
  7310                           
  7311                           ;Multi_RX_testjig_v2.c: 337: uart_receive_timer--;
  7312  0019  30FF               	movlw	-1
  7313  001A  07B2               	addwf	_uart_receive_timer^(0+128),f	;volatile
  7314  001B  1C03               	skipc
  7315  001C  03B3               	decf	(_uart_receive_timer+1)^(0+128),f	;volatile
  7316  001D                     i1l282:	
  7317                           
  7318                           ;Multi_RX_testjig_v2.c: 338: if(motor_direction_timer)
  7319  001D  082A               	movf	_motor_direction_timer^(0+128),w	;volatile
  7320  001E  042B               	iorwf	(_motor_direction_timer+1)^(0+128),w	;volatile
  7321  001F  1903               	btfsc	3,2
  7322  0020  2825               	goto	i1l3924
  7323                           
  7324                           ;Multi_RX_testjig_v2.c: 339: motor_direction_timer--;
  7325  0021  30FF               	movlw	-1
  7326  0022  07AA               	addwf	_motor_direction_timer^(0+128),f	;volatile
  7327  0023  1C03               	skipc
  7328  0024  03AB               	decf	(_motor_direction_timer+1)^(0+128),f	;volatile
  7329  0025                     i1l3924:	
  7330                           
  7331                           ;Multi_RX_testjig_v2.c: 341: INTCONbits.TMR0IF = 0;
  7332  0025  110B               	bcf	11,2	;volatile
  7333  0026                     i1l3926:	
  7334                           
  7335                           ;Multi_RX_testjig_v2.c: 343: }
  7336                           ;Multi_RX_testjig_v2.c: 344: if(PIR1bits.TMR2IF == 1)
  7337  0026  0020               	movlb	0	; select bank0
  7338  0027  1C91               	btfss	17,1	;volatile
  7339  0028  284D               	goto	i1l290
  7340                           
  7341                           ;Multi_RX_testjig_v2.c: 345: {
  7342                           ;Multi_RX_testjig_v2.c: 459: if(buzz_timer)
  7343  0029  0021               	movlb	1	; select bank1
  7344  002A  0822               	movf	_buzz_timer^(0+128),w	;volatile
  7345  002B  0423               	iorwf	(_buzz_timer+1)^(0+128),w	;volatile
  7346  002C  1903               	btfsc	3,2
  7347  002D  2833               	goto	i1l285
  7348                           
  7349                           ;Multi_RX_testjig_v2.c: 460: buzz_timer--;
  7350  002E  3001               	movlw	1
  7351  002F  02A2               	subwf	_buzz_timer^(0+128),f	;volatile
  7352  0030  3000               	movlw	0
  7353  0031  3BA3               	subwfb	(_buzz_timer+1)^(0+128),f	;volatile
  7354  0032  2835               	goto	i1l3932
  7355  0033                     i1l285:	
  7356                           
  7357                           ;Multi_RX_testjig_v2.c: 461: else
  7358                           ;Multi_RX_testjig_v2.c: 462: LATC5 = 0;
  7359  0033  0022               	movlb	2	; select bank2
  7360  0034  128E               	bcf	14,5	;volatile
  7361  0035                     i1l3932:	
  7362                           
  7363                           ;Multi_RX_testjig_v2.c: 463: if(one_second_timer)
  7364  0035  0021               	movlb	1	; select bank1
  7365  0036  0839               	movf	_one_second_timer^(0+128),w	;volatile
  7366  0037  043A               	iorwf	(_one_second_timer+1)^(0+128),w	;volatile
  7367  0038  1903               	btfsc	3,2
  7368  0039  283F               	goto	i1l3936
  7369                           
  7370                           ;Multi_RX_testjig_v2.c: 464: one_second_timer--;
  7371  003A  3001               	movlw	1
  7372  003B  02B9               	subwf	_one_second_timer^(0+128),f	;volatile
  7373  003C  3000               	movlw	0
  7374  003D  3BBA               	subwfb	(_one_second_timer+1)^(0+128),f	;volatile
  7375  003E  2843               	goto	i1l3938
  7376  003F                     i1l3936:	
  7377                           
  7378                           ;Multi_RX_testjig_v2.c: 465: else
  7379                           ;Multi_RX_testjig_v2.c: 466: {
  7380                           ;Multi_RX_testjig_v2.c: 467: one_second_timer = 1000;
  7381  003F  30E8               	movlw	232
  7382  0040  00B9               	movwf	_one_second_timer^(0+128)	;volatile
  7383  0041  3003               	movlw	3
  7384  0042  00BA               	movwf	(_one_second_timer^(0+128)+1)	;volatile
  7385  0043                     i1l3938:	
  7386                           
  7387                           ;Multi_RX_testjig_v2.c: 468: }
  7388                           ;Multi_RX_testjig_v2.c: 469: if(tj_timer)
  7389  0043  0830               	movf	_tj_timer^(0+128),w
  7390  0044  0431               	iorwf	(_tj_timer+1)^(0+128),w
  7391  0045  1903               	btfsc	3,2
  7392  0046  284B               	goto	i1l3942
  7393                           
  7394                           ;Multi_RX_testjig_v2.c: 470: tj_timer--;
  7395  0047  3001               	movlw	1
  7396  0048  02B0               	subwf	_tj_timer^(0+128),f
  7397  0049  3000               	movlw	0
  7398  004A  3BB1               	subwfb	(_tj_timer+1)^(0+128),f
  7399  004B                     i1l3942:	
  7400                           
  7401                           ;Multi_RX_testjig_v2.c: 471: PIR1bits.TMR2IF = 0;
  7402  004B  0020               	movlb	0	; select bank0
  7403  004C  1091               	bcf	17,1	;volatile
  7404  004D                     i1l290:	
  7405  004D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7406  004E  0009               	retfie
  7407  004F                     __end_of_isr:	
  7408  007E                     btemp	set	126	;btemp
  7409  007E                     int$flags	set	126
  7410  007E                     wtemp	set	126
  7411  007E                     wtemp0	set	126
  7412  0080                     wtemp1	set	128
  7413  0082                     wtemp2	set	130
  7414  0084                     wtemp3	set	132
  7415  0086                     wtemp4	set	134
  7416  0088                     wtemp5	set	136
  7417  007F                     wtemp6	set	127
  7418  007E                     ttemp	set	126
  7419  007E                     ttemp0	set	126
  7420  0081                     ttemp1	set	129
  7421  0084                     ttemp2	set	132
  7422  0087                     ttemp3	set	135
  7423  007F                     ttemp4	set	127
  7424  007E                     ltemp	set	126
  7425  007E                     ltemp0	set	126
  7426  0082                     ltemp1	set	130
  7427  0086                     ltemp2	set	134
  7428  0080                     ltemp3	set	128
  7429                           
  7430                           	psect	maintext_split_1
  7431  0062                     l4074:	
  7432  0062  305F               	movlw	95
  7433  0063  318C  245E  3180   	fcall	_ADC_get_val
  7434  0066  3000               	movlw	0
  7435  0067  0271               	subwf	?_ADC_get_val+1,w
  7436  0068  307B               	movlw	123
  7437  0069  1903               	skipnz
  7438  006A  0270               	subwf	?_ADC_get_val,w
  7439  006B  1C03               	skipc
  7440  006C  289D               	goto	l4084
  7441  006D  3063               	movlw	99
  7442  006E  318C  245E  3180   	fcall	_ADC_get_val
  7443  0071  3002               	movlw	2
  7444  0072  0271               	subwf	?_ADC_get_val+1,w
  7445  0073  3013               	movlw	19
  7446  0074  1903               	skipnz
  7447  0075  0270               	subwf	?_ADC_get_val,w
  7448  0076  1803               	skipnc
  7449  0077  289D               	goto	l4084
  7450  0078  3063               	movlw	99
  7451  0079  318C  245E  3180   	fcall	_ADC_get_val
  7452  007C  3002               	movlw	2
  7453  007D  0271               	subwf	?_ADC_get_val+1,w
  7454  007E  30C6               	movlw	198
  7455  007F  1903               	skipnz
  7456  0080  0270               	subwf	?_ADC_get_val,w
  7457  0081  1C03               	skipc
  7458  0082  289D               	goto	l4084
  7459  0083  318C  2413  3180   	fcall	_get_30v_current
  7460  0086  3000               	movlw	0
  7461  0087  0258               	subwf	?_get_30v_current+1,w
  7462  0088  303C               	movlw	60
  7463  0089  1903               	skipnz
  7464  008A  0257               	subwf	?_get_30v_current,w
  7465  008B  1803               	skipnc
  7466  008C  289D               	goto	l4084
  7467  008D  0021               	movlb	1	; select bank1
  7468  008E  082E               	movf	_testjig_timer^(0+128),w	;volatile
  7469  008F  042F               	iorwf	(_testjig_timer+1)^(0+128),w	;volatile
  7470  0090  1903               	btfsc	3,2
  7471  0091  289D               	goto	l4084
  7472  0092                     l4072:	
  7473                           ;Multi_RX_testjig_v2.c: 597: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) &&
  7474                           ;Multi_RX_testjig_v2.c: 598: (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/
      +                          4.096)*1.08))&&
  7475                           ;Multi_RX_testjig_v2.c: 599: (ADC_get_val(0b01100011) < (unsigned int)((((26/11.0)*1024)
      +                          /4.096)*0.9)) &&
  7476                           ;Multi_RX_testjig_v2.c: 600: (ADC_get_val(0b01100011) > (unsigned int)((((26/11.0)*1024)
      +                          /4.096)*1.2)) &&
  7477                           ;Multi_RX_testjig_v2.c: 601: (get_30v_current() < 60) && testjig_timer);
  7478                           
  7479  0092  305F               	movlw	95
  7480  0093  318C  245E  3180   	fcall	_ADC_get_val
  7481  0096  3000               	movlw	0
  7482  0097  0271               	subwf	?_ADC_get_val+1,w
  7483  0098  3068               	movlw	104
  7484  0099  1903               	skipnz
  7485  009A  0270               	subwf	?_ADC_get_val,w
  7486  009B  1C03               	btfss	3,0
  7487  009C  2862               	goto	l4074
  7488  009D                     l4084:	
  7489                           
  7490                           ;Multi_RX_testjig_v2.c: 602: unsigned int temp;
  7491                           ;Multi_RX_testjig_v2.c: 603: temp = get_30v_current();
  7492  009D  318C  2413  3180   	fcall	_get_30v_current
  7493  00A0  0858               	movf	?_get_30v_current+1,w
  7494  00A1  00E5               	movwf	main@temp+1
  7495  00A2  0857               	movf	?_get_30v_current,w
  7496  00A3  00E4               	movwf	main@temp
  7497                           
  7498                           ;Multi_RX_testjig_v2.c: 608: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  7499  00A4  305F               	movlw	95
  7500  00A5  318C  245E  3180   	fcall	_ADC_get_val
  7501  00A8  3000               	movlw	0
  7502  00A9  0271               	subwf	?_ADC_get_val+1,w
  7503  00AA  3068               	movlw	104
  7504  00AB  1903               	skipnz
  7505  00AC  0270               	subwf	?_ADC_get_val,w
  7506  00AD  1803               	skipnc
  7507  00AE  28B3               	goto	l4090
  7508                           
  7509                           ;Multi_RX_testjig_v2.c: 609: {
  7510                           ;Multi_RX_testjig_v2.c: 610: print_error("16v-5v supply", "Volt Error L");
  7511  00AF  3005               	movlw	low (STR_15| (0+32768))
  7512  00B0  00F8               	movwf	print_error@top
  7513  00B1  3092               	movlw	high (STR_15| (0+32768))
  7514  00B2  28D0               	goto	L13
  7515  00B3                     l4090:	
  7516                           ;Multi_RX_testjig_v2.c: 611: }
  7517                           
  7518                           
  7519                           ;Multi_RX_testjig_v2.c: 612: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  7520  00B3  305F               	movlw	95
  7521  00B4  318C  245E  3180   	fcall	_ADC_get_val
  7522  00B7  3000               	movlw	0
  7523  00B8  0271               	subwf	?_ADC_get_val+1,w
  7524  00B9  307B               	movlw	123
  7525  00BA  1903               	skipnz
  7526  00BB  0270               	subwf	?_ADC_get_val,w
  7527  00BC  1C03               	skipc
  7528  00BD  28C2               	goto	l4094
  7529                           
  7530                           ;Multi_RX_testjig_v2.c: 613: {
  7531                           ;Multi_RX_testjig_v2.c: 614: print_error("16v-5v supply", "Volt Error H");
  7532  00BE  3005               	movlw	low (STR_15| (0+32768))
  7533  00BF  00F8               	movwf	print_error@top
  7534  00C0  3092               	movlw	high (STR_15| (0+32768))
  7535  00C1  28E3               	goto	L14
  7536  00C2                     l4094:	
  7537                           ;Multi_RX_testjig_v2.c: 615: }
  7538                           
  7539                           
  7540                           ;Multi_RX_testjig_v2.c: 616: else if((ADC_get_val(0b01100011) < (unsigned int)((((26/11.
      +                          0)*1024)/4.096)*0.9)))
  7541  00C2  3063               	movlw	99
  7542  00C3  318C  245E  3180   	fcall	_ADC_get_val
  7543  00C6  3002               	movlw	2
  7544  00C7  0271               	subwf	?_ADC_get_val+1,w
  7545  00C8  3013               	movlw	19
  7546  00C9  1903               	skipnz
  7547  00CA  0270               	subwf	?_ADC_get_val,w
  7548  00CB  1803               	skipnc
  7549  00CC  28D5               	goto	l4098
  7550                           
  7551                           ;Multi_RX_testjig_v2.c: 617: print_error("16v-12v supply", "Volt Error L");
  7552  00CD  3094               	movlw	low (STR_19| (0+32768))
  7553  00CE  00F8               	movwf	print_error@top
  7554  00CF  3091               	movlw	high (STR_19| (0+32768))
  7555  00D0                     L13:	
  7556  00D0  00F9               	movwf	print_error@top+1
  7557  00D1  3047               	movlw	low (STR_8| (0+32768))
  7558  00D2  00FA               	movwf	print_error@bottom
  7559  00D3  3092               	movlw	high (STR_8| (0+32768))
  7560  00D4  291F               	goto	L9
  7561  00D5                     l4098:	
  7562                           
  7563                           ;Multi_RX_testjig_v2.c: 618: else if((ADC_get_val(0b01100011) > (unsigned int)((((26/11.
      +                          0)*1024)/4.096)*1.2)))
  7564  00D5  3063               	movlw	99
  7565  00D6  318C  245E  3180   	fcall	_ADC_get_val
  7566  00D9  3002               	movlw	2
  7567  00DA  0271               	subwf	?_ADC_get_val+1,w
  7568  00DB  30C6               	movlw	198
  7569  00DC  1903               	skipnz
  7570  00DD  0270               	subwf	?_ADC_get_val,w
  7571  00DE  1C03               	skipc
  7572  00DF  28E8               	goto	l4102
  7573                           
  7574                           ;Multi_RX_testjig_v2.c: 619: {
  7575                           ;Multi_RX_testjig_v2.c: 620: print_error("16v-12v supply", "Volt Error H");
  7576  00E0  3094               	movlw	low (STR_19| (0+32768))
  7577  00E1  00F8               	movwf	print_error@top
  7578  00E2  3091               	movlw	high (STR_19| (0+32768))
  7579  00E3                     L14:	
  7580  00E3  00F9               	movwf	print_error@top+1
  7581  00E4  302D               	movlw	low (STR_10| (0+32768))
  7582  00E5  00FA               	movwf	print_error@bottom
  7583  00E6  3092               	movlw	high (STR_10| (0+32768))
  7584  00E7  291F               	goto	L9
  7585  00E8                     l4102:	
  7586                           ;Multi_RX_testjig_v2.c: 621: }
  7587                           
  7588                           
  7589                           ;Multi_RX_testjig_v2.c: 622: else if((temp >= 60))
  7590  00E8  3000               	movlw	0
  7591  00E9  0020               	movlb	0	; select bank0
  7592  00EA  0265               	subwf	main@temp+1,w
  7593  00EB  303C               	movlw	60
  7594  00EC  1903               	skipnz
  7595  00ED  0264               	subwf	main@temp,w
  7596  00EE  1C03               	skipc
  7597  00EF  2913               	goto	l4110
  7598                           
  7599                           ;Multi_RX_testjig_v2.c: 623: {
  7600                           ;Multi_RX_testjig_v2.c: 624: lcd_print_int(temp, 5, 0, 1);
  7601  00F0  0865               	movf	main@temp+1,w
  7602  00F1  00DC               	movwf	lcd_print_int@number+1
  7603  00F2  0864               	movf	main@temp,w
  7604  00F3  00DB               	movwf	lcd_print_int@number
  7605  00F4  3005               	movlw	5
  7606  00F5  00DD               	movwf	lcd_print_int@pos
  7607  00F6  01DE               	clrf	lcd_print_int@pos+1
  7608  00F7  01DF               	clrf	lcd_print_int@decimal
  7609  00F8  01E0               	clrf	lcd_print_int@ten_thou_digit
  7610  00F9  0AE0               	incf	lcd_print_int@ten_thou_digit,f
  7611  00FA  3188  20F7  3180   	fcall	_lcd_print_int
  7612                           
  7613                           ;Multi_RX_testjig_v2.c: 625: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7614  00FD  3015               	movlw	21
  7615  00FE  0020               	movlb	0	; select bank0
  7616  00FF  00E3               	movwf	??_main+2
  7617  0100  304B               	movlw	75
  7618  0101  00E2               	movwf	??_main+1
  7619  0102  30D1               	movlw	209
  7620  0103  00E1               	movwf	??_main
  7621  0104                     u5317:	
  7622  0104  0BE1               	decfsz	??_main,f
  7623  0105  2904               	goto	u5317
  7624  0106  0BE2               	decfsz	??_main+1,f
  7625  0107  2904               	goto	u5317
  7626  0108  0BE3               	decfsz	??_main+2,f
  7627  0109  2904               	goto	u5317
  7628  010A  0000               	nop
  7629                           
  7630                           ;Multi_RX_testjig_v2.c: 626: print_error("16v supply", "Curr Error");
  7631  010B  3016               	movlw	low (STR_23| (0+32768))
  7632  010C  00F8               	movwf	print_error@top
  7633  010D  3093               	movlw	high (STR_23| (0+32768))
  7634  010E  00F9               	movwf	print_error@top+1
  7635  010F  30F5               	movlw	low (STR_12| (0+32768))
  7636  0110  00FA               	movwf	print_error@bottom
  7637  0111  3092               	movlw	high (STR_12| (0+32768))
  7638  0112  291F               	goto	L9
  7639  0113                     l4110:	
  7640                           ;Multi_RX_testjig_v2.c: 627: }
  7641                           
  7642                           
  7643                           ;Multi_RX_testjig_v2.c: 628: else if(testjig_timer == 0)
  7644  0113  0021               	movlb	1	; select bank1
  7645  0114  082E               	movf	_testjig_timer^(0+128),w	;volatile
  7646  0115  042F               	iorwf	(_testjig_timer+1)^(0+128),w	;volatile
  7647  0116  1D03               	btfss	3,2
  7648  0117  2923               	goto	l4114
  7649                           
  7650                           ;Multi_RX_testjig_v2.c: 629: print_error("16v-5v supply", "T-out Error");
  7651  0118  3005               	movlw	low (STR_15| (0+32768))
  7652  0119  00F8               	movwf	print_error@top
  7653  011A  3092               	movlw	high (STR_15| (0+32768))
  7654  011B  00F9               	movwf	print_error@top+1
  7655  011C  30DD               	movlw	low (STR_14| (0+32768))
  7656  011D  00FA               	movwf	print_error@bottom
  7657  011E  3092               	movlw	high (STR_14| (0+32768))
  7658  011F                     L9:	
  7659  011F  00FB               	movwf	print_error@bottom+1
  7660  0120  318A  22F6  3180   	fcall	_print_error
  7661  0123                     l4114:	
  7662                           
  7663                           ;Multi_RX_testjig_v2.c: 635: if(RA2 == 1)
  7664  0123  0020               	movlb	0	; select bank0
  7665  0124  1D0C               	btfss	12,2	;volatile
  7666  0125  2A30               	goto	l4180
  7667                           
  7668                           ;Multi_RX_testjig_v2.c: 636: {
  7669                           ;Multi_RX_testjig_v2.c: 637: Vout_set(12);
  7670  0126  300C               	movlw	12
  7671  0127  00F4               	movwf	Vout_set@Volts
  7672  0128  01F5               	clrf	Vout_set@Volts+1
  7673  0129  3188  20C0  3180   	fcall	_Vout_set
  7674                           
  7675                           ;Multi_RX_testjig_v2.c: 638: power_supply_set(0);
  7676  012C  3000               	movlw	0
  7677  012D  318B  23F3  3180   	fcall	_power_supply_set
  7678                           
  7679                           ;Multi_RX_testjig_v2.c: 640: print_screen("Pickit Programming", "");
  7680  0130  303F               	movlw	low (STR_27| (0+32768))
  7681  0131  00F4               	movwf	print_screen@top
  7682  0132  3090               	movlw	high (STR_27| (0+32768))
  7683  0133  00F5               	movwf	print_screen@top+1
  7684  0134  30DA               	movlw	low ((STR_137+15)| (0+32768))
  7685  0135  00F6               	movwf	print_screen@bottom
  7686  0136  3090               	movlw	high ((STR_137+15)| (0+32768))
  7687  0137  00F7               	movwf	print_screen@bottom+1
  7688  0138  318A  22D4  3180   	fcall	_print_screen
  7689                           
  7690                           ;Multi_RX_testjig_v2.c: 645: _delay((unsigned long)((100)*(16000000/4000.0)));
  7691  013B  3003               	movlw	3
  7692  013C  0020               	movlb	0	; select bank0
  7693  013D  00E3               	movwf	??_main+2
  7694  013E  3008               	movlw	8
  7695  013F  00E2               	movwf	??_main+1
  7696  0140  3078               	movlw	120
  7697  0141  00E1               	movwf	??_main
  7698  0142                     u5327:	
  7699  0142  0BE1               	decfsz	??_main,f
  7700  0143  2942               	goto	u5327
  7701  0144  0BE2               	decfsz	??_main+1,f
  7702  0145  2942               	goto	u5327
  7703  0146  0BE3               	decfsz	??_main+2,f
  7704  0147  2942               	goto	u5327
  7705                           
  7706                           ;Multi_RX_testjig_v2.c: 646: print_screen("Waiting for", " Programming");
  7707  0148  30C5               	movlw	low (STR_29| (0+32768))
  7708  0149  00F4               	movwf	print_screen@top
  7709  014A  3092               	movlw	high (STR_29| (0+32768))
  7710  014B  00F5               	movwf	print_screen@top+1
  7711  014C  3045               	movlw	low ((STR_27+6)| (0+32768))
  7712  014D  00F6               	movwf	print_screen@bottom
  7713  014E  3090               	movlw	high ((STR_27+6)| (0+32768))
  7714  014F  00F7               	movwf	print_screen@bottom+1
  7715  0150  318A  22D4  3180   	fcall	_print_screen
  7716                           
  7717                           ;Multi_RX_testjig_v2.c: 648: if(RF0 == 1)
  7718  0153  0025               	movlb	5	; select bank5
  7719  0154  1C0C               	btfss	12,0	;volatile
  7720  0155  2999               	goto	l324
  7721                           
  7722                           ;Multi_RX_testjig_v2.c: 649: {
  7723                           ;Multi_RX_testjig_v2.c: 650: LATA7 = 0;
  7724  0156  0022               	movlb	2	; select bank2
  7725  0157  138C               	bcf	12,7	;volatile
  7726                           
  7727                           ;Multi_RX_testjig_v2.c: 651: LATB7 = 0;
  7728  0158  138D               	bcf	13,7	;volatile
  7729                           
  7730                           ;Multi_RX_testjig_v2.c: 653: LATC2 = 1;
  7731  0159  150E               	bsf	14,2	;volatile
  7732                           
  7733                           ;Multi_RX_testjig_v2.c: 654: LATC7 = 1;
  7734  015A  178E               	bsf	14,7	;volatile
  7735                           
  7736                           ;Multi_RX_testjig_v2.c: 655: _delay((unsigned long)((100)*(16000000/4000.0)));
  7737  015B  3003               	movlw	3
  7738  015C  0020               	movlb	0	; select bank0
  7739  015D  00E3               	movwf	??_main+2
  7740  015E  3008               	movlw	8
  7741  015F  00E2               	movwf	??_main+1
  7742  0160  3078               	movlw	120
  7743  0161  00E1               	movwf	??_main
  7744  0162                     u5337:	
  7745  0162  0BE1               	decfsz	??_main,f
  7746  0163  2962               	goto	u5337
  7747  0164  0BE2               	decfsz	??_main+1,f
  7748  0165  2962               	goto	u5337
  7749  0166  0BE3               	decfsz	??_main+2,f
  7750  0167  2962               	goto	u5337
  7751                           
  7752                           ;Multi_RX_testjig_v2.c: 656: LATC6 = 1;
  7753  0168  0022               	movlb	2	; select bank2
  7754  0169  170E               	bsf	14,6	;volatile
  7755                           
  7756                           ;Multi_RX_testjig_v2.c: 658: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7757  016A  3015               	movlw	21
  7758  016B  0020               	movlb	0	; select bank0
  7759  016C  00E3               	movwf	??_main+2
  7760  016D  304B               	movlw	75
  7761  016E  00E2               	movwf	??_main+1
  7762  016F  30D1               	movlw	209
  7763  0170  00E1               	movwf	??_main
  7764  0171                     u5347:	
  7765  0171  0BE1               	decfsz	??_main,f
  7766  0172  2971               	goto	u5347
  7767  0173  0BE2               	decfsz	??_main+1,f
  7768  0174  2971               	goto	u5347
  7769  0175  0BE3               	decfsz	??_main+2,f
  7770  0176  2971               	goto	u5347
  7771  0177  0000               	nop
  7772                           
  7773                           ;Multi_RX_testjig_v2.c: 659: LATC6 = 0;
  7774  0178  0022               	movlb	2	; select bank2
  7775  0179  130E               	bcf	14,6	;volatile
  7776                           
  7777                           ;Multi_RX_testjig_v2.c: 660: _delay((unsigned long)((4500)*(16000000/4000.0)));
  7778  017A  305C               	movlw	92
  7779  017B  0020               	movlb	0	; select bank0
  7780  017C  00E3               	movwf	??_main+2
  7781  017D  3051               	movlw	81
  7782  017E  00E2               	movwf	??_main+1
  7783  017F  30BA               	movlw	186
  7784  0180  00E1               	movwf	??_main
  7785  0181                     u5357:	
  7786  0181  0BE1               	decfsz	??_main,f
  7787  0182  2981               	goto	u5357
  7788  0183  0BE2               	decfsz	??_main+1,f
  7789  0184  2981               	goto	u5357
  7790  0185  0BE3               	decfsz	??_main+2,f
  7791  0186  2981               	goto	u5357
  7792  0187  0000               	nop
  7793                           
  7794                           ;Multi_RX_testjig_v2.c: 661: LATC2 = 0;
  7795  0188  0022               	movlb	2	; select bank2
  7796  0189  110E               	bcf	14,2	;volatile
  7797                           
  7798                           ;Multi_RX_testjig_v2.c: 662: LATC7 = 0;
  7799  018A  138E               	bcf	14,7	;volatile
  7800                           
  7801                           ;Multi_RX_testjig_v2.c: 663: _delay((unsigned long)((100)*(16000000/4000.0)));
  7802  018B  3003               	movlw	3
  7803  018C  0020               	movlb	0	; select bank0
  7804  018D  00E3               	movwf	??_main+2
  7805  018E  3008               	movlw	8
  7806  018F  00E2               	movwf	??_main+1
  7807  0190  3078               	movlw	120
  7808  0191  00E1               	movwf	??_main
  7809  0192                     u5367:	
  7810  0192  0BE1               	decfsz	??_main,f
  7811  0193  2992               	goto	u5367
  7812  0194  0BE2               	decfsz	??_main+1,f
  7813  0195  2992               	goto	u5367
  7814  0196  0BE3               	decfsz	??_main+2,f
  7815  0197  2992               	goto	u5367
  7816                           
  7817                           ;Multi_RX_testjig_v2.c: 665: }else if(RF0 == 0)
  7818  0198  29DD               	goto	l4148
  7819  0199                     l324:	
  7820  0199  180C               	btfsc	12,0	;volatile
  7821  019A  29DD               	goto	l4148
  7822                           
  7823                           ;Multi_RX_testjig_v2.c: 666: {
  7824                           ;Multi_RX_testjig_v2.c: 667: LATC2 = 0;
  7825  019B  0022               	movlb	2	; select bank2
  7826  019C  110E               	bcf	14,2	;volatile
  7827                           
  7828                           ;Multi_RX_testjig_v2.c: 668: LATC7 = 0;
  7829  019D  138E               	bcf	14,7	;volatile
  7830                           
  7831                           ;Multi_RX_testjig_v2.c: 671: LATA7 = 1;
  7832  019E  178C               	bsf	12,7	;volatile
  7833                           
  7834                           ;Multi_RX_testjig_v2.c: 672: LATB7 = 1;
  7835  019F  178D               	bsf	13,7	;volatile
  7836                           
  7837                           ;Multi_RX_testjig_v2.c: 674: _delay((unsigned long)((100)*(16000000/4000.0)));
  7838  01A0  3003               	movlw	3
  7839  01A1  0020               	movlb	0	; select bank0
  7840  01A2  00E3               	movwf	??_main+2
  7841  01A3  3008               	movlw	8
  7842  01A4  00E2               	movwf	??_main+1
  7843  01A5  3078               	movlw	120
  7844  01A6  00E1               	movwf	??_main
  7845  01A7                     u5377:	
  7846  01A7  0BE1               	decfsz	??_main,f
  7847  01A8  29A7               	goto	u5377
  7848  01A9  0BE2               	decfsz	??_main+1,f
  7849  01AA  29A7               	goto	u5377
  7850  01AB  0BE3               	decfsz	??_main+2,f
  7851  01AC  29A7               	goto	u5377
  7852                           
  7853                           ;Multi_RX_testjig_v2.c: 675: LATC6 = 1;
  7854  01AD  0022               	movlb	2	; select bank2
  7855  01AE  170E               	bsf	14,6	;volatile
  7856                           
  7857                           ;Multi_RX_testjig_v2.c: 677: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7858  01AF  3015               	movlw	21
  7859  01B0  0020               	movlb	0	; select bank0
  7860  01B1  00E3               	movwf	??_main+2
  7861  01B2  304B               	movlw	75
  7862  01B3  00E2               	movwf	??_main+1
  7863  01B4  30D1               	movlw	209
  7864  01B5  00E1               	movwf	??_main
  7865  01B6                     u5387:	
  7866  01B6  0BE1               	decfsz	??_main,f
  7867  01B7  29B6               	goto	u5387
  7868  01B8  0BE2               	decfsz	??_main+1,f
  7869  01B9  29B6               	goto	u5387
  7870  01BA  0BE3               	decfsz	??_main+2,f
  7871  01BB  29B6               	goto	u5387
  7872  01BC  0000               	nop
  7873                           
  7874                           ;Multi_RX_testjig_v2.c: 678: LATC6 = 0;
  7875  01BD  0022               	movlb	2	; select bank2
  7876  01BE  130E               	bcf	14,6	;volatile
  7877                           
  7878                           ;Multi_RX_testjig_v2.c: 679: _delay((unsigned long)((4500)*(16000000/4000.0)));
  7879  01BF  305C               	movlw	92
  7880  01C0  0020               	movlb	0	; select bank0
  7881  01C1  00E3               	movwf	??_main+2
  7882  01C2  3051               	movlw	81
  7883  01C3  00E2               	movwf	??_main+1
  7884  01C4  30BA               	movlw	186
  7885  01C5  00E1               	movwf	??_main
  7886  01C6                     u5397:	
  7887  01C6  0BE1               	decfsz	??_main,f
  7888  01C7  29C6               	goto	u5397
  7889  01C8  0BE2               	decfsz	??_main+1,f
  7890  01C9  29C6               	goto	u5397
  7891  01CA  0BE3               	decfsz	??_main+2,f
  7892  01CB  29C6               	goto	u5397
  7893  01CC  0000               	nop
  7894                           
  7895                           ;Multi_RX_testjig_v2.c: 680: LATA7 = 0;
  7896  01CD  0022               	movlb	2	; select bank2
  7897  01CE  138C               	bcf	12,7	;volatile
  7898                           
  7899                           ;Multi_RX_testjig_v2.c: 681: LATB7 = 0;
  7900  01CF  138D               	bcf	13,7	;volatile
  7901                           
  7902                           ;Multi_RX_testjig_v2.c: 682: _delay((unsigned long)((100)*(16000000/4000.0)));
  7903  01D0  3003               	movlw	3
  7904  01D1  0020               	movlb	0	; select bank0
  7905  01D2  00E3               	movwf	??_main+2
  7906  01D3  3008               	movlw	8
  7907  01D4  00E2               	movwf	??_main+1
  7908  01D5  3078               	movlw	120
  7909  01D6  00E1               	movwf	??_main
  7910  01D7                     u5407:	
  7911  01D7  0BE1               	decfsz	??_main,f
  7912  01D8  29D7               	goto	u5407
  7913  01D9  0BE2               	decfsz	??_main+1,f
  7914  01DA  29D7               	goto	u5407
  7915  01DB  0BE3               	decfsz	??_main+2,f
  7916  01DC  29D7               	goto	u5407
  7917  01DD                     l4148:	
  7918                           
  7919                           ;Multi_RX_testjig_v2.c: 683: }
  7920                           ;Multi_RX_testjig_v2.c: 690: if(pickit_timer)
  7921  01DD  0021               	movlb	1	; select bank1
  7922  01DE  082C               	movf	_pickit_timer^(0+128),w	;volatile
  7923  01DF  042D               	iorwf	(_pickit_timer+1)^(0+128),w	;volatile
  7924  01E0  1903               	btfsc	3,2
  7925  01E1  2A25               	goto	l4178
  7926                           
  7927                           ;Multi_RX_testjig_v2.c: 691: pickit_timer--;
  7928  01E2  3001               	movlw	1
  7929  01E3  02AC               	subwf	_pickit_timer^(0+128),f	;volatile
  7930  01E4  3000               	movlw	0
  7931  01E5  3BAD               	subwfb	(_pickit_timer+1)^(0+128),f	;volatile
  7932  01E6  2A49               	goto	l4184
  7933  01E7                     l330:	
  7934                           ;Multi_RX_testjig_v2.c: 695: {
  7935                           ;Multi_RX_testjig_v2.c: 696: case pickit_start:
  7936                           
  7937                           
  7938                           ;Multi_RX_testjig_v2.c: 697: LATC2 = 1;
  7939  01E7  0022               	movlb	2	; select bank2
  7940  01E8  150E               	bsf	14,2	;volatile
  7941                           
  7942                           ;Multi_RX_testjig_v2.c: 698: LATC7 = 1;
  7943  01E9  178E               	bsf	14,7	;volatile
  7944                           
  7945                           ;Multi_RX_testjig_v2.c: 699: pickit_timer = 10;
  7946  01EA  300A               	movlw	10
  7947  01EB  0021               	movlb	1	; select bank1
  7948  01EC  00AC               	movwf	_pickit_timer^(0+128)	;volatile
  7949  01ED  01AD               	clrf	(_pickit_timer+1)^(0+128)	;volatile
  7950                           
  7951                           ;Multi_RX_testjig_v2.c: 700: pickit_state = pickit_push_button;
  7952  01EE  3002               	movlw	2
  7953  01EF  2A23               	goto	L3
  7954  01F0                     l4154:	
  7955                           ;Multi_RX_testjig_v2.c: 701: break;
  7956                           
  7957                           
  7958                           ;Multi_RX_testjig_v2.c: 703: pickit_timer = 1000;
  7959  01F0  30E8               	movlw	232
  7960  01F1  00AC               	movwf	_pickit_timer^(0+128)	;volatile
  7961  01F2  3003               	movlw	3
  7962  01F3  00AD               	movwf	(_pickit_timer^(0+128)+1)	;volatile
  7963                           
  7964                           ;Multi_RX_testjig_v2.c: 704: LATC6 = 1;
  7965  01F4  0022               	movlb	2	; select bank2
  7966  01F5  170E               	bsf	14,6	;volatile
  7967                           
  7968                           ;Multi_RX_testjig_v2.c: 705: pickit_state = pickit_busy;
  7969  01F6  2A22               	goto	L10
  7970  01F7                     l333:	
  7971                           ;Multi_RX_testjig_v2.c: 707: case pickit_busy:
  7972                           
  7973                           ;Multi_RX_testjig_v2.c: 706: break;
  7974                           
  7975                           
  7976                           ;Multi_RX_testjig_v2.c: 708: LATC6 = 0;
  7977  01F7  0022               	movlb	2	; select bank2
  7978  01F8  130E               	bcf	14,6	;volatile
  7979                           
  7980                           ;Multi_RX_testjig_v2.c: 709: if(RE6 == 0)
  7981  01F9  0020               	movlb	0	; select bank0
  7982  01FA  1B10               	btfsc	16,6	;volatile
  7983  01FB  2A04               	goto	l4164
  7984                           
  7985                           ;Multi_RX_testjig_v2.c: 710: {
  7986                           ;Multi_RX_testjig_v2.c: 711: pickit_red_counter++;
  7987  01FC  0021               	movlb	1	; select bank1
  7988  01FD  3065               	movlw	101
  7989  01FE  0AB5               	incf	_pickit_red_counter^(0+128),f
  7990                           
  7991                           ;Multi_RX_testjig_v2.c: 712: if(pickit_red_counter > 100)
  7992  01FF  0235               	subwf	_pickit_red_counter^(0+128),w
  7993  0200  1C03               	skipc
  7994  0201  2A06               	goto	l4166
  7995                           
  7996                           ;Multi_RX_testjig_v2.c: 713: pickit_state = pickit_finish;
  7997  0202  01BB               	clrf	_pickit_state^(0+128)
  7998  0203  2A06               	goto	l4166
  7999  0204                     l4164:	
  8000                           
  8001                           ;Multi_RX_testjig_v2.c: 715: else
  8002                           ;Multi_RX_testjig_v2.c: 716: pickit_red_counter = 0;
  8003  0204  0021               	movlb	1	; select bank1
  8004  0205  01B5               	clrf	_pickit_red_counter^(0+128)
  8005  0206                     l4166:	
  8006                           
  8007                           ;Multi_RX_testjig_v2.c: 717: if(RE5 == 0)
  8008  0206  0020               	movlb	0	; select bank0
  8009  0207  1A90               	btfsc	16,5	;volatile
  8010  0208  2A11               	goto	l337
  8011                           
  8012                           ;Multi_RX_testjig_v2.c: 718: {
  8013                           ;Multi_RX_testjig_v2.c: 719: pickit_state = pickit_error;
  8014  0209  3004               	movlw	4
  8015  020A  0021               	movlb	1	; select bank1
  8016  020B  00BB               	movwf	_pickit_state^(0+128)
  8017                           
  8018                           ;Multi_RX_testjig_v2.c: 720: pickit_timer = 1000;
  8019  020C  30E8               	movlw	232
  8020  020D  00AC               	movwf	_pickit_timer^(0+128)	;volatile
  8021  020E  3003               	movlw	3
  8022  020F  00AD               	movwf	(_pickit_timer^(0+128)+1)	;volatile
  8023                           
  8024                           ;Multi_RX_testjig_v2.c: 721: }
  8025  0210  2A15               	goto	l4172
  8026  0211                     l337:	
  8027                           
  8028                           ;Multi_RX_testjig_v2.c: 722: else if(RE4 == 0)
  8029  0211  1A10               	btfsc	16,4	;volatile
  8030  0212  2A15               	goto	l4172
  8031                           
  8032                           ;Multi_RX_testjig_v2.c: 723: {
  8033                           ;Multi_RX_testjig_v2.c: 724: pickit_state = pickit_finish;
  8034  0213  0021               	movlb	1	; select bank1
  8035  0214  01BB               	clrf	_pickit_state^(0+128)
  8036  0215                     l4172:	
  8037                           
  8038                           ;Multi_RX_testjig_v2.c: 725: }
  8039                           ;Multi_RX_testjig_v2.c: 726: pickit_timer = 1;
  8040  0215  3001               	movlw	1
  8041  0216  0021               	movlb	1	; select bank1
  8042  0217  00AC               	movwf	_pickit_timer^(0+128)	;volatile
  8043  0218  01AD               	clrf	(_pickit_timer+1)^(0+128)	;volatile
  8044                           
  8045                           ;Multi_RX_testjig_v2.c: 727: break;
  8046  0219  2A49               	goto	l4184
  8047  021A                     l340:	
  8048                           ;Multi_RX_testjig_v2.c: 728: case pickit_error:
  8049                           
  8050                           
  8051                           ;Multi_RX_testjig_v2.c: 729: LATC2 = 0;
  8052  021A  0022               	movlb	2	; select bank2
  8053  021B  110E               	bcf	14,2	;volatile
  8054                           
  8055                           ;Multi_RX_testjig_v2.c: 730: LATC7 = 0;
  8056  021C  138E               	bcf	14,7	;volatile
  8057                           
  8058                           ;Multi_RX_testjig_v2.c: 731: break;
  8059  021D  2A49               	goto	l4184
  8060  021E                     l341:	
  8061                           ;Multi_RX_testjig_v2.c: 732: case pickit_finish:
  8062                           
  8063                           
  8064                           ;Multi_RX_testjig_v2.c: 733: LATC2 = 0;
  8065  021E  0022               	movlb	2	; select bank2
  8066  021F  110E               	bcf	14,2	;volatile
  8067                           
  8068                           ;Multi_RX_testjig_v2.c: 734: LATC7 = 0;
  8069  0220  138E               	bcf	14,7	;volatile
  8070                           
  8071                           ;Multi_RX_testjig_v2.c: 735: pickit_state = pickit_idle;
  8072  0221  3005               	movlw	5
  8073  0222                     L10:	
  8074  0222  0021               	movlb	1	; select bank1
  8075  0223                     L3:	
  8076  0223  00BB               	movwf	_pickit_state^(0+128)
  8077                           
  8078                           ;Multi_RX_testjig_v2.c: 736: break;
  8079  0224  2A49               	goto	l4184
  8080  0225                     l4178:	
  8081  0225  083B               	movf	_pickit_state^(0+128),w
  8082                           
  8083                           ; Switch size 1, requested type "speed"
  8084                           ; Number of cases is 6, Range of values is 0 to 5
  8085                           ; switch strategies available:
  8086                           ; Name         Instructions Cycles
  8087                           ; direct_byte           18     6 (fixed)
  8088                           ; simple_byte           19    10 (average)
  8089                           ; jumptable            260     6 (fixed)
  8090                           ;	Chosen strategy is direct_byte
  8091  0226  0084               	movwf	4
  8092  0227  3006               	movlw	6
  8093  0228  0204               	subwf	4,w
  8094  0229  1803               	skipnc
  8095  022A  2A49               	goto	l4184
  8096  022B  3193               	movlp	high S4668
  8097  022C  3504               	lslf	4,w
  8098  022D  3EDE               	addlw	low S4668
  8099  022E  0082               	movwf	2
  8100  022F                     l328:	
  8101                           
  8102                           ;Multi_RX_testjig_v2.c: 740: }
  8103                           ;Multi_RX_testjig_v2.c: 743: }
  8104  022F  2A49               	goto	l4184
  8105  0230                     l4180:	
  8106                           
  8107                           ;Multi_RX_testjig_v2.c: 744: else
  8108                           ;Multi_RX_testjig_v2.c: 745: {
  8109                           ;Multi_RX_testjig_v2.c: 746: print_screen("Pickit Programming", " skipped");
  8110  0230  303F               	movlw	low (STR_27| (0+32768))
  8111  0231  00F4               	movwf	print_screen@top
  8112  0232  3090               	movlw	high (STR_27| (0+32768))
  8113  0233  00F5               	movwf	print_screen@top+1
  8114  0234  306D               	movlw	low (STR_32| (0+32768))
  8115  0235  00F6               	movwf	print_screen@bottom
  8116  0236  3093               	movlw	high (STR_32| (0+32768))
  8117  0237  00F7               	movwf	print_screen@bottom+1
  8118  0238  318A  22D4  3180   	fcall	_print_screen
  8119                           
  8120                           ;Multi_RX_testjig_v2.c: 747: _delay((unsigned long)((300)*(16000000/4000.0)));
  8121  023B  3007               	movlw	7
  8122  023C  0020               	movlb	0	; select bank0
  8123  023D  00E3               	movwf	??_main+2
  8124  023E  3017               	movlw	23
  8125  023F  00E2               	movwf	??_main+1
  8126  0240  306F               	movlw	111
  8127  0241  00E1               	movwf	??_main
  8128  0242                     u5417:	
  8129  0242  0BE1               	decfsz	??_main,f
  8130  0243  2A42               	goto	u5417
  8131  0244  0BE2               	decfsz	??_main+1,f
  8132  0245  2A42               	goto	u5417
  8133  0246  0BE3               	decfsz	??_main+2,f
  8134  0247  2A42               	goto	u5417
  8135  0248  0000               	nop
  8136  0249                     l4184:	
  8137                           
  8138                           ;Multi_RX_testjig_v2.c: 748: }
  8139                           ;Multi_RX_testjig_v2.c: 763: LATF4 = 0;
  8140  0249  0027               	movlb	7	; select bank7
  8141  024A  120C               	bcf	12,4	;volatile
  8142                           
  8143                           ;Multi_RX_testjig_v2.c: 764: _delay((unsigned long)((100)*(16000000/4000.0)));
  8144  024B  3003               	movlw	3
  8145  024C  0020               	movlb	0	; select bank0
  8146  024D  00E3               	movwf	??_main+2
  8147  024E  3008               	movlw	8
  8148  024F  00E2               	movwf	??_main+1
  8149  0250  3078               	movlw	120
  8150  0251  00E1               	movwf	??_main
  8151  0252                     u5427:	
  8152  0252  0BE1               	decfsz	??_main,f
  8153  0253  2A52               	goto	u5427
  8154  0254  0BE2               	decfsz	??_main+1,f
  8155  0255  2A52               	goto	u5427
  8156  0256  0BE3               	decfsz	??_main+2,f
  8157  0257  2A52               	goto	u5427
  8158                           
  8159                           ;Multi_RX_testjig_v2.c: 765: LATF4 = 1;
  8160  0258  0027               	movlb	7	; select bank7
  8161  0259  160C               	bsf	12,4	;volatile
  8162                           
  8163                           ;Multi_RX_testjig_v2.c: 766: _delay((unsigned long)((100)*(16000000/4000.0)));
  8164  025A  3003               	movlw	3
  8165  025B  0020               	movlb	0	; select bank0
  8166  025C  00E3               	movwf	??_main+2
  8167  025D  3008               	movlw	8
  8168  025E  00E2               	movwf	??_main+1
  8169  025F  3078               	movlw	120
  8170  0260  00E1               	movwf	??_main
  8171  0261                     u5437:	
  8172  0261  0BE1               	decfsz	??_main,f
  8173  0262  2A61               	goto	u5437
  8174  0263  0BE2               	decfsz	??_main+1,f
  8175  0264  2A61               	goto	u5437
  8176  0265  0BE3               	decfsz	??_main+2,f
  8177  0266  2A61               	goto	u5437
  8178                           
  8179                           ;Multi_RX_testjig_v2.c: 767: LATF4 = 0;
  8180  0267  0027               	movlb	7	; select bank7
  8181  0268  120C               	bcf	12,4	;volatile
  8182                           
  8183                           ;Multi_RX_testjig_v2.c: 768: print_screen("Establishing", "comms");
  8184  0269  3061               	movlw	low (STR_33| (0+32768))
  8185  026A  00F4               	movwf	print_screen@top
  8186  026B  3092               	movlw	high (STR_33| (0+32768))
  8187  026C  00F5               	movwf	print_screen@top+1
  8188  026D  3005               	movlw	low ((STR_140+5)| (0+32768))
  8189  026E  00F6               	movwf	print_screen@bottom
  8190  026F  3093               	movlw	high ((STR_140+5)| (0+32768))
  8191  0270  00F7               	movwf	print_screen@bottom+1
  8192  0271  318A  22D4  3180   	fcall	_print_screen
  8193                           
  8194                           ;Multi_RX_testjig_v2.c: 769: unsigned char device_type;
  8195                           ;Multi_RX_testjig_v2.c: 770: unsigned char RX_data = 0;
  8196  0274  0020               	movlb	0	; select bank0
  8197  0275  01ED               	clrf	main@RX_data
  8198                           
  8199                           ;Multi_RX_testjig_v2.c: 771: unsigned int i;
  8200                           ;Multi_RX_testjig_v2.c: 773: LATC2 = 0;
  8201  0276  0022               	movlb	2	; select bank2
  8202  0277  110E               	bcf	14,2	;volatile
  8203                           
  8204                           ;Multi_RX_testjig_v2.c: 774: LATC7 = 0;
  8205  0278  138E               	bcf	14,7	;volatile
  8206                           
  8207                           ;Multi_RX_testjig_v2.c: 775: LATB7 = 0;
  8208  0279  138D               	bcf	13,7	;volatile
  8209                           
  8210                           ;Multi_RX_testjig_v2.c: 776: LATA7 = 0;
  8211  027A  138C               	bcf	12,7	;volatile
  8212                           
  8213                           ;Multi_RX_testjig_v2.c: 796: for(i = 0; i < 100; i++)
  8214  027B  0020               	movlb	0	; select bank0
  8215  027C  3000               	movlw	0
  8216  027D  01EB               	clrf	main@i
  8217  027E  01EC               	clrf	main@i+1
  8218  027F  026C               	subwf	main@i+1,w
  8219  0280  3064               	movlw	100
  8220  0281  1903               	skipnz
  8221  0282  026B               	subwf	main@i,w
  8222  0283  1803               	btfsc	3,0
  8223  0284  2AE4               	goto	l4230
  8224  0285                     l4210:	
  8225                           
  8226                           ;Multi_RX_testjig_v2.c: 797: {
  8227                           ;Multi_RX_testjig_v2.c: 798: TX_one(0x01);
  8228  0285  3001               	movlw	1
  8229  0286  3195  2579  3180   	fcall	_TX_one
  8230                           
  8231                           ;Multi_RX_testjig_v2.c: 799: device_type = RX_one_timeout();
  8232  0289  3188  2042  3180   	fcall	_RX_one_timeout
  8233  028C  0020               	movlb	0	; select bank0
  8234  028D  00EE               	movwf	main@device_type
  8235                           
  8236                           ;Multi_RX_testjig_v2.c: 800: if((device_type == 0xAA) || (device_type == 0xA1) || (devic
      +                          e_type == 0xA2))
  8237  028E  3AAA               	xorlw	170
  8238  028F  1903               	btfsc	3,2
  8239  0290  2A99               	goto	l4218
  8240  0291  30A1               	movlw	161
  8241  0292  066E               	xorwf	main@device_type,w
  8242  0293  1903               	btfsc	3,2
  8243  0294  2A99               	goto	l4218
  8244  0295  30A2               	movlw	162
  8245  0296  066E               	xorwf	main@device_type,w
  8246  0297  1D03               	btfss	3,2
  8247  0298  2AB3               	goto	l4222
  8248  0299                     l4218:	
  8249                           
  8250                           ;Multi_RX_testjig_v2.c: 801: {
  8251                           ;Multi_RX_testjig_v2.c: 802: lcd_print_int(device_type, 5, 0, 0);
  8252  0299  086E               	movf	main@device_type,w
  8253  029A  00DB               	movwf	lcd_print_int@number
  8254  029B  3005               	movlw	5
  8255  029C  01DC               	clrf	lcd_print_int@number+1
  8256  029D  00DD               	movwf	lcd_print_int@pos
  8257  029E  01DE               	clrf	lcd_print_int@pos+1
  8258  029F  01DF               	clrf	lcd_print_int@decimal
  8259  02A0  01E0               	clrf	lcd_print_int@ten_thou_digit
  8260  02A1  3188  20F7  3180   	fcall	_lcd_print_int
  8261                           
  8262                           ;Multi_RX_testjig_v2.c: 803: _delay((unsigned long)((1000)*(16000000/4000.0)));
  8263  02A4  3015               	movlw	21
  8264  02A5  0020               	movlb	0	; select bank0
  8265  02A6  00E3               	movwf	??_main+2
  8266  02A7  304B               	movlw	75
  8267  02A8  00E2               	movwf	??_main+1
  8268  02A9  30D1               	movlw	209
  8269  02AA  00E1               	movwf	??_main
  8270  02AB                     u5447:	
  8271  02AB  0BE1               	decfsz	??_main,f
  8272  02AC  2AAB               	goto	u5447
  8273  02AD  0BE2               	decfsz	??_main+1,f
  8274  02AE  2AAB               	goto	u5447
  8275  02AF  0BE3               	decfsz	??_main+2,f
  8276  02B0  2AAB               	goto	u5447
  8277  02B1  0000               	nop
  8278                           
  8279                           ;Multi_RX_testjig_v2.c: 804: break;
  8280  02B2  2AE4               	goto	l4230
  8281  02B3                     l4222:	
  8282                           
  8283                           ;Multi_RX_testjig_v2.c: 805: }
  8284                           ;Multi_RX_testjig_v2.c: 806: lcd_print_int(i, 11, 0, 0);
  8285  02B3  086C               	movf	main@i+1,w
  8286  02B4  00DC               	movwf	lcd_print_int@number+1
  8287  02B5  086B               	movf	main@i,w
  8288  02B6  00DB               	movwf	lcd_print_int@number
  8289  02B7  300B               	movlw	11
  8290  02B8  00DD               	movwf	lcd_print_int@pos
  8291  02B9  01DE               	clrf	lcd_print_int@pos+1
  8292  02BA  01DF               	clrf	lcd_print_int@decimal
  8293  02BB  01E0               	clrf	lcd_print_int@ten_thou_digit
  8294  02BC  3188  20F7  3180   	fcall	_lcd_print_int
  8295                           
  8296                           ;Multi_RX_testjig_v2.c: 807: lcd_print_int(device_type, 5, 0, 0);
  8297  02BF  0020               	movlb	0	; select bank0
  8298  02C0  086E               	movf	main@device_type,w
  8299  02C1  00DB               	movwf	lcd_print_int@number
  8300  02C2  3005               	movlw	5
  8301  02C3  01DC               	clrf	lcd_print_int@number+1
  8302  02C4  00DD               	movwf	lcd_print_int@pos
  8303  02C5  01DE               	clrf	lcd_print_int@pos+1
  8304  02C6  01DF               	clrf	lcd_print_int@decimal
  8305  02C7  01E0               	clrf	lcd_print_int@ten_thou_digit
  8306  02C8  3188  20F7  3180   	fcall	_lcd_print_int
  8307                           
  8308                           ;Multi_RX_testjig_v2.c: 808: _delay((unsigned long)((50)*(16000000/4000.0)));
  8309  02CB  3002               	movlw	2
  8310  02CC  0020               	movlb	0	; select bank0
  8311  02CD  00E3               	movwf	??_main+2
  8312  02CE  3004               	movlw	4
  8313  02CF  00E2               	movwf	??_main+1
  8314  02D0  30BA               	movlw	186
  8315  02D1  00E1               	movwf	??_main
  8316  02D2                     u5457:	
  8317  02D2  0BE1               	decfsz	??_main,f
  8318  02D3  2AD2               	goto	u5457
  8319  02D4  0BE2               	decfsz	??_main+1,f
  8320  02D5  2AD2               	goto	u5457
  8321  02D6  0BE3               	decfsz	??_main+2,f
  8322  02D7  2AD2               	goto	u5457
  8323  02D8  0000               	nop
  8324  02D9  0020               	movlb	0	; select bank0
  8325  02DA  0AEB               	incf	main@i,f
  8326  02DB  1903               	skipnz
  8327  02DC  0AEC               	incf	main@i+1,f
  8328  02DD  3000               	movlw	0
  8329  02DE  026C               	subwf	main@i+1,w
  8330  02DF  3064               	movlw	100
  8331  02E0  1903               	skipnz
  8332  02E1  026B               	subwf	main@i,w
  8333  02E2  1C03               	skipc
  8334  02E3  2A85               	goto	l4210
  8335  02E4                     l4230:	
  8336                           
  8337                           ;Multi_RX_testjig_v2.c: 809: }
  8338                           ;Multi_RX_testjig_v2.c: 810: if(i >= 30)
  8339  02E4  3000               	movlw	0
  8340  02E5  0020               	movlb	0	; select bank0
  8341  02E6  026C               	subwf	main@i+1,w
  8342  02E7  301E               	movlw	30
  8343  02E8  1903               	skipnz
  8344  02E9  026B               	subwf	main@i,w
  8345  02EA  1C03               	skipc
  8346  02EB  2AF8               	goto	l4234
  8347                           
  8348                           ;Multi_RX_testjig_v2.c: 811: {
  8349                           ;Multi_RX_testjig_v2.c: 814: print_error("Comms Error", " 1");
  8350  02EC  30D1               	movlw	low (STR_35| (0+32768))
  8351  02ED  00F8               	movwf	print_error@top
  8352  02EE  3092               	movlw	high (STR_35| (0+32768))
  8353  02EF  00F9               	movwf	print_error@top+1
  8354  02F0  30DB               	movlw	low (STR_36| (0+32768))
  8355  02F1  00FA               	movwf	print_error@bottom
  8356  02F2  3093               	movlw	high (STR_36| (0+32768))
  8357  02F3  00FB               	movwf	print_error@bottom+1
  8358  02F4  318A  22F6  3180   	fcall	_print_error
  8359                           
  8360                           ;Multi_RX_testjig_v2.c: 815: }
  8361  02F7  2B1E               	goto	l4238
  8362  02F8                     l4234:	
  8363                           
  8364                           ;Multi_RX_testjig_v2.c: 816: else
  8365                           ;Multi_RX_testjig_v2.c: 817: {
  8366                           ;Multi_RX_testjig_v2.c: 818: lcd_print_int(i, 11, 0, 0);
  8367  02F8  086C               	movf	main@i+1,w
  8368  02F9  00DC               	movwf	lcd_print_int@number+1
  8369  02FA  086B               	movf	main@i,w
  8370  02FB  00DB               	movwf	lcd_print_int@number
  8371  02FC  300B               	movlw	11
  8372  02FD  00DD               	movwf	lcd_print_int@pos
  8373  02FE  01DE               	clrf	lcd_print_int@pos+1
  8374  02FF  01DF               	clrf	lcd_print_int@decimal
  8375  0300  01E0               	clrf	lcd_print_int@ten_thou_digit
  8376  0301  3188  20F7  3180   	fcall	_lcd_print_int
  8377                           
  8378                           ;Multi_RX_testjig_v2.c: 819: lcd_print_int(device_type, 5, 0, 0);
  8379  0304  0020               	movlb	0	; select bank0
  8380  0305  086E               	movf	main@device_type,w
  8381  0306  00DB               	movwf	lcd_print_int@number
  8382  0307  3005               	movlw	5
  8383  0308  01DC               	clrf	lcd_print_int@number+1
  8384  0309  00DD               	movwf	lcd_print_int@pos
  8385  030A  01DE               	clrf	lcd_print_int@pos+1
  8386  030B  01DF               	clrf	lcd_print_int@decimal
  8387  030C  01E0               	clrf	lcd_print_int@ten_thou_digit
  8388  030D  3188  20F7  3180   	fcall	_lcd_print_int
  8389                           
  8390                           ;Multi_RX_testjig_v2.c: 820: _delay((unsigned long)((50)*(16000000/4000.0)));
  8391  0310  3002               	movlw	2
  8392  0311  0020               	movlb	0	; select bank0
  8393  0312  00E3               	movwf	??_main+2
  8394  0313  3004               	movlw	4
  8395  0314  00E2               	movwf	??_main+1
  8396  0315  30BA               	movlw	186
  8397  0316  00E1               	movwf	??_main
  8398  0317                     u5467:	
  8399  0317  0BE1               	decfsz	??_main,f
  8400  0318  2B17               	goto	u5467
  8401  0319  0BE2               	decfsz	??_main+1,f
  8402  031A  2B17               	goto	u5467
  8403  031B  0BE3               	decfsz	??_main+2,f
  8404  031C  2B17               	goto	u5467
  8405  031D  0000               	nop
  8406  031E                     l4238:	
  8407                           
  8408                           ;Multi_RX_testjig_v2.c: 821: }
  8409                           ;Multi_RX_testjig_v2.c: 823: if((device_type == 0xAA)|| (device_type == 0xA2))
  8410  031E  30AA               	movlw	170
  8411  031F  0020               	movlb	0	; select bank0
  8412  0320  066E               	xorwf	main@device_type,w
  8413  0321  1903               	btfsc	3,2
  8414  0322  2B27               	goto	l4242
  8415  0323  30A2               	movlw	162
  8416  0324  066E               	xorwf	main@device_type,w
  8417  0325  1D03               	btfss	3,2
  8418  0326  2B99               	goto	l4280
  8419  0327                     l4242:	
  8420                           
  8421                           ;Multi_RX_testjig_v2.c: 824: {
  8422                           ;Multi_RX_testjig_v2.c: 826: print_screen("Testing ", "EEPROM read/write");
  8423  0327  3049               	movlw	low (STR_37| (0+32768))
  8424  0328  00F4               	movwf	print_screen@top
  8425  0329  3093               	movlw	high (STR_37| (0+32768))
  8426  032A  00F5               	movwf	print_screen@top+1
  8427  032B  3052               	movlw	low (STR_38| (0+32768))
  8428  032C  00F6               	movwf	print_screen@bottom
  8429  032D  3090               	movlw	high (STR_38| (0+32768))
  8430  032E  00F7               	movwf	print_screen@bottom+1
  8431  032F  318A  22D4  3180   	fcall	_print_screen
  8432                           
  8433                           ;Multi_RX_testjig_v2.c: 827: TX_one(0x10);
  8434  0332  3010               	movlw	16
  8435  0333  3195  2579  3180   	fcall	_TX_one
  8436                           
  8437                           ;Multi_RX_testjig_v2.c: 828: RX_data = RX_one();
  8438  0336  3188  201C  3180   	fcall	_RX_one
  8439  0339  0020               	movlb	0	; select bank0
  8440  033A  00ED               	movwf	main@RX_data
  8441                           
  8442                           ;Multi_RX_testjig_v2.c: 829: if(RX_data == 0xEE)
  8443  033B  3AEE               	xorlw	238
  8444  033C  1D03               	btfss	3,2
  8445  033D  2B46               	goto	l4252
  8446                           
  8447                           ;Multi_RX_testjig_v2.c: 830: print_error("EEPROM error", " Read/Write");
  8448  033E  306E               	movlw	low (STR_39| (0+32768))
  8449  033F  00F8               	movwf	print_error@top
  8450  0340  3092               	movlw	high (STR_39| (0+32768))
  8451  0341  00F9               	movwf	print_error@top+1
  8452  0342  30A1               	movlw	low (STR_40| (0+32768))
  8453  0343  00FA               	movwf	print_error@bottom
  8454  0344  3092               	movlw	high (STR_40| (0+32768))
  8455  0345  2B51               	goto	L4
  8456  0346                     l4252:	
  8457                           
  8458                           ;Multi_RX_testjig_v2.c: 831: else if(RX_data != 0x1A)
  8459  0346  301A               	movlw	26
  8460  0347  066D               	xorwf	main@RX_data,w
  8461  0348  1903               	btfsc	3,2
  8462  0349  2B55               	goto	l355
  8463                           
  8464                           ;Multi_RX_testjig_v2.c: 832: print_error("Comms Error", " 2");
  8465  034A  30D1               	movlw	low (STR_35| (0+32768))
  8466  034B  00F8               	movwf	print_error@top
  8467  034C  3092               	movlw	high (STR_35| (0+32768))
  8468  034D  00F9               	movwf	print_error@top+1
  8469  034E  3058               	movlw	low ((STR_54+6)| (0+32768))
  8470  034F  00FA               	movwf	print_error@bottom
  8471  0350  3093               	movlw	high ((STR_54+6)| (0+32768))
  8472  0351                     L4:	
  8473  0351  00FB               	movwf	print_error@bottom+1
  8474  0352  318A  22F6  3180   	fcall	_print_error
  8475  0355                     l355:	
  8476                           
  8477                           ;Multi_RX_testjig_v2.c: 835: unsigned int mem_size;
  8478                           ;Multi_RX_testjig_v2.c: 836: print_screen("Test EEPROM ", " size");
  8479  0355  3013               	movlw	low (STR_43| (0+32768))
  8480  0356  00F4               	movwf	print_screen@top
  8481  0357  3092               	movlw	high (STR_43| (0+32768))
  8482  0358  00F5               	movwf	print_screen@top+1
  8483  0359  30B3               	movlw	low ((STR_45+6)| (0+32768))
  8484  035A  00F6               	movwf	print_screen@bottom
  8485  035B  3092               	movlw	high ((STR_45+6)| (0+32768))
  8486  035C  00F7               	movwf	print_screen@bottom+1
  8487  035D  318A  22D4  3180   	fcall	_print_screen
  8488                           
  8489                           ;Multi_RX_testjig_v2.c: 837: TX_one(0x20);
  8490  0360  3020               	movlw	32
  8491  0361  3195  2579  3180   	fcall	_TX_one
  8492                           
  8493                           ;Multi_RX_testjig_v2.c: 838: RX_data = RX_one();
  8494  0364  3188  201C  3180   	fcall	_RX_one
  8495  0367  0020               	movlb	0	; select bank0
  8496  0368  00ED               	movwf	main@RX_data
  8497                           
  8498                           ;Multi_RX_testjig_v2.c: 839: mem_size = RX_data<<8;
  8499  0369  00E7               	movwf	main@mem_size+1
  8500  036A  3021               	movlw	33
  8501  036B  01E6               	clrf	main@mem_size
  8502                           
  8503                           ;Multi_RX_testjig_v2.c: 840: TX_one(0x21);
  8504  036C  3195  2579  3180   	fcall	_TX_one
  8505                           
  8506                           ;Multi_RX_testjig_v2.c: 841: RX_data = RX_one();
  8507  036F  3188  201C  3180   	fcall	_RX_one
  8508  0372  0020               	movlb	0	; select bank0
  8509  0373  00ED               	movwf	main@RX_data
  8510                           
  8511                           ;Multi_RX_testjig_v2.c: 842: mem_size = mem_size | RX_data;
  8512  0374  04E6               	iorwf	main@mem_size,f
  8513                           
  8514                           ;Multi_RX_testjig_v2.c: 843: if(device_type == 0xAA)
  8515  0375  30AA               	movlw	170
  8516  0376  066E               	xorwf	main@device_type,w
  8517  0377  1D03               	btfss	3,2
  8518  0378  2B86               	goto	l4274
  8519                           
  8520                           ;Multi_RX_testjig_v2.c: 844: {
  8521                           ;Multi_RX_testjig_v2.c: 845: if(mem_size != 0x2000)
  8522  0379  3020               	movlw	32
  8523  037A  0667               	xorwf	main@mem_size+1,w
  8524  037B  0466               	iorwf	main@mem_size,w
  8525  037C  1903               	btfsc	3,2
  8526  037D  2B99               	goto	l4280
  8527                           
  8528                           ;Multi_RX_testjig_v2.c: 846: print_error("EEPROM size", " Error Condo3");
  8529  037E  30AD               	movlw	low (STR_45| (0+32768))
  8530  037F  00F8               	movwf	print_error@top
  8531  0380  3092               	movlw	high (STR_45| (0+32768))
  8532  0381  00F9               	movwf	print_error@top+1
  8533  0382  30B1               	movlw	low (STR_46| (0+32768))
  8534  0383  00FA               	movwf	print_error@bottom
  8535  0384  3091               	movlw	high (STR_46| (0+32768))
  8536  0385  2B95               	goto	L11
  8537  0386                     l4274:	
  8538                           
  8539                           ;Multi_RX_testjig_v2.c: 848: else if(device_type == 0xA2)
  8540  0386  30A2               	movlw	162
  8541  0387  066E               	xorwf	main@device_type,w
  8542  0388  1D03               	btfss	3,2
  8543  0389  2B99               	goto	l4280
  8544                           
  8545                           ;Multi_RX_testjig_v2.c: 849: {
  8546                           ;Multi_RX_testjig_v2.c: 850: if(mem_size != 0x0000)
  8547  038A  0866               	movf	main@mem_size,w
  8548  038B  0467               	iorwf	main@mem_size+1,w
  8549  038C  1903               	btfsc	3,2
  8550  038D  2B99               	goto	l4280
  8551                           
  8552                           ;Multi_RX_testjig_v2.c: 851: print_error("EEPROM size", " Error Mem_copier");
  8553  038E  30AD               	movlw	low (STR_45| (0+32768))
  8554  038F  00F8               	movwf	print_error@top
  8555  0390  3092               	movlw	high (STR_45| (0+32768))
  8556  0391  00F9               	movwf	print_error@top+1
  8557  0392  3064               	movlw	low (STR_48| (0+32768))
  8558  0393  00FA               	movwf	print_error@bottom
  8559  0394  3090               	movlw	high (STR_48| (0+32768))
  8560  0395                     L11:	
  8561  0395  00FB               	movwf	print_error@bottom+1
  8562  0396  318A  22F6  3180   	fcall	_print_error
  8563  0399                     l4280:	
  8564                           
  8565                           ;Multi_RX_testjig_v2.c: 852: }
  8566                           ;Multi_RX_testjig_v2.c: 853: }
  8567                           ;Multi_RX_testjig_v2.c: 855: if((device_type == 0xAA)|| (device_type == 0xA1))
  8568  0399  30AA               	movlw	170
  8569  039A  0020               	movlb	0	; select bank0
  8570  039B  066E               	xorwf	main@device_type,w
  8571  039C  1903               	btfsc	3,2
  8572  039D  2BA2               	goto	l4284
  8573  039E  30A1               	movlw	161
  8574  039F  066E               	xorwf	main@device_type,w
  8575  03A0  1D03               	btfss	3,2
  8576  03A1  2D2B               	goto	l4388
  8577  03A2                     l4284:	
  8578                           
  8579                           ;Multi_RX_testjig_v2.c: 856: {
  8580                           ;Multi_RX_testjig_v2.c: 858: Vout_set(27);
  8581  03A2  301B               	movlw	27
  8582  03A3  00F4               	movwf	Vout_set@Volts
  8583  03A4  01F5               	clrf	Vout_set@Volts+1
  8584  03A5  3188  20C0  3180   	fcall	_Vout_set
  8585                           
  8586                           ;Multi_RX_testjig_v2.c: 859: print_screen("Test Relay", "");
  8587  03A8  300B               	movlw	low (STR_49| (0+32768))
  8588  03A9  00F4               	movwf	print_screen@top
  8589  03AA  3093               	movlw	high (STR_49| (0+32768))
  8590  03AB  00F5               	movwf	print_screen@top+1
  8591  03AC  30DA               	movlw	low ((STR_137+15)| (0+32768))
  8592  03AD  00F6               	movwf	print_screen@bottom
  8593  03AE  3090               	movlw	high ((STR_137+15)| (0+32768))
  8594  03AF  00F7               	movwf	print_screen@bottom+1
  8595  03B0  318A  22D4  3180   	fcall	_print_screen
  8596                           
  8597                           ;Multi_RX_testjig_v2.c: 895: TX_one(0x31);
  8598  03B3  3031               	movlw	49
  8599  03B4  3195  2579  3180   	fcall	_TX_one
  8600                           
  8601                           ;Multi_RX_testjig_v2.c: 896: if(RX_one() == 0x3B)
  8602  03B7  3188  201C  3180   	fcall	_RX_one
  8603  03BA  3A3B               	xorlw	59
  8604  03BB  1D03               	skipz
  8605  03BC  2C26               	goto	l4318
  8606                           
  8607                           ;Multi_RX_testjig_v2.c: 897: {
  8608                           ;Multi_RX_testjig_v2.c: 898: _delay((unsigned long)((100)*(16000000/4000.0)));
  8609  03BD  3003               	movlw	3
  8610  03BE  0020               	movlb	0	; select bank0
  8611  03BF  00E3               	movwf	??_main+2
  8612  03C0  3008               	movlw	8
  8613  03C1  00E2               	movwf	??_main+1
  8614  03C2  3078               	movlw	120
  8615  03C3  00E1               	movwf	??_main
  8616  03C4                     u5477:	
  8617  03C4  0BE1               	decfsz	??_main,f
  8618  03C5  2BC4               	goto	u5477
  8619  03C6  0BE2               	decfsz	??_main+1,f
  8620  03C7  2BC4               	goto	u5477
  8621  03C8  0BE3               	decfsz	??_main+2,f
  8622  03C9  2BC4               	goto	u5477
  8623                           
  8624                           ;Multi_RX_testjig_v2.c: 899: if(RF5)
  8625  03CA  0025               	movlb	5	; select bank5
  8626  03CB  1E8C               	btfss	12,5	;volatile
  8627  03CC  2C1E               	goto	l4316
  8628                           
  8629                           ;Multi_RX_testjig_v2.c: 900: {
  8630                           ;Multi_RX_testjig_v2.c: 901: TX_one(0x30);
  8631  03CD  3030               	movlw	48
  8632  03CE  3195  2579  3180   	fcall	_TX_one
  8633                           
  8634                           ;Multi_RX_testjig_v2.c: 902: if(RX_one() == 0x3A)
  8635  03D1  3188  201C  3180   	fcall	_RX_one
  8636  03D4  3A3A               	xorlw	58
  8637  03D5  1D03               	skipz
  8638  03D6  2C26               	goto	l4318
  8639                           
  8640                           ;Multi_RX_testjig_v2.c: 903: {
  8641                           ;Multi_RX_testjig_v2.c: 904: _delay((unsigned long)((100)*(16000000/4000.0)));
  8642  03D7  3003               	movlw	3
  8643  03D8  0020               	movlb	0	; select bank0
  8644  03D9  00E3               	movwf	??_main+2
  8645  03DA  3008               	movlw	8
  8646  03DB  00E2               	movwf	??_main+1
  8647  03DC  3078               	movlw	120
  8648  03DD  00E1               	movwf	??_main
  8649  03DE                     u5487:	
  8650  03DE  0BE1               	decfsz	??_main,f
  8651  03DF  2BDE               	goto	u5487
  8652  03E0  0BE2               	decfsz	??_main+1,f
  8653  03E1  2BDE               	goto	u5487
  8654  03E2  0BE3               	decfsz	??_main+2,f
  8655  03E3  2BDE               	goto	u5487
  8656                           
  8657                           ;Multi_RX_testjig_v2.c: 906: if(RF5 == 0)
  8658  03E4  0025               	movlb	5	; select bank5
  8659  03E5  1A8C               	btfsc	12,5	;volatile
  8660  03E6  2C16               	goto	l4312
  8661                           
  8662                           ;Multi_RX_testjig_v2.c: 907: {
  8663                           ;Multi_RX_testjig_v2.c: 908: TX_one(0x31);
  8664  03E7  3031               	movlw	49
  8665  03E8  3195  2579  3180   	fcall	_TX_one
  8666                           
  8667                           ;Multi_RX_testjig_v2.c: 909: if(RX_one() == 0x3B)
  8668  03EB  3188  201C  3180   	fcall	_RX_one
  8669  03EE  3A3B               	xorlw	59
  8670  03EF  1D03               	skipz
  8671  03F0  2C26               	goto	l4318
  8672                           
  8673                           ;Multi_RX_testjig_v2.c: 910: {
  8674                           ;Multi_RX_testjig_v2.c: 911: _delay((unsigned long)((50)*(16000000/4000.0)));
  8675  03F1  3002               	movlw	2
  8676  03F2  0020               	movlb	0	; select bank0
  8677  03F3  00E3               	movwf	??_main+2
  8678  03F4  3004               	movlw	4
  8679  03F5  00E2               	movwf	??_main+1
  8680  03F6  30BA               	movlw	186
  8681  03F7  00E1               	movwf	??_main
  8682  03F8                     u5497:	
  8683  03F8  0BE1               	decfsz	??_main,f
  8684  03F9  2BF8               	goto	u5497
  8685  03FA  0BE2               	decfsz	??_main+1,f
  8686  03FB  2BF8               	goto	u5497
  8687  03FC  0BE3               	decfsz	??_main+2,f
  8688  03FD  2BF8               	goto	u5497
  8689  03FE  0000               	nop
  8690                           
  8691                           ;Multi_RX_testjig_v2.c: 912: if(RF5 == 1)
  8692  03FF  0025               	movlb	5	; select bank5
  8693  0400  1E8C               	btfss	12,5	;volatile
  8694  0401  2C0E               	goto	l4308
  8695                           
  8696                           ;Multi_RX_testjig_v2.c: 913: print_screen("Test Relay", "Pass");
  8697  0402  300B               	movlw	low (STR_49| (0+32768))
  8698  0403  00F4               	movwf	print_screen@top
  8699  0404  3093               	movlw	high (STR_49| (0+32768))
  8700  0405  00F5               	movwf	print_screen@top+1
  8701  0406  307A               	movlw	low ((STR_143+4)| (0+32768))
  8702  0407  00F6               	movwf	print_screen@bottom
  8703  0408  3093               	movlw	high ((STR_143+4)| (0+32768))
  8704  0409  00F7               	movwf	print_screen@bottom+1
  8705  040A  318A  22D4  3180   	fcall	_print_screen
  8706  040D  2C31               	goto	l4320
  8707  040E                     l4308:	
  8708                           
  8709                           ;Multi_RX_testjig_v2.c: 914: else
  8710                           ;Multi_RX_testjig_v2.c: 915: print_error("Relay1 !de-energized", " Error 2");
  8711  040E  3000               	movlw	low (STR_53| (0+32768))
  8712  040F  00F8               	movwf	print_error@top
  8713  0410  3090               	movlw	high (STR_53| (0+32768))
  8714  0411  00F9               	movwf	print_error@top+1
  8715  0412  3052               	movlw	low (STR_54| (0+32768))
  8716  0413  00FA               	movwf	print_error@bottom
  8717  0414  3093               	movlw	high (STR_54| (0+32768))
  8718  0415  2C2D               	goto	L5
  8719  0416                     l4312:	
  8720                           ;Multi_RX_testjig_v2.c: 917: else
  8721                           ;Multi_RX_testjig_v2.c: 918: print_error("Comms Error", " Error 3");
  8722                           
  8723                           
  8724                           ;Multi_RX_testjig_v2.c: 920: else
  8725                           ;Multi_RX_testjig_v2.c: 921: print_error("Relay1 !latched", "Error 2");
  8726  0416  30EB               	movlw	low (STR_57| (0+32768))
  8727  0417  00F8               	movwf	print_error@top
  8728  0418  3090               	movlw	high (STR_57| (0+32768))
  8729  0419  00F9               	movwf	print_error@top+1
  8730  041A  3053               	movlw	low ((STR_54+1)| (0+32768))
  8731  041B  00FA               	movwf	print_error@bottom
  8732  041C  3093               	movlw	high ((STR_54+1)| (0+32768))
  8733  041D  2C2D               	goto	L5
  8734  041E                     l4316:	
  8735                           ;Multi_RX_testjig_v2.c: 923: else
  8736                           ;Multi_RX_testjig_v2.c: 924: print_error("Comms Error", " Error 3");
  8737                           
  8738                           
  8739                           ;Multi_RX_testjig_v2.c: 926: else
  8740                           ;Multi_RX_testjig_v2.c: 927: print_error("Relay1 latched", "Error 4");
  8741  041E  302B               	movlw	low (STR_61| (0+32768))
  8742  041F  00F8               	movwf	print_error@top
  8743  0420  3091               	movlw	high (STR_61| (0+32768))
  8744  0421  00F9               	movwf	print_error@top+1
  8745  0422  3097               	movlw	low (STR_62| (0+32768))
  8746  0423  00FA               	movwf	print_error@bottom
  8747  0424  3093               	movlw	high (STR_62| (0+32768))
  8748  0425  2C2D               	goto	L5
  8749  0426                     l4318:	
  8750                           
  8751                           ;Multi_RX_testjig_v2.c: 929: else
  8752                           ;Multi_RX_testjig_v2.c: 930: print_error("Comms Error", " Error 3");
  8753  0426  30D1               	movlw	low (STR_35| (0+32768))
  8754  0427  00F8               	movwf	print_error@top
  8755  0428  3092               	movlw	high (STR_35| (0+32768))
  8756  0429  00F9               	movwf	print_error@top+1
  8757  042A  305B               	movlw	low (STR_56| (0+32768))
  8758  042B  00FA               	movwf	print_error@bottom
  8759  042C  3093               	movlw	high (STR_56| (0+32768))
  8760  042D                     L5:	
  8761  042D  00FB               	movwf	print_error@bottom+1
  8762  042E  318A  22F6  3180   	fcall	_print_error
  8763  0431                     l4320:	
  8764                           
  8765                           ;Multi_RX_testjig_v2.c: 935: TX_one(0x41);
  8766  0431  3041               	movlw	65
  8767  0432  3195  2579  3180   	fcall	_TX_one
  8768                           
  8769                           ;Multi_RX_testjig_v2.c: 936: if(RX_one() == 0x4B)
  8770  0435  3188  201C  3180   	fcall	_RX_one
  8771  0438  3A4B               	xorlw	75
  8772  0439  1D03               	skipz
  8773  043A  2CA3               	goto	l4352
  8774                           
  8775                           ;Multi_RX_testjig_v2.c: 937: {
  8776                           ;Multi_RX_testjig_v2.c: 938: _delay((unsigned long)((100)*(16000000/4000.0)));
  8777  043B  3003               	movlw	3
  8778  043C  0020               	movlb	0	; select bank0
  8779  043D  00E3               	movwf	??_main+2
  8780  043E  3008               	movlw	8
  8781  043F  00E2               	movwf	??_main+1
  8782  0440  3078               	movlw	120
  8783  0441  00E1               	movwf	??_main
  8784  0442                     u5507:	
  8785  0442  0BE1               	decfsz	??_main,f
  8786  0443  2C42               	goto	u5507
  8787  0444  0BE2               	decfsz	??_main+1,f
  8788  0445  2C42               	goto	u5507
  8789  0446  0BE3               	decfsz	??_main+2,f
  8790  0447  2C42               	goto	u5507
  8791                           
  8792                           ;Multi_RX_testjig_v2.c: 939: if(RF2)
  8793  0448  0025               	movlb	5	; select bank5
  8794  0449  1D0C               	btfss	12,2	;volatile
  8795  044A  2C9B               	goto	l4350
  8796                           
  8797                           ;Multi_RX_testjig_v2.c: 940: {
  8798                           ;Multi_RX_testjig_v2.c: 941: TX_one(0x40);
  8799  044B  3040               	movlw	64
  8800  044C  3195  2579  3180   	fcall	_TX_one
  8801                           
  8802                           ;Multi_RX_testjig_v2.c: 942: if(RX_one() == 0x4A)
  8803  044F  3188  201C  3180   	fcall	_RX_one
  8804  0452  3A4A               	xorlw	74
  8805  0453  1D03               	skipz
  8806  0454  2CA3               	goto	l4352
  8807                           
  8808                           ;Multi_RX_testjig_v2.c: 943: {
  8809                           ;Multi_RX_testjig_v2.c: 944: _delay((unsigned long)((100)*(16000000/4000.0)));
  8810  0455  3003               	movlw	3
  8811  0456  0020               	movlb	0	; select bank0
  8812  0457  00E3               	movwf	??_main+2
  8813  0458  3008               	movlw	8
  8814  0459  00E2               	movwf	??_main+1
  8815  045A  3078               	movlw	120
  8816  045B  00E1               	movwf	??_main
  8817  045C                     u5517:	
  8818  045C  0BE1               	decfsz	??_main,f
  8819  045D  2C5C               	goto	u5517
  8820  045E  0BE2               	decfsz	??_main+1,f
  8821  045F  2C5C               	goto	u5517
  8822  0460  0BE3               	decfsz	??_main+2,f
  8823  0461  2C5C               	goto	u5517
  8824                           
  8825                           ;Multi_RX_testjig_v2.c: 946: if(RF2 == 0)
  8826  0462  0025               	movlb	5	; select bank5
  8827  0463  190C               	btfsc	12,2	;volatile
  8828  0464  2C93               	goto	l4346
  8829                           
  8830                           ;Multi_RX_testjig_v2.c: 947: {
  8831                           ;Multi_RX_testjig_v2.c: 948: TX_one(0x41);
  8832  0465  3041               	movlw	65
  8833  0466  3195  2579  3180   	fcall	_TX_one
  8834                           
  8835                           ;Multi_RX_testjig_v2.c: 949: if(RX_one() == 0x4B)
  8836  0469  3188  201C  3180   	fcall	_RX_one
  8837  046C  3A4B               	xorlw	75
  8838  046D  1D03               	skipz
  8839  046E  2CA3               	goto	l4352
  8840                           
  8841                           ;Multi_RX_testjig_v2.c: 950: {
  8842                           ;Multi_RX_testjig_v2.c: 951: _delay((unsigned long)((100)*(16000000/4000.0)));
  8843  046F  3003               	movlw	3
  8844  0470  0020               	movlb	0	; select bank0
  8845  0471  00E3               	movwf	??_main+2
  8846  0472  3008               	movlw	8
  8847  0473  00E2               	movwf	??_main+1
  8848  0474  3078               	movlw	120
  8849  0475  00E1               	movwf	??_main
  8850  0476                     u5527:	
  8851  0476  0BE1               	decfsz	??_main,f
  8852  0477  2C76               	goto	u5527
  8853  0478  0BE2               	decfsz	??_main+1,f
  8854  0479  2C76               	goto	u5527
  8855  047A  0BE3               	decfsz	??_main+2,f
  8856  047B  2C76               	goto	u5527
  8857                           
  8858                           ;Multi_RX_testjig_v2.c: 952: if(RF2 == 1)
  8859  047C  0025               	movlb	5	; select bank5
  8860  047D  1D0C               	btfss	12,2	;volatile
  8861  047E  2C8B               	goto	l4342
  8862                           
  8863                           ;Multi_RX_testjig_v2.c: 953: print_screen("Test Relay2", "Pass");
  8864  047F  3095               	movlw	low (STR_65| (0+32768))
  8865  0480  00F4               	movwf	print_screen@top
  8866  0481  3092               	movlw	high (STR_65| (0+32768))
  8867  0482  00F5               	movwf	print_screen@top+1
  8868  0483  307A               	movlw	low ((STR_143+4)| (0+32768))
  8869  0484  00F6               	movwf	print_screen@bottom
  8870  0485  3093               	movlw	high ((STR_143+4)| (0+32768))
  8871  0486  00F7               	movwf	print_screen@bottom+1
  8872  0487  318A  22D4  3180   	fcall	_print_screen
  8873  048A  2CAE               	goto	l4354
  8874  048B                     l4342:	
  8875                           
  8876                           ;Multi_RX_testjig_v2.c: 954: else
  8877                           ;Multi_RX_testjig_v2.c: 955: print_error("Relay2 !de-energized", " Error 2");
  8878  048B  3015               	movlw	low (STR_67| (0+32768))
  8879  048C  00F8               	movwf	print_error@top
  8880  048D  3090               	movlw	high (STR_67| (0+32768))
  8881  048E  00F9               	movwf	print_error@top+1
  8882  048F  3052               	movlw	low (STR_54| (0+32768))
  8883  0490  00FA               	movwf	print_error@bottom
  8884  0491  3093               	movlw	high (STR_54| (0+32768))
  8885  0492  2CAA               	goto	L6
  8886  0493                     l4346:	
  8887                           ;Multi_RX_testjig_v2.c: 957: else
  8888                           ;Multi_RX_testjig_v2.c: 958: print_error("Comms Error", " Error 3");
  8889                           
  8890                           
  8891                           ;Multi_RX_testjig_v2.c: 960: else
  8892                           ;Multi_RX_testjig_v2.c: 961: print_error("Relay2 !latched", "Error 2");
  8893  0493  30FB               	movlw	low (STR_71| (0+32768))
  8894  0494  00F8               	movwf	print_error@top
  8895  0495  3090               	movlw	high (STR_71| (0+32768))
  8896  0496  00F9               	movwf	print_error@top+1
  8897  0497  3053               	movlw	low ((STR_54+1)| (0+32768))
  8898  0498  00FA               	movwf	print_error@bottom
  8899  0499  3093               	movlw	high ((STR_54+1)| (0+32768))
  8900  049A  2CAA               	goto	L6
  8901  049B                     l4350:	
  8902                           ;Multi_RX_testjig_v2.c: 963: else
  8903                           ;Multi_RX_testjig_v2.c: 964: print_error("Comms Error", " Error 3");
  8904                           
  8905                           
  8906                           ;Multi_RX_testjig_v2.c: 966: else
  8907                           ;Multi_RX_testjig_v2.c: 967: print_error("Relay2 latched", "Error 4");
  8908  049B  303A               	movlw	low (STR_75| (0+32768))
  8909  049C  00F8               	movwf	print_error@top
  8910  049D  3091               	movlw	high (STR_75| (0+32768))
  8911  049E  00F9               	movwf	print_error@top+1
  8912  049F  3097               	movlw	low (STR_62| (0+32768))
  8913  04A0  00FA               	movwf	print_error@bottom
  8914  04A1  3093               	movlw	high (STR_62| (0+32768))
  8915  04A2  2CAA               	goto	L6
  8916  04A3                     l4352:	
  8917                           
  8918                           ;Multi_RX_testjig_v2.c: 969: else
  8919                           ;Multi_RX_testjig_v2.c: 970: print_error("Comms Error", " Error 3");
  8920  04A3  30D1               	movlw	low (STR_35| (0+32768))
  8921  04A4  00F8               	movwf	print_error@top
  8922  04A5  3092               	movlw	high (STR_35| (0+32768))
  8923  04A6  00F9               	movwf	print_error@top+1
  8924  04A7  305B               	movlw	low (STR_56| (0+32768))
  8925  04A8  00FA               	movwf	print_error@bottom
  8926  04A9  3093               	movlw	high (STR_56| (0+32768))
  8927  04AA                     L6:	
  8928  04AA  00FB               	movwf	print_error@bottom+1
  8929  04AB  318A  22F6  3180   	fcall	_print_error
  8930  04AE                     l4354:	
  8931                           
  8932                           ;Multi_RX_testjig_v2.c: 976: TX_one(0x51);
  8933  04AE  3051               	movlw	81
  8934  04AF  3195  2579  3180   	fcall	_TX_one
  8935                           
  8936                           ;Multi_RX_testjig_v2.c: 977: if(RX_one() == 0x5B)
  8937  04B2  3188  201C  3180   	fcall	_RX_one
  8938  04B5  3A5B               	xorlw	91
  8939  04B6  1D03               	skipz
  8940  04B7  2D20               	goto	l4386
  8941                           
  8942                           ;Multi_RX_testjig_v2.c: 978: {
  8943                           ;Multi_RX_testjig_v2.c: 979: _delay((unsigned long)((100)*(16000000/4000.0)));
  8944  04B8  3003               	movlw	3
  8945  04B9  0020               	movlb	0	; select bank0
  8946  04BA  00E3               	movwf	??_main+2
  8947  04BB  3008               	movlw	8
  8948  04BC  00E2               	movwf	??_main+1
  8949  04BD  3078               	movlw	120
  8950  04BE  00E1               	movwf	??_main
  8951  04BF                     u5537:	
  8952  04BF  0BE1               	decfsz	??_main,f
  8953  04C0  2CBF               	goto	u5537
  8954  04C1  0BE2               	decfsz	??_main+1,f
  8955  04C2  2CBF               	goto	u5537
  8956  04C3  0BE3               	decfsz	??_main+2,f
  8957  04C4  2CBF               	goto	u5537
  8958                           
  8959                           ;Multi_RX_testjig_v2.c: 980: if(RF1)
  8960  04C5  0025               	movlb	5	; select bank5
  8961  04C6  1C8C               	btfss	12,1	;volatile
  8962  04C7  2D18               	goto	l4384
  8963                           
  8964                           ;Multi_RX_testjig_v2.c: 981: {
  8965                           ;Multi_RX_testjig_v2.c: 983: TX_one(0x50);
  8966  04C8  3050               	movlw	80
  8967  04C9  3195  2579  3180   	fcall	_TX_one
  8968                           
  8969                           ;Multi_RX_testjig_v2.c: 984: if(RX_one() == 0x5A)
  8970  04CC  3188  201C  3180   	fcall	_RX_one
  8971  04CF  3A5A               	xorlw	90
  8972  04D0  1D03               	skipz
  8973  04D1  2D20               	goto	l4386
  8974                           
  8975                           ;Multi_RX_testjig_v2.c: 985: {
  8976                           ;Multi_RX_testjig_v2.c: 986: _delay((unsigned long)((100)*(16000000/4000.0)));
  8977  04D2  3003               	movlw	3
  8978  04D3  0020               	movlb	0	; select bank0
  8979  04D4  00E3               	movwf	??_main+2
  8980  04D5  3008               	movlw	8
  8981  04D6  00E2               	movwf	??_main+1
  8982  04D7  3078               	movlw	120
  8983  04D8  00E1               	movwf	??_main
  8984  04D9                     u5547:	
  8985  04D9  0BE1               	decfsz	??_main,f
  8986  04DA  2CD9               	goto	u5547
  8987  04DB  0BE2               	decfsz	??_main+1,f
  8988  04DC  2CD9               	goto	u5547
  8989  04DD  0BE3               	decfsz	??_main+2,f
  8990  04DE  2CD9               	goto	u5547
  8991                           
  8992                           ;Multi_RX_testjig_v2.c: 988: if(RF1 == 0)
  8993  04DF  0025               	movlb	5	; select bank5
  8994  04E0  188C               	btfsc	12,1	;volatile
  8995  04E1  2D10               	goto	l4380
  8996                           
  8997                           ;Multi_RX_testjig_v2.c: 989: {
  8998                           ;Multi_RX_testjig_v2.c: 990: TX_one(0x51);
  8999  04E2  3051               	movlw	81
  9000  04E3  3195  2579  3180   	fcall	_TX_one
  9001                           
  9002                           ;Multi_RX_testjig_v2.c: 991: if(RX_one() == 0x5B)
  9003  04E6  3188  201C  3180   	fcall	_RX_one
  9004  04E9  3A5B               	xorlw	91
  9005  04EA  1D03               	skipz
  9006  04EB  2D20               	goto	l4386
  9007                           
  9008                           ;Multi_RX_testjig_v2.c: 992: {
  9009                           ;Multi_RX_testjig_v2.c: 993: _delay((unsigned long)((100)*(16000000/4000.0)));
  9010  04EC  3003               	movlw	3
  9011  04ED  0020               	movlb	0	; select bank0
  9012  04EE  00E3               	movwf	??_main+2
  9013  04EF  3008               	movlw	8
  9014  04F0  00E2               	movwf	??_main+1
  9015  04F1  3078               	movlw	120
  9016  04F2  00E1               	movwf	??_main
  9017  04F3                     u5557:	
  9018  04F3  0BE1               	decfsz	??_main,f
  9019  04F4  2CF3               	goto	u5557
  9020  04F5  0BE2               	decfsz	??_main+1,f
  9021  04F6  2CF3               	goto	u5557
  9022  04F7  0BE3               	decfsz	??_main+2,f
  9023  04F8  2CF3               	goto	u5557
  9024                           
  9025                           ;Multi_RX_testjig_v2.c: 994: if(RF1 == 1)
  9026  04F9  0025               	movlb	5	; select bank5
  9027  04FA  1C8C               	btfss	12,1	;volatile
  9028  04FB  2D08               	goto	l4376
  9029                           
  9030                           ;Multi_RX_testjig_v2.c: 995: print_screen("Test Relay", "Pass");
  9031  04FC  300B               	movlw	low (STR_49| (0+32768))
  9032  04FD  00F4               	movwf	print_screen@top
  9033  04FE  3093               	movlw	high (STR_49| (0+32768))
  9034  04FF  00F5               	movwf	print_screen@top+1
  9035  0500  307A               	movlw	low ((STR_143+4)| (0+32768))
  9036  0501  00F6               	movwf	print_screen@bottom
  9037  0502  3093               	movlw	high ((STR_143+4)| (0+32768))
  9038  0503  00F7               	movwf	print_screen@bottom+1
  9039  0504  318A  22D4  3180   	fcall	_print_screen
  9040  0507  2D2B               	goto	l4388
  9041  0508                     l4376:	
  9042                           
  9043                           ;Multi_RX_testjig_v2.c: 996: else
  9044                           ;Multi_RX_testjig_v2.c: 997: print_error("Relay3 !de-energized", " Error 2");
  9045  0508  302A               	movlw	low (STR_81| (0+32768))
  9046  0509  00F8               	movwf	print_error@top
  9047  050A  3090               	movlw	high (STR_81| (0+32768))
  9048  050B  00F9               	movwf	print_error@top+1
  9049  050C  3052               	movlw	low (STR_54| (0+32768))
  9050  050D  00FA               	movwf	print_error@bottom
  9051  050E  3093               	movlw	high (STR_54| (0+32768))
  9052  050F  2D27               	goto	L7
  9053  0510                     l4380:	
  9054                           ;Multi_RX_testjig_v2.c: 999: else
  9055                           ;Multi_RX_testjig_v2.c: 1000: print_error("Comms Error", " Error 3");
  9056                           
  9057                           
  9058                           ;Multi_RX_testjig_v2.c: 1002: else
  9059                           ;Multi_RX_testjig_v2.c: 1003: print_error("Relay3 !latched", "Error 2");
  9060  0510  300B               	movlw	low (STR_85| (0+32768))
  9061  0511  00F8               	movwf	print_error@top
  9062  0512  3091               	movlw	high (STR_85| (0+32768))
  9063  0513  00F9               	movwf	print_error@top+1
  9064  0514  3053               	movlw	low ((STR_54+1)| (0+32768))
  9065  0515  00FA               	movwf	print_error@bottom
  9066  0516  3093               	movlw	high ((STR_54+1)| (0+32768))
  9067  0517  2D27               	goto	L7
  9068  0518                     l4384:	
  9069                           ;Multi_RX_testjig_v2.c: 1005: else
  9070                           ;Multi_RX_testjig_v2.c: 1006: print_error("Comms Error", " Error 3");
  9071                           
  9072                           
  9073                           ;Multi_RX_testjig_v2.c: 1008: else
  9074                           ;Multi_RX_testjig_v2.c: 1009: print_error("Relay3 latched", "Error 4");
  9075  0518  3049               	movlw	low (STR_89| (0+32768))
  9076  0519  00F8               	movwf	print_error@top
  9077  051A  3091               	movlw	high (STR_89| (0+32768))
  9078  051B  00F9               	movwf	print_error@top+1
  9079  051C  3097               	movlw	low (STR_62| (0+32768))
  9080  051D  00FA               	movwf	print_error@bottom
  9081  051E  3093               	movlw	high (STR_62| (0+32768))
  9082  051F  2D27               	goto	L7
  9083  0520                     l4386:	
  9084                           
  9085                           ;Multi_RX_testjig_v2.c: 1011: else
  9086                           ;Multi_RX_testjig_v2.c: 1012: print_error("Comms Error", " Error 3");
  9087  0520  30D1               	movlw	low (STR_35| (0+32768))
  9088  0521  00F8               	movwf	print_error@top
  9089  0522  3092               	movlw	high (STR_35| (0+32768))
  9090  0523  00F9               	movwf	print_error@top+1
  9091  0524  305B               	movlw	low (STR_56| (0+32768))
  9092  0525  00FA               	movwf	print_error@bottom
  9093  0526  3093               	movlw	high (STR_56| (0+32768))
  9094  0527                     L7:	
  9095  0527  00FB               	movwf	print_error@bottom+1
  9096  0528  318A  22F6  3180   	fcall	_print_error
  9097  052B                     l4388:	
  9098                           
  9099                           ;Multi_RX_testjig_v2.c: 1016: }
  9100                           ;Multi_RX_testjig_v2.c: 1020: if((device_type == 0xAA)|| (device_type == 0xA1))
  9101  052B  30AA               	movlw	170
  9102  052C  0020               	movlb	0	; select bank0
  9103  052D  066E               	xorwf	main@device_type,w
  9104  052E  1903               	btfsc	3,2
  9105  052F  2D34               	goto	l4392
  9106  0530  30A1               	movlw	161
  9107  0531  066E               	xorwf	main@device_type,w
  9108  0532  1D03               	btfss	3,2
  9109  0533  2F37               	goto	l4534
  9110  0534                     l4392:	
  9111                           
  9112                           ;Multi_RX_testjig_v2.c: 1021: {
  9113                           ;Multi_RX_testjig_v2.c: 1044: testjig_timer = (unsigned int)((3*7518.8));
  9114  0534  301C               	movlw	28
  9115  0535  0021               	movlb	1	; select bank1
  9116  0536  00AE               	movwf	_testjig_timer^(0+128)	;volatile
  9117  0537  3058               	movlw	88
  9118  0538  00AF               	movwf	(_testjig_timer^(0+128)+1)	;volatile
  9119                           
  9120                           ;Multi_RX_testjig_v2.c: 1045: RE0 = 1;
  9121  0539  0020               	movlb	0	; select bank0
  9122  053A  1410               	bsf	16,0	;volatile
  9123                           
  9124                           ;Multi_RX_testjig_v2.c: 1046: _delay((unsigned long)((200)*(16000000/4000.0)));
  9125  053B  3005               	movlw	5
  9126  053C  00E3               	movwf	??_main+2
  9127  053D  300F               	movlw	15
  9128  053E  00E2               	movwf	??_main+1
  9129  053F  30F4               	movlw	244
  9130  0540  00E1               	movwf	??_main
  9131  0541                     u5567:	
  9132  0541  0BE1               	decfsz	??_main,f
  9133  0542  2D41               	goto	u5567
  9134  0543  0BE2               	decfsz	??_main+1,f
  9135  0544  2D41               	goto	u5567
  9136  0545  0BE3               	decfsz	??_main+2,f
  9137  0546  2D41               	goto	u5567
  9138                           
  9139                           ;Multi_RX_testjig_v2.c: 1047: print_screen("Test RF", "RSSI");
  9140  0547  309F               	movlw	low (STR_93| (0+32768))
  9141  0548  00F4               	movwf	print_screen@top
  9142  0549  3093               	movlw	high (STR_93| (0+32768))
  9143  054A  00F5               	movwf	print_screen@top+1
  9144  054B  3042               	movlw	low ((STR_103+8)| (0+32768))
  9145  054C  00F6               	movwf	print_screen@bottom
  9146  054D  3092               	movlw	high ((STR_103+8)| (0+32768))
  9147  054E  00F7               	movwf	print_screen@bottom+1
  9148  054F  318A  22D4  3180   	fcall	_print_screen
  9149                           
  9150                           ;Multi_RX_testjig_v2.c: 1048: TX_one(0x60);
  9151  0552  3060               	movlw	96
  9152  0553  3195  2579  3180   	fcall	_TX_one
  9153                           
  9154                           ;Multi_RX_testjig_v2.c: 1049: RX_data = RX_one();
  9155  0556  3188  201C  3180   	fcall	_RX_one
  9156  0559  0020               	movlb	0	; select bank0
  9157  055A  00ED               	movwf	main@RX_data
  9158                           
  9159                           ;Multi_RX_testjig_v2.c: 1050: TX_one(0x60);
  9160  055B  3060               	movlw	96
  9161  055C  3195  2579  3180   	fcall	_TX_one
  9162                           
  9163                           ;Multi_RX_testjig_v2.c: 1051: RX_data = RX_one();
  9164  055F  3188  201C  3180   	fcall	_RX_one
  9165  0562  0020               	movlb	0	; select bank0
  9166  0563  00ED               	movwf	main@RX_data
  9167                           
  9168                           ;Multi_RX_testjig_v2.c: 1063: RE0 = 0;
  9169  0564  1010               	bcf	16,0	;volatile
  9170                           
  9171                           ;Multi_RX_testjig_v2.c: 1064: if(RX_data == 0)
  9172  0565  086D               	movf	main@RX_data,w
  9173  0566  1D03               	btfss	3,2
  9174  0567  2D70               	goto	l4412
  9175                           
  9176                           ;Multi_RX_testjig_v2.c: 1065: print_error("Comms Error", " 13");
  9177  0568  30D1               	movlw	low (STR_35| (0+32768))
  9178  0569  00F8               	movwf	print_error@top
  9179  056A  3092               	movlw	high (STR_35| (0+32768))
  9180  056B  00F9               	movwf	print_error@top+1
  9181  056C  30C7               	movlw	low (STR_96| (0+32768))
  9182  056D  00FA               	movwf	print_error@bottom
  9183  056E  3093               	movlw	high (STR_96| (0+32768))
  9184  056F  2DC4               	goto	L12
  9185  0570                     l4412:	
  9186                           
  9187                           ;Multi_RX_testjig_v2.c: 1066: else if(RX_data == 0xFF)
  9188  0570  0A6D               	incf	main@RX_data,w
  9189  0571  1D03               	btfss	3,2
  9190  0572  2D7B               	goto	l4416
  9191                           
  9192                           ;Multi_RX_testjig_v2.c: 1067: print_error("Comms Error", " 14a");
  9193  0573  30D1               	movlw	low (STR_35| (0+32768))
  9194  0574  00F8               	movwf	print_error@top
  9195  0575  3092               	movlw	high (STR_35| (0+32768))
  9196  0576  00F9               	movwf	print_error@top+1
  9197  0577  30B8               	movlw	low (STR_98| (0+32768))
  9198  0578  00FA               	movwf	print_error@bottom
  9199  0579  3093               	movlw	high (STR_98| (0+32768))
  9200  057A  2DC4               	goto	L12
  9201  057B                     l4416:	
  9202                           
  9203                           ;Multi_RX_testjig_v2.c: 1068: else if(RX_data == 0xEE)
  9204  057B  30EE               	movlw	238
  9205  057C  066D               	xorwf	main@RX_data,w
  9206  057D  1D03               	btfss	3,2
  9207  057E  2D87               	goto	l4420
  9208                           
  9209                           ;Multi_RX_testjig_v2.c: 1069: print_error("Comms Error", " 14b");
  9210  057F  30D1               	movlw	low (STR_35| (0+32768))
  9211  0580  00F8               	movwf	print_error@top
  9212  0581  3092               	movlw	high (STR_35| (0+32768))
  9213  0582  00F9               	movwf	print_error@top+1
  9214  0583  30BD               	movlw	low (STR_100| (0+32768))
  9215  0584  00FA               	movwf	print_error@bottom
  9216  0585  3093               	movlw	high (STR_100| (0+32768))
  9217  0586  2DC4               	goto	L12
  9218  0587                     l4420:	
  9219                           
  9220                           ;Multi_RX_testjig_v2.c: 1070: else if(RX_data >230)
  9221  0587  30E7               	movlw	231
  9222  0588  026D               	subwf	main@RX_data,w
  9223  0589  1C03               	skipc
  9224  058A  2D93               	goto	l4424
  9225                           
  9226                           ;Multi_RX_testjig_v2.c: 1071: print_error("Comms Error", " 14c");
  9227  058B  30D1               	movlw	low (STR_35| (0+32768))
  9228  058C  00F8               	movwf	print_error@top
  9229  058D  3092               	movlw	high (STR_35| (0+32768))
  9230  058E  00F9               	movwf	print_error@top+1
  9231  058F  30C2               	movlw	low (STR_102| (0+32768))
  9232  0590  00FA               	movwf	print_error@bottom
  9233  0591  3093               	movlw	high (STR_102| (0+32768))
  9234  0592  2DC4               	goto	L12
  9235  0593                     l4424:	
  9236                           
  9237                           ;Multi_RX_testjig_v2.c: 1072: else if(RX_data > 125)
  9238  0593  307E               	movlw	126
  9239  0594  026D               	subwf	main@RX_data,w
  9240  0595  1C03               	skipc
  9241  0596  2DB9               	goto	l4432
  9242                           
  9243                           ;Multi_RX_testjig_v2.c: 1073: {
  9244                           ;Multi_RX_testjig_v2.c: 1074: lcd_print_int(RX_data, 5, 0, 1);
  9245  0597  086D               	movf	main@RX_data,w
  9246  0598  00DB               	movwf	lcd_print_int@number
  9247  0599  3005               	movlw	5
  9248  059A  01DC               	clrf	lcd_print_int@number+1
  9249  059B  00DD               	movwf	lcd_print_int@pos
  9250  059C  01DE               	clrf	lcd_print_int@pos+1
  9251  059D  01DF               	clrf	lcd_print_int@decimal
  9252  059E  01E0               	clrf	lcd_print_int@ten_thou_digit
  9253  059F  0AE0               	incf	lcd_print_int@ten_thou_digit,f
  9254  05A0  3188  20F7  3180   	fcall	_lcd_print_int
  9255                           
  9256                           ;Multi_RX_testjig_v2.c: 1075: _delay((unsigned long)((5000)*(16000000/4000.0)));
  9257  05A3  3066               	movlw	102
  9258  05A4  0020               	movlb	0	; select bank0
  9259  05A5  00E3               	movwf	??_main+2
  9260  05A6  3077               	movlw	119
  9261  05A7  00E2               	movwf	??_main+1
  9262  05A8  3024               	movlw	36
  9263  05A9  00E1               	movwf	??_main
  9264  05AA                     u5577:	
  9265  05AA  0BE1               	decfsz	??_main,f
  9266  05AB  2DAA               	goto	u5577
  9267  05AC  0BE2               	decfsz	??_main+1,f
  9268  05AD  2DAA               	goto	u5577
  9269  05AE  0BE3               	decfsz	??_main+2,f
  9270  05AF  2DAA               	goto	u5577
  9271  05B0  0000               	nop
  9272                           
  9273                           ;Multi_RX_testjig_v2.c: 1076: print_error("Test RF RSSI", " Error - High");
  9274  05B1  303A               	movlw	low (STR_103| (0+32768))
  9275  05B2  00F8               	movwf	print_error@top
  9276  05B3  3092               	movlw	high (STR_103| (0+32768))
  9277  05B4  00F9               	movwf	print_error@top+1
  9278  05B5  30DB               	movlw	low (STR_104| (0+32768))
  9279  05B6  00FA               	movwf	print_error@bottom
  9280  05B7  3091               	movlw	high (STR_104| (0+32768))
  9281  05B8  2DC4               	goto	L12
  9282  05B9                     l4432:	
  9283                           ;Multi_RX_testjig_v2.c: 1077: }
  9284                           
  9285                           
  9286                           ;Multi_RX_testjig_v2.c: 1078: else if(RX_data < 90)
  9287  05B9  305A               	movlw	90
  9288  05BA  026D               	subwf	main@RX_data,w
  9289  05BB  1803               	skipnc
  9290  05BC  2DC8               	goto	l405
  9291                           
  9292                           ;Multi_RX_testjig_v2.c: 1079: print_error("Test RF RSSI", " Error - Low");
  9293  05BD  303A               	movlw	low (STR_103| (0+32768))
  9294  05BE  00F8               	movwf	print_error@top
  9295  05BF  3092               	movlw	high (STR_103| (0+32768))
  9296  05C0  00F9               	movwf	print_error@top+1
  9297  05C1  3088               	movlw	low (STR_106| (0+32768))
  9298  05C2  00FA               	movwf	print_error@bottom
  9299  05C3  3092               	movlw	high (STR_106| (0+32768))
  9300  05C4                     L12:	
  9301  05C4  00FB               	movwf	print_error@bottom+1
  9302  05C5  318A  22F6  3180   	fcall	_print_error
  9303  05C8                     l405:	
  9304                           
  9305                           ;Multi_RX_testjig_v2.c: 1080: print_screen("Test RF", "RSSI - OK");
  9306  05C8  309F               	movlw	low (STR_93| (0+32768))
  9307  05C9  00F4               	movwf	print_screen@top
  9308  05CA  3093               	movlw	high (STR_93| (0+32768))
  9309  05CB  00F5               	movwf	print_screen@top+1
  9310  05CC  3035               	movlw	low (STR_108| (0+32768))
  9311  05CD  00F6               	movwf	print_screen@bottom
  9312  05CE  3093               	movlw	high (STR_108| (0+32768))
  9313  05CF  00F7               	movwf	print_screen@bottom+1
  9314  05D0  318A  22D4  3180   	fcall	_print_screen
  9315                           
  9316                           ;Multi_RX_testjig_v2.c: 1082: _delay((unsigned long)((100)*(16000000/4000.0)));
  9317  05D3  3003               	movlw	3
  9318  05D4  0020               	movlb	0	; select bank0
  9319  05D5  00E3               	movwf	??_main+2
  9320  05D6  3008               	movlw	8
  9321  05D7  00E2               	movwf	??_main+1
  9322  05D8  3078               	movlw	120
  9323  05D9  00E1               	movwf	??_main
  9324  05DA                     u5587:	
  9325  05DA  0BE1               	decfsz	??_main,f
  9326  05DB  2DDA               	goto	u5587
  9327  05DC  0BE2               	decfsz	??_main+1,f
  9328  05DD  2DDA               	goto	u5587
  9329  05DE  0BE3               	decfsz	??_main+2,f
  9330  05DF  2DDA               	goto	u5587
  9331                           
  9332                           ;Multi_RX_testjig_v2.c: 1084: print_screen("Test RF", "Decode");
  9333  05E0  309F               	movlw	low (STR_93| (0+32768))
  9334  05E1  00F4               	movwf	print_screen@top
  9335  05E2  3093               	movlw	high (STR_93| (0+32768))
  9336  05E3  00F5               	movwf	print_screen@top+1
  9337  05E4  306F               	movlw	low ((STR_122+8)| (0+32768))
  9338  05E5  00F6               	movwf	print_screen@bottom
  9339  05E6  3091               	movlw	high ((STR_122+8)| (0+32768))
  9340  05E7  00F7               	movwf	print_screen@bottom+1
  9341  05E8  318A  22D4  3180   	fcall	_print_screen
  9342                           
  9343                           ;Multi_RX_testjig_v2.c: 1085: int j;
  9344                           ;Multi_RX_testjig_v2.c: 1086: RX_data = 0;
  9345  05EB  0020               	movlb	0	; select bank0
  9346  05EC  01ED               	clrf	main@RX_data
  9347                           
  9348                           ;Multi_RX_testjig_v2.c: 1087: for(j = 0; j < 50; j++)
  9349  05ED  01E8               	clrf	main@j
  9350  05EE  01E9               	clrf	main@j+1
  9351  05EF  0869               	movf	main@j+1,w
  9352  05F0  3A80               	xorlw	128
  9353  05F1  00E1               	movwf	??_main
  9354  05F2  3080               	movlw	128
  9355  05F3  0261               	subwf	??_main,w
  9356  05F4  1D03               	skipz
  9357  05F5  2DF8               	goto	u5005
  9358  05F6  3032               	movlw	50
  9359  05F7  0268               	subwf	main@j,w
  9360  05F8                     u5005:	
  9361  05F8  1803               	btfsc	3,0
  9362  05F9  2F03               	goto	l4520
  9363  05FA                     l4446:	
  9364                           
  9365                           ;Multi_RX_testjig_v2.c: 1088: {
  9366                           ;Multi_RX_testjig_v2.c: 1090: testjig_timer = (unsigned int)((3*7518.8));
  9367  05FA  301C               	movlw	28
  9368  05FB  0021               	movlb	1	; select bank1
  9369  05FC  00AE               	movwf	_testjig_timer^(0+128)	;volatile
  9370  05FD  3058               	movlw	88
  9371  05FE  00AF               	movwf	(_testjig_timer^(0+128)+1)	;volatile
  9372                           
  9373                           ;Multi_RX_testjig_v2.c: 1091: RE0 = 1;
  9374  05FF  0020               	movlb	0	; select bank0
  9375  0600  1410               	bsf	16,0	;volatile
  9376                           
  9377                           ;Multi_RX_testjig_v2.c: 1092: _delay((unsigned long)((200)*(16000000/4000.0)));
  9378  0601  3005               	movlw	5
  9379  0602  00E3               	movwf	??_main+2
  9380  0603  300F               	movlw	15
  9381  0604  00E2               	movwf	??_main+1
  9382  0605  30F4               	movlw	244
  9383  0606  00E1               	movwf	??_main
  9384  0607                     u5597:	
  9385  0607  0BE1               	decfsz	??_main,f
  9386  0608  2E07               	goto	u5597
  9387  0609  0BE2               	decfsz	??_main+1,f
  9388  060A  2E07               	goto	u5597
  9389  060B  0BE3               	decfsz	??_main+2,f
  9390  060C  2E07               	goto	u5597
  9391                           
  9392                           ;Multi_RX_testjig_v2.c: 1093: for(i = 0; i < 5; i++)
  9393  060D  0020               	movlb	0	; select bank0
  9394  060E  01EB               	clrf	main@i
  9395  060F  01EC               	clrf	main@i+1
  9396  0610                     l4452:	
  9397  0610  3000               	movlw	0
  9398  0611  026C               	subwf	main@i+1,w
  9399  0612  3005               	movlw	5
  9400  0613  1903               	skipnz
  9401  0614  026B               	subwf	main@i,w
  9402  0615  1803               	btfsc	3,0
  9403  0616  2E5D               	goto	l418
  9404                           
  9405                           ;Multi_RX_testjig_v2.c: 1094: {
  9406                           ;Multi_RX_testjig_v2.c: 1095: TX_one(0x61);
  9407  0617  3061               	movlw	97
  9408  0618  3195  2579  3180   	fcall	_TX_one
  9409                           
  9410                           ;Multi_RX_testjig_v2.c: 1096: RX_data = RX_one();
  9411  061B  3188  201C  3180   	fcall	_RX_one
  9412  061E  0020               	movlb	0	; select bank0
  9413  061F  00ED               	movwf	main@RX_data
  9414                           
  9415                           ;Multi_RX_testjig_v2.c: 1097: clear_lcd();
  9416  0620  318B  2355  3180   	fcall	_clear_lcd
  9417                           
  9418                           ;Multi_RX_testjig_v2.c: 1098: print_screen("RX 0x61","");
  9419  0623  308F               	movlw	low (STR_111| (0+32768))
  9420  0624  00F4               	movwf	print_screen@top
  9421  0625  3093               	movlw	high (STR_111| (0+32768))
  9422  0626  00F5               	movwf	print_screen@top+1
  9423  0627  30DA               	movlw	low ((STR_137+15)| (0+32768))
  9424  0628  00F6               	movwf	print_screen@bottom
  9425  0629  3090               	movlw	high ((STR_137+15)| (0+32768))
  9426  062A  00F7               	movwf	print_screen@bottom+1
  9427  062B  318A  22D4  3180   	fcall	_print_screen
  9428                           
  9429                           ;Multi_RX_testjig_v2.c: 1099: lcd_print_int(RX_data, 0, 0, 0);
  9430  062E  0020               	movlb	0	; select bank0
  9431  062F  086D               	movf	main@RX_data,w
  9432  0630  00DB               	movwf	lcd_print_int@number
  9433  0631  01DC               	clrf	lcd_print_int@number+1
  9434  0632  01DD               	clrf	lcd_print_int@pos
  9435  0633  01DE               	clrf	lcd_print_int@pos+1
  9436  0634  01DF               	clrf	lcd_print_int@decimal
  9437  0635  01E0               	clrf	lcd_print_int@ten_thou_digit
  9438  0636  3188  20F7  3180   	fcall	_lcd_print_int
  9439                           
  9440                           ;Multi_RX_testjig_v2.c: 1100: _delay((unsigned long)((1000)*(16000000/4000.0)));
  9441  0639  3015               	movlw	21
  9442  063A  0020               	movlb	0	; select bank0
  9443  063B  00E3               	movwf	??_main+2
  9444  063C  304B               	movlw	75
  9445  063D  00E2               	movwf	??_main+1
  9446  063E  30D1               	movlw	209
  9447  063F  00E1               	movwf	??_main
  9448  0640                     u5607:	
  9449  0640  0BE1               	decfsz	??_main,f
  9450  0641  2E40               	goto	u5607
  9451  0642  0BE2               	decfsz	??_main+1,f
  9452  0643  2E40               	goto	u5607
  9453  0644  0BE3               	decfsz	??_main+2,f
  9454  0645  2E40               	goto	u5607
  9455  0646  0000               	nop
  9456                           
  9457                           ;Multi_RX_testjig_v2.c: 1101: if(RX_data == 2)
  9458  0647  3002               	movlw	2
  9459  0648  0020               	movlb	0	; select bank0
  9460  0649  066D               	xorwf	main@RX_data,w
  9461  064A  1903               	btfsc	3,2
  9462  064B  2E5D               	goto	l418
  9463                           
  9464                           ;Multi_RX_testjig_v2.c: 1103: _delay((unsigned long)((200)*(16000000/4000.0)));
  9465  064C  3005               	movlw	5
  9466  064D  00E3               	movwf	??_main+2
  9467  064E  300F               	movlw	15
  9468  064F  00E2               	movwf	??_main+1
  9469  0650  30F4               	movlw	244
  9470  0651  00E1               	movwf	??_main
  9471  0652                     u5617:	
  9472  0652  0BE1               	decfsz	??_main,f
  9473  0653  2E52               	goto	u5617
  9474  0654  0BE2               	decfsz	??_main+1,f
  9475  0655  2E52               	goto	u5617
  9476  0656  0BE3               	decfsz	??_main+2,f
  9477  0657  2E52               	goto	u5617
  9478  0658  0020               	movlb	0	; select bank0
  9479  0659  0AEB               	incf	main@i,f
  9480  065A  1903               	skipnz
  9481  065B  0AEC               	incf	main@i+1,f
  9482  065C  2E10               	goto	l4452
  9483  065D                     l418:	
  9484                           
  9485                           ;Multi_RX_testjig_v2.c: 1104: }
  9486                           ;Multi_RX_testjig_v2.c: 1105: RE0 = 0;
  9487  065D  1010               	bcf	16,0	;volatile
  9488                           
  9489                           ;Multi_RX_testjig_v2.c: 1106: clear_lcd();
  9490  065E  318B  2355  3180   	fcall	_clear_lcd
  9491                           
  9492                           ;Multi_RX_testjig_v2.c: 1108: if(RX_data == 2)
  9493  0661  3002               	movlw	2
  9494  0662  0020               	movlb	0	; select bank0
  9495  0663  066D               	xorwf	main@RX_data,w
  9496  0664  1D03               	btfss	3,2
  9497  0665  2E80               	goto	l4482
  9498                           
  9499                           ;Multi_RX_testjig_v2.c: 1109: {
  9500                           ;Multi_RX_testjig_v2.c: 1110: print_screen("break","Break");
  9501  0666  30AD               	movlw	low (STR_113| (0+32768))
  9502  0667  00F4               	movwf	print_screen@top
  9503  0668  3093               	movlw	high (STR_113| (0+32768))
  9504  0669  00F5               	movwf	print_screen@top+1
  9505  066A  30A7               	movlw	low (STR_114| (0+32768))
  9506  066B  00F6               	movwf	print_screen@bottom
  9507  066C  3093               	movlw	high (STR_114| (0+32768))
  9508  066D  00F7               	movwf	print_screen@bottom+1
  9509  066E  318A  22D4  3180   	fcall	_print_screen
  9510                           
  9511                           ;Multi_RX_testjig_v2.c: 1111: _delay((unsigned long)((1000)*(16000000/4000.0)));
  9512  0671  3015               	movlw	21
  9513  0672  0020               	movlb	0	; select bank0
  9514  0673  00E3               	movwf	??_main+2
  9515  0674  304B               	movlw	75
  9516  0675  00E2               	movwf	??_main+1
  9517  0676  30D1               	movlw	209
  9518  0677  00E1               	movwf	??_main
  9519  0678                     u5627:	
  9520  0678  0BE1               	decfsz	??_main,f
  9521  0679  2E78               	goto	u5627
  9522  067A  0BE2               	decfsz	??_main+1,f
  9523  067B  2E78               	goto	u5627
  9524  067C  0BE3               	decfsz	??_main+2,f
  9525  067D  2E78               	goto	u5627
  9526  067E  0000               	nop
  9527                           
  9528                           ;Multi_RX_testjig_v2.c: 1112: break;
  9529  067F  2F03               	goto	l4520
  9530  0680                     l4482:	
  9531                           
  9532                           ;Multi_RX_testjig_v2.c: 1113: }
  9533                           ;Multi_RX_testjig_v2.c: 1115: print_screen("Test RF", " cycling power");
  9534  0680  309F               	movlw	low (STR_93| (0+32768))
  9535  0681  00F4               	movwf	print_screen@top
  9536  0682  3093               	movlw	high (STR_93| (0+32768))
  9537  0683  00F5               	movwf	print_screen@top+1
  9538  0684  3085               	movlw	low (STR_116| (0+32768))
  9539  0685  00F6               	movwf	print_screen@bottom
  9540  0686  3091               	movlw	high (STR_116| (0+32768))
  9541  0687  00F7               	movwf	print_screen@bottom+1
  9542  0688  318A  22D4  3180   	fcall	_print_screen
  9543                           
  9544                           ;Multi_RX_testjig_v2.c: 1116: power_supply_set(3);
  9545  068B  3003               	movlw	3
  9546  068C  318B  23F3  3180   	fcall	_power_supply_set
  9547                           
  9548                           ;Multi_RX_testjig_v2.c: 1118: LATB5 = 0;
  9549  068F  0022               	movlb	2	; select bank2
  9550  0690  128D               	bcf	13,5	;volatile
  9551                           
  9552                           ;Multi_RX_testjig_v2.c: 1119: LATA6 = 0;
  9553  0691  130C               	bcf	12,6	;volatile
  9554                           
  9555                           ;Multi_RX_testjig_v2.c: 1120: TRISG1 = 1;
  9556  0692  0026               	movlb	6	; select bank6
  9557  0693  148D               	bsf	13,1	;volatile
  9558  0694                     l4490:	
  9559                           ;Multi_RX_testjig_v2.c: 1121: while(ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.2));
  9560                           
  9561  0694  305F               	movlw	95
  9562  0695  318C  245E  3180   	fcall	_ADC_get_val
  9563  0698  3000               	movlw	0
  9564  0699  0271               	subwf	?_ADC_get_val+1,w
  9565  069A  3017               	movlw	23
  9566  069B  1903               	skipnz
  9567  069C  0270               	subwf	?_ADC_get_val,w
  9568  069D  1803               	skipnc
  9569  069E  2E94               	goto	l4490
  9570                           
  9571                           ;Multi_RX_testjig_v2.c: 1122: power_supply_set(0);
  9572  069F  3000               	movlw	0
  9573  06A0  318B  23F3  3180   	fcall	_power_supply_set
  9574                           
  9575                           ;Multi_RX_testjig_v2.c: 1123: _delay((unsigned long)((200)*(16000000/4000.0)));
  9576  06A3  3005               	movlw	5
  9577  06A4  0020               	movlb	0	; select bank0
  9578  06A5  00E3               	movwf	??_main+2
  9579  06A6  300F               	movlw	15
  9580  06A7  00E2               	movwf	??_main+1
  9581  06A8  30F4               	movlw	244
  9582  06A9  00E1               	movwf	??_main
  9583  06AA                     u5637:	
  9584  06AA  0BE1               	decfsz	??_main,f
  9585  06AB  2EAA               	goto	u5637
  9586  06AC  0BE2               	decfsz	??_main+1,f
  9587  06AD  2EAA               	goto	u5637
  9588  06AE  0BE3               	decfsz	??_main+2,f
  9589  06AF  2EAA               	goto	u5637
  9590                           
  9591                           ;Multi_RX_testjig_v2.c: 1125: for(i = 0; i < 10; i++)
  9592  06B0  0020               	movlb	0	; select bank0
  9593  06B1  01EB               	clrf	main@i
  9594  06B2  01EC               	clrf	main@i+1
  9595  06B3                     l4498:	
  9596  06B3  3000               	movlw	0
  9597  06B4  026C               	subwf	main@i+1,w
  9598  06B5  300A               	movlw	10
  9599  06B6  1903               	skipnz
  9600  06B7  026B               	subwf	main@i,w
  9601  06B8  1803               	btfsc	3,0
  9602  06B9  2EF5               	goto	l4516
  9603                           
  9604                           ;Multi_RX_testjig_v2.c: 1126: {
  9605                           ;Multi_RX_testjig_v2.c: 1127: unsigned char response;
  9606                           ;Multi_RX_testjig_v2.c: 1128: TX_one(0x01);
  9607  06BA  3001               	movlw	1
  9608  06BB  3195  2579  3180   	fcall	_TX_one
  9609                           
  9610                           ;Multi_RX_testjig_v2.c: 1129: response = RX_one_timeout();
  9611  06BE  3188  2042  3180   	fcall	_RX_one_timeout
  9612  06C1  0020               	movlb	0	; select bank0
  9613  06C2  00EA               	movwf	main@response
  9614                           
  9615                           ;Multi_RX_testjig_v2.c: 1130: if((response == 0xAA) || (response == 0xA1))
  9616  06C3  3AAA               	xorlw	170
  9617  06C4  1903               	btfsc	3,2
  9618  06C5  2EF5               	goto	l4516
  9619  06C6  30A1               	movlw	161
  9620  06C7  066A               	xorwf	main@response,w
  9621  06C8  1903               	btfsc	3,2
  9622  06C9  2EF5               	goto	l4516
  9623                           
  9624                           ;Multi_RX_testjig_v2.c: 1132: lcd_print_int(i, 11, 0, 0);
  9625  06CA  086C               	movf	main@i+1,w
  9626  06CB  00DC               	movwf	lcd_print_int@number+1
  9627  06CC  086B               	movf	main@i,w
  9628  06CD  00DB               	movwf	lcd_print_int@number
  9629  06CE  300B               	movlw	11
  9630  06CF  00DD               	movwf	lcd_print_int@pos
  9631  06D0  01DE               	clrf	lcd_print_int@pos+1
  9632  06D1  01DF               	clrf	lcd_print_int@decimal
  9633  06D2  01E0               	clrf	lcd_print_int@ten_thou_digit
  9634  06D3  3188  20F7  3180   	fcall	_lcd_print_int
  9635                           
  9636                           ;Multi_RX_testjig_v2.c: 1133: lcd_print_int(device_type, 5, 0, 0);
  9637  06D6  0020               	movlb	0	; select bank0
  9638  06D7  086E               	movf	main@device_type,w
  9639  06D8  00DB               	movwf	lcd_print_int@number
  9640  06D9  3005               	movlw	5
  9641  06DA  01DC               	clrf	lcd_print_int@number+1
  9642  06DB  00DD               	movwf	lcd_print_int@pos
  9643  06DC  01DE               	clrf	lcd_print_int@pos+1
  9644  06DD  01DF               	clrf	lcd_print_int@decimal
  9645  06DE  01E0               	clrf	lcd_print_int@ten_thou_digit
  9646  06DF  3188  20F7  3180   	fcall	_lcd_print_int
  9647                           
  9648                           ;Multi_RX_testjig_v2.c: 1134: _delay((unsigned long)((50)*(16000000/4000.0)));
  9649  06E2  3002               	movlw	2
  9650  06E3  0020               	movlb	0	; select bank0
  9651  06E4  00E3               	movwf	??_main+2
  9652  06E5  3004               	movlw	4
  9653  06E6  00E2               	movwf	??_main+1
  9654  06E7  30BA               	movlw	186
  9655  06E8  00E1               	movwf	??_main
  9656  06E9                     u5647:	
  9657  06E9  0BE1               	decfsz	??_main,f
  9658  06EA  2EE9               	goto	u5647
  9659  06EB  0BE2               	decfsz	??_main+1,f
  9660  06EC  2EE9               	goto	u5647
  9661  06ED  0BE3               	decfsz	??_main+2,f
  9662  06EE  2EE9               	goto	u5647
  9663  06EF  0000               	nop
  9664  06F0  0020               	movlb	0	; select bank0
  9665  06F1  0AEB               	incf	main@i,f
  9666  06F2  1903               	skipnz
  9667  06F3  0AEC               	incf	main@i+1,f
  9668  06F4  2EB3               	goto	l4498
  9669  06F5                     l4516:	
  9670  06F5  0AE8               	incf	main@j,f
  9671  06F6  1903               	skipnz
  9672  06F7  0AE9               	incf	main@j+1,f
  9673  06F8  0869               	movf	main@j+1,w
  9674  06F9  3A80               	xorlw	128
  9675  06FA  00E1               	movwf	??_main
  9676  06FB  3080               	movlw	128
  9677  06FC  0261               	subwf	??_main,w
  9678  06FD  1D03               	skipz
  9679  06FE  2F01               	goto	u5085
  9680  06FF  3032               	movlw	50
  9681  0700  0268               	subwf	main@j,w
  9682  0701                     u5085:	
  9683  0701  1C03               	skipc
  9684  0702  2DFA               	goto	l4446
  9685  0703                     l4520:	
  9686                           
  9687                           ;Multi_RX_testjig_v2.c: 1135: }
  9688                           ;Multi_RX_testjig_v2.c: 1136: }
  9689                           ;Multi_RX_testjig_v2.c: 1137: if(RX_data == 2)
  9690  0703  3002               	movlw	2
  9691  0704  0020               	movlb	0	; select bank0
  9692  0705  066D               	xorwf	main@RX_data,w
  9693  0706  1D03               	btfss	3,2
  9694  0707  2F14               	goto	l4524
  9695                           
  9696                           ;Multi_RX_testjig_v2.c: 1138: print_screen("Test RF", "Decode New - OK");
  9697  0708  309F               	movlw	low (STR_93| (0+32768))
  9698  0709  00F4               	movwf	print_screen@top
  9699  070A  3093               	movlw	high (STR_93| (0+32768))
  9700  070B  00F5               	movwf	print_screen@top+1
  9701  070C  30DB               	movlw	low (STR_118| (0+32768))
  9702  070D  00F6               	movwf	print_screen@bottom
  9703  070E  3090               	movlw	high (STR_118| (0+32768))
  9704  070F  00F7               	movwf	print_screen@bottom+1
  9705  0710  318A  22D4  3180   	fcall	_print_screen
  9706  0713  2F37               	goto	l4534
  9707  0714                     l4524:	
  9708                           
  9709                           ;Multi_RX_testjig_v2.c: 1139: else if(RX_data == 2)
  9710  0714  3002               	movlw	2
  9711  0715  066D               	xorwf	main@RX_data,w
  9712  0716  1D03               	btfss	3,2
  9713  0717  2F20               	goto	l4528
  9714                           
  9715                           ;Multi_RX_testjig_v2.c: 1140: print_error("Test RF", "Decode Old -Fail");
  9716  0718  309F               	movlw	low (STR_93| (0+32768))
  9717  0719  00F8               	movwf	print_error@top
  9718  071A  3093               	movlw	high (STR_93| (0+32768))
  9719  071B  00F9               	movwf	print_error@top+1
  9720  071C  3087               	movlw	low (STR_120| (0+32768))
  9721  071D  00FA               	movwf	print_error@bottom
  9722  071E  3090               	movlw	high (STR_120| (0+32768))
  9723  071F  2F33               	goto	L8
  9724  0720                     l4528:	
  9725                           
  9726                           ;Multi_RX_testjig_v2.c: 1141: else if(RX_data == 3)
  9727  0720  3003               	movlw	3
  9728  0721  066D               	xorwf	main@RX_data,w
  9729  0722  1D03               	btfss	3,2
  9730  0723  2F2C               	goto	l4532
  9731                           
  9732                           ;Multi_RX_testjig_v2.c: 1142: print_error("Test RF", "Error - Decode");
  9733  0724  309F               	movlw	low (STR_93| (0+32768))
  9734  0725  00F8               	movwf	print_error@top
  9735  0726  3093               	movlw	high (STR_93| (0+32768))
  9736  0727  00F9               	movwf	print_error@top+1
  9737  0728  3067               	movlw	low (STR_122| (0+32768))
  9738  0729  00FA               	movwf	print_error@bottom
  9739  072A  3091               	movlw	high (STR_122| (0+32768))
  9740  072B  2F33               	goto	L8
  9741  072C                     l4532:	
  9742                           
  9743                           ;Multi_RX_testjig_v2.c: 1143: else
  9744                           ;Multi_RX_testjig_v2.c: 1144: print_error("Comms Error", " 15");
  9745  072C  30D1               	movlw	low (STR_35| (0+32768))
  9746  072D  00F8               	movwf	print_error@top
  9747  072E  3092               	movlw	high (STR_35| (0+32768))
  9748  072F  00F9               	movwf	print_error@top+1
  9749  0730  30CB               	movlw	low (STR_124| (0+32768))
  9750  0731  00FA               	movwf	print_error@bottom
  9751  0732  3093               	movlw	high (STR_124| (0+32768))
  9752  0733                     L8:	
  9753  0733  00FB               	movwf	print_error@bottom+1
  9754  0734  318A  22F6  3180   	fcall	_print_error
  9755  0737                     l4534:	
  9756                           
  9757                           ;Multi_RX_testjig_v2.c: 1147: }
  9758                           ;Multi_RX_testjig_v2.c: 1149: if(device_type == 0xA2)
  9759  0737  30A2               	movlw	162
  9760  0738  0020               	movlb	0	; select bank0
  9761  0739  066E               	xorwf	main@device_type,w
  9762  073A  1D03               	btfss	3,2
  9763  073B  2F5E               	goto	l4546
  9764                           
  9765                           ;Multi_RX_testjig_v2.c: 1150: {
  9766                           ;Multi_RX_testjig_v2.c: 1152: print_screen("T4 bus (CAN)", " ");
  9767  073C  3020               	movlw	low (STR_125| (0+32768))
  9768  073D  00F4               	movwf	print_screen@top
  9769  073E  3092               	movlw	high (STR_125| (0+32768))
  9770  073F  00F5               	movwf	print_screen@top+1
  9771  0740  30D9               	movlw	low ((STR_137+14)| (0+32768))
  9772  0741  00F6               	movwf	print_screen@bottom
  9773  0742  3090               	movlw	high ((STR_137+14)| (0+32768))
  9774  0743  00F7               	movwf	print_screen@bottom+1
  9775  0744  318A  22D4  3180   	fcall	_print_screen
  9776                           
  9777                           ;Multi_RX_testjig_v2.c: 1153: TX_one(0xA0);
  9778  0747  30A0               	movlw	160
  9779  0748  3195  2579  3180   	fcall	_TX_one
  9780                           
  9781                           ;Multi_RX_testjig_v2.c: 1154: RX_data = RX_one();
  9782  074B  3188  201C  3180   	fcall	_RX_one
  9783  074E  0020               	movlb	0	; select bank0
  9784  074F  00ED               	movwf	main@RX_data
  9785                           
  9786                           ;Multi_RX_testjig_v2.c: 1155: if(RX_data != 0xAA)
  9787  0750  3AAA               	xorlw	170
  9788  0751  1903               	btfsc	3,2
  9789  0752  2F5E               	goto	l4546
  9790                           
  9791                           ;Multi_RX_testjig_v2.c: 1156: print_error("Comms Error", " 18");
  9792  0753  30D1               	movlw	low (STR_35| (0+32768))
  9793  0754  00F8               	movwf	print_error@top
  9794  0755  3092               	movlw	high (STR_35| (0+32768))
  9795  0756  00F9               	movwf	print_error@top+1
  9796  0757  30D7               	movlw	low (STR_128| (0+32768))
  9797  0758  00FA               	movwf	print_error@bottom
  9798  0759  3093               	movlw	high (STR_128| (0+32768))
  9799  075A  00FB               	movwf	print_error@bottom+1
  9800  075B  318A  22F6  3180   	fcall	_print_error
  9801  075E                     l4546:	
  9802                           
  9803                           ;Multi_RX_testjig_v2.c: 1160: }
  9804                           ;Multi_RX_testjig_v2.c: 1162: if((device_type == 0xAA) || (device_type == 0xA1) || (devi
      +                          ce_type == 0xA2))
  9805  075E  30AA               	movlw	170
  9806  075F  0020               	movlb	0	; select bank0
  9807  0760  066E               	xorwf	main@device_type,w
  9808  0761  1903               	btfsc	3,2
  9809  0762  2F6B               	goto	l4552
  9810  0763  30A1               	movlw	161
  9811  0764  066E               	xorwf	main@device_type,w
  9812  0765  1903               	btfsc	3,2
  9813  0766  2F6B               	goto	l4552
  9814  0767  30A2               	movlw	162
  9815  0768  066E               	xorwf	main@device_type,w
  9816  0769  1D03               	btfss	3,2
  9817  076A  2F8D               	goto	l4562
  9818  076B                     l4552:	
  9819                           
  9820                           ;Multi_RX_testjig_v2.c: 1163: {
  9821                           ;Multi_RX_testjig_v2.c: 1165: print_screen("Master Erase ", " ");
  9822  076B  30A3               	movlw	low (STR_129| (0+32768))
  9823  076C  00F4               	movwf	print_screen@top
  9824  076D  3091               	movlw	high (STR_129| (0+32768))
  9825  076E  00F5               	movwf	print_screen@top+1
  9826  076F  30D9               	movlw	low ((STR_137+14)| (0+32768))
  9827  0770  00F6               	movwf	print_screen@bottom
  9828  0771  3090               	movlw	high ((STR_137+14)| (0+32768))
  9829  0772  00F7               	movwf	print_screen@bottom+1
  9830  0773  318A  22D4  3180   	fcall	_print_screen
  9831                           
  9832                           ;Multi_RX_testjig_v2.c: 1166: TX_one(0x82);
  9833  0776  3082               	movlw	130
  9834  0777  3195  2579  3180   	fcall	_TX_one
  9835                           
  9836                           ;Multi_RX_testjig_v2.c: 1167: RX_data = RX_one();
  9837  077A  3188  201C  3180   	fcall	_RX_one
  9838  077D  0020               	movlb	0	; select bank0
  9839  077E  00ED               	movwf	main@RX_data
  9840                           
  9841                           ;Multi_RX_testjig_v2.c: 1168: if(RX_data != 0x8A)
  9842  077F  3A8A               	xorlw	138
  9843  0780  1903               	btfsc	3,2
  9844  0781  2F8D               	goto	l4562
  9845                           
  9846                           ;Multi_RX_testjig_v2.c: 1169: print_error("Comms Error", " 17");
  9847  0782  30D1               	movlw	low (STR_35| (0+32768))
  9848  0783  00F8               	movwf	print_error@top
  9849  0784  3092               	movlw	high (STR_35| (0+32768))
  9850  0785  00F9               	movwf	print_error@top+1
  9851  0786  30D3               	movlw	low (STR_132| (0+32768))
  9852  0787  00FA               	movwf	print_error@bottom
  9853  0788  3093               	movlw	high (STR_132| (0+32768))
  9854  0789  00FB               	movwf	print_error@bottom+1
  9855  078A  318A  22F6  3180   	fcall	_print_error
  9856  078D                     l4562:	
  9857                           
  9858                           ;Multi_RX_testjig_v2.c: 1170: }
  9859                           ;Multi_RX_testjig_v2.c: 1172: if((device_type == 0xAA) || (device_type == 0xA1))
  9860  078D  30AA               	movlw	170
  9861  078E  0020               	movlb	0	; select bank0
  9862  078F  066E               	xorwf	main@device_type,w
  9863  0790  1903               	btfsc	3,2
  9864  0791  2F96               	goto	l4566
  9865  0792  30A1               	movlw	161
  9866  0793  066E               	xorwf	main@device_type,w
  9867  0794  1D03               	btfss	3,2
  9868  0795  2FB8               	goto	l4576
  9869  0796                     l4566:	
  9870                           
  9871                           ;Multi_RX_testjig_v2.c: 1173: {
  9872                           ;Multi_RX_testjig_v2.c: 1175: print_screen("Set # of ", " channels");
  9873  0796  302B               	movlw	low (STR_133| (0+32768))
  9874  0797  00F4               	movwf	print_screen@top
  9875  0798  3093               	movlw	high (STR_133| (0+32768))
  9876  0799  00F5               	movwf	print_screen@top+1
  9877  079A  303F               	movlw	low (STR_134| (0+32768))
  9878  079B  00F6               	movwf	print_screen@bottom
  9879  079C  3093               	movlw	high (STR_134| (0+32768))
  9880  079D  00F7               	movwf	print_screen@bottom+1
  9881  079E  318A  22D4  3180   	fcall	_print_screen
  9882                           
  9883                           ;Multi_RX_testjig_v2.c: 1176: TX_one(0x81);
  9884  07A1  3081               	movlw	129
  9885  07A2  3195  2579  3180   	fcall	_TX_one
  9886                           
  9887                           ;Multi_RX_testjig_v2.c: 1177: RX_data = RX_one();
  9888  07A5  3188  201C  3180   	fcall	_RX_one
  9889  07A8  0020               	movlb	0	; select bank0
  9890  07A9  00ED               	movwf	main@RX_data
  9891                           
  9892                           ;Multi_RX_testjig_v2.c: 1178: if(RX_data != 0x8A)
  9893  07AA  3A8A               	xorlw	138
  9894  07AB  1903               	btfsc	3,2
  9895  07AC  2FB8               	goto	l4576
  9896                           
  9897                           ;Multi_RX_testjig_v2.c: 1179: print_error("Comms Error", " 16");
  9898  07AD  30D1               	movlw	low (STR_35| (0+32768))
  9899  07AE  00F8               	movwf	print_error@top
  9900  07AF  3092               	movlw	high (STR_35| (0+32768))
  9901  07B0  00F9               	movwf	print_error@top+1
  9902  07B1  30CF               	movlw	low (STR_136| (0+32768))
  9903  07B2  00FA               	movwf	print_error@bottom
  9904  07B3  3093               	movlw	high (STR_136| (0+32768))
  9905  07B4  00FB               	movwf	print_error@bottom+1
  9906  07B5  318A  22F6  3180   	fcall	_print_error
  9907  07B8                     l4576:	
  9908                           
  9909                           ;Multi_RX_testjig_v2.c: 1180: }
  9910                           ;Multi_RX_testjig_v2.c: 1182: if((device_type == 0xAA) || (device_type == 0xA1)|| (devic
      +                          e_type == 0xA2))
  9911  07B8  30AA               	movlw	170
  9912  07B9  0020               	movlb	0	; select bank0
  9913  07BA  066E               	xorwf	main@device_type,w
  9914  07BB  1903               	btfsc	3,2
  9915  07BC  2FC5               	goto	l4582
  9916  07BD  30A1               	movlw	161
  9917  07BE  066E               	xorwf	main@device_type,w
  9918  07BF  1903               	btfsc	3,2
  9919  07C0  2FC5               	goto	l4582
  9920  07C1  30A2               	movlw	162
  9921  07C2  066E               	xorwf	main@device_type,w
  9922  07C3  1D03               	btfss	3,2
  9923  07C4  2FF2               	goto	l445
  9924  07C5                     l4582:	
  9925                           
  9926                           ;Multi_RX_testjig_v2.c: 1183: {
  9927                           ;Multi_RX_testjig_v2.c: 1185: print_screen("7seg, buzzer,  ", " button test");
  9928  07C5  30CB               	movlw	low (STR_137| (0+32768))
  9929  07C6  00F4               	movwf	print_screen@top
  9930  07C7  3090               	movlw	high (STR_137| (0+32768))
  9931  07C8  00F5               	movwf	print_screen@top+1
  9932  07C9  307B               	movlw	low (STR_138| (0+32768))
  9933  07CA  00F6               	movwf	print_screen@bottom
  9934  07CB  3092               	movlw	high (STR_138| (0+32768))
  9935  07CC  00F7               	movwf	print_screen@bottom+1
  9936  07CD  318A  22D4  3180   	fcall	_print_screen
  9937                           
  9938                           ;Multi_RX_testjig_v2.c: 1186: TX_one(0x90);
  9939  07D0  3090               	movlw	144
  9940  07D1  3195  2579  3180   	fcall	_TX_one
  9941                           
  9942                           ;Multi_RX_testjig_v2.c: 1187: TRISG1 = 1;
  9943  07D4  0026               	movlb	6	; select bank6
  9944  07D5  148D               	bsf	13,1	;volatile
  9945                           
  9946                           ;Multi_RX_testjig_v2.c: 1188: _delay((unsigned long)((1000)*(16000000/4000.0)));
  9947  07D6  3015               	movlw	21
  9948  07D7  0020               	movlb	0	; select bank0
  9949  07D8  00E3               	movwf	??_main+2
  9950  07D9  304B               	movlw	75
  9951  07DA  00E2               	movwf	??_main+1
  9952  07DB  30D1               	movlw	209
  9953  07DC  00E1               	movwf	??_main
  9954  07DD                     u5657:	
  9955  07DD  0BE1               	decfsz	??_main,f
  9956  07DE  2FDD               	goto	u5657
  9957  07DF  0BE2               	decfsz	??_main+1,f
  9958  07E0  2FDD               	goto	u5657
  9959  07E1  0BE3               	decfsz	??_main+2,f
  9960  07E2  2FDD               	goto	u5657
  9961  07E3  0000               	nop
  9962  07E4                     l448:	
  9963                           ;Multi_RX_testjig_v2.c: 1189: while(!RG1);
  9964                           
  9965  07E4  0025               	movlb	5	; select bank5
  9966  07E5  1C8D               	btfss	13,1	;volatile
  9967  07E6  2FE4               	goto	l448
  9968                           
  9969                           ;Multi_RX_testjig_v2.c: 1190: print_screen("waiting  ", " for comms");
  9970  07E7  3021               	movlw	low (STR_139| (0+32768))
  9971  07E8  00F4               	movwf	print_screen@top
  9972  07E9  3093               	movlw	high (STR_139| (0+32768))
  9973  07EA  00F5               	movwf	print_screen@top+1
  9974  07EB  3000               	movlw	low (STR_140| (0+32768))
  9975  07EC  00F6               	movwf	print_screen@bottom
  9976  07ED  3093               	movlw	high (STR_140| (0+32768))
  9977  07EE  00F7               	movwf	print_screen@bottom+1
  9978  07EF  318A  22D4  3180   	fcall	_print_screen
  9979  07F2                     l445:	
  9980                           
  9981                           ;Multi_RX_testjig_v2.c: 1195: }
  9982                           ;Multi_RX_testjig_v2.c: 1199: testjig_done(1, device_type);
  9983  07F2  0020               	movlb	0	; select bank0
  9984  07F3  086E               	movf	main@device_type,w
  9985  07F4  00F8               	movwf	testjig_done@device_type
  9986  07F5  3001               	movlw	1
  9987  07F6  3189  217F         	fcall	_testjig_done
  9988  07F8  3180  284F         	ljmp	start
  9989  07FA                     __end_of_main:	


Data Sizes:
    Strings     990
    Constant    0
    Data        2
    BSS         26
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80      0      28
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0

Pointer List with Targets:

    print_screen@bottom	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_176(CODE[17]), STR_174(CODE[13]), STR_172(CODE[13]), STR_170(CODE[13]), 
		 -> STR_168(CODE[13]), STR_166(CODE[14]), STR_164(CODE[14]), STR_162(CODE[14]), 
		 -> STR_160(CODE[14]), STR_158(CODE[8]), STR_156(CODE[8]), STR_154(CODE[9]), 
		 -> STR_152(CODE[9]), STR_150(CODE[9]), STR_148(CODE[14]), STR_146(CODE[14]), 
		 -> STR_144(CODE[14]), STR_142(CODE[14]), STR_140(CODE[11]), STR_138(CODE[13]), 
		 -> STR_134(CODE[10]), STR_130(CODE[2]), STR_126(CODE[2]), STR_118(CODE[16]), 
		 -> STR_116(CODE[15]), STR_114(CODE[6]), STR_112(CODE[1]), STR_110(CODE[7]), 
		 -> STR_108(CODE[10]), STR_94(CODE[5]), STR_80(CODE[5]), STR_66(CODE[5]), 
		 -> STR_52(CODE[5]), STR_50(CODE[1]), STR_44(CODE[6]), STR_38(CODE[18]), 
		 -> STR_34(CODE[6]), STR_32(CODE[9]), STR_30(CODE[13]), STR_28(CODE[1]), 
		 -> STR_6(CODE[1]), STR_2(CODE[17]), 

    print_screen@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_175(CODE[12]), STR_173(CODE[17]), STR_171(CODE[16]), STR_169(CODE[12]), 
		 -> STR_167(CODE[15]), STR_165(CODE[17]), STR_163(CODE[16]), STR_161(CODE[12]), 
		 -> STR_159(CODE[15]), STR_157(CODE[17]), STR_155(CODE[9]), STR_153(CODE[16]), 
		 -> STR_151(CODE[5]), STR_149(CODE[8]), STR_147(CODE[14]), STR_145(CODE[16]), 
		 -> STR_143(CODE[9]), STR_141(CODE[12]), STR_139(CODE[10]), STR_137(CODE[16]), 
		 -> STR_133(CODE[10]), STR_129(CODE[14]), STR_125(CODE[13]), STR_117(CODE[8]), 
		 -> STR_115(CODE[8]), STR_113(CODE[6]), STR_111(CODE[8]), STR_109(CODE[8]), 
		 -> STR_107(CODE[8]), STR_93(CODE[8]), STR_79(CODE[11]), STR_65(CODE[12]), 
		 -> STR_51(CODE[11]), STR_49(CODE[11]), STR_43(CODE[13]), STR_37(CODE[9]), 
		 -> STR_33(CODE[13]), STR_31(CODE[19]), STR_29(CODE[12]), STR_27(CODE[19]), 
		 -> STR_5(CODE[15]), STR_1(CODE[9]), 

    print_error@bottom	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_136(CODE[4]), STR_132(CODE[4]), STR_128(CODE[4]), STR_124(CODE[4]), 
		 -> STR_122(CODE[15]), STR_120(CODE[17]), STR_106(CODE[13]), STR_104(CODE[14]), 
		 -> STR_102(CODE[5]), STR_100(CODE[5]), STR_98(CODE[5]), STR_96(CODE[4]), 
		 -> STR_92(CODE[9]), STR_90(CODE[8]), STR_88(CODE[9]), STR_86(CODE[8]), 
		 -> STR_84(CODE[9]), STR_82(CODE[9]), STR_78(CODE[9]), STR_76(CODE[8]), 
		 -> STR_74(CODE[9]), STR_72(CODE[8]), STR_70(CODE[9]), STR_68(CODE[9]), 
		 -> STR_64(CODE[9]), STR_62(CODE[8]), STR_60(CODE[9]), STR_58(CODE[8]), 
		 -> STR_56(CODE[9]), STR_54(CODE[9]), STR_48(CODE[18]), STR_46(CODE[14]), 
		 -> STR_42(CODE[3]), STR_40(CODE[12]), STR_36(CODE[3]), STR_26(CODE[12]), 
		 -> STR_24(CODE[11]), STR_22(CODE[13]), STR_20(CODE[13]), STR_18(CODE[13]), 
		 -> STR_16(CODE[13]), STR_14(CODE[12]), STR_12(CODE[11]), STR_10(CODE[13]), 
		 -> STR_8(CODE[13]), STR_4(CODE[14]), 

    print_error@top	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_135(CODE[12]), STR_131(CODE[12]), STR_127(CODE[12]), STR_123(CODE[12]), 
		 -> STR_121(CODE[8]), STR_119(CODE[8]), STR_105(CODE[13]), STR_103(CODE[13]), 
		 -> STR_101(CODE[12]), STR_99(CODE[12]), STR_97(CODE[12]), STR_95(CODE[12]), 
		 -> STR_91(CODE[12]), STR_89(CODE[15]), STR_87(CODE[12]), STR_85(CODE[16]), 
		 -> STR_83(CODE[12]), STR_81(CODE[21]), STR_77(CODE[12]), STR_75(CODE[15]), 
		 -> STR_73(CODE[12]), STR_71(CODE[16]), STR_69(CODE[12]), STR_67(CODE[21]), 
		 -> STR_63(CODE[12]), STR_61(CODE[15]), STR_59(CODE[12]), STR_57(CODE[16]), 
		 -> STR_55(CODE[12]), STR_53(CODE[21]), STR_47(CODE[12]), STR_45(CODE[12]), 
		 -> STR_41(CODE[12]), STR_39(CODE[13]), STR_35(CODE[12]), STR_25(CODE[14]), 
		 -> STR_23(CODE[11]), STR_21(CODE[15]), STR_19(CODE[15]), STR_17(CODE[14]), 
		 -> STR_15(CODE[14]), STR_13(CODE[14]), STR_11(CODE[11]), STR_9(CODE[14]), 
		 -> STR_7(CODE[14]), STR_3(CODE[9]), 

    i2c_Write_string@data	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_176(CODE[17]), STR_175(CODE[12]), STR_174(CODE[13]), STR_173(CODE[17]), 
		 -> STR_172(CODE[13]), STR_171(CODE[16]), STR_170(CODE[13]), STR_169(CODE[12]), 
		 -> STR_168(CODE[13]), STR_167(CODE[15]), STR_166(CODE[14]), STR_165(CODE[17]), 
		 -> STR_164(CODE[14]), STR_163(CODE[16]), STR_162(CODE[14]), STR_161(CODE[12]), 
		 -> STR_160(CODE[14]), STR_159(CODE[15]), STR_158(CODE[8]), STR_157(CODE[17]), 
		 -> STR_156(CODE[8]), STR_155(CODE[9]), STR_154(CODE[9]), STR_153(CODE[16]), 
		 -> STR_152(CODE[9]), STR_151(CODE[5]), STR_150(CODE[9]), STR_149(CODE[8]), 
		 -> STR_148(CODE[14]), STR_147(CODE[14]), STR_146(CODE[14]), STR_145(CODE[16]), 
		 -> STR_144(CODE[14]), STR_143(CODE[9]), STR_142(CODE[14]), STR_141(CODE[12]), 
		 -> STR_140(CODE[11]), STR_139(CODE[10]), STR_138(CODE[13]), STR_137(CODE[16]), 
		 -> STR_136(CODE[4]), STR_135(CODE[12]), STR_134(CODE[10]), STR_133(CODE[10]), 
		 -> STR_132(CODE[4]), STR_131(CODE[12]), STR_130(CODE[2]), STR_129(CODE[14]), 
		 -> STR_128(CODE[4]), STR_127(CODE[12]), STR_126(CODE[2]), STR_125(CODE[13]), 
		 -> STR_124(CODE[4]), STR_123(CODE[12]), STR_122(CODE[15]), STR_121(CODE[8]), 
		 -> STR_120(CODE[17]), STR_119(CODE[8]), STR_118(CODE[16]), STR_117(CODE[8]), 
		 -> STR_116(CODE[15]), STR_115(CODE[8]), STR_114(CODE[6]), STR_113(CODE[6]), 
		 -> STR_112(CODE[1]), STR_111(CODE[8]), STR_110(CODE[7]), STR_109(CODE[8]), 
		 -> STR_108(CODE[10]), STR_107(CODE[8]), STR_106(CODE[13]), STR_105(CODE[13]), 
		 -> STR_104(CODE[14]), STR_103(CODE[13]), STR_102(CODE[5]), STR_101(CODE[12]), 
		 -> STR_100(CODE[5]), STR_99(CODE[12]), STR_98(CODE[5]), STR_97(CODE[12]), 
		 -> STR_96(CODE[4]), STR_95(CODE[12]), STR_94(CODE[5]), STR_93(CODE[8]), 
		 -> STR_92(CODE[9]), STR_91(CODE[12]), STR_90(CODE[8]), STR_89(CODE[15]), 
		 -> STR_88(CODE[9]), STR_87(CODE[12]), STR_86(CODE[8]), STR_85(CODE[16]), 
		 -> STR_84(CODE[9]), STR_83(CODE[12]), STR_82(CODE[9]), STR_81(CODE[21]), 
		 -> STR_80(CODE[5]), STR_79(CODE[11]), STR_78(CODE[9]), STR_77(CODE[12]), 
		 -> STR_76(CODE[8]), STR_75(CODE[15]), STR_74(CODE[9]), STR_73(CODE[12]), 
		 -> STR_72(CODE[8]), STR_71(CODE[16]), STR_70(CODE[9]), STR_69(CODE[12]), 
		 -> STR_68(CODE[9]), STR_67(CODE[21]), STR_66(CODE[5]), STR_65(CODE[12]), 
		 -> STR_64(CODE[9]), STR_63(CODE[12]), STR_62(CODE[8]), STR_61(CODE[15]), 
		 -> STR_60(CODE[9]), STR_59(CODE[12]), STR_58(CODE[8]), STR_57(CODE[16]), 
		 -> STR_56(CODE[9]), STR_55(CODE[12]), STR_54(CODE[9]), STR_53(CODE[21]), 
		 -> STR_52(CODE[5]), STR_51(CODE[11]), STR_50(CODE[1]), STR_49(CODE[11]), 
		 -> STR_48(CODE[18]), STR_47(CODE[12]), STR_46(CODE[14]), STR_45(CODE[12]), 
		 -> STR_44(CODE[6]), STR_43(CODE[13]), STR_42(CODE[3]), STR_41(CODE[12]), 
		 -> STR_40(CODE[12]), STR_39(CODE[13]), STR_38(CODE[18]), STR_37(CODE[9]), 
		 -> STR_36(CODE[3]), STR_35(CODE[12]), STR_34(CODE[6]), STR_33(CODE[13]), 
		 -> STR_32(CODE[9]), STR_31(CODE[19]), STR_30(CODE[13]), STR_29(CODE[12]), 
		 -> STR_28(CODE[1]), STR_27(CODE[19]), STR_26(CODE[12]), STR_25(CODE[14]), 
		 -> STR_24(CODE[11]), STR_23(CODE[11]), STR_22(CODE[13]), STR_21(CODE[15]), 
		 -> STR_20(CODE[13]), STR_19(CODE[15]), STR_18(CODE[13]), STR_17(CODE[14]), 
		 -> STR_16(CODE[13]), STR_15(CODE[14]), STR_14(CODE[12]), STR_13(CODE[14]), 
		 -> STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[13]), STR_9(CODE[14]), 
		 -> STR_8(CODE[13]), STR_7(CODE[14]), STR_6(CODE[1]), STR_5(CODE[15]), 
		 -> STR_4(CODE[14]), STR_3(CODE[9]), STR_2(CODE[17]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _testjig_done->_print_screen
    _print_error->_print_screen
    _print_screen->_i2c_Write_string
    _i2c_second_line->_i2c_Write
    _i2c_first_line->_i2c_Write
    _i2c_Write_string->_i2c_Write
    _clear_lcd->_i2c_Write
    _ten_thou_conv->___wmul
    _lcd_set_cursor->_i2c_Write
    _i2c_write_char->_i2c_Write
    _init_i2c_lcd_5v->_i2c_Write
    _get_30v_current->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl
    _Vout_set->_digitalpot
    _digitalpot->_i2c_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_print_int
    _lcd_print_int->_get_30v_current
    _get_30v_current->___fltol
    ___fltol->___fladd
    ___fladd->___flmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   39559
                                             65 BANK0     14    14      0
                        _ADC_get_val
                             _RX_one
                     _RX_one_timeout
                             _TX_one
                           _Vout_set
                          _clear_lcd
                      _debug_fast_tx
                    _get_30v_current
                           _init_ADC
                  _init_current_sink
                           _init_i2c
                    _init_i2c_lcd_5v
                      _lcd_print_int
                   _power_supply_set
                        _print_error
                       _print_screen
                       _testjig_done
 ---------------------------------------------------------------------------------
 (1) _testjig_done                                         5     4      1    7064
                                              8 COMMON     5     4      1
                           _buzz_one
                      _debug_fast_tx
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (1) _print_error                                          7     3      4   12947
                                              8 COMMON     4     0      4
                                              0 BANK0      3     3      0
                           _buzz_one
                          _clear_lcd
                      _debug_fast_tx
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (2) _print_screen                                         4     0      4    5809
                                              4 COMMON     4     0      4
                          _clear_lcd
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
 ---------------------------------------------------------------------------------
 (3) _i2c_second_line                                      1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_first_line                                       1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write_string                                     3     1      2     323
                                              1 COMMON     3     1      2
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _clear_lcd                                            2     2      0      22
                                              1 COMMON     2     2      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _power_supply_set                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _debug_fast_tx                                        3     1      2     581
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _buzz_one                                             2     0      2     214
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd_print_int                                        6     0      6    5373
                                             59 BANK0      6     0      6
                    _get_30v_current (ARG)
                     _i2c_write_char
                     _lcd_set_cursor
                      _ten_thou_conv
 ---------------------------------------------------------------------------------
 (2) _ten_thou_conv                                        5     3      2    2091
                                              6 COMMON     5     3      2
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     910
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1    1029
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       3     2      1     158
                                              1 COMMON     3     2      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_write_char                                       1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c_lcd_5v                                      4     3      1     152
                                              1 COMMON     4     3      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init_current_sink                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_30v_current                                      4     2      2    5529
                                             55 BANK0      4     2      2
                        _ADC_get_val
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     386
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     293
                                             45 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2565
                                              0 BANK0     25    17      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            8     5      3     989
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2194
                                             25 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_get_val                                          6     3      3      46
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Vout_set                                             6     4      2     349
                                              4 COMMON     6     4      2
                         _digitalpot
 ---------------------------------------------------------------------------------
 (2) _digitalpot                                           3     3      0      44
                                              1 COMMON     3     3      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (4) _i2c_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TX_one                                               3     3      0      69
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one_timeout                                       3     3      0      93
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one                                               3     3      0      93
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_get_val
   _RX_one
   _RX_one_timeout
   _TX_one
   _Vout_set
     _digitalpot
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _clear_lcd
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _debug_fast_tx
   _get_30v_current
     _ADC_get_val
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _init_ADC
   _init_current_sink
   _init_i2c
   _init_i2c_lcd_5v
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _lcd_print_int
     _get_30v_current (ARG)
       _ADC_get_val
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _i2c_write_char (ARG)
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _lcd_set_cursor (ARG)
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _ten_thou_conv (ARG)
       ___bmul
       ___wmul
   _power_supply_set
   _print_error
     _buzz_one
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _debug_fast_tx
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
   _print_screen
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _testjig_done
     _buzz_one
     _debug_fast_tx
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      1C       7       35.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0      7A      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      7A      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Mar 01 14:16:08 2019

         _motor_direction_timer 00AA             ??_init_current_sink 0070                     main@RX_data 006D  
                             pc 0002                  ___bmul@product 0071                     __CFG_CP$OFF 0000  
              _power_supply_set 0BF3             ___wmul@multiplicand 0072                      TX_one@data 0071  
           __Umul8_16@word_mpld 0076                             l301 17E1                             l330 01E7  
                           l500 0BE3                             l340 021A                             l324 0199  
                           l405 05C8                             l341 021E                             l333 01F7  
                           l328 022F                             l337 0211                             l506 0BD8  
                           l418 065D                             l515 0BE8                             l531 0BC2  
                           l355 0355                             l445 07F2                             l454 0980  
                           l294 172A                             l703 0AB4                             l463 09D4  
                           l480 0A66                             l448 07E4                             l713 081C  
                           l730 085C                             l723 084D                             l627 096E  
                           l716 0827                             l708 1584                             l718 082E  
                           l719 0830                             l728 0857                             l680 0BF9  
                           l681 0BFE                             l489 0A97                             l682 0C03  
                           l668 0C63                             l678 0BF5                             l696 08C8  
                           l970 0C83                             l971 0C81                             l981 0D03  
                           l983 0CF0                             l975 0C9E                             l992 0D1E  
                           l984 0CF6                             l976 0C9C                             l993 0D1F  
                           l985 0CF7                             _GIE 005F                             l998 0D70  
                           _RA2 0062                             _RA4 0064                             _RA5 0065  
             ??_i2c_second_line 0071                             _RE0 0080                             _RF0 1460  
                           _RF1 1461                             _RG0 1468                             _RF2 1462  
                           _RE4 0084                             _RG1 1469                             _RF3 1463  
                           _RE5 0085                             _RE6 0086                             _RF5 1465  
                           _PR2 001B                             _PR8 0596                             _isr 0004  
                           _ten 00B6                    __CFG_BORV$HI 0000                             wreg 0009  
                ?_lcd_print_int 005B                    ___flmul@aexp 002D                    ___flmul@bexp 0032  
                  ___flmul@sign 002C                    ___flmul@temp 0037                    ___flmul@prod 0033  
                          S4670 13EA                            S4668 13DE         __size_of_i2c_write_char 000D  
               ?_lcd_set_cursor 0071                    __CFG_LVP$OFF 0000       __end_of_init_current_sink 1579  
                  ___fltol@exp1 0056                            l1003 0D89                            l1105 0FDB  
                          l1018 0DBB                            l1117 0F87                            l1063 0DD4  
                          l1064 0DD2                            l1067 0DEA                            l1068 0DE8  
                          l1092 0FA9                            l1085 0F38                            l3102 0C08  
                          l3042 0F57                            l3210 087C                            l3060 0F6F  
                          l3036 0F4F                            l3212 0881                            l3054 0F67  
                          l3230 08A4                            l3150 08F1                            l4110 0113  
                          l4102 00E8                            l4030 171C                            l3072 0F7F  
                          l3048 0F5F                            l3152 08F3                            l4040 1770  
                          l3410 0DB7                            l3402 0DAB                            l3066 0F77  
                          l3226 089D                            l4210 0285                            l4114 0123  
                          l4042 1756                            l3332 0CFE                            l3500 0EDD  
                          l3236 08A8                            l4052 178E                            l3414 0DBC  
                          l3350 0D27                            l3318 0CC8                            l3510 0EF2  
                          l3238 08B1                            l3094 0ABB                            l4222 02B3  
                          l4230 02E4                            l3360 0D68                            l3520 0F04  
                          l4320 0431                            l4312 0416                            l4072 0092  
                          l4064 17D1                            l4056 17A1                            l4048 177B  
                          l3338 0D0D                            l3530 0F2A                            l3506 0EF0  
                          l4242 0327                            l4234 02F8                            l4218 0299  
                          l4154 01F0                            l4090 00B3                            l4074 0062  
                          l3380 0D8F                            l3524 0F17                            l3452 0DF8  
                          l3436 0DD8                            l3700 0A54                            l4420 0587  
                          l4412 0570                            l4308 040E                            l4316 041E  
                          l4252 0346                            l4172 0215                            l4164 0204  
                          l4148 01DD                            l4180 0230                            l4084 009D  
                          l2910 0BDA                            l3390 0D9A                            l3374 0D8A  
                          l3366 0D7E                            l4342 048B                            l4350 049B  
                          l4318 0426                            l4238 031E                            l4166 0206  
                          l4094 00C2                            l3288 0CAA                            l3448 0DEE  
                          l3552 0FB4                            l3624 0BBB                            l3800 091A  
                          l3720 0A8D                            l3712 0A7D                            l3704 0A5C  
                          l4520 0703                            l4432 05B9                            l4424 0593  
                          l4416 057B                            l4352 04A3                            l4280 0399  
                          l4184 0249                            l2914 0BE6                            l3386 0D98  
                          l3378 0D8D                            l3570 0FD0                            l3650 09A6  
                          l3642 0996                            l4354 04AE                            l4346 0493  
                          l4274 0386                            l4178 0225                            l4098 00D5  
                          l3564 0FCB                            l3556 0FB6                            l3548 0FA1  
                          l3716 0A85                            l4532 072C                            l4524 0714  
                          l4516 06F5                            l4452 0610                            l4380 0510  
                          l4284 03A2                            l3582 0FF7                            l3574 0FE4  
                          l3558 0FC0                            l3830 094F                            l3822 0942  
                          l3814 0933                            l3806 0926                            l2926 0B82  
                          l3654 09AE                            l3646 099E                            l4446 05FA  
                          l4534 0737                            l3568 0FD9                            l3840 0961  
                          l3824 0946                            l3808 092A                            l2936 0B8A  
                          l3680 0A06                            l3672 09F2                            l4552 076B  
                          l4528 0720                            l4392 0534                            l4376 0508  
                          l4384 0518                            l3754 08C1                            l3762 08CD  
                          l2962 1682                            l3842 0965                            l2938 0B9C  
                          l3738 0B0C                            l3666 09E4                            l3690 0A3E  
                          l4562 078D                            l4546 075E                            l4490 0694  
                          l4482 0680                            l4386 0520                            l3756 08C3  
                          l3764 08DD                            l3780 0C5B                            l3676 09FA  
                          l4388 052B                            l3870 0850                            l3758 08C5  
                          l2966 1688                            l4582 07C5                            l4566 0796  
                          l3880 085E                            l4672 08D2                            l3792 090E  
                          l3696 0A4C                            l3688 0A36                            l4576 07B8  
                          l3794 0911                            l4498 06B3                            l3868 0848  
                          l3796 0914                            ?_isr 0070                            STR_1 1364  
                          STR_2 10A9                            STR_3 1364                            STR_4 11BF  
                          STR_5 1158                            STR_6 10DA                            STR_7 11F7  
                          STR_8 1247                            STR_9 11F7                            u4100 1589  
                          u3160 0CE7                            u4114 158B                            u3170 0CE8  
                          u3155 0CDC                            u5005 05F8                            u3263 0D39  
                          u3605 0F0D                            u3615 0F21                            u5307 17F2  
                          u2925 15A8                            u5085 0701                            u5317 0104  
                          u2870 0AB9                            u2935 15B7                            u5407 01D7  
                          u5327 0142                            u2945 15C6                            u5417 0242  
                          u5337 0162                            u5257 16F6                            u2955 15E2  
                          u5507 0442                            u5427 0252                            u5347 0171  
                          u5267 1705                            u2965 160E                            u5517 045C  
                          u5437 0261                            u5357 0181                            u5277 1710  
                          u2975 1635                            u5607 0640                            u5527 0476  
                          u5447 02AB                            u5367 0192                            u5287 1746  
                          u5617 0652                            u5537 04BF                            u5457 02D2  
                          u5377 01A7                            u5297 17C2                            u2995 088A  
                          u5707 0A6F                            u5627 0678                            u5547 04D9  
                          u5467 0317                            u5387 01B6                            u5717 0AA0  
                          u5637 06AA                            u5557 04F3                            u5477 03C4  
                          u5397 01C6                            u5807 1581                            u5727 0B25  
                          u5647 06E9                            u5567 0541                            u5487 03DE  
                          u5817 158E                            u5737 0B3C                            u5657 07DD  
                          u5577 05AA                            u5497 03F8                            u5827 159A  
                          u5747 0AF2                            u5667 09C9                            u5587 05DA  
                          u5837 0852                            u5757 0B51                            u5677 09DD  
                          u5597 0607                            u5847 0860                            u5767 0B64  
                          u5687 0A16                            u5857 0869                            u5777 0BCF  
                          u5697 0A2C                            u5867 0822                            u5787 080C  
                          u5877 0834                            u5797 0B7C                            u5887 083E  
                          _TMR0 0015                            _WPUB 020D                            _WPUD 020F  
                          _WPUE 0210                            _WPUG 048D                    __CFG_WRT$OFF 0000  
                          _main 1695                            _hund 00B4                            _thou 00B8  
                          fsr0h 0005                            fsr0l 0004                            indf0 0000  
                          _unit 00B7                            btemp 007E               ??_get_30v_current 007E  
                 __CFG_BOREN$ON 0000                            ltemp 007E                            start 004F  
                          ttemp 007E                            wtemp 007E                ??_RX_one_timeout 0070  
                 __CFG_IESO$OFF 0000         i2c_write_char@char_data 0071               ___bmul@multiplier 0072  
                 __CFG_MCLRE$ON 0000                 digitalpot@value 0073            __size_of_ADC_get_val 0012  
       __end_of_init_i2c_lcd_5v 0BD5                           ??_isr 0070                  _i2c_first_line 0B44  
                 ___fltol@sign1 0055                 __end_of___fladd 0DC1                           ?_main 0070  
                         STR_10 122D                           STR_11 1198                           STR_20 1247  
                         STR_12 12F5                           STR_21 1194                           STR_13 11F7  
                         STR_22 122D                           STR_30 1045                           STR_14 12DD  
                         STR_31 103F                           STR_23 1316                           STR_15 1205  
                         STR_16 1247                           STR_24 12F5                           STR_32 136D  
                         STR_40 12A1                           STR_41 12D1                           STR_25 1205  
                         STR_17 1205                           STR_33 1261                           STR_50 10DA  
                         STR_42 1358                           STR_18 122D                           STR_26 12DD  
                         STR_34 1305                           STR_51 130B                           STR_35 12D1  
                         STR_43 1213                           STR_19 1194                           STR_27 103F  
                         STR_28 10DA                           STR_60 135B                           STR_44 12B3  
                         STR_52 137A                           STR_36 13DB                           STR_37 1349  
                         STR_29 12C5                           STR_45 12AD                           STR_61 112B  
                         STR_53 1000                           STR_70 135B                           STR_62 1397  
                         STR_54 1352                           STR_46 11B1                           STR_38 1052  
                         STR_47 12AD                           STR_63 12D1                           STR_55 12D1  
                         STR_39 126E                           STR_71 10FB                           STR_72 1353  
                         STR_64 135B                           STR_80 137A                           STR_56 135B  
                         STR_48 1064                           STR_73 12D1                           STR_49 130B  
                         STR_65 1295                           STR_57 10EB                           STR_81 102A  
                         STR_58 1353                           STR_82 1352                           STR_74 135B  
                         STR_90 1397                           STR_66 137A                           STR_91 12D1  
                         STR_83 12D1                           STR_59 12D1                           STR_75 113A  
                         STR_67 1015                           STR_68 1352                           STR_92 135B  
                         STR_84 135B                           STR_76 1397                           STR_77 12D1  
                         STR_69 12D1                           STR_93 139F                           STR_85 110B  
                         STR_86 1353                           STR_78 135B                           STR_94 1242  
                         STR_95 12D1                           STR_87 12D1                           STR_79 130B  
                         STR_88 135B                           STR_96 13C7                 __end_of___flmul 0F43  
                         STR_97 12D1                           STR_89 1149                           STR_98 13B8  
                         STR_99 12D1                 __end_of___fltol 08C0                           _T2CON 001C  
                         _LATC2 0872                           _LATA6 0866                           _LATB5 086D  
                         _LATA7 0867                           _LATD2 087A                           _LATC5 0875  
                         _LATB7 086F                           _LATD4 087C                           _LATC6 0876  
                         _LATD5 087D                           _LATC7 0877                           _LATD6 087E  
                         _LATG1 1C69                           _LATF4 1C64           __end_of_debug_fast_tx 0AD4  
                         _T8CON 0597                           i1l280 0012                           i1l290 004D  
                         i1l282 001D                           i1l285 0033                           _PORTA 000C  
                         _PORTB 000D                           _PORTC 000E                           _PORTD 000F  
                         _PORTE 0010                           _PORTF 028C                           _PORTG 028D  
                  main@mem_size 0066                           _TRISA 008C                           _TRISB 008D  
                         _TRISC 008E                           _TRISD 008F                           _TRISE 0090  
                         _TRISF 030C                           _TRISG 030D                   __CFG_PWRTE$ON 0000  
                __CFG_FCMEN$OFF 0000              _current_sink_timer 00A8        __end_of_i2c_Write_string 0B9D  
                         main@i 006B                           main@j 0068                    main@response 006A  
                         ltemp0 007E                           ltemp1 0082                           ltemp2 0086  
                         ltemp3 0080                           ttemp0 007E                           ttemp1 0081  
                         ttemp2 0084                           ttemp3 0087                           ttemp4 007F  
                         status 0003                           wtemp0 007E                           wtemp1 0080  
                         wtemp2 0082                           wtemp3 0084                           wtemp4 0086  
                         wtemp5 0088                           wtemp6 007F                 __initialization 0051  
    lcd_set_cursor@LCD_position 0073                    __end_of_main 07FA          __end_of_i2c_first_line 0B55  
              __end_of_i2c_Stop 0BEB                  __CFG_LPBOR$OFF 0000                          ??_main 0061  
               ??_lcd_print_int 007E             lcd_print_int@number 005B                          _ADCON0 009D  
                        _ADCON1 009E                          STR_100 13BD                          STR_101 12D1  
                        STR_110 116F                          STR_102 13C2                          STR_111 138F  
                        STR_103 123A                          STR_112 10DA                          STR_104 11DB  
                        STR_120 1087                          STR_121 139F                          STR_105 123A  
                        STR_113 13AD                          STR_130 10D9                          STR_114 13A7  
                        STR_106 1288                          STR_122 1167                          _ADRESH 009C  
                        STR_115 139F                          STR_107 139F                          STR_131 12D1  
                        STR_123 12D1                          STR_132 13D3                          STR_124 13CB  
                        STR_108 1335                          STR_140 1300                          STR_116 1185  
                        STR_117 139F                          STR_109 139F                          STR_133 132B  
                        STR_141 12E9                          STR_125 1220                          STR_126 10D9  
                        STR_150 12BC                          STR_134 133F                          STR_142 11CD  
                        STR_118 10DB                          _ADRESL 009B                          STR_119 139F  
                        STR_135 12D1                          STR_127 12D1                          STR_151 13B3  
                        STR_143 1376                          STR_160 11BF                          STR_144 11CD  
                        STR_152 12BC                          STR_128 13D7                          STR_136 13CF  
                        STR_153 111B                          STR_161 12B9                          STR_129 11A3  
                        STR_145 111B                          STR_137 10CB                          STR_162 11BF  
                        STR_170 1254                          STR_146 11CD                          STR_154 12BC  
                        STR_138 127B                          STR_155 1364                          STR_171 111B  
                        STR_163 111B                          STR_139 1321                          STR_147 11E9  
                        STR_164 11BF                          STR_172 1254                          STR_148 11CD  
                        STR_156 12BD                          STR_173 1076                          STR_149 137F  
                        STR_157 1098                          STR_165 1076                          STR_166 11BF  
                        STR_174 1254                          STR_158 1387                          STR_175 1255  
                        STR_167 1176                          STR_159 1176                          STR_168 1254  
                        STR_176 10BA                          STR_169 12B9      __size_of_init_current_sink 0015  
                        _CCPR9L 061A                          _ANSELA 018C                          _ANSELB 018D  
                        _ANSELD 018F                          _ANSELE 0190                          _ANSELF 040C  
                        _ANSELG 040D              __size_of_i2c_Start 0005              __size_of_i2c_Write 000C  
                        i1l3932 0035                          i1l3924 0025                          i1l3942 004B  
                        i1l3918 0014                          i1l3926 0026                          i1l3936 003F  
                        i1l3938 0043                          _FVRCON 0117                __end_of_Vout_set 08DF  
                        _OSCCON 0099                          _TMR0IE 005D                          _TMR0IF 005A  
                        _TRISC3 0473                          _TRISC4 0474                          _TRISG1 1869  
              __end_of___xxtofl 1000               print_error@bottom 007A                          _RX_one 081C  
                        _TX_one 1579             _current_sink_stable 00A6                          ___bmul 165D  
               ?_i2c_first_line 0070                       ??___fladd 0041                          ___wmul 1680  
                __CFG_STVREN$ON 0000                       ??___flmul 0028                       ??___fltol 0051  
              __end_of_init_ADC 1564                ?_init_i2c_lcd_5v 0071                __end_of_init_i2c 081C  
              __end_of_buzz_one 0BF3                _ADC_cur_sink_val 00A0                   i2c_Write@data 0070  
            __size_of__Umul8_16 0049                  _i2c_write_char 0972               debug_fast_tx@data 0070  
      __end_of_power_supply_set 0C13                    ___xxtofl@arg 007A                    ___xxtofl@exp 0079  
                  ___xxtofl@val 0070                    ?_print_error 0078         __end_of__initialization 005E  
                    ___fltol@f1 004D             ___bmul@multiplicand 0070                 _i2c_second_line 0AE5  
                __pcstackCOMMON 0070                    __pidataBANK1 0000                  print_error@top 0078  
         __end_of_ten_thou_conv 165D               __end_of_i2c_Start 0BE6               __end_of_i2c_Write 0BE1  
            __size_of_clear_lcd 0015                ??_lcd_set_cursor 0072          __end_of_i2c_write_char 097F  
               _get_30v_current 0C13            i2c_Write_string@data 0071            lcd_print_int@decimal 005F  
              _one_second_timer 00B9                      __pbssBANK0 006F                      __pbssBANK1 00A0  
                     ?_i2c_Stop 0070     lcd_print_int@ten_thou_digit 0060                         ?_RX_one 0070  
            ADC_get_val@channel 0073                         ?_TX_one 0070               __end_of__Umul8_16 0F8C  
                    __pmaintext 1695                         ?___bmul 0070                         ?___wmul 0070  
                    __pintentry 0004                      _digitalpot 0B6A                         _CCP9CON 061C  
                     ?_Vout_set 0074                 ?_i2c_write_char 0070                       ?___xxtofl 0070  
                       _SSP1ADD 0212                         _SSP1BUF 0211               ?_i2c_Write_string 0071  
                       RX_one@i 0071                         TX_one@i 0072              ??_i2c_Write_string 0073  
                    ??_i2c_Stop 0070                       ?_init_ADC 0070         __end_of_i2c_second_line 0AF6  
                     ?_init_i2c 0070               __end_of_clear_lcd 0B6A                       ?_buzz_one 0070  
                 ??_ADC_get_val 0073                 __size_of_RX_one 0026                 __size_of_TX_one 0024  
               __size_of___bmul 0023                         ___fladd 0C70                         ___flmul 0DC1  
                       ___fltol 086D                 __size_of___wmul 0015         __end_of_get_30v_current 0C5E  
                       __ptext1 097F                         __ptext2 0AF6                         __ptext3 0AD4  
                       __ptext4 0AE5                         __ptext5 0B44                         __ptext6 0B82  
                       __ptext7 0B55                         __ptext8 0BF3                         __ptext9 0AA7  
                    ??_Vout_set 0076                    __size_of_isr 004B                      ??___xxtofl 0074  
                    _buzz_timer 00A2  init_i2c_lcd_5v@single1_double2 0071                         clrloop0 07FB  
          end_of_initialization 005E                      ??_init_ADC 0070                      ??_init_i2c 0070  
                    ??_buzz_one 0072                ??_i2c_first_line 0071            __size_of_print_error 004E  
        __size_of_debug_fast_tx 002D                         psplit$0 C0034                    __pstringtext 1000  
                   ?_digitalpot 0070             __end_of_ADC_get_val 0C70              RX_one_timeout@data 0072  
       __size_of_RX_one_timeout 002B                     ___fladd@grs 004C                __CFG_FOSC$INTOSC 0000  
         __end_of_lcd_print_int 0972                   ___xxtofl@sign 0078                   ?_print_screen 0074  
          pnum$maintext_split_1 0034                   ?_testjig_done 0078                     ___flmul@grs 002E  
             ?_power_supply_set 0070                ?_i2c_second_line 0070              ??_power_supply_set 0070  
                ten_thou_conv@n 0076                  __end_of_RX_one 0842                  __end_of_TX_one 159D  
                __end_of___bmul 1680                  __end_of___wmul 1695                    buzz_one@time 0070  
              ?_get_30v_current 0057                   _debug_fast_tx 0AA7                       _i2c_Start 0BE1  
                     _i2c_Write 0BD5             start_initialization 0051        __size_of_init_i2c_lcd_5v 0038  
                ??_print_screen 0078                     __end_of_isr 004F                  ??_testjig_done 0079  
           __size_of_digitalpot 0018               __size_of_i2c_Stop 0005                 print_screen@top 0074  
                      ??_RX_one 0070                        ??_TX_one 0070                     _ADC_get_val 0C5E  
       testjig_done@device_type 0078                        ??___bmul 0071                        ??___wmul 0074  
                     __Umul8_16 0F43                     __pdataBANK1 00B9                ??_i2c_write_char 0071  
                     ___fladd@a 003D                       ___fladd@b 0039                  ?_debug_fast_tx 0070  
                    ?_i2c_Start 0070                      ?_i2c_Write 0070                       ___flmul@a 0024  
                     ___flmul@b 0020               __size_of_Vout_set 001F                       ___latbits 0003  
               main@device_type 006E                   __pcstackBANK0 0020              _pickit_red_counter 00B5  
             __size_of___xxtofl 0074                lcd_print_int@pos 005D          __size_of_ten_thou_conv 00C0  
                     __pnvBANK1 00BB               __size_of_init_ADC 0007               __size_of_init_i2c 0017  
                     _clear_lcd 0B55               __size_of_buzz_one 0008       __size_of_i2c_Write_string 001B  
                      ?___fladd 0039                        ?___flmul 0020                        ?___fltol 004D  
                    ?__Umul8_16 0070                  _RX_one_timeout 0842                       __pswtext1 13DE  
                     __pswtext2 13EA                        _CCPTMRS2 029F                __CFG_WDTE$SWDTEN 0000  
             ??_init_i2c_lcd_5v 0072         __size_of_lcd_set_cursor 0018                  ___wmul@product 0074  
                     clear_ram0 07FA                        _PIE1bits 0091                        _PCONbits 0096  
                      _PIR1bits 0011                      ?_clear_lcd 0070            __end_of_print_screen 0AE5  
            print_screen@bottom 0076                        _SSP1CON1 0215                        _SSP1CON2 0216  
          __end_of_testjig_done 0AA7          __end_of_RX_one_timeout 086D                    ??_digitalpot 0071  
                      _SSP1STAT 0214                    _pickit_timer 00AC                    _pickit_state 00BB  
                 _ten_thou_conv 159D                 ??_debug_fast_tx 0072                      _ADCON0bits 009D  
             ___wmul@multiplier 0070                     ??_i2c_Start 0070                     ??_i2c_Write 0070  
                debug_fast_tx@i 0072               testjig_done@state 007C                        _i2c_Stop 0BE6  
                 ??_print_error 0020              __end_of_digitalpot 0B82           ADC_get_val@return_val 0074  
                 Vout_set@Volts 0074                 ?_RX_one_timeout 0070                     ??__Umul8_16 0073  
               RX_one_timeout@i 0071                    pnum$maintext 000C                __size_of___fladd 0151  
                ?_ten_thou_conv 0076                __size_of___flmul 0182                __size_of___fltol 0053  
     __size_of_power_supply_set 0020                        _Vout_set 08C0         init_i2c_lcd_5v@contrast 0074  
             Vout_set@digi_step 0076                        ___xxtofl 0F8C                        __ptext10 0BEB  
                      __ptext11 08F7                        __ptext20 155D                        __ptext12 159D  
                      __ptext21 0C13                        __ptext13 1680                        __ptext30 0BD5  
                      __ptext22 0F8C                        __ptext14 165D                        __ptext31 0BE6  
                      __ptext23 086D                        __ptext15 08DF                        __ptext32 0BE1  
                      __ptext24 0DC1                        __ptext16 0972                        __ptext33 1579  
                      __ptext25 0F43                        __ptext17 0B9D                        __ptext34 0842  
                      __ptext26 0C70                        __ptext18 0805                        __ptext35 081C  
                      __ptext27 0C5E                        __ptext19 1564                        __ptext28 08C0  
                      __ptext29 0B6A                    _SSP1CON2bits 0216                        _init_ADC 155D  
                      _init_i2c 0805                   __size_of_main F165                        _buzz_one 0BEB  
                  ?_ADC_get_val 0070                     ??_clear_lcd 0071             __end_of_print_error 0B44  
              _i2c_Write_string 0B82                        _ten_thou 006F                        _tj_timer 00B0  
        __size_of_lcd_print_int 007B        __size_of_i2c_second_line 0011                        int$flags 007E  
                  _SSP1STATbits 0214                        main@temp 0064         __size_of_i2c_first_line 0011  
            _uart_receive_timer 00B2             get_30v_current@temp 0059                      _INTCONbits 000B  
      __size_of_get_30v_current 004B                        intlevel1 0000                  _lcd_set_cursor 08DF  
             lcd_set_cursor@col 0071               lcd_set_cursor@row 0072           __size_of_print_screen 0011  
             __CFG_CLKOUTEN$OFF 0000           __size_of_testjig_done 0128          power_supply_set@supply 0070  
               ??_ten_thou_conv 0078          __Umul8_16@multiplicand 0070                      _OPTION_REG 0095  
                 _testjig_timer 00AE                 _init_i2c_lcd_5v 0B9D                   _lcd_print_int 08F7  
               _curent_sink_val 00A4                    _print_screen 0AD4          __end_of_lcd_set_cursor 08F7  
                 ___fladd@signs 0049                    _testjig_done 097F               _init_current_sink 1564  
                    RX_one@data 0072                     _print_error 0AF6                    ___fladd@aexp 004A  
                  ___fladd@bexp 004B            __Umul8_16@multiplier 0075              ?_init_current_sink 0070  
             __Umul8_16@product 0073  
