

Microchip Technology PIC PRO Macro Assembler V1.35 build -356382666 
                                                                                               Wed Feb 27 14:38:59 2019

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	text12,local,class=CODE,merge=1,delta=2
    17                           	psect	text18,local,class=CODE,merge=1,delta=2
    18                           	psect	text19,local,class=CODE,merge=1,delta=2
    19                           	psect	text20,local,class=CODE,merge=1,delta=2
    20                           	psect	text21,local,class=CODE,merge=1,delta=2
    21                           	psect	text23,local,class=CODE,merge=1,delta=2
    22                           	psect	text28,local,class=CODE,merge=1,delta=2
    23                           	psect	text33,local,class=CODE,merge=1,delta=2
    24                           	psect	text34,local,class=CODE,merge=1,delta=2
    25                           	psect	text35,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	swtext2,local,class=CONST,delta=2
    28                           	psect	pa_nodes,global,class=CODE,delta=2
    29                           	psect	maintext_split_1,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	maintext_split_2,global,class=CODE,merge=1,split=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  0007                     	;# 
    40  0008                     	;# 
    41  0009                     	;# 
    42  000A                     	;# 
    43  000B                     	;# 
    44  000C                     	;# 
    45  000D                     	;# 
    46  000E                     	;# 
    47  000F                     	;# 
    48  0010                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0013                     	;# 
    52  0014                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  008C                     	;# 
    63  008D                     	;# 
    64  008E                     	;# 
    65  008F                     	;# 
    66  0090                     	;# 
    67  0091                     	;# 
    68  0092                     	;# 
    69  0093                     	;# 
    70  0094                     	;# 
    71  0095                     	;# 
    72  0096                     	;# 
    73  0097                     	;# 
    74  0099                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009B                     	;# 
    78  009C                     	;# 
    79  009D                     	;# 
    80  009E                     	;# 
    81  010C                     	;# 
    82  010D                     	;# 
    83  010E                     	;# 
    84  010F                     	;# 
    85  0110                     	;# 
    86  0116                     	;# 
    87  0117                     	;# 
    88  011D                     	;# 
    89  018C                     	;# 
    90  018D                     	;# 
    91  018F                     	;# 
    92  0190                     	;# 
    93  0191                     	;# 
    94  0191                     	;# 
    95  0192                     	;# 
    96  0193                     	;# 
    97  0193                     	;# 
    98  0194                     	;# 
    99  0195                     	;# 
   100  0196                     	;# 
   101  0197                     	;# 
   102  0199                     	;# 
   103  0199                     	;# 
   104  0199                     	;# 
   105  019A                     	;# 
   106  019A                     	;# 
   107  019A                     	;# 
   108  019B                     	;# 
   109  019B                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019C                     	;# 
   114  019C                     	;# 
   115  019C                     	;# 
   116  019D                     	;# 
   117  019D                     	;# 
   118  019D                     	;# 
   119  019E                     	;# 
   120  019E                     	;# 
   121  019E                     	;# 
   122  019F                     	;# 
   123  019F                     	;# 
   124  019F                     	;# 
   125  020D                     	;# 
   126  020F                     	;# 
   127  0210                     	;# 
   128  0211                     	;# 
   129  0211                     	;# 
   130  0212                     	;# 
   131  0212                     	;# 
   132  0213                     	;# 
   133  0213                     	;# 
   134  0214                     	;# 
   135  0214                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0216                     	;# 
   140  0216                     	;# 
   141  0217                     	;# 
   142  0217                     	;# 
   143  0219                     	;# 
   144  021A                     	;# 
   145  021B                     	;# 
   146  021C                     	;# 
   147  021D                     	;# 
   148  021E                     	;# 
   149  021F                     	;# 
   150  028C                     	;# 
   151  028D                     	;# 
   152  0291                     	;# 
   153  0291                     	;# 
   154  0292                     	;# 
   155  0293                     	;# 
   156  0298                     	;# 
   157  0298                     	;# 
   158  0299                     	;# 
   159  029A                     	;# 
   160  029D                     	;# 
   161  029E                     	;# 
   162  029F                     	;# 
   163  030C                     	;# 
   164  030D                     	;# 
   165  0311                     	;# 
   166  0311                     	;# 
   167  0312                     	;# 
   168  0313                     	;# 
   169  0318                     	;# 
   170  0318                     	;# 
   171  0319                     	;# 
   172  031A                     	;# 
   173  031C                     	;# 
   174  031C                     	;# 
   175  031D                     	;# 
   176  031E                     	;# 
   177  038C                     	;# 
   178  038D                     	;# 
   179  0394                     	;# 
   180  0395                     	;# 
   181  0396                     	;# 
   182  040C                     	;# 
   183  040D                     	;# 
   184  0411                     	;# 
   185  0411                     	;# 
   186  0412                     	;# 
   187  0413                     	;# 
   188  0414                     	;# 
   189  0415                     	;# 
   190  0416                     	;# 
   191  0417                     	;# 
   192  0418                     	;# 
   193  0418                     	;# 
   194  0419                     	;# 
   195  041A                     	;# 
   196  041B                     	;# 
   197  041C                     	;# 
   198  041D                     	;# 
   199  041E                     	;# 
   200  048D                     	;# 
   201  0491                     	;# 
   202  0491                     	;# 
   203  0492                     	;# 
   204  0492                     	;# 
   205  0493                     	;# 
   206  0493                     	;# 
   207  0493                     	;# 
   208  0494                     	;# 
   209  0494                     	;# 
   210  0495                     	;# 
   211  0495                     	;# 
   212  0496                     	;# 
   213  0496                     	;# 
   214  0497                     	;# 
   215  0497                     	;# 
   216  0595                     	;# 
   217  0596                     	;# 
   218  0597                     	;# 
   219  059C                     	;# 
   220  059D                     	;# 
   221  059E                     	;# 
   222  0611                     	;# 
   223  0611                     	;# 
   224  0612                     	;# 
   225  0613                     	;# 
   226  0614                     	;# 
   227  0614                     	;# 
   228  0615                     	;# 
   229  0616                     	;# 
   230  0617                     	;# 
   231  0617                     	;# 
   232  0618                     	;# 
   233  0619                     	;# 
   234  061A                     	;# 
   235  061A                     	;# 
   236  061B                     	;# 
   237  061C                     	;# 
   238  061D                     	;# 
   239  061D                     	;# 
   240  061E                     	;# 
   241  061F                     	;# 
   242  0FE4                     	;# 
   243  0FE5                     	;# 
   244  0FE6                     	;# 
   245  0FE7                     	;# 
   246  0FE8                     	;# 
   247  0FE9                     	;# 
   248  0FEA                     	;# 
   249  0FEB                     	;# 
   250  0FED                     	;# 
   251  0FEE                     	;# 
   252  0FEF                     	;# 
   253                           
   254                           	psect	idataBANK1
   255  0000                     __pidataBANK1:	
   256                           
   257                           	psect	nvBANK1
   258  00BB                     __pnvBANK1:	
   259  00BB                     _pickit_state:	
   260  00BB                     	ds	1
   261  000B                     _INTCONbits	set	11
   262  0011                     _PIR1bits	set	17
   263  000C                     _PORTA	set	12
   264  000D                     _PORTB	set	13
   265  000E                     _PORTC	set	14
   266  000F                     _PORTD	set	15
   267  0010                     _PORTE	set	16
   268  001B                     _PR2	set	27
   269  001C                     _T2CON	set	28
   270  0015                     _TMR0	set	21
   271  005F                     _GIE	set	95
   272  0062                     _RA2	set	98
   273  0064                     _RA4	set	100
   274  0065                     _RA5	set	101
   275  0080                     _RE0	set	128
   276  0084                     _RE4	set	132
   277  0085                     _RE5	set	133
   278  0086                     _RE6	set	134
   279  005D                     _TMR0IE	set	93
   280  005A                     _TMR0IF	set	90
   281  009D                     _ADCON0	set	157
   282  009D                     _ADCON0bits	set	157
   283  009E                     _ADCON1	set	158
   284  009C                     _ADRESH	set	156
   285  009B                     _ADRESL	set	155
   286  0095                     _OPTION_REG	set	149
   287  0099                     _OSCCON	set	153
   288  0096                     _PCONbits	set	150
   289  0091                     _PIE1bits	set	145
   290  008C                     _TRISA	set	140
   291  008D                     _TRISB	set	141
   292  008E                     _TRISC	set	142
   293  008F                     _TRISD	set	143
   294  0090                     _TRISE	set	144
   295  0473                     _TRISC3	set	1139
   296  0474                     _TRISC4	set	1140
   297  0117                     _FVRCON	set	279
   298  0866                     _LATA6	set	2150
   299  0867                     _LATA7	set	2151
   300  086D                     _LATB5	set	2157
   301  0872                     _LATC2	set	2162
   302  0875                     _LATC5	set	2165
   303  0876                     _LATC6	set	2166
   304  0877                     _LATC7	set	2167
   305  087A                     _LATD2	set	2170
   306  087C                     _LATD4	set	2172
   307  087D                     _LATD5	set	2173
   308  087E                     _LATD6	set	2174
   309  018C                     _ANSELA	set	396
   310  018D                     _ANSELB	set	397
   311  018F                     _ANSELD	set	399
   312  0190                     _ANSELE	set	400
   313  0212                     _SSP1ADD	set	530
   314  0211                     _SSP1BUF	set	529
   315  0215                     _SSP1CON1	set	533
   316  0216                     _SSP1CON2	set	534
   317  0216                     _SSP1CON2bits	set	534
   318  0214                     _SSP1STAT	set	532
   319  0214                     _SSP1STATbits	set	532
   320  020D                     _WPUB	set	525
   321  020F                     _WPUD	set	527
   322  0210                     _WPUE	set	528
   323  029F                     _CCPTMRS2	set	671
   324  028C                     _PORTF	set	652
   325  028D                     _PORTG	set	653
   326  1460                     _RF0	set	5216
   327  1461                     _RF1	set	5217
   328  1462                     _RF2	set	5218
   329  1463                     _RF3	set	5219
   330  1465                     _RF5	set	5221
   331  1469                     _RG1	set	5225
   332  146B                     _RG3	set	5227
   333  030C                     _TRISF	set	780
   334  030D                     _TRISG	set	781
   335  1868                     _TRISG0	set	6248
   336  1C64                     _LATF4	set	7268
   337  1C68                     _LATG0	set	7272
   338  040C                     _ANSELF	set	1036
   339  040D                     _ANSELG	set	1037
   340  0596                     _PR8	set	1430
   341  0597                     _T8CON	set	1431
   342  061C                     _CCP9CON	set	1564
   343  061A                     _CCPR9L	set	1562
   344                           
   345                           	psect	stringtext
   346  1000                     __pstringtext:	
   347  1000                     STR_53:	
   348  1000  3452               	retlw	82	;'R'
   349  1001  3465               	retlw	101	;'e'
   350  1002  346C               	retlw	108	;'l'
   351  1003  3461               	retlw	97	;'a'
   352  1004  3479               	retlw	121	;'y'
   353  1005  3420               	retlw	32	;' '
   354  1006  3464               	retlw	100	;'d'
   355  1007  3465               	retlw	101	;'e'
   356  1008  342D               	retlw	45	;'-'
   357  1009  3465               	retlw	101	;'e'
   358  100A  346E               	retlw	110	;'n'
   359  100B  3465               	retlw	101	;'e'
   360  100C  3472               	retlw	114	;'r'
   361  100D  3467               	retlw	103	;'g'
   362  100E  3469               	retlw	105	;'i'
   363  100F  347A               	retlw	122	;'z'
   364  1010  3465               	retlw	101	;'e'
   365  1011  3464               	retlw	100	;'d'
   366  1012  3400               	retlw	0
   367  1013                     STR_27:	
   368  1013  3450               	retlw	80	;'P'
   369  1014  3469               	retlw	105	;'i'
   370  1015  3463               	retlw	99	;'c'
   371  1016  346B               	retlw	107	;'k'
   372  1017  3469               	retlw	105	;'i'
   373  1018  3474               	retlw	116	;'t'
   374  1019  3420               	retlw	32	;' '
   375  101A  3450               	retlw	80	;'P'
   376  101B  3472               	retlw	114	;'r'
   377  101C  346F               	retlw	111	;'o'
   378  101D  3467               	retlw	103	;'g'
   379  101E  3472               	retlw	114	;'r'
   380  101F  3461               	retlw	97	;'a'
   381  1020  346D               	retlw	109	;'m'
   382  1021  346D               	retlw	109	;'m'
   383  1022  3469               	retlw	105	;'i'
   384  1023  346E               	retlw	110	;'n'
   385  1024  3467               	retlw	103	;'g'
   386  1025  3400               	retlw	0
   387  1026                     STR_38:	
   388  1026  3445               	retlw	69	;'E'
   389  1027  3445               	retlw	69	;'E'
   390  1028  3450               	retlw	80	;'P'
   391  1029  3452               	retlw	82	;'R'
   392  102A  344F               	retlw	79	;'O'
   393  102B  344D               	retlw	77	;'M'
   394  102C  3420               	retlw	32	;' '
   395  102D  3472               	retlw	114	;'r'
   396  102E  3465               	retlw	101	;'e'
   397  102F  3461               	retlw	97	;'a'
   398  1030  3464               	retlw	100	;'d'
   399  1031  342F               	retlw	47	;'/'
   400  1032  3477               	retlw	119	;'w'
   401  1033  3472               	retlw	114	;'r'
   402  1034  3469               	retlw	105	;'i'
   403  1035  3474               	retlw	116	;'t'
   404  1036  3465               	retlw	101	;'e'
   405  1037  3400               	retlw	0
   406  1038                     STR_48:	
   407  1038  3420               	retlw	32	;' '
   408  1039  3445               	retlw	69	;'E'
   409  103A  3472               	retlw	114	;'r'
   410  103B  3472               	retlw	114	;'r'
   411  103C  346F               	retlw	111	;'o'
   412  103D  3472               	retlw	114	;'r'
   413  103E  3420               	retlw	32	;' '
   414  103F  344D               	retlw	77	;'M'
   415  1040  3465               	retlw	101	;'e'
   416  1041  346D               	retlw	109	;'m'
   417  1042  345F               	retlw	95	;'_'
   418  1043  3463               	retlw	99	;'c'
   419  1044  346F               	retlw	111	;'o'
   420  1045  3470               	retlw	112	;'p'
   421  1046  3469               	retlw	105	;'i'
   422  1047  3465               	retlw	101	;'e'
   423  1048  3472               	retlw	114	;'r'
   424  1049  3400               	retlw	0
   425  104A                     STR_193:	
   426  104A  344D               	retlw	77	;'M'
   427  104B  3475               	retlw	117	;'u'
   428  104C  346C               	retlw	108	;'l'
   429  104D  3474               	retlw	116	;'t'
   430  104E  3469               	retlw	105	;'i'
   431  104F  345F               	retlw	95	;'_'
   432  1050  3452               	retlw	82	;'R'
   433  1051  3458               	retlw	88	;'X'
   434  1052  3420               	retlw	32	;' '
   435  1053  3454               	retlw	84	;'T'
   436  1054  3465               	retlw	101	;'e'
   437  1055  3473               	retlw	115	;'s'
   438  1056  3474               	retlw	116	;'t'
   439  1057  346A               	retlw	106	;'j'
   440  1058  3469               	retlw	105	;'i'
   441  1059  3467               	retlw	103	;'g'
   442  105A  3400               	retlw	0
   443  105B                     STR_148:	
   444  105B  3444               	retlw	68	;'D'
   445  105C  3465               	retlw	101	;'e'
   446  105D  3463               	retlw	99	;'c'
   447  105E  346F               	retlw	111	;'o'
   448  105F  3464               	retlw	100	;'d'
   449  1060  3465               	retlw	101	;'e'
   450  1061  3420               	retlw	32	;' '
   451  1062  344F               	retlw	79	;'O'
   452  1063  346C               	retlw	108	;'l'
   453  1064  3464               	retlw	100	;'d'
   454  1065  3420               	retlw	32	;' '
   455  1066  342D               	retlw	45	;'-'
   456  1067  3446               	retlw	70	;'F'
   457  1068  3461               	retlw	97	;'a'
   458  1069  3469               	retlw	105	;'i'
   459  106A  346C               	retlw	108	;'l'
   460  106B  3400               	retlw	0
   461  106C                     STR_185:	
   462  106C  3454               	retlw	84	;'T'
   463  106D  3465               	retlw	101	;'e'
   464  106E  3473               	retlw	115	;'s'
   465  106F  3474               	retlw	116	;'t'
   466  1070  346A               	retlw	106	;'j'
   467  1071  3469               	retlw	105	;'i'
   468  1072  3467               	retlw	103	;'g'
   469  1073  3420               	retlw	32	;' '
   470  1074  3450               	retlw	80	;'P'
   471  1075  346F               	retlw	111	;'o'
   472  1076  3477               	retlw	119	;'w'
   473  1077  3465               	retlw	101	;'e'
   474  1078  3472               	retlw	114	;'r'
   475  1079  342D               	retlw	45	;'-'
   476  107A  3475               	retlw	117	;'u'
   477  107B  3470               	retlw	112	;'p'
   478  107C  3400               	retlw	0
   479  107D                     STR_2:	
   480  107D  3454               	retlw	84	;'T'
   481  107E  3465               	retlw	101	;'e'
   482  107F  3473               	retlw	115	;'s'
   483  1080  3474               	retlw	116	;'t'
   484  1081  342D               	retlw	45	;'-'
   485  1082  344A               	retlw	74	;'J'
   486  1083  3469               	retlw	105	;'i'
   487  1084  3467               	retlw	103	;'g'
   488  1085  347C               	retlw	124	;'|'
   489  1086  3453               	retlw	83	;'S'
   490  1087  3474               	retlw	116	;'t'
   491  1088  3461               	retlw	97	;'a'
   492  1089  3472               	retlw	114	;'r'
   493  108A  3474               	retlw	116	;'t'
   494  108B  3475               	retlw	117	;'u'
   495  108C  3470               	retlw	112	;'p'
   496  108D  3400               	retlw	0
   497  108E                     STR_204:	
   498  108E  3420               	retlw	32	;' '
   499  108F  3474               	retlw	116	;'t'
   500  1090  346F               	retlw	111	;'o'
   501  1091  3420               	retlw	32	;' '
   502  1092  3472               	retlw	114	;'r'
   503  1093  3465               	retlw	101	;'e'
   504  1094  3473               	retlw	115	;'s'
   505  1095  3474               	retlw	116	;'t'
   506  1096  3461               	retlw	97	;'a'
   507  1097  3472               	retlw	114	;'r'
   508  1098  3474               	retlw	116	;'t'
   509  1099  3420               	retlw	32	;' '
   510  109A  3474               	retlw	116	;'t'
   511  109B  3465               	retlw	101	;'e'
   512  109C  3473               	retlw	115	;'s'
   513  109D  3474               	retlw	116	;'t'
   514  109E  3400               	retlw	0
   515  109F                     STR_165:	
   516  109F  3437               	retlw	55	;'7'
   517  10A0  3473               	retlw	115	;'s'
   518  10A1  3465               	retlw	101	;'e'
   519  10A2  3467               	retlw	103	;'g'
   520  10A3  342C               	retlw	44	;','
   521  10A4  3420               	retlw	32	;' '
   522  10A5  3462               	retlw	98	;'b'
   523  10A6  3475               	retlw	117	;'u'
   524  10A7  347A               	retlw	122	;'z'
   525  10A8  347A               	retlw	122	;'z'
   526  10A9  3465               	retlw	101	;'e'
   527  10AA  3472               	retlw	114	;'r'
   528  10AB  342C               	retlw	44	;','
   529  10AC  3420               	retlw	32	;' '
   530  10AD  3420               	retlw	32	;' '
   531  10AE  3400               	retlw	0
   532  10AF                     STR_146:	
   533  10AF  3444               	retlw	68	;'D'
   534  10B0  3465               	retlw	101	;'e'
   535  10B1  3463               	retlw	99	;'c'
   536  10B2  346F               	retlw	111	;'o'
   537  10B3  3464               	retlw	100	;'d'
   538  10B4  3465               	retlw	101	;'e'
   539  10B5  3420               	retlw	32	;' '
   540  10B6  344E               	retlw	78	;'N'
   541  10B7  3465               	retlw	101	;'e'
   542  10B8  3477               	retlw	119	;'w'
   543  10B9  3420               	retlw	32	;' '
   544  10BA  342D               	retlw	45	;'-'
   545  10BB  3420               	retlw	32	;' '
   546  10BC  344F               	retlw	79	;'O'
   547  10BD  344B               	retlw	75	;'K'
   548  10BE  3400               	retlw	0
   549  10BF                     STR_57:	
   550  10BF  3452               	retlw	82	;'R'
   551  10C0  3465               	retlw	101	;'e'
   552  10C1  346C               	retlw	108	;'l'
   553  10C2  3461               	retlw	97	;'a'
   554  10C3  3479               	retlw	121	;'y'
   555  10C4  3420               	retlw	32	;' '
   556  10C5  3465               	retlw	101	;'e'
   557  10C6  346E               	retlw	110	;'n'
   558  10C7  3465               	retlw	101	;'e'
   559  10C8  3472               	retlw	114	;'r'
   560  10C9  3467               	retlw	103	;'g'
   561  10CA  3469               	retlw	105	;'i'
   562  10CB  347A               	retlw	122	;'z'
   563  10CC  3465               	retlw	101	;'e'
   564  10CD  3464               	retlw	100	;'d'
   565  10CE  3400               	retlw	0
   566  10CF                     STR_120:	
   567  10CF  3420               	retlw	32	;' '
   568  10D0  3445               	retlw	69	;'E'
   569  10D1  3472               	retlw	114	;'r'
   570  10D2  3472               	retlw	114	;'r'
   571  10D3  346F               	retlw	111	;'o'
   572  10D4  3472               	retlw	114	;'r'
   573  10D5  3420               	retlw	32	;' '
   574  10D6  342D               	retlw	45	;'-'
   575  10D7  3420               	retlw	32	;' '
   576  10D8  344D               	retlw	77	;'M'
   577  10D9  3469               	retlw	105	;'i'
   578  10DA  3463               	retlw	99	;'c'
   579  10DB  3472               	retlw	114	;'r'
   580  10DC  3465               	retlw	101	;'e'
   581  10DD  346C               	retlw	108	;'l'
   582  10DE  3400               	retlw	0
   583  10DF                     STR_173:	
   584  10DF  344D               	retlw	77	;'M'
   585  10E0  3465               	retlw	101	;'e'
   586  10E1  346D               	retlw	109	;'m'
   587  10E2  345F               	retlw	95	;'_'
   588  10E3  3443               	retlw	67	;'C'
   589  10E4  346F               	retlw	111	;'o'
   590  10E5  3470               	retlw	112	;'p'
   591  10E6  3469               	retlw	105	;'i'
   592  10E7  3465               	retlw	101	;'e'
   593  10E8  3472               	retlw	114	;'r'
   594  10E9  3420               	retlw	32	;' '
   595  10EA  3450               	retlw	80	;'P'
   596  10EB  3461               	retlw	97	;'a'
   597  10EC  3473               	retlw	115	;'s'
   598  10ED  3473               	retlw	115	;'s'
   599  10EE  3400               	retlw	0
   600  10EF                     STR_72:	
   601  10EF  3450               	retlw	80	;'P'
   602  10F0  3454               	retlw	84	;'T'
   603  10F1  3443               	retlw	67	;'C'
   604  10F2  3420               	retlw	32	;' '
   605  10F3  3445               	retlw	69	;'E'
   606  10F4  3472               	retlw	114	;'r'
   607  10F5  3472               	retlw	114	;'r'
   608  10F6  346F               	retlw	111	;'o'
   609  10F7  3472               	retlw	114	;'r'
   610  10F8  3420               	retlw	32	;' '
   611  10F9  3472               	retlw	114	;'r'
   612  10FA  3465               	retlw	101	;'e'
   613  10FB  3473               	retlw	115	;'s'
   614  10FC  3465               	retlw	101	;'e'
   615  10FD  3474               	retlw	116	;'t'
   616  10FE  3400               	retlw	0
   617  10FF                     STR_5:	
   618  10FF  3450               	retlw	80	;'P'
   619  1100  346F               	retlw	111	;'o'
   620  1101  3477               	retlw	119	;'w'
   621  1102  3465               	retlw	101	;'e'
   622  1103  3472               	retlw	114	;'r'
   623  1104  3469               	retlw	105	;'i'
   624  1105  346E               	retlw	110	;'n'
   625  1106  3467               	retlw	103	;'g'
   626  1107  3420               	retlw	32	;' '
   627  1108  3462               	retlw	98	;'b'
   628  1109  346F               	retlw	111	;'o'
   629  110A  3461               	retlw	97	;'a'
   630  110B  3472               	retlw	114	;'r'
   631  110C  3464               	retlw	100	;'d'
   632  110D  3400               	retlw	0
   633  110E                     STR_150:	
   634  110E  3445               	retlw	69	;'E'
   635  110F  3472               	retlw	114	;'r'
   636  1110  3472               	retlw	114	;'r'
   637  1111  346F               	retlw	111	;'o'
   638  1112  3472               	retlw	114	;'r'
   639  1113  3420               	retlw	32	;' '
   640  1114  342D               	retlw	45	;'-'
   641  1115  3420               	retlw	32	;' '
   642  1116  3444               	retlw	68	;'D'
   643  1117  3465               	retlw	101	;'e'
   644  1118  3463               	retlw	99	;'c'
   645  1119  346F               	retlw	111	;'o'
   646  111A  3464               	retlw	100	;'d'
   647  111B  3465               	retlw	101	;'e'
   648  111C  3400               	retlw	0
   649  111D                     STR_187:	
   650  111D  3443               	retlw	67	;'C'
   651  111E  346F               	retlw	111	;'o'
   652  111F  346E               	retlw	110	;'n'
   653  1120  3464               	retlw	100	;'d'
   654  1121  346F               	retlw	111	;'o'
   655  1122  3433               	retlw	51	;'3'
   656  1123  3420               	retlw	32	;' '
   657  1124  3454               	retlw	84	;'T'
   658  1125  3465               	retlw	101	;'e'
   659  1126  3473               	retlw	115	;'s'
   660  1127  3474               	retlw	116	;'t'
   661  1128  346A               	retlw	106	;'j'
   662  1129  3469               	retlw	105	;'i'
   663  112A  3467               	retlw	103	;'g'
   664  112B  3400               	retlw	0
   665  112C                     STR_74:	
   666  112C  3450               	retlw	80	;'P'
   667  112D  3454               	retlw	84	;'T'
   668  112E  3443               	retlw	67	;'C'
   669  112F  3420               	retlw	32	;' '
   670  1130  3445               	retlw	69	;'E'
   671  1131  3472               	retlw	114	;'r'
   672  1132  3472               	retlw	114	;'r'
   673  1133  346F               	retlw	111	;'o'
   674  1134  3472               	retlw	114	;'r'
   675  1135  3420               	retlw	32	;' '
   676  1136  3474               	retlw	116	;'t'
   677  1137  3472               	retlw	114	;'r'
   678  1138  3469               	retlw	105	;'i'
   679  1139  3470               	retlw	112	;'p'
   680  113A  3400               	retlw	0
   681  113B                     STR_144:	
   682  113B  3420               	retlw	32	;' '
   683  113C  3463               	retlw	99	;'c'
   684  113D  3479               	retlw	121	;'y'
   685  113E  3463               	retlw	99	;'c'
   686  113F  346C               	retlw	108	;'l'
   687  1140  3469               	retlw	105	;'i'
   688  1141  346E               	retlw	110	;'n'
   689  1142  3467               	retlw	103	;'g'
   690  1143  3420               	retlw	32	;' '
   691  1144  3470               	retlw	112	;'p'
   692  1145  346F               	retlw	111	;'o'
   693  1146  3477               	retlw	119	;'w'
   694  1147  3465               	retlw	101	;'e'
   695  1148  3472               	retlw	114	;'r'
   696  1149  3400               	retlw	0
   697  114A                     STR_19:	
   698  114A  3431               	retlw	49	;'1'
   699  114B  3436               	retlw	54	;'6'
   700  114C  3476               	retlw	118	;'v'
   701  114D  342D               	retlw	45	;'-'
   702  114E  3431               	retlw	49	;'1'
   703  114F  3432               	retlw	50	;'2'
   704  1150  3476               	retlw	118	;'v'
   705  1151  3420               	retlw	32	;' '
   706  1152  3473               	retlw	115	;'s'
   707  1153  3475               	retlw	117	;'u'
   708  1154  3470               	retlw	112	;'p'
   709  1155  3470               	retlw	112	;'p'
   710  1156  346C               	retlw	108	;'l'
   711  1157  3479               	retlw	121	;'y'
   712  1158  3400               	retlw	0
   713  1159                     STR_157:	
   714  1159  344D               	retlw	77	;'M'
   715  115A  3461               	retlw	97	;'a'
   716  115B  3473               	retlw	115	;'s'
   717  115C  3474               	retlw	116	;'t'
   718  115D  3465               	retlw	101	;'e'
   719  115E  3472               	retlw	114	;'r'
   720  115F  3420               	retlw	32	;' '
   721  1160  3445               	retlw	69	;'E'
   722  1161  3472               	retlw	114	;'r'
   723  1162  3461               	retlw	97	;'a'
   724  1163  3473               	retlw	115	;'s'
   725  1164  3465               	retlw	101	;'e'
   726  1165  3420               	retlw	32	;' '
   727  1166  3400               	retlw	0
   728  1167                     STR_46:	
   729  1167  3420               	retlw	32	;' '
   730  1168  3445               	retlw	69	;'E'
   731  1169  3472               	retlw	114	;'r'
   732  116A  3472               	retlw	114	;'r'
   733  116B  346F               	retlw	111	;'o'
   734  116C  3472               	retlw	114	;'r'
   735  116D  3420               	retlw	32	;' '
   736  116E  3443               	retlw	67	;'C'
   737  116F  346F               	retlw	111	;'o'
   738  1170  346E               	retlw	110	;'n'
   739  1171  3464               	retlw	100	;'d'
   740  1172  346F               	retlw	111	;'o'
   741  1173  3433               	retlw	51	;'3'
   742  1174  3400               	retlw	0
   743  1175                     STR_4:	
   744  1175  342D               	retlw	45	;'-'
   745  1176  343E               	retlw	62	;'>'
   746  1177  3420               	retlw	32	;' '
   747  1178  3449               	retlw	73	;'I'
   748  1179  346E               	retlw	110	;'n'
   749  117A  3473               	retlw	115	;'s'
   750  117B  3465               	retlw	101	;'e'
   751  117C  3472               	retlw	114	;'r'
   752  117D  3474               	retlw	116	;'t'
   753  117E  3420               	retlw	32	;' '
   754  117F  3450               	retlw	80	;'P'
   755  1180  3443               	retlw	67	;'C'
   756  1181  3442               	retlw	66	;'B'
   757  1182  3400               	retlw	0
   758  1183                     STR_170:	
   759  1183  3420               	retlw	32	;' '
   760  1184  3452               	retlw	82	;'R'
   761  1185  3465               	retlw	101	;'e'
   762  1186  346D               	retlw	109	;'m'
   763  1187  346F               	retlw	111	;'o'
   764  1188  3476               	retlw	118	;'v'
   765  1189  3465               	retlw	101	;'e'
   766  118A  3420               	retlw	32	;' '
   767  118B  3462               	retlw	98	;'b'
   768  118C  346F               	retlw	111	;'o'
   769  118D  3461               	retlw	97	;'a'
   770  118E  3472               	retlw	114	;'r'
   771  118F  3464               	retlw	100	;'d'
   772  1190  3400               	retlw	0
   773  1191                     STR_118:	
   774  1191  3420               	retlw	32	;' '
   775  1192  3445               	retlw	69	;'E'
   776  1193  3472               	retlw	114	;'r'
   777  1194  3472               	retlw	114	;'r'
   778  1195  346F               	retlw	111	;'o'
   779  1196  3472               	retlw	114	;'r'
   780  1197  3420               	retlw	32	;' '
   781  1198  342D               	retlw	45	;'-'
   782  1199  3420               	retlw	32	;' '
   783  119A  3448               	retlw	72	;'H'
   784  119B  3469               	retlw	105	;'i'
   785  119C  3467               	retlw	103	;'g'
   786  119D  3468               	retlw	104	;'h'
   787  119E  3400               	retlw	0
   788  119F                     STR_175:	
   789  119F  344D               	retlw	77	;'M'
   790  11A0  3475               	retlw	117	;'u'
   791  11A1  346C               	retlw	108	;'l'
   792  11A2  3474               	retlw	116	;'t'
   793  11A3  3469               	retlw	105	;'i'
   794  11A4  345F               	retlw	95	;'_'
   795  11A5  3452               	retlw	82	;'R'
   796  11A6  3458               	retlw	88	;'X'
   797  11A7  3420               	retlw	32	;' '
   798  11A8  3450               	retlw	80	;'P'
   799  11A9  3461               	retlw	97	;'a'
   800  11AA  3473               	retlw	115	;'s'
   801  11AB  3473               	retlw	115	;'s'
   802  11AC  3400               	retlw	0
   803  11AD                     STR_7:	
   804  11AD  3431               	retlw	49	;'1'
   805  11AE  3432               	retlw	50	;'2'
   806  11AF  3476               	retlw	118	;'v'
   807  11B0  342D               	retlw	45	;'-'
   808  11B1  3435               	retlw	53	;'5'
   809  11B2  3476               	retlw	118	;'v'
   810  11B3  3420               	retlw	32	;' '
   811  11B4  3473               	retlw	115	;'s'
   812  11B5  3475               	retlw	117	;'u'
   813  11B6  3470               	retlw	112	;'p'
   814  11B7  3470               	retlw	112	;'p'
   815  11B8  346C               	retlw	108	;'l'
   816  11B9  3479               	retlw	121	;'y'
   817  11BA  3400               	retlw	0
   818  11BB                     STR_15:	
   819  11BB  3431               	retlw	49	;'1'
   820  11BC  3436               	retlw	54	;'6'
   821  11BD  3476               	retlw	118	;'v'
   822  11BE  342D               	retlw	45	;'-'
   823  11BF  3435               	retlw	53	;'5'
   824  11C0  3476               	retlw	118	;'v'
   825  11C1  3420               	retlw	32	;' '
   826  11C2  3473               	retlw	115	;'s'
   827  11C3  3475               	retlw	117	;'u'
   828  11C4  3470               	retlw	112	;'p'
   829  11C5  3470               	retlw	112	;'p'
   830  11C6  346C               	retlw	108	;'l'
   831  11C7  3479               	retlw	121	;'y'
   832  11C8  3400               	retlw	0
   833  11C9                     STR_43:	
   834  11C9  3454               	retlw	84	;'T'
   835  11CA  3465               	retlw	101	;'e'
   836  11CB  3473               	retlw	115	;'s'
   837  11CC  3474               	retlw	116	;'t'
   838  11CD  3420               	retlw	32	;' '
   839  11CE  3445               	retlw	69	;'E'
   840  11CF  3445               	retlw	69	;'E'
   841  11D0  3450               	retlw	80	;'P'
   842  11D1  3452               	retlw	82	;'R'
   843  11D2  344F               	retlw	79	;'O'
   844  11D3  344D               	retlw	77	;'M'
   845  11D4  3420               	retlw	32	;' '
   846  11D5  3400               	retlw	0
   847  11D6                     STR_153:	
   848  11D6  3454               	retlw	84	;'T'
   849  11D7  3434               	retlw	52	;'4'
   850  11D8  3420               	retlw	32	;' '
   851  11D9  3462               	retlw	98	;'b'
   852  11DA  3475               	retlw	117	;'u'
   853  11DB  3473               	retlw	115	;'s'
   854  11DC  3420               	retlw	32	;' '
   855  11DD  3428               	retlw	40	;'('
   856  11DE  3443               	retlw	67	;'C'
   857  11DF  3441               	retlw	65	;'A'
   858  11E0  344E               	retlw	78	;'N'
   859  11E1  3429               	retlw	41	;')'
   860  11E2  3400               	retlw	0
   861  11E3                     STR_10:	
   862  11E3  3456               	retlw	86	;'V'
   863  11E4  346F               	retlw	111	;'o'
   864  11E5  346C               	retlw	108	;'l'
   865  11E6  3474               	retlw	116	;'t'
   866  11E7  3420               	retlw	32	;' '
   867  11E8  3445               	retlw	69	;'E'
   868  11E9  3472               	retlw	114	;'r'
   869  11EA  3472               	retlw	114	;'r'
   870  11EB  346F               	retlw	111	;'o'
   871  11EC  3472               	retlw	114	;'r'
   872  11ED  3420               	retlw	32	;' '
   873  11EE  3448               	retlw	72	;'H'
   874  11EF  3400               	retlw	0
   875  11F0                     STR_135:	
   876  11F0  3454               	retlw	84	;'T'
   877  11F1  3465               	retlw	101	;'e'
   878  11F2  3473               	retlw	115	;'s'
   879  11F3  3474               	retlw	116	;'t'
   880  11F4  3420               	retlw	32	;' '
   881  11F5  3452               	retlw	82	;'R'
   882  11F6  3446               	retlw	70	;'F'
   883  11F7  3420               	retlw	32	;' '
   884  11F8  3452               	retlw	82	;'R'
   885  11F9  3453               	retlw	83	;'S'
   886  11FA  3453               	retlw	83	;'S'
   887  11FB  3449               	retlw	73	;'I'
   888  11FC  3400               	retlw	0
   889  11FD                     STR_8:	
   890  11FD  3456               	retlw	86	;'V'
   891  11FE  346F               	retlw	111	;'o'
   892  11FF  346C               	retlw	108	;'l'
   893  1200  3474               	retlw	116	;'t'
   894  1201  3420               	retlw	32	;' '
   895  1202  3445               	retlw	69	;'E'
   896  1203  3472               	retlw	114	;'r'
   897  1204  3472               	retlw	114	;'r'
   898  1205  346F               	retlw	111	;'o'
   899  1206  3472               	retlw	114	;'r'
   900  1207  3420               	retlw	32	;' '
   901  1208  344C               	retlw	76	;'L'
   902  1209  3400               	retlw	0
   903  120A                     STR_196:	
   904  120A  3420               	retlw	32	;' '
   905  120B  3450               	retlw	80	;'P'
   906  120C  3472               	retlw	114	;'r'
   907  120D  3465               	retlw	101	;'e'
   908  120E  3473               	retlw	115	;'s'
   909  120F  3473               	retlw	115	;'s'
   910  1210  3420               	retlw	32	;' '
   911  1211  3453               	retlw	83	;'S'
   912  1212  3454               	retlw	84	;'T'
   913  1213  3441               	retlw	65	;'A'
   914  1214  3452               	retlw	82	;'R'
   915  1215  3454               	retlw	84	;'T'
   916  1216  3400               	retlw	0
   917  1217                     STR_33:	
   918  1217  3445               	retlw	69	;'E'
   919  1218  3473               	retlw	115	;'s'
   920  1219  3474               	retlw	116	;'t'
   921  121A  3461               	retlw	97	;'a'
   922  121B  3462               	retlw	98	;'b'
   923  121C  346C               	retlw	108	;'l'
   924  121D  3469               	retlw	105	;'i'
   925  121E  3473               	retlw	115	;'s'
   926  121F  3468               	retlw	104	;'h'
   927  1220  3469               	retlw	105	;'i'
   928  1221  346E               	retlw	110	;'n'
   929  1222  3467               	retlw	103	;'g'
   930  1223  3400               	retlw	0
   931  1224                     STR_39:	
   932  1224  3445               	retlw	69	;'E'
   933  1225  3445               	retlw	69	;'E'
   934  1226  3450               	retlw	80	;'P'
   935  1227  3452               	retlw	82	;'R'
   936  1228  344F               	retlw	79	;'O'
   937  1229  344D               	retlw	77	;'M'
   938  122A  3420               	retlw	32	;' '
   939  122B  3465               	retlw	101	;'e'
   940  122C  3472               	retlw	114	;'r'
   941  122D  3472               	retlw	114	;'r'
   942  122E  346F               	retlw	111	;'o'
   943  122F  3472               	retlw	114	;'r'
   944  1230  3400               	retlw	0
   945  1231                     STR_166:	
   946  1231  3420               	retlw	32	;' '
   947  1232  3462               	retlw	98	;'b'
   948  1233  3475               	retlw	117	;'u'
   949  1234  3474               	retlw	116	;'t'
   950  1235  3474               	retlw	116	;'t'
   951  1236  346F               	retlw	111	;'o'
   952  1237  346E               	retlw	110	;'n'
   953  1238  3420               	retlw	32	;' '
   954  1239  3474               	retlw	116	;'t'
   955  123A  3465               	retlw	101	;'e'
   956  123B  3473               	retlw	115	;'s'
   957  123C  3474               	retlw	116	;'t'
   958  123D  3400               	retlw	0
   959  123E                     STR_122:	
   960  123E  3420               	retlw	32	;' '
   961  123F  3445               	retlw	69	;'E'
   962  1240  3472               	retlw	114	;'r'
   963  1241  3472               	retlw	114	;'r'
   964  1242  346F               	retlw	111	;'o'
   965  1243  3472               	retlw	114	;'r'
   966  1244  3420               	retlw	32	;' '
   967  1245  342D               	retlw	45	;'-'
   968  1246  3420               	retlw	32	;' '
   969  1247  344C               	retlw	76	;'L'
   970  1248  346F               	retlw	111	;'o'
   971  1249  3477               	retlw	119	;'w'
   972  124A  3400               	retlw	0
   973  124B                     STR_117:	
   974  124B  3454               	retlw	84	;'T'
   975  124C  3465               	retlw	101	;'e'
   976  124D  3473               	retlw	115	;'s'
   977  124E  3474               	retlw	116	;'t'
   978  124F  3420               	retlw	32	;' '
   979  1250  3452               	retlw	82	;'R'
   980  1251  3446               	retlw	70	;'F'
   981  1252  3420               	retlw	32	;' '
   982  1253  3433               	retlw	51	;'3'
   983  1254  3476               	retlw	118	;'v'
   984  1255  3433               	retlw	51	;'3'
   985  1256  3400               	retlw	0
   986  1257                     STR_40:	
   987  1257  3420               	retlw	32	;' '
   988  1258  3452               	retlw	82	;'R'
   989  1259  3465               	retlw	101	;'e'
   990  125A  3461               	retlw	97	;'a'
   991  125B  3464               	retlw	100	;'d'
   992  125C  342F               	retlw	47	;'/'
   993  125D  3457               	retlw	87	;'W'
   994  125E  3472               	retlw	114	;'r'
   995  125F  3469               	retlw	105	;'i'
   996  1260  3474               	retlw	116	;'t'
   997  1261  3465               	retlw	101	;'e'
   998  1262  3400               	retlw	0
   999  1263                     STR_45:	
  1000  1263  3445               	retlw	69	;'E'
  1001  1264  3445               	retlw	69	;'E'
  1002  1265  3450               	retlw	80	;'P'
  1003  1266  3452               	retlw	82	;'R'
  1004  1267  344F               	retlw	79	;'O'
  1005  1268  344D               	retlw	77	;'M'
  1006  1269  3420               	retlw	32	;' '
  1007  126A  3473               	retlw	115	;'s'
  1008  126B  3469               	retlw	105	;'i'
  1009  126C  347A               	retlw	122	;'z'
  1010  126D  3465               	retlw	101	;'e'
  1011  126E  3400               	retlw	0
  1012  126F                     STR_189:	
  1013  126F  3452               	retlw	82	;'R'
  1014  1270  3458               	retlw	88	;'X'
  1015  1271  3433               	retlw	51	;'3'
  1016  1272  3420               	retlw	32	;' '
  1017  1273  3454               	retlw	84	;'T'
  1018  1274  3465               	retlw	101	;'e'
  1019  1275  3473               	retlw	115	;'s'
  1020  1276  3474               	retlw	116	;'t'
  1021  1277  346A               	retlw	106	;'j'
  1022  1278  3469               	retlw	105	;'i'
  1023  1279  3467               	retlw	103	;'g'
  1024  127A  3400               	retlw	0
  1025  127B                     STR_29:	
  1026  127B  3457               	retlw	87	;'W'
  1027  127C  3461               	retlw	97	;'a'
  1028  127D  3469               	retlw	105	;'i'
  1029  127E  3474               	retlw	116	;'t'
  1030  127F  3469               	retlw	105	;'i'
  1031  1280  346E               	retlw	110	;'n'
  1032  1281  3467               	retlw	103	;'g'
  1033  1282  3420               	retlw	32	;' '
  1034  1283  3466               	retlw	102	;'f'
  1035  1284  346F               	retlw	111	;'o'
  1036  1285  3472               	retlw	114	;'r'
  1037  1286  3400               	retlw	0
  1038  1287                     STR_35:	
  1039  1287  3443               	retlw	67	;'C'
  1040  1288  346F               	retlw	111	;'o'
  1041  1289  346D               	retlw	109	;'m'
  1042  128A  346D               	retlw	109	;'m'
  1043  128B  3473               	retlw	115	;'s'
  1044  128C  3420               	retlw	32	;' '
  1045  128D  3445               	retlw	69	;'E'
  1046  128E  3472               	retlw	114	;'r'
  1047  128F  3472               	retlw	114	;'r'
  1048  1290  346F               	retlw	111	;'o'
  1049  1291  3472               	retlw	114	;'r'
  1050  1292  3400               	retlw	0
  1051  1293                     STR_14:	
  1052  1293  3454               	retlw	84	;'T'
  1053  1294  342D               	retlw	45	;'-'
  1054  1295  346F               	retlw	111	;'o'
  1055  1296  3475               	retlw	117	;'u'
  1056  1297  3474               	retlw	116	;'t'
  1057  1298  3420               	retlw	32	;' '
  1058  1299  3445               	retlw	69	;'E'
  1059  129A  3472               	retlw	114	;'r'
  1060  129B  3472               	retlw	114	;'r'
  1061  129C  346F               	retlw	111	;'o'
  1062  129D  3472               	retlw	114	;'r'
  1063  129E  3400               	retlw	0
  1064  129F                     STR_169:	
  1065  129F  3443               	retlw	67	;'C'
  1066  12A0  346F               	retlw	111	;'o'
  1067  12A1  346E               	retlw	110	;'n'
  1068  12A2  3464               	retlw	100	;'d'
  1069  12A3  346F               	retlw	111	;'o'
  1070  12A4  3433               	retlw	51	;'3'
  1071  12A5  3420               	retlw	32	;' '
  1072  12A6  3450               	retlw	80	;'P'
  1073  12A7  3461               	retlw	97	;'a'
  1074  12A8  3473               	retlw	115	;'s'
  1075  12A9  3473               	retlw	115	;'s'
  1076  12AA  3400               	retlw	0
  1077  12AB                     STR_12:	
  1078  12AB  3443               	retlw	67	;'C'
  1079  12AC  3475               	retlw	117	;'u'
  1080  12AD  3472               	retlw	114	;'r'
  1081  12AE  3472               	retlw	114	;'r'
  1082  12AF  3420               	retlw	32	;' '
  1083  12B0  3445               	retlw	69	;'E'
  1084  12B1  3472               	retlw	114	;'r'
  1085  12B2  3472               	retlw	114	;'r'
  1086  12B3  346F               	retlw	111	;'o'
  1087  12B4  3472               	retlw	114	;'r'
  1088  12B5  3400               	retlw	0
  1089  12B6                     STR_168:	
  1090  12B6  3420               	retlw	32	;' '
  1091  12B7  3466               	retlw	102	;'f'
  1092  12B8  346F               	retlw	111	;'o'
  1093  12B9  3472               	retlw	114	;'r'
  1094  12BA  3420               	retlw	32	;' '
  1095  12BB  3463               	retlw	99	;'c'
  1096  12BC  346F               	retlw	111	;'o'
  1097  12BD  346D               	retlw	109	;'m'
  1098  12BE  346D               	retlw	109	;'m'
  1099  12BF  3473               	retlw	115	;'s'
  1100  12C0  3400               	retlw	0
  1101  12C1                     STR_49:	
  1102  12C1  3454               	retlw	84	;'T'
  1103  12C2  3465               	retlw	101	;'e'
  1104  12C3  3473               	retlw	115	;'s'
  1105  12C4  3474               	retlw	116	;'t'
  1106  12C5  3420               	retlw	32	;' '
  1107  12C6  3452               	retlw	82	;'R'
  1108  12C7  3465               	retlw	101	;'e'
  1109  12C8  346C               	retlw	108	;'l'
  1110  12C9  3461               	retlw	97	;'a'
  1111  12CA  3479               	retlw	121	;'y'
  1112  12CB  3400               	retlw	0
  1113  12CC                     STR_23:	
  1114  12CC  3431               	retlw	49	;'1'
  1115  12CD  3436               	retlw	54	;'6'
  1116  12CE  3476               	retlw	118	;'v'
  1117  12CF  3420               	retlw	32	;' '
  1118  12D0  3473               	retlw	115	;'s'
  1119  12D1  3475               	retlw	117	;'u'
  1120  12D2  3470               	retlw	112	;'p'
  1121  12D3  3470               	retlw	112	;'p'
  1122  12D4  346C               	retlw	108	;'l'
  1123  12D5  3479               	retlw	121	;'y'
  1124  12D6  3400               	retlw	0
  1125  12D7                     STR_167:	
  1126  12D7  3477               	retlw	119	;'w'
  1127  12D8  3461               	retlw	97	;'a'
  1128  12D9  3469               	retlw	105	;'i'
  1129  12DA  3474               	retlw	116	;'t'
  1130  12DB  3469               	retlw	105	;'i'
  1131  12DC  346E               	retlw	110	;'n'
  1132  12DD  3467               	retlw	103	;'g'
  1133  12DE  3420               	retlw	32	;' '
  1134  12DF  3420               	retlw	32	;' '
  1135  12E0  3400               	retlw	0
  1136  12E1                     STR_161:	
  1137  12E1  3453               	retlw	83	;'S'
  1138  12E2  3465               	retlw	101	;'e'
  1139  12E3  3474               	retlw	116	;'t'
  1140  12E4  3420               	retlw	32	;' '
  1141  12E5  3423               	retlw	35	;'#'
  1142  12E6  3420               	retlw	32	;' '
  1143  12E7  346F               	retlw	111	;'o'
  1144  12E8  3466               	retlw	102	;'f'
  1145  12E9  3420               	retlw	32	;' '
  1146  12EA  3400               	retlw	0
  1147  12EB                     STR_67:	
  1148  12EB  3443               	retlw	67	;'C'
  1149  12EC  3448               	retlw	72	;'H'
  1150  12ED  3432               	retlw	50	;'2'
  1151  12EE  3420               	retlw	32	;' '
  1152  12EF  342D               	retlw	45	;'-'
  1153  12F0  3420               	retlw	32	;' '
  1154  12F1  344F               	retlw	79	;'O'
  1155  12F2  3446               	retlw	70	;'F'
  1156  12F3  3446               	retlw	70	;'F'
  1157  12F4  3400               	retlw	0
  1158  12F5                     STR_91:	
  1159  12F5  3443               	retlw	67	;'C'
  1160  12F6  3448               	retlw	72	;'H'
  1161  12F7  3433               	retlw	51	;'3'
  1162  12F8  3420               	retlw	32	;' '
  1163  12F9  342D               	retlw	45	;'-'
  1164  12FA  3420               	retlw	32	;' '
  1165  12FB  344F               	retlw	79	;'O'
  1166  12FC  3446               	retlw	70	;'F'
  1167  12FD  3446               	retlw	70	;'F'
  1168  12FE  3400               	retlw	0
  1169  12FF                     STR_140:	
  1170  12FF  3452               	retlw	82	;'R'
  1171  1300  3453               	retlw	83	;'S'
  1172  1301  3453               	retlw	83	;'S'
  1173  1302  3449               	retlw	73	;'I'
  1174  1303  3420               	retlw	32	;' '
  1175  1304  342D               	retlw	45	;'-'
  1176  1305  3420               	retlw	32	;' '
  1177  1306  344F               	retlw	79	;'O'
  1178  1307  344B               	retlw	75	;'K'
  1179  1308  3400               	retlw	0
  1180  1309                     STR_162:	
  1181  1309  3420               	retlw	32	;' '
  1182  130A  3463               	retlw	99	;'c'
  1183  130B  3468               	retlw	104	;'h'
  1184  130C  3461               	retlw	97	;'a'
  1185  130D  346E               	retlw	110	;'n'
  1186  130E  346E               	retlw	110	;'n'
  1187  130F  3465               	retlw	101	;'e'
  1188  1310  346C               	retlw	108	;'l'
  1189  1311  3473               	retlw	115	;'s'
  1190  1312  3400               	retlw	0
  1191  1313                     STR_37:	
  1192  1313  3454               	retlw	84	;'T'
  1193  1314  3465               	retlw	101	;'e'
  1194  1315  3473               	retlw	115	;'s'
  1195  1316  3474               	retlw	116	;'t'
  1196  1317  3469               	retlw	105	;'i'
  1197  1318  346E               	retlw	110	;'n'
  1198  1319  3467               	retlw	103	;'g'
  1199  131A  3420               	retlw	32	;' '
  1200  131B  3400               	retlw	0
  1201  131C                     STR_62:	
  1202  131C  3420               	retlw	32	;' '
  1203  131D  3445               	retlw	69	;'E'
  1204  131E  3472               	retlw	114	;'r'
  1205  131F  3472               	retlw	114	;'r'
  1206  1320  346F               	retlw	111	;'o'
  1207  1321  3472               	retlw	114	;'r'
  1208  1322  3420               	retlw	32	;' '
  1209  1323  3431               	retlw	49	;'1'
  1210  1324  3400               	retlw	0
  1211  1325                     STR_54:	
  1212  1325  3420               	retlw	32	;' '
  1213  1326  3445               	retlw	69	;'E'
  1214  1327  3472               	retlw	114	;'r'
  1215  1328  3472               	retlw	114	;'r'
  1216  1329  346F               	retlw	111	;'o'
  1217  132A  3472               	retlw	114	;'r'
  1218  132B  3420               	retlw	32	;' '
  1219  132C  3432               	retlw	50	;'2'
  1220  132D  3400               	retlw	0
  1221  132E                     STR_63:	
  1222  132E  3454               	retlw	84	;'T'
  1223  132F  3465               	retlw	101	;'e'
  1224  1330  3473               	retlw	115	;'s'
  1225  1331  3474               	retlw	116	;'t'
  1226  1332  3420               	retlw	32	;' '
  1227  1333  3443               	retlw	67	;'C'
  1228  1334  3448               	retlw	72	;'H'
  1229  1335  3432               	retlw	50	;'2'
  1230  1336  3400               	retlw	0
  1231  1337                     STR_87:	
  1232  1337  3454               	retlw	84	;'T'
  1233  1338  3465               	retlw	101	;'e'
  1234  1339  3473               	retlw	115	;'s'
  1235  133A  3474               	retlw	116	;'t'
  1236  133B  3420               	retlw	32	;' '
  1237  133C  3443               	retlw	67	;'C'
  1238  133D  3448               	retlw	72	;'H'
  1239  133E  3433               	retlw	51	;'3'
  1240  133F  3400               	retlw	0
  1241  1340                     STR_124:	
  1242  1340  3433               	retlw	51	;'3'
  1243  1341  3476               	retlw	118	;'v'
  1244  1342  3433               	retlw	51	;'3'
  1245  1343  3420               	retlw	32	;' '
  1246  1344  342D               	retlw	45	;'-'
  1247  1345  3420               	retlw	32	;' '
  1248  1346  344F               	retlw	79	;'O'
  1249  1347  344B               	retlw	75	;'K'
  1250  1348  3400               	retlw	0
  1251  1349                     STR_71:	
  1252  1349  3443               	retlw	67	;'C'
  1253  134A  3448               	retlw	72	;'H'
  1254  134B  3432               	retlw	50	;'2'
  1255  134C  3420               	retlw	32	;' '
  1256  134D  342D               	retlw	45	;'-'
  1257  134E  3420               	retlw	32	;' '
  1258  134F  344F               	retlw	79	;'O'
  1259  1350  344E               	retlw	78	;'N'
  1260  1351  3400               	retlw	0
  1261  1352                     STR_95:	
  1262  1352  3443               	retlw	67	;'C'
  1263  1353  3448               	retlw	72	;'H'
  1264  1354  3433               	retlw	51	;'3'
  1265  1355  3420               	retlw	32	;' '
  1266  1356  342D               	retlw	45	;'-'
  1267  1357  3420               	retlw	32	;' '
  1268  1358  344F               	retlw	79	;'O'
  1269  1359  344E               	retlw	78	;'N'
  1270  135A  3400               	retlw	0
  1271  135B                     STR_1:	
  1272  135B  344D               	retlw	77	;'M'
  1273  135C  3475               	retlw	117	;'u'
  1274  135D  346C               	retlw	108	;'l'
  1275  135E  3474               	retlw	116	;'t'
  1276  135F  3469               	retlw	105	;'i'
  1277  1360  345F               	retlw	95	;'_'
  1278  1361  3452               	retlw	82	;'R'
  1279  1362  3458               	retlw	88	;'X'
  1280  1363  3400               	retlw	0
  1281  1364                     STR_32:	
  1282  1364  3420               	retlw	32	;' '
  1283  1365  3473               	retlw	115	;'s'
  1284  1366  346B               	retlw	107	;'k'
  1285  1367  3469               	retlw	105	;'i'
  1286  1368  3470               	retlw	112	;'p'
  1287  1369  3470               	retlw	112	;'p'
  1288  136A  3465               	retlw	101	;'e'
  1289  136B  3464               	retlw	100	;'d'
  1290  136C  3400               	retlw	0
  1291  136D                     STR_171:	
  1292  136D  3452               	retlw	82	;'R'
  1293  136E  3458               	retlw	88	;'X'
  1294  136F  3433               	retlw	51	;'3'
  1295  1370  3420               	retlw	32	;' '
  1296  1371  3450               	retlw	80	;'P'
  1297  1372  3461               	retlw	97	;'a'
  1298  1373  3473               	retlw	115	;'s'
  1299  1374  3473               	retlw	115	;'s'
  1300  1375  3400               	retlw	0
  1301  1376                     STR_177:	
  1302  1376  3443               	retlw	67	;'C'
  1303  1377  346F               	retlw	111	;'o'
  1304  1378  346E               	retlw	110	;'n'
  1305  1379  3464               	retlw	100	;'d'
  1306  137A  346F               	retlw	111	;'o'
  1307  137B  3433               	retlw	51	;'3'
  1308  137C  3420               	retlw	32	;' '
  1309  137D  3400               	retlw	0
  1310  137E                     STR_186:	
  1311  137E  3477               	retlw	119	;'w'
  1312  137F  3461               	retlw	97	;'a'
  1313  1380  3469               	retlw	105	;'i'
  1314  1381  3474               	retlw	116	;'t'
  1315  1382  342E               	retlw	46	;'.'
  1316  1383  342E               	retlw	46	;'.'
  1317  1384  342E               	retlw	46	;'.'
  1318  1385  3400               	retlw	0
  1319  1386                     STR_111:	
  1320  1386  3454               	retlw	84	;'T'
  1321  1387  3465               	retlw	101	;'e'
  1322  1388  3473               	retlw	115	;'s'
  1323  1389  3474               	retlw	116	;'t'
  1324  138A  3420               	retlw	32	;' '
  1325  138B  3452               	retlw	82	;'R'
  1326  138C  3446               	retlw	70	;'F'
  1327  138D  3400               	retlw	0
  1328  138E                     STR_179:	
  1329  138E  3452               	retlw	82	;'R'
  1330  138F  3458               	retlw	88	;'X'
  1331  1390  3433               	retlw	51	;'3'
  1332  1391  3420               	retlw	32	;' '
  1333  1392  3400               	retlw	0
  1334  1393                     STR_130:	
  1335  1393  3420               	retlw	32	;' '
  1336  1394  3431               	retlw	49	;'1'
  1337  1395  3434               	retlw	52	;'4'
  1338  1396  3461               	retlw	97	;'a'
  1339  1397  3400               	retlw	0
  1340  1398                     STR_132:	
  1341  1398  3420               	retlw	32	;' '
  1342  1399  3431               	retlw	49	;'1'
  1343  139A  3434               	retlw	52	;'4'
  1344  139B  3462               	retlw	98	;'b'
  1345  139C  3400               	retlw	0
  1346  139D                     STR_134:	
  1347  139D  3420               	retlw	32	;' '
  1348  139E  3431               	retlw	49	;'1'
  1349  139F  3434               	retlw	52	;'4'
  1350  13A0  3463               	retlw	99	;'c'
  1351  13A1  3400               	retlw	0
  1352  13A2                     STR_110:	
  1353  13A2  3420               	retlw	32	;' '
  1354  13A3  3431               	retlw	49	;'1'
  1355  13A4  3430               	retlw	48	;'0'
  1356  13A5  3400               	retlw	0
  1357  13A6                     STR_114:	
  1358  13A6  3420               	retlw	32	;' '
  1359  13A7  3431               	retlw	49	;'1'
  1360  13A8  3431               	retlw	49	;'1'
  1361  13A9  3400               	retlw	0
  1362  13AA                     STR_116:	
  1363  13AA  3420               	retlw	32	;' '
  1364  13AB  3431               	retlw	49	;'1'
  1365  13AC  3432               	retlw	50	;'2'
  1366  13AD  3400               	retlw	0
  1367  13AE                     STR_128:	
  1368  13AE  3420               	retlw	32	;' '
  1369  13AF  3431               	retlw	49	;'1'
  1370  13B0  3433               	retlw	51	;'3'
  1371  13B1  3400               	retlw	0
  1372  13B2                     STR_152:	
  1373  13B2  3420               	retlw	32	;' '
  1374  13B3  3431               	retlw	49	;'1'
  1375  13B4  3435               	retlw	53	;'5'
  1376  13B5  3400               	retlw	0
  1377  13B6                     STR_164:	
  1378  13B6  3420               	retlw	32	;' '
  1379  13B7  3431               	retlw	49	;'1'
  1380  13B8  3436               	retlw	54	;'6'
  1381  13B9  3400               	retlw	0
  1382  13BA                     STR_160:	
  1383  13BA  3420               	retlw	32	;' '
  1384  13BB  3431               	retlw	49	;'1'
  1385  13BC  3437               	retlw	55	;'7'
  1386  13BD  3400               	retlw	0
  1387  13BE                     STR_156:	
  1388  13BE  3420               	retlw	32	;' '
  1389  13BF  3431               	retlw	49	;'1'
  1390  13C0  3438               	retlw	56	;'8'
  1391  13C1  3400               	retlw	0
  1392  13C2                     STR_76:	
  1393  13C2  3420               	retlw	32	;' '
  1394  13C3  3436               	retlw	54	;'6'
  1395  13C4  3461               	retlw	97	;'a'
  1396  13C5  3400               	retlw	0
  1397  13C6                     STR_102:	
  1398  13C6  3420               	retlw	32	;' '
  1399  13C7  3438               	retlw	56	;'8'
  1400  13C8  3461               	retlw	97	;'a'
  1401  13C9  3400               	retlw	0
  1402  13CA                     STR_78:	
  1403  13CA  3420               	retlw	32	;' '
  1404  13CB  3436               	retlw	54	;'6'
  1405  13CC  3462               	retlw	98	;'b'
  1406  13CD  3400               	retlw	0
  1407  13CE                     STR_100:	
  1408  13CE  3420               	retlw	32	;' '
  1409  13CF  3438               	retlw	56	;'8'
  1410  13D0  3462               	retlw	98	;'b'
  1411  13D1  3400               	retlw	0
  1412  13D2                     STR_56:	
  1413  13D2  3420               	retlw	32	;' '
  1414  13D3  3433               	retlw	51	;'3'
  1415  13D4  3400               	retlw	0
  1416  13D5                     STR_60:	
  1417  13D5  3420               	retlw	32	;' '
  1418  13D6  3434               	retlw	52	;'4'
  1419  13D7  3400               	retlw	0
  1420  13D8                     STR_70:	
  1421  13D8  3420               	retlw	32	;' '
  1422  13D9  3435               	retlw	53	;'5'
  1423  13DA  3400               	retlw	0
  1424  13DB                     STR_82:	
  1425  13DB  3420               	retlw	32	;' '
  1426  13DC  3436               	retlw	54	;'6'
  1427  13DD  3400               	retlw	0
  1428  13DE                     STR_86:	
  1429  13DE  3420               	retlw	32	;' '
  1430  13DF  3437               	retlw	55	;'7'
  1431  13E0  3400               	retlw	0
  1432  13E1                     STR_94:	
  1433  13E1  3420               	retlw	32	;' '
  1434  13E2  3438               	retlw	56	;'8'
  1435  13E3  3400               	retlw	0
  1436  13E4                     STR_106:	
  1437  13E4  3420               	retlw	32	;' '
  1438  13E5  3439               	retlw	57	;'9'
  1439  13E6  3400               	retlw	0
  1440  13E7                     STR_66:	
  1441  13E7  346F               	retlw	111	;'o'
  1442  13E8  346B               	retlw	107	;'k'
  1443  13E9  3400               	retlw	0
  1444  10AE                     
  1445                           ; #config settings
  1446  0000                     
  1447                           	psect	cinit
  1448  00A3                     start_initialization:	
  1449  00A3                     __initialization:	
  1450  00A3  30A0               	movlw	low __pbssBANK1
  1451                           
  1452                           ; Clear objects allocated to BANK0
  1453  00A4  01EF               	clrf	__pbssBANK0& (0+127)
  1454                           
  1455                           ; Clear objects allocated to BANK1
  1456  00A5  0084               	movwf	4
  1457  00A6  3000               	movlw	high __pbssBANK1
  1458  00A7  0085               	movwf	5
  1459  00A8  3019               	movlw	25
  1460  00A9  3188  2085         	fcall	clear_ram0
  1461                           
  1462                           ; Initialize objects allocated to BANK1
  1463  00AB  0021               	movlb	1	; select bank1
  1464                           
  1465                           ;initializer for _one_second_timer
  1466  00AC  30E8               	movlw	232
  1467  00AD  00B9               	movwf	__pdataBANK1& (0+127)
  1468  00AE  3003               	movlw	3
  1469  00AF  00BA               	movwf	(__pdataBANK1+1)& (0+127)
  1470  00B0                     end_of_initialization:	
  1471                           ;End of C runtime variable initialization code
  1472                           
  1473  00B0                     __end_of__initialization:	
  1474  00B0  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1475  00B1  0020               	movlb	0
  1476  00B2  3194  2CE4         	ljmp	_main	;jump to C main() function
  1477                           
  1478                           	psect	bssBANK0
  1479  006F                     __pbssBANK0:	
  1480  006F                     _ten_thou:	
  1481  006F                     	ds	1
  1482                           
  1483                           	psect	bssBANK1
  1484  00A0                     __pbssBANK1:	
  1485  00A0                     _ADC_cur_sink_val:	
  1486  00A0                     	ds	2
  1487  00A2                     _buzz_timer:	
  1488  00A2                     	ds	2
  1489  00A4                     _curent_sink_val:	
  1490  00A4                     	ds	2
  1491  00A6                     _current_sink_stable:	
  1492  00A6                     	ds	2
  1493  00A8                     _current_sink_timer:	
  1494  00A8                     	ds	2
  1495  00AA                     _motor_direction_timer:	
  1496  00AA                     	ds	2
  1497  00AC                     _pickit_timer:	
  1498  00AC                     	ds	2
  1499  00AE                     _testjig_timer:	
  1500  00AE                     	ds	2
  1501  00B0                     _tj_timer:	
  1502  00B0                     	ds	2
  1503  00B2                     _uart_receive_timer:	
  1504  00B2                     	ds	2
  1505  00B4                     _hund:	
  1506  00B4                     	ds	1
  1507  00B5                     _pickit_red_counter:	
  1508  00B5                     	ds	1
  1509  00B6                     _ten:	
  1510  00B6                     	ds	1
  1511  00B7                     _unit:	
  1512  00B7                     	ds	1
  1513  00B8                     _thou:	
  1514  00B8                     	ds	1
  1515                           
  1516                           	psect	dataBANK1
  1517  00B9                     __pdataBANK1:	
  1518  00B9                     _one_second_timer:	
  1519  00B9                     	ds	2
  1520                           
  1521                           	psect	clrtext
  1522  0885                     clear_ram0:	
  1523                           ;	Called with FSR0 containing the base address, and
  1524                           ;	WREG with the size to clear
  1525                           
  1526  0885  0064               	clrwdt	;clear the watchdog before getting into this loop
  1527  0886                     clrloop0:	
  1528  0886  0180               	clrf	0	;clear RAM location pointed to by FSR
  1529  0887  3101               	addfsr 0,1
  1530  0888  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1531  0889  2886               	goto	clrloop0	;have we reached the end yet?
  1532  088A  3400               	retlw	0	;all done for this memory range, return
  1533                           
  1534                           	psect	cstackCOMMON
  1535  0070                     __pcstackCOMMON:	
  1536  0070                     ?_init_ADC:	
  1537  0070                     ??_init_ADC:	
  1538                           ; 0 bytes @ 0x0
  1539                           
  1540  0070                     ?_init_current_sink:	
  1541                           ; 0 bytes @ 0x0
  1542                           
  1543  0070                     ??_init_current_sink:	
  1544                           ; 0 bytes @ 0x0
  1545                           
  1546  0070                     ?_init_i2c:	
  1547                           ; 0 bytes @ 0x0
  1548                           
  1549  0070                     ??_init_i2c:	
  1550                           ; 0 bytes @ 0x0
  1551                           
  1552  0070                     ?_debug_fast_tx:	
  1553                           ; 0 bytes @ 0x0
  1554                           
  1555  0070                     ?_power_supply_set:	
  1556                           ; 0 bytes @ 0x0
  1557                           
  1558  0070                     ??_power_supply_set:	
  1559                           ; 0 bytes @ 0x0
  1560                           
  1561  0070                     ?_TX_one:	
  1562                           ; 0 bytes @ 0x0
  1563                           
  1564  0070                     ??_TX_one:	
  1565                           ; 0 bytes @ 0x0
  1566                           
  1567  0070                     ??_RX_one_timeout:	
  1568                           ; 0 bytes @ 0x0
  1569                           
  1570  0070                     ??_RX_one:	
  1571                           ; 0 bytes @ 0x0
  1572                           
  1573  0070                     ?_buzz_one:	
  1574                           ; 0 bytes @ 0x0
  1575                           
  1576  0070                     ?_digitalpot:	
  1577                           ; 0 bytes @ 0x0
  1578                           
  1579  0070                     ?_isr:	
  1580                           ; 0 bytes @ 0x0
  1581                           
  1582  0070                     ??_isr:	
  1583                           ; 0 bytes @ 0x0
  1584                           
  1585  0070                     ?_main:	
  1586                           ; 0 bytes @ 0x0
  1587                           
  1588  0070                     ?_i2c_Start:	
  1589                           ; 0 bytes @ 0x0
  1590                           
  1591  0070                     ??_i2c_Start:	
  1592                           ; 0 bytes @ 0x0
  1593                           
  1594  0070                     ?_i2c_Write:	
  1595                           ; 0 bytes @ 0x0
  1596                           
  1597  0070                     ??_i2c_Write:	
  1598                           ; 0 bytes @ 0x0
  1599                           
  1600  0070                     ?_i2c_Stop:	
  1601                           ; 0 bytes @ 0x0
  1602                           
  1603  0070                     ??_i2c_Stop:	
  1604                           ; 0 bytes @ 0x0
  1605                           
  1606  0070                     ?_i2c_write_char:	
  1607                           ; 0 bytes @ 0x0
  1608                           
  1609  0070                     ?_clear_lcd:	
  1610                           ; 0 bytes @ 0x0
  1611                           
  1612  0070                     ?_i2c_first_line:	
  1613                           ; 0 bytes @ 0x0
  1614                           
  1615  0070                     ?_i2c_second_line:	
  1616                           ; 0 bytes @ 0x0
  1617                           
  1618  0070                     ?_RX_one_timeout:	
  1619                           ; 0 bytes @ 0x0
  1620                           
  1621  0070                     ?_RX_one:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0070                     ?___bmul:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0070                     ?_ADC_get_val:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0070                     ?__Umul8_16:	
  1631                           ; 2 bytes @ 0x0
  1632                           
  1633  0070                     ?___wmul:	
  1634                           ; 2 bytes @ 0x0
  1635                           
  1636  0070                     ?___xxtofl:	
  1637                           ; 2 bytes @ 0x0
  1638                           
  1639  0070                     i2c_Write@data:	
  1640                           ; 4 bytes @ 0x0
  1641                           
  1642  0070                     power_supply_set@supply:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0070                     ___bmul@multiplicand:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648  0070                     __Umul8_16@multiplicand:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0070                     buzz_one@time:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654  0070                     debug_fast_tx@data:	
  1655                           ; 2 bytes @ 0x0
  1656                           
  1657  0070                     ___wmul@multiplier:	
  1658                           ; 2 bytes @ 0x0
  1659                           
  1660  0070                     ___xxtofl@val:	
  1661                           ; 2 bytes @ 0x0
  1662                           
  1663                           
  1664                           ; 4 bytes @ 0x0
  1665  0070                     	ds	1
  1666  0071                     ?_init_i2c_lcd_5v:	
  1667  0071                     ??_digitalpot:	
  1668                           ; 0 bytes @ 0x1
  1669                           
  1670  0071                     ?_i2c_Write_string:	
  1671                           ; 0 bytes @ 0x1
  1672                           
  1673  0071                     ??_i2c_write_char:	
  1674                           ; 0 bytes @ 0x1
  1675                           
  1676  0071                     ??_clear_lcd:	
  1677                           ; 0 bytes @ 0x1
  1678                           
  1679  0071                     ??_i2c_first_line:	
  1680                           ; 0 bytes @ 0x1
  1681                           
  1682  0071                     ??_i2c_second_line:	
  1683                           ; 0 bytes @ 0x1
  1684                           
  1685  0071                     ?_lcd_set_cursor:	
  1686                           ; 0 bytes @ 0x1
  1687                           
  1688  0071                     ??___bmul:	
  1689                           ; 0 bytes @ 0x1
  1690                           
  1691  0071                     i2c_write_char@char_data:	
  1692                           ; 0 bytes @ 0x1
  1693                           
  1694  0071                     init_i2c_lcd_5v@single1_double2:	
  1695                           ; 1 bytes @ 0x1
  1696                           
  1697  0071                     lcd_set_cursor@col:	
  1698                           ; 1 bytes @ 0x1
  1699                           
  1700  0071                     TX_one@data:	
  1701                           ; 1 bytes @ 0x1
  1702                           
  1703  0071                     RX_one@i:	
  1704                           ; 1 bytes @ 0x1
  1705                           
  1706  0071                     RX_one_timeout@i:	
  1707                           ; 1 bytes @ 0x1
  1708                           
  1709  0071                     ___bmul@product:	
  1710                           ; 1 bytes @ 0x1
  1711                           
  1712  0071                     i2c_Write_string@data:	
  1713                           ; 1 bytes @ 0x1
  1714                           
  1715                           
  1716                           ; 2 bytes @ 0x1
  1717  0071                     	ds	1
  1718  0072                     ??_init_i2c_lcd_5v:	
  1719  0072                     ??_debug_fast_tx:	
  1720                           ; 0 bytes @ 0x2
  1721                           
  1722  0072                     ??_buzz_one:	
  1723                           ; 0 bytes @ 0x2
  1724                           
  1725  0072                     ??_lcd_set_cursor:	
  1726                           ; 0 bytes @ 0x2
  1727                           
  1728  0072                     lcd_set_cursor@row:	
  1729                           ; 0 bytes @ 0x2
  1730                           
  1731  0072                     debug_fast_tx@i:	
  1732                           ; 1 bytes @ 0x2
  1733                           
  1734  0072                     TX_one@i:	
  1735                           ; 1 bytes @ 0x2
  1736                           
  1737  0072                     RX_one@data:	
  1738                           ; 1 bytes @ 0x2
  1739                           
  1740  0072                     RX_one_timeout@data:	
  1741                           ; 1 bytes @ 0x2
  1742                           
  1743  0072                     ___bmul@multiplier:	
  1744                           ; 1 bytes @ 0x2
  1745                           
  1746  0072                     ___wmul@multiplicand:	
  1747                           ; 1 bytes @ 0x2
  1748                           
  1749                           
  1750                           ; 2 bytes @ 0x2
  1751  0072                     	ds	1
  1752  0073                     ??_ADC_get_val:	
  1753  0073                     ??__Umul8_16:	
  1754                           ; 0 bytes @ 0x3
  1755                           
  1756  0073                     ??_i2c_Write_string:	
  1757                           ; 0 bytes @ 0x3
  1758                           
  1759  0073                     lcd_set_cursor@LCD_position:	
  1760                           ; 0 bytes @ 0x3
  1761                           
  1762  0073                     ADC_get_val@channel:	
  1763                           ; 1 bytes @ 0x3
  1764                           
  1765  0073                     digitalpot@value:	
  1766                           ; 1 bytes @ 0x3
  1767                           
  1768  0073                     __Umul8_16@product:	
  1769                           ; 1 bytes @ 0x3
  1770                           
  1771                           
  1772                           ; 2 bytes @ 0x3
  1773  0073                     	ds	1
  1774  0074                     ?_print_screen:	
  1775  0074                     ?_Vout_set:	
  1776                           ; 0 bytes @ 0x4
  1777                           
  1778  0074                     ??___wmul:	
  1779                           ; 0 bytes @ 0x4
  1780                           
  1781  0074                     ??___xxtofl:	
  1782                           ; 0 bytes @ 0x4
  1783                           
  1784  0074                     init_i2c_lcd_5v@contrast:	
  1785                           ; 0 bytes @ 0x4
  1786                           
  1787  0074                     print_screen@top:	
  1788                           ; 1 bytes @ 0x4
  1789                           
  1790  0074                     ADC_get_val@return_val:	
  1791                           ; 2 bytes @ 0x4
  1792                           
  1793  0074                     Vout_set@Volts:	
  1794                           ; 2 bytes @ 0x4
  1795                           
  1796  0074                     ___wmul@product:	
  1797                           ; 2 bytes @ 0x4
  1798                           
  1799                           
  1800                           ; 2 bytes @ 0x4
  1801  0074                     	ds	1
  1802  0075                     __Umul8_16@multiplier:	
  1803                           
  1804                           ; 1 bytes @ 0x5
  1805  0075                     	ds	1
  1806  0076                     ??_Vout_set:	
  1807  0076                     ?_ten_thou_conv:	
  1808                           ; 0 bytes @ 0x6
  1809                           
  1810  0076                     ten_thou_conv@n:	
  1811                           ; 0 bytes @ 0x6
  1812                           
  1813  0076                     print_screen@bottom:	
  1814                           ; 2 bytes @ 0x6
  1815                           
  1816  0076                     __Umul8_16@word_mpld:	
  1817                           ; 2 bytes @ 0x6
  1818                           
  1819  0076                     Vout_set@digi_step:	
  1820                           ; 2 bytes @ 0x6
  1821                           
  1822                           
  1823                           ; 4 bytes @ 0x6
  1824  0076                     	ds	2
  1825  0078                     ??_print_screen:	
  1826  0078                     ?_testjig_done:	
  1827                           ; 0 bytes @ 0x8
  1828                           
  1829  0078                     ?_print_error:	
  1830                           ; 0 bytes @ 0x8
  1831                           
  1832  0078                     ??_ten_thou_conv:	
  1833                           ; 0 bytes @ 0x8
  1834                           
  1835  0078                     testjig_done@device_type:	
  1836                           ; 0 bytes @ 0x8
  1837                           
  1838  0078                     ___xxtofl@sign:	
  1839                           ; 1 bytes @ 0x8
  1840                           
  1841  0078                     print_error@top:	
  1842                           ; 1 bytes @ 0x8
  1843                           
  1844                           
  1845                           ; 2 bytes @ 0x8
  1846  0078                     	ds	1
  1847  0079                     ??_testjig_done:	
  1848  0079                     ___xxtofl@exp:	
  1849                           ; 0 bytes @ 0x9
  1850                           
  1851                           
  1852                           ; 1 bytes @ 0x9
  1853  0079                     	ds	1
  1854  007A                     print_error@bottom:	
  1855  007A                     ___xxtofl@arg:	
  1856                           ; 2 bytes @ 0xA
  1857                           
  1858                           
  1859                           ; 4 bytes @ 0xA
  1860  007A                     	ds	2
  1861  007C                     testjig_done@state:	
  1862                           
  1863                           ; 1 bytes @ 0xC
  1864  007C                     	ds	2
  1865  007E                     ??_get_30v_current:	
  1866  007E                     ??_lcd_print_int:	
  1867                           ; 0 bytes @ 0xE
  1868                           
  1869                           
  1870                           	psect	cstackBANK0
  1871  0020                     __pcstackBANK0:	
  1872                           ; 0 bytes @ 0xE
  1873                           
  1874  0020                     ??_print_error:	
  1875  0020                     ?___flmul:	
  1876                           ; 0 bytes @ 0x0
  1877                           
  1878  0020                     ___flmul@b:	
  1879                           ; 4 bytes @ 0x0
  1880                           
  1881                           
  1882                           ; 4 bytes @ 0x0
  1883  0020                     	ds	4
  1884  0024                     ___flmul@a:	
  1885                           
  1886                           ; 4 bytes @ 0x4
  1887  0024                     	ds	4
  1888  0028                     ??___flmul:	
  1889                           
  1890                           ; 0 bytes @ 0x8
  1891  0028                     	ds	4
  1892  002C                     ___flmul@sign:	
  1893                           
  1894                           ; 1 bytes @ 0xC
  1895  002C                     	ds	1
  1896  002D                     ___flmul@aexp:	
  1897                           
  1898                           ; 1 bytes @ 0xD
  1899  002D                     	ds	1
  1900  002E                     ___flmul@grs:	
  1901                           
  1902                           ; 4 bytes @ 0xE
  1903  002E                     	ds	4
  1904  0032                     ___flmul@bexp:	
  1905                           
  1906                           ; 1 bytes @ 0x12
  1907  0032                     	ds	1
  1908  0033                     ___flmul@prod:	
  1909                           
  1910                           ; 4 bytes @ 0x13
  1911  0033                     	ds	4
  1912  0037                     ___flmul@temp:	
  1913                           
  1914                           ; 2 bytes @ 0x17
  1915  0037                     	ds	2
  1916  0039                     ?___fladd:	
  1917  0039                     ___fladd@b:	
  1918                           ; 4 bytes @ 0x19
  1919                           
  1920                           
  1921                           ; 4 bytes @ 0x19
  1922  0039                     	ds	4
  1923  003D                     ___fladd@a:	
  1924                           
  1925                           ; 4 bytes @ 0x1D
  1926  003D                     	ds	4
  1927  0041                     ??___fladd:	
  1928                           
  1929                           ; 0 bytes @ 0x21
  1930  0041                     	ds	8
  1931  0049                     ___fladd@signs:	
  1932                           
  1933                           ; 1 bytes @ 0x29
  1934  0049                     	ds	1
  1935  004A                     ___fladd@aexp:	
  1936                           
  1937                           ; 1 bytes @ 0x2A
  1938  004A                     	ds	1
  1939  004B                     ___fladd@bexp:	
  1940                           
  1941                           ; 1 bytes @ 0x2B
  1942  004B                     	ds	1
  1943  004C                     ___fladd@grs:	
  1944                           
  1945                           ; 1 bytes @ 0x2C
  1946  004C                     	ds	1
  1947  004D                     ?___fltol:	
  1948  004D                     ___fltol@f1:	
  1949                           ; 4 bytes @ 0x2D
  1950                           
  1951                           
  1952                           ; 4 bytes @ 0x2D
  1953  004D                     	ds	4
  1954  0051                     ??___fltol:	
  1955                           
  1956                           ; 0 bytes @ 0x31
  1957  0051                     	ds	4
  1958  0055                     ___fltol@sign1:	
  1959                           
  1960                           ; 1 bytes @ 0x35
  1961  0055                     	ds	1
  1962  0056                     ___fltol@exp1:	
  1963                           
  1964                           ; 1 bytes @ 0x36
  1965  0056                     	ds	1
  1966  0057                     ?_get_30v_current:	
  1967                           
  1968                           ; 2 bytes @ 0x37
  1969  0057                     	ds	2
  1970  0059                     get_30v_current@temp:	
  1971                           
  1972                           ; 2 bytes @ 0x39
  1973  0059                     	ds	2
  1974  005B                     ?_lcd_print_int:	
  1975  005B                     lcd_print_int@number:	
  1976                           ; 0 bytes @ 0x3B
  1977                           
  1978                           
  1979                           ; 2 bytes @ 0x3B
  1980  005B                     	ds	2
  1981  005D                     lcd_print_int@pos:	
  1982                           
  1983                           ; 2 bytes @ 0x3D
  1984  005D                     	ds	2
  1985  005F                     lcd_print_int@decimal:	
  1986                           
  1987                           ; 1 bytes @ 0x3F
  1988  005F                     	ds	1
  1989  0060                     lcd_print_int@ten_thou_digit:	
  1990                           
  1991                           ; 1 bytes @ 0x40
  1992  0060                     	ds	1
  1993  0061                     ??_main:	
  1994                           
  1995                           ; 0 bytes @ 0x41
  1996  0061                     	ds	3
  1997  0064                     main@temp:	
  1998                           
  1999                           ; 2 bytes @ 0x44
  2000  0064                     	ds	2
  2001  0066                     main@mem_size:	
  2002                           
  2003                           ; 2 bytes @ 0x46
  2004  0066                     	ds	2
  2005  0068                     main@j:	
  2006                           
  2007                           ; 2 bytes @ 0x48
  2008  0068                     	ds	2
  2009  006A                     main@response:	
  2010                           
  2011                           ; 1 bytes @ 0x4A
  2012  006A                     	ds	1
  2013  006B                     main@i:	
  2014                           
  2015                           ; 2 bytes @ 0x4B
  2016  006B                     	ds	2
  2017  006D                     main@device_type:	
  2018                           
  2019                           ; 1 bytes @ 0x4D
  2020  006D                     	ds	1
  2021  006E                     main@RX_data:	
  2022                           
  2023                           ; 1 bytes @ 0x4E
  2024  006E                     	ds	1
  2025                           
  2026                           	psect	maintext
  2027  14E4                     __pmaintext:	
  2028 ;;
  2029 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2030 ;;
  2031 ;; *************** function _main *****************
  2032 ;; Defined at:
  2033 ;;		line 473 in file "Multi_RX_testjig_v2.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  response        1   74[BANK0 ] unsigned char 
  2038 ;;  j               2   72[BANK0 ] int 
  2039 ;;  mem_size        2   70[BANK0 ] unsigned int 
  2040 ;;  i               2   75[BANK0 ] unsigned int 
  2041 ;;  temp            2   68[BANK0 ] unsigned int 
  2042 ;;  RX_data         1   78[BANK0 ] unsigned char 
  2043 ;;  device_type     1   77[BANK0 ] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;		None               void
  2046 ;; Registers used:
  2047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : B1F/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2054 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2055 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2056 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2057 ;;Total ram usage:       14 bytes
  2058 ;; Hardware stack levels required when called:    5
  2059 ;; This function calls:
  2060 ;;		_ADC_get_val
  2061 ;;		_RX_one
  2062 ;;		_RX_one_timeout
  2063 ;;		_TX_one
  2064 ;;		_Vout_set
  2065 ;;		_debug_fast_tx
  2066 ;;		_get_30v_current
  2067 ;;		_init_ADC
  2068 ;;		_init_current_sink
  2069 ;;		_init_i2c
  2070 ;;		_init_i2c_lcd_5v
  2071 ;;		_lcd_print_int
  2072 ;;		_power_supply_set
  2073 ;;		_print_error
  2074 ;;		_print_screen
  2075 ;;		_testjig_done
  2076 ;; This function is called by:
  2077 ;;		Startup code after reset
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           
  2082                           ;psect for function _main
  2083  14E4                     _main:	
  2084                           
  2085                           ;Multi_RX_testjig_v2.c: 476: OSCCON = 0x7A;
  2086                           
  2087                           ;incstack = 0
  2088                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2089  14E4  307A               	movlw	122
  2090  14E5  0021               	movlb	1	; select bank1
  2091  14E6  0099               	movwf	25	;volatile
  2092                           
  2093                           ;Multi_RX_testjig_v2.c: 478: OPTION_REG = 0b11010000;
  2094  14E7  30D0               	movlw	208
  2095  14E8  0095               	movwf	21	;volatile
  2096                           
  2097                           ;Multi_RX_testjig_v2.c: 479: TMR0 = 0x00;
  2098  14E9  0020               	movlb	0	; select bank0
  2099  14EA  0195               	clrf	21	;volatile
  2100                           
  2101                           ;Multi_RX_testjig_v2.c: 480: TMR0IF = 0;
  2102  14EB  110B               	bcf	11,2	;volatile
  2103                           
  2104                           ;Multi_RX_testjig_v2.c: 481: TMR0IE = 1;
  2105  14EC  168B               	bsf	11,5	;volatile
  2106                           
  2107                           ;Multi_RX_testjig_v2.c: 484: TRISA = 0b00001111;
  2108  14ED  300F               	movlw	15
  2109  14EE  0021               	movlb	1	; select bank1
  2110  14EF  008C               	movwf	12	;volatile
  2111                           
  2112                           ;Multi_RX_testjig_v2.c: 485: TRISB = 0b11001111;
  2113  14F0  30CF               	movlw	207
  2114  14F1  008D               	movwf	13	;volatile
  2115                           
  2116                           ;Multi_RX_testjig_v2.c: 486: TRISC = 0b00011010;
  2117  14F2  301A               	movlw	26
  2118  14F3  008E               	movwf	14	;volatile
  2119                           
  2120                           ;Multi_RX_testjig_v2.c: 487: TRISD = 0b10001011;
  2121  14F4  308B               	movlw	139
  2122  14F5  008F               	movwf	15	;volatile
  2123                           
  2124                           ;Multi_RX_testjig_v2.c: 488: TRISE = 0b11110110;
  2125  14F6  30F6               	movlw	246
  2126  14F7  0090               	movwf	16	;volatile
  2127                           
  2128                           ;Multi_RX_testjig_v2.c: 489: TRISF = 0b00101111;
  2129  14F8  302F               	movlw	47
  2130  14F9  0026               	movlb	6	; select bank6
  2131  14FA  008C               	movwf	12	;volatile
  2132                           
  2133                           ;Multi_RX_testjig_v2.c: 490: TRISG = 0b11101111;
  2134  14FB  30EF               	movlw	239
  2135  14FC  008D               	movwf	13	;volatile
  2136                           
  2137                           ;Multi_RX_testjig_v2.c: 492: PORTA = 0b00000000;
  2138  14FD  0020               	movlb	0	; select bank0
  2139  14FE  018C               	clrf	12	;volatile
  2140                           
  2141                           ;Multi_RX_testjig_v2.c: 493: PORTB = 0b00000000;
  2142  14FF  018D               	clrf	13	;volatile
  2143                           
  2144                           ;Multi_RX_testjig_v2.c: 494: PORTC = 0b00000000;
  2145  1500  018E               	clrf	14	;volatile
  2146                           
  2147                           ;Multi_RX_testjig_v2.c: 495: PORTD = 0b01000000;
  2148  1501  3040               	movlw	64
  2149  1502  008F               	movwf	15	;volatile
  2150                           
  2151                           ;Multi_RX_testjig_v2.c: 496: PORTE = 0b00000000;
  2152  1503  0190               	clrf	16	;volatile
  2153                           
  2154                           ;Multi_RX_testjig_v2.c: 497: PORTF = 0b00000000;
  2155  1504  0025               	movlb	5	; select bank5
  2156  1505  018C               	clrf	12	;volatile
  2157                           
  2158                           ;Multi_RX_testjig_v2.c: 498: PORTG = 0b00000000;
  2159  1506  018D               	clrf	13	;volatile
  2160                           
  2161                           ;Multi_RX_testjig_v2.c: 500: WPUB = 0b00000000;
  2162  1507  0024               	movlb	4	; select bank4
  2163  1508  018D               	clrf	13	;volatile
  2164                           
  2165                           ;Multi_RX_testjig_v2.c: 501: WPUD = 0b00000000;
  2166  1509  018F               	clrf	15	;volatile
  2167                           
  2168                           ;Multi_RX_testjig_v2.c: 502: WPUE = 0b00000000;
  2169  150A  0190               	clrf	16	;volatile
  2170                           
  2171                           ;Multi_RX_testjig_v2.c: 504: ANSELA = 0b00000000;
  2172  150B  0023               	movlb	3	; select bank3
  2173  150C  018C               	clrf	12	;volatile
  2174                           
  2175                           ;Multi_RX_testjig_v2.c: 505: ANSELB = 0b00001100;
  2176  150D  300C               	movlw	12
  2177  150E  008D               	movwf	13	;volatile
  2178                           
  2179                           ;Multi_RX_testjig_v2.c: 506: ANSELD = 0b00001111;
  2180  150F  300F               	movlw	15
  2181  1510  008F               	movwf	15	;volatile
  2182                           
  2183                           ;Multi_RX_testjig_v2.c: 507: ANSELE = 0b00000100;
  2184  1511  3004               	movlw	4
  2185  1512  0090               	movwf	16	;volatile
  2186                           
  2187                           ;Multi_RX_testjig_v2.c: 508: ANSELF = 0b00000000;
  2188  1513  0028               	movlb	8	; select bank8
  2189  1514  018C               	clrf	12	;volatile
  2190                           
  2191                           ;Multi_RX_testjig_v2.c: 509: ANSELG = 0b00000000;
  2192  1515  018D               	clrf	13	;volatile
  2193                           
  2194                           ;Multi_RX_testjig_v2.c: 516: init_ADC();
  2195  1516  3188  208B  3194   	fcall	_init_ADC
  2196                           
  2197                           ;Multi_RX_testjig_v2.c: 517: init_current_sink();
  2198  1519  3188  2092  3194   	fcall	_init_current_sink
  2199                           
  2200                           ;Multi_RX_testjig_v2.c: 518: pickit_state = pickit_idle;
  2201  151C  3005               	movlw	5
  2202  151D  0021               	movlb	1	; select bank1
  2203  151E  00BB               	movwf	_pickit_state^(0+128)
  2204                           
  2205                           ;Multi_RX_testjig_v2.c: 520: RA5 = 0;
  2206  151F  0020               	movlb	0	; select bank0
  2207  1520  128C               	bcf	12,5	;volatile
  2208                           
  2209                           ;Multi_RX_testjig_v2.c: 522: RA5 = 1;
  2210  1521  168C               	bsf	12,5	;volatile
  2211                           
  2212                           ;Multi_RX_testjig_v2.c: 526: init_i2c();
  2213  1522  3188  20A7  3194   	fcall	_init_i2c
  2214  1525  3008               	movlw	8
  2215                           
  2216                           ;Multi_RX_testjig_v2.c: 536: init_i2c_lcd_5v(8, 1);
  2217  1526  01F1               	clrf	init_i2c_lcd_5v@single1_double2
  2218  1527  0AF1               	incf	init_i2c_lcd_5v@single1_double2,f
  2219  1528  318B  239D  3194   	fcall	_init_i2c_lcd_5v
  2220                           
  2221                           ;Multi_RX_testjig_v2.c: 538: print_screen("Multi_RX", "Test-Jig|Startup");
  2222  152B  305B               	movlw	low (STR_1| (0+32768))
  2223  152C  00F4               	movwf	print_screen@top
  2224  152D  3093               	movlw	high (STR_1| (0+32768))
  2225  152E  00F5               	movwf	print_screen@top+1
  2226  152F  307D               	movlw	low (STR_2| (0+32768))
  2227  1530  00F6               	movwf	print_screen@bottom
  2228  1531  3090               	movlw	high (STR_2| (0+32768))
  2229  1532  00F7               	movwf	print_screen@bottom+1
  2230  1533  318A  22D3  3194   	fcall	_print_screen
  2231                           
  2232                           ;Multi_RX_testjig_v2.c: 539: RA4 = 1;
  2233  1536  0020               	movlb	0	; select bank0
  2234  1537  160C               	bsf	12,4	;volatile
  2235                           
  2236                           ;Multi_RX_testjig_v2.c: 540: GIE = 1;
  2237  1538  178B               	bsf	11,7	;volatile
  2238                           
  2239                           ;Multi_RX_testjig_v2.c: 541: LATC7 = 1;
  2240  1539  0022               	movlb	2	; select bank2
  2241  153A  178E               	bsf	14,7	;volatile
  2242                           
  2243                           ;Multi_RX_testjig_v2.c: 542: _delay((unsigned long)((100)*(16000000/4000.0)));
  2244  153B  3003               	movlw	3
  2245  153C  0020               	movlb	0	; select bank0
  2246  153D  00E3               	movwf	??_main+2
  2247  153E  3008               	movlw	8
  2248  153F  00E2               	movwf	??_main+1
  2249  1540  3078               	movlw	120
  2250  1541  00E1               	movwf	??_main
  2251  1542                     u5677:	
  2252  1542  0BE1               	decfsz	??_main,f
  2253  1543  2D42               	goto	u5677
  2254  1544  0BE2               	decfsz	??_main+1,f
  2255  1545  2D42               	goto	u5677
  2256  1546  0BE3               	decfsz	??_main+2,f
  2257  1547  2D42               	goto	u5677
  2258                           
  2259                           ;Multi_RX_testjig_v2.c: 543: debug_fast_tx(0xAAAA);
  2260  1548  30AA               	movlw	170
  2261  1549  00F0               	movwf	debug_fast_tx@data
  2262  154A  00F1               	movwf	debug_fast_tx@data+1
  2263  154B  318A  22A6  3194   	fcall	_debug_fast_tx
  2264                           
  2265                           ;Multi_RX_testjig_v2.c: 544: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2266  154E  3085               	movlw	133
  2267  154F  0020               	movlb	0	; select bank0
  2268  1550  00E1               	movwf	??_main
  2269  1551                     u5687:	
  2270  1551  0BE1               	decfsz	??_main,f
  2271  1552  2D51               	goto	u5687
  2272                           
  2273                           ;Multi_RX_testjig_v2.c: 545: debug_fast_tx(0x5555);
  2274  1553  3055               	movlw	85
  2275  1554  00F0               	movwf	debug_fast_tx@data
  2276  1555  00F1               	movwf	debug_fast_tx@data+1
  2277  1556  318A  22A6  3194   	fcall	_debug_fast_tx
  2278                           
  2279                           ;Multi_RX_testjig_v2.c: 546: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2280  1559  3085               	movlw	133
  2281  155A  0020               	movlb	0	; select bank0
  2282  155B  00E1               	movwf	??_main
  2283  155C                     u5697:	
  2284  155C  0BE1               	decfsz	??_main,f
  2285  155D  2D5C               	goto	u5697
  2286                           
  2287                           ;Multi_RX_testjig_v2.c: 548: RE0 = 0;
  2288  155E  0020               	movlb	0	; select bank0
  2289  155F  1010               	bcf	16,0	;volatile
  2290                           
  2291                           ;Multi_RX_testjig_v2.c: 550: if(PCONbits.nRMCLR == 1)
  2292  1560  0021               	movlb	1	; select bank1
  2293  1561  1D96               	btfss	22,3	;volatile
  2294  1562  2D68               	goto	l4202
  2295  1563  3002               	movlw	2
  2296                           
  2297                           ;Multi_RX_testjig_v2.c: 551: testjig_done(2, 0);
  2298  1564  01F8               	clrf	testjig_done@device_type
  2299  1565  3189  217D  3194   	fcall	_testjig_done
  2300  1568                     l4202:	
  2301                           
  2302                           ;Multi_RX_testjig_v2.c: 554: if(RF3 == 1)
  2303  1568  0025               	movlb	5	; select bank5
  2304  1569  1D8C               	btfss	12,3	;volatile
  2305  156A  2D76               	goto	l304
  2306                           
  2307                           ;Multi_RX_testjig_v2.c: 555: print_error("Multi_RX", "-> Insert PCB");
  2308  156B  305B               	movlw	low (STR_1| (0+32768))
  2309  156C  00F8               	movwf	print_error@top
  2310  156D  3093               	movlw	high (STR_1| (0+32768))
  2311  156E  00F9               	movwf	print_error@top+1
  2312  156F  3075               	movlw	low (STR_4| (0+32768))
  2313  1570  00FA               	movwf	print_error@bottom
  2314  1571  3091               	movlw	high (STR_4| (0+32768))
  2315  1572  00FB               	movwf	print_error@bottom+1
  2316  1573  318A  22F5  3194   	fcall	_print_error
  2317  1576                     l304:	
  2318                           
  2319                           ;Multi_RX_testjig_v2.c: 560: print_screen("Powering board", "");
  2320  1576  30FF               	movlw	low (STR_5| (0+32768))
  2321  1577  00F4               	movwf	print_screen@top
  2322  1578  3090               	movlw	high (STR_5| (0+32768))
  2323  1579  00F5               	movwf	print_screen@top+1
  2324  157A  30AE               	movlw	low ((STR_165+15)| (0+32768))
  2325  157B  00F6               	movwf	print_screen@bottom
  2326  157C  3090               	movlw	high ((STR_165+15)| (0+32768))
  2327  157D  00F7               	movwf	print_screen@bottom+1
  2328  157E  318A  22D3  3194   	fcall	_print_screen
  2329                           
  2330                           ;Multi_RX_testjig_v2.c: 564: Vout_set(12);
  2331  1581  300C               	movlw	12
  2332  1582  00F4               	movwf	Vout_set@Volts
  2333  1583  01F5               	clrf	Vout_set@Volts+1
  2334  1584  3188  20BE  3194   	fcall	_Vout_set
  2335                           
  2336                           ;Multi_RX_testjig_v2.c: 565: power_supply_set(0);
  2337  1587  3000               	movlw	0
  2338  1588  318B  23F3  3194   	fcall	_power_supply_set
  2339                           
  2340                           ;Multi_RX_testjig_v2.c: 566: _delay((unsigned long)((150)*(16000000/4000.0)));
  2341  158B  3004               	movlw	4
  2342  158C  0020               	movlb	0	; select bank0
  2343  158D  00E3               	movwf	??_main+2
  2344  158E  300C               	movlw	12
  2345  158F  00E2               	movwf	??_main+1
  2346  1590  3035               	movlw	53
  2347  1591  00E1               	movwf	??_main
  2348  1592                     u5707:	
  2349  1592  0BE1               	decfsz	??_main,f
  2350  1593  2D92               	goto	u5707
  2351  1594  0BE2               	decfsz	??_main+1,f
  2352  1595  2D92               	goto	u5707
  2353  1596  0BE3               	decfsz	??_main+2,f
  2354  1597  2D92               	goto	u5707
  2355  1598  3200               	nop2
  2356                           
  2357                           ;Multi_RX_testjig_v2.c: 567: ADC_val = ADC_get_val(0b01011111);
  2358  1599  305F               	movlw	95
  2359  159A  318C  245E  3194   	fcall	_ADC_get_val
  2360                           
  2361                           ;Multi_RX_testjig_v2.c: 568: testjig_timer = (unsigned int)(7518.8/2);
  2362  159D  30AF               	movlw	175
  2363  159E  00AE               	movwf	_testjig_timer^(0+128)	;volatile
  2364  159F  300E               	movlw	14
  2365  15A0  00AF               	movwf	(_testjig_timer^(0+128)+1)	;volatile
  2366  15A1  2DBC               	goto	l4212
  2367  15A2                     l4214:	
  2368  15A2  305F               	movlw	95
  2369  15A3  318C  245E  3194   	fcall	_ADC_get_val
  2370  15A6  3000               	movlw	0
  2371  15A7  0271               	subwf	?_ADC_get_val+1,w
  2372  15A8  307B               	movlw	123
  2373  15A9  1903               	skipnz
  2374  15AA  0270               	subwf	?_ADC_get_val,w
  2375  15AB  1C03               	skipc
  2376  15AC  2DC7               	goto	l4220
  2377  15AD  318C  2413  3194   	fcall	_get_30v_current
  2378  15B0  3000               	movlw	0
  2379  15B1  0258               	subwf	?_get_30v_current+1,w
  2380  15B2  301E               	movlw	30
  2381  15B3  1903               	skipnz
  2382  15B4  0257               	subwf	?_get_30v_current,w
  2383  15B5  1803               	skipnc
  2384  15B6  2DC7               	goto	l4220
  2385  15B7  0021               	movlb	1	; select bank1
  2386  15B8  082E               	movf	_testjig_timer^(0+128),w	;volatile
  2387  15B9  042F               	iorwf	(_testjig_timer+1)^(0+128),w	;volatile
  2388  15BA  1903               	btfsc	3,2
  2389  15BB  2DC7               	goto	l4220
  2390  15BC                     l4212:	
  2391                           ;Multi_RX_testjig_v2.c: 569: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08)) && (get_30v_current() < 30) && testjig_timer);
  2392                           
  2393  15BC  305F               	movlw	95
  2394  15BD  318C  245E  3194   	fcall	_ADC_get_val
  2395  15C0  3000               	movlw	0
  2396  15C1  0271               	subwf	?_ADC_get_val+1,w
  2397  15C2  3068               	movlw	104
  2398  15C3  1903               	skipnz
  2399  15C4  0270               	subwf	?_ADC_get_val,w
  2400  15C5  1C03               	btfss	3,0
  2401  15C6  2DA2               	goto	l4214
  2402  15C7                     l4220:	
  2403                           
  2404                           ;Multi_RX_testjig_v2.c: 570: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  2405  15C7  305F               	movlw	95
  2406  15C8  318C  245E  3194   	fcall	_ADC_get_val
  2407  15CB  3000               	movlw	0
  2408  15CC  0271               	subwf	?_ADC_get_val+1,w
  2409  15CD  3068               	movlw	104
  2410  15CE  1903               	skipnz
  2411  15CF  0270               	subwf	?_ADC_get_val,w
  2412  15D0  1803               	skipnc
  2413  15D1  2DDA               	goto	l4224
  2414                           
  2415                           ;Multi_RX_testjig_v2.c: 571: print_error("12v-5v supply", "Volt Error L");
  2416  15D2  30AD               	movlw	low (STR_7| (0+32768))
  2417  15D3  00F8               	movwf	print_error@top
  2418  15D4  3091               	movlw	high (STR_7| (0+32768))
  2419  15D5  00F9               	movwf	print_error@top+1
  2420  15D6  30FD               	movlw	low (STR_8| (0+32768))
  2421  15D7  00FA               	movwf	print_error@bottom
  2422  15D8  3091               	movlw	high (STR_8| (0+32768))
  2423  15D9  2E29               	goto	L1
  2424  15DA                     l4224:	
  2425                           
  2426                           ;Multi_RX_testjig_v2.c: 572: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  2427  15DA  305F               	movlw	95
  2428  15DB  318C  245E  3194   	fcall	_ADC_get_val
  2429  15DE  3000               	movlw	0
  2430  15DF  0271               	subwf	?_ADC_get_val+1,w
  2431  15E0  307B               	movlw	123
  2432  15E1  1903               	skipnz
  2433  15E2  0270               	subwf	?_ADC_get_val,w
  2434  15E3  1C03               	skipc
  2435  15E4  2DED               	goto	l4228
  2436                           
  2437                           ;Multi_RX_testjig_v2.c: 573: print_error("12v-5v supply", "Volt Error H");
  2438  15E5  30AD               	movlw	low (STR_7| (0+32768))
  2439  15E6  00F8               	movwf	print_error@top
  2440  15E7  3091               	movlw	high (STR_7| (0+32768))
  2441  15E8  00F9               	movwf	print_error@top+1
  2442  15E9  30E3               	movlw	low (STR_10| (0+32768))
  2443  15EA  00FA               	movwf	print_error@bottom
  2444  15EB  3091               	movlw	high (STR_10| (0+32768))
  2445  15EC  2E29               	goto	L1
  2446  15ED                     l4228:	
  2447                           
  2448                           ;Multi_RX_testjig_v2.c: 574: else if((get_30v_current() >= 60))
  2449  15ED  318C  2413  3194   	fcall	_get_30v_current
  2450  15F0  3000               	movlw	0
  2451  15F1  0258               	subwf	?_get_30v_current+1,w
  2452  15F2  303C               	movlw	60
  2453  15F3  1903               	skipnz
  2454  15F4  0257               	subwf	?_get_30v_current,w
  2455  15F5  1C03               	skipc
  2456  15F6  2E1D               	goto	l4236
  2457                           
  2458                           ;Multi_RX_testjig_v2.c: 575: {
  2459                           ;Multi_RX_testjig_v2.c: 576: lcd_print_int(get_30v_current(), 5, 0, 1);
  2460  15F7  318C  2413  3194   	fcall	_get_30v_current
  2461  15FA  0858               	movf	?_get_30v_current+1,w
  2462  15FB  00DC               	movwf	lcd_print_int@number+1
  2463  15FC  0857               	movf	?_get_30v_current,w
  2464  15FD  00DB               	movwf	lcd_print_int@number
  2465  15FE  3005               	movlw	5
  2466  15FF  00DD               	movwf	lcd_print_int@pos
  2467  1600  01DE               	clrf	lcd_print_int@pos+1
  2468  1601  01DF               	clrf	lcd_print_int@decimal
  2469  1602  01E0               	clrf	lcd_print_int@ten_thou_digit
  2470  1603  0AE0               	incf	lcd_print_int@ten_thou_digit,f
  2471  1604  3188  20F5  3194   	fcall	_lcd_print_int
  2472                           
  2473                           ;Multi_RX_testjig_v2.c: 577: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2474  1607  3015               	movlw	21
  2475  1608  0020               	movlb	0	; select bank0
  2476  1609  00E3               	movwf	??_main+2
  2477  160A  304B               	movlw	75
  2478  160B  00E2               	movwf	??_main+1
  2479  160C  30D1               	movlw	209
  2480  160D  00E1               	movwf	??_main
  2481  160E                     u5717:	
  2482  160E  0BE1               	decfsz	??_main,f
  2483  160F  2E0E               	goto	u5717
  2484  1610  0BE2               	decfsz	??_main+1,f
  2485  1611  2E0E               	goto	u5717
  2486  1612  0BE3               	decfsz	??_main+2,f
  2487  1613  2E0E               	goto	u5717
  2488  1614  0000               	nop
  2489                           
  2490                           ;Multi_RX_testjig_v2.c: 578: print_error("12v supply", "Curr Error");
  2491  1615  304E               	movlw	low ((STR_19+4)| (0+32768))
  2492  1616  00F8               	movwf	print_error@top
  2493  1617  3091               	movlw	high ((STR_19+4)| (0+32768))
  2494  1618  00F9               	movwf	print_error@top+1
  2495  1619  30AB               	movlw	low (STR_12| (0+32768))
  2496  161A  00FA               	movwf	print_error@bottom
  2497  161B  3092               	movlw	high (STR_12| (0+32768))
  2498  161C  2E29               	goto	L1
  2499  161D                     l4236:	
  2500                           ;Multi_RX_testjig_v2.c: 579: }
  2501                           
  2502                           
  2503                           ;Multi_RX_testjig_v2.c: 580: else if(testjig_timer == 0)
  2504  161D  0021               	movlb	1	; select bank1
  2505  161E  082E               	movf	_testjig_timer^(0+128),w	;volatile
  2506  161F  042F               	iorwf	(_testjig_timer+1)^(0+128),w	;volatile
  2507  1620  1D03               	btfss	3,2
  2508  1621  2E2D               	goto	l311
  2509                           
  2510                           ;Multi_RX_testjig_v2.c: 581: print_error("12v-5v supply", "T-out Error");
  2511  1622  30AD               	movlw	low (STR_7| (0+32768))
  2512  1623  00F8               	movwf	print_error@top
  2513  1624  3091               	movlw	high (STR_7| (0+32768))
  2514  1625  00F9               	movwf	print_error@top+1
  2515  1626  3093               	movlw	low (STR_14| (0+32768))
  2516  1627  00FA               	movwf	print_error@bottom
  2517  1628  3092               	movlw	high (STR_14| (0+32768))
  2518  1629                     L1:	
  2519  1629  00FB               	movwf	print_error@bottom+1
  2520  162A  318A  22F5  3194   	fcall	_print_error
  2521  162D                     l311:	
  2522                           
  2523                           ;Multi_RX_testjig_v2.c: 587: Vout_set(27);
  2524  162D  301B               	movlw	27
  2525  162E  00F4               	movwf	Vout_set@Volts
  2526  162F  01F5               	clrf	Vout_set@Volts+1
  2527  1630  3188  20BE  3194   	fcall	_Vout_set
  2528                           
  2529                           ;Multi_RX_testjig_v2.c: 588: power_supply_set(0);
  2530  1633  3000               	movlw	0
  2531  1634  318B  23F3  3194   	fcall	_power_supply_set
  2532                           
  2533                           ;Multi_RX_testjig_v2.c: 589: _delay((unsigned long)((2000)*(16000000/4000.0)));
  2534  1637  3029               	movlw	41
  2535  1638  0020               	movlb	0	; select bank0
  2536  1639  00E3               	movwf	??_main+2
  2537  163A  3096               	movlw	150
  2538  163B  00E2               	movwf	??_main+1
  2539  163C  30A6               	movlw	166
  2540  163D  00E1               	movwf	??_main
  2541  163E                     u5727:	
  2542  163E  0BE1               	decfsz	??_main,f
  2543  163F  2E3E               	goto	u5727
  2544  1640  0BE2               	decfsz	??_main+1,f
  2545  1641  2E3E               	goto	u5727
  2546  1642  0BE3               	decfsz	??_main+2,f
  2547  1643  2E3E               	goto	u5727
  2548                           
  2549                           ;Multi_RX_testjig_v2.c: 590: testjig_timer = (unsigned int)(7518.8/2);
  2550  1644  30AF               	movlw	175
  2551  1645  0021               	movlb	1	; select bank1
  2552  1646  00AE               	movwf	_testjig_timer^(0+128)	;volatile
  2553  1647  300E               	movlw	14
  2554  1648  00AF               	movwf	(_testjig_timer^(0+128)+1)	;volatile
  2555  1649  3196  2E7B         	goto	l4244
  2556                           
  2557                           	psect	swtext1
  2558  080C                     __pswtext1:	
  2559  080C                     S4906:	
  2560  080C  318B  2BF5         	ljmp	l708
  2561  080E  318B  2BF9         	ljmp	l710
  2562  0810  318B  2BFE         	ljmp	l711
  2563  0812  318C  2C03         	ljmp	l712
  2564                           
  2565                           	psect	text12
  2566  13EC                     __ptext12:	
  2567 ;; *************** function _ten_thou_conv *****************
  2568 ;; Defined at:
  2569 ;;		line 1585 in file "Multi_RX_testjig_v2.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  n               2    6[COMMON] int 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;		None
  2574 ;; Return value:  Size  Location     Type
  2575 ;;		None               void
  2576 ;; Registers used:
  2577 ;;		wreg, status,2, status,0, pclath, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 1F/0
  2580 ;;		On exit  : 1F/1
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2583 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2585 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2586 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2587 ;;Total ram usage:        5 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:    2
  2590 ;; This function calls:
  2591 ;;		___bmul
  2592 ;;		___wmul
  2593 ;; This function is called by:
  2594 ;;		_lcd_print_int
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           
  2599                           ;psect for function _ten_thou_conv
  2600  13EC                     _ten_thou_conv:	
  2601                           
  2602                           ;Multi_RX_testjig_v2.c: 1587: unit = n & 0x1F;
  2603                           
  2604                           ;incstack = 0
  2605                           ; Regs used in _ten_thou_conv: [wreg+status,2+status,0+pclath+cstack]
  2606  13EC  0876               	movf	ten_thou_conv@n,w
  2607  13ED  0021               	movlb	1	; select bank1
  2608  13EE  00B7               	movwf	_unit^(0+128)
  2609  13EF  301F               	movlw	31
  2610  13F0  05B7               	andwf	_unit^(0+128),f
  2611                           
  2612                           ;Multi_RX_testjig_v2.c: 1588: ten = (n >> 5) & 0xF;
  2613  13F1  0877               	movf	ten_thou_conv@n+1,w
  2614  13F2  00F9               	movwf	??_ten_thou_conv+1
  2615  13F3  0876               	movf	ten_thou_conv@n,w
  2616  13F4  00F8               	movwf	??_ten_thou_conv
  2617  13F5  3005               	movlw	5
  2618  13F6  00FA               	movwf	??_ten_thou_conv+2
  2619  13F7                     u3135:	
  2620  13F7  0D79               	rlf	??_ten_thou_conv+1,w
  2621  13F8  0CF9               	rrf	??_ten_thou_conv+1,f
  2622  13F9  0CF8               	rrf	??_ten_thou_conv,f
  2623  13FA  0BFA               	decfsz	??_ten_thou_conv+2,f
  2624  13FB  2BF7               	goto	u3135
  2625  13FC  0878               	movf	??_ten_thou_conv,w
  2626  13FD  00B6               	movwf	_ten^(0+128)
  2627  13FE  300F               	movlw	15
  2628  13FF  05B6               	andwf	_ten^(0+128),f
  2629                           
  2630                           ;Multi_RX_testjig_v2.c: 1589: hund = (n >> 9) & 0xF;
  2631  1400  0877               	movf	ten_thou_conv@n+1,w
  2632  1401  00F9               	movwf	??_ten_thou_conv+1
  2633  1402  0876               	movf	ten_thou_conv@n,w
  2634  1403  00F8               	movwf	??_ten_thou_conv
  2635  1404  3009               	movlw	9
  2636  1405  00FA               	movwf	??_ten_thou_conv+2
  2637  1406                     u3145:	
  2638  1406  0D79               	rlf	??_ten_thou_conv+1,w
  2639  1407  0CF9               	rrf	??_ten_thou_conv+1,f
  2640  1408  0CF8               	rrf	??_ten_thou_conv,f
  2641  1409  0BFA               	decfsz	??_ten_thou_conv+2,f
  2642  140A  2C06               	goto	u3145
  2643  140B  0878               	movf	??_ten_thou_conv,w
  2644  140C  00B4               	movwf	_hund^(0+128)
  2645  140D  300F               	movlw	15
  2646  140E  05B4               	andwf	_hund^(0+128),f
  2647                           
  2648                           ;Multi_RX_testjig_v2.c: 1590: thou = (n >> 13) & 0x7;
  2649  140F  0877               	movf	ten_thou_conv@n+1,w
  2650  1410  00F9               	movwf	??_ten_thou_conv+1
  2651  1411  0876               	movf	ten_thou_conv@n,w
  2652  1412  00F8               	movwf	??_ten_thou_conv
  2653  1413  300D               	movlw	13
  2654  1414  00FA               	movwf	??_ten_thou_conv+2
  2655  1415                     u3155:	
  2656  1415  0D79               	rlf	??_ten_thou_conv+1,w
  2657  1416  0CF9               	rrf	??_ten_thou_conv+1,f
  2658  1417  0CF8               	rrf	??_ten_thou_conv,f
  2659  1418  0BFA               	decfsz	??_ten_thou_conv+2,f
  2660  1419  2C15               	goto	u3155
  2661  141A  0878               	movf	??_ten_thou_conv,w
  2662  141B  00B8               	movwf	_thou^(0+128)
  2663  141C  3007               	movlw	7
  2664  141D  05B8               	andwf	_thou^(0+128),f
  2665                           
  2666                           ;Multi_RX_testjig_v2.c: 1592: unit = 2 * (thou + hund + ten) + unit;
  2667  141E  0838               	movf	_thou^(0+128),w
  2668  141F  0734               	addwf	_hund^(0+128),w
  2669  1420  0736               	addwf	_ten^(0+128),w
  2670  1421  0709               	addwf	9,w
  2671  1422  07B7               	addwf	_unit^(0+128),f
  2672                           
  2673                           ;Multi_RX_testjig_v2.c: 1593: ten_thou = (unit * 0x67) >> 10;
  2674  1423  0837               	movf	_unit^(0+128),w
  2675  1424  00F0               	movwf	___wmul@multiplier
  2676  1425  3067               	movlw	103
  2677  1426  01F1               	clrf	___wmul@multiplier+1
  2678  1427  00F2               	movwf	___wmul@multiplicand
  2679  1428  01F3               	clrf	___wmul@multiplicand+1
  2680  1429  24CF  3193         	fcall	___wmul
  2681  142B  0870               	movf	?___wmul,w
  2682  142C  00F8               	movwf	??_ten_thou_conv
  2683  142D  0871               	movf	?___wmul+1,w
  2684  142E  00F9               	movwf	??_ten_thou_conv+1
  2685  142F  300A               	movlw	10
  2686  1430  00FA               	movwf	??_ten_thou_conv+2
  2687  1431                     u3165:	
  2688  1431  0D79               	rlf	??_ten_thou_conv+1,w
  2689  1432  0CF9               	rrf	??_ten_thou_conv+1,f
  2690  1433  0CF8               	rrf	??_ten_thou_conv,f
  2691  1434  0BFA               	decfsz	??_ten_thou_conv+2,f
  2692  1435  2C31               	goto	u3165
  2693  1436  0878               	movf	??_ten_thou_conv,w
  2694  1437  0020               	movlb	0	; select bank0
  2695  1438  00EF               	movwf	_ten_thou
  2696                           
  2697                           ;Multi_RX_testjig_v2.c: 1594: unit = unit - 10 * ten_thou;
  2698  1439  30F6               	movlw	246
  2699  143A  00F0               	movwf	___bmul@multiplicand
  2700  143B  086F               	movf	_ten_thou,w
  2701  143C  24AC  3193         	fcall	___bmul
  2702  143E  0021               	movlb	1	; select bank1
  2703  143F  07B7               	addwf	_unit^(0+128),f
  2704                           
  2705                           ;Multi_RX_testjig_v2.c: 1596: ten = 9 * thou + hund + 3 * ten + ten_thou;
  2706  1440  3009               	movlw	9
  2707  1441  00F0               	movwf	___bmul@multiplicand
  2708  1442  0838               	movf	_thou^(0+128),w
  2709  1443  24AC  3193         	fcall	___bmul
  2710  1445  00F8               	movwf	??_ten_thou_conv
  2711  1446  0021               	movlb	1	; select bank1
  2712  1447  0836               	movf	_ten^(0+128),w
  2713  1448  0736               	addwf	_ten^(0+128),w
  2714  1449  0736               	addwf	_ten^(0+128),w
  2715  144A  0778               	addwf	??_ten_thou_conv,w
  2716  144B  0734               	addwf	_hund^(0+128),w
  2717  144C  0020               	movlb	0	; select bank0
  2718  144D  076F               	addwf	_ten_thou,w
  2719  144E  0021               	movlb	1	; select bank1
  2720  144F  00B6               	movwf	_ten^(0+128)
  2721                           
  2722                           ;Multi_RX_testjig_v2.c: 1597: ten_thou = (ten * 0x67) >> 10;
  2723  1450  00F0               	movwf	___wmul@multiplier
  2724  1451  3067               	movlw	103
  2725  1452  01F1               	clrf	___wmul@multiplier+1
  2726  1453  00F2               	movwf	___wmul@multiplicand
  2727  1454  01F3               	clrf	___wmul@multiplicand+1
  2728  1455  24CF  3193         	fcall	___wmul
  2729  1457  0870               	movf	?___wmul,w
  2730  1458  00F8               	movwf	??_ten_thou_conv
  2731  1459  0871               	movf	?___wmul+1,w
  2732  145A  00F9               	movwf	??_ten_thou_conv+1
  2733  145B  300A               	movlw	10
  2734  145C  00FA               	movwf	??_ten_thou_conv+2
  2735  145D                     u3175:	
  2736  145D  0D79               	rlf	??_ten_thou_conv+1,w
  2737  145E  0CF9               	rrf	??_ten_thou_conv+1,f
  2738  145F  0CF8               	rrf	??_ten_thou_conv,f
  2739  1460  0BFA               	decfsz	??_ten_thou_conv+2,f
  2740  1461  2C5D               	goto	u3175
  2741  1462  0878               	movf	??_ten_thou_conv,w
  2742  1463  0020               	movlb	0	; select bank0
  2743  1464  00EF               	movwf	_ten_thou
  2744                           
  2745                           ;Multi_RX_testjig_v2.c: 1598: ten = ten - 10 * ten_thou;
  2746  1465  30F6               	movlw	246
  2747  1466  00F0               	movwf	___bmul@multiplicand
  2748  1467  086F               	movf	_ten_thou,w
  2749  1468  24AC  3193         	fcall	___bmul
  2750  146A  0021               	movlb	1	; select bank1
  2751  146B  07B6               	addwf	_ten^(0+128),f
  2752                           
  2753                           ;Multi_RX_testjig_v2.c: 1600: hund = thou + 5 * hund + ten_thou;
  2754  146C  3005               	movlw	5
  2755  146D  00F0               	movwf	___bmul@multiplicand
  2756  146E  0834               	movf	_hund^(0+128),w
  2757  146F  24AC  3193         	fcall	___bmul
  2758  1471  0021               	movlb	1	; select bank1
  2759  1472  0738               	addwf	_thou^(0+128),w
  2760  1473  0020               	movlb	0	; select bank0
  2761  1474  076F               	addwf	_ten_thou,w
  2762  1475  0021               	movlb	1	; select bank1
  2763  1476  00B4               	movwf	_hund^(0+128)
  2764                           
  2765                           ;Multi_RX_testjig_v2.c: 1601: ten_thou = (hund * 0x67) >> 10;
  2766  1477  00F0               	movwf	___wmul@multiplier
  2767  1478  3067               	movlw	103
  2768  1479  01F1               	clrf	___wmul@multiplier+1
  2769  147A  00F2               	movwf	___wmul@multiplicand
  2770  147B  01F3               	clrf	___wmul@multiplicand+1
  2771  147C  24CF  3193         	fcall	___wmul
  2772  147E  0870               	movf	?___wmul,w
  2773  147F  00F8               	movwf	??_ten_thou_conv
  2774  1480  0871               	movf	?___wmul+1,w
  2775  1481  00F9               	movwf	??_ten_thou_conv+1
  2776  1482  300A               	movlw	10
  2777  1483  00FA               	movwf	??_ten_thou_conv+2
  2778  1484                     u3185:	
  2779  1484  0D79               	rlf	??_ten_thou_conv+1,w
  2780  1485  0CF9               	rrf	??_ten_thou_conv+1,f
  2781  1486  0CF8               	rrf	??_ten_thou_conv,f
  2782  1487  0BFA               	decfsz	??_ten_thou_conv+2,f
  2783  1488  2C84               	goto	u3185
  2784  1489  0878               	movf	??_ten_thou_conv,w
  2785  148A  0020               	movlb	0	; select bank0
  2786  148B  00EF               	movwf	_ten_thou
  2787                           
  2788                           ;Multi_RX_testjig_v2.c: 1602: hund = hund - 10 * ten_thou;
  2789  148C  30F6               	movlw	246
  2790  148D  00F0               	movwf	___bmul@multiplicand
  2791  148E  086F               	movf	_ten_thou,w
  2792  148F  24AC  3193         	fcall	___bmul
  2793  1491  0021               	movlb	1	; select bank1
  2794  1492  07B4               	addwf	_hund^(0+128),f
  2795                           
  2796                           ;Multi_RX_testjig_v2.c: 1604: thou = 8 * thou + ten_thou;
  2797  1493  0838               	movf	_thou^(0+128),w
  2798  1494  0709               	addwf	9,w
  2799  1495  0709               	addwf	9,w
  2800  1496  0709               	addwf	9,w
  2801  1497  0020               	movlb	0	; select bank0
  2802  1498  076F               	addwf	_ten_thou,w
  2803  1499  0021               	movlb	1	; select bank1
  2804  149A  00B8               	movwf	_thou^(0+128)
  2805                           
  2806                           ;Multi_RX_testjig_v2.c: 1605: ten_thou = (thou * 0x1A) >> 8;
  2807  149B  00F0               	movwf	___wmul@multiplier
  2808  149C  301A               	movlw	26
  2809  149D  01F1               	clrf	___wmul@multiplier+1
  2810  149E  00F2               	movwf	___wmul@multiplicand
  2811  149F  01F3               	clrf	___wmul@multiplicand+1
  2812  14A0  24CF  3193         	fcall	___wmul
  2813  14A2  0871               	movf	?___wmul+1,w
  2814  14A3  0020               	movlb	0	; select bank0
  2815  14A4  00EF               	movwf	_ten_thou
  2816                           
  2817                           ;Multi_RX_testjig_v2.c: 1606: thou = thou - 10 * ten_thou;
  2818  14A5  30F6               	movlw	246
  2819  14A6  00F0               	movwf	___bmul@multiplicand
  2820  14A7  086F               	movf	_ten_thou,w
  2821  14A8  24AC               	fcall	___bmul
  2822  14A9  0021               	movlb	1	; select bank1
  2823  14AA  07B8               	addwf	_thou^(0+128),f
  2824  14AB  0008               	return
  2825  14AC                     __end_of_ten_thou_conv:	
  2826  14AC                     __ptext14:	
  2827 ;; *************** function ___bmul *****************
  2828 ;; Defined at:
  2829 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  multiplier      1    wreg     unsigned char 
  2832 ;;  multiplicand    1    0[COMMON] unsigned char 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  multiplier      1    2[COMMON] unsigned char 
  2835 ;;  product         1    1[COMMON] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      unsigned char 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0
  2840 ;; Tracked objects:
  2841 ;;		On entry : 1E/0
  2842 ;;		On exit  : 1E/0
  2843 ;;		Unchanged: 1E/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2845 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2848 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2849 ;;Total ram usage:        3 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    1
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_ten_thou_conv
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           
  2860                           ;psect for function ___bmul
  2861  14AC                     ___bmul:	
  2862                           
  2863                           ;incstack = 0
  2864                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2865                           ;___bmul@multiplier stored from wreg
  2866  14AC  00F2               	movwf	___bmul@multiplier
  2867  14AD  01F1               	clrf	___bmul@product
  2868  14AE  0870               	movf	___bmul@multiplicand,w
  2869  14AF  1872               	btfsc	___bmul@multiplier,0
  2870  14B0  07F1               	addwf	___bmul@product,f
  2871  14B1  35F0               	lslf	___bmul@multiplicand,f
  2872  14B2  0870               	movf	___bmul@multiplicand,w
  2873  14B3  18F2               	btfsc	___bmul@multiplier,1
  2874  14B4  07F1               	addwf	___bmul@product,f
  2875  14B5  35F0               	lslf	___bmul@multiplicand,f
  2876  14B6  0870               	movf	___bmul@multiplicand,w
  2877  14B7  1972               	btfsc	___bmul@multiplier,2
  2878  14B8  07F1               	addwf	___bmul@product,f
  2879  14B9  35F0               	lslf	___bmul@multiplicand,f
  2880  14BA  0870               	movf	___bmul@multiplicand,w
  2881  14BB  19F2               	btfsc	___bmul@multiplier,3
  2882  14BC  07F1               	addwf	___bmul@product,f
  2883  14BD  35F0               	lslf	___bmul@multiplicand,f
  2884  14BE  0870               	movf	___bmul@multiplicand,w
  2885  14BF  1A72               	btfsc	___bmul@multiplier,4
  2886  14C0  07F1               	addwf	___bmul@product,f
  2887  14C1  35F0               	lslf	___bmul@multiplicand,f
  2888  14C2  0870               	movf	___bmul@multiplicand,w
  2889  14C3  1AF2               	btfsc	___bmul@multiplier,5
  2890  14C4  07F1               	addwf	___bmul@product,f
  2891  14C5  35F0               	lslf	___bmul@multiplicand,f
  2892  14C6  0870               	movf	___bmul@multiplicand,w
  2893  14C7  1B72               	btfsc	___bmul@multiplier,6
  2894  14C8  07F1               	addwf	___bmul@product,f
  2895  14C9  35F0               	lslf	___bmul@multiplicand,f
  2896  14CA  0870               	movf	___bmul@multiplicand,w
  2897  14CB  1BF2               	btfsc	___bmul@multiplier,7
  2898  14CC  07F1               	addwf	___bmul@product,f
  2899  14CD  0871               	movf	___bmul@product,w
  2900  14CE  0008               	return
  2901  14CF                     __end_of___bmul:	
  2902  14CF                     __ptext13:	
  2903 ;; *************** function ___wmul *****************
  2904 ;; Defined at:
  2905 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  multiplier      2    0[COMMON] unsigned int 
  2908 ;;  multiplicand    2    2[COMMON] unsigned int 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  product         2    4[COMMON] unsigned int 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  2    0[COMMON] unsigned int 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0
  2915 ;; Tracked objects:
  2916 ;;		On entry : 1F/1
  2917 ;;		On exit  : 1F/1
  2918 ;;		Unchanged: 1F/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2921 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2923 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2924 ;;Total ram usage:        6 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    1
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_ten_thou_conv
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           
  2935                           ;psect for function ___wmul
  2936  14CF                     ___wmul:	
  2937                           
  2938                           ;incstack = 0
  2939                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2940  14CF  01F4               	clrf	___wmul@product
  2941  14D0  01F5               	clrf	___wmul@product+1
  2942  14D1                     l3102:	
  2943  14D1  1C70               	btfss	___wmul@multiplier,0
  2944  14D2  2CD7               	goto	l3106
  2945  14D3  0872               	movf	___wmul@multiplicand,w
  2946  14D4  07F4               	addwf	___wmul@product,f
  2947  14D5  0873               	movf	___wmul@multiplicand+1,w
  2948  14D6  3DF5               	addwfc	___wmul@product+1,f
  2949  14D7                     l3106:	
  2950  14D7  35F2               	lslf	___wmul@multiplicand,f
  2951  14D8  0DF3               	rlf	___wmul@multiplicand+1,f
  2952  14D9  36F1               	lsrf	___wmul@multiplier+1,f
  2953  14DA  0CF0               	rrf	___wmul@multiplier,f
  2954  14DB  0870               	movf	___wmul@multiplier,w
  2955  14DC  0471               	iorwf	___wmul@multiplier+1,w
  2956  14DD  1D03               	btfss	3,2
  2957  14DE  2CD1               	goto	l3102
  2958  14DF  0875               	movf	___wmul@product+1,w
  2959  14E0  00F1               	movwf	?___wmul+1
  2960  14E1  0874               	movf	___wmul@product,w
  2961  14E2  00F0               	movwf	?___wmul
  2962  14E3  0008               	return
  2963  14E4                     __end_of___wmul:	
  2964                           
  2965                           	psect	text18
  2966  08A7                     __ptext18:	
  2967 ;; *************** function _init_i2c *****************
  2968 ;; Defined at:
  2969 ;;		line 2033 in file "Multi_RX_testjig_v2.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;		None               void
  2976 ;; Registers used:
  2977 ;;		wreg
  2978 ;; Tracked objects:
  2979 ;;		On entry : B1F/0
  2980 ;;		On exit  : 1F/4
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2985 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2986 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2987 ;;Total ram usage:        3 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    1
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		_main
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           
  2998                           ;psect for function _init_i2c
  2999  08A7                     _init_i2c:	
  3000                           
  3001                           ;Multi_RX_testjig_v2.c: 2035: RA5 = 1;
  3002                           
  3003                           ;incstack = 0
  3004                           ; Regs used in _init_i2c: [wreg]
  3005  08A7  168C               	bsf	12,5	;volatile
  3006                           
  3007                           ;Multi_RX_testjig_v2.c: 2036: _delay((unsigned long)((200)*(16000000/4000.0)));
  3008  08A8  3005               	movlw	5
  3009  08A9  00F2               	movwf	??_init_i2c+2
  3010  08AA  300F               	movlw	15
  3011  08AB  00F1               	movwf	??_init_i2c+1
  3012  08AC  30F4               	movlw	244
  3013  08AD  00F0               	movwf	??_init_i2c
  3014  08AE                     u6227:	
  3015  08AE  0BF0               	decfsz	??_init_i2c,f
  3016  08AF  28AE               	goto	u6227
  3017  08B0  0BF1               	decfsz	??_init_i2c+1,f
  3018  08B1  28AE               	goto	u6227
  3019  08B2  0BF2               	decfsz	??_init_i2c+2,f
  3020  08B3  28AE               	goto	u6227
  3021                           
  3022                           ;Multi_RX_testjig_v2.c: 2037: TRISC3 = 1;
  3023  08B4  0021               	movlb	1	; select bank1
  3024  08B5  158E               	bsf	14,3	;volatile
  3025                           
  3026                           ;Multi_RX_testjig_v2.c: 2038: TRISC4 = 1;
  3027  08B6  160E               	bsf	14,4	;volatile
  3028                           
  3029                           ;Multi_RX_testjig_v2.c: 2039: SSP1STAT |= 0x80;
  3030  08B7  0024               	movlb	4	; select bank4
  3031  08B8  1794               	bsf	20,7	;volatile
  3032                           
  3033                           ;Multi_RX_testjig_v2.c: 2040: SSP1CON1 = 0x28;
  3034  08B9  3028               	movlw	40
  3035  08BA  0095               	movwf	21	;volatile
  3036                           
  3037                           ;Multi_RX_testjig_v2.c: 2041: SSP1ADD = 0x22;
  3038  08BB  3022               	movlw	34
  3039  08BC  0092               	movwf	18	;volatile
  3040  08BD  0008               	return
  3041  08BE                     __end_of_init_i2c:	
  3042                           
  3043                           	psect	text19
  3044  0892                     __ptext19:	
  3045 ;; *************** function _init_current_sink *****************
  3046 ;; Defined at:
  3047 ;;		line 2062 in file "Multi_RX_testjig_v2.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;		None
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;		None               void
  3054 ;; Registers used:
  3055 ;;		wreg, status,2
  3056 ;; Tracked objects:
  3057 ;;		On entry : B1F/1
  3058 ;;		On exit  : B1F/C
  3059 ;;		Unchanged: B00/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3065 ;;Total ram usage:        0 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    1
  3068 ;; This function calls:
  3069 ;;		Nothing
  3070 ;; This function is called by:
  3071 ;;		_main
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           
  3076                           ;psect for function _init_current_sink
  3077  0892                     _init_current_sink:	
  3078                           
  3079                           ;Multi_RX_testjig_v2.c: 2064: T2CON = 0b00000110;
  3080                           
  3081                           ;incstack = 0
  3082                           ; Regs used in _init_current_sink: [wreg+status,2]
  3083  0892  3006               	movlw	6
  3084  0893  0020               	movlb	0	; select bank0
  3085  0894  009C               	movwf	28	;volatile
  3086                           
  3087                           ;Multi_RX_testjig_v2.c: 2065: PR2 = 0xFA;
  3088  0895  30FA               	movlw	250
  3089  0896  009B               	movwf	27	;volatile
  3090                           
  3091                           ;Multi_RX_testjig_v2.c: 2066: PIE1bits.TMR2IE = 1;
  3092  0897  0021               	movlb	1	; select bank1
  3093  0898  1491               	bsf	17,1	;volatile
  3094                           
  3095                           ;Multi_RX_testjig_v2.c: 2068: T8CON = 0b00000100;
  3096  0899  3004               	movlw	4
  3097  089A  002B               	movlb	11	; select bank11
  3098  089B  0097               	movwf	23	;volatile
  3099                           
  3100                           ;Multi_RX_testjig_v2.c: 2069: PR8 = 0xFF;
  3101  089C  30FF               	movlw	255
  3102  089D  0096               	movwf	22	;volatile
  3103                           
  3104                           ;Multi_RX_testjig_v2.c: 2070: CCP9CON = 0b00001100;
  3105  089E  300C               	movlw	12
  3106  089F  002C               	movlb	12	; select bank12
  3107  08A0  009C               	movwf	28	;volatile
  3108                           
  3109                           ;Multi_RX_testjig_v2.c: 2071: CCPTMRS2 = 0b00000001;
  3110  08A1  3001               	movlw	1
  3111  08A2  0025               	movlb	5	; select bank5
  3112  08A3  009F               	movwf	31	;volatile
  3113                           
  3114                           ;Multi_RX_testjig_v2.c: 2072: CCPR9L = 0x00;
  3115  08A4  002C               	movlb	12	; select bank12
  3116  08A5  019A               	clrf	26	;volatile
  3117  08A6  0008               	return
  3118  08A7                     __end_of_init_current_sink:	
  3119                           
  3120                           	psect	text20
  3121  088B                     __ptext20:	
  3122 ;; *************** function _init_ADC *****************
  3123 ;; Defined at:
  3124 ;;		line 2044 in file "Multi_RX_testjig_v2.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;		None               void
  3131 ;; Registers used:
  3132 ;;		wreg
  3133 ;; Tracked objects:
  3134 ;;		On entry : B1F/8
  3135 ;;		On exit  : B1F/1
  3136 ;;		Unchanged: B00/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    1
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_main
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           
  3153                           ;psect for function _init_ADC
  3154  088B                     _init_ADC:	
  3155                           
  3156                           ;Multi_RX_testjig_v2.c: 2046: FVRCON = 0b10000011;
  3157                           
  3158                           ;incstack = 0
  3159                           ; Regs used in _init_ADC: [wreg]
  3160  088B  3083               	movlw	131
  3161  088C  0022               	movlb	2	; select bank2
  3162  088D  0097               	movwf	23	;volatile
  3163                           
  3164                           ;Multi_RX_testjig_v2.c: 2048: ADCON1 = 0b10100011;
  3165  088E  30A3               	movlw	163
  3166  088F  0021               	movlb	1	; select bank1
  3167  0890  009E               	movwf	30	;volatile
  3168  0891  0008               	return
  3169  0892                     __end_of_init_ADC:	
  3170                           
  3171                           	psect	text21
  3172  0C13                     __ptext21:	
  3173 ;; *************** function _get_30v_current *****************
  3174 ;; Defined at:
  3175 ;;		line 2105 in file "Multi_RX_testjig_v2.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  temp            2   57[BANK0 ] unsigned int 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  2   55[BANK0 ] unsigned int 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0, pclath, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 1A/1
  3186 ;;		On exit  : 1F/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3189 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3190 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3192 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3193 ;;Total ram usage:        4 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    3
  3196 ;; This function calls:
  3197 ;;		_ADC_get_val
  3198 ;;		___fladd
  3199 ;;		___flmul
  3200 ;;		___fltol
  3201 ;;		___xxtofl
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           
  3208                           ;psect for function _get_30v_current
  3209  0C13                     _get_30v_current:	
  3210                           
  3211                           ;Multi_RX_testjig_v2.c: 2107: unsigned int temp;
  3212                           ;Multi_RX_testjig_v2.c: 2108: temp = ADC_get_val(0b01010011);
  3213                           
  3214                           ;incstack = 0
  3215                           ; Regs used in _get_30v_current: [wreg+status,2+status,0+pclath+cstack]
  3216  0C13  3053               	movlw	83
  3217  0C14  245E  318C         	fcall	_ADC_get_val
  3218  0C16  0871               	movf	?_ADC_get_val+1,w
  3219  0C17  0020               	movlb	0	; select bank0
  3220  0C18  00DA               	movwf	get_30v_current@temp+1
  3221  0C19  0870               	movf	?_ADC_get_val,w
  3222  0C1A  00D9               	movwf	get_30v_current@temp
  3223                           
  3224                           ;Multi_RX_testjig_v2.c: 2109: if(temp > 4)
  3225  0C1B  3000               	movlw	0
  3226  0C1C  025A               	subwf	get_30v_current@temp+1,w
  3227  0C1D  3005               	movlw	5
  3228  0C1E  1903               	skipnz
  3229  0C1F  0259               	subwf	get_30v_current@temp,w
  3230  0C20  1C03               	skipc
  3231  0C21  2C5B               	goto	l3924
  3232                           
  3233                           ;Multi_RX_testjig_v2.c: 2110: return ( temp * 3.4) - 16;
  3234  0C22  0859               	movf	get_30v_current@temp,w
  3235  0C23  00F0               	movwf	___xxtofl@val
  3236  0C24  085A               	movf	get_30v_current@temp+1,w
  3237  0C25  00F1               	movwf	___xxtofl@val+1
  3238  0C26  3000               	movlw	0
  3239  0C27  01F2               	clrf	___xxtofl@val+2
  3240  0C28  01F3               	clrf	___xxtofl@val+3
  3241  0C29  278C  318C         	fcall	___xxtofl
  3242  0C2B  0873               	movf	?___xxtofl+3,w
  3243  0C2C  00A7               	movwf	___flmul@a+3
  3244  0C2D  0872               	movf	?___xxtofl+2,w
  3245  0C2E  00A6               	movwf	___flmul@a+2
  3246  0C2F  0871               	movf	?___xxtofl+1,w
  3247  0C30  00A5               	movwf	___flmul@a+1
  3248  0C31  0870               	movf	?___xxtofl,w
  3249  0C32  00A4               	movwf	___flmul@a
  3250  0C33  3040               	movlw	64
  3251  0C34  00A3               	movwf	___flmul@b+3
  3252  0C35  3059               	movlw	89
  3253  0C36  00A2               	movwf	___flmul@b+2
  3254  0C37  3099               	movlw	153
  3255  0C38  00A1               	movwf	___flmul@b+1
  3256  0C39  309A               	movlw	154
  3257  0C3A  00A0               	movwf	___flmul@b
  3258  0C3B  25C1  318C         	fcall	___flmul
  3259  0C3D  0823               	movf	?___flmul+3,w
  3260  0C3E  00C0               	movwf	___fladd@a+3
  3261  0C3F  0822               	movf	?___flmul+2,w
  3262  0C40  00BF               	movwf	___fladd@a+2
  3263  0C41  0821               	movf	?___flmul+1,w
  3264  0C42  00BE               	movwf	___fladd@a+1
  3265  0C43  0820               	movf	?___flmul,w
  3266  0C44  00BD               	movwf	___fladd@a
  3267  0C45  30C1               	movlw	193
  3268  0C46  00BC               	movwf	___fladd@b+3
  3269  0C47  3080               	movlw	128
  3270  0C48  00BB               	movwf	___fladd@b+2
  3271  0C49  01BA               	clrf	___fladd@b+1
  3272  0C4A  01B9               	clrf	___fladd@b
  3273  0C4B  2470               	fcall	___fladd
  3274  0C4C  083C               	movf	?___fladd+3,w
  3275  0C4D  00D0               	movwf	___fltol@f1+3
  3276  0C4E  083B               	movf	?___fladd+2,w
  3277  0C4F  00CF               	movwf	___fltol@f1+2
  3278  0C50  083A               	movf	?___fladd+1,w
  3279  0C51  00CE               	movwf	___fltol@f1+1
  3280  0C52  0839               	movf	?___fladd,w
  3281  0C53  00CD               	movwf	___fltol@f1
  3282  0C54  3187  2731         	fcall	___fltol
  3283  0C56  084E               	movf	?___fltol+1,w
  3284  0C57  00D8               	movwf	?_get_30v_current+1
  3285  0C58  084D               	movf	?___fltol,w
  3286  0C59  00D7               	movwf	?_get_30v_current
  3287  0C5A  0008               	return
  3288  0C5B                     l3924:	
  3289                           
  3290                           ;Multi_RX_testjig_v2.c: 2111: else
  3291                           ;Multi_RX_testjig_v2.c: 2112: return 0;
  3292  0C5B  01D7               	clrf	?_get_30v_current
  3293  0C5C  01D8               	clrf	?_get_30v_current+1
  3294  0C5D  0008               	return
  3295  0C5E                     __end_of_get_30v_current:	
  3296  0C5E                     __ptext27:	
  3297 ;; *************** function _ADC_get_val *****************
  3298 ;; Defined at:
  3299 ;;		line 2051 in file "Multi_RX_testjig_v2.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  channel         1    wreg     unsigned char 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  channel         1    3[COMMON] unsigned char 
  3304 ;;  return_val      2    4[COMMON] unsigned int 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  2    0[COMMON] unsigned int 
  3307 ;; Registers used:
  3308 ;;		wreg
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/5
  3311 ;;		On exit  : 1F/1
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3314 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3315 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3317 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3318 ;;Total ram usage:        6 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    1
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		_main
  3325 ;;		_get_30v_current
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           
  3330                           ;psect for function _ADC_get_val
  3331  0C5E                     _ADC_get_val:	
  3332                           
  3333                           ;incstack = 0
  3334                           ; Regs used in _ADC_get_val: [wreg]
  3335                           ;ADC_get_val@channel stored from wreg
  3336  0C5E  00F3               	movwf	ADC_get_val@channel
  3337                           
  3338                           ;Multi_RX_testjig_v2.c: 2053: unsigned int return_val;
  3339                           ;Multi_RX_testjig_v2.c: 2054: GIE = 0;
  3340  0C5F  138B               	bcf	11,7	;volatile
  3341                           
  3342                           ;Multi_RX_testjig_v2.c: 2055: ADCON0 = channel;
  3343  0C60  0873               	movf	ADC_get_val@channel,w
  3344  0C61  0021               	movlb	1	; select bank1
  3345  0C62  009D               	movwf	29	;volatile
  3346  0C63                     l698:	
  3347                           ;Multi_RX_testjig_v2.c: 2056: while(ADCON0bits.GO_nDONE == 1);
  3348                           
  3349  0C63  189D               	btfsc	29,1	;volatile
  3350  0C64  2C63               	goto	l698
  3351                           
  3352                           ;Multi_RX_testjig_v2.c: 2057: return_val = ADRESH << 8 | ADRESL;
  3353  0C65  081C               	movf	28,w	;volatile
  3354  0C66  00F5               	movwf	ADC_get_val@return_val+1
  3355  0C67  01F4               	clrf	ADC_get_val@return_val
  3356  0C68  081B               	movf	27,w	;volatile
  3357  0C69  04F4               	iorwf	ADC_get_val@return_val,f
  3358                           
  3359                           ;Multi_RX_testjig_v2.c: 2058: GIE = 1;
  3360  0C6A  178B               	bsf	11,7	;volatile
  3361                           
  3362                           ;Multi_RX_testjig_v2.c: 2059: return return_val;
  3363  0C6B  0875               	movf	ADC_get_val@return_val+1,w
  3364  0C6C  00F1               	movwf	?_ADC_get_val+1
  3365  0C6D  0874               	movf	ADC_get_val@return_val,w
  3366  0C6E  00F0               	movwf	?_ADC_get_val
  3367  0C6F  0008               	return
  3368  0C70                     __end_of_ADC_get_val:	
  3369  0C70                     __ptext26:	
  3370 ;; *************** function ___fladd *****************
  3371 ;; Defined at:
  3372 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  b               4   25[BANK0 ] unsigned int 
  3375 ;;  a               4   29[BANK0 ] unsigned int 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  grs             1   44[BANK0 ] unsigned char 
  3378 ;;  bexp            1   43[BANK0 ] unsigned char 
  3379 ;;  aexp            1   42[BANK0 ] unsigned char 
  3380 ;;  signs           1   41[BANK0 ] unsigned char 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  4   25[BANK0 ] unsigned char 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0
  3385 ;; Tracked objects:
  3386 ;;		On entry : 1F/0
  3387 ;;		On exit  : 1F/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3390 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3391 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3392 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3393 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3394 ;;Total ram usage:       20 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    1
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_get_30v_current
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           
  3405                           ;psect for function ___fladd
  3406  0C70                     ___fladd:	
  3407                           
  3408                           ;incstack = 0
  3409                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  3410  0C70  083C               	movf	___fladd@b+3,w
  3411  0C71  00C9               	movwf	___fladd@signs
  3412  0C72  3080               	movlw	128
  3413  0C73  05C9               	andwf	___fladd@signs,f
  3414  0C74  353C               	lslf	___fladd@b+3,w
  3415  0C75  00CB               	movwf	___fladd@bexp
  3416  0C76  1BBB               	btfsc	___fladd@b+2,7
  3417  0C77  144B               	bsf	___fladd@bexp,0
  3418  0C78  084B               	movf	___fladd@bexp,w
  3419  0C79  1903               	btfsc	3,2
  3420  0C7A  2C83               	goto	l1000
  3421  0C7B  0F4B               	incfsz	___fladd@bexp,w
  3422  0C7C  2C81               	goto	l1001
  3423  0C7D  01B9               	clrf	___fladd@b
  3424  0C7E  01BA               	clrf	___fladd@b+1
  3425  0C7F  01BB               	clrf	___fladd@b+2
  3426  0C80  01BC               	clrf	___fladd@b+3
  3427  0C81                     l1001:	
  3428  0C81  17BB               	bsf	___fladd@b+2,7
  3429  0C82  2C86               	goto	L26
  3430  0C83                     l1000:	
  3431  0C83  01B9               	clrf	___fladd@b
  3432  0C84  01BA               	clrf	___fladd@b+1
  3433  0C85  01BB               	clrf	___fladd@b+2
  3434  0C86                     L26:	
  3435  0C86  01BC               	clrf	___fladd@b+3
  3436  0C87  0840               	movf	___fladd@a+3,w
  3437  0C88  00CA               	movwf	___fladd@aexp
  3438  0C89  3080               	movlw	128
  3439  0C8A  05CA               	andwf	___fladd@aexp,f
  3440  0C8B  084A               	movf	___fladd@aexp,w
  3441  0C8C  0649               	xorwf	___fladd@signs,w
  3442  0C8D  1D03               	btfss	3,2
  3443  0C8E  1749               	bsf	___fladd@signs,6
  3444  0C8F  3540               	lslf	___fladd@a+3,w
  3445  0C90  00CA               	movwf	___fladd@aexp
  3446  0C91  1BBF               	btfsc	___fladd@a+2,7
  3447  0C92  144A               	bsf	___fladd@aexp,0
  3448  0C93  084A               	movf	___fladd@aexp,w
  3449  0C94  1903               	btfsc	3,2
  3450  0C95  2C9E               	goto	l1005
  3451  0C96  0F4A               	incfsz	___fladd@aexp,w
  3452  0C97  2C9C               	goto	l1006
  3453  0C98  01BD               	clrf	___fladd@a
  3454  0C99  01BE               	clrf	___fladd@a+1
  3455  0C9A  01BF               	clrf	___fladd@a+2
  3456  0C9B  01C0               	clrf	___fladd@a+3
  3457  0C9C                     l1006:	
  3458  0C9C  17BF               	bsf	___fladd@a+2,7
  3459  0C9D  2CA1               	goto	L27
  3460  0C9E                     l1005:	
  3461  0C9E  01BD               	clrf	___fladd@a
  3462  0C9F  01BE               	clrf	___fladd@a+1
  3463  0CA0  01BF               	clrf	___fladd@a+2
  3464  0CA1                     L27:	
  3465  0CA1  01C0               	clrf	___fladd@a+3
  3466  0CA2  084B               	movf	___fladd@bexp,w
  3467  0CA3  024A               	subwf	___fladd@aexp,w
  3468  0CA4  1803               	skipnc
  3469  0CA5  2CC8               	goto	l3458
  3470  0CA6  1F49               	btfss	___fladd@signs,6
  3471  0CA7  2CAA               	goto	l3428
  3472  0CA8  3080               	movlw	128
  3473  0CA9  06C9               	xorwf	___fladd@signs,f
  3474  0CAA                     l3428:	
  3475  0CAA  084B               	movf	___fladd@bexp,w
  3476  0CAB  00CC               	movwf	___fladd@grs
  3477  0CAC  084A               	movf	___fladd@aexp,w
  3478  0CAD  00CB               	movwf	___fladd@bexp
  3479  0CAE  084C               	movf	___fladd@grs,w
  3480  0CAF  00CA               	movwf	___fladd@aexp
  3481  0CB0  0839               	movf	___fladd@b,w
  3482  0CB1  00CC               	movwf	___fladd@grs
  3483  0CB2  083D               	movf	___fladd@a,w
  3484  0CB3  00B9               	movwf	___fladd@b
  3485  0CB4  084C               	movf	___fladd@grs,w
  3486  0CB5  00BD               	movwf	___fladd@a
  3487  0CB6  083A               	movf	___fladd@b+1,w
  3488  0CB7  00CC               	movwf	___fladd@grs
  3489  0CB8  083E               	movf	___fladd@a+1,w
  3490  0CB9  00BA               	movwf	___fladd@b+1
  3491  0CBA  084C               	movf	___fladd@grs,w
  3492  0CBB  00BE               	movwf	___fladd@a+1
  3493  0CBC  083B               	movf	___fladd@b+2,w
  3494  0CBD  00CC               	movwf	___fladd@grs
  3495  0CBE  083F               	movf	___fladd@a+2,w
  3496  0CBF  00BB               	movwf	___fladd@b+2
  3497  0CC0  084C               	movf	___fladd@grs,w
  3498  0CC1  00BF               	movwf	___fladd@a+2
  3499  0CC2  083C               	movf	___fladd@b+3,w
  3500  0CC3  00CC               	movwf	___fladd@grs
  3501  0CC4  0840               	movf	___fladd@a+3,w
  3502  0CC5  00BC               	movwf	___fladd@b+3
  3503  0CC6  084C               	movf	___fladd@grs,w
  3504  0CC7  00C0               	movwf	___fladd@a+3
  3505  0CC8                     l3458:	
  3506  0CC8  01CC               	clrf	___fladd@grs
  3507  0CC9  084A               	movf	___fladd@aexp,w
  3508  0CCA  00C1               	movwf	??___fladd
  3509  0CCB  01C2               	clrf	??___fladd+1
  3510  0CCC  0842               	movf	??___fladd+1,w
  3511  0CCD  00C4               	movwf	??___fladd+3
  3512  0CCE  084B               	movf	___fladd@bexp,w
  3513  0CCF  0241               	subwf	??___fladd,w
  3514  0CD0  00C3               	movwf	??___fladd+2
  3515  0CD1  1C03               	skipc
  3516  0CD2  03C4               	decf	??___fladd+3,f
  3517  0CD3  0844               	movf	??___fladd+3,w
  3518  0CD4  3A80               	xorlw	128
  3519  0CD5  00C5               	movwf	??___fladd+4
  3520  0CD6  3080               	movlw	128
  3521  0CD7  0245               	subwf	??___fladd+4,w
  3522  0CD8  1D03               	skipz
  3523  0CD9  2CDC               	goto	u3365
  3524  0CDA  301A               	movlw	26
  3525  0CDB  0243               	subwf	??___fladd+2,w
  3526  0CDC                     u3365:	
  3527  0CDC  1C03               	skipc
  3528  0CDD  2CFE               	goto	l3472
  3529  0CDE  0020               	movlb	0	; select bank0
  3530  0CDF  083C               	movf	___fladd@b+3,w
  3531  0CE0  043B               	iorwf	___fladd@b+2,w
  3532  0CE1  043A               	iorwf	___fladd@b+1,w
  3533  0CE2  0439               	iorwf	___fladd@b,w
  3534  0CE3  1903               	btfsc	3,2
  3535  0CE4  2CE7               	goto	u3370
  3536  0CE5  3001               	movlw	1
  3537  0CE6  2CE8               	goto	u3380
  3538  0CE7                     u3370:	
  3539  0CE7  3000               	movlw	0
  3540  0CE8                     u3380:	
  3541  0CE8  00CC               	movwf	___fladd@grs
  3542  0CE9  01B9               	clrf	___fladd@b
  3543  0CEA  01BA               	clrf	___fladd@b+1
  3544  0CEB  01BB               	clrf	___fladd@b+2
  3545  0CEC  01BC               	clrf	___fladd@b+3
  3546  0CED  084A               	movf	___fladd@aexp,w
  3547  0CEE  00CB               	movwf	___fladd@bexp
  3548  0CEF  2D03               	goto	l1011
  3549  0CF0                     l1013:	
  3550  0CF0  1C4C               	btfss	___fladd@grs,0
  3551  0CF1  2CF6               	goto	l1014
  3552  0CF2  364C               	lsrf	___fladd@grs,w
  3553  0CF3  3801               	iorlw	1
  3554  0CF4  00CC               	movwf	___fladd@grs
  3555  0CF5  2CF7               	goto	l1015
  3556  0CF6                     l1014:	
  3557  0CF6  36CC               	lsrf	___fladd@grs,f
  3558  0CF7                     l1015:	
  3559  0CF7  1839               	btfsc	___fladd@b,0
  3560  0CF8  17CC               	bsf	___fladd@grs,7
  3561  0CF9  37BC               	asrf	___fladd@b+3,f
  3562  0CFA  0CBB               	rrf	___fladd@b+2,f
  3563  0CFB  0CBA               	rrf	___fladd@b+1,f
  3564  0CFC  0CB9               	rrf	___fladd@b,f
  3565  0CFD  0ACB               	incf	___fladd@bexp,f
  3566  0CFE                     l3472:	
  3567  0CFE  0020               	movlb	0	; select bank0
  3568  0CFF  084A               	movf	___fladd@aexp,w
  3569  0D00  024B               	subwf	___fladd@bexp,w
  3570  0D01  1C03               	skipc
  3571  0D02  2CF0               	goto	l1013
  3572  0D03                     l1011:	
  3573  0D03  1B49               	btfsc	___fladd@signs,6
  3574  0D04  2D27               	goto	l3490
  3575  0D05  084B               	movf	___fladd@bexp,w
  3576  0D06  1D03               	btfss	3,2
  3577  0D07  2D0D               	goto	l3478
  3578  0D08  01B9               	clrf	?___fladd
  3579  0D09  01BA               	clrf	?___fladd+1
  3580  0D0A  01BB               	clrf	?___fladd+2
  3581  0D0B  01BC               	clrf	?___fladd+3
  3582  0D0C  0008               	return
  3583  0D0D                     l3478:	
  3584  0D0D  083D               	movf	___fladd@a,w
  3585  0D0E  07B9               	addwf	___fladd@b,f
  3586  0D0F  083E               	movf	___fladd@a+1,w
  3587  0D10  3DBA               	addwfc	___fladd@b+1,f
  3588  0D11  083F               	movf	___fladd@a+2,w
  3589  0D12  3DBB               	addwfc	___fladd@b+2,f
  3590  0D13  0840               	movf	___fladd@a+3,w
  3591  0D14  3DBC               	addwfc	___fladd@b+3,f
  3592  0D15  1C3C               	btfss	___fladd@b+3,0
  3593  0D16  2D8F               	goto	l3520
  3594  0D17  1C4C               	btfss	___fladd@grs,0
  3595  0D18  2D1E               	goto	l1022
  3596  0D19  36CC               	lsrf	___fladd@grs,f
  3597  0D1A  084C               	movf	___fladd@grs,w
  3598  0D1B  3801               	iorlw	1
  3599  0D1C  00CC               	movwf	___fladd@grs
  3600  0D1D  2D1F               	goto	l1023
  3601  0D1E                     l1022:	
  3602  0D1E  36CC               	lsrf	___fladd@grs,f
  3603  0D1F                     l1023:	
  3604  0D1F  1839               	btfsc	___fladd@b,0
  3605  0D20  17CC               	bsf	___fladd@grs,7
  3606  0D21  37BC               	asrf	___fladd@b+3,f
  3607  0D22  0CBB               	rrf	___fladd@b+2,f
  3608  0D23  0CBA               	rrf	___fladd@b+1,f
  3609  0D24  0CB9               	rrf	___fladd@b,f
  3610  0D25  0ACB               	incf	___fladd@bexp,f
  3611  0D26  2D8F               	goto	l3520
  3612  0D27                     l3490:	
  3613  0D27  083C               	movf	___fladd@b+3,w
  3614  0D28  3A80               	xorlw	128
  3615  0D29  00C1               	movwf	??___fladd
  3616  0D2A  0840               	movf	___fladd@a+3,w
  3617  0D2B  3A80               	xorlw	128
  3618  0D2C  0241               	subwf	??___fladd,w
  3619  0D2D  1D03               	skipz
  3620  0D2E  2D39               	goto	u3473
  3621  0D2F  083F               	movf	___fladd@a+2,w
  3622  0D30  023B               	subwf	___fladd@b+2,w
  3623  0D31  1D03               	skipz
  3624  0D32  2D39               	goto	u3473
  3625  0D33  083E               	movf	___fladd@a+1,w
  3626  0D34  023A               	subwf	___fladd@b+1,w
  3627  0D35  1D03               	skipz
  3628  0D36  2D39               	goto	u3473
  3629  0D37  083D               	movf	___fladd@a,w
  3630  0D38  0239               	subwf	___fladd@b,w
  3631  0D39                     u3473:	
  3632  0D39  1803               	skipnc
  3633  0D3A  2D68               	goto	l3500
  3634  0D3B  30FF               	movlw	255
  3635  0D3C  00C1               	movwf	??___fladd
  3636  0D3D  00C2               	movwf	??___fladd+1
  3637  0D3E  00C3               	movwf	??___fladd+2
  3638  0D3F  00C4               	movwf	??___fladd+3
  3639  0D40  0839               	movf	___fladd@b,w
  3640  0D41  023D               	subwf	___fladd@a,w
  3641  0D42  00C5               	movwf	??___fladd+4
  3642  0D43  083A               	movf	___fladd@b+1,w
  3643  0D44  3B3E               	subwfb	___fladd@a+1,w
  3644  0D45  00C6               	movwf	??___fladd+5
  3645  0D46  083B               	movf	___fladd@b+2,w
  3646  0D47  3B3F               	subwfb	___fladd@a+2,w
  3647  0D48  00C7               	movwf	??___fladd+6
  3648  0D49  083C               	movf	___fladd@b+3,w
  3649  0D4A  3B40               	subwfb	___fladd@a+3,w
  3650  0D4B  00C8               	movwf	??___fladd+7
  3651  0D4C  0845               	movf	??___fladd+4,w
  3652  0D4D  07C1               	addwf	??___fladd,f
  3653  0D4E  0846               	movf	??___fladd+5,w
  3654  0D4F  3DC2               	addwfc	??___fladd+1,f
  3655  0D50  0847               	movf	??___fladd+6,w
  3656  0D51  3DC3               	addwfc	??___fladd+2,f
  3657  0D52  0848               	movf	??___fladd+7,w
  3658  0D53  3DC4               	addwfc	??___fladd+3,f
  3659  0D54  0844               	movf	??___fladd+3,w
  3660  0D55  00BC               	movwf	___fladd@b+3
  3661  0D56  0843               	movf	??___fladd+2,w
  3662  0D57  00BB               	movwf	___fladd@b+2
  3663  0D58  0842               	movf	??___fladd+1,w
  3664  0D59  00BA               	movwf	___fladd@b+1
  3665  0D5A  0841               	movf	??___fladd,w
  3666  0D5B  00B9               	movwf	___fladd@b
  3667  0D5C  3080               	movlw	128
  3668  0D5D  06C9               	xorwf	___fladd@signs,f
  3669  0D5E  09CC               	comf	___fladd@grs,f
  3670  0D5F  0FCC               	incfsz	___fladd@grs,f
  3671  0D60  2D70               	goto	l1028
  3672  0D61  3001               	movlw	1
  3673  0D62  07B9               	addwf	___fladd@b,f
  3674  0D63  3000               	movlw	0
  3675  0D64  3DBA               	addwfc	___fladd@b+1,f
  3676  0D65  3DBB               	addwfc	___fladd@b+2,f
  3677  0D66  3DBC               	addwfc	___fladd@b+3,f
  3678  0D67  2D70               	goto	l1028
  3679  0D68                     l3500:	
  3680  0D68  083D               	movf	___fladd@a,w
  3681  0D69  02B9               	subwf	___fladd@b,f
  3682  0D6A  083E               	movf	___fladd@a+1,w
  3683  0D6B  3BBA               	subwfb	___fladd@b+1,f
  3684  0D6C  083F               	movf	___fladd@a+2,w
  3685  0D6D  3BBB               	subwfb	___fladd@b+2,f
  3686  0D6E  0840               	movf	___fladd@a+3,w
  3687  0D6F  3BBC               	subwfb	___fladd@b+3,f
  3688  0D70                     l1028:	
  3689  0D70  083C               	movf	___fladd@b+3,w
  3690  0D71  043B               	iorwf	___fladd@b+2,w
  3691  0D72  043A               	iorwf	___fladd@b+1,w
  3692  0D73  0439               	iorwf	___fladd@b,w
  3693  0D74  1D03               	skipz
  3694  0D75  2D8D               	goto	l3518
  3695  0D76  084C               	movf	___fladd@grs,w
  3696  0D77  1D03               	btfss	3,2
  3697  0D78  2D8D               	goto	l3518
  3698  0D79  01B9               	clrf	?___fladd
  3699  0D7A  01BA               	clrf	?___fladd+1
  3700  0D7B  01BB               	clrf	?___fladd+2
  3701  0D7C  01BC               	clrf	?___fladd+3
  3702  0D7D  0008               	return
  3703  0D7E                     l3506:	
  3704  0D7E  35B9               	lslf	___fladd@b,f
  3705  0D7F  0DBA               	rlf	___fladd@b+1,f
  3706  0D80  0DBB               	rlf	___fladd@b+2,f
  3707  0D81  0DBC               	rlf	___fladd@b+3,f
  3708  0D82  1BCC               	btfsc	___fladd@grs,7
  3709  0D83  1439               	bsf	___fladd@b,0
  3710  0D84  1C4C               	btfss	___fladd@grs,0
  3711  0D85  2D89               	goto	l1033
  3712  0D86  1403               	setc
  3713  0D87  0DCC               	rlf	___fladd@grs,f
  3714  0D88  2D8A               	goto	l3514
  3715  0D89                     l1033:	
  3716  0D89  35CC               	lslf	___fladd@grs,f
  3717  0D8A                     l3514:	
  3718  0D8A  084B               	movf	___fladd@bexp,w
  3719  0D8B  1D03               	btfss	3,2
  3720  0D8C  03CB               	decf	___fladd@bexp,f
  3721  0D8D                     l3518:	
  3722  0D8D  1FBB               	btfss	___fladd@b+2,7
  3723  0D8E  2D7E               	goto	l3506
  3724  0D8F                     l3520:	
  3725  0D8F  01CA               	clrf	___fladd@aexp
  3726  0D90  1FCC               	btfss	___fladd@grs,7
  3727  0D91  2D9A               	goto	l3530
  3728  0D92  084C               	movf	___fladd@grs,w
  3729  0D93  397F               	andlw	127
  3730  0D94  1903               	btfsc	3,2
  3731  0D95  1839               	btfsc	___fladd@b,0
  3732  0D96  2D98               	goto	l3526
  3733  0D97  2D9A               	goto	l3530
  3734  0D98                     l3526:	
  3735  0D98  01CA               	clrf	___fladd@aexp
  3736  0D99  0ACA               	incf	___fladd@aexp,f
  3737  0D9A                     l3530:	
  3738  0D9A  084A               	movf	___fladd@aexp,w
  3739  0D9B  1903               	btfsc	3,2
  3740  0D9C  2DAB               	goto	l3542
  3741  0D9D  3001               	movlw	1
  3742  0D9E  07B9               	addwf	___fladd@b,f
  3743  0D9F  3000               	movlw	0
  3744  0DA0  3DBA               	addwfc	___fladd@b+1,f
  3745  0DA1  3DBB               	addwfc	___fladd@b+2,f
  3746  0DA2  3DBC               	addwfc	___fladd@b+3,f
  3747  0DA3  1C3C               	btfss	___fladd@b+3,0
  3748  0DA4  2DAB               	goto	l3542
  3749  0DA5  37BC               	asrf	___fladd@b+3,f
  3750  0DA6  0CBB               	rrf	___fladd@b+2,f
  3751  0DA7  0CBA               	rrf	___fladd@b+1,f
  3752  0DA8  0CB9               	rrf	___fladd@b,f
  3753  0DA9  0F4B               	incfsz	___fladd@bexp,w
  3754  0DAA  0ACB               	incf	___fladd@bexp,f
  3755  0DAB                     l3542:	
  3756  0DAB  0A4B               	incf	___fladd@bexp,w
  3757  0DAC  1D03               	btfss	3,2
  3758  0DAD  084B               	movf	___fladd@bexp,w
  3759  0DAE  1D03               	btfss	3,2
  3760  0DAF  2DB7               	goto	l3550
  3761  0DB0  01B9               	clrf	___fladd@b
  3762  0DB1  01BA               	clrf	___fladd@b+1
  3763  0DB2  01BB               	clrf	___fladd@b+2
  3764  0DB3  01BC               	clrf	___fladd@b+3
  3765  0DB4  084B               	movf	___fladd@bexp,w
  3766  0DB5  1903               	btfsc	3,2
  3767  0DB6  01C9               	clrf	___fladd@signs
  3768  0DB7                     l3550:	
  3769  0DB7  1C4B               	btfss	___fladd@bexp,0
  3770  0DB8  2DBB               	goto	l1048
  3771  0DB9  17BB               	bsf	___fladd@b+2,7
  3772  0DBA  2DBC               	goto	l3554
  3773  0DBB                     l1048:	
  3774  0DBB  13BB               	bcf	___fladd@b+2,7
  3775  0DBC                     l3554:	
  3776  0DBC  364B               	lsrf	___fladd@bexp,w
  3777  0DBD  00BC               	movwf	___fladd@b+3
  3778  0DBE  1BC9               	btfsc	___fladd@signs,7
  3779  0DBF  17BC               	bsf	___fladd@b+3,7
  3780  0DC0  0008               	return
  3781  0DC1                     __end_of___fladd:	
  3782  0DC1                     __ptext24:	
  3783 ;; *************** function ___flmul *****************
  3784 ;; Defined at:
  3785 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  b               4    0[BANK0 ] long 
  3788 ;;  a               4    4[BANK0 ] long 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  prod            4   19[BANK0 ] struct .
  3791 ;;  grs             4   14[BANK0 ] unsigned long 
  3792 ;;  temp            2   23[BANK0 ] struct .
  3793 ;;  bexp            1   18[BANK0 ] unsigned char 
  3794 ;;  aexp            1   13[BANK0 ] unsigned char 
  3795 ;;  sign            1   12[BANK0 ] unsigned char 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  4    0[BANK0 ] unsigned char 
  3798 ;; Registers used:
  3799 ;;		wreg, status,2, status,0, pclath, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 1F/0
  3802 ;;		On exit  : 1F/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3805 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3806 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3807 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3808 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3809 ;;Total ram usage:       25 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:    2
  3812 ;; This function calls:
  3813 ;;		__Umul8_16
  3814 ;; This function is called by:
  3815 ;;		_get_30v_current
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           
  3820                           ;psect for function ___flmul
  3821  0DC1                     ___flmul:	
  3822                           
  3823                           ;incstack = 0
  3824                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  3825  0DC1  0823               	movf	___flmul@b+3,w
  3826  0DC2  00AC               	movwf	___flmul@sign
  3827  0DC3  3080               	movlw	128
  3828  0DC4  05AC               	andwf	___flmul@sign,f
  3829  0DC5  3523               	lslf	___flmul@b+3,w
  3830  0DC6  00B2               	movwf	___flmul@bexp
  3831  0DC7  1BA2               	btfsc	___flmul@b+2,7
  3832  0DC8  1432               	bsf	___flmul@bexp,0
  3833  0DC9  0832               	movf	___flmul@bexp,w
  3834  0DCA  1903               	btfsc	3,2
  3835  0DCB  2DD4               	goto	l1093
  3836  0DCC  0F32               	incfsz	___flmul@bexp,w
  3837  0DCD  2DD2               	goto	l1094
  3838  0DCE  01A0               	clrf	___flmul@b
  3839  0DCF  01A1               	clrf	___flmul@b+1
  3840  0DD0  01A2               	clrf	___flmul@b+2
  3841  0DD1  01A3               	clrf	___flmul@b+3
  3842  0DD2                     l1094:	
  3843  0DD2  17A2               	bsf	___flmul@b+2,7
  3844  0DD3  2DD8               	goto	l3576
  3845  0DD4                     l1093:	
  3846  0DD4  01A0               	clrf	___flmul@b
  3847  0DD5  01A1               	clrf	___flmul@b+1
  3848  0DD6  01A2               	clrf	___flmul@b+2
  3849  0DD7  01A3               	clrf	___flmul@b+3
  3850  0DD8                     l3576:	
  3851  0DD8  0827               	movf	___flmul@a+3,w
  3852  0DD9  3980               	andlw	128
  3853  0DDA  06AC               	xorwf	___flmul@sign,f
  3854  0DDB  3527               	lslf	___flmul@a+3,w
  3855  0DDC  00AD               	movwf	___flmul@aexp
  3856  0DDD  1BA6               	btfsc	___flmul@a+2,7
  3857  0DDE  142D               	bsf	___flmul@aexp,0
  3858  0DDF  082D               	movf	___flmul@aexp,w
  3859  0DE0  1903               	btfsc	3,2
  3860  0DE1  2DEA               	goto	l1097
  3861  0DE2  0F2D               	incfsz	___flmul@aexp,w
  3862  0DE3  2DE8               	goto	l1098
  3863  0DE4  01A4               	clrf	___flmul@a
  3864  0DE5  01A5               	clrf	___flmul@a+1
  3865  0DE6  01A6               	clrf	___flmul@a+2
  3866  0DE7  01A7               	clrf	___flmul@a+3
  3867  0DE8                     l1098:	
  3868  0DE8  17A6               	bsf	___flmul@a+2,7
  3869  0DE9  2DEE               	goto	l3588
  3870  0DEA                     l1097:	
  3871  0DEA  01A4               	clrf	___flmul@a
  3872  0DEB  01A5               	clrf	___flmul@a+1
  3873  0DEC  01A6               	clrf	___flmul@a+2
  3874  0DED  01A7               	clrf	___flmul@a+3
  3875  0DEE                     l3588:	
  3876  0DEE  082D               	movf	___flmul@aexp,w
  3877  0DEF  1D03               	btfss	3,2
  3878  0DF0  0832               	movf	___flmul@bexp,w
  3879  0DF1  1D03               	btfss	3,2
  3880  0DF2  2DF8               	goto	l3592
  3881  0DF3  01A0               	clrf	?___flmul
  3882  0DF4  01A1               	clrf	?___flmul+1
  3883  0DF5  01A2               	clrf	?___flmul+2
  3884  0DF6  01A3               	clrf	?___flmul+3
  3885  0DF7  0008               	return
  3886  0DF8                     l3592:	
  3887  0DF8  0820               	movf	___flmul@b,w
  3888  0DF9  00F0               	movwf	__Umul8_16@multiplicand
  3889  0DFA  0826               	movf	___flmul@a+2,w
  3890  0DFB  2743  318C         	fcall	__Umul8_16
  3891  0DFD  0871               	movf	?__Umul8_16+1,w
  3892  0DFE  00B8               	movwf	___flmul@temp+1
  3893  0DFF  0870               	movf	?__Umul8_16,w
  3894  0E00  00B7               	movwf	___flmul@temp
  3895  0E01  00AE               	movwf	___flmul@grs
  3896  0E02  01AF               	clrf	___flmul@grs+1
  3897  0E03  01B0               	clrf	___flmul@grs+2
  3898  0E04  01B1               	clrf	___flmul@grs+3
  3899  0E05  0838               	movf	___flmul@temp+1,w
  3900  0E06  00B3               	movwf	___flmul@prod
  3901  0E07  01B4               	clrf	___flmul@prod+1
  3902  0E08  01B5               	clrf	___flmul@prod+2
  3903  0E09  01B6               	clrf	___flmul@prod+3
  3904  0E0A  0821               	movf	___flmul@b+1,w
  3905  0E0B  00F0               	movwf	__Umul8_16@multiplicand
  3906  0E0C  0825               	movf	___flmul@a+1,w
  3907  0E0D  2743  318C         	fcall	__Umul8_16
  3908  0E0F  0871               	movf	?__Umul8_16+1,w
  3909  0E10  00B8               	movwf	___flmul@temp+1
  3910  0E11  0870               	movf	?__Umul8_16,w
  3911  0E12  00B7               	movwf	___flmul@temp
  3912  0E13  07AE               	addwf	___flmul@grs,f
  3913  0E14  3001               	movlw	1
  3914  0E15  1803               	skipnc
  3915  0E16  07AF               	addwf	___flmul@grs+1,f
  3916  0E17  1803               	skipnc
  3917  0E18  07B0               	addwf	___flmul@grs+2,f
  3918  0E19  1803               	skipnc
  3919  0E1A  07B1               	addwf	___flmul@grs+3,f
  3920  0E1B  0838               	movf	___flmul@temp+1,w
  3921  0E1C  07B3               	addwf	___flmul@prod,f
  3922  0E1D  3001               	movlw	1
  3923  0E1E  1803               	skipnc
  3924  0E1F  07B4               	addwf	___flmul@prod+1,f
  3925  0E20  1803               	skipnc
  3926  0E21  07B5               	addwf	___flmul@prod+2,f
  3927  0E22  1803               	skipnc
  3928  0E23  07B6               	addwf	___flmul@prod+3,f
  3929  0E24  0822               	movf	___flmul@b+2,w
  3930  0E25  00F0               	movwf	__Umul8_16@multiplicand
  3931  0E26  0824               	movf	___flmul@a,w
  3932  0E27  2743  318C         	fcall	__Umul8_16
  3933  0E29  0871               	movf	?__Umul8_16+1,w
  3934  0E2A  00B8               	movwf	___flmul@temp+1
  3935  0E2B  0870               	movf	?__Umul8_16,w
  3936  0E2C  00B7               	movwf	___flmul@temp
  3937  0E2D  07AE               	addwf	___flmul@grs,f
  3938  0E2E  3001               	movlw	1
  3939  0E2F  1803               	skipnc
  3940  0E30  07AF               	addwf	___flmul@grs+1,f
  3941  0E31  1803               	skipnc
  3942  0E32  07B0               	addwf	___flmul@grs+2,f
  3943  0E33  1803               	skipnc
  3944  0E34  07B1               	addwf	___flmul@grs+3,f
  3945  0E35  0838               	movf	___flmul@temp+1,w
  3946  0E36  07B3               	addwf	___flmul@prod,f
  3947  0E37  3001               	movlw	1
  3948  0E38  1803               	skipnc
  3949  0E39  07B4               	addwf	___flmul@prod+1,f
  3950  0E3A  1803               	skipnc
  3951  0E3B  07B5               	addwf	___flmul@prod+2,f
  3952  0E3C  1803               	skipnc
  3953  0E3D  07B6               	addwf	___flmul@prod+3,f
  3954  0E3E  0830               	movf	___flmul@grs+2,w
  3955  0E3F  00B1               	movwf	___flmul@grs+3
  3956  0E40  082F               	movf	___flmul@grs+1,w
  3957  0E41  00B0               	movwf	___flmul@grs+2
  3958  0E42  082E               	movf	___flmul@grs,w
  3959  0E43  00AF               	movwf	___flmul@grs+1
  3960  0E44  01AE               	clrf	___flmul@grs
  3961  0E45  0821               	movf	___flmul@b+1,w
  3962  0E46  00F0               	movwf	__Umul8_16@multiplicand
  3963  0E47  0824               	movf	___flmul@a,w
  3964  0E48  2743  318C         	fcall	__Umul8_16
  3965  0E4A  0871               	movf	?__Umul8_16+1,w
  3966  0E4B  00B8               	movwf	___flmul@temp+1
  3967  0E4C  0870               	movf	?__Umul8_16,w
  3968  0E4D  00B7               	movwf	___flmul@temp
  3969  0E4E  07AE               	addwf	___flmul@grs,f
  3970  0E4F  0838               	movf	___flmul@temp+1,w
  3971  0E50  3DAF               	addwfc	___flmul@grs+1,f
  3972  0E51  3000               	movlw	0
  3973  0E52  3DB0               	addwfc	___flmul@grs+2,f
  3974  0E53  3DB1               	addwfc	___flmul@grs+3,f
  3975  0E54  0820               	movf	___flmul@b,w
  3976  0E55  00F0               	movwf	__Umul8_16@multiplicand
  3977  0E56  0825               	movf	___flmul@a+1,w
  3978  0E57  2743  318C         	fcall	__Umul8_16
  3979  0E59  0871               	movf	?__Umul8_16+1,w
  3980  0E5A  00B8               	movwf	___flmul@temp+1
  3981  0E5B  0870               	movf	?__Umul8_16,w
  3982  0E5C  00B7               	movwf	___flmul@temp
  3983  0E5D  07AE               	addwf	___flmul@grs,f
  3984  0E5E  0838               	movf	___flmul@temp+1,w
  3985  0E5F  3DAF               	addwfc	___flmul@grs+1,f
  3986  0E60  3000               	movlw	0
  3987  0E61  3DB0               	addwfc	___flmul@grs+2,f
  3988  0E62  3DB1               	addwfc	___flmul@grs+3,f
  3989  0E63  0830               	movf	___flmul@grs+2,w
  3990  0E64  00B1               	movwf	___flmul@grs+3
  3991  0E65  082F               	movf	___flmul@grs+1,w
  3992  0E66  00B0               	movwf	___flmul@grs+2
  3993  0E67  082E               	movf	___flmul@grs,w
  3994  0E68  00AF               	movwf	___flmul@grs+1
  3995  0E69  01AE               	clrf	___flmul@grs
  3996  0E6A  0820               	movf	___flmul@b,w
  3997  0E6B  00F0               	movwf	__Umul8_16@multiplicand
  3998  0E6C  0824               	movf	___flmul@a,w
  3999  0E6D  2743  318C         	fcall	__Umul8_16
  4000  0E6F  0871               	movf	?__Umul8_16+1,w
  4001  0E70  00B8               	movwf	___flmul@temp+1
  4002  0E71  0870               	movf	?__Umul8_16,w
  4003  0E72  00B7               	movwf	___flmul@temp
  4004  0E73  07AE               	addwf	___flmul@grs,f
  4005  0E74  0838               	movf	___flmul@temp+1,w
  4006  0E75  3DAF               	addwfc	___flmul@grs+1,f
  4007  0E76  3000               	movlw	0
  4008  0E77  3DB0               	addwfc	___flmul@grs+2,f
  4009  0E78  3DB1               	addwfc	___flmul@grs+3,f
  4010  0E79  0821               	movf	___flmul@b+1,w
  4011  0E7A  00F0               	movwf	__Umul8_16@multiplicand
  4012  0E7B  0826               	movf	___flmul@a+2,w
  4013  0E7C  2743  318C         	fcall	__Umul8_16
  4014  0E7E  0871               	movf	?__Umul8_16+1,w
  4015  0E7F  00B8               	movwf	___flmul@temp+1
  4016  0E80  0870               	movf	?__Umul8_16,w
  4017  0E81  00B7               	movwf	___flmul@temp
  4018  0E82  07B3               	addwf	___flmul@prod,f
  4019  0E83  0838               	movf	___flmul@temp+1,w
  4020  0E84  3DB4               	addwfc	___flmul@prod+1,f
  4021  0E85  3000               	movlw	0
  4022  0E86  3DB5               	addwfc	___flmul@prod+2,f
  4023  0E87  3DB6               	addwfc	___flmul@prod+3,f
  4024  0E88  0822               	movf	___flmul@b+2,w
  4025  0E89  00F0               	movwf	__Umul8_16@multiplicand
  4026  0E8A  0825               	movf	___flmul@a+1,w
  4027  0E8B  2743  318C         	fcall	__Umul8_16
  4028  0E8D  0871               	movf	?__Umul8_16+1,w
  4029  0E8E  00B8               	movwf	___flmul@temp+1
  4030  0E8F  0870               	movf	?__Umul8_16,w
  4031  0E90  00B7               	movwf	___flmul@temp
  4032  0E91  07B3               	addwf	___flmul@prod,f
  4033  0E92  0838               	movf	___flmul@temp+1,w
  4034  0E93  3DB4               	addwfc	___flmul@prod+1,f
  4035  0E94  3000               	movlw	0
  4036  0E95  3DB5               	addwfc	___flmul@prod+2,f
  4037  0E96  3DB6               	addwfc	___flmul@prod+3,f
  4038  0E97  0822               	movf	___flmul@b+2,w
  4039  0E98  00F0               	movwf	__Umul8_16@multiplicand
  4040  0E99  0826               	movf	___flmul@a+2,w
  4041  0E9A  2743  318C         	fcall	__Umul8_16
  4042  0E9C  0871               	movf	?__Umul8_16+1,w
  4043  0E9D  00B8               	movwf	___flmul@temp+1
  4044  0E9E  0870               	movf	?__Umul8_16,w
  4045  0E9F  00B7               	movwf	___flmul@temp
  4046  0EA0  00A8               	movwf	??___flmul
  4047  0EA1  0838               	movf	___flmul@temp+1,w
  4048  0EA2  00A9               	movwf	??___flmul+1
  4049  0EA3  01AA               	clrf	??___flmul+2
  4050  0EA4  01AB               	clrf	??___flmul+3
  4051  0EA5  082A               	movf	??___flmul+2,w
  4052  0EA6  00AB               	movwf	??___flmul+3
  4053  0EA7  0829               	movf	??___flmul+1,w
  4054  0EA8  00AA               	movwf	??___flmul+2
  4055  0EA9  0828               	movf	??___flmul,w
  4056  0EAA  00A9               	movwf	??___flmul+1
  4057  0EAB  01A8               	clrf	??___flmul
  4058  0EAC  0828               	movf	??___flmul,w
  4059  0EAD  07B3               	addwf	___flmul@prod,f
  4060  0EAE  0829               	movf	??___flmul+1,w
  4061  0EAF  3DB4               	addwfc	___flmul@prod+1,f
  4062  0EB0  082A               	movf	??___flmul+2,w
  4063  0EB1  3DB5               	addwfc	___flmul@prod+2,f
  4064  0EB2  082B               	movf	??___flmul+3,w
  4065  0EB3  3DB6               	addwfc	___flmul@prod+3,f
  4066  0EB4  0831               	movf	___flmul@grs+3,w
  4067  0EB5  07B3               	addwf	___flmul@prod,f
  4068  0EB6  3001               	movlw	1
  4069  0EB7  1803               	skipnc
  4070  0EB8  07B4               	addwf	___flmul@prod+1,f
  4071  0EB9  1803               	skipnc
  4072  0EBA  07B5               	addwf	___flmul@prod+2,f
  4073  0EBB  1803               	skipnc
  4074  0EBC  07B6               	addwf	___flmul@prod+3,f
  4075  0EBD  0830               	movf	___flmul@grs+2,w
  4076  0EBE  00B1               	movwf	___flmul@grs+3
  4077  0EBF  082F               	movf	___flmul@grs+1,w
  4078  0EC0  00B0               	movwf	___flmul@grs+2
  4079  0EC1  082E               	movf	___flmul@grs,w
  4080  0EC2  00AF               	movwf	___flmul@grs+1
  4081  0EC3  01AE               	clrf	___flmul@grs
  4082  0EC4  0832               	movf	___flmul@bexp,w
  4083  0EC5  00B7               	movwf	___flmul@temp
  4084  0EC6  01B8               	clrf	___flmul@temp+1
  4085  0EC7  082D               	movf	___flmul@aexp,w
  4086  0EC8  07B7               	addwf	___flmul@temp,f
  4087  0EC9  1803               	skipnc
  4088  0ECA  0AB8               	incf	___flmul@temp+1,f
  4089  0ECB  3082               	movlw	-126
  4090  0ECC                     L25:	
  4091  0ECC  07B7               	addwf	___flmul@temp,f
  4092  0ECD  1C03               	skipc
  4093  0ECE  03B8               	decf	___flmul@temp+1,f
  4094  0ECF  1BB5               	btfsc	___flmul@prod+2,7
  4095  0ED0  2EDD               	goto	l3640
  4096  0ED1  35B3               	lslf	___flmul@prod,f
  4097  0ED2  0DB4               	rlf	___flmul@prod+1,f
  4098  0ED3  0DB5               	rlf	___flmul@prod+2,f
  4099  0ED4  0DB6               	rlf	___flmul@prod+3,f
  4100  0ED5  1BB1               	btfsc	___flmul@grs+3,7
  4101  0ED6  1433               	bsf	___flmul@prod,0
  4102  0ED7  30FF               	movlw	-1
  4103  0ED8  35AE               	lslf	___flmul@grs,f
  4104  0ED9  0DAF               	rlf	___flmul@grs+1,f
  4105  0EDA  0DB0               	rlf	___flmul@grs+2,f
  4106  0EDB  0DB1               	rlf	___flmul@grs+3,f
  4107  0EDC  2ECC               	goto	L25
  4108  0EDD                     l3640:	
  4109  0EDD  01AD               	clrf	___flmul@aexp
  4110  0EDE  1FB1               	btfss	___flmul@grs+3,7
  4111  0EDF  2EF2               	goto	l3650
  4112  0EE0  082E               	movf	___flmul@grs,w
  4113  0EE1  00A8               	movwf	??___flmul
  4114  0EE2  082F               	movf	___flmul@grs+1,w
  4115  0EE3  00A9               	movwf	??___flmul+1
  4116  0EE4  0830               	movf	___flmul@grs+2,w
  4117  0EE5  00AA               	movwf	??___flmul+2
  4118  0EE6  307F               	movlw	127
  4119  0EE7  0531               	andwf	___flmul@grs+3,w
  4120  0EE8  00AB               	movwf	??___flmul+3
  4121  0EE9  042A               	iorwf	??___flmul+2,w
  4122  0EEA  0429               	iorwf	??___flmul+1,w
  4123  0EEB  0428               	iorwf	??___flmul,w
  4124  0EEC  1903               	skipnz
  4125  0EED  1833               	btfsc	___flmul@prod,0
  4126  0EEE  2EF0               	goto	l3646
  4127  0EEF  2EF2               	goto	l3650
  4128  0EF0                     l3646:	
  4129  0EF0  01AD               	clrf	___flmul@aexp
  4130  0EF1  0AAD               	incf	___flmul@aexp,f
  4131  0EF2                     l3650:	
  4132  0EF2  082D               	movf	___flmul@aexp,w
  4133  0EF3  1903               	btfsc	3,2
  4134  0EF4  2F04               	goto	l3660
  4135  0EF5  3001               	movlw	1
  4136  0EF6  07B3               	addwf	___flmul@prod,f
  4137  0EF7  3000               	movlw	0
  4138  0EF8  3DB4               	addwfc	___flmul@prod+1,f
  4139  0EF9  3DB5               	addwfc	___flmul@prod+2,f
  4140  0EFA  3DB6               	addwfc	___flmul@prod+3,f
  4141  0EFB  1C36               	btfss	___flmul@prod+3,0
  4142  0EFC  2F04               	goto	l3660
  4143  0EFD  37B6               	asrf	___flmul@prod+3,f
  4144  0EFE  0CB5               	rrf	___flmul@prod+2,f
  4145  0EFF  0CB4               	rrf	___flmul@prod+1,f
  4146  0F00  0CB3               	rrf	___flmul@prod,f
  4147  0F01  0AB7               	incf	___flmul@temp,f
  4148  0F02  1903               	skipnz
  4149  0F03  0AB8               	incf	___flmul@temp+1,f
  4150  0F04                     l3660:	
  4151  0F04  0838               	movf	___flmul@temp+1,w
  4152  0F05  3A80               	xorlw	128
  4153  0F06  00A8               	movwf	??___flmul
  4154  0F07  3080               	movlw	128
  4155  0F08  0228               	subwf	??___flmul,w
  4156  0F09  1D03               	skipz
  4157  0F0A  2F0D               	goto	u3815
  4158  0F0B  30FF               	movlw	255
  4159  0F0C  0237               	subwf	___flmul@temp,w
  4160  0F0D                     u3815:	
  4161  0F0D  1C03               	skipc
  4162  0F0E  2F17               	goto	l3664
  4163  0F0F  307F               	movlw	127
  4164  0F10  0020               	movlb	0	; select bank0
  4165  0F11  00B6               	movwf	___flmul@prod+3
  4166  0F12  3080               	movlw	128
  4167  0F13  00B5               	movwf	___flmul@prod+2
  4168  0F14  01B4               	clrf	___flmul@prod+1
  4169  0F15  01B3               	clrf	___flmul@prod
  4170  0F16  2F38               	goto	l1115
  4171  0F17                     l3664:	
  4172  0F17  0020               	movlb	0	; select bank0
  4173  0F18  0838               	movf	___flmul@temp+1,w
  4174  0F19  3A80               	xorlw	128
  4175  0F1A  00A8               	movwf	??___flmul
  4176  0F1B  3080               	movlw	128
  4177  0F1C  0228               	subwf	??___flmul,w
  4178  0F1D  1D03               	skipz
  4179  0F1E  2F21               	goto	u3825
  4180  0F1F  3001               	movlw	1
  4181  0F20  0237               	subwf	___flmul@temp,w
  4182  0F21                     u3825:	
  4183  0F21  1803               	skipnc
  4184  0F22  2F2A               	goto	l3670
  4185  0F23  0020               	movlb	0	; select bank0
  4186  0F24  01B3               	clrf	___flmul@prod
  4187  0F25  01B4               	clrf	___flmul@prod+1
  4188  0F26  01B5               	clrf	___flmul@prod+2
  4189  0F27  01B6               	clrf	___flmul@prod+3
  4190  0F28  01AC               	clrf	___flmul@sign
  4191  0F29  2F38               	goto	l1115
  4192  0F2A                     l3670:	
  4193  0F2A  0020               	movlb	0	; select bank0
  4194  0F2B  0837               	movf	___flmul@temp,w
  4195  0F2C  00B2               	movwf	___flmul@bexp
  4196  0F2D  30FF               	movlw	255
  4197  0F2E  05B3               	andwf	___flmul@prod,f
  4198  0F2F  05B4               	andwf	___flmul@prod+1,f
  4199  0F30  307F               	movlw	127
  4200  0F31  05B5               	andwf	___flmul@prod+2,f
  4201  0F32  3000               	movlw	0
  4202  0F33  01B6               	clrf	___flmul@prod+3
  4203  0F34  1832               	btfsc	___flmul@bexp,0
  4204  0F35  17B5               	bsf	___flmul@prod+2,7
  4205  0F36  3632               	lsrf	___flmul@bexp,w
  4206  0F37  00B6               	movwf	___flmul@prod+3
  4207  0F38                     l1115:	
  4208  0F38  082C               	movf	___flmul@sign,w
  4209  0F39  04B6               	iorwf	___flmul@prod+3,f
  4210  0F3A  0836               	movf	___flmul@prod+3,w
  4211  0F3B  00A3               	movwf	?___flmul+3
  4212  0F3C  0835               	movf	___flmul@prod+2,w
  4213  0F3D  00A2               	movwf	?___flmul+2
  4214  0F3E  0834               	movf	___flmul@prod+1,w
  4215  0F3F  00A1               	movwf	?___flmul+1
  4216  0F40  0833               	movf	___flmul@prod,w
  4217  0F41  00A0               	movwf	?___flmul
  4218  0F42  0008               	return
  4219  0F43                     __end_of___flmul:	
  4220  0F43                     __ptext25:	
  4221 ;; *************** function __Umul8_16 *****************
  4222 ;; Defined at:
  4223 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8_16.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  multiplier      1    wreg     unsigned char 
  4226 ;;  multiplicand    1    0[COMMON] unsigned char 
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;  multiplier      1    5[COMMON] unsigned char 
  4229 ;;  word_mpld       2    6[COMMON] unsigned int 
  4230 ;;  product         2    3[COMMON] unsigned int 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  2    0[COMMON] unsigned int 
  4233 ;; Registers used:
  4234 ;;		wreg, status,2, status,0
  4235 ;; Tracked objects:
  4236 ;;		On entry : 1F/0
  4237 ;;		On exit  : 1F/0
  4238 ;;		Unchanged: 1F/0
  4239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4240 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4241 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4243 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4244 ;;Total ram usage:        8 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:    1
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		___flmul
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           
  4255                           ;psect for function __Umul8_16
  4256  0F43                     __Umul8_16:	
  4257                           
  4258                           ;incstack = 0
  4259                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4260                           ;__Umul8_16@multiplier stored from wreg
  4261  0F43  00F5               	movwf	__Umul8_16@multiplier
  4262  0F44  01F3               	clrf	__Umul8_16@product
  4263  0F45  01F4               	clrf	__Umul8_16@product+1
  4264  0F46  0870               	movf	__Umul8_16@multiplicand,w
  4265  0F47  00F6               	movwf	__Umul8_16@word_mpld
  4266  0F48  01F7               	clrf	__Umul8_16@word_mpld+1
  4267  0F49  1C75               	btfss	__Umul8_16@multiplier,0
  4268  0F4A  2F4F               	goto	l3176
  4269  0F4B  0876               	movf	__Umul8_16@word_mpld,w
  4270  0F4C  07F3               	addwf	__Umul8_16@product,f
  4271  0F4D  0877               	movf	__Umul8_16@word_mpld+1,w
  4272  0F4E  3DF4               	addwfc	__Umul8_16@product+1,f
  4273  0F4F                     l3176:	
  4274  0F4F  35F6               	lslf	__Umul8_16@word_mpld,f
  4275  0F50  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4276  0F51  1CF5               	btfss	__Umul8_16@multiplier,1
  4277  0F52  2F57               	goto	l3182
  4278  0F53  0876               	movf	__Umul8_16@word_mpld,w
  4279  0F54  07F3               	addwf	__Umul8_16@product,f
  4280  0F55  0877               	movf	__Umul8_16@word_mpld+1,w
  4281  0F56  3DF4               	addwfc	__Umul8_16@product+1,f
  4282  0F57                     l3182:	
  4283  0F57  35F6               	lslf	__Umul8_16@word_mpld,f
  4284  0F58  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4285  0F59  1D75               	btfss	__Umul8_16@multiplier,2
  4286  0F5A  2F5F               	goto	l3188
  4287  0F5B  0876               	movf	__Umul8_16@word_mpld,w
  4288  0F5C  07F3               	addwf	__Umul8_16@product,f
  4289  0F5D  0877               	movf	__Umul8_16@word_mpld+1,w
  4290  0F5E  3DF4               	addwfc	__Umul8_16@product+1,f
  4291  0F5F                     l3188:	
  4292  0F5F  35F6               	lslf	__Umul8_16@word_mpld,f
  4293  0F60  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4294  0F61  1DF5               	btfss	__Umul8_16@multiplier,3
  4295  0F62  2F67               	goto	l3194
  4296  0F63  0876               	movf	__Umul8_16@word_mpld,w
  4297  0F64  07F3               	addwf	__Umul8_16@product,f
  4298  0F65  0877               	movf	__Umul8_16@word_mpld+1,w
  4299  0F66  3DF4               	addwfc	__Umul8_16@product+1,f
  4300  0F67                     l3194:	
  4301  0F67  35F6               	lslf	__Umul8_16@word_mpld,f
  4302  0F68  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4303  0F69  1E75               	btfss	__Umul8_16@multiplier,4
  4304  0F6A  2F6F               	goto	l3200
  4305  0F6B  0876               	movf	__Umul8_16@word_mpld,w
  4306  0F6C  07F3               	addwf	__Umul8_16@product,f
  4307  0F6D  0877               	movf	__Umul8_16@word_mpld+1,w
  4308  0F6E  3DF4               	addwfc	__Umul8_16@product+1,f
  4309  0F6F                     l3200:	
  4310  0F6F  35F6               	lslf	__Umul8_16@word_mpld,f
  4311  0F70  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4312  0F71  1EF5               	btfss	__Umul8_16@multiplier,5
  4313  0F72  2F77               	goto	l3206
  4314  0F73  0876               	movf	__Umul8_16@word_mpld,w
  4315  0F74  07F3               	addwf	__Umul8_16@product,f
  4316  0F75  0877               	movf	__Umul8_16@word_mpld+1,w
  4317  0F76  3DF4               	addwfc	__Umul8_16@product+1,f
  4318  0F77                     l3206:	
  4319  0F77  35F6               	lslf	__Umul8_16@word_mpld,f
  4320  0F78  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4321  0F79  1F75               	btfss	__Umul8_16@multiplier,6
  4322  0F7A  2F7F               	goto	l3212
  4323  0F7B  0876               	movf	__Umul8_16@word_mpld,w
  4324  0F7C  07F3               	addwf	__Umul8_16@product,f
  4325  0F7D  0877               	movf	__Umul8_16@word_mpld+1,w
  4326  0F7E  3DF4               	addwfc	__Umul8_16@product+1,f
  4327  0F7F                     l3212:	
  4328  0F7F  35F6               	lslf	__Umul8_16@word_mpld,f
  4329  0F80  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4330  0F81  1FF5               	btfss	__Umul8_16@multiplier,7
  4331  0F82  2F87               	goto	l1147
  4332  0F83  0876               	movf	__Umul8_16@word_mpld,w
  4333  0F84  07F3               	addwf	__Umul8_16@product,f
  4334  0F85  0877               	movf	__Umul8_16@word_mpld+1,w
  4335  0F86  3DF4               	addwfc	__Umul8_16@product+1,f
  4336  0F87                     l1147:	
  4337  0F87  0874               	movf	__Umul8_16@product+1,w
  4338  0F88  00F1               	movwf	?__Umul8_16+1
  4339  0F89  0873               	movf	__Umul8_16@product,w
  4340  0F8A  00F0               	movwf	?__Umul8_16
  4341  0F8B  0008               	return
  4342  0F8C                     __end_of__Umul8_16:	
  4343  0F8C                     __ptext22:	
  4344 ;; *************** function ___xxtofl *****************
  4345 ;; Defined at:
  4346 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  sign            1    wreg     unsigned char 
  4349 ;;  val             4    0[COMMON] long 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  sign            1    8[COMMON] unsigned char 
  4352 ;;  arg             4   10[COMMON] unsigned long 
  4353 ;;  exp             1    9[COMMON] unsigned char 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  4    0[COMMON] unsigned char 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0
  4358 ;; Tracked objects:
  4359 ;;		On entry : 1F/0
  4360 ;;		On exit  : 1F/0
  4361 ;;		Unchanged: 1F/0
  4362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4363 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4364 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4365 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4366 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4367 ;;Total ram usage:       14 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    1
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		_get_30v_current
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           
  4378                           ;psect for function ___xxtofl
  4379  0F8C                     ___xxtofl:	
  4380                           
  4381                           ;incstack = 0
  4382                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4383                           ;___xxtofl@sign stored from wreg
  4384  0F8C  00F8               	movwf	___xxtofl@sign
  4385  0F8D  0878               	movf	___xxtofl@sign,w
  4386  0F8E  1D03               	btfss	3,2
  4387  0F8F  1FF3               	btfss	___xxtofl@val+3,7
  4388  0F90  2FA1               	goto	l3688
  4389  0F91  0970               	comf	___xxtofl@val,w
  4390  0F92  00FA               	movwf	___xxtofl@arg
  4391  0F93  0971               	comf	___xxtofl@val+1,w
  4392  0F94  00FB               	movwf	___xxtofl@arg+1
  4393  0F95  0972               	comf	___xxtofl@val+2,w
  4394  0F96  00FC               	movwf	___xxtofl@arg+2
  4395  0F97  0973               	comf	___xxtofl@val+3,w
  4396  0F98  00FD               	movwf	___xxtofl@arg+3
  4397  0F99  0AFA               	incf	___xxtofl@arg,f
  4398  0F9A  1903               	skipnz
  4399  0F9B  0AFB               	incf	___xxtofl@arg+1,f
  4400  0F9C  1903               	skipnz
  4401  0F9D  0AFC               	incf	___xxtofl@arg+2,f
  4402  0F9E  1903               	skipnz
  4403  0F9F  0AFD               	incf	___xxtofl@arg+3,f
  4404  0FA0  2FA9               	goto	l1122
  4405  0FA1                     l3688:	
  4406  0FA1  0873               	movf	___xxtofl@val+3,w
  4407  0FA2  00FD               	movwf	___xxtofl@arg+3
  4408  0FA3  0872               	movf	___xxtofl@val+2,w
  4409  0FA4  00FC               	movwf	___xxtofl@arg+2
  4410  0FA5  0871               	movf	___xxtofl@val+1,w
  4411  0FA6  00FB               	movwf	___xxtofl@arg+1
  4412  0FA7  0870               	movf	___xxtofl@val,w
  4413  0FA8  00FA               	movwf	___xxtofl@arg
  4414  0FA9                     l1122:	
  4415  0FA9  0873               	movf	___xxtofl@val+3,w
  4416  0FAA  0472               	iorwf	___xxtofl@val+2,w
  4417  0FAB  0471               	iorwf	___xxtofl@val+1,w
  4418  0FAC  0470               	iorwf	___xxtofl@val,w
  4419  0FAD  1D03               	skipz
  4420  0FAE  2FB4               	goto	l3692
  4421  0FAF  01F0               	clrf	?___xxtofl
  4422  0FB0  01F1               	clrf	?___xxtofl+1
  4423  0FB1  01F2               	clrf	?___xxtofl+2
  4424  0FB2  01F3               	clrf	?___xxtofl+3
  4425  0FB3  0008               	return
  4426  0FB4                     l3692:	
  4427  0FB4  3096               	movlw	150
  4428  0FB5  00F9               	movwf	___xxtofl@exp
  4429  0FB6                     l3696:	
  4430  0FB6  30FE               	movlw	254
  4431  0FB7  057D               	andwf	___xxtofl@arg+3,w
  4432  0FB8  1903               	btfsc	3,2
  4433  0FB9  2FCB               	goto	l3704
  4434  0FBA  0AF9               	incf	___xxtofl@exp,f
  4435  0FBB  36FD               	lsrf	___xxtofl@arg+3,f
  4436  0FBC  0CFC               	rrf	___xxtofl@arg+2,f
  4437  0FBD  0CFB               	rrf	___xxtofl@arg+1,f
  4438  0FBE  0CFA               	rrf	___xxtofl@arg,f
  4439  0FBF  2FB6               	goto	l3696
  4440  0FC0                     l3698:	
  4441  0FC0  3001               	movlw	1
  4442  0FC1  0AF9               	incf	___xxtofl@exp,f
  4443  0FC2  07FA               	addwf	___xxtofl@arg,f
  4444  0FC3  3000               	movlw	0
  4445  0FC4  3DFB               	addwfc	___xxtofl@arg+1,f
  4446  0FC5  3DFC               	addwfc	___xxtofl@arg+2,f
  4447  0FC6  3DFD               	addwfc	___xxtofl@arg+3,f
  4448  0FC7  36FD               	lsrf	___xxtofl@arg+3,f
  4449  0FC8  0CFC               	rrf	___xxtofl@arg+2,f
  4450  0FC9  0CFB               	rrf	___xxtofl@arg+1,f
  4451  0FCA  0CFA               	rrf	___xxtofl@arg,f
  4452  0FCB                     l3704:	
  4453  0FCB  30FF               	movlw	255
  4454  0FCC  057D               	andwf	___xxtofl@arg+3,w
  4455  0FCD  1903               	btfsc	3,2
  4456  0FCE  2FD9               	goto	l3708
  4457  0FCF  2FC0               	goto	l3698
  4458  0FD0                     l3710:	
  4459  0FD0  3002               	movlw	2
  4460  0FD1  0279               	subwf	___xxtofl@exp,w
  4461  0FD2  1C03               	btfss	3,0
  4462  0FD3  2FDB               	goto	l1135
  4463  0FD4  03F9               	decf	___xxtofl@exp,f
  4464  0FD5  35FA               	lslf	___xxtofl@arg,f
  4465  0FD6  0DFB               	rlf	___xxtofl@arg+1,f
  4466  0FD7  0DFC               	rlf	___xxtofl@arg+2,f
  4467  0FD8  0DFD               	rlf	___xxtofl@arg+3,f
  4468  0FD9                     l3708:	
  4469  0FD9  1FFC               	btfss	___xxtofl@arg+2,7
  4470  0FDA  2FD0               	goto	l3710
  4471  0FDB                     l1135:	
  4472  0FDB  1879               	btfsc	___xxtofl@exp,0
  4473  0FDC  2FE4               	goto	l3714
  4474  0FDD  30FF               	movlw	255
  4475  0FDE  05FA               	andwf	___xxtofl@arg,f
  4476  0FDF  05FB               	andwf	___xxtofl@arg+1,f
  4477  0FE0  307F               	movlw	127
  4478  0FE1  05FC               	andwf	___xxtofl@arg+2,f
  4479  0FE2  30FF               	movlw	255
  4480  0FE3  05FD               	andwf	___xxtofl@arg+3,f
  4481  0FE4                     l3714:	
  4482  0FE4  36F9               	lsrf	___xxtofl@exp,f
  4483  0FE5  0879               	movf	___xxtofl@exp,w
  4484  0FE6  00F7               	movwf	??___xxtofl+3
  4485  0FE7  01F6               	clrf	??___xxtofl+2
  4486  0FE8  01F5               	clrf	??___xxtofl+1
  4487  0FE9  01F4               	clrf	??___xxtofl
  4488  0FEA  0874               	movf	??___xxtofl,w
  4489  0FEB  04FA               	iorwf	___xxtofl@arg,f
  4490  0FEC  0875               	movf	??___xxtofl+1,w
  4491  0FED  04FB               	iorwf	___xxtofl@arg+1,f
  4492  0FEE  0876               	movf	??___xxtofl+2,w
  4493  0FEF  04FC               	iorwf	___xxtofl@arg+2,f
  4494  0FF0  0877               	movf	??___xxtofl+3,w
  4495  0FF1  04FD               	iorwf	___xxtofl@arg+3,f
  4496  0FF2  0878               	movf	___xxtofl@sign,w
  4497  0FF3  1D03               	btfss	3,2
  4498  0FF4  1FF3               	btfss	___xxtofl@val+3,7
  4499  0FF5  2FF7               	goto	l3722
  4500  0FF6  17FD               	bsf	___xxtofl@arg+3,7
  4501  0FF7                     l3722:	
  4502  0FF7  087D               	movf	___xxtofl@arg+3,w
  4503  0FF8  00F3               	movwf	?___xxtofl+3
  4504  0FF9  087C               	movf	___xxtofl@arg+2,w
  4505  0FFA  00F2               	movwf	?___xxtofl+2
  4506  0FFB  087B               	movf	___xxtofl@arg+1,w
  4507  0FFC  00F1               	movwf	?___xxtofl+1
  4508  0FFD  087A               	movf	___xxtofl@arg,w
  4509  0FFE  00F0               	movwf	?___xxtofl
  4510  0FFF  0008               	return
  4511  1000                     __end_of___xxtofl:	
  4512                           
  4513                           	psect	text23
  4514  0731                     __ptext23:	
  4515 ;; *************** function ___fltol *****************
  4516 ;; Defined at:
  4517 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  f1              4   45[BANK0 ] unsigned char 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  exp1            1   54[BANK0 ] unsigned char 
  4522 ;;  sign1           1   53[BANK0 ] unsigned char 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  4   45[BANK0 ] long 
  4525 ;; Registers used:
  4526 ;;		wreg, status,2, status,0
  4527 ;; Tracked objects:
  4528 ;;		On entry : 1F/0
  4529 ;;		On exit  : 1F/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4532 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4533 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4534 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4535 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4536 ;;Total ram usage:       10 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    1
  4539 ;; This function calls:
  4540 ;;		Nothing
  4541 ;; This function is called by:
  4542 ;;		_get_30v_current
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           
  4547                           ;psect for function ___fltol
  4548  0731                     ___fltol:	
  4549                           
  4550                           ;incstack = 0
  4551                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4552  0731  084D               	movf	___fltol@f1,w
  4553  0732  00D1               	movwf	??___fltol
  4554  0733  084E               	movf	___fltol@f1+1,w
  4555  0734  00D2               	movwf	??___fltol+1
  4556  0735  084F               	movf	___fltol@f1+2,w
  4557  0736  00D3               	movwf	??___fltol+2
  4558  0737  0850               	movf	___fltol@f1+3,w
  4559  0738  00D4               	movwf	??___fltol+3
  4560  0739  1003               	clrc
  4561  073A  0D53               	rlf	??___fltol+2,w
  4562  073B  0D54               	rlf	??___fltol+3,w
  4563  073C  00D6               	movwf	___fltol@exp1
  4564  073D  0856               	movf	___fltol@exp1,w
  4565  073E  1D03               	btfss	3,2
  4566  073F  2F45               	goto	l3352
  4567  0740                     l3350:	
  4568  0740  01CD               	clrf	?___fltol
  4569  0741  01CE               	clrf	?___fltol+1
  4570  0742  01CF               	clrf	?___fltol+2
  4571  0743  01D0               	clrf	?___fltol+3
  4572  0744  0008               	return
  4573  0745                     l3352:	
  4574  0745  084D               	movf	___fltol@f1,w
  4575  0746  00D1               	movwf	??___fltol
  4576  0747  084E               	movf	___fltol@f1+1,w
  4577  0748  00D2               	movwf	??___fltol+1
  4578  0749  084F               	movf	___fltol@f1+2,w
  4579  074A  00D3               	movwf	??___fltol+2
  4580  074B  0850               	movf	___fltol@f1+3,w
  4581  074C  00D4               	movwf	??___fltol+3
  4582  074D  301F               	movlw	31
  4583  074E                     u3205:	
  4584  074E  36D4               	lsrf	??___fltol+3,f
  4585  074F  0CD3               	rrf	??___fltol+2,f
  4586  0750  0CD2               	rrf	??___fltol+1,f
  4587  0751  0CD1               	rrf	??___fltol,f
  4588  0752  0B89               	decfsz	9,f
  4589  0753  2F4E               	goto	u3205
  4590  0754  0851               	movf	??___fltol,w
  4591  0755  00D5               	movwf	___fltol@sign1
  4592  0756  3096               	movlw	150
  4593  0757  17CF               	bsf	___fltol@f1+2,7
  4594  0758  01D0               	clrf	___fltol@f1+3
  4595  0759  02D6               	subwf	___fltol@exp1,f
  4596  075A  1FD6               	btfss	___fltol@exp1,7
  4597  075B  2F68               	goto	l3370
  4598  075C  0856               	movf	___fltol@exp1,w
  4599  075D  3A80               	xorlw	128
  4600  075E  3E97               	addlw	151
  4601  075F  1C03               	btfss	3,0
  4602  0760  2F40               	goto	l3350
  4603  0761                     l3366:	
  4604  0761  36D0               	lsrf	___fltol@f1+3,f
  4605  0762  0CCF               	rrf	___fltol@f1+2,f
  4606  0763  0CCE               	rrf	___fltol@f1+1,f
  4607  0764  0CCD               	rrf	___fltol@f1,f
  4608  0765  0FD6               	incfsz	___fltol@exp1,f
  4609  0766  2F61               	goto	l3366
  4610  0767  2F75               	goto	l3378
  4611  0768                     l3370:	
  4612  0768  3020               	movlw	32
  4613  0769  0256               	subwf	___fltol@exp1,w
  4614  076A  1803               	btfsc	3,0
  4615  076B  2F40               	goto	l3350
  4616  076C                     l3376:	
  4617  076C  0856               	movf	___fltol@exp1,w
  4618  076D  1903               	btfsc	3,2
  4619  076E  2F75               	goto	l3378
  4620  076F  35CD               	lslf	___fltol@f1,f
  4621  0770  0DCE               	rlf	___fltol@f1+1,f
  4622  0771  0DCF               	rlf	___fltol@f1+2,f
  4623  0772  0DD0               	rlf	___fltol@f1+3,f
  4624  0773  03D6               	decf	___fltol@exp1,f
  4625  0774  2F6C               	goto	l3376
  4626  0775                     l3378:	
  4627  0775  0855               	movf	___fltol@sign1,w
  4628  0776  1903               	btfsc	3,2
  4629  0777  0008               	return
  4630  0778  09CD               	comf	___fltol@f1,f
  4631  0779  09CE               	comf	___fltol@f1+1,f
  4632  077A  09CF               	comf	___fltol@f1+2,f
  4633  077B  09D0               	comf	___fltol@f1+3,f
  4634  077C  0ACD               	incf	___fltol@f1,f
  4635  077D  1903               	skipnz
  4636  077E  0ACE               	incf	___fltol@f1+1,f
  4637  077F  1903               	skipnz
  4638  0780  0ACF               	incf	___fltol@f1+2,f
  4639  0781  1903               	skipnz
  4640  0782  0AD0               	incf	___fltol@f1+3,f
  4641  0783  0008               	return
  4642  0784                     __end_of___fltol:	
  4643                           
  4644                           	psect	text28
  4645  08BE                     __ptext28:	
  4646 ;; *************** function _Vout_set *****************
  4647 ;; Defined at:
  4648 ;;		line 2115 in file "Multi_RX_testjig_v2.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  Volts           2    4[COMMON] int 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;  digi_step       4    6[COMMON] unsigned long 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;		None               void
  4655 ;; Registers used:
  4656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/4
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4663 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4665 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4666 ;;Total ram usage:        6 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:    3
  4669 ;; This function calls:
  4670 ;;		_digitalpot
  4671 ;; This function is called by:
  4672 ;;		_main
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           
  4677                           ;psect for function _Vout_set
  4678  08BE                     _Vout_set:	
  4679                           
  4680                           ;Multi_RX_testjig_v2.c: 2125: switch(Volts)
  4681                           
  4682                           ;incstack = 0
  4683                           ; Regs used in _Vout_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4684  08BE  28CB               	goto	l3906
  4685  08BF                     l3898:	
  4686                           
  4687                           ;Multi_RX_testjig_v2.c: 2130: digi_step = 52;
  4688  08BF  3034               	movlw	52
  4689  08C0  28C4               	goto	L29
  4690  08C1                     l3900:	
  4691                           ;Multi_RX_testjig_v2.c: 2131: break;
  4692                           
  4693                           
  4694                           ;Multi_RX_testjig_v2.c: 2133: digi_step = 75;
  4695  08C1  304B               	movlw	75
  4696  08C2  28C4               	goto	L29
  4697  08C3                     l3902:	
  4698                           ;Multi_RX_testjig_v2.c: 2134: break;
  4699                           
  4700                           
  4701                           ;Multi_RX_testjig_v2.c: 2136: digi_step = 126;
  4702  08C3  307E               	movlw	126
  4703  08C4                     L29:	
  4704  08C4  00F6               	movwf	Vout_set@digi_step
  4705  08C5  28C7               	goto	L30
  4706  08C6                     l726:	
  4707                           ;Multi_RX_testjig_v2.c: 2138: default:
  4708                           
  4709                           ;Multi_RX_testjig_v2.c: 2137: break;
  4710                           
  4711                           
  4712                           ;Multi_RX_testjig_v2.c: 2139: digi_step = 0;
  4713  08C6  01F6               	clrf	Vout_set@digi_step
  4714  08C7                     L30:	
  4715  08C7  01F7               	clrf	Vout_set@digi_step+1
  4716  08C8  01F8               	clrf	Vout_set@digi_step+2
  4717  08C9  01F9               	clrf	Vout_set@digi_step+3
  4718                           
  4719                           ;Multi_RX_testjig_v2.c: 2140: break;
  4720  08CA  28DB               	goto	l3908
  4721  08CB                     l3906:	
  4722                           
  4723                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4724                           ; Switch size 1, requested type "speed"
  4725                           ; Number of cases is 1, Range of values is 0 to 0
  4726                           ; switch strategies available:
  4727                           ; Name         Instructions Cycles
  4728                           ; simple_byte            4     3 (average)
  4729                           ; direct_byte            8     6 (fixed)
  4730                           ; jumptable            260     6 (fixed)
  4731                           ;	Chosen strategy is simple_byte
  4732  08CB  0875               	movf	Vout_set@Volts+1,w
  4733  08CC  3A00               	xorlw	0	; case 0
  4734  08CD  1903               	skipnz
  4735  08CE  28D0               	goto	l4908
  4736  08CF  28C6               	goto	l726
  4737  08D0                     l4908:	
  4738                           
  4739                           ; Switch size 1, requested type "speed"
  4740                           ; Number of cases is 3, Range of values is 12 to 27
  4741                           ; switch strategies available:
  4742                           ; Name         Instructions Cycles
  4743                           ; simple_byte           10     6 (average)
  4744                           ; direct_byte           41     9 (fixed)
  4745                           ; jumptable            263     9 (fixed)
  4746                           ;	Chosen strategy is simple_byte
  4747  08D0  0874               	movf	Vout_set@Volts,w
  4748  08D1  3A0C               	xorlw	12	; case 12
  4749  08D2  1903               	skipnz
  4750  08D3  28BF               	goto	l3898
  4751  08D4  3A1C               	xorlw	28	; case 16
  4752  08D5  1903               	skipnz
  4753  08D6  28C1               	goto	l3900
  4754  08D7  3A0B               	xorlw	11	; case 27
  4755  08D8  1903               	skipnz
  4756  08D9  28C3               	goto	l3902
  4757  08DA  28C6               	goto	l726
  4758  08DB                     l3908:	
  4759                           
  4760                           ;Multi_RX_testjig_v2.c: 2147: digitalpot((unsigned char) digi_step);
  4761  08DB  0876               	movf	Vout_set@digi_step,w
  4762  08DC  2B6A               	ljmp	_digitalpot
  4763  08DD                     __end_of_Vout_set:	
  4764  08DD                     __ptext15:	
  4765 ;; *************** function _lcd_set_cursor *****************
  4766 ;; Defined at:
  4767 ;;		line 1330 in file "Multi_RX_testjig_v2.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  row             1    wreg     unsigned char 
  4770 ;;  col             1    1[COMMON] unsigned char 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  row             1    2[COMMON] unsigned char 
  4773 ;;  LCD_position    1    3[COMMON] unsigned char 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;		None               void
  4776 ;; Registers used:
  4777 ;;		wreg, status,2, status,0, pclath, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 1F/0
  4780 ;;		On exit  : 1F/4
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4783 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4784 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4786 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4787 ;;Total ram usage:        3 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:    2
  4790 ;; This function calls:
  4791 ;;		_i2c_Start
  4792 ;;		_i2c_Stop
  4793 ;;		_i2c_Write
  4794 ;; This function is called by:
  4795 ;;		_lcd_print_int
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           
  4800                           ;psect for function _lcd_set_cursor
  4801  08DD                     _lcd_set_cursor:	
  4802                           
  4803                           ;incstack = 0
  4804                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4805                           ;lcd_set_cursor@row stored from wreg
  4806  08DD  00F2               	movwf	lcd_set_cursor@row
  4807                           
  4808                           ;Multi_RX_testjig_v2.c: 1333: col--;
  4809  08DE  03F1               	decf	lcd_set_cursor@col,f
  4810                           
  4811                           ;Multi_RX_testjig_v2.c: 1334: i2c_Start();
  4812  08DF  23E1  3188         	fcall	_i2c_Start
  4813                           
  4814                           ;Multi_RX_testjig_v2.c: 1335: i2c_Write(0x7C);
  4815  08E1  307C               	movlw	124
  4816  08E2  23D5  3188         	fcall	_i2c_Write
  4817                           
  4818                           ;Multi_RX_testjig_v2.c: 1336: i2c_Write(0x00);
  4819  08E4  3000               	movlw	0
  4820  08E5  23D5  3188         	fcall	_i2c_Write
  4821                           
  4822                           ;Multi_RX_testjig_v2.c: 1337: LCD_position = col & 0b11001111;
  4823  08E7  0871               	movf	lcd_set_cursor@col,w
  4824  08E8  00F3               	movwf	lcd_set_cursor@LCD_position
  4825  08E9  30CF               	movlw	207
  4826  08EA  05F3               	andwf	lcd_set_cursor@LCD_position,f
  4827                           
  4828                           ;Multi_RX_testjig_v2.c: 1338: if(row == 1)
  4829  08EB  0B72               	decfsz	lcd_set_cursor@row,w
  4830  08EC  28EF               	goto	l3290
  4831                           
  4832                           ;Multi_RX_testjig_v2.c: 1339: LCD_position |= 0b10000000;
  4833  08ED  17F3               	bsf	lcd_set_cursor@LCD_position,7
  4834  08EE  28F1               	goto	l3292
  4835  08EF                     l3290:	
  4836                           
  4837                           ;Multi_RX_testjig_v2.c: 1340: else
  4838                           ;Multi_RX_testjig_v2.c: 1341: LCD_position |= 0b11000000;
  4839  08EF  30C0               	movlw	192
  4840  08F0  04F3               	iorwf	lcd_set_cursor@LCD_position,f
  4841  08F1                     l3292:	
  4842                           
  4843                           ;Multi_RX_testjig_v2.c: 1342: i2c_Write(LCD_position);
  4844  08F1  0873               	movf	lcd_set_cursor@LCD_position,w
  4845  08F2  23D5  3188         	fcall	_i2c_Write
  4846                           
  4847                           ;Multi_RX_testjig_v2.c: 1343: i2c_Stop();
  4848  08F4  2BE6               	ljmp	l3054
  4849  08F5                     __end_of_lcd_set_cursor:	
  4850  08F5                     __ptext11:	
  4851 ;; *************** function _lcd_print_int *****************
  4852 ;; Defined at:
  4853 ;;		line 1906 in file "Multi_RX_testjig_v2.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  number          2   59[BANK0 ] unsigned int 
  4856 ;;  pos             2   61[BANK0 ] unsigned int 
  4857 ;;  decimal         1   63[BANK0 ] unsigned char 
  4858 ;;  ten_thou_dig    1   64[BANK0 ] unsigned char 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;		None               void
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0, pclath, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 1F/0
  4867 ;;		On exit  : 1F/4
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4870 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4873 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4874 ;;Total ram usage:        6 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    3
  4877 ;; This function calls:
  4878 ;;		_i2c_write_char
  4879 ;;		_lcd_set_cursor
  4880 ;;		_ten_thou_conv
  4881 ;; This function is called by:
  4882 ;;		_main
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           
  4887                           ;psect for function _lcd_print_int
  4888  08F5                     _lcd_print_int:	
  4889                           
  4890                           ;Multi_RX_testjig_v2.c: 1908: lcd_set_cursor(2, pos + 1 - ten_thou_digit);
  4891                           
  4892                           ;incstack = 0
  4893                           ; Regs used in _lcd_print_int: [wreg+status,2+status,0+pclath+cstack]
  4894  08F5  0860               	movf	lcd_print_int@ten_thou_digit,w
  4895  08F6  025D               	subwf	lcd_print_int@pos,w
  4896  08F7  3E01               	addlw	1
  4897  08F8  00F1               	movwf	lcd_set_cursor@col
  4898  08F9  3002               	movlw	2
  4899  08FA  20DD               	fcall	_lcd_set_cursor
  4900                           
  4901                           ;Multi_RX_testjig_v2.c: 1909: ten_thou_conv(number);
  4902  08FB  0020               	movlb	0	; select bank0
  4903  08FC  085C               	movf	lcd_print_int@number+1,w
  4904  08FD  00F7               	movwf	ten_thou_conv@n+1
  4905  08FE  085B               	movf	lcd_print_int@number,w
  4906  08FF  00F6               	movwf	ten_thou_conv@n
  4907  0900  3193  23EC  3188   	fcall	_ten_thou_conv
  4908                           
  4909                           ;Multi_RX_testjig_v2.c: 1910: if(ten_thou_digit)
  4910  0903  0020               	movlb	0	; select bank0
  4911  0904  0860               	movf	lcd_print_int@ten_thou_digit,w
  4912  0905  1903               	btfsc	3,2
  4913  0906  2912               	goto	l3940
  4914                           
  4915                           ;Multi_RX_testjig_v2.c: 1911: {
  4916                           ;Multi_RX_testjig_v2.c: 1912: if(ten_thou != 0 || decimal & 0x10)
  4917  0907  086F               	movf	_ten_thou,w
  4918  0908  1D03               	btfss	3,2
  4919  0909  290C               	goto	l3936
  4920  090A  1E5F               	btfss	lcd_print_int@decimal,4
  4921  090B  290F               	goto	l3938
  4922  090C                     l3936:	
  4923                           
  4924                           ;Multi_RX_testjig_v2.c: 1913: i2c_write_char(ten_thou + 48);
  4925  090C  086F               	movf	_ten_thou,w
  4926  090D  3E30               	addlw	48
  4927  090E  2910               	goto	L21
  4928  090F                     l3938:	
  4929                           
  4930                           ;Multi_RX_testjig_v2.c: 1914: else i2c_write_char(' ');
  4931  090F  3020               	movlw	32
  4932  0910                     L21:	
  4933  0910  2170  3188         	fcall	_i2c_write_char
  4934  0912                     l3940:	
  4935                           
  4936                           ;Multi_RX_testjig_v2.c: 1915: }
  4937                           ;Multi_RX_testjig_v2.c: 1916: if(decimal & 0x10)i2c_write_char('.');
  4938  0912  0020               	movlb	0	; select bank0
  4939  0913  1E5F               	btfss	lcd_print_int@decimal,4
  4940  0914  2918               	goto	l3944
  4941  0915  302E               	movlw	46
  4942  0916  2170  3188         	fcall	_i2c_write_char
  4943  0918                     l3944:	
  4944                           
  4945                           ;Multi_RX_testjig_v2.c: 1917: if(thou != 0 || ten_thou != 0 || decimal & 0x18)
  4946  0918  0021               	movlb	1	; select bank1
  4947  0919  0838               	movf	_thou^(0+128),w
  4948  091A  1D03               	btfss	3,2
  4949  091B  2924               	goto	l3950
  4950  091C  0020               	movlb	0	; select bank0
  4951  091D  086F               	movf	_ten_thou,w
  4952  091E  1D03               	btfss	3,2
  4953  091F  2924               	goto	l3950
  4954  0920  085F               	movf	lcd_print_int@decimal,w
  4955  0921  3918               	andlw	24
  4956  0922  1903               	btfsc	3,2
  4957  0923  2928               	goto	l3952
  4958  0924                     l3950:	
  4959                           
  4960                           ;Multi_RX_testjig_v2.c: 1918: i2c_write_char(thou + 48);
  4961  0924  0021               	movlb	1	; select bank1
  4962  0925  0838               	movf	_thou^(0+128),w
  4963  0926  3E30               	addlw	48
  4964  0927  2929               	goto	L22
  4965  0928                     l3952:	
  4966                           
  4967                           ;Multi_RX_testjig_v2.c: 1919: else i2c_write_char(' ');
  4968  0928  3020               	movlw	32
  4969  0929                     L22:	
  4970  0929  2170  3188         	fcall	_i2c_write_char
  4971                           
  4972                           ;Multi_RX_testjig_v2.c: 1920: if(decimal & 0x08)i2c_write_char('.');
  4973  092B  0020               	movlb	0	; select bank0
  4974  092C  1DDF               	btfss	lcd_print_int@decimal,3
  4975  092D  2931               	goto	l3958
  4976  092E  302E               	movlw	46
  4977  092F  2170  3188         	fcall	_i2c_write_char
  4978  0931                     l3958:	
  4979                           
  4980                           ;Multi_RX_testjig_v2.c: 1921: if(hund != 0 || thou != 0 || ten_thou != 0 || decimal & 0x
      +                          1C)
  4981  0931  0021               	movlb	1	; select bank1
  4982  0932  0834               	movf	_hund^(0+128),w
  4983  0933  1D03               	btfss	3,2
  4984  0934  2940               	goto	l3966
  4985  0935  0838               	movf	_thou^(0+128),w
  4986  0936  1D03               	btfss	3,2
  4987  0937  2940               	goto	l3966
  4988  0938  0020               	movlb	0	; select bank0
  4989  0939  086F               	movf	_ten_thou,w
  4990  093A  1D03               	btfss	3,2
  4991  093B  2940               	goto	l3966
  4992  093C  085F               	movf	lcd_print_int@decimal,w
  4993  093D  391C               	andlw	28
  4994  093E  1903               	btfsc	3,2
  4995  093F  2944               	goto	l3968
  4996  0940                     l3966:	
  4997                           
  4998                           ;Multi_RX_testjig_v2.c: 1922: i2c_write_char(hund + 48);
  4999  0940  0021               	movlb	1	; select bank1
  5000  0941  0834               	movf	_hund^(0+128),w
  5001  0942  3E30               	addlw	48
  5002  0943  2945               	goto	L23
  5003  0944                     l3968:	
  5004                           
  5005                           ;Multi_RX_testjig_v2.c: 1923: else i2c_write_char(' ');
  5006  0944  3020               	movlw	32
  5007  0945                     L23:	
  5008  0945  2170  3188         	fcall	_i2c_write_char
  5009                           
  5010                           ;Multi_RX_testjig_v2.c: 1924: if(decimal & 0x04)i2c_write_char('.');
  5011  0947  0020               	movlb	0	; select bank0
  5012  0948  1D5F               	btfss	lcd_print_int@decimal,2
  5013  0949  294D               	goto	l3974
  5014  094A  302E               	movlw	46
  5015  094B  2170  3188         	fcall	_i2c_write_char
  5016  094D                     l3974:	
  5017                           
  5018                           ;Multi_RX_testjig_v2.c: 1925: if(ten != 0 || hund != 0 || thou != 0 || ten_thou != 0 || 
      +                          decimal & 0x1E)
  5019  094D  0021               	movlb	1	; select bank1
  5020  094E  0836               	movf	_ten^(0+128),w
  5021  094F  1D03               	btfss	3,2
  5022  0950  295F               	goto	l3984
  5023  0951  0834               	movf	_hund^(0+128),w
  5024  0952  1D03               	btfss	3,2
  5025  0953  295F               	goto	l3984
  5026  0954  0838               	movf	_thou^(0+128),w
  5027  0955  1D03               	btfss	3,2
  5028  0956  295F               	goto	l3984
  5029  0957  0020               	movlb	0	; select bank0
  5030  0958  086F               	movf	_ten_thou,w
  5031  0959  1D03               	btfss	3,2
  5032  095A  295F               	goto	l3984
  5033  095B  085F               	movf	lcd_print_int@decimal,w
  5034  095C  391E               	andlw	30
  5035  095D  1903               	btfsc	3,2
  5036  095E  2963               	goto	l3986
  5037  095F                     l3984:	
  5038                           
  5039                           ;Multi_RX_testjig_v2.c: 1926: i2c_write_char(ten + 48);
  5040  095F  0021               	movlb	1	; select bank1
  5041  0960  0836               	movf	_ten^(0+128),w
  5042  0961  3E30               	addlw	48
  5043  0962  2964               	goto	L24
  5044  0963                     l3986:	
  5045                           
  5046                           ;Multi_RX_testjig_v2.c: 1927: else i2c_write_char(' ');
  5047  0963  3020               	movlw	32
  5048  0964                     L24:	
  5049  0964  2170  3188         	fcall	_i2c_write_char
  5050                           
  5051                           ;Multi_RX_testjig_v2.c: 1928: if(decimal & 0x02)i2c_write_char('.');
  5052  0966  0020               	movlb	0	; select bank0
  5053  0967  1CDF               	btfss	lcd_print_int@decimal,1
  5054  0968  296C               	goto	l657
  5055  0969  302E               	movlw	46
  5056  096A  2170  3188         	fcall	_i2c_write_char
  5057  096C                     l657:	
  5058                           
  5059                           ;Multi_RX_testjig_v2.c: 1929: i2c_write_char(unit + 48);
  5060  096C  0021               	movlb	1	; select bank1
  5061  096D  0837               	movf	_unit^(0+128),w
  5062  096E  3E30               	addlw	48
  5063  096F  2970               	ljmp	_i2c_write_char
  5064  0970                     __end_of_lcd_print_int:	
  5065  0970                     __ptext16:	
  5066 ;; *************** function _i2c_write_char *****************
  5067 ;; Defined at:
  5068 ;;		line 1246 in file "Multi_RX_testjig_v2.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  char_data       1    wreg     unsigned char 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  char_data       1    1[COMMON] unsigned char 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;		None               void
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0, pclath, cstack
  5077 ;; Tracked objects:
  5078 ;;		On entry : 1E/0
  5079 ;;		On exit  : 1F/4
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5086 ;;Total ram usage:        1 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:    2
  5089 ;; This function calls:
  5090 ;;		_i2c_Start
  5091 ;;		_i2c_Stop
  5092 ;;		_i2c_Write
  5093 ;; This function is called by:
  5094 ;;		_lcd_print_int
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           
  5099                           ;psect for function _i2c_write_char
  5100  0970                     _i2c_write_char:	
  5101                           
  5102                           ;incstack = 0
  5103                           ; Regs used in _i2c_write_char: [wreg+status,2+status,0+pclath+cstack]
  5104                           ;i2c_write_char@char_data stored from wreg
  5105  0970  00F1               	movwf	i2c_write_char@char_data
  5106                           
  5107                           ;Multi_RX_testjig_v2.c: 1248: i2c_Start();
  5108  0971  23E1  3188         	fcall	_i2c_Start
  5109                           
  5110                           ;Multi_RX_testjig_v2.c: 1249: i2c_Write(0x7C);
  5111  0973  307C               	movlw	124
  5112  0974  23D5  3188         	fcall	_i2c_Write
  5113                           
  5114                           ;Multi_RX_testjig_v2.c: 1250: i2c_Write(0x40);
  5115  0976  3040               	movlw	64
  5116  0977  23D5  3188         	fcall	_i2c_Write
  5117                           
  5118                           ;Multi_RX_testjig_v2.c: 1251: i2c_Write(char_data);
  5119  0979  0871               	movf	i2c_write_char@char_data,w
  5120  097A  23D5  3188         	fcall	_i2c_Write
  5121                           
  5122                           ;Multi_RX_testjig_v2.c: 1252: i2c_Stop();
  5123  097C  2BE6               	ljmp	l3054
  5124  097D                     __end_of_i2c_write_char:	
  5125  097D                     __ptext1:	
  5126 ;; *************** function _testjig_done *****************
  5127 ;; Defined at:
  5128 ;;		line 1127 in file "Multi_RX_testjig_v2.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  state           1    wreg     unsigned char 
  5131 ;;  device_type     1    8[COMMON] unsigned char 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;  state           1   12[COMMON] unsigned char 
  5134 ;; Return value:  Size  Location     Type
  5135 ;;		None               void
  5136 ;; Registers used:
  5137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5138 ;; Tracked objects:
  5139 ;;		On entry : 1E/1
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5143 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5145 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5146 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5147 ;;Total ram usage:        5 bytes
  5148 ;; Hardware stack levels used:    1
  5149 ;; Hardware stack levels required when called:    4
  5150 ;; This function calls:
  5151 ;;		_buzz_one
  5152 ;;		_debug_fast_tx
  5153 ;;		_power_supply_set
  5154 ;;		_print_screen
  5155 ;; This function is called by:
  5156 ;;		_main
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           
  5161                           ;psect for function _testjig_done
  5162  097D                     _testjig_done:	
  5163                           
  5164                           ;incstack = 0
  5165                           ; Regs used in _testjig_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5166                           ;testjig_done@state stored from wreg
  5167  097D  00FC               	movwf	testjig_done@state
  5168  097E                     l484:	
  5169                           ;Multi_RX_testjig_v2.c: 1129: while(1)
  5170                           
  5171                           
  5172                           ;Multi_RX_testjig_v2.c: 1130: {
  5173                           ;Multi_RX_testjig_v2.c: 1131: RE0 = 0;
  5174  097E  0020               	movlb	0	; select bank0
  5175  097F  1010               	bcf	16,0	;volatile
  5176                           
  5177                           ;Multi_RX_testjig_v2.c: 1132: power_supply_set(3);
  5178  0980  3003               	movlw	3
  5179  0981  23F3  3188         	fcall	_power_supply_set
  5180                           
  5181                           ;Multi_RX_testjig_v2.c: 1133: LATA7 = 0;
  5182  0983  0022               	movlb	2	; select bank2
  5183  0984  138C               	bcf	12,7	;volatile
  5184                           
  5185                           ;Multi_RX_testjig_v2.c: 1134: LATB5 = 0;
  5186  0985  128D               	bcf	13,5	;volatile
  5187                           
  5188                           ;Multi_RX_testjig_v2.c: 1135: LATA6 = 0;
  5189  0986  130C               	bcf	12,6	;volatile
  5190                           
  5191                           ;Multi_RX_testjig_v2.c: 1136: TRISG0 = 1;
  5192  0987  0026               	movlb	6	; select bank6
  5193  0988  140D               	bsf	13,0	;volatile
  5194                           
  5195                           ;Multi_RX_testjig_v2.c: 1137: debug_fast_tx(11110);
  5196  0989  3066               	movlw	102
  5197  098A  00F0               	movwf	debug_fast_tx@data
  5198  098B  302B               	movlw	43
  5199  098C  00F1               	movwf	debug_fast_tx@data+1
  5200  098D  22A6  3188         	fcall	_debug_fast_tx
  5201                           
  5202                           ;Multi_RX_testjig_v2.c: 1138: debug_fast_tx(state);
  5203  098F  087C               	movf	testjig_done@state,w
  5204  0990  00F0               	movwf	debug_fast_tx@data
  5205  0991  01F1               	clrf	debug_fast_tx@data+1
  5206  0992  22A6  3188         	fcall	_debug_fast_tx
  5207                           
  5208                           ;Multi_RX_testjig_v2.c: 1139: switch(state)
  5209  0994  2A35               	goto	l3830
  5210  0995                     l3784:	
  5211                           
  5212                           ;Multi_RX_testjig_v2.c: 1142: if(device_type == 0xAA)
  5213  0995  30AA               	movlw	170
  5214  0996  0678               	xorwf	testjig_done@device_type,w
  5215  0997  1D03               	btfss	3,2
  5216  0998  299D               	goto	l3788
  5217                           
  5218                           ;Multi_RX_testjig_v2.c: 1143: print_screen("Condo3 Pass", " Remove board");
  5219  0999  309F               	movlw	low (STR_169| (0+32768))
  5220  099A  00F4               	movwf	print_screen@top
  5221  099B  3092               	movlw	high (STR_169| (0+32768))
  5222  099C  29B0               	goto	L14
  5223  099D                     l3788:	
  5224                           
  5225                           ;Multi_RX_testjig_v2.c: 1144: else if(device_type == 0xA1)
  5226  099D  30A1               	movlw	161
  5227  099E  0678               	xorwf	testjig_done@device_type,w
  5228  099F  1D03               	btfss	3,2
  5229  09A0  29A5               	goto	l3792
  5230                           
  5231                           ;Multi_RX_testjig_v2.c: 1145: print_screen("RX3 Pass", " Remove board");
  5232  09A1  306D               	movlw	low (STR_171| (0+32768))
  5233  09A2  00F4               	movwf	print_screen@top
  5234  09A3  3093               	movlw	high (STR_171| (0+32768))
  5235  09A4  29B0               	goto	L14
  5236  09A5                     l3792:	
  5237                           
  5238                           ;Multi_RX_testjig_v2.c: 1146: else if(device_type == 0xA2)
  5239  09A5  30A2               	movlw	162
  5240  09A6  0678               	xorwf	testjig_done@device_type,w
  5241  09A7  1D03               	btfss	3,2
  5242  09A8  29AD               	goto	l3796
  5243                           
  5244                           ;Multi_RX_testjig_v2.c: 1147: print_screen("Mem_Copier Pass", " Remove board");
  5245  09A9  30DF               	movlw	low (STR_173| (0+32768))
  5246  09AA  00F4               	movwf	print_screen@top
  5247  09AB  3090               	movlw	high (STR_173| (0+32768))
  5248  09AC  29B0               	goto	L14
  5249  09AD                     l3796:	
  5250                           
  5251                           ;Multi_RX_testjig_v2.c: 1148: else
  5252                           ;Multi_RX_testjig_v2.c: 1149: print_screen("Multi_RX Pass", " Remove board");
  5253  09AD  309F               	movlw	low (STR_175| (0+32768))
  5254  09AE  00F4               	movwf	print_screen@top
  5255  09AF  3091               	movlw	high (STR_175| (0+32768))
  5256  09B0                     L14:	
  5257  09B0  00F5               	movwf	print_screen@top+1
  5258  09B1  3083               	movlw	low (STR_170| (0+32768))
  5259  09B2  00F6               	movwf	print_screen@bottom
  5260  09B3  3091               	movlw	high (STR_170| (0+32768))
  5261  09B4  00F7               	movwf	print_screen@bottom+1
  5262  09B5  22D3  3188         	fcall	_print_screen
  5263                           
  5264                           ;Multi_RX_testjig_v2.c: 1150: debug_fast_tx(11111);
  5265  09B7  3067               	movlw	103
  5266  09B8  00F0               	movwf	debug_fast_tx@data
  5267  09B9  302B               	movlw	43
  5268  09BA  00F1               	movwf	debug_fast_tx@data+1
  5269  09BB  22A6  3188         	fcall	_debug_fast_tx
  5270                           
  5271                           ;Multi_RX_testjig_v2.c: 1151: buzz_one(100);
  5272  09BD  3064               	movlw	100
  5273  09BE  00F0               	movwf	buzz_one@time
  5274  09BF  01F1               	clrf	buzz_one@time+1
  5275  09C0  23EB  3188         	fcall	_buzz_one
  5276                           
  5277                           ;Multi_RX_testjig_v2.c: 1152: _delay((unsigned long)((200)*(16000000/4000.0)));
  5278  09C2  3005               	movlw	5
  5279  09C3  00FB               	movwf	??_testjig_done+2
  5280  09C4  300F               	movlw	15
  5281  09C5  00FA               	movwf	??_testjig_done+1
  5282  09C6  30F4               	movlw	244
  5283  09C7  00F9               	movwf	??_testjig_done
  5284  09C8                     u6107:	
  5285  09C8  0BF9               	decfsz	??_testjig_done,f
  5286  09C9  29C8               	goto	u6107
  5287  09CA  0BFA               	decfsz	??_testjig_done+1,f
  5288  09CB  29C8               	goto	u6107
  5289  09CC  0BFB               	decfsz	??_testjig_done+2,f
  5290  09CD  29C8               	goto	u6107
  5291                           
  5292                           ;Multi_RX_testjig_v2.c: 1153: buzz_one(100);
  5293  09CE  3064               	movlw	100
  5294  09CF  00F0               	movwf	buzz_one@time
  5295  09D0  01F1               	clrf	buzz_one@time+1
  5296  09D1  23EB  3188         	fcall	_buzz_one
  5297  09D3                     l493:	
  5298                           ;Multi_RX_testjig_v2.c: 1154: while(RF3 == 0);
  5299                           
  5300  09D3  0025               	movlb	5	; select bank5
  5301  09D4  1D8C               	btfss	12,3	;volatile
  5302  09D5  29D3               	goto	l493
  5303                           
  5304                           ;Multi_RX_testjig_v2.c: 1155: _delay((unsigned long)((100)*(16000000/4000.0)));
  5305  09D6  3003               	movlw	3
  5306  09D7  00FB               	movwf	??_testjig_done+2
  5307  09D8  3008               	movlw	8
  5308  09D9  00FA               	movwf	??_testjig_done+1
  5309  09DA  3078               	movlw	120
  5310  09DB  00F9               	movwf	??_testjig_done
  5311  09DC                     u6117:	
  5312  09DC  0BF9               	decfsz	??_testjig_done,f
  5313  09DD  29DC               	goto	u6117
  5314  09DE  0BFA               	decfsz	??_testjig_done+1,f
  5315  09DF  29DC               	goto	u6117
  5316  09E0  0BFB               	decfsz	??_testjig_done+2,f
  5317  09E1  29DC               	goto	u6117
  5318  09E2  2A32               	goto	L15
  5319  09E3                     l3808:	
  5320                           ;Multi_RX_testjig_v2.c: 1157: break;
  5321                           
  5322                           ;Multi_RX_testjig_v2.c: 1156: state = 0xFF;
  5323                           
  5324                           
  5325                           ;Multi_RX_testjig_v2.c: 1159: debug_fast_tx(11112);
  5326  09E3  3068               	movlw	104
  5327  09E4  00F0               	movwf	debug_fast_tx@data
  5328  09E5  302B               	movlw	43
  5329  09E6  00F1               	movwf	debug_fast_tx@data+1
  5330  09E7  22A6  3188         	fcall	_debug_fast_tx
  5331                           
  5332                           ;Multi_RX_testjig_v2.c: 1161: if(device_type == 0xAA)
  5333  09E9  30AA               	movlw	170
  5334  09EA  0678               	xorwf	testjig_done@device_type,w
  5335  09EB  1D03               	btfss	3,2
  5336  09EC  29F1               	goto	l3814
  5337                           
  5338                           ;Multi_RX_testjig_v2.c: 1162: print_screen("Condo3 ", " Testjig");
  5339  09ED  3076               	movlw	low (STR_177| (0+32768))
  5340  09EE  00F4               	movwf	print_screen@top
  5341  09EF  3093               	movlw	high (STR_177| (0+32768))
  5342  09F0  2A00               	goto	L20
  5343  09F1                     l3814:	
  5344                           
  5345                           ;Multi_RX_testjig_v2.c: 1163: else if(device_type == 0xA1)
  5346  09F1  30A1               	movlw	161
  5347  09F2  0678               	xorwf	testjig_done@device_type,w
  5348  09F3  1D03               	btfss	3,2
  5349  09F4  29F9               	goto	l3818
  5350                           
  5351                           ;Multi_RX_testjig_v2.c: 1164: print_screen("RX3 ", " Testjig");
  5352  09F5  308E               	movlw	low (STR_179| (0+32768))
  5353  09F6  00F4               	movwf	print_screen@top
  5354  09F7  3093               	movlw	high (STR_179| (0+32768))
  5355  09F8  2A00               	goto	L20
  5356  09F9                     l3818:	
  5357                           
  5358                           ;Multi_RX_testjig_v2.c: 1165: else if(device_type == 0xA2)
  5359  09F9  30A2               	movlw	162
  5360  09FA  0678               	xorwf	testjig_done@device_type,w
  5361  09FB  1D03               	btfss	3,2
  5362  09FC  2A05               	goto	l3822
  5363                           
  5364                           ;Multi_RX_testjig_v2.c: 1166: print_screen("Mem_Copier Pass", " Testjig");
  5365  09FD  30DF               	movlw	low (STR_173| (0+32768))
  5366  09FE  00F4               	movwf	print_screen@top
  5367  09FF  3090               	movlw	high (STR_173| (0+32768))
  5368  0A00                     L20:	
  5369  0A00  00F5               	movwf	print_screen@top+1
  5370  0A01  3072               	movlw	low ((STR_189+3)| (0+32768))
  5371  0A02  00F6               	movwf	print_screen@bottom
  5372  0A03  3092               	movlw	high ((STR_189+3)| (0+32768))
  5373  0A04  2A0C               	goto	L16
  5374  0A05                     l3822:	
  5375                           
  5376                           ;Multi_RX_testjig_v2.c: 1167: else
  5377                           ;Multi_RX_testjig_v2.c: 1168: print_screen("Multi_RX", "Testjig");
  5378  0A05  305B               	movlw	low (STR_1| (0+32768))
  5379  0A06  00F4               	movwf	print_screen@top
  5380  0A07  3093               	movlw	high (STR_1| (0+32768))
  5381  0A08  00F5               	movwf	print_screen@top+1
  5382  0A09  3073               	movlw	low ((STR_189+4)| (0+32768))
  5383  0A0A  00F6               	movwf	print_screen@bottom
  5384  0A0B  3092               	movlw	high ((STR_189+4)| (0+32768))
  5385  0A0C                     L16:	
  5386  0A0C  00F7               	movwf	print_screen@bottom+1
  5387  0A0D  22D3  3188         	fcall	_print_screen
  5388                           
  5389                           ;Multi_RX_testjig_v2.c: 1169: _delay((unsigned long)((2000)*(16000000/4000.0)));
  5390  0A0F  3029               	movlw	41
  5391  0A10  00FB               	movwf	??_testjig_done+2
  5392  0A11  3096               	movlw	150
  5393  0A12  00FA               	movwf	??_testjig_done+1
  5394  0A13  30A6               	movlw	166
  5395  0A14  00F9               	movwf	??_testjig_done
  5396  0A15                     u6127:	
  5397  0A15  0BF9               	decfsz	??_testjig_done,f
  5398  0A16  2A15               	goto	u6127
  5399  0A17  0BFA               	decfsz	??_testjig_done+1,f
  5400  0A18  2A15               	goto	u6127
  5401  0A19  0BFB               	decfsz	??_testjig_done+2,f
  5402  0A1A  2A15               	goto	u6127
  5403                           
  5404                           ;Multi_RX_testjig_v2.c: 1170: print_screen("Testjig Power-up", "wait...");
  5405  0A1B  306C               	movlw	low (STR_185| (0+32768))
  5406  0A1C  00F4               	movwf	print_screen@top
  5407  0A1D  3090               	movlw	high (STR_185| (0+32768))
  5408  0A1E  00F5               	movwf	print_screen@top+1
  5409  0A1F  307E               	movlw	low (STR_186| (0+32768))
  5410  0A20  00F6               	movwf	print_screen@bottom
  5411  0A21  3093               	movlw	high (STR_186| (0+32768))
  5412  0A22  00F7               	movwf	print_screen@bottom+1
  5413  0A23  22D3  3188         	fcall	_print_screen
  5414                           
  5415                           ;Multi_RX_testjig_v2.c: 1171: _delay((unsigned long)((3000)*(16000000/4000.0)));
  5416  0A25  303D               	movlw	61
  5417  0A26  00FB               	movwf	??_testjig_done+2
  5418  0A27  30E1               	movlw	225
  5419  0A28  00FA               	movwf	??_testjig_done+1
  5420  0A29  307A               	movlw	122
  5421  0A2A  00F9               	movwf	??_testjig_done
  5422  0A2B                     u6137:	
  5423  0A2B  0BF9               	decfsz	??_testjig_done,f
  5424  0A2C  2A2B               	goto	u6137
  5425  0A2D  0BFA               	decfsz	??_testjig_done+1,f
  5426  0A2E  2A2B               	goto	u6137
  5427  0A2F  0BFB               	decfsz	??_testjig_done+2,f
  5428  0A30  2A2B               	goto	u6137
  5429  0A31  3200               	nop2
  5430  0A32                     L15:	
  5431                           
  5432                           ;Multi_RX_testjig_v2.c: 1172: state = 0xFF;
  5433  0A32  30FF               	movlw	255
  5434  0A33  00FC               	movwf	testjig_done@state
  5435                           
  5436                           ;Multi_RX_testjig_v2.c: 1173: break;
  5437  0A34  2A3D               	goto	l3832
  5438  0A35                     l3830:	
  5439  0A35  087C               	movf	testjig_done@state,w
  5440                           
  5441                           ; Switch size 1, requested type "speed"
  5442                           ; Number of cases is 2, Range of values is 1 to 2
  5443                           ; switch strategies available:
  5444                           ; Name         Instructions Cycles
  5445                           ; simple_byte            7     4 (average)
  5446                           ; direct_byte           13     9 (fixed)
  5447                           ; jumptable            263     9 (fixed)
  5448                           ;	Chosen strategy is simple_byte
  5449  0A36  3A01               	xorlw	1	; case 1
  5450  0A37  1903               	skipnz
  5451  0A38  2995               	goto	l3784
  5452  0A39  3A03               	xorlw	3	; case 2
  5453  0A3A  1903               	skipnz
  5454  0A3B  29E3               	goto	l3808
  5455  0A3C  2A3D               	goto	l3832
  5456  0A3D                     l3832:	
  5457                           
  5458                           ;Multi_RX_testjig_v2.c: 1175: debug_fast_tx(11113);
  5459  0A3D  3069               	movlw	105
  5460  0A3E  00F0               	movwf	debug_fast_tx@data
  5461  0A3F  302B               	movlw	43
  5462  0A40  00F1               	movwf	debug_fast_tx@data+1
  5463  0A41  22A6  3188         	fcall	_debug_fast_tx
  5464                           
  5465                           ;Multi_RX_testjig_v2.c: 1176: if(device_type == 0xAA)
  5466  0A43  30AA               	movlw	170
  5467  0A44  0678               	xorwf	testjig_done@device_type,w
  5468  0A45  1D03               	btfss	3,2
  5469  0A46  2A4B               	goto	l3838
  5470                           
  5471                           ;Multi_RX_testjig_v2.c: 1177: print_screen("Condo3 Testjig", "-> Insert PCB");
  5472  0A47  301D               	movlw	low (STR_187| (0+32768))
  5473  0A48  00F4               	movwf	print_screen@top
  5474  0A49  3091               	movlw	high (STR_187| (0+32768))
  5475  0A4A  2A5E               	goto	L17
  5476  0A4B                     l3838:	
  5477                           
  5478                           ;Multi_RX_testjig_v2.c: 1178: else if(device_type == 0xA1)
  5479  0A4B  30A1               	movlw	161
  5480  0A4C  0678               	xorwf	testjig_done@device_type,w
  5481  0A4D  1D03               	btfss	3,2
  5482  0A4E  2A53               	goto	l3842
  5483                           
  5484                           ;Multi_RX_testjig_v2.c: 1179: print_screen("RX3 Testjig", "-> Insert PCB");
  5485  0A4F  306F               	movlw	low (STR_189| (0+32768))
  5486  0A50  00F4               	movwf	print_screen@top
  5487  0A51  3092               	movlw	high (STR_189| (0+32768))
  5488  0A52  2A5E               	goto	L17
  5489  0A53                     l3842:	
  5490                           
  5491                           ;Multi_RX_testjig_v2.c: 1180: else if(device_type == 0xA2)
  5492  0A53  30A2               	movlw	162
  5493  0A54  0678               	xorwf	testjig_done@device_type,w
  5494  0A55  1D03               	btfss	3,2
  5495  0A56  2A5B               	goto	l3846
  5496                           
  5497                           ;Multi_RX_testjig_v2.c: 1181: print_screen("Mem_Copier Pass", "-> Insert PCB");
  5498  0A57  30DF               	movlw	low (STR_173| (0+32768))
  5499  0A58  00F4               	movwf	print_screen@top
  5500  0A59  3090               	movlw	high (STR_173| (0+32768))
  5501  0A5A  2A5E               	goto	L17
  5502  0A5B                     l3846:	
  5503                           
  5504                           ;Multi_RX_testjig_v2.c: 1182: else
  5505                           ;Multi_RX_testjig_v2.c: 1183: print_screen("Multi_RX Testjig", "-> Insert PCB");
  5506  0A5B  304A               	movlw	low (STR_193| (0+32768))
  5507  0A5C  00F4               	movwf	print_screen@top
  5508  0A5D  3090               	movlw	high (STR_193| (0+32768))
  5509  0A5E                     L17:	
  5510  0A5E  00F5               	movwf	print_screen@top+1
  5511  0A5F  3075               	movlw	low (STR_4| (0+32768))
  5512  0A60  00F6               	movwf	print_screen@bottom
  5513  0A61  3091               	movlw	high (STR_4| (0+32768))
  5514  0A62  00F7               	movwf	print_screen@bottom+1
  5515  0A63  22D3  3188         	fcall	_print_screen
  5516  0A65                     l510:	
  5517  0A65  0025               	movlb	5	; select bank5
  5518  0A66  198C               	btfsc	12,3	;volatile
  5519  0A67  2A65               	goto	l510
  5520                           
  5521                           ;Multi_RX_testjig_v2.c: 1185: _delay((unsigned long)((100)*(16000000/4000.0)));
  5522  0A68  3003               	movlw	3
  5523  0A69  00FB               	movwf	??_testjig_done+2
  5524  0A6A  3008               	movlw	8
  5525  0A6B  00FA               	movwf	??_testjig_done+1
  5526  0A6C  3078               	movlw	120
  5527  0A6D  00F9               	movwf	??_testjig_done
  5528  0A6E                     u6147:	
  5529  0A6E  0BF9               	decfsz	??_testjig_done,f
  5530  0A6F  2A6E               	goto	u6147
  5531  0A70  0BFA               	decfsz	??_testjig_done+1,f
  5532  0A71  2A6E               	goto	u6147
  5533  0A72  0BFB               	decfsz	??_testjig_done+2,f
  5534  0A73  2A6E               	goto	u6147
  5535                           
  5536                           ;Multi_RX_testjig_v2.c: 1186: if(device_type == 0xAA)
  5537  0A74  30AA               	movlw	170
  5538  0A75  0678               	xorwf	testjig_done@device_type,w
  5539  0A76  1D03               	btfss	3,2
  5540  0A77  2A7C               	goto	l3854
  5541                           
  5542                           ;Multi_RX_testjig_v2.c: 1187: print_screen("Condo3 Testjig", " Press START");
  5543  0A78  301D               	movlw	low (STR_187| (0+32768))
  5544  0A79  00F4               	movwf	print_screen@top
  5545  0A7A  3091               	movlw	high (STR_187| (0+32768))
  5546  0A7B  2A8F               	goto	L18
  5547  0A7C                     l3854:	
  5548                           
  5549                           ;Multi_RX_testjig_v2.c: 1188: else if(device_type == 0xA1)
  5550  0A7C  30A1               	movlw	161
  5551  0A7D  0678               	xorwf	testjig_done@device_type,w
  5552  0A7E  1D03               	btfss	3,2
  5553  0A7F  2A84               	goto	l3858
  5554                           
  5555                           ;Multi_RX_testjig_v2.c: 1189: print_screen("RX3 Testjig", " Press START");
  5556  0A80  306F               	movlw	low (STR_189| (0+32768))
  5557  0A81  00F4               	movwf	print_screen@top
  5558  0A82  3092               	movlw	high (STR_189| (0+32768))
  5559  0A83  2A8F               	goto	L18
  5560  0A84                     l3858:	
  5561                           
  5562                           ;Multi_RX_testjig_v2.c: 1190: else if(device_type == 0xA2)
  5563  0A84  30A2               	movlw	162
  5564  0A85  0678               	xorwf	testjig_done@device_type,w
  5565  0A86  1D03               	btfss	3,2
  5566  0A87  2A8C               	goto	l3862
  5567                           
  5568                           ;Multi_RX_testjig_v2.c: 1191: print_screen("Mem_Copier Pass", " Press START");
  5569  0A88  30DF               	movlw	low (STR_173| (0+32768))
  5570  0A89  00F4               	movwf	print_screen@top
  5571  0A8A  3090               	movlw	high (STR_173| (0+32768))
  5572  0A8B  2A8F               	goto	L18
  5573  0A8C                     l3862:	
  5574                           
  5575                           ;Multi_RX_testjig_v2.c: 1192: else
  5576                           ;Multi_RX_testjig_v2.c: 1193: print_screen("Multi_RX Testjig", " Press START");
  5577  0A8C  304A               	movlw	low (STR_193| (0+32768))
  5578  0A8D  00F4               	movwf	print_screen@top
  5579  0A8E  3090               	movlw	high (STR_193| (0+32768))
  5580  0A8F                     L18:	
  5581  0A8F  00F5               	movwf	print_screen@top+1
  5582  0A90  300A               	movlw	low (STR_196| (0+32768))
  5583  0A91  00F6               	movwf	print_screen@bottom
  5584  0A92  3092               	movlw	high (STR_196| (0+32768))
  5585  0A93  00F7               	movwf	print_screen@bottom+1
  5586  0A94  22D3  3188         	fcall	_print_screen
  5587  0A96                     l519:	
  5588  0A96  0025               	movlb	5	; select bank5
  5589  0A97  1D8C               	btfss	12,3	;volatile
  5590  0A98  2A96               	goto	l519
  5591                           
  5592                           ;Multi_RX_testjig_v2.c: 1195: _delay((unsigned long)((100)*(16000000/4000.0)));
  5593  0A99  3003               	movlw	3
  5594  0A9A  00FB               	movwf	??_testjig_done+2
  5595  0A9B  3008               	movlw	8
  5596  0A9C  00FA               	movwf	??_testjig_done+1
  5597  0A9D  3078               	movlw	120
  5598  0A9E  00F9               	movwf	??_testjig_done
  5599  0A9F                     u6157:	
  5600  0A9F  0BF9               	decfsz	??_testjig_done,f
  5601  0AA0  2A9F               	goto	u6157
  5602  0AA1  0BFA               	decfsz	??_testjig_done+1,f
  5603  0AA2  2A9F               	goto	u6157
  5604  0AA3  0BFB               	decfsz	??_testjig_done+2,f
  5605  0AA4  2A9F               	goto	u6157
  5606  0AA5  297E               	goto	l484
  5607  0AA6                     __end_of_testjig_done:	
  5608  0AA6                     __ptext9:	
  5609 ;; *************** function _debug_fast_tx *****************
  5610 ;; Defined at:
  5611 ;;		line 2165 in file "Multi_RX_testjig_v2.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  data            2    0[COMMON] unsigned int 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  i               1    2[COMMON] unsigned char 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;		None               void
  5618 ;; Registers used:
  5619 ;;		wreg, status,2, status,0
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/2
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5625 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5626 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5628 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5629 ;;Total ram usage:        3 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; Hardware stack levels required when called:    1
  5632 ;; This function calls:
  5633 ;;		Nothing
  5634 ;; This function is called by:
  5635 ;;		_main
  5636 ;;		_testjig_done
  5637 ;;		_print_error
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           
  5642                           ;psect for function _debug_fast_tx
  5643  0AA6                     _debug_fast_tx:	
  5644                           
  5645                           ;Multi_RX_testjig_v2.c: 2167: GIE = 0;
  5646                           
  5647                           ;incstack = 0
  5648                           ; Regs used in _debug_fast_tx: [wreg+status,2+status,0]
  5649  0AA6  138B               	bcf	11,7	;volatile
  5650                           
  5651                           ;Multi_RX_testjig_v2.c: 2168: LATD2 = 0;
  5652  0AA7  0022               	movlb	2	; select bank2
  5653  0AA8  110F               	bcf	15,2	;volatile
  5654                           
  5655                           ;Multi_RX_testjig_v2.c: 2174: __nop();
  5656  0AA9  0000               	nop
  5657                           
  5658                           ;Multi_RX_testjig_v2.c: 2175: __nop();
  5659  0AAA  0000               	nop
  5660                           
  5661                           ;Multi_RX_testjig_v2.c: 2176: __nop();
  5662  0AAB  0000               	nop
  5663                           
  5664                           ;Multi_RX_testjig_v2.c: 2177: __nop();
  5665  0AAC  0000               	nop
  5666                           
  5667                           ;Multi_RX_testjig_v2.c: 2178: __nop();
  5668  0AAD  0000               	nop
  5669                           
  5670                           ;Multi_RX_testjig_v2.c: 2179: __nop();
  5671  0AAE  0000               	nop
  5672                           
  5673                           ;Multi_RX_testjig_v2.c: 2180: __nop();
  5674  0AAF  0000               	nop
  5675                           
  5676                           ;Multi_RX_testjig_v2.c: 2181: __nop();
  5677  0AB0  0000               	nop
  5678                           
  5679                           ;Multi_RX_testjig_v2.c: 2182: __nop();
  5680  0AB1  0000               	nop
  5681                           
  5682                           ;Multi_RX_testjig_v2.c: 2183: unsigned char i;
  5683                           ;Multi_RX_testjig_v2.c: 2184: for(i = 0; i < 16; i++)
  5684  0AB2  01F2               	clrf	debug_fast_tx@i
  5685  0AB3                     l733:	
  5686                           
  5687                           ;Multi_RX_testjig_v2.c: 2185: {
  5688                           ;Multi_RX_testjig_v2.c: 2186: LATD2 = data & 0x01;
  5689  0AB3  1C70               	btfss	debug_fast_tx@data,0
  5690  0AB4  2AB8               	goto	u3080
  5691  0AB5  0022               	movlb	2	; select bank2
  5692  0AB6  150F               	bsf	15,2	;volatile
  5693  0AB7  2ABA               	goto	l3234
  5694  0AB8                     u3080:	
  5695  0AB8  0022               	movlb	2	; select bank2
  5696  0AB9  110F               	bcf	15,2	;volatile
  5697  0ABA                     l3234:	
  5698  0ABA  3010               	movlw	16
  5699                           
  5700                           ;Multi_RX_testjig_v2.c: 2187: data = data >> 1;
  5701  0ABB  36F1               	lsrf	debug_fast_tx@data+1,f
  5702  0ABC  0CF0               	rrf	debug_fast_tx@data,f
  5703  0ABD  0AF2               	incf	debug_fast_tx@i,f
  5704  0ABE  0272               	subwf	debug_fast_tx@i,w
  5705  0ABF  1C03               	skipc
  5706  0AC0  2AB3               	goto	l733
  5707                           
  5708                           ;Multi_RX_testjig_v2.c: 2188: }
  5709                           ;Multi_RX_testjig_v2.c: 2189: __nop();
  5710  0AC1  0000               	nop
  5711                           
  5712                           ;Multi_RX_testjig_v2.c: 2190: __nop();
  5713  0AC2  0000               	nop
  5714                           
  5715                           ;Multi_RX_testjig_v2.c: 2191: __nop();
  5716  0AC3  0000               	nop
  5717                           
  5718                           ;Multi_RX_testjig_v2.c: 2192: __nop();
  5719  0AC4  0000               	nop
  5720                           
  5721                           ;Multi_RX_testjig_v2.c: 2193: __nop();
  5722  0AC5  0000               	nop
  5723                           
  5724                           ;Multi_RX_testjig_v2.c: 2194: __nop();
  5725  0AC6  0000               	nop
  5726                           
  5727                           ;Multi_RX_testjig_v2.c: 2195: LATD2 = 1;
  5728  0AC7  0022               	movlb	2	; select bank2
  5729  0AC8  150F               	bsf	15,2	;volatile
  5730                           
  5731                           ;Multi_RX_testjig_v2.c: 2196: __nop();
  5732  0AC9  0000               	nop
  5733                           
  5734                           ;Multi_RX_testjig_v2.c: 2197: __nop();
  5735  0ACA  0000               	nop
  5736                           
  5737                           ;Multi_RX_testjig_v2.c: 2198: __nop();
  5738  0ACB  0000               	nop
  5739                           
  5740                           ;Multi_RX_testjig_v2.c: 2199: __nop();
  5741  0ACC  0000               	nop
  5742                           
  5743                           ;Multi_RX_testjig_v2.c: 2200: __nop();
  5744  0ACD  0000               	nop
  5745                           
  5746                           ;Multi_RX_testjig_v2.c: 2201: __nop();
  5747  0ACE  0000               	nop
  5748                           
  5749                           ;Multi_RX_testjig_v2.c: 2202: __nop();
  5750  0ACF  0000               	nop
  5751                           
  5752                           ;Multi_RX_testjig_v2.c: 2203: __nop();
  5753  0AD0  0000               	nop
  5754                           
  5755                           ;Multi_RX_testjig_v2.c: 2204: GIE = 1;
  5756  0AD1  178B               	bsf	11,7	;volatile
  5757  0AD2  0008               	return
  5758  0AD3                     __end_of_debug_fast_tx:	
  5759  0AD3                     __ptext3:	
  5760 ;; *************** function _print_screen *****************
  5761 ;; Defined at:
  5762 ;;		line 1696 in file "Multi_RX_testjig_v2.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  top             2    4[COMMON] PTR const unsigned char 
  5765 ;;		 -> STR_203(12), STR_201(17), STR_199(16), STR_197(12), 
  5766 ;;		 -> STR_195(15), STR_193(17), STR_191(16), STR_189(12), 
  5767 ;;		 -> STR_187(15), STR_185(17), STR_183(9), STR_181(16), 
  5768 ;;		 -> STR_179(5), STR_177(8), STR_175(14), STR_173(16), 
  5769 ;;		 -> STR_171(9), STR_169(12), STR_167(10), STR_165(16), 
  5770 ;;		 -> STR_161(10), STR_157(14), STR_153(13), STR_145(8), 
  5771 ;;		 -> STR_143(8), STR_141(8), STR_139(8), STR_125(8), 
  5772 ;;		 -> STR_123(8), STR_111(8), STR_89(9), STR_87(9), 
  5773 ;;		 -> STR_65(9), STR_63(9), STR_51(11), STR_49(11), 
  5774 ;;		 -> STR_43(13), STR_37(9), STR_33(13), STR_31(19), 
  5775 ;;		 -> STR_29(12), STR_27(19), STR_5(15), STR_1(9), 
  5776 ;;  bottom          2    6[COMMON] PTR const unsigned char 
  5777 ;;		 -> STR_204(17), STR_202(13), STR_200(13), STR_198(13), 
  5778 ;;		 -> STR_196(13), STR_194(14), STR_192(14), STR_190(14), 
  5779 ;;		 -> STR_188(14), STR_186(8), STR_184(8), STR_182(9), 
  5780 ;;		 -> STR_180(9), STR_178(9), STR_176(14), STR_174(14), 
  5781 ;;		 -> STR_172(14), STR_170(14), STR_168(11), STR_166(13), 
  5782 ;;		 -> STR_162(10), STR_158(2), STR_154(2), STR_146(16), 
  5783 ;;		 -> STR_144(15), STR_142(7), STR_140(10), STR_126(5), 
  5784 ;;		 -> STR_124(9), STR_112(4), STR_90(3), STR_88(1), 
  5785 ;;		 -> STR_66(3), STR_64(1), STR_52(5), STR_50(1), 
  5786 ;;		 -> STR_44(6), STR_38(18), STR_34(6), STR_32(9), 
  5787 ;;		 -> STR_30(13), STR_28(1), STR_6(1), STR_2(17), 
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;		None
  5790 ;; Return value:  Size  Location     Type
  5791 ;;		None               void
  5792 ;; Registers used:
  5793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/4
  5796 ;;		On exit  : 1F/4
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5802 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5803 ;;Total ram usage:        4 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; Hardware stack levels required when called:    3
  5806 ;; This function calls:
  5807 ;;		_clear_lcd
  5808 ;;		_i2c_Write_string
  5809 ;;		_i2c_first_line
  5810 ;;		_i2c_second_line
  5811 ;; This function is called by:
  5812 ;;		_main
  5813 ;;		_testjig_done
  5814 ;;		_print_error
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           
  5819                           ;psect for function _print_screen
  5820  0AD3                     _print_screen:	
  5821                           
  5822                           ;Multi_RX_testjig_v2.c: 1698: clear_lcd();
  5823                           
  5824                           ;incstack = 0
  5825                           ; Regs used in _print_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5826  0AD3  2355  3188         	fcall	_clear_lcd
  5827                           
  5828                           ;Multi_RX_testjig_v2.c: 1699: i2c_first_line();
  5829  0AD5  2344  3188         	fcall	_i2c_first_line
  5830                           
  5831                           ;Multi_RX_testjig_v2.c: 1700: i2c_Write_string(top);
  5832  0AD7  0875               	movf	print_screen@top+1,w
  5833  0AD8  00F2               	movwf	i2c_Write_string@data+1
  5834  0AD9  0874               	movf	print_screen@top,w
  5835  0ADA  00F1               	movwf	i2c_Write_string@data
  5836  0ADB  2382  3188         	fcall	_i2c_Write_string
  5837                           
  5838                           ;Multi_RX_testjig_v2.c: 1701: i2c_second_line();
  5839  0ADD  22E4  3188         	fcall	_i2c_second_line
  5840                           
  5841                           ;Multi_RX_testjig_v2.c: 1702: i2c_Write_string(bottom);
  5842  0ADF  0877               	movf	print_screen@bottom+1,w
  5843  0AE0  00F2               	movwf	i2c_Write_string@data+1
  5844  0AE1  0876               	movf	print_screen@bottom,w
  5845  0AE2  00F1               	movwf	i2c_Write_string@data
  5846  0AE3  2B82               	ljmp	l3056
  5847  0AE4                     __end_of_print_screen:	
  5848  0AE4                     __ptext4:	
  5849 ;; *************** function _i2c_second_line *****************
  5850 ;; Defined at:
  5851 ;;		line 1320 in file "Multi_RX_testjig_v2.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;		None
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;		None
  5856 ;; Return value:  Size  Location     Type
  5857 ;;		None               void
  5858 ;; Registers used:
  5859 ;;		wreg, status,2, status,0, pclath, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 1F/4
  5862 ;;		On exit  : 1F/4
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5867 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5868 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5869 ;;Total ram usage:        1 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    2
  5872 ;; This function calls:
  5873 ;;		_i2c_Start
  5874 ;;		_i2c_Stop
  5875 ;;		_i2c_Write
  5876 ;; This function is called by:
  5877 ;;		_print_error
  5878 ;;		_print_screen
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           
  5883                           ;psect for function _i2c_second_line
  5884  0AE4                     _i2c_second_line:	
  5885                           
  5886                           ;Multi_RX_testjig_v2.c: 1322: i2c_Start();
  5887                           
  5888                           ;incstack = 0
  5889                           ; Regs used in _i2c_second_line: [wreg+status,2+status,0+pclath+cstack]
  5890  0AE4  23E1  3188         	fcall	_i2c_Start
  5891                           
  5892                           ;Multi_RX_testjig_v2.c: 1323: i2c_Write(0x7C);
  5893  0AE6  307C               	movlw	124
  5894  0AE7  23D5  3188         	fcall	_i2c_Write
  5895                           
  5896                           ;Multi_RX_testjig_v2.c: 1324: i2c_Write(0x00);
  5897  0AE9  3000               	movlw	0
  5898  0AEA  23D5  3188         	fcall	_i2c_Write
  5899                           
  5900                           ;Multi_RX_testjig_v2.c: 1325: i2c_Write(0xC0);
  5901  0AEC  30C0               	movlw	192
  5902  0AED  23D5  3188         	fcall	_i2c_Write
  5903                           
  5904                           ;Multi_RX_testjig_v2.c: 1326: _delay((unsigned long)((27)*(16000000/4000000.0)));
  5905  0AEF  3023               	movlw	35
  5906  0AF0  00F1               	movwf	??_i2c_second_line
  5907  0AF1                     u6187:	
  5908  0AF1  0BF1               	decfsz	??_i2c_second_line,f
  5909  0AF2  2AF1               	goto	u6187
  5910  0AF3  3200               	nop2	;nop
  5911                           
  5912                           ;Multi_RX_testjig_v2.c: 1327: i2c_Stop();
  5913  0AF4  2BE6               	ljmp	l3054
  5914  0AF5                     __end_of_i2c_second_line:	
  5915  0AF5                     __ptext2:	
  5916 ;; *************** function _print_error *****************
  5917 ;; Defined at:
  5918 ;;		line 1672 in file "Multi_RX_testjig_v2.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  top             2    8[COMMON] PTR const unsigned char 
  5921 ;;		 -> STR_163(12), STR_159(12), STR_155(12), STR_151(12), 
  5922 ;;		 -> STR_149(8), STR_147(8), STR_137(13), STR_135(13), 
  5923 ;;		 -> STR_133(12), STR_131(12), STR_129(12), STR_127(12), 
  5924 ;;		 -> STR_121(12), STR_119(12), STR_117(12), STR_115(12), 
  5925 ;;		 -> STR_113(12), STR_109(12), STR_107(10), STR_105(12), 
  5926 ;;		 -> STR_103(9), STR_101(12), STR_99(12), STR_97(9), 
  5927 ;;		 -> STR_95(9), STR_93(12), STR_91(10), STR_85(12), 
  5928 ;;		 -> STR_83(10), STR_81(12), STR_79(9), STR_77(12), 
  5929 ;;		 -> STR_75(12), STR_73(9), STR_71(9), STR_69(12), 
  5930 ;;		 -> STR_67(10), STR_61(19), STR_59(12), STR_57(16), 
  5931 ;;		 -> STR_55(12), STR_53(19), STR_47(12), STR_45(12), 
  5932 ;;		 -> STR_41(12), STR_39(13), STR_35(12), STR_25(14), 
  5933 ;;		 -> STR_23(11), STR_21(15), STR_19(15), STR_17(14), 
  5934 ;;		 -> STR_15(14), STR_13(14), STR_11(11), STR_9(14), 
  5935 ;;		 -> STR_7(14), STR_3(9), 
  5936 ;;  bottom          2   10[COMMON] PTR const unsigned char 
  5937 ;;		 -> STR_164(4), STR_160(4), STR_156(4), STR_152(4), 
  5938 ;;		 -> STR_150(15), STR_148(17), STR_138(13), STR_136(14), 
  5939 ;;		 -> STR_134(5), STR_132(5), STR_130(5), STR_128(4), 
  5940 ;;		 -> STR_122(13), STR_120(16), STR_118(14), STR_116(4), 
  5941 ;;		 -> STR_114(4), STR_110(4), STR_108(9), STR_106(3), 
  5942 ;;		 -> STR_104(7), STR_102(4), STR_100(4), STR_98(15), 
  5943 ;;		 -> STR_96(16), STR_94(3), STR_92(9), STR_86(3), 
  5944 ;;		 -> STR_84(9), STR_82(3), STR_80(7), STR_78(4), 
  5945 ;;		 -> STR_76(4), STR_74(15), STR_72(16), STR_70(3), 
  5946 ;;		 -> STR_68(9), STR_62(9), STR_60(3), STR_58(7), 
  5947 ;;		 -> STR_56(3), STR_54(9), STR_48(18), STR_46(14), 
  5948 ;;		 -> STR_42(3), STR_40(12), STR_36(3), STR_26(12), 
  5949 ;;		 -> STR_24(11), STR_22(13), STR_20(13), STR_18(13), 
  5950 ;;		 -> STR_16(13), STR_14(12), STR_12(11), STR_10(13), 
  5951 ;;		 -> STR_8(13), STR_4(14), 
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;		None
  5954 ;; Return value:  Size  Location     Type
  5955 ;;		None               void
  5956 ;; Registers used:
  5957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/5
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5963 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5965 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5966 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5967 ;;Total ram usage:        7 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; Hardware stack levels required when called:    4
  5970 ;; This function calls:
  5971 ;;		_buzz_one
  5972 ;;		_clear_lcd
  5973 ;;		_debug_fast_tx
  5974 ;;		_i2c_Write_string
  5975 ;;		_i2c_first_line
  5976 ;;		_i2c_second_line
  5977 ;;		_power_supply_set
  5978 ;;		_print_screen
  5979 ;; This function is called by:
  5980 ;;		_main
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           
  5985                           ;psect for function _print_error
  5986  0AF5                     _print_error:	
  5987                           
  5988                           ;Multi_RX_testjig_v2.c: 1674: power_supply_set(3);
  5989                           
  5990                           ;incstack = 0
  5991                           ; Regs used in _print_error: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5992  0AF5  3003               	movlw	3
  5993  0AF6  23F3  3188         	fcall	_power_supply_set
  5994                           
  5995                           ;Multi_RX_testjig_v2.c: 1675: LATA7 = 0;
  5996  0AF8  0022               	movlb	2	; select bank2
  5997  0AF9  138C               	bcf	12,7	;volatile
  5998                           
  5999                           ;Multi_RX_testjig_v2.c: 1676: LATB5 = 0;
  6000  0AFA  128D               	bcf	13,5	;volatile
  6001                           
  6002                           ;Multi_RX_testjig_v2.c: 1677: LATA6 = 0;
  6003  0AFB  130C               	bcf	12,6	;volatile
  6004                           
  6005                           ;Multi_RX_testjig_v2.c: 1678: TRISG0 = 1;
  6006  0AFC  0026               	movlb	6	; select bank6
  6007  0AFD  140D               	bsf	13,0	;volatile
  6008                           
  6009                           ;Multi_RX_testjig_v2.c: 1679: RE0 = 0;
  6010  0AFE  0020               	movlb	0	; select bank0
  6011  0AFF  1010               	bcf	16,0	;volatile
  6012                           
  6013                           ;Multi_RX_testjig_v2.c: 1680: debug_fast_tx(12345);
  6014  0B00  3039               	movlw	57
  6015  0B01  00F0               	movwf	debug_fast_tx@data
  6016  0B02  3030               	movlw	48
  6017  0B03  00F1               	movwf	debug_fast_tx@data+1
  6018  0B04  22A6  3188         	fcall	_debug_fast_tx
  6019                           
  6020                           ;Multi_RX_testjig_v2.c: 1681: buzz_one(1000);
  6021  0B06  30E8               	movlw	232
  6022  0B07  00F0               	movwf	buzz_one@time
  6023  0B08  3003               	movlw	3
  6024  0B09  00F1               	movwf	buzz_one@time+1
  6025  0B0A  23EB  3188         	fcall	_buzz_one
  6026  0B0C                     l3882:	
  6027                           
  6028                           ;Multi_RX_testjig_v2.c: 1683: {
  6029                           ;Multi_RX_testjig_v2.c: 1684: clear_lcd();
  6030  0B0C  2355  3188         	fcall	_clear_lcd
  6031                           
  6032                           ;Multi_RX_testjig_v2.c: 1685: i2c_first_line();
  6033  0B0E  2344  3188         	fcall	_i2c_first_line
  6034                           
  6035                           ;Multi_RX_testjig_v2.c: 1686: i2c_Write_string(top);
  6036  0B10  0879               	movf	print_error@top+1,w
  6037  0B11  00F2               	movwf	i2c_Write_string@data+1
  6038  0B12  0878               	movf	print_error@top,w
  6039  0B13  00F1               	movwf	i2c_Write_string@data
  6040  0B14  2382  3188         	fcall	_i2c_Write_string
  6041                           
  6042                           ;Multi_RX_testjig_v2.c: 1687: i2c_second_line();
  6043  0B16  22E4  3188         	fcall	_i2c_second_line
  6044                           
  6045                           ;Multi_RX_testjig_v2.c: 1688: i2c_Write_string(bottom);
  6046  0B18  087B               	movf	print_error@bottom+1,w
  6047  0B19  00F2               	movwf	i2c_Write_string@data+1
  6048  0B1A  087A               	movf	print_error@bottom,w
  6049  0B1B  00F1               	movwf	i2c_Write_string@data
  6050  0B1C  2382  3188         	fcall	_i2c_Write_string
  6051                           
  6052                           ;Multi_RX_testjig_v2.c: 1689: _delay((unsigned long)((2000)*(16000000/4000.0)));
  6053  0B1E  3029               	movlw	41
  6054  0B1F  0020               	movlb	0	; select bank0
  6055  0B20  00A2               	movwf	??_print_error+2
  6056  0B21  3096               	movlw	150
  6057  0B22  00A1               	movwf	??_print_error+1
  6058  0B23  30A6               	movlw	166
  6059  0B24  00A0               	movwf	??_print_error
  6060  0B25                     u6167:	
  6061  0B25  0BA0               	decfsz	??_print_error,f
  6062  0B26  2B25               	goto	u6167
  6063  0B27  0BA1               	decfsz	??_print_error+1,f
  6064  0B28  2B25               	goto	u6167
  6065  0B29  0BA2               	decfsz	??_print_error+2,f
  6066  0B2A  2B25               	goto	u6167
  6067                           
  6068                           ;Multi_RX_testjig_v2.c: 1690: print_screen("Press START", " to restart test");
  6069  0B2B  300B               	movlw	low ((STR_196+1)| (0+32768))
  6070  0B2C  00F4               	movwf	print_screen@top
  6071  0B2D  3092               	movlw	high ((STR_196+1)| (0+32768))
  6072  0B2E  00F5               	movwf	print_screen@top+1
  6073  0B2F  308E               	movlw	low (STR_204| (0+32768))
  6074  0B30  00F6               	movwf	print_screen@bottom
  6075  0B31  3090               	movlw	high (STR_204| (0+32768))
  6076  0B32  00F7               	movwf	print_screen@bottom+1
  6077  0B33  22D3  3188         	fcall	_print_screen
  6078                           
  6079                           ;Multi_RX_testjig_v2.c: 1692: _delay((unsigned long)((1200)*(16000000/4000.0)));
  6080  0B35  3019               	movlw	25
  6081  0B36  0020               	movlb	0	; select bank0
  6082  0B37  00A2               	movwf	??_print_error+2
  6083  0B38  305A               	movlw	90
  6084  0B39  00A1               	movwf	??_print_error+1
  6085  0B3A  30C8               	movlw	200
  6086  0B3B  00A0               	movwf	??_print_error
  6087  0B3C                     u6177:	
  6088  0B3C  0BA0               	decfsz	??_print_error,f
  6089  0B3D  2B3C               	goto	u6177
  6090  0B3E  0BA1               	decfsz	??_print_error+1,f
  6091  0B3F  2B3C               	goto	u6177
  6092  0B40  0BA2               	decfsz	??_print_error+2,f
  6093  0B41  2B3C               	goto	u6177
  6094  0B42  3200               	nop2
  6095  0B43  2B0C               	goto	l3882
  6096  0B44                     __end_of_print_error:	
  6097  0B44                     __ptext5:	
  6098 ;; *************** function _i2c_first_line *****************
  6099 ;; Defined at:
  6100 ;;		line 1310 in file "Multi_RX_testjig_v2.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;		None
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;		None
  6105 ;; Return value:  Size  Location     Type
  6106 ;;		None               void
  6107 ;; Registers used:
  6108 ;;		wreg, status,2, status,0, pclath, cstack
  6109 ;; Tracked objects:
  6110 ;;		On entry : 1F/4
  6111 ;;		On exit  : 1F/4
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6117 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6118 ;;Total ram usage:        1 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:    2
  6121 ;; This function calls:
  6122 ;;		_i2c_Start
  6123 ;;		_i2c_Stop
  6124 ;;		_i2c_Write
  6125 ;; This function is called by:
  6126 ;;		_print_error
  6127 ;;		_print_screen
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           
  6132                           ;psect for function _i2c_first_line
  6133  0B44                     _i2c_first_line:	
  6134                           
  6135                           ;Multi_RX_testjig_v2.c: 1312: i2c_Start();
  6136                           
  6137                           ;incstack = 0
  6138                           ; Regs used in _i2c_first_line: [wreg+status,2+status,0+pclath+cstack]
  6139  0B44  23E1  3188         	fcall	_i2c_Start
  6140                           
  6141                           ;Multi_RX_testjig_v2.c: 1313: i2c_Write(0x7C);
  6142  0B46  307C               	movlw	124
  6143  0B47  23D5  3188         	fcall	_i2c_Write
  6144                           
  6145                           ;Multi_RX_testjig_v2.c: 1314: i2c_Write(0x00);
  6146  0B49  3000               	movlw	0
  6147  0B4A  23D5  3188         	fcall	_i2c_Write
  6148                           
  6149                           ;Multi_RX_testjig_v2.c: 1315: i2c_Write(0x80);
  6150  0B4C  3080               	movlw	128
  6151  0B4D  23D5  3188         	fcall	_i2c_Write
  6152                           
  6153                           ;Multi_RX_testjig_v2.c: 1316: _delay((unsigned long)((27)*(16000000/4000000.0)));
  6154  0B4F  3023               	movlw	35
  6155  0B50  00F1               	movwf	??_i2c_first_line
  6156  0B51                     u6197:	
  6157  0B51  0BF1               	decfsz	??_i2c_first_line,f
  6158  0B52  2B51               	goto	u6197
  6159  0B53  3200               	nop2	;nop
  6160                           
  6161                           ;Multi_RX_testjig_v2.c: 1317: i2c_Stop();
  6162  0B54  2BE6               	ljmp	l3054
  6163  0B55                     __end_of_i2c_first_line:	
  6164  0B55                     __ptext7:	
  6165 ;; *************** function _clear_lcd *****************
  6166 ;; Defined at:
  6167 ;;		line 1300 in file "Multi_RX_testjig_v2.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;		None
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;		None
  6172 ;; Return value:  Size  Location     Type
  6173 ;;		None               void
  6174 ;; Registers used:
  6175 ;;		wreg, status,2, status,0, pclath, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/2
  6178 ;;		On exit  : 1F/4
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6183 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6185 ;;Total ram usage:        2 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:    2
  6188 ;; This function calls:
  6189 ;;		_i2c_Start
  6190 ;;		_i2c_Stop
  6191 ;;		_i2c_Write
  6192 ;; This function is called by:
  6193 ;;		_print_error
  6194 ;;		_print_screen
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           
  6199                           ;psect for function _clear_lcd
  6200  0B55                     _clear_lcd:	
  6201                           
  6202                           ;Multi_RX_testjig_v2.c: 1302: i2c_Start();
  6203                           
  6204                           ;incstack = 0
  6205                           ; Regs used in _clear_lcd: [wreg+status,2+status,0+pclath+cstack]
  6206  0B55  23E1  3188         	fcall	_i2c_Start
  6207                           
  6208                           ;Multi_RX_testjig_v2.c: 1303: i2c_Write(0x7C);
  6209  0B57  307C               	movlw	124
  6210  0B58  23D5  3188         	fcall	_i2c_Write
  6211                           
  6212                           ;Multi_RX_testjig_v2.c: 1304: i2c_Write(0x00);
  6213  0B5A  3000               	movlw	0
  6214  0B5B  23D5  3188         	fcall	_i2c_Write
  6215                           
  6216                           ;Multi_RX_testjig_v2.c: 1305: i2c_Write(0x01);
  6217  0B5D  3001               	movlw	1
  6218  0B5E  23D5  3188         	fcall	_i2c_Write
  6219                           
  6220                           ;Multi_RX_testjig_v2.c: 1306: _delay((unsigned long)((2)*(16000000/4000.0)));
  6221  0B60  300B               	movlw	11
  6222  0B61  00F2               	movwf	??_clear_lcd+1
  6223  0B62  3062               	movlw	98
  6224  0B63  00F1               	movwf	??_clear_lcd
  6225  0B64                     u6207:	
  6226  0B64  0BF1               	decfsz	??_clear_lcd,f
  6227  0B65  2B64               	goto	u6207
  6228  0B66  0BF2               	decfsz	??_clear_lcd+1,f
  6229  0B67  2B64               	goto	u6207
  6230  0B68  0000               	nop
  6231                           
  6232                           ;Multi_RX_testjig_v2.c: 1307: i2c_Stop();
  6233  0B69  2BE6               	ljmp	l3054
  6234  0B6A                     __end_of_clear_lcd:	
  6235  0B6A                     __ptext29:	
  6236 ;; *************** function _digitalpot *****************
  6237 ;; Defined at:
  6238 ;;		line 2153 in file "Multi_RX_testjig_v2.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  value           1    wreg     unsigned char 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;  value           1    3[COMMON] unsigned char 
  6243 ;; Return value:  Size  Location     Type
  6244 ;;		None               void
  6245 ;; Registers used:
  6246 ;;		wreg, status,2, status,0, pclath, cstack
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/4
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6255 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6256 ;;Total ram usage:        3 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; Hardware stack levels required when called:    2
  6259 ;; This function calls:
  6260 ;;		_i2c_Start
  6261 ;;		_i2c_Stop
  6262 ;;		_i2c_Write
  6263 ;; This function is called by:
  6264 ;;		_Vout_set
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           
  6269                           ;psect for function _digitalpot
  6270  0B6A                     _digitalpot:	
  6271                           
  6272                           ;incstack = 0
  6273                           ; Regs used in _digitalpot: [wreg+status,2+status,0+pclath+cstack]
  6274                           ;digitalpot@value stored from wreg
  6275  0B6A  00F3               	movwf	digitalpot@value
  6276                           
  6277                           ;Multi_RX_testjig_v2.c: 2155: i2c_Start();
  6278  0B6B  23E1  3188         	fcall	_i2c_Start
  6279                           
  6280                           ;Multi_RX_testjig_v2.c: 2156: i2c_Write(0x5C);
  6281  0B6D  305C               	movlw	92
  6282  0B6E  23D5  3188         	fcall	_i2c_Write
  6283                           
  6284                           ;Multi_RX_testjig_v2.c: 2157: i2c_Write(0b00000000);
  6285  0B70  3000               	movlw	0
  6286  0B71  23D5  3188         	fcall	_i2c_Write
  6287                           
  6288                           ;Multi_RX_testjig_v2.c: 2158: i2c_Write(value);
  6289  0B73  0873               	movf	digitalpot@value,w
  6290  0B74  23D5  3188         	fcall	_i2c_Write
  6291                           
  6292                           ;Multi_RX_testjig_v2.c: 2159: i2c_Stop();
  6293  0B76  23E6  3188         	fcall	_i2c_Stop
  6294                           
  6295                           ;Multi_RX_testjig_v2.c: 2160: _delay((unsigned long)((20)*(16000000/4000.0)));
  6296  0B78  3068               	movlw	104
  6297  0B79  00F2               	movwf	??_digitalpot+1
  6298  0B7A  30E4               	movlw	228
  6299  0B7B  00F1               	movwf	??_digitalpot
  6300  0B7C                     u6237:	
  6301  0B7C  0BF1               	decfsz	??_digitalpot,f
  6302  0B7D  2B7C               	goto	u6237
  6303  0B7E  0BF2               	decfsz	??_digitalpot+1,f
  6304  0B7F  2B7C               	goto	u6237
  6305  0B80  0000               	nop
  6306  0B81  0008               	return
  6307  0B82                     __end_of_digitalpot:	
  6308  0B82                     __ptext6:	
  6309 ;; *************** function _i2c_Write_string *****************
  6310 ;; Defined at:
  6311 ;;		line 1232 in file "Multi_RX_testjig_v2.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  data            2    1[COMMON] PTR const unsigned char 
  6314 ;;		 -> STR_204(17), STR_203(12), STR_202(13), STR_201(17), 
  6315 ;;		 -> STR_200(13), STR_199(16), STR_198(13), STR_197(12), 
  6316 ;;		 -> STR_196(13), STR_195(15), STR_194(14), STR_193(17), 
  6317 ;;		 -> STR_192(14), STR_191(16), STR_190(14), STR_189(12), 
  6318 ;;		 -> STR_188(14), STR_187(15), STR_186(8), STR_185(17), 
  6319 ;;		 -> STR_184(8), STR_183(9), STR_182(9), STR_181(16), 
  6320 ;;		 -> STR_180(9), STR_179(5), STR_178(9), STR_177(8), 
  6321 ;;		 -> STR_176(14), STR_175(14), STR_174(14), STR_173(16), 
  6322 ;;		 -> STR_172(14), STR_171(9), STR_170(14), STR_169(12), 
  6323 ;;		 -> STR_168(11), STR_167(10), STR_166(13), STR_165(16), 
  6324 ;;		 -> STR_164(4), STR_163(12), STR_162(10), STR_161(10), 
  6325 ;;		 -> STR_160(4), STR_159(12), STR_158(2), STR_157(14), 
  6326 ;;		 -> STR_156(4), STR_155(12), STR_154(2), STR_153(13), 
  6327 ;;		 -> STR_152(4), STR_151(12), STR_150(15), STR_149(8), 
  6328 ;;		 -> STR_148(17), STR_147(8), STR_146(16), STR_145(8), 
  6329 ;;		 -> STR_144(15), STR_143(8), STR_142(7), STR_141(8), 
  6330 ;;		 -> STR_140(10), STR_139(8), STR_138(13), STR_137(13), 
  6331 ;;		 -> STR_136(14), STR_135(13), STR_134(5), STR_133(12), 
  6332 ;;		 -> STR_132(5), STR_131(12), STR_130(5), STR_129(12), 
  6333 ;;		 -> STR_128(4), STR_127(12), STR_126(5), STR_125(8), 
  6334 ;;		 -> STR_124(9), STR_123(8), STR_122(13), STR_121(12), 
  6335 ;;		 -> STR_120(16), STR_119(12), STR_118(14), STR_117(12), 
  6336 ;;		 -> STR_116(4), STR_115(12), STR_114(4), STR_113(12), 
  6337 ;;		 -> STR_112(4), STR_111(8), STR_110(4), STR_109(12), 
  6338 ;;		 -> STR_108(9), STR_107(10), STR_106(3), STR_105(12), 
  6339 ;;		 -> STR_104(7), STR_103(9), STR_102(4), STR_101(12), 
  6340 ;;		 -> STR_100(4), STR_99(12), STR_98(15), STR_97(9), 
  6341 ;;		 -> STR_96(16), STR_95(9), STR_94(3), STR_93(12), 
  6342 ;;		 -> STR_92(9), STR_91(10), STR_90(3), STR_89(9), 
  6343 ;;		 -> STR_88(1), STR_87(9), STR_86(3), STR_85(12), 
  6344 ;;		 -> STR_84(9), STR_83(10), STR_82(3), STR_81(12), 
  6345 ;;		 -> STR_80(7), STR_79(9), STR_78(4), STR_77(12), 
  6346 ;;		 -> STR_76(4), STR_75(12), STR_74(15), STR_73(9), 
  6347 ;;		 -> STR_72(16), STR_71(9), STR_70(3), STR_69(12), 
  6348 ;;		 -> STR_68(9), STR_67(10), STR_66(3), STR_65(9), 
  6349 ;;		 -> STR_64(1), STR_63(9), STR_62(9), STR_61(19), 
  6350 ;;		 -> STR_60(3), STR_59(12), STR_58(7), STR_57(16), 
  6351 ;;		 -> STR_56(3), STR_55(12), STR_54(9), STR_53(19), 
  6352 ;;		 -> STR_52(5), STR_51(11), STR_50(1), STR_49(11), 
  6353 ;;		 -> STR_48(18), STR_47(12), STR_46(14), STR_45(12), 
  6354 ;;		 -> STR_44(6), STR_43(13), STR_42(3), STR_41(12), 
  6355 ;;		 -> STR_40(12), STR_39(13), STR_38(18), STR_37(9), 
  6356 ;;		 -> STR_36(3), STR_35(12), STR_34(6), STR_33(13), 
  6357 ;;		 -> STR_32(9), STR_31(19), STR_30(13), STR_29(12), 
  6358 ;;		 -> STR_28(1), STR_27(19), STR_26(12), STR_25(14), 
  6359 ;;		 -> STR_24(11), STR_23(11), STR_22(13), STR_21(15), 
  6360 ;;		 -> STR_20(13), STR_19(15), STR_18(13), STR_17(14), 
  6361 ;;		 -> STR_16(13), STR_15(14), STR_14(12), STR_13(14), 
  6362 ;;		 -> STR_12(11), STR_11(11), STR_10(13), STR_9(14), 
  6363 ;;		 -> STR_8(13), STR_7(14), STR_6(1), STR_5(15), 
  6364 ;;		 -> STR_4(14), STR_3(9), STR_2(17), STR_1(9), 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;		None
  6367 ;; Return value:  Size  Location     Type
  6368 ;;		None               void
  6369 ;; Registers used:
  6370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6371 ;; Tracked objects:
  6372 ;;		On entry : 1F/4
  6373 ;;		On exit  : 1F/4
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6376 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6379 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6380 ;;Total ram usage:        3 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:    2
  6383 ;; This function calls:
  6384 ;;		_i2c_Start
  6385 ;;		_i2c_Stop
  6386 ;;		_i2c_Write
  6387 ;; This function is called by:
  6388 ;;		_print_error
  6389 ;;		_print_screen
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           
  6394                           ;psect for function _i2c_Write_string
  6395  0B82                     _i2c_Write_string:	
  6396  0B82                     l3056:	
  6397                           ;incstack = 0
  6398                           ; Regs used in _i2c_Write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6399                           
  6400                           
  6401                           ;Multi_RX_testjig_v2.c: 1234: i2c_Start();
  6402  0B82  23E1  3188         	fcall	_i2c_Start
  6403                           
  6404                           ;Multi_RX_testjig_v2.c: 1235: i2c_Write(0x7C);
  6405  0B84  307C               	movlw	124
  6406  0B85  23D5  3188         	fcall	_i2c_Write
  6407                           
  6408                           ;Multi_RX_testjig_v2.c: 1236: i2c_Write(0x40);
  6409  0B87  3040               	movlw	64
  6410  0B88  23D5  3188         	fcall	_i2c_Write
  6411  0B8A                     l3066:	
  6412                           ;Multi_RX_testjig_v2.c: 1238: while(*data != (0))
  6413                           
  6414  0B8A  0871               	movf	i2c_Write_string@data,w
  6415  0B8B  0084               	movwf	4
  6416  0B8C  0872               	movf	i2c_Write_string@data+1,w
  6417  0B8D  0085               	movwf	5
  6418  0B8E  0012               	moviw fsr0++
  6419  0B8F  1903               	btfsc	3,2
  6420  0B90  2B9C               	goto	l3068
  6421                           
  6422                           ;Multi_RX_testjig_v2.c: 1239: {
  6423                           ;Multi_RX_testjig_v2.c: 1240: i2c_Write(*data);
  6424  0B91  0871               	movf	i2c_Write_string@data,w
  6425  0B92  0084               	movwf	4
  6426  0B93  0872               	movf	i2c_Write_string@data+1,w
  6427  0B94  0085               	movwf	5
  6428  0B95  0800               	movf	0,w	;code access
  6429  0B96  23D5  3188         	fcall	_i2c_Write
  6430                           
  6431                           ;Multi_RX_testjig_v2.c: 1241: data++;
  6432  0B98  0AF1               	incf	i2c_Write_string@data,f
  6433  0B99  1903               	skipnz
  6434  0B9A  0AF2               	incf	i2c_Write_string@data+1,f
  6435  0B9B  2B8A               	goto	l3066
  6436  0B9C                     l3068:	
  6437                           
  6438                           ;Multi_RX_testjig_v2.c: 1242: }
  6439                           ;Multi_RX_testjig_v2.c: 1243: i2c_Stop();
  6440  0B9C  2BE6               	ljmp	l3054
  6441  0B9D                     __end_of_i2c_Write_string:	
  6442  0B9D                     __ptext17:	
  6443 ;; *************** function _init_i2c_lcd_5v *****************
  6444 ;; Defined at:
  6445 ;;		line 1256 in file "Multi_RX_testjig_v2.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  contrast        1    wreg     unsigned char 
  6448 ;;  single1_doub    1    1[COMMON] unsigned char 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;  contrast        1    4[COMMON] unsigned char 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;		None               void
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0, pclath, cstack
  6455 ;; Tracked objects:
  6456 ;;		On entry : 1F/4
  6457 ;;		On exit  : 1F/4
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6460 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6462 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6463 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6464 ;;Total ram usage:        4 bytes
  6465 ;; Hardware stack levels used:    1
  6466 ;; Hardware stack levels required when called:    2
  6467 ;; This function calls:
  6468 ;;		_i2c_Start
  6469 ;;		_i2c_Stop
  6470 ;;		_i2c_Write
  6471 ;; This function is called by:
  6472 ;;		_main
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           
  6477                           ;psect for function _init_i2c_lcd_5v
  6478  0B9D                     _init_i2c_lcd_5v:	
  6479                           
  6480                           ;incstack = 0
  6481                           ; Regs used in _init_i2c_lcd_5v: [wreg+status,2+status,0+pclath+cstack]
  6482                           ;init_i2c_lcd_5v@contrast stored from wreg
  6483  0B9D  00F4               	movwf	init_i2c_lcd_5v@contrast
  6484                           
  6485                           ;Multi_RX_testjig_v2.c: 1258: i2c_Start();
  6486  0B9E  23E1  3188         	fcall	_i2c_Start
  6487                           
  6488                           ;Multi_RX_testjig_v2.c: 1259: i2c_Write(0x7C);
  6489  0BA0  307C               	movlw	124
  6490  0BA1  23D5  3188         	fcall	_i2c_Write
  6491                           
  6492                           ;Multi_RX_testjig_v2.c: 1260: i2c_Write(0x00);
  6493  0BA3  3000               	movlw	0
  6494  0BA4  23D5  3188         	fcall	_i2c_Write
  6495                           
  6496                           ;Multi_RX_testjig_v2.c: 1261: i2c_Write(0x39);
  6497  0BA6  3039               	movlw	57
  6498  0BA7  23D5  3188         	fcall	_i2c_Write
  6499                           
  6500                           ;Multi_RX_testjig_v2.c: 1262: i2c_Write(0x1C);
  6501  0BA9  301C               	movlw	28
  6502  0BAA  23D5  3188         	fcall	_i2c_Write
  6503                           
  6504                           ;Multi_RX_testjig_v2.c: 1263: i2c_Write(0x70 | contrast);
  6505  0BAC  0874               	movf	init_i2c_lcd_5v@contrast,w
  6506  0BAD  3870               	iorlw	112
  6507  0BAE  23D5  3188         	fcall	_i2c_Write
  6508                           
  6509                           ;Multi_RX_testjig_v2.c: 1264: i2c_Write(0x50);
  6510  0BB0  3050               	movlw	80
  6511  0BB1  23D5  3188         	fcall	_i2c_Write
  6512                           
  6513                           ;Multi_RX_testjig_v2.c: 1265: i2c_Write(0x6C);
  6514  0BB3  306C               	movlw	108
  6515  0BB4  23D5  3188         	fcall	_i2c_Write
  6516                           
  6517                           ;Multi_RX_testjig_v2.c: 1266: if(single1_double2 == 1)
  6518  0BB6  0B71               	decfsz	init_i2c_lcd_5v@single1_double2,w
  6519  0BB7  2BBB               	goto	l3764
  6520                           
  6521                           ;Multi_RX_testjig_v2.c: 1267: i2c_Write(0x38);
  6522  0BB8  3038               	movlw	56
  6523  0BB9  23D5  3188         	fcall	_i2c_Write
  6524  0BBB                     l3764:	
  6525                           
  6526                           ;Multi_RX_testjig_v2.c: 1268: if(single1_double2 == 2)
  6527  0BBB  3002               	movlw	2
  6528  0BBC  0671               	xorwf	init_i2c_lcd_5v@single1_double2,w
  6529  0BBD  1D03               	btfss	3,2
  6530  0BBE  2BC2               	goto	l561
  6531                           
  6532                           ;Multi_RX_testjig_v2.c: 1269: i2c_Write(0x34);
  6533  0BBF  3034               	movlw	52
  6534  0BC0  23D5  3188         	fcall	_i2c_Write
  6535  0BC2                     l561:	
  6536                           
  6537                           ;Multi_RX_testjig_v2.c: 1270: i2c_Write(0x0C);
  6538  0BC2  300C               	movlw	12
  6539  0BC3  23D5  3188         	fcall	_i2c_Write
  6540                           
  6541                           ;Multi_RX_testjig_v2.c: 1271: i2c_Write(0x06);
  6542  0BC5  3006               	movlw	6
  6543  0BC6  23D5  3188         	fcall	_i2c_Write
  6544                           
  6545                           ;Multi_RX_testjig_v2.c: 1272: i2c_Write(0x01);
  6546  0BC8  3001               	movlw	1
  6547  0BC9  23D5  3188         	fcall	_i2c_Write
  6548                           
  6549                           ;Multi_RX_testjig_v2.c: 1273: _delay((unsigned long)((2)*(16000000/4000.0)));
  6550  0BCB  300B               	movlw	11
  6551  0BCC  00F3               	movwf	??_init_i2c_lcd_5v+1
  6552  0BCD  3062               	movlw	98
  6553  0BCE  00F2               	movwf	??_init_i2c_lcd_5v
  6554  0BCF                     u6217:	
  6555  0BCF  0BF2               	decfsz	??_init_i2c_lcd_5v,f
  6556  0BD0  2BCF               	goto	u6217
  6557  0BD1  0BF3               	decfsz	??_init_i2c_lcd_5v+1,f
  6558  0BD2  2BCF               	goto	u6217
  6559  0BD3  0000               	nop
  6560                           
  6561                           ;Multi_RX_testjig_v2.c: 1274: i2c_Stop();
  6562  0BD4  2BE6               	ljmp	l3054
  6563  0BD5                     __end_of_init_i2c_lcd_5v:	
  6564  0BD5                     __ptext30:	
  6565 ;; *************** function _i2c_Write *****************
  6566 ;; Defined at:
  6567 ;;		line 1218 in file "Multi_RX_testjig_v2.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;  data            1    wreg     unsigned char 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;  data            1    0[COMMON] unsigned char 
  6572 ;; Return value:  Size  Location     Type
  6573 ;;		None               void
  6574 ;; Registers used:
  6575 ;;		wreg, status,2
  6576 ;; Tracked objects:
  6577 ;;		On entry : 1F/4
  6578 ;;		On exit  : 1F/4
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6585 ;;Total ram usage:        1 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:    1
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_i2c_Write_string
  6592 ;;		_i2c_write_char
  6593 ;;		_init_i2c_lcd_5v
  6594 ;;		_clear_lcd
  6595 ;;		_i2c_first_line
  6596 ;;		_i2c_second_line
  6597 ;;		_lcd_set_cursor
  6598 ;;		_digitalpot
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           
  6602                           
  6603                           ;psect for function _i2c_Write
  6604  0BD5                     _i2c_Write:	
  6605                           
  6606                           ;incstack = 0
  6607                           ; Regs used in _i2c_Write: [wreg+status,2]
  6608                           ;i2c_Write@data stored from wreg
  6609  0BD5  00F0               	movwf	i2c_Write@data
  6610                           
  6611                           ;Multi_RX_testjig_v2.c: 1220: SSP1BUF = data;
  6612  0BD6  0870               	movf	i2c_Write@data,w
  6613  0BD7  0091               	movwf	17	;volatile
  6614  0BD8                     l536:	
  6615                           ;Multi_RX_testjig_v2.c: 1221: while(SSP1STATbits.BF == 1);
  6616                           
  6617  0BD8  1814               	btfsc	20,0	;volatile
  6618  0BD9  2BD8               	goto	l536
  6619  0BDA                     l3050:	
  6620  0BDA  0816               	movf	22,w	;volatile
  6621  0BDB  391F               	andlw	31
  6622  0BDC  1D03               	btfss	3,2
  6623  0BDD  2BDA               	goto	l3050
  6624  0BDE  1D14               	btfss	20,2	;volatile
  6625  0BDF  0008               	return
  6626  0BE0  2BDA               	goto	l3050
  6627  0BE1                     __end_of_i2c_Write:	
  6628  0BE1                     __ptext32:	
  6629 ;; *************** function _i2c_Start *****************
  6630 ;; Defined at:
  6631 ;;		line 1209 in file "Multi_RX_testjig_v2.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;		None
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;		None               void
  6638 ;; Registers used:
  6639 ;;		None
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/4
  6642 ;;		On exit  : 1F/4
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6649 ;;Total ram usage:        0 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:    1
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_i2c_Write_string
  6656 ;;		_i2c_write_char
  6657 ;;		_init_i2c_lcd_5v
  6658 ;;		_clear_lcd
  6659 ;;		_i2c_first_line
  6660 ;;		_i2c_second_line
  6661 ;;		_lcd_set_cursor
  6662 ;;		_digitalpot
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666                           
  6667                           ;psect for function _i2c_Start
  6668  0BE1                     _i2c_Start:	
  6669                           
  6670                           ;Multi_RX_testjig_v2.c: 1212: SSP1CON2bits.SEN = 1;
  6671                           
  6672                           ;incstack = 0
  6673                           ; Regs used in _i2c_Start: []
  6674  0BE1  0024               	movlb	4	; select bank4
  6675  0BE2  1416               	bsf	22,0	;volatile
  6676  0BE3                     l530:	
  6677                           ;Multi_RX_testjig_v2.c: 1214: while(SSP1CON2bits.SEN == 1);
  6678                           
  6679  0BE3  1C16               	btfss	22,0	;volatile
  6680  0BE4  0008               	return
  6681  0BE5  2BE3               	goto	l530
  6682  0BE6                     __end_of_i2c_Start:	
  6683  0BE6                     __ptext31:	
  6684 ;; *************** function _i2c_Stop *****************
  6685 ;; Defined at:
  6686 ;;		line 1225 in file "Multi_RX_testjig_v2.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;		None
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;		None
  6691 ;; Return value:  Size  Location     Type
  6692 ;;		None               void
  6693 ;; Registers used:
  6694 ;;		None
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/4
  6697 ;;		On exit  : 1F/4
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6704 ;;Total ram usage:        0 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:    1
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_i2c_Write_string
  6711 ;;		_i2c_write_char
  6712 ;;		_init_i2c_lcd_5v
  6713 ;;		_clear_lcd
  6714 ;;		_i2c_first_line
  6715 ;;		_i2c_second_line
  6716 ;;		_lcd_set_cursor
  6717 ;;		_digitalpot
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           
  6722                           ;psect for function _i2c_Stop
  6723  0BE6                     _i2c_Stop:	
  6724  0BE6                     l3054:	
  6725                           ;incstack = 0
  6726                           ; Regs used in _i2c_Stop: []
  6727                           
  6728                           
  6729                           ;Multi_RX_testjig_v2.c: 1227: SSP1CON2bits.PEN = 1;
  6730  0BE6  0024               	movlb	4	; select bank4
  6731  0BE7  1516               	bsf	22,2	;volatile
  6732  0BE8                     l545:	
  6733                           ;Multi_RX_testjig_v2.c: 1228: while(SSP1CON2bits.PEN == 1);
  6734                           
  6735  0BE8  1D16               	btfss	22,2	;volatile
  6736  0BE9  0008               	return
  6737  0BEA  2BE8               	goto	l545
  6738  0BEB                     __end_of_i2c_Stop:	
  6739  0BEB                     __ptext10:	
  6740 ;; *************** function _buzz_one *****************
  6741 ;; Defined at:
  6742 ;;		line 1199 in file "Multi_RX_testjig_v2.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;  time            2    0[COMMON] unsigned int 
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;		None
  6747 ;; Return value:  Size  Location     Type
  6748 ;;		None               void
  6749 ;; Registers used:
  6750 ;;		wreg
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/4
  6753 ;;		On exit  : 1F/2
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6760 ;;Total ram usage:        2 bytes
  6761 ;; Hardware stack levels used:    1
  6762 ;; Hardware stack levels required when called:    1
  6763 ;; This function calls:
  6764 ;;		Nothing
  6765 ;; This function is called by:
  6766 ;;		_testjig_done
  6767 ;;		_print_error
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           
  6772                           ;psect for function _buzz_one
  6773  0BEB                     _buzz_one:	
  6774                           
  6775                           ;Multi_RX_testjig_v2.c: 1201: buzz_timer = time;
  6776                           
  6777                           ;incstack = 0
  6778                           ; Regs used in _buzz_one: [wreg]
  6779  0BEB  0871               	movf	buzz_one@time+1,w
  6780  0BEC  0021               	movlb	1	; select bank1
  6781  0BED  00A3               	movwf	(_buzz_timer+1)^(0+128)	;volatile
  6782  0BEE  0870               	movf	buzz_one@time,w
  6783  0BEF  00A2               	movwf	_buzz_timer^(0+128)	;volatile
  6784                           
  6785                           ;Multi_RX_testjig_v2.c: 1202: LATC5 = 1;
  6786  0BF0  0022               	movlb	2	; select bank2
  6787  0BF1  168E               	bsf	14,5	;volatile
  6788  0BF2  0008               	return
  6789  0BF3                     __end_of_buzz_one:	
  6790  0BF3                     __ptext8:	
  6791 ;; *************** function _power_supply_set *****************
  6792 ;; Defined at:
  6793 ;;		line 2075 in file "Multi_RX_testjig_v2.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;  supply          1    wreg     unsigned char 
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  supply          1    0[COMMON] unsigned char 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;		None               void
  6800 ;; Registers used:
  6801 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/4
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6811 ;;Total ram usage:        1 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:    1
  6814 ;; This function calls:
  6815 ;;		Nothing
  6816 ;; This function is called by:
  6817 ;;		_main
  6818 ;;		_testjig_done
  6819 ;;		_print_error
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           
  6824                           ;psect for function _power_supply_set
  6825  0BF3                     _power_supply_set:	
  6826                           
  6827                           ;incstack = 0
  6828                           ; Regs used in _power_supply_set: [wreg-fsr0h+status,2+status,0]
  6829                           ;power_supply_set@supply stored from wreg
  6830  0BF3  00F0               	movwf	power_supply_set@supply
  6831                           
  6832                           ;Multi_RX_testjig_v2.c: 2077: switch(supply)
  6833  0BF4  2C08               	goto	l3242
  6834  0BF5                     l708:	
  6835                           ;Multi_RX_testjig_v2.c: 2078: {
  6836                           ;Multi_RX_testjig_v2.c: 2079: case 0:
  6837                           
  6838                           
  6839                           ;Multi_RX_testjig_v2.c: 2080: LATD4 = 1;
  6840  0BF5  0022               	movlb	2	; select bank2
  6841  0BF6  160F               	bsf	15,4	;volatile
  6842                           
  6843                           ;Multi_RX_testjig_v2.c: 2082: LATD5 = 1;
  6844  0BF7  168F               	bsf	15,5	;volatile
  6845                           
  6846                           ;Multi_RX_testjig_v2.c: 2086: break;
  6847  0BF8  0008               	return
  6848  0BF9                     l710:	
  6849                           ;Multi_RX_testjig_v2.c: 2087: case 1:
  6850                           
  6851                           
  6852                           ;Multi_RX_testjig_v2.c: 2088: LATD4 = 1;
  6853  0BF9  0022               	movlb	2	; select bank2
  6854  0BFA  160F               	bsf	15,4	;volatile
  6855                           
  6856                           ;Multi_RX_testjig_v2.c: 2089: LATD5 = 0;
  6857  0BFB  128F               	bcf	15,5	;volatile
  6858                           
  6859                           ;Multi_RX_testjig_v2.c: 2090: LATD6 = 1;
  6860  0BFC  170F               	bsf	15,6	;volatile
  6861                           
  6862                           ;Multi_RX_testjig_v2.c: 2091: break;
  6863  0BFD  0008               	return
  6864  0BFE                     l711:	
  6865                           ;Multi_RX_testjig_v2.c: 2092: case 2:
  6866                           
  6867                           
  6868                           ;Multi_RX_testjig_v2.c: 2093: LATD4 = 0;
  6869  0BFE  0022               	movlb	2	; select bank2
  6870  0BFF  120F               	bcf	15,4	;volatile
  6871                           
  6872                           ;Multi_RX_testjig_v2.c: 2094: LATD5 = 0;
  6873  0C00  128F               	bcf	15,5	;volatile
  6874                           
  6875                           ;Multi_RX_testjig_v2.c: 2095: LATD6 = 0;
  6876  0C01  130F               	bcf	15,6	;volatile
  6877                           
  6878                           ;Multi_RX_testjig_v2.c: 2096: break;
  6879  0C02  0008               	return
  6880  0C03                     l712:	
  6881                           ;Multi_RX_testjig_v2.c: 2097: case 3:
  6882                           
  6883                           
  6884                           ;Multi_RX_testjig_v2.c: 2098: LATD4 = 0;
  6885  0C03  0022               	movlb	2	; select bank2
  6886  0C04  120F               	bcf	15,4	;volatile
  6887                           
  6888                           ;Multi_RX_testjig_v2.c: 2099: LATD5 = 0;
  6889  0C05  128F               	bcf	15,5	;volatile
  6890                           
  6891                           ;Multi_RX_testjig_v2.c: 2100: LATD6 = 1;
  6892  0C06  170F               	bsf	15,6	;volatile
  6893                           
  6894                           ;Multi_RX_testjig_v2.c: 2101: break;
  6895  0C07  0008               	return
  6896  0C08                     l3242:	
  6897  0C08  0870               	movf	power_supply_set@supply,w
  6898                           
  6899                           ; Switch size 1, requested type "speed"
  6900                           ; Number of cases is 4, Range of values is 0 to 3
  6901                           ; switch strategies available:
  6902                           ; Name         Instructions Cycles
  6903                           ; direct_byte           14     6 (fixed)
  6904                           ; simple_byte           13     7 (average)
  6905                           ; jumptable            260     6 (fixed)
  6906                           ;	Chosen strategy is direct_byte
  6907  0C09  0084               	movwf	4
  6908  0C0A  3004               	movlw	4
  6909  0C0B  0204               	subwf	4,w
  6910  0C0C  1803               	skipnc
  6911  0C0D  0008               	return
  6912  0C0E  3188               	movlp	high S4906
  6913  0C0F  3504               	lslf	4,w
  6914  0C10  3E0C               	addlw	low S4906
  6915  0C11  0082               	movwf	2
  6916  0C12  0008               	return
  6917  0C13                     __end_of_power_supply_set:	
  6918                           
  6919                           	psect	text33
  6920  07DA                     __ptext33:	
  6921 ;; *************** function _TX_one *****************
  6922 ;; Defined at:
  6923 ;;		line 2207 in file "Multi_RX_testjig_v2.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  data            1    wreg     unsigned char 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  data            1    1[COMMON] unsigned char 
  6928 ;;  i               1    2[COMMON] unsigned char 
  6929 ;; Return value:  Size  Location     Type
  6930 ;;		None               void
  6931 ;; Registers used:
  6932 ;;		wreg, status,2, status,0
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6940 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6941 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6942 ;;Total ram usage:        3 bytes
  6943 ;; Hardware stack levels used:    1
  6944 ;; Hardware stack levels required when called:    1
  6945 ;; This function calls:
  6946 ;;		Nothing
  6947 ;; This function is called by:
  6948 ;;		_main
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           
  6953                           ;psect for function _TX_one
  6954  07DA                     _TX_one:	
  6955                           
  6956                           ;incstack = 0
  6957                           ; Regs used in _TX_one: [wreg+status,2+status,0]
  6958                           ;TX_one@data stored from wreg
  6959  07DA  00F1               	movwf	TX_one@data
  6960                           
  6961                           ;Multi_RX_testjig_v2.c: 2209: TRISG0 = 0;
  6962  07DB  0026               	movlb	6	; select bank6
  6963  07DC  100D               	bcf	13,0	;volatile
  6964                           
  6965                           ;Multi_RX_testjig_v2.c: 2210: GIE = 0;
  6966  07DD  138B               	bcf	11,7	;volatile
  6967                           
  6968                           ;Multi_RX_testjig_v2.c: 2211: LATG0 = 0;
  6969  07DE  0027               	movlb	7	; select bank7
  6970  07DF  100D               	bcf	13,0	;volatile
  6971                           
  6972                           ;Multi_RX_testjig_v2.c: 2212: _delay((unsigned long)((105)*(16000000/4000000.0)));
  6973  07E0  308B               	movlw	139
  6974  07E1  00F0               	movwf	??_TX_one
  6975  07E2                     u6247:	
  6976  07E2  0BF0               	decfsz	??_TX_one,f
  6977  07E3  2FE2               	goto	u6247
  6978  07E4  3200               	nop2	;nop
  6979                           
  6980                           ;Multi_RX_testjig_v2.c: 2214: unsigned char i;
  6981                           ;Multi_RX_testjig_v2.c: 2215: for(i = 0; i < 8; i++)
  6982  07E5  01F2               	clrf	TX_one@i
  6983  07E6                     l738:	
  6984                           
  6985                           ;Multi_RX_testjig_v2.c: 2216: {
  6986                           ;Multi_RX_testjig_v2.c: 2217: LATG0 = data & 0x01;
  6987  07E6  1C71               	btfss	TX_one@data,0
  6988  07E7  2FEB               	goto	u4310
  6989  07E8  0027               	movlb	7	; select bank7
  6990  07E9  140D               	bsf	13,0	;volatile
  6991  07EA  2FED               	goto	u4324
  6992  07EB                     u4310:	
  6993  07EB  0027               	movlb	7	; select bank7
  6994  07EC  100D               	bcf	13,0	;volatile
  6995  07ED                     u4324:	
  6996  07ED  308B               	movlw	139
  6997                           
  6998                           ;Multi_RX_testjig_v2.c: 2218: data = data >> 1;
  6999  07EE  36F1               	lsrf	TX_one@data,f
  7000                           
  7001                           ;Multi_RX_testjig_v2.c: 2219: _delay((unsigned long)((105)*(16000000/4000000.0)));
  7002  07EF  00F0               	movwf	??_TX_one
  7003  07F0                     u6257:	
  7004  07F0  0BF0               	decfsz	??_TX_one,f
  7005  07F1  2FF0               	goto	u6257
  7006  07F2  3200               	nop2	;nop
  7007  07F3  3008               	movlw	8
  7008  07F4  0AF2               	incf	TX_one@i,f
  7009  07F5  0272               	subwf	TX_one@i,w
  7010  07F6  1C03               	skipc
  7011  07F7  2FE6               	goto	l738
  7012                           
  7013                           ;Multi_RX_testjig_v2.c: 2220: }
  7014                           ;Multi_RX_testjig_v2.c: 2221: LATG0 = 1;
  7015  07F8  0027               	movlb	7	; select bank7
  7016  07F9  140D               	bsf	13,0	;volatile
  7017                           
  7018                           ;Multi_RX_testjig_v2.c: 2222: GIE = 1;
  7019  07FA  178B               	bsf	11,7	;volatile
  7020                           
  7021                           ;Multi_RX_testjig_v2.c: 2223: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7022  07FB  3085               	movlw	133
  7023  07FC  00F0               	movwf	??_TX_one
  7024  07FD                     u6267:	
  7025  07FD  0BF0               	decfsz	??_TX_one,f
  7026  07FE  2FFD               	goto	u6267
  7027  07FF  0008               	return
  7028  0800                     __end_of_TX_one:	
  7029                           
  7030                           	psect	text34
  7031  0784                     __ptext34:	
  7032 ;; *************** function _RX_one_timeout *****************
  7033 ;; Defined at:
  7034 ;;		line 2250 in file "Multi_RX_testjig_v2.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;		None
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;  data            1    2[COMMON] unsigned char 
  7039 ;;  i               1    1[COMMON] unsigned char 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      unsigned char 
  7042 ;; Registers used:
  7043 ;;		wreg, status,2, status,0
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7052 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7053 ;;Total ram usage:        3 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; Hardware stack levels required when called:    1
  7056 ;; This function calls:
  7057 ;;		Nothing
  7058 ;; This function is called by:
  7059 ;;		_main
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           
  7064                           ;psect for function _RX_one_timeout
  7065  0784                     _RX_one_timeout:	
  7066                           
  7067                           ;Multi_RX_testjig_v2.c: 2253: uart_receive_timer = 500;
  7068                           
  7069                           ;incstack = 0
  7070                           ; Regs used in _RX_one_timeout: [wreg+status,2+status,0]
  7071  0784  30F4               	movlw	244
  7072  0785  0021               	movlb	1	; select bank1
  7073  0786  00B2               	movwf	_uart_receive_timer^(0+128)	;volatile
  7074  0787  3001               	movlw	1
  7075  0788  00B3               	movwf	(_uart_receive_timer^(0+128)+1)	;volatile
  7076  0789  2F8F               	goto	l753
  7077  078A                     l4012:	
  7078  078A  0021               	movlb	1	; select bank1
  7079  078B  0832               	movf	_uart_receive_timer^(0+128),w	;volatile
  7080  078C  0433               	iorwf	(_uart_receive_timer+1)^(0+128),w	;volatile
  7081  078D  1903               	btfsc	3,2
  7082  078E  2F92               	goto	l4014
  7083  078F                     l753:	
  7084                           ;Multi_RX_testjig_v2.c: 2254: while(RG3 == 1 && uart_receive_timer);
  7085                           
  7086  078F  0025               	movlb	5	; select bank5
  7087  0790  198D               	btfsc	13,3	;volatile
  7088  0791  2F8A               	goto	l4012
  7089  0792                     l4014:	
  7090                           
  7091                           ;Multi_RX_testjig_v2.c: 2255: _delay((unsigned long)((150)*(16000000/4000000.0)));
  7092  0792  30C7               	movlw	199
  7093  0793  00F0               	movwf	??_RX_one_timeout
  7094  0794                     u6277:	
  7095  0794  0BF0               	decfsz	??_RX_one_timeout,f
  7096  0795  2F94               	goto	u6277
  7097  0796  3200               	nop2	;nop
  7098                           
  7099                           ;Multi_RX_testjig_v2.c: 2256: unsigned char i;
  7100                           ;Multi_RX_testjig_v2.c: 2257: unsigned char data = 0;
  7101  0797  01F2               	clrf	RX_one_timeout@data
  7102                           
  7103                           ;Multi_RX_testjig_v2.c: 2258: for(i = 0; i < 8; i++)
  7104  0798  01F1               	clrf	RX_one_timeout@i
  7105  0799                     l758:	
  7106                           
  7107                           ;Multi_RX_testjig_v2.c: 2259: {
  7108                           ;Multi_RX_testjig_v2.c: 2260: LATF4 = 1;
  7109  0799  0027               	movlb	7	; select bank7
  7110  079A  160C               	bsf	12,4	;volatile
  7111                           
  7112                           ;Multi_RX_testjig_v2.c: 2261: if(RG3 == 0)
  7113  079B  0025               	movlb	5	; select bank5
  7114  079C  198D               	btfsc	13,3	;volatile
  7115  079D  2FA0               	goto	l760
  7116                           
  7117                           ;Multi_RX_testjig_v2.c: 2262: data = data >> 1;
  7118  079E  36F2               	lsrf	RX_one_timeout@data,f
  7119  079F  2FA2               	goto	l761
  7120  07A0                     l760:	
  7121                           
  7122                           ;Multi_RX_testjig_v2.c: 2263: else
  7123                           ;Multi_RX_testjig_v2.c: 2264: data = (data >> 1) | 0x80;
  7124  07A0  1403               	setc
  7125  07A1  0CF2               	rrf	RX_one_timeout@data,f
  7126  07A2                     l761:	
  7127                           
  7128                           ;Multi_RX_testjig_v2.c: 2265: LATF4 = 0;
  7129  07A2  0027               	movlb	7	; select bank7
  7130  07A3  120C               	bcf	12,4	;volatile
  7131                           
  7132                           ;Multi_RX_testjig_v2.c: 2266: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7133  07A4  3085               	movlw	133
  7134  07A5  00F0               	movwf	??_RX_one_timeout
  7135  07A6                     u6287:	
  7136  07A6  0BF0               	decfsz	??_RX_one_timeout,f
  7137  07A7  2FA6               	goto	u6287
  7138  07A8  3008               	movlw	8
  7139  07A9  0AF1               	incf	RX_one_timeout@i,f
  7140  07AA  0271               	subwf	RX_one_timeout@i,w
  7141  07AB  1C03               	skipc
  7142  07AC  2F99               	goto	l758
  7143                           
  7144                           ;Multi_RX_testjig_v2.c: 2267: }
  7145                           ;Multi_RX_testjig_v2.c: 2268: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7146  07AD  3085               	movlw	133
  7147  07AE  00F0               	movwf	??_RX_one_timeout
  7148  07AF                     u6297:	
  7149  07AF  0BF0               	decfsz	??_RX_one_timeout,f
  7150  07B0  2FAF               	goto	u6297
  7151                           
  7152                           ;Multi_RX_testjig_v2.c: 2270: return data;
  7153  07B1  0872               	movf	RX_one_timeout@data,w
  7154  07B2  0008               	return
  7155  07B3                     __end_of_RX_one_timeout:	
  7156                           
  7157                           	psect	text35
  7158  07B3                     __ptext35:	
  7159 ;; *************** function _RX_one *****************
  7160 ;; Defined at:
  7161 ;;		line 2226 in file "Multi_RX_testjig_v2.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;		None
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;  data            1    2[COMMON] unsigned char 
  7166 ;;  i               1    1[COMMON] unsigned char 
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  1    wreg      unsigned char 
  7169 ;; Registers used:
  7170 ;;		wreg, status,2, status,0
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/4
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7179 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7180 ;;Total ram usage:        3 bytes
  7181 ;; Hardware stack levels used:    1
  7182 ;; Hardware stack levels required when called:    1
  7183 ;; This function calls:
  7184 ;;		Nothing
  7185 ;; This function is called by:
  7186 ;;		_main
  7187 ;; This function uses a non-reentrant model
  7188 ;;
  7189                           
  7190                           
  7191                           ;psect for function _RX_one
  7192  07B3                     _RX_one:	
  7193  07B3                     l743:	
  7194                           ;Multi_RX_testjig_v2.c: 2229: while(RG3 == 1);
  7195                           
  7196                           ;incstack = 0
  7197                           ; Regs used in _RX_one: [wreg+status,2+status,0]
  7198                           
  7199  07B3  0025               	movlb	5	; select bank5
  7200  07B4  198D               	btfsc	13,3	;volatile
  7201  07B5  2FB3               	goto	l743
  7202                           
  7203                           ;Multi_RX_testjig_v2.c: 2230: GIE = 0;
  7204  07B6  138B               	bcf	11,7	;volatile
  7205                           
  7206                           ;Multi_RX_testjig_v2.c: 2231: _delay((unsigned long)((150)*(16000000/4000000.0)));
  7207  07B7  30C7               	movlw	199
  7208  07B8  00F0               	movwf	??_RX_one
  7209  07B9                     u6307:	
  7210  07B9  0BF0               	decfsz	??_RX_one,f
  7211  07BA  2FB9               	goto	u6307
  7212  07BB  3200               	nop2	;nop
  7213                           
  7214                           ;Multi_RX_testjig_v2.c: 2232: unsigned char i;
  7215                           ;Multi_RX_testjig_v2.c: 2233: unsigned char data = 0;
  7216  07BC  01F2               	clrf	RX_one@data
  7217                           
  7218                           ;Multi_RX_testjig_v2.c: 2234: for(i = 0; i < 8; i++)
  7219  07BD  01F1               	clrf	RX_one@i
  7220  07BE                     l746:	
  7221                           
  7222                           ;Multi_RX_testjig_v2.c: 2235: {
  7223                           ;Multi_RX_testjig_v2.c: 2236: LATF4 = 1;
  7224  07BE  0027               	movlb	7	; select bank7
  7225  07BF  160C               	bsf	12,4	;volatile
  7226                           
  7227                           ;Multi_RX_testjig_v2.c: 2237: if(RG3 == 0)
  7228  07C0  0025               	movlb	5	; select bank5
  7229  07C1  198D               	btfsc	13,3	;volatile
  7230  07C2  2FC5               	goto	l748
  7231                           
  7232                           ;Multi_RX_testjig_v2.c: 2238: data = data >> 1;
  7233  07C3  36F2               	lsrf	RX_one@data,f
  7234  07C4  2FC7               	goto	l749
  7235  07C5                     l748:	
  7236                           
  7237                           ;Multi_RX_testjig_v2.c: 2239: else
  7238                           ;Multi_RX_testjig_v2.c: 2240: data = (data >> 1) | 0x80;
  7239  07C5  1403               	setc
  7240  07C6  0CF2               	rrf	RX_one@data,f
  7241  07C7                     l749:	
  7242                           
  7243                           ;Multi_RX_testjig_v2.c: 2241: LATF4 = 0;
  7244  07C7  0027               	movlb	7	; select bank7
  7245  07C8  120C               	bcf	12,4	;volatile
  7246                           
  7247                           ;Multi_RX_testjig_v2.c: 2242: _delay((unsigned long)((105)*(16000000/4000000.0)));
  7248  07C9  308B               	movlw	139
  7249  07CA  00F0               	movwf	??_RX_one
  7250  07CB                     u6317:	
  7251  07CB  0BF0               	decfsz	??_RX_one,f
  7252  07CC  2FCB               	goto	u6317
  7253  07CD  3200               	nop2	;nop
  7254  07CE  3008               	movlw	8
  7255  07CF  0AF1               	incf	RX_one@i,f
  7256  07D0  0271               	subwf	RX_one@i,w
  7257  07D1  1C03               	skipc
  7258  07D2  2FBE               	goto	l746
  7259                           
  7260                           ;Multi_RX_testjig_v2.c: 2243: }
  7261                           ;Multi_RX_testjig_v2.c: 2244: GIE = 1;
  7262  07D3  178B               	bsf	11,7	;volatile
  7263                           
  7264                           ;Multi_RX_testjig_v2.c: 2245: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7265  07D4  3085               	movlw	133
  7266  07D5  00F0               	movwf	??_RX_one
  7267  07D6                     u6327:	
  7268  07D6  0BF0               	decfsz	??_RX_one,f
  7269  07D7  2FD6               	goto	u6327
  7270                           
  7271                           ;Multi_RX_testjig_v2.c: 2247: return data;
  7272  07D8  0872               	movf	RX_one@data,w
  7273  07D9  0008               	return
  7274  07DA                     __end_of_RX_one:	
  7275                           
  7276                           	psect	intentry
  7277  0004                     __pintentry:	
  7278 ;; *************** function _isr *****************
  7279 ;; Defined at:
  7280 ;;		line 324 in file "Multi_RX_testjig_v2.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;		None
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;		None
  7285 ;; Return value:  Size  Location     Type
  7286 ;;		None               void
  7287 ;; Registers used:
  7288 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 1F/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7298 ;;Total ram usage:        0 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; This function calls:
  7301 ;;		Nothing
  7302 ;; This function is called by:
  7303 ;;		Interrupt level 1
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307  0004                     _isr:	
  7308                           
  7309                           ;incstack = 0
  7310                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  7311  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7312  0005  3180               	pagesel	$
  7313                           
  7314                           ;Multi_RX_testjig_v2.c: 326: if(INTCONbits.TMR0IF == 1)
  7315  0006  1D0B               	btfss	11,2	;volatile
  7316  0007  2826               	goto	i1l4070
  7317                           
  7318                           ;Multi_RX_testjig_v2.c: 327: {
  7319                           ;Multi_RX_testjig_v2.c: 329: if(testjig_timer)
  7320  0008  0021               	movlb	1	; select bank1
  7321  0009  082E               	movf	_testjig_timer^(0+128),w	;volatile
  7322  000A  042F               	iorwf	(_testjig_timer+1)^(0+128),w	;volatile
  7323  000B  1903               	btfsc	3,2
  7324  000C  2812               	goto	i1l274
  7325                           
  7326                           ;Multi_RX_testjig_v2.c: 330: testjig_timer--;
  7327  000D  3001               	movlw	1
  7328  000E  02AE               	subwf	_testjig_timer^(0+128),f	;volatile
  7329  000F  3000               	movlw	0
  7330  0010  3BAF               	subwfb	(_testjig_timer+1)^(0+128),f	;volatile
  7331  0011  2814               	goto	i1l4062
  7332  0012                     i1l274:	
  7333                           
  7334                           ;Multi_RX_testjig_v2.c: 331: else
  7335                           ;Multi_RX_testjig_v2.c: 332: RE0 = 0;
  7336  0012  0020               	movlb	0	; select bank0
  7337  0013  1010               	bcf	16,0	;volatile
  7338  0014                     i1l4062:	
  7339                           
  7340                           ;Multi_RX_testjig_v2.c: 333: if(uart_receive_timer)
  7341  0014  0021               	movlb	1	; select bank1
  7342  0015  0832               	movf	_uart_receive_timer^(0+128),w	;volatile
  7343  0016  0433               	iorwf	(_uart_receive_timer+1)^(0+128),w	;volatile
  7344  0017  1903               	btfsc	3,2
  7345  0018  281D               	goto	i1l276
  7346                           
  7347                           ;Multi_RX_testjig_v2.c: 334: uart_receive_timer--;
  7348  0019  30FF               	movlw	-1
  7349  001A  07B2               	addwf	_uart_receive_timer^(0+128),f	;volatile
  7350  001B  1C03               	skipc
  7351  001C  03B3               	decf	(_uart_receive_timer+1)^(0+128),f	;volatile
  7352  001D                     i1l276:	
  7353                           
  7354                           ;Multi_RX_testjig_v2.c: 335: if(motor_direction_timer)
  7355  001D  082A               	movf	_motor_direction_timer^(0+128),w	;volatile
  7356  001E  042B               	iorwf	(_motor_direction_timer+1)^(0+128),w	;volatile
  7357  001F  1903               	btfsc	3,2
  7358  0020  2825               	goto	i1l4068
  7359                           
  7360                           ;Multi_RX_testjig_v2.c: 336: motor_direction_timer--;
  7361  0021  30FF               	movlw	-1
  7362  0022  07AA               	addwf	_motor_direction_timer^(0+128),f	;volatile
  7363  0023  1C03               	skipc
  7364  0024  03AB               	decf	(_motor_direction_timer+1)^(0+128),f	;volatile
  7365  0025                     i1l4068:	
  7366                           
  7367                           ;Multi_RX_testjig_v2.c: 338: INTCONbits.TMR0IF = 0;
  7368  0025  110B               	bcf	11,2	;volatile
  7369  0026                     i1l4070:	
  7370                           
  7371                           ;Multi_RX_testjig_v2.c: 340: }
  7372                           ;Multi_RX_testjig_v2.c: 341: if(PIR1bits.TMR2IF == 1)
  7373  0026  0020               	movlb	0	; select bank0
  7374  0027  1C91               	btfss	17,1	;volatile
  7375  0028  289F               	goto	i1l300
  7376                           
  7377                           ;Multi_RX_testjig_v2.c: 342: {
  7378                           ;Multi_RX_testjig_v2.c: 344: if(pickit_timer)
  7379  0029  0021               	movlb	1	; select bank1
  7380  002A  082C               	movf	_pickit_timer^(0+128),w	;volatile
  7381  002B  042D               	iorwf	(_pickit_timer+1)^(0+128),w	;volatile
  7382  002C  1903               	btfsc	3,2
  7383  002D  2871               	goto	i1l4102
  7384                           
  7385                           ;Multi_RX_testjig_v2.c: 345: pickit_timer--;
  7386  002E  3001               	movlw	1
  7387  002F  02AC               	subwf	_pickit_timer^(0+128),f	;volatile
  7388  0030  3000               	movlw	0
  7389  0031  3BAD               	subwfb	(_pickit_timer+1)^(0+128),f	;volatile
  7390  0032  287B               	goto	i1l4104
  7391  0033                     i1l282:	
  7392                           ;Multi_RX_testjig_v2.c: 349: {
  7393                           ;Multi_RX_testjig_v2.c: 350: case pickit_start:
  7394                           
  7395                           
  7396                           ;Multi_RX_testjig_v2.c: 351: LATC2 = 1;
  7397  0033  0022               	movlb	2	; select bank2
  7398  0034  150E               	bsf	14,2	;volatile
  7399                           
  7400                           ;Multi_RX_testjig_v2.c: 352: LATC7 = 1;
  7401  0035  178E               	bsf	14,7	;volatile
  7402                           
  7403                           ;Multi_RX_testjig_v2.c: 353: pickit_timer = 10;
  7404  0036  300A               	movlw	10
  7405  0037  0021               	movlb	1	; select bank1
  7406  0038  00AC               	movwf	_pickit_timer^(0+128)	;volatile
  7407  0039  01AD               	clrf	(_pickit_timer+1)^(0+128)	;volatile
  7408                           
  7409                           ;Multi_RX_testjig_v2.c: 354: pickit_state = pickit_push_button;
  7410  003A  3002               	movlw	2
  7411  003B  286F               	goto	L32
  7412  003C                     i1l4078:	
  7413                           ;Multi_RX_testjig_v2.c: 355: break;
  7414                           
  7415                           
  7416                           ;Multi_RX_testjig_v2.c: 357: pickit_timer = 1000;
  7417  003C  30E8               	movlw	232
  7418  003D  00AC               	movwf	_pickit_timer^(0+128)	;volatile
  7419  003E  3003               	movlw	3
  7420  003F  00AD               	movwf	(_pickit_timer^(0+128)+1)	;volatile
  7421                           
  7422                           ;Multi_RX_testjig_v2.c: 358: LATC6 = 1;
  7423  0040  0022               	movlb	2	; select bank2
  7424  0041  170E               	bsf	14,6	;volatile
  7425                           
  7426                           ;Multi_RX_testjig_v2.c: 359: pickit_state = pickit_busy;
  7427  0042  286E               	goto	L33
  7428  0043                     i1l285:	
  7429                           ;Multi_RX_testjig_v2.c: 361: case pickit_busy:
  7430                           
  7431                           ;Multi_RX_testjig_v2.c: 360: break;
  7432                           
  7433                           
  7434                           ;Multi_RX_testjig_v2.c: 362: LATC6 = 0;
  7435  0043  0022               	movlb	2	; select bank2
  7436  0044  130E               	bcf	14,6	;volatile
  7437                           
  7438                           ;Multi_RX_testjig_v2.c: 363: if(RE6 == 0)
  7439  0045  0020               	movlb	0	; select bank0
  7440  0046  1B10               	btfsc	16,6	;volatile
  7441  0047  2850               	goto	i1l4088
  7442                           
  7443                           ;Multi_RX_testjig_v2.c: 364: {
  7444                           ;Multi_RX_testjig_v2.c: 365: pickit_red_counter++;
  7445  0048  0021               	movlb	1	; select bank1
  7446  0049  3065               	movlw	101
  7447  004A  0AB5               	incf	_pickit_red_counter^(0+128),f
  7448                           
  7449                           ;Multi_RX_testjig_v2.c: 366: if(pickit_red_counter > 100)
  7450  004B  0235               	subwf	_pickit_red_counter^(0+128),w
  7451  004C  1C03               	skipc
  7452  004D  2852               	goto	i1l4090
  7453                           
  7454                           ;Multi_RX_testjig_v2.c: 367: pickit_state = pickit_finish;
  7455  004E  01BB               	clrf	_pickit_state^(0+128)
  7456  004F  2852               	goto	i1l4090
  7457  0050                     i1l4088:	
  7458                           
  7459                           ;Multi_RX_testjig_v2.c: 369: else
  7460                           ;Multi_RX_testjig_v2.c: 370: pickit_red_counter = 0;
  7461  0050  0021               	movlb	1	; select bank1
  7462  0051  01B5               	clrf	_pickit_red_counter^(0+128)
  7463  0052                     i1l4090:	
  7464                           
  7465                           ;Multi_RX_testjig_v2.c: 371: if(RE5 == 0)
  7466  0052  0020               	movlb	0	; select bank0
  7467  0053  1A90               	btfsc	16,5	;volatile
  7468  0054  285D               	goto	i1l289
  7469                           
  7470                           ;Multi_RX_testjig_v2.c: 372: {
  7471                           ;Multi_RX_testjig_v2.c: 373: pickit_state = pickit_error;
  7472  0055  3004               	movlw	4
  7473  0056  0021               	movlb	1	; select bank1
  7474  0057  00BB               	movwf	_pickit_state^(0+128)
  7475                           
  7476                           ;Multi_RX_testjig_v2.c: 374: pickit_timer = 1000;
  7477  0058  30E8               	movlw	232
  7478  0059  00AC               	movwf	_pickit_timer^(0+128)	;volatile
  7479  005A  3003               	movlw	3
  7480  005B  00AD               	movwf	(_pickit_timer^(0+128)+1)	;volatile
  7481                           
  7482                           ;Multi_RX_testjig_v2.c: 375: }
  7483  005C  2861               	goto	i1l4096
  7484  005D                     i1l289:	
  7485                           
  7486                           ;Multi_RX_testjig_v2.c: 376: else if(RE4 == 0)
  7487  005D  1A10               	btfsc	16,4	;volatile
  7488  005E  2861               	goto	i1l4096
  7489                           
  7490                           ;Multi_RX_testjig_v2.c: 377: {
  7491                           ;Multi_RX_testjig_v2.c: 378: pickit_state = pickit_finish;
  7492  005F  0021               	movlb	1	; select bank1
  7493  0060  01BB               	clrf	_pickit_state^(0+128)
  7494  0061                     i1l4096:	
  7495                           
  7496                           ;Multi_RX_testjig_v2.c: 379: }
  7497                           ;Multi_RX_testjig_v2.c: 380: pickit_timer = 1;
  7498  0061  3001               	movlw	1
  7499  0062  0021               	movlb	1	; select bank1
  7500  0063  00AC               	movwf	_pickit_timer^(0+128)	;volatile
  7501  0064  01AD               	clrf	(_pickit_timer+1)^(0+128)	;volatile
  7502                           
  7503                           ;Multi_RX_testjig_v2.c: 381: break;
  7504  0065  287B               	goto	i1l4104
  7505  0066                     i1l292:	
  7506                           ;Multi_RX_testjig_v2.c: 382: case pickit_error:
  7507                           
  7508                           
  7509                           ;Multi_RX_testjig_v2.c: 383: LATC2 = 0;
  7510  0066  0022               	movlb	2	; select bank2
  7511  0067  110E               	bcf	14,2	;volatile
  7512                           
  7513                           ;Multi_RX_testjig_v2.c: 384: LATC7 = 0;
  7514  0068  138E               	bcf	14,7	;volatile
  7515                           
  7516                           ;Multi_RX_testjig_v2.c: 385: break;
  7517  0069  287B               	goto	i1l4104
  7518  006A                     i1l293:	
  7519                           ;Multi_RX_testjig_v2.c: 386: case pickit_finish:
  7520                           
  7521                           
  7522                           ;Multi_RX_testjig_v2.c: 387: LATC2 = 0;
  7523  006A  0022               	movlb	2	; select bank2
  7524  006B  110E               	bcf	14,2	;volatile
  7525                           
  7526                           ;Multi_RX_testjig_v2.c: 388: LATC7 = 0;
  7527  006C  138E               	bcf	14,7	;volatile
  7528                           
  7529                           ;Multi_RX_testjig_v2.c: 389: pickit_state = pickit_idle;
  7530  006D  3005               	movlw	5
  7531  006E                     L33:	
  7532  006E  0021               	movlb	1	; select bank1
  7533  006F                     L32:	
  7534  006F  00BB               	movwf	_pickit_state^(0+128)
  7535                           
  7536                           ;Multi_RX_testjig_v2.c: 390: break;
  7537  0070  287B               	goto	i1l4104
  7538  0071                     i1l4102:	
  7539  0071  083B               	movf	_pickit_state^(0+128),w
  7540                           
  7541                           ; Switch size 1, requested type "speed"
  7542                           ; Number of cases is 6, Range of values is 0 to 5
  7543                           ; switch strategies available:
  7544                           ; Name         Instructions Cycles
  7545                           ; direct_byte           18     6 (fixed)
  7546                           ; simple_byte           19    10 (average)
  7547                           ; jumptable            260     6 (fixed)
  7548                           ;	Chosen strategy is direct_byte
  7549  0072  0084               	movwf	4
  7550  0073  3006               	movlw	6
  7551  0074  0204               	subwf	4,w
  7552  0075  1803               	skipnc
  7553  0076  287B               	goto	i1l4104
  7554  0077  3188               	movlp	high i1S4910
  7555  0078  3504               	lslf	4,w
  7556  0079  3E00               	addlw	low i1S4910
  7557  007A  0082               	movwf	2
  7558  007B                     i1l4104:	
  7559                           
  7560                           ;Multi_RX_testjig_v2.c: 394: }
  7561                           ;Multi_RX_testjig_v2.c: 456: if(buzz_timer)
  7562  007B  0021               	movlb	1	; select bank1
  7563  007C  0822               	movf	_buzz_timer^(0+128),w	;volatile
  7564  007D  0423               	iorwf	(_buzz_timer+1)^(0+128),w	;volatile
  7565  007E  1903               	btfsc	3,2
  7566  007F  2885               	goto	i1l295
  7567                           
  7568                           ;Multi_RX_testjig_v2.c: 457: buzz_timer--;
  7569  0080  3001               	movlw	1
  7570  0081  02A2               	subwf	_buzz_timer^(0+128),f	;volatile
  7571  0082  3000               	movlw	0
  7572  0083  3BA3               	subwfb	(_buzz_timer+1)^(0+128),f	;volatile
  7573  0084  2887               	goto	i1l4108
  7574  0085                     i1l295:	
  7575                           
  7576                           ;Multi_RX_testjig_v2.c: 458: else
  7577                           ;Multi_RX_testjig_v2.c: 459: LATC5 = 0;
  7578  0085  0022               	movlb	2	; select bank2
  7579  0086  128E               	bcf	14,5	;volatile
  7580  0087                     i1l4108:	
  7581                           
  7582                           ;Multi_RX_testjig_v2.c: 460: if(one_second_timer)
  7583  0087  0021               	movlb	1	; select bank1
  7584  0088  0839               	movf	_one_second_timer^(0+128),w	;volatile
  7585  0089  043A               	iorwf	(_one_second_timer+1)^(0+128),w	;volatile
  7586  008A  1903               	btfsc	3,2
  7587  008B  2891               	goto	i1l4112
  7588                           
  7589                           ;Multi_RX_testjig_v2.c: 461: one_second_timer--;
  7590  008C  3001               	movlw	1
  7591  008D  02B9               	subwf	_one_second_timer^(0+128),f	;volatile
  7592  008E  3000               	movlw	0
  7593  008F  3BBA               	subwfb	(_one_second_timer+1)^(0+128),f	;volatile
  7594  0090  2895               	goto	i1l4114
  7595  0091                     i1l4112:	
  7596                           
  7597                           ;Multi_RX_testjig_v2.c: 462: else
  7598                           ;Multi_RX_testjig_v2.c: 463: {
  7599                           ;Multi_RX_testjig_v2.c: 464: one_second_timer = 1000;
  7600  0091  30E8               	movlw	232
  7601  0092  00B9               	movwf	_one_second_timer^(0+128)	;volatile
  7602  0093  3003               	movlw	3
  7603  0094  00BA               	movwf	(_one_second_timer^(0+128)+1)	;volatile
  7604  0095                     i1l4114:	
  7605                           
  7606                           ;Multi_RX_testjig_v2.c: 465: }
  7607                           ;Multi_RX_testjig_v2.c: 466: if(tj_timer)
  7608  0095  0830               	movf	_tj_timer^(0+128),w
  7609  0096  0431               	iorwf	(_tj_timer+1)^(0+128),w
  7610  0097  1903               	btfsc	3,2
  7611  0098  289D               	goto	i1l4118
  7612                           
  7613                           ;Multi_RX_testjig_v2.c: 467: tj_timer--;
  7614  0099  3001               	movlw	1
  7615  009A  02B0               	subwf	_tj_timer^(0+128),f
  7616  009B  3000               	movlw	0
  7617  009C  3BB1               	subwfb	(_tj_timer+1)^(0+128),f
  7618  009D                     i1l4118:	
  7619                           
  7620                           ;Multi_RX_testjig_v2.c: 468: PIR1bits.TMR2IF = 0;
  7621  009D  0020               	movlb	0	; select bank0
  7622  009E  1091               	bcf	17,1	;volatile
  7623  009F                     i1l300:	
  7624  009F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7625  00A0  0009               	retfie
  7626  00A1                     __end_of_isr:	
  7627  007E                     btemp	set	126	;btemp
  7628  007E                     int$flags	set	126
  7629  007E                     wtemp	set	126
  7630  007E                     wtemp0	set	126
  7631  0080                     wtemp1	set	128
  7632  0082                     wtemp2	set	130
  7633  0084                     wtemp3	set	132
  7634  0086                     wtemp4	set	134
  7635  0088                     wtemp5	set	136
  7636  007F                     wtemp6	set	127
  7637  007E                     ttemp	set	126
  7638  007E                     ttemp0	set	126
  7639  0081                     ttemp1	set	129
  7640  0084                     ttemp2	set	132
  7641  0087                     ttemp3	set	135
  7642  007F                     ttemp4	set	127
  7643  007E                     ltemp	set	126
  7644  007E                     ltemp0	set	126
  7645  0082                     ltemp1	set	130
  7646  0086                     ltemp2	set	134
  7647  0080                     ltemp3	set	128
  7648                           
  7649                           	psect	swtext2
  7650  0800                     __pswtext2:	
  7651  0800                     i1S4910:	
  7652  0800  3180  286A         	ljmp	i1l293
  7653  0802  3180  2833         	ljmp	i1l282
  7654  0804  3180  283C         	ljmp	i1l4078
  7655  0806  3180  2843         	ljmp	i1l285
  7656  0808  3180  2866         	ljmp	i1l292
  7657  080A  3180  287B         	ljmp	i1l4104
  7658                           
  7659                           	psect	maintext_split_1
  7660  164B                     l4246:	
  7661  164B  305F               	movlw	95
  7662  164C  318C  245E  3196   	fcall	_ADC_get_val
  7663  164F  3000               	movlw	0
  7664  1650  0271               	subwf	?_ADC_get_val+1,w
  7665  1651  307B               	movlw	123
  7666  1652  1903               	skipnz
  7667  1653  0270               	subwf	?_ADC_get_val,w
  7668  1654  1C03               	skipc
  7669  1655  2E86               	goto	l4256
  7670  1656  3063               	movlw	99
  7671  1657  318C  245E  3196   	fcall	_ADC_get_val
  7672  165A  3002               	movlw	2
  7673  165B  0271               	subwf	?_ADC_get_val+1,w
  7674  165C  3013               	movlw	19
  7675  165D  1903               	skipnz
  7676  165E  0270               	subwf	?_ADC_get_val,w
  7677  165F  1803               	skipnc
  7678  1660  2E86               	goto	l4256
  7679  1661  3063               	movlw	99
  7680  1662  318C  245E  3196   	fcall	_ADC_get_val
  7681  1665  3002               	movlw	2
  7682  1666  0271               	subwf	?_ADC_get_val+1,w
  7683  1667  30C6               	movlw	198
  7684  1668  1903               	skipnz
  7685  1669  0270               	subwf	?_ADC_get_val,w
  7686  166A  1C03               	skipc
  7687  166B  2E86               	goto	l4256
  7688  166C  318C  2413  3196   	fcall	_get_30v_current
  7689  166F  3000               	movlw	0
  7690  1670  0258               	subwf	?_get_30v_current+1,w
  7691  1671  303C               	movlw	60
  7692  1672  1903               	skipnz
  7693  1673  0257               	subwf	?_get_30v_current,w
  7694  1674  1803               	skipnc
  7695  1675  2E86               	goto	l4256
  7696  1676  0021               	movlb	1	; select bank1
  7697  1677  082E               	movf	_testjig_timer^(0+128),w	;volatile
  7698  1678  042F               	iorwf	(_testjig_timer+1)^(0+128),w	;volatile
  7699  1679  1903               	btfsc	3,2
  7700  167A  2E86               	goto	l4256
  7701  167B                     l4244:	
  7702                           ;Multi_RX_testjig_v2.c: 591: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) &&
  7703                           ;Multi_RX_testjig_v2.c: 592: (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/
      +                          4.096)*1.08))&&
  7704                           ;Multi_RX_testjig_v2.c: 593: (ADC_get_val(0b01100011) < (unsigned int)((((26/11.0)*1024)
      +                          /4.096)*0.9)) &&
  7705                           ;Multi_RX_testjig_v2.c: 594: (ADC_get_val(0b01100011) > (unsigned int)((((26/11.0)*1024)
      +                          /4.096)*1.2)) &&
  7706                           ;Multi_RX_testjig_v2.c: 595: (get_30v_current() < 60) && testjig_timer);
  7707                           
  7708  167B  305F               	movlw	95
  7709  167C  318C  245E  3196   	fcall	_ADC_get_val
  7710  167F  3000               	movlw	0
  7711  1680  0271               	subwf	?_ADC_get_val+1,w
  7712  1681  3068               	movlw	104
  7713  1682  1903               	skipnz
  7714  1683  0270               	subwf	?_ADC_get_val,w
  7715  1684  1C03               	btfss	3,0
  7716  1685  2E4B               	goto	l4246
  7717  1686                     l4256:	
  7718                           
  7719                           ;Multi_RX_testjig_v2.c: 596: unsigned int temp;
  7720                           ;Multi_RX_testjig_v2.c: 597: temp = get_30v_current();
  7721  1686  318C  2413  3196   	fcall	_get_30v_current
  7722  1689  0858               	movf	?_get_30v_current+1,w
  7723  168A  00E5               	movwf	main@temp+1
  7724  168B  0857               	movf	?_get_30v_current,w
  7725  168C  00E4               	movwf	main@temp
  7726                           
  7727                           ;Multi_RX_testjig_v2.c: 602: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  7728  168D  305F               	movlw	95
  7729  168E  318C  245E  3196   	fcall	_ADC_get_val
  7730  1691  3000               	movlw	0
  7731  1692  0271               	subwf	?_ADC_get_val+1,w
  7732  1693  3068               	movlw	104
  7733  1694  1903               	skipnz
  7734  1695  0270               	subwf	?_ADC_get_val,w
  7735                           
  7736                           ;Multi_RX_testjig_v2.c: 603: {
  7737                           ;Multi_RX_testjig_v2.c: 604: lcd_print_int(ADC_get_val(0b01011111), 11, 0, 0);
  7738  1696  305F               	movlw	95
  7739  1697  1803               	skipnc
  7740  1698  2EBA               	goto	L13
  7741  1699  318C  245E  3196   	fcall	_ADC_get_val
  7742  169C  0871               	movf	?_ADC_get_val+1,w
  7743  169D  0020               	movlb	0	; select bank0
  7744  169E  00DC               	movwf	lcd_print_int@number+1
  7745  169F  0870               	movf	?_ADC_get_val,w
  7746  16A0  00DB               	movwf	lcd_print_int@number
  7747  16A1  300B               	movlw	11
  7748  16A2  00DD               	movwf	lcd_print_int@pos
  7749  16A3  01DE               	clrf	lcd_print_int@pos+1
  7750  16A4  01DF               	clrf	lcd_print_int@decimal
  7751  16A5  01E0               	clrf	lcd_print_int@ten_thou_digit
  7752  16A6  3188  20F5  3196   	fcall	_lcd_print_int
  7753                           
  7754                           ;Multi_RX_testjig_v2.c: 605: _delay((unsigned long)((2000)*(16000000/4000.0)));
  7755  16A9  3029               	movlw	41
  7756  16AA  0020               	movlb	0	; select bank0
  7757  16AB  00E3               	movwf	??_main+2
  7758  16AC  3096               	movlw	150
  7759  16AD  00E2               	movwf	??_main+1
  7760  16AE  30A6               	movlw	166
  7761  16AF  00E1               	movwf	??_main
  7762  16B0                     u5737:	
  7763  16B0  0BE1               	decfsz	??_main,f
  7764  16B1  2EB0               	goto	u5737
  7765  16B2  0BE2               	decfsz	??_main+1,f
  7766  16B3  2EB0               	goto	u5737
  7767  16B4  0BE3               	decfsz	??_main+2,f
  7768  16B5  2EB0               	goto	u5737
  7769                           
  7770                           ;Multi_RX_testjig_v2.c: 606: print_error("16v-5v supply", "Volt Error L");
  7771  16B6  30BB               	movlw	low (STR_15| (0+32768))
  7772  16B7  00F8               	movwf	print_error@top
  7773  16B8  3091               	movlw	high (STR_15| (0+32768))
  7774  16B9  2ED6               	goto	L11
  7775  16BA                     L13:	
  7776                           ;Multi_RX_testjig_v2.c: 608: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  7777                           
  7778                           ;Multi_RX_testjig_v2.c: 607: }
  7779                           
  7780  16BA  318C  245E  3196   	fcall	_ADC_get_val
  7781  16BD  3000               	movlw	0
  7782  16BE  0271               	subwf	?_ADC_get_val+1,w
  7783  16BF  307B               	movlw	123
  7784  16C0  1903               	skipnz
  7785  16C1  0270               	subwf	?_ADC_get_val,w
  7786  16C2  1C03               	skipc
  7787  16C3  2EC8               	goto	l4270
  7788                           
  7789                           ;Multi_RX_testjig_v2.c: 609: {
  7790                           ;Multi_RX_testjig_v2.c: 611: print_error("16v-5v supply", "Volt Error H");
  7791  16C4  30BB               	movlw	low (STR_15| (0+32768))
  7792  16C5  00F8               	movwf	print_error@top
  7793  16C6  3091               	movlw	high (STR_15| (0+32768))
  7794  16C7  2F09               	goto	L12
  7795  16C8                     l4270:	
  7796                           ;Multi_RX_testjig_v2.c: 612: }
  7797                           
  7798                           
  7799                           ;Multi_RX_testjig_v2.c: 613: else if((ADC_get_val(0b01100011) < (unsigned int)((((26/11.
      +                          0)*1024)/4.096)*0.9)))
  7800  16C8  3063               	movlw	99
  7801  16C9  318C  245E  3196   	fcall	_ADC_get_val
  7802  16CC  3002               	movlw	2
  7803  16CD  0271               	subwf	?_ADC_get_val+1,w
  7804  16CE  3013               	movlw	19
  7805  16CF  1903               	skipnz
  7806  16D0  0270               	subwf	?_ADC_get_val,w
  7807  16D1  1803               	skipnc
  7808  16D2  2EDB               	goto	l4274
  7809                           
  7810                           ;Multi_RX_testjig_v2.c: 614: print_error("16v-12v supply", "Volt Error L");
  7811  16D3  304A               	movlw	low (STR_19| (0+32768))
  7812  16D4  00F8               	movwf	print_error@top
  7813  16D5  3091               	movlw	high (STR_19| (0+32768))
  7814  16D6                     L11:	
  7815  16D6  00F9               	movwf	print_error@top+1
  7816  16D7  30FD               	movlw	low (STR_8| (0+32768))
  7817  16D8  00FA               	movwf	print_error@bottom
  7818  16D9  3091               	movlw	high (STR_8| (0+32768))
  7819  16DA  2F45               	goto	L6
  7820  16DB                     l4274:	
  7821                           
  7822                           ;Multi_RX_testjig_v2.c: 615: else if((ADC_get_val(0b01100011) > (unsigned int)((((26/11.
      +                          0)*1024)/4.096)*1.2)))
  7823  16DB  3063               	movlw	99
  7824  16DC  318C  245E  3196   	fcall	_ADC_get_val
  7825  16DF  3002               	movlw	2
  7826  16E0  0271               	subwf	?_ADC_get_val+1,w
  7827  16E1  30C6               	movlw	198
  7828  16E2  1903               	skipnz
  7829  16E3  0270               	subwf	?_ADC_get_val,w
  7830  16E4  1C03               	skipc
  7831  16E5  2F0E               	goto	l4282
  7832                           
  7833                           ;Multi_RX_testjig_v2.c: 616: {
  7834                           ;Multi_RX_testjig_v2.c: 617: lcd_print_int(ADC_get_val(0b01100011), 5, 0, 1);
  7835  16E6  3063               	movlw	99
  7836  16E7  318C  245E  3196   	fcall	_ADC_get_val
  7837  16EA  0871               	movf	?_ADC_get_val+1,w
  7838  16EB  0020               	movlb	0	; select bank0
  7839  16EC  00DC               	movwf	lcd_print_int@number+1
  7840  16ED  0870               	movf	?_ADC_get_val,w
  7841  16EE  00DB               	movwf	lcd_print_int@number
  7842  16EF  3005               	movlw	5
  7843  16F0  00DD               	movwf	lcd_print_int@pos
  7844  16F1  01DE               	clrf	lcd_print_int@pos+1
  7845  16F2  01DF               	clrf	lcd_print_int@decimal
  7846  16F3  01E0               	clrf	lcd_print_int@ten_thou_digit
  7847  16F4  0AE0               	incf	lcd_print_int@ten_thou_digit,f
  7848  16F5  3188  20F5  3196   	fcall	_lcd_print_int
  7849                           
  7850                           ;Multi_RX_testjig_v2.c: 618: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7851  16F8  3015               	movlw	21
  7852  16F9  0020               	movlb	0	; select bank0
  7853  16FA  00E3               	movwf	??_main+2
  7854  16FB  304B               	movlw	75
  7855  16FC  00E2               	movwf	??_main+1
  7856  16FD  30D1               	movlw	209
  7857  16FE  00E1               	movwf	??_main
  7858  16FF                     u5747:	
  7859  16FF  0BE1               	decfsz	??_main,f
  7860  1700  2EFF               	goto	u5747
  7861  1701  0BE2               	decfsz	??_main+1,f
  7862  1702  2EFF               	goto	u5747
  7863  1703  0BE3               	decfsz	??_main+2,f
  7864  1704  2EFF               	goto	u5747
  7865  1705  0000               	nop
  7866                           
  7867                           ;Multi_RX_testjig_v2.c: 619: print_error("16v-12v supply", "Volt Error H");
  7868  1706  304A               	movlw	low (STR_19| (0+32768))
  7869  1707  00F8               	movwf	print_error@top
  7870  1708  3091               	movlw	high (STR_19| (0+32768))
  7871  1709                     L12:	
  7872  1709  00F9               	movwf	print_error@top+1
  7873  170A  30E3               	movlw	low (STR_10| (0+32768))
  7874  170B  00FA               	movwf	print_error@bottom
  7875  170C  3091               	movlw	high (STR_10| (0+32768))
  7876  170D  2F45               	goto	L6
  7877  170E                     l4282:	
  7878                           ;Multi_RX_testjig_v2.c: 620: }
  7879                           
  7880                           
  7881                           ;Multi_RX_testjig_v2.c: 621: else if((temp >= 60))
  7882  170E  3000               	movlw	0
  7883  170F  0020               	movlb	0	; select bank0
  7884  1710  0265               	subwf	main@temp+1,w
  7885  1711  303C               	movlw	60
  7886  1712  1903               	skipnz
  7887  1713  0264               	subwf	main@temp,w
  7888  1714  1C03               	skipc
  7889  1715  2F39               	goto	l4290
  7890                           
  7891                           ;Multi_RX_testjig_v2.c: 622: {
  7892                           ;Multi_RX_testjig_v2.c: 623: lcd_print_int(temp, 5, 0, 1);
  7893  1716  0865               	movf	main@temp+1,w
  7894  1717  00DC               	movwf	lcd_print_int@number+1
  7895  1718  0864               	movf	main@temp,w
  7896  1719  00DB               	movwf	lcd_print_int@number
  7897  171A  3005               	movlw	5
  7898  171B  00DD               	movwf	lcd_print_int@pos
  7899  171C  01DE               	clrf	lcd_print_int@pos+1
  7900  171D  01DF               	clrf	lcd_print_int@decimal
  7901  171E  01E0               	clrf	lcd_print_int@ten_thou_digit
  7902  171F  0AE0               	incf	lcd_print_int@ten_thou_digit,f
  7903  1720  3188  20F5  3196   	fcall	_lcd_print_int
  7904                           
  7905                           ;Multi_RX_testjig_v2.c: 624: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7906  1723  3015               	movlw	21
  7907  1724  0020               	movlb	0	; select bank0
  7908  1725  00E3               	movwf	??_main+2
  7909  1726  304B               	movlw	75
  7910  1727  00E2               	movwf	??_main+1
  7911  1728  30D1               	movlw	209
  7912  1729  00E1               	movwf	??_main
  7913  172A                     u5757:	
  7914  172A  0BE1               	decfsz	??_main,f
  7915  172B  2F2A               	goto	u5757
  7916  172C  0BE2               	decfsz	??_main+1,f
  7917  172D  2F2A               	goto	u5757
  7918  172E  0BE3               	decfsz	??_main+2,f
  7919  172F  2F2A               	goto	u5757
  7920  1730  0000               	nop
  7921                           
  7922                           ;Multi_RX_testjig_v2.c: 625: print_error("16v supply", "Curr Error");
  7923  1731  30CC               	movlw	low (STR_23| (0+32768))
  7924  1732  00F8               	movwf	print_error@top
  7925  1733  3092               	movlw	high (STR_23| (0+32768))
  7926  1734  00F9               	movwf	print_error@top+1
  7927  1735  30AB               	movlw	low (STR_12| (0+32768))
  7928  1736  00FA               	movwf	print_error@bottom
  7929  1737  3092               	movlw	high (STR_12| (0+32768))
  7930  1738  2F45               	goto	L6
  7931  1739                     l4290:	
  7932                           ;Multi_RX_testjig_v2.c: 626: }
  7933                           
  7934                           
  7935                           ;Multi_RX_testjig_v2.c: 627: else if(testjig_timer == 0)
  7936  1739  0021               	movlb	1	; select bank1
  7937  173A  082E               	movf	_testjig_timer^(0+128),w	;volatile
  7938  173B  042F               	iorwf	(_testjig_timer+1)^(0+128),w	;volatile
  7939  173C  1D03               	btfss	3,2
  7940  173D  2F49               	goto	l4294
  7941                           
  7942                           ;Multi_RX_testjig_v2.c: 628: print_error("16v-5v supply", "T-out Error");
  7943  173E  30BB               	movlw	low (STR_15| (0+32768))
  7944  173F  00F8               	movwf	print_error@top
  7945  1740  3091               	movlw	high (STR_15| (0+32768))
  7946  1741  00F9               	movwf	print_error@top+1
  7947  1742  3093               	movlw	low (STR_14| (0+32768))
  7948  1743  00FA               	movwf	print_error@bottom
  7949  1744  3092               	movlw	high (STR_14| (0+32768))
  7950  1745                     L6:	
  7951  1745  00FB               	movwf	print_error@bottom+1
  7952  1746  318A  22F5  3196   	fcall	_print_error
  7953  1749                     l4294:	
  7954                           
  7955                           ;Multi_RX_testjig_v2.c: 634: if(RA2 == 1)
  7956  1749  0020               	movlb	0	; select bank0
  7957  174A  1D0C               	btfss	12,2	;volatile
  7958  174B  2FB6               	goto	l4316
  7959                           
  7960                           ;Multi_RX_testjig_v2.c: 635: {
  7961                           ;Multi_RX_testjig_v2.c: 636: power_supply_set(0);
  7962  174C  3000               	movlw	0
  7963  174D  318B  23F3  3196   	fcall	_power_supply_set
  7964                           
  7965                           ;Multi_RX_testjig_v2.c: 638: print_screen("Pickit Programming", "");
  7966  1750  3013               	movlw	low (STR_27| (0+32768))
  7967  1751  00F4               	movwf	print_screen@top
  7968  1752  3090               	movlw	high (STR_27| (0+32768))
  7969  1753  00F5               	movwf	print_screen@top+1
  7970  1754  30AE               	movlw	low ((STR_165+15)| (0+32768))
  7971  1755  00F6               	movwf	print_screen@bottom
  7972  1756  3090               	movlw	high ((STR_165+15)| (0+32768))
  7973  1757  00F7               	movwf	print_screen@bottom+1
  7974  1758  318A  22D3  3196   	fcall	_print_screen
  7975                           
  7976                           ;Multi_RX_testjig_v2.c: 639: LATA7 = 1;
  7977  175B  0022               	movlb	2	; select bank2
  7978  175C  178C               	bsf	12,7	;volatile
  7979                           
  7980                           ;Multi_RX_testjig_v2.c: 640: _delay((unsigned long)((100)*(16000000/4000.0)));
  7981  175D  3003               	movlw	3
  7982  175E  0020               	movlb	0	; select bank0
  7983  175F  00E3               	movwf	??_main+2
  7984  1760  3008               	movlw	8
  7985  1761  00E2               	movwf	??_main+1
  7986  1762  3078               	movlw	120
  7987  1763  00E1               	movwf	??_main
  7988  1764                     u5767:	
  7989  1764  0BE1               	decfsz	??_main,f
  7990  1765  2F64               	goto	u5767
  7991  1766  0BE2               	decfsz	??_main+1,f
  7992  1767  2F64               	goto	u5767
  7993  1768  0BE3               	decfsz	??_main+2,f
  7994  1769  2F64               	goto	u5767
  7995                           
  7996                           ;Multi_RX_testjig_v2.c: 641: print_screen("Waiting for", " Programming");
  7997  176A  307B               	movlw	low (STR_29| (0+32768))
  7998  176B  00F4               	movwf	print_screen@top
  7999  176C  3092               	movlw	high (STR_29| (0+32768))
  8000  176D  00F5               	movwf	print_screen@top+1
  8001  176E  3019               	movlw	low ((STR_27+6)| (0+32768))
  8002  176F  00F6               	movwf	print_screen@bottom
  8003  1770  3090               	movlw	high ((STR_27+6)| (0+32768))
  8004  1771  00F7               	movwf	print_screen@bottom+1
  8005  1772  318A  22D3  3196   	fcall	_print_screen
  8006                           
  8007                           ;Multi_RX_testjig_v2.c: 644: LATC2 = 1;
  8008  1775  0022               	movlb	2	; select bank2
  8009  1776  150E               	bsf	14,2	;volatile
  8010                           
  8011                           ;Multi_RX_testjig_v2.c: 645: LATC7 = 1;
  8012  1777  178E               	bsf	14,7	;volatile
  8013                           
  8014                           ;Multi_RX_testjig_v2.c: 646: _delay((unsigned long)((100)*(16000000/4000.0)));
  8015  1778  3003               	movlw	3
  8016  1779  0020               	movlb	0	; select bank0
  8017  177A  00E3               	movwf	??_main+2
  8018  177B  3008               	movlw	8
  8019  177C  00E2               	movwf	??_main+1
  8020  177D  3078               	movlw	120
  8021  177E  00E1               	movwf	??_main
  8022  177F                     u5777:	
  8023  177F  0BE1               	decfsz	??_main,f
  8024  1780  2F7F               	goto	u5777
  8025  1781  0BE2               	decfsz	??_main+1,f
  8026  1782  2F7F               	goto	u5777
  8027  1783  0BE3               	decfsz	??_main+2,f
  8028  1784  2F7F               	goto	u5777
  8029                           
  8030                           ;Multi_RX_testjig_v2.c: 647: LATC6 = 1;
  8031  1785  0022               	movlb	2	; select bank2
  8032  1786  170E               	bsf	14,6	;volatile
  8033                           
  8034                           ;Multi_RX_testjig_v2.c: 648: _delay((unsigned long)((1000)*(16000000/4000.0)));
  8035  1787  3015               	movlw	21
  8036  1788  0020               	movlb	0	; select bank0
  8037  1789  00E3               	movwf	??_main+2
  8038  178A  304B               	movlw	75
  8039  178B  00E2               	movwf	??_main+1
  8040  178C  30D1               	movlw	209
  8041  178D  00E1               	movwf	??_main
  8042  178E                     u5787:	
  8043  178E  0BE1               	decfsz	??_main,f
  8044  178F  2F8E               	goto	u5787
  8045  1790  0BE2               	decfsz	??_main+1,f
  8046  1791  2F8E               	goto	u5787
  8047  1792  0BE3               	decfsz	??_main+2,f
  8048  1793  2F8E               	goto	u5787
  8049  1794  0000               	nop
  8050                           
  8051                           ;Multi_RX_testjig_v2.c: 649: LATC6 = 0;
  8052  1795  0022               	movlb	2	; select bank2
  8053  1796  130E               	bcf	14,6	;volatile
  8054                           
  8055                           ;Multi_RX_testjig_v2.c: 650: _delay((unsigned long)((4500)*(16000000/4000.0)));
  8056  1797  305C               	movlw	92
  8057  1798  0020               	movlb	0	; select bank0
  8058  1799  00E3               	movwf	??_main+2
  8059  179A  3051               	movlw	81
  8060  179B  00E2               	movwf	??_main+1
  8061  179C  30BA               	movlw	186
  8062  179D  00E1               	movwf	??_main
  8063  179E                     u5797:	
  8064  179E  0BE1               	decfsz	??_main,f
  8065  179F  2F9E               	goto	u5797
  8066  17A0  0BE2               	decfsz	??_main+1,f
  8067  17A1  2F9E               	goto	u5797
  8068  17A2  0BE3               	decfsz	??_main+2,f
  8069  17A3  2F9E               	goto	u5797
  8070  17A4  0000               	nop
  8071                           
  8072                           ;Multi_RX_testjig_v2.c: 651: LATC2 = 0;
  8073  17A5  0022               	movlb	2	; select bank2
  8074  17A6  110E               	bcf	14,2	;volatile
  8075                           
  8076                           ;Multi_RX_testjig_v2.c: 652: LATC7 = 0;
  8077  17A7  138E               	bcf	14,7	;volatile
  8078                           
  8079                           ;Multi_RX_testjig_v2.c: 653: _delay((unsigned long)((100)*(16000000/4000.0)));
  8080  17A8  3003               	movlw	3
  8081  17A9  0020               	movlb	0	; select bank0
  8082  17AA  00E3               	movwf	??_main+2
  8083  17AB  3008               	movlw	8
  8084  17AC  00E2               	movwf	??_main+1
  8085  17AD  3078               	movlw	120
  8086  17AE  00E1               	movwf	??_main
  8087  17AF                     u5807:	
  8088  17AF  0BE1               	decfsz	??_main,f
  8089  17B0  2FAF               	goto	u5807
  8090  17B1  0BE2               	decfsz	??_main+1,f
  8091  17B2  2FAF               	goto	u5807
  8092  17B3  0BE3               	decfsz	??_main+2,f
  8093  17B4  2FAF               	goto	u5807
  8094                           
  8095                           ;Multi_RX_testjig_v2.c: 660: }
  8096  17B5  2FCF               	goto	l4320
  8097  17B6                     l4316:	
  8098                           
  8099                           ;Multi_RX_testjig_v2.c: 661: else
  8100                           ;Multi_RX_testjig_v2.c: 662: {
  8101                           ;Multi_RX_testjig_v2.c: 663: print_screen("Pickit Programming", " skipped");
  8102  17B6  3013               	movlw	low (STR_27| (0+32768))
  8103  17B7  00F4               	movwf	print_screen@top
  8104  17B8  3090               	movlw	high (STR_27| (0+32768))
  8105  17B9  00F5               	movwf	print_screen@top+1
  8106  17BA  3064               	movlw	low (STR_32| (0+32768))
  8107  17BB  00F6               	movwf	print_screen@bottom
  8108  17BC  3093               	movlw	high (STR_32| (0+32768))
  8109  17BD  00F7               	movwf	print_screen@bottom+1
  8110  17BE  318A  22D3  3196   	fcall	_print_screen
  8111                           
  8112                           ;Multi_RX_testjig_v2.c: 664: _delay((unsigned long)((300)*(16000000/4000.0)));
  8113  17C1  3007               	movlw	7
  8114  17C2  0020               	movlb	0	; select bank0
  8115  17C3  00E3               	movwf	??_main+2
  8116  17C4  3017               	movlw	23
  8117  17C5  00E2               	movwf	??_main+1
  8118  17C6  306F               	movlw	111
  8119  17C7  00E1               	movwf	??_main
  8120  17C8                     u5817:	
  8121  17C8  0BE1               	decfsz	??_main,f
  8122  17C9  2FC8               	goto	u5817
  8123  17CA  0BE2               	decfsz	??_main+1,f
  8124  17CB  2FC8               	goto	u5817
  8125  17CC  0BE3               	decfsz	??_main+2,f
  8126  17CD  2FC8               	goto	u5817
  8127  17CE  0000               	nop
  8128  17CF                     l4320:	
  8129                           
  8130                           ;Multi_RX_testjig_v2.c: 665: }
  8131                           ;Multi_RX_testjig_v2.c: 680: LATF4 = 0;
  8132  17CF  0027               	movlb	7	; select bank7
  8133  17D0  120C               	bcf	12,4	;volatile
  8134                           
  8135                           ;Multi_RX_testjig_v2.c: 681: _delay((unsigned long)((100)*(16000000/4000.0)));
  8136  17D1  3003               	movlw	3
  8137  17D2  0020               	movlb	0	; select bank0
  8138  17D3  00E3               	movwf	??_main+2
  8139  17D4  3008               	movlw	8
  8140  17D5  00E2               	movwf	??_main+1
  8141  17D6  3078               	movlw	120
  8142  17D7  00E1               	movwf	??_main
  8143  17D8                     u5827:	
  8144  17D8  0BE1               	decfsz	??_main,f
  8145  17D9  2FD8               	goto	u5827
  8146  17DA  0BE2               	decfsz	??_main+1,f
  8147  17DB  2FD8               	goto	u5827
  8148  17DC  0BE3               	decfsz	??_main+2,f
  8149  17DD  2FD8               	goto	u5827
  8150                           
  8151                           ;Multi_RX_testjig_v2.c: 682: LATF4 = 1;
  8152  17DE  0027               	movlb	7	; select bank7
  8153  17DF  160C               	bsf	12,4	;volatile
  8154                           
  8155                           ;Multi_RX_testjig_v2.c: 683: _delay((unsigned long)((100)*(16000000/4000.0)));
  8156  17E0  3003               	movlw	3
  8157  17E1  0020               	movlb	0	; select bank0
  8158  17E2  00E3               	movwf	??_main+2
  8159  17E3  3008               	movlw	8
  8160  17E4  00E2               	movwf	??_main+1
  8161  17E5  3078               	movlw	120
  8162  17E6  00E1               	movwf	??_main
  8163  17E7                     u5837:	
  8164  17E7  0BE1               	decfsz	??_main,f
  8165  17E8  2FE7               	goto	u5837
  8166  17E9  0BE2               	decfsz	??_main+1,f
  8167  17EA  2FE7               	goto	u5837
  8168  17EB  0BE3               	decfsz	??_main+2,f
  8169  17EC  2FE7               	goto	u5837
  8170                           
  8171                           ;Multi_RX_testjig_v2.c: 684: LATF4 = 0;
  8172  17ED  0027               	movlb	7	; select bank7
  8173  17EE  120C               	bcf	12,4	;volatile
  8174                           
  8175                           ;Multi_RX_testjig_v2.c: 685: print_screen("Establishing", "comms");
  8176  17EF  3017               	movlw	low (STR_33| (0+32768))
  8177  17F0  00F4               	movwf	print_screen@top
  8178  17F1  3092               	movlw	high (STR_33| (0+32768))
  8179  17F2  00F5               	movwf	print_screen@top+1
  8180  17F3  30BB               	movlw	low ((STR_168+5)| (0+32768))
  8181  17F4  00F6               	movwf	print_screen@bottom
  8182  17F5  3092               	movlw	high ((STR_168+5)| (0+32768))
  8183  17F6  00F7               	movwf	print_screen@bottom+1
  8184  17F7  318A  22D3         	fcall	_print_screen
  8185                           
  8186                           ;Multi_RX_testjig_v2.c: 686: unsigned char device_type;
  8187                           ;Multi_RX_testjig_v2.c: 687: unsigned char RX_data = 0;
  8188  17F9  0020               	movlb	0	; select bank0
  8189  17FA  3000               	movlw	0
  8190  17FB  01EE               	clrf	main@RX_data
  8191  17FC  01EB               	clrf	main@i
  8192  17FD  01EC               	clrf	main@i+1
  8193  17FE  3180  28E7         	goto	L7
  8194                           
  8195                           	psect	maintext_split_2
  8196  00B4                     l4342:	
  8197  00B4  30A1               	movlw	161
  8198  00B5  066D               	xorwf	main@device_type,w
  8199  00B6  1903               	btfsc	3,2
  8200  00B7  28F9               	goto	l4354
  8201  00B8  30A2               	movlw	162
  8202  00B9  066D               	xorwf	main@device_type,w
  8203  00BA  1903               	btfsc	3,2
  8204  00BB  28F9               	goto	l4354
  8205                           
  8206                           ;Multi_RX_testjig_v2.c: 695: lcd_print_int(i, 11, 0, 0);
  8207  00BC  086C               	movf	main@i+1,w
  8208  00BD  00DC               	movwf	lcd_print_int@number+1
  8209  00BE  086B               	movf	main@i,w
  8210  00BF  00DB               	movwf	lcd_print_int@number
  8211  00C0  300B               	movlw	11
  8212  00C1  00DD               	movwf	lcd_print_int@pos
  8213  00C2  01DE               	clrf	lcd_print_int@pos+1
  8214  00C3  01DF               	clrf	lcd_print_int@decimal
  8215  00C4  01E0               	clrf	lcd_print_int@ten_thou_digit
  8216  00C5  3188  20F5  3180   	fcall	_lcd_print_int
  8217                           
  8218                           ;Multi_RX_testjig_v2.c: 696: lcd_print_int(device_type, 5, 0, 0);
  8219  00C8  0020               	movlb	0	; select bank0
  8220  00C9  086D               	movf	main@device_type,w
  8221  00CA  00DB               	movwf	lcd_print_int@number
  8222  00CB  3005               	movlw	5
  8223  00CC  01DC               	clrf	lcd_print_int@number+1
  8224  00CD  00DD               	movwf	lcd_print_int@pos
  8225  00CE  01DE               	clrf	lcd_print_int@pos+1
  8226  00CF  01DF               	clrf	lcd_print_int@decimal
  8227  00D0  01E0               	clrf	lcd_print_int@ten_thou_digit
  8228  00D1  3188  20F5  3180   	fcall	_lcd_print_int
  8229                           
  8230                           ;Multi_RX_testjig_v2.c: 697: _delay((unsigned long)((50)*(16000000/4000.0)));
  8231  00D4  3002               	movlw	2
  8232  00D5  0020               	movlb	0	; select bank0
  8233  00D6  00E3               	movwf	??_main+2
  8234  00D7  3004               	movlw	4
  8235  00D8  00E2               	movwf	??_main+1
  8236  00D9  30BA               	movlw	186
  8237  00DA  00E1               	movwf	??_main
  8238  00DB                     u5847:	
  8239  00DB  0BE1               	decfsz	??_main,f
  8240  00DC  28DB               	goto	u5847
  8241  00DD  0BE2               	decfsz	??_main+1,f
  8242  00DE  28DB               	goto	u5847
  8243  00DF  0BE3               	decfsz	??_main+2,f
  8244  00E0  28DB               	goto	u5847
  8245  00E1  0000               	nop
  8246  00E2  0020               	movlb	0	; select bank0
  8247  00E3  0AEB               	incf	main@i,f
  8248  00E4  1903               	skipnz
  8249  00E5  0AEC               	incf	main@i+1,f
  8250  00E6  3000               	movlw	0
  8251  00E7                     L7:	
  8252  00E7  026C               	subwf	main@i+1,w
  8253  00E8  3064               	movlw	100
  8254  00E9  1903               	skipnz
  8255  00EA  026B               	subwf	main@i,w
  8256  00EB  1803               	btfsc	3,0
  8257  00EC  28F9               	goto	l4354
  8258                           
  8259                           ;Multi_RX_testjig_v2.c: 690: {
  8260                           ;Multi_RX_testjig_v2.c: 691: TX_one(0x01);
  8261  00ED  3001               	movlw	1
  8262  00EE  3187  27DA  3180   	fcall	_TX_one
  8263                           
  8264                           ;Multi_RX_testjig_v2.c: 692: device_type = RX_one_timeout();
  8265  00F1  3187  2784  3180   	fcall	_RX_one_timeout
  8266  00F4  0020               	movlb	0	; select bank0
  8267  00F5  00ED               	movwf	main@device_type
  8268                           
  8269                           ;Multi_RX_testjig_v2.c: 693: if((device_type == 0xAA) || (device_type == 0xA1) || (devic
      +                          e_type == 0xA2))
  8270  00F6  3AAA               	xorlw	170
  8271  00F7  1D03               	btfss	3,2
  8272  00F8  28B4               	goto	l4342
  8273  00F9                     l4354:	
  8274                           
  8275                           ;Multi_RX_testjig_v2.c: 698: }
  8276                           ;Multi_RX_testjig_v2.c: 699: if(i >= 10)
  8277  00F9  3000               	movlw	0
  8278  00FA  026C               	subwf	main@i+1,w
  8279  00FB  300A               	movlw	10
  8280  00FC  1903               	skipnz
  8281  00FD  026B               	subwf	main@i,w
  8282  00FE  1C03               	skipc
  8283  00FF  290C               	goto	l4358
  8284                           
  8285                           ;Multi_RX_testjig_v2.c: 700: {
  8286                           ;Multi_RX_testjig_v2.c: 703: print_error("Comms Error", " 1");
  8287  0100  3087               	movlw	low (STR_35| (0+32768))
  8288  0101  00F8               	movwf	print_error@top
  8289  0102  3092               	movlw	high (STR_35| (0+32768))
  8290  0103  00F9               	movwf	print_error@top+1
  8291  0104  3022               	movlw	low ((STR_62+6)| (0+32768))
  8292  0105  00FA               	movwf	print_error@bottom
  8293  0106  3093               	movlw	high ((STR_62+6)| (0+32768))
  8294  0107  00FB               	movwf	print_error@bottom+1
  8295  0108  318A  22F5  3180   	fcall	_print_error
  8296                           
  8297                           ;Multi_RX_testjig_v2.c: 704: }
  8298  010B  2932               	goto	l4362
  8299  010C                     l4358:	
  8300                           
  8301                           ;Multi_RX_testjig_v2.c: 705: else
  8302                           ;Multi_RX_testjig_v2.c: 706: {
  8303                           ;Multi_RX_testjig_v2.c: 707: lcd_print_int(i, 11, 0, 0);
  8304  010C  086C               	movf	main@i+1,w
  8305  010D  00DC               	movwf	lcd_print_int@number+1
  8306  010E  086B               	movf	main@i,w
  8307  010F  00DB               	movwf	lcd_print_int@number
  8308  0110  300B               	movlw	11
  8309  0111  00DD               	movwf	lcd_print_int@pos
  8310  0112  01DE               	clrf	lcd_print_int@pos+1
  8311  0113  01DF               	clrf	lcd_print_int@decimal
  8312  0114  01E0               	clrf	lcd_print_int@ten_thou_digit
  8313  0115  3188  20F5  3180   	fcall	_lcd_print_int
  8314                           
  8315                           ;Multi_RX_testjig_v2.c: 708: lcd_print_int(device_type, 5, 0, 0);
  8316  0118  0020               	movlb	0	; select bank0
  8317  0119  086D               	movf	main@device_type,w
  8318  011A  00DB               	movwf	lcd_print_int@number
  8319  011B  3005               	movlw	5
  8320  011C  01DC               	clrf	lcd_print_int@number+1
  8321  011D  00DD               	movwf	lcd_print_int@pos
  8322  011E  01DE               	clrf	lcd_print_int@pos+1
  8323  011F  01DF               	clrf	lcd_print_int@decimal
  8324  0120  01E0               	clrf	lcd_print_int@ten_thou_digit
  8325  0121  3188  20F5  3180   	fcall	_lcd_print_int
  8326                           
  8327                           ;Multi_RX_testjig_v2.c: 709: _delay((unsigned long)((50)*(16000000/4000.0)));
  8328  0124  3002               	movlw	2
  8329  0125  0020               	movlb	0	; select bank0
  8330  0126  00E3               	movwf	??_main+2
  8331  0127  3004               	movlw	4
  8332  0128  00E2               	movwf	??_main+1
  8333  0129  30BA               	movlw	186
  8334  012A  00E1               	movwf	??_main
  8335  012B                     u5857:	
  8336  012B  0BE1               	decfsz	??_main,f
  8337  012C  292B               	goto	u5857
  8338  012D  0BE2               	decfsz	??_main+1,f
  8339  012E  292B               	goto	u5857
  8340  012F  0BE3               	decfsz	??_main+2,f
  8341  0130  292B               	goto	u5857
  8342  0131  0000               	nop
  8343  0132                     l4362:	
  8344                           
  8345                           ;Multi_RX_testjig_v2.c: 710: }
  8346                           ;Multi_RX_testjig_v2.c: 712: if((device_type == 0xAA)|| (device_type == 0xA2))
  8347  0132  30AA               	movlw	170
  8348  0133  0020               	movlb	0	; select bank0
  8349  0134  066D               	xorwf	main@device_type,w
  8350  0135  1903               	btfsc	3,2
  8351  0136  293B               	goto	l4366
  8352  0137  30A2               	movlw	162
  8353  0138  066D               	xorwf	main@device_type,w
  8354  0139  1D03               	btfss	3,2
  8355  013A  29AD               	goto	l4404
  8356  013B                     l4366:	
  8357                           
  8358                           ;Multi_RX_testjig_v2.c: 713: {
  8359                           ;Multi_RX_testjig_v2.c: 715: print_screen("Testing ", "EEPROM read/write");
  8360  013B  3013               	movlw	low (STR_37| (0+32768))
  8361  013C  00F4               	movwf	print_screen@top
  8362  013D  3093               	movlw	high (STR_37| (0+32768))
  8363  013E  00F5               	movwf	print_screen@top+1
  8364  013F  3026               	movlw	low (STR_38| (0+32768))
  8365  0140  00F6               	movwf	print_screen@bottom
  8366  0141  3090               	movlw	high (STR_38| (0+32768))
  8367  0142  00F7               	movwf	print_screen@bottom+1
  8368  0143  318A  22D3  3180   	fcall	_print_screen
  8369                           
  8370                           ;Multi_RX_testjig_v2.c: 716: TX_one(0x10);
  8371  0146  3010               	movlw	16
  8372  0147  3187  27DA  3180   	fcall	_TX_one
  8373                           
  8374                           ;Multi_RX_testjig_v2.c: 717: RX_data = RX_one();
  8375  014A  3187  27B3  3180   	fcall	_RX_one
  8376  014D  0020               	movlb	0	; select bank0
  8377  014E  00EE               	movwf	main@RX_data
  8378                           
  8379                           ;Multi_RX_testjig_v2.c: 718: if(RX_data == 0xEE)
  8380  014F  3AEE               	xorlw	238
  8381  0150  1D03               	btfss	3,2
  8382  0151  295A               	goto	l4376
  8383                           
  8384                           ;Multi_RX_testjig_v2.c: 719: print_error("EEPROM error", " Read/Write");
  8385  0152  3024               	movlw	low (STR_39| (0+32768))
  8386  0153  00F8               	movwf	print_error@top
  8387  0154  3092               	movlw	high (STR_39| (0+32768))
  8388  0155  00F9               	movwf	print_error@top+1
  8389  0156  3057               	movlw	low (STR_40| (0+32768))
  8390  0157  00FA               	movwf	print_error@bottom
  8391  0158  3092               	movlw	high (STR_40| (0+32768))
  8392  0159  2965               	goto	L2
  8393  015A                     l4376:	
  8394                           
  8395                           ;Multi_RX_testjig_v2.c: 720: else if(RX_data != 0x1A)
  8396  015A  301A               	movlw	26
  8397  015B  066E               	xorwf	main@RX_data,w
  8398  015C  1903               	btfsc	3,2
  8399  015D  2969               	goto	l346
  8400                           
  8401                           ;Multi_RX_testjig_v2.c: 721: print_error("Comms Error", " 2");
  8402  015E  3087               	movlw	low (STR_35| (0+32768))
  8403  015F  00F8               	movwf	print_error@top
  8404  0160  3092               	movlw	high (STR_35| (0+32768))
  8405  0161  00F9               	movwf	print_error@top+1
  8406  0162  302B               	movlw	low ((STR_54+6)| (0+32768))
  8407  0163  00FA               	movwf	print_error@bottom
  8408  0164  3093               	movlw	high ((STR_54+6)| (0+32768))
  8409  0165                     L2:	
  8410  0165  00FB               	movwf	print_error@bottom+1
  8411  0166  318A  22F5  3180   	fcall	_print_error
  8412  0169                     l346:	
  8413                           
  8414                           ;Multi_RX_testjig_v2.c: 724: unsigned int mem_size;
  8415                           ;Multi_RX_testjig_v2.c: 725: print_screen("Test EEPROM ", " size");
  8416  0169  30C9               	movlw	low (STR_43| (0+32768))
  8417  016A  00F4               	movwf	print_screen@top
  8418  016B  3091               	movlw	high (STR_43| (0+32768))
  8419  016C  00F5               	movwf	print_screen@top+1
  8420  016D  3069               	movlw	low ((STR_45+6)| (0+32768))
  8421  016E  00F6               	movwf	print_screen@bottom
  8422  016F  3092               	movlw	high ((STR_45+6)| (0+32768))
  8423  0170  00F7               	movwf	print_screen@bottom+1
  8424  0171  318A  22D3  3180   	fcall	_print_screen
  8425                           
  8426                           ;Multi_RX_testjig_v2.c: 726: TX_one(0x20);
  8427  0174  3020               	movlw	32
  8428  0175  3187  27DA  3180   	fcall	_TX_one
  8429                           
  8430                           ;Multi_RX_testjig_v2.c: 727: RX_data = RX_one();
  8431  0178  3187  27B3  3180   	fcall	_RX_one
  8432  017B  0020               	movlb	0	; select bank0
  8433  017C  00EE               	movwf	main@RX_data
  8434                           
  8435                           ;Multi_RX_testjig_v2.c: 728: mem_size = RX_data<<8;
  8436  017D  00E7               	movwf	main@mem_size+1
  8437  017E  3021               	movlw	33
  8438  017F  01E6               	clrf	main@mem_size
  8439                           
  8440                           ;Multi_RX_testjig_v2.c: 729: TX_one(0x21);
  8441  0180  3187  27DA  3180   	fcall	_TX_one
  8442                           
  8443                           ;Multi_RX_testjig_v2.c: 730: RX_data = RX_one();
  8444  0183  3187  27B3  3180   	fcall	_RX_one
  8445  0186  0020               	movlb	0	; select bank0
  8446  0187  00EE               	movwf	main@RX_data
  8447                           
  8448                           ;Multi_RX_testjig_v2.c: 731: mem_size = mem_size | RX_data;
  8449  0188  04E6               	iorwf	main@mem_size,f
  8450                           
  8451                           ;Multi_RX_testjig_v2.c: 732: if(device_type == 0xAA)
  8452  0189  30AA               	movlw	170
  8453  018A  066D               	xorwf	main@device_type,w
  8454  018B  1D03               	btfss	3,2
  8455  018C  299A               	goto	l4398
  8456                           
  8457                           ;Multi_RX_testjig_v2.c: 733: {
  8458                           ;Multi_RX_testjig_v2.c: 734: if(mem_size != 0x2000)
  8459  018D  3020               	movlw	32
  8460  018E  0667               	xorwf	main@mem_size+1,w
  8461  018F  0466               	iorwf	main@mem_size,w
  8462  0190  1903               	btfsc	3,2
  8463  0191  29AD               	goto	l4404
  8464                           
  8465                           ;Multi_RX_testjig_v2.c: 735: print_error("EEPROM size", " Error Condo3");
  8466  0192  3063               	movlw	low (STR_45| (0+32768))
  8467  0193  00F8               	movwf	print_error@top
  8468  0194  3092               	movlw	high (STR_45| (0+32768))
  8469  0195  00F9               	movwf	print_error@top+1
  8470  0196  3067               	movlw	low (STR_46| (0+32768))
  8471  0197  00FA               	movwf	print_error@bottom
  8472  0198  3091               	movlw	high (STR_46| (0+32768))
  8473  0199  29A9               	goto	L8
  8474  019A                     l4398:	
  8475                           
  8476                           ;Multi_RX_testjig_v2.c: 737: else if(device_type == 0xA2)
  8477  019A  30A2               	movlw	162
  8478  019B  066D               	xorwf	main@device_type,w
  8479  019C  1D03               	btfss	3,2
  8480  019D  29AD               	goto	l4404
  8481                           
  8482                           ;Multi_RX_testjig_v2.c: 738: {
  8483                           ;Multi_RX_testjig_v2.c: 739: if(mem_size != 0x0000)
  8484  019E  0866               	movf	main@mem_size,w
  8485  019F  0467               	iorwf	main@mem_size+1,w
  8486  01A0  1903               	btfsc	3,2
  8487  01A1  29AD               	goto	l4404
  8488                           
  8489                           ;Multi_RX_testjig_v2.c: 740: print_error("EEPROM size", " Error Mem_copier");
  8490  01A2  3063               	movlw	low (STR_45| (0+32768))
  8491  01A3  00F8               	movwf	print_error@top
  8492  01A4  3092               	movlw	high (STR_45| (0+32768))
  8493  01A5  00F9               	movwf	print_error@top+1
  8494  01A6  3038               	movlw	low (STR_48| (0+32768))
  8495  01A7  00FA               	movwf	print_error@bottom
  8496  01A8  3090               	movlw	high (STR_48| (0+32768))
  8497  01A9                     L8:	
  8498  01A9  00FB               	movwf	print_error@bottom+1
  8499  01AA  318A  22F5  3180   	fcall	_print_error
  8500  01AD                     l4404:	
  8501                           
  8502                           ;Multi_RX_testjig_v2.c: 741: }
  8503                           ;Multi_RX_testjig_v2.c: 742: }
  8504                           ;Multi_RX_testjig_v2.c: 744: if((device_type == 0xAA)|| (device_type == 0xA1))
  8505  01AD  30AA               	movlw	170
  8506  01AE  0020               	movlb	0	; select bank0
  8507  01AF  066D               	xorwf	main@device_type,w
  8508  01B0  1903               	btfsc	3,2
  8509  01B1  29B6               	goto	l4408
  8510  01B2  30A1               	movlw	161
  8511  01B3  066D               	xorwf	main@device_type,w
  8512  01B4  1D03               	btfss	3,2
  8513  01B5  29EB               	goto	l4448
  8514  01B6                     l4408:	
  8515                           
  8516                           ;Multi_RX_testjig_v2.c: 745: {
  8517                           ;Multi_RX_testjig_v2.c: 747: Vout_set(12);
  8518  01B6  300C               	movlw	12
  8519  01B7  00F4               	movwf	Vout_set@Volts
  8520  01B8  01F5               	clrf	Vout_set@Volts+1
  8521  01B9  3188  20BE  3180   	fcall	_Vout_set
  8522                           
  8523                           ;Multi_RX_testjig_v2.c: 748: print_screen("Test Relay", "");
  8524  01BC  30C1               	movlw	low (STR_49| (0+32768))
  8525  01BD  00F4               	movwf	print_screen@top
  8526  01BE  3092               	movlw	high (STR_49| (0+32768))
  8527  01BF  00F5               	movwf	print_screen@top+1
  8528  01C0  30AE               	movlw	low ((STR_165+15)| (0+32768))
  8529  01C1  00F6               	movwf	print_screen@bottom
  8530  01C2  3090               	movlw	high ((STR_165+15)| (0+32768))
  8531  01C3  00F7               	movwf	print_screen@bottom+1
  8532  01C4  318A  22D3  3180   	fcall	_print_screen
  8533  01C7                     l4410:	
  8534                           
  8535                           ;Multi_RX_testjig_v2.c: 751: {
  8536                           ;Multi_RX_testjig_v2.c: 752: TX_one(0x30);
  8537  01C7  3030               	movlw	48
  8538  01C8  3187  27DA  3180   	fcall	_TX_one
  8539                           
  8540                           ;Multi_RX_testjig_v2.c: 754: _delay((unsigned long)((1000)*(16000000/4000.0)));
  8541  01CB  3015               	movlw	21
  8542  01CC  0020               	movlb	0	; select bank0
  8543  01CD  00E3               	movwf	??_main+2
  8544  01CE  304B               	movlw	75
  8545  01CF  00E2               	movwf	??_main+1
  8546  01D0  30D1               	movlw	209
  8547  01D1  00E1               	movwf	??_main
  8548  01D2                     u5867:	
  8549  01D2  0BE1               	decfsz	??_main,f
  8550  01D3  29D2               	goto	u5867
  8551  01D4  0BE2               	decfsz	??_main+1,f
  8552  01D5  29D2               	goto	u5867
  8553  01D6  0BE3               	decfsz	??_main+2,f
  8554  01D7  29D2               	goto	u5867
  8555  01D8  0000               	nop
  8556                           
  8557                           ;Multi_RX_testjig_v2.c: 756: TX_one(0x31);
  8558  01D9  3031               	movlw	49
  8559  01DA  3187  27DA  3180   	fcall	_TX_one
  8560                           
  8561                           ;Multi_RX_testjig_v2.c: 758: _delay((unsigned long)((2000)*(16000000/4000.0)));
  8562  01DD  3029               	movlw	41
  8563  01DE  0020               	movlb	0	; select bank0
  8564  01DF  00E3               	movwf	??_main+2
  8565  01E0  3096               	movlw	150
  8566  01E1  00E2               	movwf	??_main+1
  8567  01E2  30A6               	movlw	166
  8568  01E3  00E1               	movwf	??_main
  8569  01E4                     u5877:	
  8570  01E4  0BE1               	decfsz	??_main,f
  8571  01E5  29E4               	goto	u5877
  8572  01E6  0BE2               	decfsz	??_main+1,f
  8573  01E7  29E4               	goto	u5877
  8574  01E8  0BE3               	decfsz	??_main+2,f
  8575  01E9  29E4               	goto	u5877
  8576  01EA  29C7               	goto	l4410
  8577  01EB                     l4448:	
  8578                           
  8579                           ;Multi_RX_testjig_v2.c: 791: }
  8580                           ;Multi_RX_testjig_v2.c: 793: if((device_type == 0xAA)|| (device_type == 0xA1))
  8581  01EB  30AA               	movlw	170
  8582  01EC  066D               	xorwf	main@device_type,w
  8583  01ED  1903               	btfsc	3,2
  8584  01EE  29F3               	goto	l4452
  8585  01EF  30A1               	movlw	161
  8586  01F0  066D               	xorwf	main@device_type,w
  8587  01F1  1D03               	btfss	3,2
  8588  01F2  2C40               	goto	l4620
  8589  01F3                     l4452:	
  8590                           
  8591                           ;Multi_RX_testjig_v2.c: 794: {
  8592                           ;Multi_RX_testjig_v2.c: 796: Vout_set(15);
  8593  01F3  300F               	movlw	15
  8594  01F4  00F4               	movwf	Vout_set@Volts
  8595  01F5  01F5               	clrf	Vout_set@Volts+1
  8596  01F6  3188  20BE  3180   	fcall	_Vout_set
  8597                           
  8598                           ;Multi_RX_testjig_v2.c: 797: print_screen("Test CH2", "");
  8599  01F9  302E               	movlw	low (STR_63| (0+32768))
  8600  01FA  00F4               	movwf	print_screen@top
  8601  01FB  3093               	movlw	high (STR_63| (0+32768))
  8602  01FC  00F5               	movwf	print_screen@top+1
  8603  01FD  30AE               	movlw	low ((STR_165+15)| (0+32768))
  8604  01FE  00F6               	movwf	print_screen@bottom
  8605  01FF  3090               	movlw	high ((STR_165+15)| (0+32768))
  8606  0200  00F7               	movwf	print_screen@bottom+1
  8607  0201  318A  22D3  3180   	fcall	_print_screen
  8608                           
  8609                           ;Multi_RX_testjig_v2.c: 798: TX_one(0x41);
  8610  0204  3041               	movlw	65
  8611  0205  3187  27DA  3180   	fcall	_TX_one
  8612                           
  8613                           ;Multi_RX_testjig_v2.c: 799: if(RX_one() == 0x4A)
  8614  0208  3187  27B3  3180   	fcall	_RX_one
  8615  020B  3A4A               	xorlw	74
  8616  020C  1D03               	skipz
  8617  020D  2B13               	goto	l4536
  8618                           
  8619                           ;Multi_RX_testjig_v2.c: 800: {
  8620                           ;Multi_RX_testjig_v2.c: 801: _delay((unsigned long)((10)*(16000000/4000.0)));
  8621  020E  3034               	movlw	52
  8622  020F  0020               	movlb	0	; select bank0
  8623  0210  00E2               	movwf	??_main+1
  8624  0211  30F1               	movlw	241
  8625  0212  00E1               	movwf	??_main
  8626  0213                     u5887:	
  8627  0213  0BE1               	decfsz	??_main,f
  8628  0214  2A13               	goto	u5887
  8629  0215  0BE2               	decfsz	??_main+1,f
  8630  0216  2A13               	goto	u5887
  8631  0217  3200               	nop2
  8632                           
  8633                           ;Multi_RX_testjig_v2.c: 802: if(RF1 == 1 && RF0 == 1)
  8634  0218  0025               	movlb	5	; select bank5
  8635  0219  188C               	btfsc	12,1	;volatile
  8636  021A  1C0C               	btfss	12,0	;volatile
  8637  021B  2B0B               	goto	l4534
  8638                           
  8639                           ;Multi_RX_testjig_v2.c: 803: {
  8640                           ;Multi_RX_testjig_v2.c: 804: TX_one(0x40);
  8641  021C  3040               	movlw	64
  8642  021D  3187  27DA  3180   	fcall	_TX_one
  8643                           
  8644                           ;Multi_RX_testjig_v2.c: 805: if(RX_one() == 0x4A)
  8645  0220  3187  27B3  3180   	fcall	_RX_one
  8646  0223  3A4A               	xorlw	74
  8647  0224  1D03               	skipz
  8648  0225  2B03               	goto	l4532
  8649                           
  8650                           ;Multi_RX_testjig_v2.c: 806: {
  8651                           ;Multi_RX_testjig_v2.c: 807: _delay((unsigned long)((10)*(16000000/4000.0)));
  8652  0226  3034               	movlw	52
  8653  0227  0020               	movlb	0	; select bank0
  8654  0228  00E2               	movwf	??_main+1
  8655  0229  30F1               	movlw	241
  8656  022A  00E1               	movwf	??_main
  8657  022B                     u5897:	
  8658  022B  0BE1               	decfsz	??_main,f
  8659  022C  2A2B               	goto	u5897
  8660  022D  0BE2               	decfsz	??_main+1,f
  8661  022E  2A2B               	goto	u5897
  8662  022F  3200               	nop2
  8663                           
  8664                           ;Multi_RX_testjig_v2.c: 808: if(RF1 == 0 && RF0 == 1)
  8665  0230  0025               	movlb	5	; select bank5
  8666  0231  1C8C               	btfss	12,1	;volatile
  8667  0232  1C0C               	btfss	12,0	;volatile
  8668  0233  2AFB               	goto	l4530
  8669                           
  8670                           ;Multi_RX_testjig_v2.c: 809: {
  8671                           ;Multi_RX_testjig_v2.c: 810: TX_one(0x41);
  8672  0234  3041               	movlw	65
  8673  0235  3187  27DA  3180   	fcall	_TX_one
  8674                           
  8675                           ;Multi_RX_testjig_v2.c: 811: if(RX_one() == 0x4A)
  8676  0238  3187  27B3  3180   	fcall	_RX_one
  8677  023B  3A4A               	xorlw	74
  8678  023C  1D03               	skipz
  8679  023D  2AF3               	goto	l4528
  8680                           
  8681                           ;Multi_RX_testjig_v2.c: 812: {
  8682                           ;Multi_RX_testjig_v2.c: 813: LATB5 = 1;
  8683  023E  0022               	movlb	2	; select bank2
  8684  023F  168D               	bsf	13,5	;volatile
  8685                           
  8686                           ;Multi_RX_testjig_v2.c: 814: _delay((unsigned long)((50)*(16000000/4000.0)));
  8687  0240  3002               	movlw	2
  8688  0241  0020               	movlb	0	; select bank0
  8689  0242  00E3               	movwf	??_main+2
  8690  0243  3004               	movlw	4
  8691  0244  00E2               	movwf	??_main+1
  8692  0245  30BA               	movlw	186
  8693  0246  00E1               	movwf	??_main
  8694  0247                     u5907:	
  8695  0247  0BE1               	decfsz	??_main,f
  8696  0248  2A47               	goto	u5907
  8697  0249  0BE2               	decfsz	??_main+1,f
  8698  024A  2A47               	goto	u5907
  8699  024B  0BE3               	decfsz	??_main+2,f
  8700  024C  2A47               	goto	u5907
  8701  024D  0000               	nop
  8702                           
  8703                           ;Multi_RX_testjig_v2.c: 815: TX_one(0x40);
  8704  024E  3040               	movlw	64
  8705  024F  3187  27DA  3180   	fcall	_TX_one
  8706                           
  8707                           ;Multi_RX_testjig_v2.c: 816: if(RX_one() == 0x4A)
  8708  0252  3187  27B3  3180   	fcall	_RX_one
  8709  0255  3A4A               	xorlw	74
  8710  0256  1D03               	skipz
  8711  0257  2AEB               	goto	l4526
  8712                           
  8713                           ;Multi_RX_testjig_v2.c: 817: {
  8714                           ;Multi_RX_testjig_v2.c: 818: _delay((unsigned long)((50)*(16000000/4000.0)));
  8715  0258  3002               	movlw	2
  8716  0259  0020               	movlb	0	; select bank0
  8717  025A  00E3               	movwf	??_main+2
  8718  025B  3004               	movlw	4
  8719  025C  00E2               	movwf	??_main+1
  8720  025D  30BA               	movlw	186
  8721  025E  00E1               	movwf	??_main
  8722  025F                     u5917:	
  8723  025F  0BE1               	decfsz	??_main,f
  8724  0260  2A5F               	goto	u5917
  8725  0261  0BE2               	decfsz	??_main+1,f
  8726  0262  2A5F               	goto	u5917
  8727  0263  0BE3               	decfsz	??_main+2,f
  8728  0264  2A5F               	goto	u5917
  8729  0265  0000               	nop
  8730                           
  8731                           ;Multi_RX_testjig_v2.c: 819: tj_timer = 1500;
  8732  0266  30DC               	movlw	220
  8733  0267  0021               	movlb	1	; select bank1
  8734  0268  00B0               	movwf	_tj_timer^(0+128)
  8735  0269  3005               	movlw	5
  8736  026A  00B1               	movwf	(_tj_timer^(0+128)+1)
  8737  026B  2A6F               	goto	l4484
  8738  026C                     l4486:	
  8739  026C  0025               	movlb	5	; select bank5
  8740  026D  188C               	btfsc	12,1	;volatile
  8741  026E  2A74               	goto	l382
  8742  026F                     l4484:	
  8743                           ;Multi_RX_testjig_v2.c: 820: while(tj_timer && RF1 == 0);
  8744                           
  8745  026F  0021               	movlb	1	; select bank1
  8746  0270  0830               	movf	_tj_timer^(0+128),w
  8747  0271  0431               	iorwf	(_tj_timer+1)^(0+128),w
  8748  0272  1D03               	btfss	3,2
  8749  0273  2A6C               	goto	l4486
  8750  0274                     l382:	
  8751                           
  8752                           ;Multi_RX_testjig_v2.c: 821: if(RF1 == 1 && RF0 == 1)
  8753  0274  0025               	movlb	5	; select bank5
  8754  0275  188C               	btfsc	12,1	;volatile
  8755  0276  1C0C               	btfss	12,0	;volatile
  8756  0277  2AE0               	goto	l4522
  8757                           
  8758                           ;Multi_RX_testjig_v2.c: 822: {
  8759                           ;Multi_RX_testjig_v2.c: 823: LATB5 = 0;
  8760  0278  0022               	movlb	2	; select bank2
  8761  0279  128D               	bcf	13,5	;volatile
  8762                           
  8763                           ;Multi_RX_testjig_v2.c: 824: TX_one(0x41);
  8764  027A  3041               	movlw	65
  8765  027B  3187  27DA  3180   	fcall	_TX_one
  8766                           
  8767                           ;Multi_RX_testjig_v2.c: 825: RX_one();
  8768  027E  3187  27B3  3180   	fcall	_RX_one
  8769                           
  8770                           ;Multi_RX_testjig_v2.c: 826: _delay((unsigned long)((150)*(16000000/4000.0)));
  8771  0281  3004               	movlw	4
  8772  0282  0020               	movlb	0	; select bank0
  8773  0283  00E3               	movwf	??_main+2
  8774  0284  300C               	movlw	12
  8775  0285  00E2               	movwf	??_main+1
  8776  0286  3035               	movlw	53
  8777  0287  00E1               	movwf	??_main
  8778  0288                     u5927:	
  8779  0288  0BE1               	decfsz	??_main,f
  8780  0289  2A88               	goto	u5927
  8781  028A  0BE2               	decfsz	??_main+1,f
  8782  028B  2A88               	goto	u5927
  8783  028C  0BE3               	decfsz	??_main+2,f
  8784  028D  2A88               	goto	u5927
  8785  028E  3200               	nop2
  8786                           
  8787                           ;Multi_RX_testjig_v2.c: 827: TX_one(0x40);
  8788  028F  3040               	movlw	64
  8789  0290  3187  27DA  3180   	fcall	_TX_one
  8790                           
  8791                           ;Multi_RX_testjig_v2.c: 828: RX_one();
  8792  0293  3187  27B3  3180   	fcall	_RX_one
  8793                           
  8794                           ;Multi_RX_testjig_v2.c: 829: _delay((unsigned long)((20)*(16000000/4000.0)));
  8795  0296  3068               	movlw	104
  8796  0297  0020               	movlb	0	; select bank0
  8797  0298  00E2               	movwf	??_main+1
  8798  0299  30E4               	movlw	228
  8799  029A  00E1               	movwf	??_main
  8800  029B                     u5937:	
  8801  029B  0BE1               	decfsz	??_main,f
  8802  029C  2A9B               	goto	u5937
  8803  029D  0BE2               	decfsz	??_main+1,f
  8804  029E  2A9B               	goto	u5937
  8805  029F  0000               	nop
  8806                           
  8807                           ;Multi_RX_testjig_v2.c: 830: if(RF1 == 0 && RF0 == 1)
  8808  02A0  0025               	movlb	5	; select bank5
  8809  02A1  1C8C               	btfss	12,1	;volatile
  8810  02A2  1C0C               	btfss	12,0	;volatile
  8811  02A3  2AD8               	goto	l4520
  8812                           
  8813                           ;Multi_RX_testjig_v2.c: 831: {
  8814                           ;Multi_RX_testjig_v2.c: 832: TX_one(0x41);
  8815  02A4  3041               	movlw	65
  8816  02A5  3187  27DA  3180   	fcall	_TX_one
  8817                           
  8818                           ;Multi_RX_testjig_v2.c: 833: if(RX_one() == 0x4A)
  8819  02A8  3187  27B3  3180   	fcall	_RX_one
  8820  02AB  3A4A               	xorlw	74
  8821  02AC  1D03               	skipz
  8822  02AD  2AD0               	goto	l4518
  8823                           
  8824                           ;Multi_RX_testjig_v2.c: 834: {
  8825                           ;Multi_RX_testjig_v2.c: 835: _delay((unsigned long)((10)*(16000000/4000.0)));
  8826  02AE  3034               	movlw	52
  8827  02AF  0020               	movlb	0	; select bank0
  8828  02B0  00E2               	movwf	??_main+1
  8829  02B1  30F1               	movlw	241
  8830  02B2  00E1               	movwf	??_main
  8831  02B3                     u5947:	
  8832  02B3  0BE1               	decfsz	??_main,f
  8833  02B4  2AB3               	goto	u5947
  8834  02B5  0BE2               	decfsz	??_main+1,f
  8835  02B6  2AB3               	goto	u5947
  8836  02B7  3200               	nop2
  8837                           
  8838                           ;Multi_RX_testjig_v2.c: 836: if(RF1 == 1 && RF0 == 1)
  8839  02B8  0025               	movlb	5	; select bank5
  8840  02B9  188C               	btfsc	12,1	;volatile
  8841  02BA  1C0C               	btfss	12,0	;volatile
  8842  02BB  2AC8               	goto	l4516
  8843                           
  8844                           ;Multi_RX_testjig_v2.c: 837: {
  8845                           ;Multi_RX_testjig_v2.c: 838: print_screen("Test CH2", "ok");
  8846  02BC  302E               	movlw	low (STR_63| (0+32768))
  8847  02BD  00F4               	movwf	print_screen@top
  8848  02BE  3093               	movlw	high (STR_63| (0+32768))
  8849  02BF  00F5               	movwf	print_screen@top+1
  8850  02C0  30E7               	movlw	low (STR_66| (0+32768))
  8851  02C1  00F6               	movwf	print_screen@bottom
  8852  02C2  3093               	movlw	high (STR_66| (0+32768))
  8853  02C3  00F7               	movwf	print_screen@bottom+1
  8854  02C4  318A  22D3  3180   	fcall	_print_screen
  8855                           
  8856                           ;Multi_RX_testjig_v2.c: 839: }
  8857  02C7  2B1E               	goto	l396
  8858  02C8                     l4516:	
  8859                           
  8860                           ;Multi_RX_testjig_v2.c: 840: else
  8861                           ;Multi_RX_testjig_v2.c: 841: print_error("CH2 - OFF", " Error 2");
  8862  02C8  30EB               	movlw	low (STR_67| (0+32768))
  8863  02C9  00F8               	movwf	print_error@top
  8864  02CA  3092               	movlw	high (STR_67| (0+32768))
  8865  02CB  00F9               	movwf	print_error@top+1
  8866  02CC  3025               	movlw	low (STR_54| (0+32768))
  8867  02CD  00FA               	movwf	print_error@bottom
  8868  02CE  3093               	movlw	high (STR_54| (0+32768))
  8869  02CF  2B1A               	goto	L3
  8870  02D0                     l4518:	
  8871                           
  8872                           ;Multi_RX_testjig_v2.c: 843: else
  8873                           ;Multi_RX_testjig_v2.c: 844: print_error("Comms Error", " 5");
  8874  02D0  3087               	movlw	low (STR_35| (0+32768))
  8875  02D1  00F8               	movwf	print_error@top
  8876  02D2  3092               	movlw	high (STR_35| (0+32768))
  8877  02D3  00F9               	movwf	print_error@top+1
  8878  02D4  30D8               	movlw	low (STR_70| (0+32768))
  8879  02D5  00FA               	movwf	print_error@bottom
  8880  02D6  3093               	movlw	high (STR_70| (0+32768))
  8881  02D7  2B1A               	goto	L3
  8882  02D8                     l4520:	
  8883                           
  8884                           ;Multi_RX_testjig_v2.c: 846: else
  8885                           ;Multi_RX_testjig_v2.c: 847: print_error("CH2 - ON", "PTC Error reset");
  8886  02D8  3049               	movlw	low (STR_71| (0+32768))
  8887  02D9  00F8               	movwf	print_error@top
  8888  02DA  3093               	movlw	high (STR_71| (0+32768))
  8889  02DB  00F9               	movwf	print_error@top+1
  8890  02DC  30EF               	movlw	low (STR_72| (0+32768))
  8891  02DD  00FA               	movwf	print_error@bottom
  8892  02DE  3090               	movlw	high (STR_72| (0+32768))
  8893  02DF  2B1A               	goto	L3
  8894  02E0                     l4522:	
  8895                           
  8896                           ;Multi_RX_testjig_v2.c: 849: else
  8897                           ;Multi_RX_testjig_v2.c: 850: {
  8898                           ;Multi_RX_testjig_v2.c: 851: trip_current = get_30v_current();
  8899  02E0  318C  2413  3180   	fcall	_get_30v_current
  8900                           
  8901                           ;Multi_RX_testjig_v2.c: 852: print_error("CH2 - ON", "PTC Error trip");
  8902  02E3  3049               	movlw	low (STR_71| (0+32768))
  8903  02E4  00F8               	movwf	print_error@top
  8904  02E5  3093               	movlw	high (STR_71| (0+32768))
  8905  02E6  00F9               	movwf	print_error@top+1
  8906  02E7  302C               	movlw	low (STR_74| (0+32768))
  8907  02E8  00FA               	movwf	print_error@bottom
  8908  02E9  3091               	movlw	high (STR_74| (0+32768))
  8909  02EA  2B1A               	goto	L3
  8910  02EB                     l4526:	
  8911                           
  8912                           ;Multi_RX_testjig_v2.c: 855: else
  8913                           ;Multi_RX_testjig_v2.c: 856: print_error("Comms Error", " 6a");
  8914  02EB  3087               	movlw	low (STR_35| (0+32768))
  8915  02EC  00F8               	movwf	print_error@top
  8916  02ED  3092               	movlw	high (STR_35| (0+32768))
  8917  02EE  00F9               	movwf	print_error@top+1
  8918  02EF  30C2               	movlw	low (STR_76| (0+32768))
  8919  02F0  00FA               	movwf	print_error@bottom
  8920  02F1  3093               	movlw	high (STR_76| (0+32768))
  8921  02F2  2B1A               	goto	L3
  8922  02F3                     l4528:	
  8923                           
  8924                           ;Multi_RX_testjig_v2.c: 858: else
  8925                           ;Multi_RX_testjig_v2.c: 859: print_error("Comms Error", " 6b");
  8926  02F3  3087               	movlw	low (STR_35| (0+32768))
  8927  02F4  00F8               	movwf	print_error@top
  8928  02F5  3092               	movlw	high (STR_35| (0+32768))
  8929  02F6  00F9               	movwf	print_error@top+1
  8930  02F7  30CA               	movlw	low (STR_78| (0+32768))
  8931  02F8  00FA               	movwf	print_error@bottom
  8932  02F9  3093               	movlw	high (STR_78| (0+32768))
  8933  02FA  2B1A               	goto	L3
  8934  02FB                     l4530:	
  8935                           
  8936                           ;Multi_RX_testjig_v2.c: 861: else
  8937                           ;Multi_RX_testjig_v2.c: 862: print_error("CH2 - ON", " Error");
  8938  02FB  3049               	movlw	low (STR_71| (0+32768))
  8939  02FC  00F8               	movwf	print_error@top
  8940  02FD  3093               	movlw	high (STR_71| (0+32768))
  8941  02FE  00F9               	movwf	print_error@top+1
  8942  02FF  30AF               	movlw	low ((STR_12+4)| (0+32768))
  8943  0300  00FA               	movwf	print_error@bottom
  8944  0301  3092               	movlw	high ((STR_12+4)| (0+32768))
  8945  0302  2B1A               	goto	L3
  8946  0303                     l4532:	
  8947                           
  8948                           ;Multi_RX_testjig_v2.c: 864: else
  8949                           ;Multi_RX_testjig_v2.c: 865: print_error("Comms Error", " 6");
  8950  0303  3087               	movlw	low (STR_35| (0+32768))
  8951  0304  00F8               	movwf	print_error@top
  8952  0305  3092               	movlw	high (STR_35| (0+32768))
  8953  0306  00F9               	movwf	print_error@top+1
  8954  0307  30DB               	movlw	low (STR_82| (0+32768))
  8955  0308  00FA               	movwf	print_error@bottom
  8956  0309  3093               	movlw	high (STR_82| (0+32768))
  8957  030A  2B1A               	goto	L3
  8958  030B                     l4534:	
  8959                           
  8960                           ;Multi_RX_testjig_v2.c: 867: else
  8961                           ;Multi_RX_testjig_v2.c: 868: print_error("CH2 - OFF", " Error 1");
  8962  030B  30EB               	movlw	low (STR_67| (0+32768))
  8963  030C  00F8               	movwf	print_error@top
  8964  030D  3092               	movlw	high (STR_67| (0+32768))
  8965  030E  00F9               	movwf	print_error@top+1
  8966  030F  301C               	movlw	low (STR_62| (0+32768))
  8967  0310  00FA               	movwf	print_error@bottom
  8968  0311  3093               	movlw	high (STR_62| (0+32768))
  8969  0312  2B1A               	goto	L3
  8970  0313                     l4536:	
  8971                           
  8972                           ;Multi_RX_testjig_v2.c: 870: else
  8973                           ;Multi_RX_testjig_v2.c: 871: print_error("Comms Error", " 7");
  8974  0313  3087               	movlw	low (STR_35| (0+32768))
  8975  0314  00F8               	movwf	print_error@top
  8976  0315  3092               	movlw	high (STR_35| (0+32768))
  8977  0316  00F9               	movwf	print_error@top+1
  8978  0317  30DE               	movlw	low (STR_86| (0+32768))
  8979  0318  00FA               	movwf	print_error@bottom
  8980  0319  3093               	movlw	high (STR_86| (0+32768))
  8981  031A                     L3:	
  8982  031A  00FB               	movwf	print_error@bottom+1
  8983  031B  318A  22F5  3180   	fcall	_print_error
  8984  031E                     l396:	
  8985                           
  8986                           ;Multi_RX_testjig_v2.c: 875: print_screen("Test CH3", "");
  8987  031E  3037               	movlw	low (STR_87| (0+32768))
  8988  031F  00F4               	movwf	print_screen@top
  8989  0320  3093               	movlw	high (STR_87| (0+32768))
  8990  0321  00F5               	movwf	print_screen@top+1
  8991  0322  30AE               	movlw	low ((STR_165+15)| (0+32768))
  8992  0323  00F6               	movwf	print_screen@bottom
  8993  0324  3090               	movlw	high ((STR_165+15)| (0+32768))
  8994  0325  00F7               	movwf	print_screen@bottom+1
  8995  0326  318A  22D3  3180   	fcall	_print_screen
  8996                           
  8997                           ;Multi_RX_testjig_v2.c: 876: TX_one(0x51);
  8998  0329  3051               	movlw	81
  8999  032A  3187  27DA  3180   	fcall	_TX_one
  9000                           
  9001                           ;Multi_RX_testjig_v2.c: 877: if(RX_one() == 0x5A)
  9002  032D  3187  27B3  3180   	fcall	_RX_one
  9003  0330  3A5A               	xorlw	90
  9004  0331  1D03               	skipz
  9005  0332  2C35               	goto	l4618
  9006                           
  9007                           ;Multi_RX_testjig_v2.c: 878: {
  9008                           ;Multi_RX_testjig_v2.c: 879: _delay((unsigned long)((10)*(16000000/4000.0)));
  9009  0333  3034               	movlw	52
  9010  0334  0020               	movlb	0	; select bank0
  9011  0335  00E2               	movwf	??_main+1
  9012  0336  30F1               	movlw	241
  9013  0337  00E1               	movwf	??_main
  9014  0338                     u5957:	
  9015  0338  0BE1               	decfsz	??_main,f
  9016  0339  2B38               	goto	u5957
  9017  033A  0BE2               	decfsz	??_main+1,f
  9018  033B  2B38               	goto	u5957
  9019  033C  3200               	nop2
  9020                           
  9021                           ;Multi_RX_testjig_v2.c: 880: if(RF1 == 1 && RF0 == 1)
  9022  033D  0025               	movlb	5	; select bank5
  9023  033E  188C               	btfsc	12,1	;volatile
  9024  033F  1C0C               	btfss	12,0	;volatile
  9025  0340  2C2D               	goto	l4616
  9026                           
  9027                           ;Multi_RX_testjig_v2.c: 881: {
  9028                           ;Multi_RX_testjig_v2.c: 882: TX_one(0x50);
  9029  0341  3050               	movlw	80
  9030  0342  3187  27DA  3180   	fcall	_TX_one
  9031                           
  9032                           ;Multi_RX_testjig_v2.c: 883: if(RX_one() == 0x5A)
  9033  0345  3187  27B3  3180   	fcall	_RX_one
  9034  0348  3A5A               	xorlw	90
  9035  0349  1D03               	skipz
  9036  034A  2C25               	goto	l4614
  9037                           
  9038                           ;Multi_RX_testjig_v2.c: 884: {
  9039                           ;Multi_RX_testjig_v2.c: 885: _delay((unsigned long)((10)*(16000000/4000.0)));
  9040  034B  3034               	movlw	52
  9041  034C  0020               	movlb	0	; select bank0
  9042  034D  00E2               	movwf	??_main+1
  9043  034E  30F1               	movlw	241
  9044  034F  00E1               	movwf	??_main
  9045  0350                     u5967:	
  9046  0350  0BE1               	decfsz	??_main,f
  9047  0351  2B50               	goto	u5967
  9048  0352  0BE2               	decfsz	??_main+1,f
  9049  0353  2B50               	goto	u5967
  9050  0354  3200               	nop2
  9051                           
  9052                           ;Multi_RX_testjig_v2.c: 886: if(RF1 == 1 && RF0 == 0)
  9053  0355  0025               	movlb	5	; select bank5
  9054  0356  188C               	btfsc	12,1	;volatile
  9055  0357  180C               	btfsc	12,0	;volatile
  9056  0358  2C1D               	goto	l4612
  9057                           
  9058                           ;Multi_RX_testjig_v2.c: 887: {
  9059                           ;Multi_RX_testjig_v2.c: 888: TX_one(0x51);
  9060  0359  3051               	movlw	81
  9061  035A  3187  27DA  3180   	fcall	_TX_one
  9062                           
  9063                           ;Multi_RX_testjig_v2.c: 889: if(RX_one() == 0x5A)
  9064  035D  3187  27B3  3180   	fcall	_RX_one
  9065  0360  3A5A               	xorlw	90
  9066  0361  1D03               	skipz
  9067  0362  2C15               	goto	l4610
  9068                           
  9069                           ;Multi_RX_testjig_v2.c: 890: {
  9070                           ;Multi_RX_testjig_v2.c: 891: LATA6 = 1;
  9071  0363  0022               	movlb	2	; select bank2
  9072  0364  170C               	bsf	12,6	;volatile
  9073                           
  9074                           ;Multi_RX_testjig_v2.c: 892: _delay((unsigned long)((50)*(16000000/4000.0)));
  9075  0365  3002               	movlw	2
  9076  0366  0020               	movlb	0	; select bank0
  9077  0367  00E3               	movwf	??_main+2
  9078  0368  3004               	movlw	4
  9079  0369  00E2               	movwf	??_main+1
  9080  036A  30BA               	movlw	186
  9081  036B  00E1               	movwf	??_main
  9082  036C                     u5977:	
  9083  036C  0BE1               	decfsz	??_main,f
  9084  036D  2B6C               	goto	u5977
  9085  036E  0BE2               	decfsz	??_main+1,f
  9086  036F  2B6C               	goto	u5977
  9087  0370  0BE3               	decfsz	??_main+2,f
  9088  0371  2B6C               	goto	u5977
  9089  0372  0000               	nop
  9090                           
  9091                           ;Multi_RX_testjig_v2.c: 893: TX_one(0x50);
  9092  0373  3050               	movlw	80
  9093  0374  3187  27DA  3180   	fcall	_TX_one
  9094                           
  9095                           ;Multi_RX_testjig_v2.c: 894: if(RX_one() == 0x5A)
  9096  0377  3187  27B3  3180   	fcall	_RX_one
  9097  037A  3A5A               	xorlw	90
  9098  037B  1D03               	skipz
  9099  037C  2C0D               	goto	l4608
  9100                           
  9101                           ;Multi_RX_testjig_v2.c: 895: {
  9102                           ;Multi_RX_testjig_v2.c: 896: _delay((unsigned long)((50)*(16000000/4000.0)));
  9103  037D  3002               	movlw	2
  9104  037E  0020               	movlb	0	; select bank0
  9105  037F  00E3               	movwf	??_main+2
  9106  0380  3004               	movlw	4
  9107  0381  00E2               	movwf	??_main+1
  9108  0382  30BA               	movlw	186
  9109  0383  00E1               	movwf	??_main
  9110  0384                     u5987:	
  9111  0384  0BE1               	decfsz	??_main,f
  9112  0385  2B84               	goto	u5987
  9113  0386  0BE2               	decfsz	??_main+1,f
  9114  0387  2B84               	goto	u5987
  9115  0388  0BE3               	decfsz	??_main+2,f
  9116  0389  2B84               	goto	u5987
  9117  038A  0000               	nop
  9118                           
  9119                           ;Multi_RX_testjig_v2.c: 897: tj_timer = 1500;
  9120  038B  30DC               	movlw	220
  9121  038C  0021               	movlb	1	; select bank1
  9122  038D  00B0               	movwf	_tj_timer^(0+128)
  9123  038E  3005               	movlw	5
  9124  038F  00B1               	movwf	(_tj_timer^(0+128)+1)
  9125  0390  2B94               	goto	l4568
  9126  0391                     l4570:	
  9127  0391  0025               	movlb	5	; select bank5
  9128  0392  180C               	btfsc	12,0	;volatile
  9129  0393  2B99               	goto	l407
  9130  0394                     l4568:	
  9131                           ;Multi_RX_testjig_v2.c: 898: while(tj_timer && RF0 == 0);
  9132                           
  9133  0394  0021               	movlb	1	; select bank1
  9134  0395  0830               	movf	_tj_timer^(0+128),w
  9135  0396  0431               	iorwf	(_tj_timer+1)^(0+128),w
  9136  0397  1D03               	btfss	3,2
  9137  0398  2B91               	goto	l4570
  9138  0399                     l407:	
  9139                           
  9140                           ;Multi_RX_testjig_v2.c: 899: if(RF1 == 1 && RF0 == 1)
  9141  0399  0025               	movlb	5	; select bank5
  9142  039A  188C               	btfsc	12,1	;volatile
  9143  039B  1C0C               	btfss	12,0	;volatile
  9144  039C  2C05               	goto	l4606
  9145                           
  9146                           ;Multi_RX_testjig_v2.c: 900: {
  9147                           ;Multi_RX_testjig_v2.c: 901: LATA6 = 0;
  9148  039D  0022               	movlb	2	; select bank2
  9149  039E  130C               	bcf	12,6	;volatile
  9150                           
  9151                           ;Multi_RX_testjig_v2.c: 902: TX_one(0x51);
  9152  039F  3051               	movlw	81
  9153  03A0  3187  27DA  3180   	fcall	_TX_one
  9154                           
  9155                           ;Multi_RX_testjig_v2.c: 903: RX_one();
  9156  03A3  3187  27B3  3180   	fcall	_RX_one
  9157                           
  9158                           ;Multi_RX_testjig_v2.c: 904: _delay((unsigned long)((150)*(16000000/4000.0)));
  9159  03A6  3004               	movlw	4
  9160  03A7  0020               	movlb	0	; select bank0
  9161  03A8  00E3               	movwf	??_main+2
  9162  03A9  300C               	movlw	12
  9163  03AA  00E2               	movwf	??_main+1
  9164  03AB  3035               	movlw	53
  9165  03AC  00E1               	movwf	??_main
  9166  03AD                     u5997:	
  9167  03AD  0BE1               	decfsz	??_main,f
  9168  03AE  2BAD               	goto	u5997
  9169  03AF  0BE2               	decfsz	??_main+1,f
  9170  03B0  2BAD               	goto	u5997
  9171  03B1  0BE3               	decfsz	??_main+2,f
  9172  03B2  2BAD               	goto	u5997
  9173  03B3  3200               	nop2
  9174                           
  9175                           ;Multi_RX_testjig_v2.c: 905: TX_one(0x50);
  9176  03B4  3050               	movlw	80
  9177  03B5  3187  27DA  3180   	fcall	_TX_one
  9178                           
  9179                           ;Multi_RX_testjig_v2.c: 906: RX_one();
  9180  03B8  3187  27B3  3180   	fcall	_RX_one
  9181                           
  9182                           ;Multi_RX_testjig_v2.c: 907: _delay((unsigned long)((20)*(16000000/4000.0)));
  9183  03BB  3068               	movlw	104
  9184  03BC  0020               	movlb	0	; select bank0
  9185  03BD  00E2               	movwf	??_main+1
  9186  03BE  30E4               	movlw	228
  9187  03BF  00E1               	movwf	??_main
  9188  03C0                     u6007:	
  9189  03C0  0BE1               	decfsz	??_main,f
  9190  03C1  2BC0               	goto	u6007
  9191  03C2  0BE2               	decfsz	??_main+1,f
  9192  03C3  2BC0               	goto	u6007
  9193  03C4  0000               	nop
  9194                           
  9195                           ;Multi_RX_testjig_v2.c: 908: if(RF1 == 1 && RF0 == 0)
  9196  03C5  0025               	movlb	5	; select bank5
  9197  03C6  188C               	btfsc	12,1	;volatile
  9198  03C7  180C               	btfsc	12,0	;volatile
  9199  03C8  2BFD               	goto	l4604
  9200                           
  9201                           ;Multi_RX_testjig_v2.c: 909: {
  9202                           ;Multi_RX_testjig_v2.c: 910: TX_one(0x51);
  9203  03C9  3051               	movlw	81
  9204  03CA  3187  27DA  3180   	fcall	_TX_one
  9205                           
  9206                           ;Multi_RX_testjig_v2.c: 911: if(RX_one() == 0x5A)
  9207  03CD  3187  27B3  3180   	fcall	_RX_one
  9208  03D0  3A5A               	xorlw	90
  9209  03D1  1D03               	skipz
  9210  03D2  2BF5               	goto	l4602
  9211                           
  9212                           ;Multi_RX_testjig_v2.c: 912: {
  9213                           ;Multi_RX_testjig_v2.c: 913: _delay((unsigned long)((10)*(16000000/4000.0)));
  9214  03D3  3034               	movlw	52
  9215  03D4  0020               	movlb	0	; select bank0
  9216  03D5  00E2               	movwf	??_main+1
  9217  03D6  30F1               	movlw	241
  9218  03D7  00E1               	movwf	??_main
  9219  03D8                     u6017:	
  9220  03D8  0BE1               	decfsz	??_main,f
  9221  03D9  2BD8               	goto	u6017
  9222  03DA  0BE2               	decfsz	??_main+1,f
  9223  03DB  2BD8               	goto	u6017
  9224  03DC  3200               	nop2
  9225                           
  9226                           ;Multi_RX_testjig_v2.c: 914: if(RF1 == 1 && RF0 == 1)
  9227  03DD  0025               	movlb	5	; select bank5
  9228  03DE  188C               	btfsc	12,1	;volatile
  9229  03DF  1C0C               	btfss	12,0	;volatile
  9230  03E0  2BED               	goto	l4600
  9231                           
  9232                           ;Multi_RX_testjig_v2.c: 915: {
  9233                           ;Multi_RX_testjig_v2.c: 916: print_screen("Test CH3", "ok");
  9234  03E1  3037               	movlw	low (STR_87| (0+32768))
  9235  03E2  00F4               	movwf	print_screen@top
  9236  03E3  3093               	movlw	high (STR_87| (0+32768))
  9237  03E4  00F5               	movwf	print_screen@top+1
  9238  03E5  30E7               	movlw	low (STR_66| (0+32768))
  9239  03E6  00F6               	movwf	print_screen@bottom
  9240  03E7  3093               	movlw	high (STR_66| (0+32768))
  9241  03E8  00F7               	movwf	print_screen@bottom+1
  9242  03E9  318A  22D3  3180   	fcall	_print_screen
  9243                           
  9244                           ;Multi_RX_testjig_v2.c: 917: }
  9245  03EC  2C40               	goto	l4620
  9246  03ED                     l4600:	
  9247                           
  9248                           ;Multi_RX_testjig_v2.c: 918: else
  9249                           ;Multi_RX_testjig_v2.c: 919: print_error("CH3 - OFF", " Error 2");
  9250  03ED  30F5               	movlw	low (STR_91| (0+32768))
  9251  03EE  00F8               	movwf	print_error@top
  9252  03EF  3092               	movlw	high (STR_91| (0+32768))
  9253  03F0  00F9               	movwf	print_error@top+1
  9254  03F1  3025               	movlw	low (STR_54| (0+32768))
  9255  03F2  00FA               	movwf	print_error@bottom
  9256  03F3  3093               	movlw	high (STR_54| (0+32768))
  9257  03F4  2C3C               	goto	L4
  9258  03F5                     l4602:	
  9259                           
  9260                           ;Multi_RX_testjig_v2.c: 921: else
  9261                           ;Multi_RX_testjig_v2.c: 922: print_error("Comms Error", " 8");
  9262  03F5  3087               	movlw	low (STR_35| (0+32768))
  9263  03F6  00F8               	movwf	print_error@top
  9264  03F7  3092               	movlw	high (STR_35| (0+32768))
  9265  03F8  00F9               	movwf	print_error@top+1
  9266  03F9  30E1               	movlw	low (STR_94| (0+32768))
  9267  03FA  00FA               	movwf	print_error@bottom
  9268  03FB  3093               	movlw	high (STR_94| (0+32768))
  9269  03FC  2C3C               	goto	L4
  9270  03FD                     l4604:	
  9271                           
  9272                           ;Multi_RX_testjig_v2.c: 924: else
  9273                           ;Multi_RX_testjig_v2.c: 925: print_error("CH3 - ON", "PTC Error reset");
  9274  03FD  3052               	movlw	low (STR_95| (0+32768))
  9275  03FE  00F8               	movwf	print_error@top
  9276  03FF  3093               	movlw	high (STR_95| (0+32768))
  9277  0400  00F9               	movwf	print_error@top+1
  9278  0401  30EF               	movlw	low (STR_72| (0+32768))
  9279  0402  00FA               	movwf	print_error@bottom
  9280  0403  3090               	movlw	high (STR_72| (0+32768))
  9281  0404  2C3C               	goto	L4
  9282  0405                     l4606:	
  9283                           
  9284                           ;Multi_RX_testjig_v2.c: 927: else
  9285                           ;Multi_RX_testjig_v2.c: 928: print_error("CH3 - ON", "PTC Error trip");
  9286  0405  3052               	movlw	low (STR_95| (0+32768))
  9287  0406  00F8               	movwf	print_error@top
  9288  0407  3093               	movlw	high (STR_95| (0+32768))
  9289  0408  00F9               	movwf	print_error@top+1
  9290  0409  302C               	movlw	low (STR_74| (0+32768))
  9291  040A  00FA               	movwf	print_error@bottom
  9292  040B  3091               	movlw	high (STR_74| (0+32768))
  9293  040C  2C3C               	goto	L4
  9294  040D                     l4608:	
  9295                           
  9296                           ;Multi_RX_testjig_v2.c: 930: else
  9297                           ;Multi_RX_testjig_v2.c: 931: print_error("Comms Error", " 8b");
  9298  040D  3087               	movlw	low (STR_35| (0+32768))
  9299  040E  00F8               	movwf	print_error@top
  9300  040F  3092               	movlw	high (STR_35| (0+32768))
  9301  0410  00F9               	movwf	print_error@top+1
  9302  0411  30CE               	movlw	low (STR_100| (0+32768))
  9303  0412  00FA               	movwf	print_error@bottom
  9304  0413  3093               	movlw	high (STR_100| (0+32768))
  9305  0414  2C3C               	goto	L4
  9306  0415                     l4610:	
  9307                           
  9308                           ;Multi_RX_testjig_v2.c: 933: else
  9309                           ;Multi_RX_testjig_v2.c: 934: print_error("Comms Error", " 8a");
  9310  0415  3087               	movlw	low (STR_35| (0+32768))
  9311  0416  00F8               	movwf	print_error@top
  9312  0417  3092               	movlw	high (STR_35| (0+32768))
  9313  0418  00F9               	movwf	print_error@top+1
  9314  0419  30C6               	movlw	low (STR_102| (0+32768))
  9315  041A  00FA               	movwf	print_error@bottom
  9316  041B  3093               	movlw	high (STR_102| (0+32768))
  9317  041C  2C3C               	goto	L4
  9318  041D                     l4612:	
  9319                           
  9320                           ;Multi_RX_testjig_v2.c: 936: else
  9321                           ;Multi_RX_testjig_v2.c: 937: print_error("CH3 - ON", " Error");
  9322  041D  3052               	movlw	low (STR_95| (0+32768))
  9323  041E  00F8               	movwf	print_error@top
  9324  041F  3093               	movlw	high (STR_95| (0+32768))
  9325  0420  00F9               	movwf	print_error@top+1
  9326  0421  30AF               	movlw	low ((STR_12+4)| (0+32768))
  9327  0422  00FA               	movwf	print_error@bottom
  9328  0423  3092               	movlw	high ((STR_12+4)| (0+32768))
  9329  0424  2C3C               	goto	L4
  9330  0425                     l4614:	
  9331                           
  9332                           ;Multi_RX_testjig_v2.c: 939: else
  9333                           ;Multi_RX_testjig_v2.c: 940: print_error("Comms Error", " 9");
  9334  0425  3087               	movlw	low (STR_35| (0+32768))
  9335  0426  00F8               	movwf	print_error@top
  9336  0427  3092               	movlw	high (STR_35| (0+32768))
  9337  0428  00F9               	movwf	print_error@top+1
  9338  0429  30E4               	movlw	low (STR_106| (0+32768))
  9339  042A  00FA               	movwf	print_error@bottom
  9340  042B  3093               	movlw	high (STR_106| (0+32768))
  9341  042C  2C3C               	goto	L4
  9342  042D                     l4616:	
  9343                           
  9344                           ;Multi_RX_testjig_v2.c: 942: else
  9345                           ;Multi_RX_testjig_v2.c: 943: print_error("CH3 - OFF", " Error 1");
  9346  042D  30F5               	movlw	low (STR_91| (0+32768))
  9347  042E  00F8               	movwf	print_error@top
  9348  042F  3092               	movlw	high (STR_91| (0+32768))
  9349  0430  00F9               	movwf	print_error@top+1
  9350  0431  301C               	movlw	low (STR_62| (0+32768))
  9351  0432  00FA               	movwf	print_error@bottom
  9352  0433  3093               	movlw	high (STR_62| (0+32768))
  9353  0434  2C3C               	goto	L4
  9354  0435                     l4618:	
  9355                           
  9356                           ;Multi_RX_testjig_v2.c: 945: else
  9357                           ;Multi_RX_testjig_v2.c: 946: print_error("Comms Error", " 10");
  9358  0435  3087               	movlw	low (STR_35| (0+32768))
  9359  0436  00F8               	movwf	print_error@top
  9360  0437  3092               	movlw	high (STR_35| (0+32768))
  9361  0438  00F9               	movwf	print_error@top+1
  9362  0439  30A2               	movlw	low (STR_110| (0+32768))
  9363  043A  00FA               	movwf	print_error@bottom
  9364  043B  3093               	movlw	high (STR_110| (0+32768))
  9365  043C                     L4:	
  9366  043C  00FB               	movwf	print_error@bottom+1
  9367  043D  318A  22F5  3180   	fcall	_print_error
  9368  0440                     l4620:	
  9369                           
  9370                           ;Multi_RX_testjig_v2.c: 947: }
  9371                           ;Multi_RX_testjig_v2.c: 949: if((device_type == 0xAA)|| (device_type == 0xA1))
  9372  0440  30AA               	movlw	170
  9373  0441  0020               	movlb	0	; select bank0
  9374  0442  066D               	xorwf	main@device_type,w
  9375  0443  1903               	btfsc	3,2
  9376  0444  2C49               	goto	l4624
  9377  0445  30A1               	movlw	161
  9378  0446  066D               	xorwf	main@device_type,w
  9379  0447  1D03               	btfss	3,2
  9380  0448  2E68               	goto	l4788
  9381  0449                     l4624:	
  9382                           
  9383                           ;Multi_RX_testjig_v2.c: 950: {
  9384                           ;Multi_RX_testjig_v2.c: 952: print_screen("Test RF", "3v3");
  9385  0449  3086               	movlw	low (STR_111| (0+32768))
  9386  044A  00F4               	movwf	print_screen@top
  9387  044B  3093               	movlw	high (STR_111| (0+32768))
  9388  044C  00F5               	movwf	print_screen@top+1
  9389  044D  3053               	movlw	low ((STR_117+8)| (0+32768))
  9390  044E  00F6               	movwf	print_screen@bottom
  9391  044F  3092               	movlw	high ((STR_117+8)| (0+32768))
  9392  0450  00F7               	movwf	print_screen@bottom+1
  9393  0451  318A  22D3  3180   	fcall	_print_screen
  9394                           
  9395                           ;Multi_RX_testjig_v2.c: 953: TX_one(0x70);
  9396  0454  3070               	movlw	112
  9397  0455  3187  27DA  3180   	fcall	_TX_one
  9398                           
  9399                           ;Multi_RX_testjig_v2.c: 954: RX_data = RX_one();
  9400  0458  3187  27B3  3180   	fcall	_RX_one
  9401  045B  0020               	movlb	0	; select bank0
  9402  045C  00EE               	movwf	main@RX_data
  9403                           
  9404                           ;Multi_RX_testjig_v2.c: 955: TX_one(0x70);
  9405  045D  3070               	movlw	112
  9406  045E  3187  27DA  3180   	fcall	_TX_one
  9407                           
  9408                           ;Multi_RX_testjig_v2.c: 956: RX_data = RX_one();
  9409  0461  3187  27B3  3180   	fcall	_RX_one
  9410  0464  0020               	movlb	0	; select bank0
  9411  0465  00EE               	movwf	main@RX_data
  9412                           
  9413                           ;Multi_RX_testjig_v2.c: 957: if(RX_data == 0)
  9414  0466  086E               	movf	main@RX_data,w
  9415  0467  1D03               	btfss	3,2
  9416  0468  2C71               	goto	l4638
  9417                           
  9418                           ;Multi_RX_testjig_v2.c: 958: print_error("Comms Error", " 11");
  9419  0469  3087               	movlw	low (STR_35| (0+32768))
  9420  046A  00F8               	movwf	print_error@top
  9421  046B  3092               	movlw	high (STR_35| (0+32768))
  9422  046C  00F9               	movwf	print_error@top+1
  9423  046D  30A6               	movlw	low (STR_114| (0+32768))
  9424  046E  00FA               	movwf	print_error@bottom
  9425  046F  3093               	movlw	high (STR_114| (0+32768))
  9426  0470  2C9F               	goto	L9
  9427  0471                     l4638:	
  9428                           
  9429                           ;Multi_RX_testjig_v2.c: 959: else if(RX_data == 0xFF)
  9430  0471  0A6E               	incf	main@RX_data,w
  9431  0472  1D03               	btfss	3,2
  9432  0473  2C7C               	goto	l4642
  9433                           
  9434                           ;Multi_RX_testjig_v2.c: 960: print_error("Comms Error", " 12");
  9435  0474  3087               	movlw	low (STR_35| (0+32768))
  9436  0475  00F8               	movwf	print_error@top
  9437  0476  3092               	movlw	high (STR_35| (0+32768))
  9438  0477  00F9               	movwf	print_error@top+1
  9439  0478  30AA               	movlw	low (STR_116| (0+32768))
  9440  0479  00FA               	movwf	print_error@bottom
  9441  047A  3093               	movlw	high (STR_116| (0+32768))
  9442  047B  2C9F               	goto	L9
  9443  047C                     l4642:	
  9444                           
  9445                           ;Multi_RX_testjig_v2.c: 961: else if(RX_data > 179)
  9446  047C  30B4               	movlw	180
  9447  047D  026E               	subwf	main@RX_data,w
  9448  047E  1C03               	skipc
  9449  047F  2C88               	goto	l4646
  9450                           
  9451                           ;Multi_RX_testjig_v2.c: 962: print_error("Test RF 3v3", " Error - High");
  9452  0480  304B               	movlw	low (STR_117| (0+32768))
  9453  0481  00F8               	movwf	print_error@top
  9454  0482  3092               	movlw	high (STR_117| (0+32768))
  9455  0483  00F9               	movwf	print_error@top+1
  9456  0484  3091               	movlw	low (STR_118| (0+32768))
  9457  0485  00FA               	movwf	print_error@bottom
  9458  0486  3091               	movlw	high (STR_118| (0+32768))
  9459  0487  2C9F               	goto	L9
  9460  0488                     l4646:	
  9461                           
  9462                           ;Multi_RX_testjig_v2.c: 963: else if(RX_data < 153)
  9463  0488  3099               	movlw	153
  9464  0489  026E               	subwf	main@RX_data,w
  9465  048A  1803               	skipnc
  9466  048B  2C94               	goto	l4650
  9467                           
  9468                           ;Multi_RX_testjig_v2.c: 964: print_error("Test RF 3v3", " Error - Micrel");
  9469  048C  304B               	movlw	low (STR_117| (0+32768))
  9470  048D  00F8               	movwf	print_error@top
  9471  048E  3092               	movlw	high (STR_117| (0+32768))
  9472  048F  00F9               	movwf	print_error@top+1
  9473  0490  30CF               	movlw	low (STR_120| (0+32768))
  9474  0491  00FA               	movwf	print_error@bottom
  9475  0492  3090               	movlw	high (STR_120| (0+32768))
  9476  0493  2C9F               	goto	L9
  9477  0494                     l4650:	
  9478                           
  9479                           ;Multi_RX_testjig_v2.c: 965: else if(RX_data < 158)
  9480  0494  309E               	movlw	158
  9481  0495  026E               	subwf	main@RX_data,w
  9482  0496  1803               	skipnc
  9483  0497  2CA3               	goto	l426
  9484                           
  9485                           ;Multi_RX_testjig_v2.c: 966: print_error("Test RF 3v3", " Error - Low");
  9486  0498  304B               	movlw	low (STR_117| (0+32768))
  9487  0499  00F8               	movwf	print_error@top
  9488  049A  3092               	movlw	high (STR_117| (0+32768))
  9489  049B  00F9               	movwf	print_error@top+1
  9490  049C  303E               	movlw	low (STR_122| (0+32768))
  9491  049D  00FA               	movwf	print_error@bottom
  9492  049E  3092               	movlw	high (STR_122| (0+32768))
  9493  049F                     L9:	
  9494  049F  00FB               	movwf	print_error@bottom+1
  9495  04A0  318A  22F5  3180   	fcall	_print_error
  9496  04A3                     l426:	
  9497                           
  9498                           ;Multi_RX_testjig_v2.c: 968: print_screen("Test RF", "3v3 - OK");
  9499  04A3  3086               	movlw	low (STR_111| (0+32768))
  9500  04A4  00F4               	movwf	print_screen@top
  9501  04A5  3093               	movlw	high (STR_111| (0+32768))
  9502  04A6  00F5               	movwf	print_screen@top+1
  9503  04A7  3040               	movlw	low (STR_124| (0+32768))
  9504  04A8  00F6               	movwf	print_screen@bottom
  9505  04A9  3093               	movlw	high (STR_124| (0+32768))
  9506  04AA  00F7               	movwf	print_screen@bottom+1
  9507  04AB  318A  22D3  3180   	fcall	_print_screen
  9508                           
  9509                           ;Multi_RX_testjig_v2.c: 971: testjig_timer = (unsigned int)((3*7518.8));
  9510  04AE  301C               	movlw	28
  9511  04AF  0021               	movlb	1	; select bank1
  9512  04B0  00AE               	movwf	_testjig_timer^(0+128)	;volatile
  9513  04B1  3058               	movlw	88
  9514  04B2  00AF               	movwf	(_testjig_timer^(0+128)+1)	;volatile
  9515                           
  9516                           ;Multi_RX_testjig_v2.c: 972: RE0 = 1;
  9517  04B3  0020               	movlb	0	; select bank0
  9518  04B4  1410               	bsf	16,0	;volatile
  9519                           
  9520                           ;Multi_RX_testjig_v2.c: 973: _delay((unsigned long)((200)*(16000000/4000.0)));
  9521  04B5  3005               	movlw	5
  9522  04B6  00E3               	movwf	??_main+2
  9523  04B7  300F               	movlw	15
  9524  04B8  00E2               	movwf	??_main+1
  9525  04B9  30F4               	movlw	244
  9526  04BA  00E1               	movwf	??_main
  9527  04BB                     u6027:	
  9528  04BB  0BE1               	decfsz	??_main,f
  9529  04BC  2CBB               	goto	u6027
  9530  04BD  0BE2               	decfsz	??_main+1,f
  9531  04BE  2CBB               	goto	u6027
  9532  04BF  0BE3               	decfsz	??_main+2,f
  9533  04C0  2CBB               	goto	u6027
  9534                           
  9535                           ;Multi_RX_testjig_v2.c: 974: print_screen("Test RF", "RSSI");
  9536  04C1  3086               	movlw	low (STR_111| (0+32768))
  9537  04C2  00F4               	movwf	print_screen@top
  9538  04C3  3093               	movlw	high (STR_111| (0+32768))
  9539  04C4  00F5               	movwf	print_screen@top+1
  9540  04C5  30F8               	movlw	low ((STR_135+8)| (0+32768))
  9541  04C6  00F6               	movwf	print_screen@bottom
  9542  04C7  3091               	movlw	high ((STR_135+8)| (0+32768))
  9543  04C8  00F7               	movwf	print_screen@bottom+1
  9544  04C9  318A  22D3  3180   	fcall	_print_screen
  9545                           
  9546                           ;Multi_RX_testjig_v2.c: 975: TX_one(0x60);
  9547  04CC  3060               	movlw	96
  9548  04CD  3187  27DA  3180   	fcall	_TX_one
  9549                           
  9550                           ;Multi_RX_testjig_v2.c: 976: RX_data = RX_one();
  9551  04D0  3187  27B3  3180   	fcall	_RX_one
  9552  04D3  0020               	movlb	0	; select bank0
  9553  04D4  00EE               	movwf	main@RX_data
  9554                           
  9555                           ;Multi_RX_testjig_v2.c: 977: TX_one(0x60);
  9556  04D5  3060               	movlw	96
  9557  04D6  3187  27DA  3180   	fcall	_TX_one
  9558                           
  9559                           ;Multi_RX_testjig_v2.c: 978: RX_data = RX_one();
  9560  04D9  3187  27B3  3180   	fcall	_RX_one
  9561  04DC  0020               	movlb	0	; select bank0
  9562  04DD  00EE               	movwf	main@RX_data
  9563                           
  9564                           ;Multi_RX_testjig_v2.c: 990: RE0 = 0;
  9565  04DE  1010               	bcf	16,0	;volatile
  9566                           
  9567                           ;Multi_RX_testjig_v2.c: 991: if(RX_data == 0)
  9568  04DF  086E               	movf	main@RX_data,w
  9569  04E0  1D03               	btfss	3,2
  9570  04E1  2CEA               	goto	l4674
  9571                           
  9572                           ;Multi_RX_testjig_v2.c: 992: print_error("Comms Error", " 13");
  9573  04E2  3087               	movlw	low (STR_35| (0+32768))
  9574  04E3  00F8               	movwf	print_error@top
  9575  04E4  3092               	movlw	high (STR_35| (0+32768))
  9576  04E5  00F9               	movwf	print_error@top+1
  9577  04E6  30AE               	movlw	low (STR_128| (0+32768))
  9578  04E7  00FA               	movwf	print_error@bottom
  9579  04E8  3093               	movlw	high (STR_128| (0+32768))
  9580  04E9  2D3E               	goto	L10
  9581  04EA                     l4674:	
  9582                           
  9583                           ;Multi_RX_testjig_v2.c: 993: else if(RX_data == 0xFF)
  9584  04EA  0A6E               	incf	main@RX_data,w
  9585  04EB  1D03               	btfss	3,2
  9586  04EC  2CF5               	goto	l4678
  9587                           
  9588                           ;Multi_RX_testjig_v2.c: 994: print_error("Comms Error", " 14a");
  9589  04ED  3087               	movlw	low (STR_35| (0+32768))
  9590  04EE  00F8               	movwf	print_error@top
  9591  04EF  3092               	movlw	high (STR_35| (0+32768))
  9592  04F0  00F9               	movwf	print_error@top+1
  9593  04F1  3093               	movlw	low (STR_130| (0+32768))
  9594  04F2  00FA               	movwf	print_error@bottom
  9595  04F3  3093               	movlw	high (STR_130| (0+32768))
  9596  04F4  2D3E               	goto	L10
  9597  04F5                     l4678:	
  9598                           
  9599                           ;Multi_RX_testjig_v2.c: 995: else if(RX_data == 0xEE)
  9600  04F5  30EE               	movlw	238
  9601  04F6  066E               	xorwf	main@RX_data,w
  9602  04F7  1D03               	btfss	3,2
  9603  04F8  2D01               	goto	l4682
  9604                           
  9605                           ;Multi_RX_testjig_v2.c: 996: print_error("Comms Error", " 14b");
  9606  04F9  3087               	movlw	low (STR_35| (0+32768))
  9607  04FA  00F8               	movwf	print_error@top
  9608  04FB  3092               	movlw	high (STR_35| (0+32768))
  9609  04FC  00F9               	movwf	print_error@top+1
  9610  04FD  3098               	movlw	low (STR_132| (0+32768))
  9611  04FE  00FA               	movwf	print_error@bottom
  9612  04FF  3093               	movlw	high (STR_132| (0+32768))
  9613  0500  2D3E               	goto	L10
  9614  0501                     l4682:	
  9615                           
  9616                           ;Multi_RX_testjig_v2.c: 997: else if(RX_data >230)
  9617  0501  30E7               	movlw	231
  9618  0502  026E               	subwf	main@RX_data,w
  9619  0503  1C03               	skipc
  9620  0504  2D0D               	goto	l4686
  9621                           
  9622                           ;Multi_RX_testjig_v2.c: 998: print_error("Comms Error", " 14c");
  9623  0505  3087               	movlw	low (STR_35| (0+32768))
  9624  0506  00F8               	movwf	print_error@top
  9625  0507  3092               	movlw	high (STR_35| (0+32768))
  9626  0508  00F9               	movwf	print_error@top+1
  9627  0509  309D               	movlw	low (STR_134| (0+32768))
  9628  050A  00FA               	movwf	print_error@bottom
  9629  050B  3093               	movlw	high (STR_134| (0+32768))
  9630  050C  2D3E               	goto	L10
  9631  050D                     l4686:	
  9632                           
  9633                           ;Multi_RX_testjig_v2.c: 999: else if(RX_data > 120)
  9634  050D  3079               	movlw	121
  9635  050E  026E               	subwf	main@RX_data,w
  9636  050F  1C03               	skipc
  9637  0510  2D33               	goto	l4694
  9638                           
  9639                           ;Multi_RX_testjig_v2.c: 1000: {
  9640                           ;Multi_RX_testjig_v2.c: 1001: lcd_print_int(RX_data, 5, 0, 1);
  9641  0511  086E               	movf	main@RX_data,w
  9642  0512  00DB               	movwf	lcd_print_int@number
  9643  0513  3005               	movlw	5
  9644  0514  01DC               	clrf	lcd_print_int@number+1
  9645  0515  00DD               	movwf	lcd_print_int@pos
  9646  0516  01DE               	clrf	lcd_print_int@pos+1
  9647  0517  01DF               	clrf	lcd_print_int@decimal
  9648  0518  01E0               	clrf	lcd_print_int@ten_thou_digit
  9649  0519  0AE0               	incf	lcd_print_int@ten_thou_digit,f
  9650  051A  3188  20F5  3180   	fcall	_lcd_print_int
  9651                           
  9652                           ;Multi_RX_testjig_v2.c: 1002: _delay((unsigned long)((5000)*(16000000/4000.0)));
  9653  051D  3066               	movlw	102
  9654  051E  0020               	movlb	0	; select bank0
  9655  051F  00E3               	movwf	??_main+2
  9656  0520  3077               	movlw	119
  9657  0521  00E2               	movwf	??_main+1
  9658  0522  3024               	movlw	36
  9659  0523  00E1               	movwf	??_main
  9660  0524                     u6037:	
  9661  0524  0BE1               	decfsz	??_main,f
  9662  0525  2D24               	goto	u6037
  9663  0526  0BE2               	decfsz	??_main+1,f
  9664  0527  2D24               	goto	u6037
  9665  0528  0BE3               	decfsz	??_main+2,f
  9666  0529  2D24               	goto	u6037
  9667  052A  0000               	nop
  9668                           
  9669                           ;Multi_RX_testjig_v2.c: 1003: print_error("Test RF RSSI", " Error - High");
  9670  052B  30F0               	movlw	low (STR_135| (0+32768))
  9671  052C  00F8               	movwf	print_error@top
  9672  052D  3091               	movlw	high (STR_135| (0+32768))
  9673  052E  00F9               	movwf	print_error@top+1
  9674  052F  3091               	movlw	low (STR_118| (0+32768))
  9675  0530  00FA               	movwf	print_error@bottom
  9676  0531  3091               	movlw	high (STR_118| (0+32768))
  9677  0532  2D3E               	goto	L10
  9678  0533                     l4694:	
  9679                           ;Multi_RX_testjig_v2.c: 1004: }
  9680                           
  9681                           
  9682                           ;Multi_RX_testjig_v2.c: 1005: else if(RX_data < 90)
  9683  0533  305A               	movlw	90
  9684  0534  026E               	subwf	main@RX_data,w
  9685  0535  1803               	skipnc
  9686  0536  2D42               	goto	l435
  9687                           
  9688                           ;Multi_RX_testjig_v2.c: 1006: print_error("Test RF RSSI", " Error - Low");
  9689  0537  30F0               	movlw	low (STR_135| (0+32768))
  9690  0538  00F8               	movwf	print_error@top
  9691  0539  3091               	movlw	high (STR_135| (0+32768))
  9692  053A  00F9               	movwf	print_error@top+1
  9693  053B  303E               	movlw	low (STR_122| (0+32768))
  9694  053C  00FA               	movwf	print_error@bottom
  9695  053D  3092               	movlw	high (STR_122| (0+32768))
  9696  053E                     L10:	
  9697  053E  00FB               	movwf	print_error@bottom+1
  9698  053F  318A  22F5  3180   	fcall	_print_error
  9699  0542                     l435:	
  9700                           
  9701                           ;Multi_RX_testjig_v2.c: 1007: print_screen("Test RF", "RSSI - OK");
  9702  0542  3086               	movlw	low (STR_111| (0+32768))
  9703  0543  00F4               	movwf	print_screen@top
  9704  0544  3093               	movlw	high (STR_111| (0+32768))
  9705  0545  00F5               	movwf	print_screen@top+1
  9706  0546  30FF               	movlw	low (STR_140| (0+32768))
  9707  0547  00F6               	movwf	print_screen@bottom
  9708  0548  3092               	movlw	high (STR_140| (0+32768))
  9709  0549  00F7               	movwf	print_screen@bottom+1
  9710  054A  318A  22D3  3180   	fcall	_print_screen
  9711                           
  9712                           ;Multi_RX_testjig_v2.c: 1009: _delay((unsigned long)((100)*(16000000/4000.0)));
  9713  054D  3003               	movlw	3
  9714  054E  0020               	movlb	0	; select bank0
  9715  054F  00E3               	movwf	??_main+2
  9716  0550  3008               	movlw	8
  9717  0551  00E2               	movwf	??_main+1
  9718  0552  3078               	movlw	120
  9719  0553  00E1               	movwf	??_main
  9720  0554                     u6047:	
  9721  0554  0BE1               	decfsz	??_main,f
  9722  0555  2D54               	goto	u6047
  9723  0556  0BE2               	decfsz	??_main+1,f
  9724  0557  2D54               	goto	u6047
  9725  0558  0BE3               	decfsz	??_main+2,f
  9726  0559  2D54               	goto	u6047
  9727                           
  9728                           ;Multi_RX_testjig_v2.c: 1011: print_screen("Test RF", "Decode");
  9729  055A  3086               	movlw	low (STR_111| (0+32768))
  9730  055B  00F4               	movwf	print_screen@top
  9731  055C  3093               	movlw	high (STR_111| (0+32768))
  9732  055D  00F5               	movwf	print_screen@top+1
  9733  055E  3016               	movlw	low ((STR_150+8)| (0+32768))
  9734  055F  00F6               	movwf	print_screen@bottom
  9735  0560  3091               	movlw	high ((STR_150+8)| (0+32768))
  9736  0561  00F7               	movwf	print_screen@bottom+1
  9737  0562  318A  22D3  3180   	fcall	_print_screen
  9738                           
  9739                           ;Multi_RX_testjig_v2.c: 1012: int j;
  9740                           ;Multi_RX_testjig_v2.c: 1013: RX_data = 0;
  9741  0565  0020               	movlb	0	; select bank0
  9742  0566  01EE               	clrf	main@RX_data
  9743                           
  9744                           ;Multi_RX_testjig_v2.c: 1014: for(j = 0; j < 50; j++)
  9745  0567  01E8               	clrf	main@j
  9746  0568  01E9               	clrf	main@j+1
  9747  0569  0869               	movf	main@j+1,w
  9748  056A  3A80               	xorlw	128
  9749  056B  00E1               	movwf	??_main
  9750  056C  3080               	movlw	128
  9751  056D  0261               	subwf	??_main,w
  9752  056E  1D03               	skipz
  9753  056F  2D72               	goto	u5425
  9754  0570  3032               	movlw	50
  9755  0571  0268               	subwf	main@j,w
  9756  0572                     u5425:	
  9757  0572  1803               	btfsc	3,0
  9758  0573  2E35               	goto	l4774
  9759  0574                     l4708:	
  9760                           
  9761                           ;Multi_RX_testjig_v2.c: 1015: {
  9762                           ;Multi_RX_testjig_v2.c: 1017: testjig_timer = (unsigned int)((3*7518.8));
  9763  0574  301C               	movlw	28
  9764  0575  0021               	movlb	1	; select bank1
  9765  0576  00AE               	movwf	_testjig_timer^(0+128)	;volatile
  9766  0577  3058               	movlw	88
  9767  0578  00AF               	movwf	(_testjig_timer^(0+128)+1)	;volatile
  9768                           
  9769                           ;Multi_RX_testjig_v2.c: 1018: RE0 = 1;
  9770  0579  0020               	movlb	0	; select bank0
  9771  057A  1410               	bsf	16,0	;volatile
  9772                           
  9773                           ;Multi_RX_testjig_v2.c: 1019: _delay((unsigned long)((200)*(16000000/4000.0)));
  9774  057B  3005               	movlw	5
  9775  057C  00E3               	movwf	??_main+2
  9776  057D  300F               	movlw	15
  9777  057E  00E2               	movwf	??_main+1
  9778  057F  30F4               	movlw	244
  9779  0580  00E1               	movwf	??_main
  9780  0581                     u6057:	
  9781  0581  0BE1               	decfsz	??_main,f
  9782  0582  2D81               	goto	u6057
  9783  0583  0BE2               	decfsz	??_main+1,f
  9784  0584  2D81               	goto	u6057
  9785  0585  0BE3               	decfsz	??_main+2,f
  9786  0586  2D81               	goto	u6057
  9787                           
  9788                           ;Multi_RX_testjig_v2.c: 1020: for(i = 0; i < 5; i++)
  9789  0587  0020               	movlb	0	; select bank0
  9790  0588  01EB               	clrf	main@i
  9791  0589  01EC               	clrf	main@i+1
  9792  058A  2D9B               	goto	l4714
  9793  058B                     l4724:	
  9794                           
  9795                           ;Multi_RX_testjig_v2.c: 1026: _delay((unsigned long)((200)*(16000000/4000.0)));
  9796  058B  3005               	movlw	5
  9797  058C  00E3               	movwf	??_main+2
  9798  058D  300F               	movlw	15
  9799  058E  00E2               	movwf	??_main+1
  9800  058F  30F4               	movlw	244
  9801  0590  00E1               	movwf	??_main
  9802  0591                     u6067:	
  9803  0591  0BE1               	decfsz	??_main,f
  9804  0592  2D91               	goto	u6067
  9805  0593  0BE2               	decfsz	??_main+1,f
  9806  0594  2D91               	goto	u6067
  9807  0595  0BE3               	decfsz	??_main+2,f
  9808  0596  2D91               	goto	u6067
  9809  0597  0020               	movlb	0	; select bank0
  9810  0598  0AEB               	incf	main@i,f
  9811  0599  1903               	skipnz
  9812  059A  0AEC               	incf	main@i+1,f
  9813  059B                     l4714:	
  9814  059B  3000               	movlw	0
  9815  059C  026C               	subwf	main@i+1,w
  9816  059D  3005               	movlw	5
  9817  059E  1903               	skipnz
  9818  059F  026B               	subwf	main@i,w
  9819  05A0  1803               	btfsc	3,0
  9820  05A1  2DAD               	goto	l448
  9821                           
  9822                           ;Multi_RX_testjig_v2.c: 1021: {
  9823                           ;Multi_RX_testjig_v2.c: 1022: TX_one(0x61);
  9824  05A2  3061               	movlw	97
  9825  05A3  3187  27DA  3180   	fcall	_TX_one
  9826                           
  9827                           ;Multi_RX_testjig_v2.c: 1023: RX_data = RX_one();
  9828  05A6  3187  27B3  3180   	fcall	_RX_one
  9829  05A9  0020               	movlb	0	; select bank0
  9830  05AA  00EE               	movwf	main@RX_data
  9831                           
  9832                           ;Multi_RX_testjig_v2.c: 1024: if(RX_data == 1)
  9833  05AB  0B6E               	decfsz	main@RX_data,w
  9834  05AC  2D8B               	goto	l4724
  9835  05AD                     l448:	
  9836                           
  9837                           ;Multi_RX_testjig_v2.c: 1027: }
  9838                           ;Multi_RX_testjig_v2.c: 1028: RE0 = 0;
  9839  05AD  1010               	bcf	16,0	;volatile
  9840                           
  9841                           ;Multi_RX_testjig_v2.c: 1029: if(RX_data == 1)
  9842  05AE  0B6E               	decfsz	main@RX_data,w
  9843  05AF  2DB1               	goto	l4734
  9844  05B0  2E35               	goto	l4774
  9845  05B1                     l4734:	
  9846                           
  9847                           ;Multi_RX_testjig_v2.c: 1032: print_screen("Test RF", " cycling power");
  9848  05B1  3086               	movlw	low (STR_111| (0+32768))
  9849  05B2  00F4               	movwf	print_screen@top
  9850  05B3  3093               	movlw	high (STR_111| (0+32768))
  9851  05B4  00F5               	movwf	print_screen@top+1
  9852  05B5  303B               	movlw	low (STR_144| (0+32768))
  9853  05B6  00F6               	movwf	print_screen@bottom
  9854  05B7  3091               	movlw	high (STR_144| (0+32768))
  9855  05B8  00F7               	movwf	print_screen@bottom+1
  9856  05B9  318A  22D3  3180   	fcall	_print_screen
  9857                           
  9858                           ;Multi_RX_testjig_v2.c: 1033: power_supply_set(3);
  9859  05BC  3003               	movlw	3
  9860  05BD  318B  23F3  3180   	fcall	_power_supply_set
  9861                           
  9862                           ;Multi_RX_testjig_v2.c: 1034: LATA7 = 0;
  9863  05C0  0022               	movlb	2	; select bank2
  9864  05C1  138C               	bcf	12,7	;volatile
  9865                           
  9866                           ;Multi_RX_testjig_v2.c: 1035: LATB5 = 0;
  9867  05C2  128D               	bcf	13,5	;volatile
  9868                           
  9869                           ;Multi_RX_testjig_v2.c: 1036: LATA6 = 0;
  9870  05C3  130C               	bcf	12,6	;volatile
  9871                           
  9872                           ;Multi_RX_testjig_v2.c: 1037: TRISG0 = 1;
  9873  05C4  0026               	movlb	6	; select bank6
  9874  05C5  140D               	bsf	13,0	;volatile
  9875  05C6                     l4744:	
  9876                           ;Multi_RX_testjig_v2.c: 1038: while(ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.2));
  9877                           
  9878  05C6  305F               	movlw	95
  9879  05C7  318C  245E  3180   	fcall	_ADC_get_val
  9880  05CA  3000               	movlw	0
  9881  05CB  0271               	subwf	?_ADC_get_val+1,w
  9882  05CC  3017               	movlw	23
  9883  05CD  1903               	skipnz
  9884  05CE  0270               	subwf	?_ADC_get_val,w
  9885  05CF  1803               	skipnc
  9886  05D0  2DC6               	goto	l4744
  9887                           
  9888                           ;Multi_RX_testjig_v2.c: 1039: power_supply_set(0);
  9889  05D1  3000               	movlw	0
  9890  05D2  318B  23F3  3180   	fcall	_power_supply_set
  9891                           
  9892                           ;Multi_RX_testjig_v2.c: 1040: _delay((unsigned long)((200)*(16000000/4000.0)));
  9893  05D5  3005               	movlw	5
  9894  05D6  0020               	movlb	0	; select bank0
  9895  05D7  00E3               	movwf	??_main+2
  9896  05D8  300F               	movlw	15
  9897  05D9  00E2               	movwf	??_main+1
  9898  05DA  30F4               	movlw	244
  9899  05DB  00E1               	movwf	??_main
  9900  05DC                     u6077:	
  9901  05DC  0BE1               	decfsz	??_main,f
  9902  05DD  2DDC               	goto	u6077
  9903  05DE  0BE2               	decfsz	??_main+1,f
  9904  05DF  2DDC               	goto	u6077
  9905  05E0  0BE3               	decfsz	??_main+2,f
  9906  05E1  2DDC               	goto	u6077
  9907                           
  9908                           ;Multi_RX_testjig_v2.c: 1042: for(i = 0; i < 10; i++)
  9909  05E2  0020               	movlb	0	; select bank0
  9910  05E3  01EB               	clrf	main@i
  9911  05E4  01EC               	clrf	main@i+1
  9912  05E5                     l4752:	
  9913  05E5  3000               	movlw	0
  9914  05E6  026C               	subwf	main@i+1,w
  9915  05E7  300A               	movlw	10
  9916  05E8  1903               	skipnz
  9917  05E9  026B               	subwf	main@i,w
  9918  05EA  1803               	btfsc	3,0
  9919  05EB  2E27               	goto	l4770
  9920                           
  9921                           ;Multi_RX_testjig_v2.c: 1043: {
  9922                           ;Multi_RX_testjig_v2.c: 1044: TX_one(0x01);
  9923  05EC  3001               	movlw	1
  9924  05ED  3187  27DA  3180   	fcall	_TX_one
  9925                           
  9926                           ;Multi_RX_testjig_v2.c: 1045: unsigned char response;
  9927                           ;Multi_RX_testjig_v2.c: 1046: response = RX_one_timeout();
  9928  05F0  3187  2784  3180   	fcall	_RX_one_timeout
  9929  05F3  0020               	movlb	0	; select bank0
  9930  05F4  00EA               	movwf	main@response
  9931                           
  9932                           ;Multi_RX_testjig_v2.c: 1047: if((response == 0xAA) || (response == 0xA1))
  9933  05F5  3AAA               	xorlw	170
  9934  05F6  1903               	btfsc	3,2
  9935  05F7  2E27               	goto	l4770
  9936  05F8  30A1               	movlw	161
  9937  05F9  066A               	xorwf	main@response,w
  9938  05FA  1903               	btfsc	3,2
  9939  05FB  2E27               	goto	l4770
  9940                           
  9941                           ;Multi_RX_testjig_v2.c: 1049: lcd_print_int(i, 11, 0, 0);
  9942  05FC  086C               	movf	main@i+1,w
  9943  05FD  00DC               	movwf	lcd_print_int@number+1
  9944  05FE  086B               	movf	main@i,w
  9945  05FF  00DB               	movwf	lcd_print_int@number
  9946  0600  300B               	movlw	11
  9947  0601  00DD               	movwf	lcd_print_int@pos
  9948  0602  01DE               	clrf	lcd_print_int@pos+1
  9949  0603  01DF               	clrf	lcd_print_int@decimal
  9950  0604  01E0               	clrf	lcd_print_int@ten_thou_digit
  9951  0605  3188  20F5  3180   	fcall	_lcd_print_int
  9952                           
  9953                           ;Multi_RX_testjig_v2.c: 1050: lcd_print_int(device_type, 5, 0, 0);
  9954  0608  0020               	movlb	0	; select bank0
  9955  0609  086D               	movf	main@device_type,w
  9956  060A  00DB               	movwf	lcd_print_int@number
  9957  060B  3005               	movlw	5
  9958  060C  01DC               	clrf	lcd_print_int@number+1
  9959  060D  00DD               	movwf	lcd_print_int@pos
  9960  060E  01DE               	clrf	lcd_print_int@pos+1
  9961  060F  01DF               	clrf	lcd_print_int@decimal
  9962  0610  01E0               	clrf	lcd_print_int@ten_thou_digit
  9963  0611  3188  20F5  3180   	fcall	_lcd_print_int
  9964                           
  9965                           ;Multi_RX_testjig_v2.c: 1051: _delay((unsigned long)((50)*(16000000/4000.0)));
  9966  0614  3002               	movlw	2
  9967  0615  0020               	movlb	0	; select bank0
  9968  0616  00E3               	movwf	??_main+2
  9969  0617  3004               	movlw	4
  9970  0618  00E2               	movwf	??_main+1
  9971  0619  30BA               	movlw	186
  9972  061A  00E1               	movwf	??_main
  9973  061B                     u6087:	
  9974  061B  0BE1               	decfsz	??_main,f
  9975  061C  2E1B               	goto	u6087
  9976  061D  0BE2               	decfsz	??_main+1,f
  9977  061E  2E1B               	goto	u6087
  9978  061F  0BE3               	decfsz	??_main+2,f
  9979  0620  2E1B               	goto	u6087
  9980  0621  0000               	nop
  9981  0622  0020               	movlb	0	; select bank0
  9982  0623  0AEB               	incf	main@i,f
  9983  0624  1903               	skipnz
  9984  0625  0AEC               	incf	main@i+1,f
  9985  0626  2DE5               	goto	l4752
  9986  0627                     l4770:	
  9987  0627  0AE8               	incf	main@j,f
  9988  0628  1903               	skipnz
  9989  0629  0AE9               	incf	main@j+1,f
  9990  062A  0869               	movf	main@j+1,w
  9991  062B  3A80               	xorlw	128
  9992  062C  00E1               	movwf	??_main
  9993  062D  3080               	movlw	128
  9994  062E  0261               	subwf	??_main,w
  9995  062F  1D03               	skipz
  9996  0630  2E33               	goto	u5505
  9997  0631  3032               	movlw	50
  9998  0632  0268               	subwf	main@j,w
  9999  0633                     u5505:	
 10000  0633  1C03               	skipc
 10001  0634  2D74               	goto	l4708
 10002  0635                     l4774:	
 10003                           
 10004                           ;Multi_RX_testjig_v2.c: 1052: }
 10005                           ;Multi_RX_testjig_v2.c: 1053: }
 10006                           ;Multi_RX_testjig_v2.c: 1054: if(RX_data == 1)
 10007  0635  0020               	movlb	0	; select bank0
 10008  0636  036E               	decf	main@RX_data,w
 10009  0637  1D03               	btfss	3,2
 10010  0638  2E45               	goto	l4778
 10011                           
 10012                           ;Multi_RX_testjig_v2.c: 1055: print_screen("Test RF", "Decode New - OK");
 10013  0639  3086               	movlw	low (STR_111| (0+32768))
 10014  063A  00F4               	movwf	print_screen@top
 10015  063B  3093               	movlw	high (STR_111| (0+32768))
 10016  063C  00F5               	movwf	print_screen@top+1
 10017  063D  30AF               	movlw	low (STR_146| (0+32768))
 10018  063E  00F6               	movwf	print_screen@bottom
 10019  063F  3090               	movlw	high (STR_146| (0+32768))
 10020  0640  00F7               	movwf	print_screen@bottom+1
 10021  0641  318A  22D3  3180   	fcall	_print_screen
 10022  0644  2E68               	goto	l4788
 10023  0645                     l4778:	
 10024                           
 10025                           ;Multi_RX_testjig_v2.c: 1056: else if(RX_data == 2)
 10026  0645  3002               	movlw	2
 10027  0646  066E               	xorwf	main@RX_data,w
 10028  0647  1D03               	btfss	3,2
 10029  0648  2E51               	goto	l4782
 10030                           
 10031                           ;Multi_RX_testjig_v2.c: 1057: print_error("Test RF", "Decode Old -Fail");
 10032  0649  3086               	movlw	low (STR_111| (0+32768))
 10033  064A  00F8               	movwf	print_error@top
 10034  064B  3093               	movlw	high (STR_111| (0+32768))
 10035  064C  00F9               	movwf	print_error@top+1
 10036  064D  305B               	movlw	low (STR_148| (0+32768))
 10037  064E  00FA               	movwf	print_error@bottom
 10038  064F  3090               	movlw	high (STR_148| (0+32768))
 10039  0650  2E64               	goto	L5
 10040  0651                     l4782:	
 10041                           
 10042                           ;Multi_RX_testjig_v2.c: 1058: else if(RX_data == 3)
 10043  0651  3003               	movlw	3
 10044  0652  066E               	xorwf	main@RX_data,w
 10045  0653  1D03               	btfss	3,2
 10046  0654  2E5D               	goto	l4786
 10047                           
 10048                           ;Multi_RX_testjig_v2.c: 1059: print_error("Test RF", "Error - Decode");
 10049  0655  3086               	movlw	low (STR_111| (0+32768))
 10050  0656  00F8               	movwf	print_error@top
 10051  0657  3093               	movlw	high (STR_111| (0+32768))
 10052  0658  00F9               	movwf	print_error@top+1
 10053  0659  300E               	movlw	low (STR_150| (0+32768))
 10054  065A  00FA               	movwf	print_error@bottom
 10055  065B  3091               	movlw	high (STR_150| (0+32768))
 10056  065C  2E64               	goto	L5
 10057  065D                     l4786:	
 10058                           
 10059                           ;Multi_RX_testjig_v2.c: 1060: else
 10060                           ;Multi_RX_testjig_v2.c: 1061: print_error("Comms Error", " 15");
 10061  065D  3087               	movlw	low (STR_35| (0+32768))
 10062  065E  00F8               	movwf	print_error@top
 10063  065F  3092               	movlw	high (STR_35| (0+32768))
 10064  0660  00F9               	movwf	print_error@top+1
 10065  0661  30B2               	movlw	low (STR_152| (0+32768))
 10066  0662  00FA               	movwf	print_error@bottom
 10067  0663  3093               	movlw	high (STR_152| (0+32768))
 10068  0664                     L5:	
 10069  0664  00FB               	movwf	print_error@bottom+1
 10070  0665  318A  22F5  3180   	fcall	_print_error
 10071  0668                     l4788:	
 10072                           
 10073                           ;Multi_RX_testjig_v2.c: 1064: }
 10074                           ;Multi_RX_testjig_v2.c: 1066: if(device_type == 0xA2)
 10075  0668  30A2               	movlw	162
 10076  0669  0020               	movlb	0	; select bank0
 10077  066A  066D               	xorwf	main@device_type,w
 10078  066B  1D03               	btfss	3,2
 10079  066C  2E8F               	goto	l4800
 10080                           
 10081                           ;Multi_RX_testjig_v2.c: 1067: {
 10082                           ;Multi_RX_testjig_v2.c: 1069: print_screen("T4 bus (CAN)", " ");
 10083  066D  30D6               	movlw	low (STR_153| (0+32768))
 10084  066E  00F4               	movwf	print_screen@top
 10085  066F  3091               	movlw	high (STR_153| (0+32768))
 10086  0670  00F5               	movwf	print_screen@top+1
 10087  0671  30AD               	movlw	low ((STR_165+14)| (0+32768))
 10088  0672  00F6               	movwf	print_screen@bottom
 10089  0673  3090               	movlw	high ((STR_165+14)| (0+32768))
 10090  0674  00F7               	movwf	print_screen@bottom+1
 10091  0675  318A  22D3  3180   	fcall	_print_screen
 10092                           
 10093                           ;Multi_RX_testjig_v2.c: 1070: TX_one(0xA0);
 10094  0678  30A0               	movlw	160
 10095  0679  3187  27DA  3180   	fcall	_TX_one
 10096                           
 10097                           ;Multi_RX_testjig_v2.c: 1071: RX_data = RX_one();
 10098  067C  3187  27B3  3180   	fcall	_RX_one
 10099  067F  0020               	movlb	0	; select bank0
 10100  0680  00EE               	movwf	main@RX_data
 10101                           
 10102                           ;Multi_RX_testjig_v2.c: 1072: if(RX_data != 0xAA)
 10103  0681  3AAA               	xorlw	170
 10104  0682  1903               	btfsc	3,2
 10105  0683  2E8F               	goto	l4800
 10106                           
 10107                           ;Multi_RX_testjig_v2.c: 1073: print_error("Comms Error", " 18");
 10108  0684  3087               	movlw	low (STR_35| (0+32768))
 10109  0685  00F8               	movwf	print_error@top
 10110  0686  3092               	movlw	high (STR_35| (0+32768))
 10111  0687  00F9               	movwf	print_error@top+1
 10112  0688  30BE               	movlw	low (STR_156| (0+32768))
 10113  0689  00FA               	movwf	print_error@bottom
 10114  068A  3093               	movlw	high (STR_156| (0+32768))
 10115  068B  00FB               	movwf	print_error@bottom+1
 10116  068C  318A  22F5  3180   	fcall	_print_error
 10117  068F                     l4800:	
 10118                           
 10119                           ;Multi_RX_testjig_v2.c: 1077: }
 10120                           ;Multi_RX_testjig_v2.c: 1079: if((device_type == 0xAA) || (device_type == 0xA1) || (devi
      +                          ce_type == 0xA2))
 10121  068F  30AA               	movlw	170
 10122  0690  0020               	movlb	0	; select bank0
 10123  0691  066D               	xorwf	main@device_type,w
 10124  0692  1903               	btfsc	3,2
 10125  0693  2E9C               	goto	l4806
 10126  0694  30A1               	movlw	161
 10127  0695  066D               	xorwf	main@device_type,w
 10128  0696  1903               	btfsc	3,2
 10129  0697  2E9C               	goto	l4806
 10130  0698  30A2               	movlw	162
 10131  0699  066D               	xorwf	main@device_type,w
 10132  069A  1D03               	btfss	3,2
 10133  069B  2EBE               	goto	l4816
 10134  069C                     l4806:	
 10135                           
 10136                           ;Multi_RX_testjig_v2.c: 1080: {
 10137                           ;Multi_RX_testjig_v2.c: 1082: print_screen("Master Erase ", " ");
 10138  069C  3059               	movlw	low (STR_157| (0+32768))
 10139  069D  00F4               	movwf	print_screen@top
 10140  069E  3091               	movlw	high (STR_157| (0+32768))
 10141  069F  00F5               	movwf	print_screen@top+1
 10142  06A0  30AD               	movlw	low ((STR_165+14)| (0+32768))
 10143  06A1  00F6               	movwf	print_screen@bottom
 10144  06A2  3090               	movlw	high ((STR_165+14)| (0+32768))
 10145  06A3  00F7               	movwf	print_screen@bottom+1
 10146  06A4  318A  22D3  3180   	fcall	_print_screen
 10147                           
 10148                           ;Multi_RX_testjig_v2.c: 1083: TX_one(0x82);
 10149  06A7  3082               	movlw	130
 10150  06A8  3187  27DA  3180   	fcall	_TX_one
 10151                           
 10152                           ;Multi_RX_testjig_v2.c: 1084: RX_data = RX_one();
 10153  06AB  3187  27B3  3180   	fcall	_RX_one
 10154  06AE  0020               	movlb	0	; select bank0
 10155  06AF  00EE               	movwf	main@RX_data
 10156                           
 10157                           ;Multi_RX_testjig_v2.c: 1085: if(RX_data != 0x8A)
 10158  06B0  3A8A               	xorlw	138
 10159  06B1  1903               	btfsc	3,2
 10160  06B2  2EBE               	goto	l4816
 10161                           
 10162                           ;Multi_RX_testjig_v2.c: 1086: print_error("Comms Error", " 17");
 10163  06B3  3087               	movlw	low (STR_35| (0+32768))
 10164  06B4  00F8               	movwf	print_error@top
 10165  06B5  3092               	movlw	high (STR_35| (0+32768))
 10166  06B6  00F9               	movwf	print_error@top+1
 10167  06B7  30BA               	movlw	low (STR_160| (0+32768))
 10168  06B8  00FA               	movwf	print_error@bottom
 10169  06B9  3093               	movlw	high (STR_160| (0+32768))
 10170  06BA  00FB               	movwf	print_error@bottom+1
 10171  06BB  318A  22F5  3180   	fcall	_print_error
 10172  06BE                     l4816:	
 10173                           
 10174                           ;Multi_RX_testjig_v2.c: 1087: }
 10175                           ;Multi_RX_testjig_v2.c: 1089: if((device_type == 0xAA) || (device_type == 0xA1))
 10176  06BE  30AA               	movlw	170
 10177  06BF  0020               	movlb	0	; select bank0
 10178  06C0  066D               	xorwf	main@device_type,w
 10179  06C1  1903               	btfsc	3,2
 10180  06C2  2EC7               	goto	l4820
 10181  06C3  30A1               	movlw	161
 10182  06C4  066D               	xorwf	main@device_type,w
 10183  06C5  1D03               	btfss	3,2
 10184  06C6  2EE9               	goto	l4830
 10185  06C7                     l4820:	
 10186                           
 10187                           ;Multi_RX_testjig_v2.c: 1090: {
 10188                           ;Multi_RX_testjig_v2.c: 1092: print_screen("Set # of ", " channels");
 10189  06C7  30E1               	movlw	low (STR_161| (0+32768))
 10190  06C8  00F4               	movwf	print_screen@top
 10191  06C9  3092               	movlw	high (STR_161| (0+32768))
 10192  06CA  00F5               	movwf	print_screen@top+1
 10193  06CB  3009               	movlw	low (STR_162| (0+32768))
 10194  06CC  00F6               	movwf	print_screen@bottom
 10195  06CD  3093               	movlw	high (STR_162| (0+32768))
 10196  06CE  00F7               	movwf	print_screen@bottom+1
 10197  06CF  318A  22D3  3180   	fcall	_print_screen
 10198                           
 10199                           ;Multi_RX_testjig_v2.c: 1093: TX_one(0x81);
 10200  06D2  3081               	movlw	129
 10201  06D3  3187  27DA  3180   	fcall	_TX_one
 10202                           
 10203                           ;Multi_RX_testjig_v2.c: 1094: RX_data = RX_one();
 10204  06D6  3187  27B3  3180   	fcall	_RX_one
 10205  06D9  0020               	movlb	0	; select bank0
 10206  06DA  00EE               	movwf	main@RX_data
 10207                           
 10208                           ;Multi_RX_testjig_v2.c: 1095: if(RX_data != 0x8A)
 10209  06DB  3A8A               	xorlw	138
 10210  06DC  1903               	btfsc	3,2
 10211  06DD  2EE9               	goto	l4830
 10212                           
 10213                           ;Multi_RX_testjig_v2.c: 1096: print_error("Comms Error", " 16");
 10214  06DE  3087               	movlw	low (STR_35| (0+32768))
 10215  06DF  00F8               	movwf	print_error@top
 10216  06E0  3092               	movlw	high (STR_35| (0+32768))
 10217  06E1  00F9               	movwf	print_error@top+1
 10218  06E2  30B6               	movlw	low (STR_164| (0+32768))
 10219  06E3  00FA               	movwf	print_error@bottom
 10220  06E4  3093               	movlw	high (STR_164| (0+32768))
 10221  06E5  00FB               	movwf	print_error@bottom+1
 10222  06E6  318A  22F5  3180   	fcall	_print_error
 10223  06E9                     l4830:	
 10224                           
 10225                           ;Multi_RX_testjig_v2.c: 1097: }
 10226                           ;Multi_RX_testjig_v2.c: 1099: if((device_type == 0xAA) || (device_type == 0xA1)|| (devic
      +                          e_type == 0xA2))
 10227  06E9  30AA               	movlw	170
 10228  06EA  0020               	movlb	0	; select bank0
 10229  06EB  066D               	xorwf	main@device_type,w
 10230  06EC  1903               	btfsc	3,2
 10231  06ED  2EF6               	goto	l4836
 10232  06EE  30A1               	movlw	161
 10233  06EF  066D               	xorwf	main@device_type,w
 10234  06F0  1903               	btfsc	3,2
 10235  06F1  2EF6               	goto	l4836
 10236  06F2  30A2               	movlw	162
 10237  06F3  066D               	xorwf	main@device_type,w
 10238  06F4  1D03               	btfss	3,2
 10239  06F5  2F22               	goto	l475
 10240  06F6                     l4836:	
 10241                           
 10242                           ;Multi_RX_testjig_v2.c: 1100: {
 10243                           ;Multi_RX_testjig_v2.c: 1102: print_screen("7seg, buzzer,  ", " button test");
 10244  06F6  309F               	movlw	low (STR_165| (0+32768))
 10245  06F7  00F4               	movwf	print_screen@top
 10246  06F8  3090               	movlw	high (STR_165| (0+32768))
 10247  06F9  00F5               	movwf	print_screen@top+1
 10248  06FA  3031               	movlw	low (STR_166| (0+32768))
 10249  06FB  00F6               	movwf	print_screen@bottom
 10250  06FC  3092               	movlw	high (STR_166| (0+32768))
 10251  06FD  00F7               	movwf	print_screen@bottom+1
 10252  06FE  318A  22D3  3180   	fcall	_print_screen
 10253                           
 10254                           ;Multi_RX_testjig_v2.c: 1103: TX_one(0x90);
 10255  0701  3090               	movlw	144
 10256  0702  3187  27DA  3180   	fcall	_TX_one
 10257                           
 10258                           ;Multi_RX_testjig_v2.c: 1104: TRISG0 = 1;
 10259  0705  0026               	movlb	6	; select bank6
 10260  0706  140D               	bsf	13,0	;volatile
 10261                           
 10262                           ;Multi_RX_testjig_v2.c: 1105: _delay((unsigned long)((100)*(16000000/4000.0)));
 10263  0707  3003               	movlw	3
 10264  0708  0020               	movlb	0	; select bank0
 10265  0709  00E3               	movwf	??_main+2
 10266  070A  3008               	movlw	8
 10267  070B  00E2               	movwf	??_main+1
 10268  070C  3078               	movlw	120
 10269  070D  00E1               	movwf	??_main
 10270  070E                     u6097:	
 10271  070E  0BE1               	decfsz	??_main,f
 10272  070F  2F0E               	goto	u6097
 10273  0710  0BE2               	decfsz	??_main+1,f
 10274  0711  2F0E               	goto	u6097
 10275  0712  0BE3               	decfsz	??_main+2,f
 10276  0713  2F0E               	goto	u6097
 10277  0714                     l478:	
 10278                           ;Multi_RX_testjig_v2.c: 1106: while(RG1 == 1);
 10279                           
 10280  0714  0025               	movlb	5	; select bank5
 10281  0715  188D               	btfsc	13,1	;volatile
 10282  0716  2F14               	goto	l478
 10283                           
 10284                           ;Multi_RX_testjig_v2.c: 1107: print_screen("waiting  ", " for comms");
 10285  0717  30D7               	movlw	low (STR_167| (0+32768))
 10286  0718  00F4               	movwf	print_screen@top
 10287  0719  3092               	movlw	high (STR_167| (0+32768))
 10288  071A  00F5               	movwf	print_screen@top+1
 10289  071B  30B6               	movlw	low (STR_168| (0+32768))
 10290  071C  00F6               	movwf	print_screen@bottom
 10291  071D  3092               	movlw	high (STR_168| (0+32768))
 10292  071E  00F7               	movwf	print_screen@bottom+1
 10293  071F  318A  22D3  3180   	fcall	_print_screen
 10294  0722                     l475:	
 10295                           
 10296                           ;Multi_RX_testjig_v2.c: 1112: }
 10297                           ;Multi_RX_testjig_v2.c: 1114: testjig_done(1, device_type);
 10298  0722  0020               	movlb	0	; select bank0
 10299  0723  086D               	movf	main@device_type,w
 10300  0724  00F8               	movwf	testjig_done@device_type
 10301  0725  3001               	movlw	1
 10302  0726  3189  217D  3180   	fcall	_testjig_done
 10303                           
 10304                           ;Multi_RX_testjig_v2.c: 1124: testjig_done(1, device_type);
 10305  0729  0020               	movlb	0	; select bank0
 10306  072A  086D               	movf	main@device_type,w
 10307  072B  00F8               	movwf	testjig_done@device_type
 10308  072C  3001               	movlw	1
 10309  072D  3189  217D         	fcall	_testjig_done
 10310  072F  3180  28A1         	ljmp	start
 10311  0731                     __end_of_main:	


Data Sizes:
    Strings     1002
    Constant    0
    Data        2
    BSS         26
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80      0      28
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0

Pointer List with Targets:

    print_screen@bottom	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_204(CODE[17]), STR_202(CODE[13]), STR_200(CODE[13]), STR_198(CODE[13]), 
		 -> STR_196(CODE[13]), STR_194(CODE[14]), STR_192(CODE[14]), STR_190(CODE[14]), 
		 -> STR_188(CODE[14]), STR_186(CODE[8]), STR_184(CODE[8]), STR_182(CODE[9]), 
		 -> STR_180(CODE[9]), STR_178(CODE[9]), STR_176(CODE[14]), STR_174(CODE[14]), 
		 -> STR_172(CODE[14]), STR_170(CODE[14]), STR_168(CODE[11]), STR_166(CODE[13]), 
		 -> STR_162(CODE[10]), STR_158(CODE[2]), STR_154(CODE[2]), STR_146(CODE[16]), 
		 -> STR_144(CODE[15]), STR_142(CODE[7]), STR_140(CODE[10]), STR_126(CODE[5]), 
		 -> STR_124(CODE[9]), STR_112(CODE[4]), STR_90(CODE[3]), STR_88(CODE[1]), 
		 -> STR_66(CODE[3]), STR_64(CODE[1]), STR_52(CODE[5]), STR_50(CODE[1]), 
		 -> STR_44(CODE[6]), STR_38(CODE[18]), STR_34(CODE[6]), STR_32(CODE[9]), 
		 -> STR_30(CODE[13]), STR_28(CODE[1]), STR_6(CODE[1]), STR_2(CODE[17]), 

    print_screen@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_203(CODE[12]), STR_201(CODE[17]), STR_199(CODE[16]), STR_197(CODE[12]), 
		 -> STR_195(CODE[15]), STR_193(CODE[17]), STR_191(CODE[16]), STR_189(CODE[12]), 
		 -> STR_187(CODE[15]), STR_185(CODE[17]), STR_183(CODE[9]), STR_181(CODE[16]), 
		 -> STR_179(CODE[5]), STR_177(CODE[8]), STR_175(CODE[14]), STR_173(CODE[16]), 
		 -> STR_171(CODE[9]), STR_169(CODE[12]), STR_167(CODE[10]), STR_165(CODE[16]), 
		 -> STR_161(CODE[10]), STR_157(CODE[14]), STR_153(CODE[13]), STR_145(CODE[8]), 
		 -> STR_143(CODE[8]), STR_141(CODE[8]), STR_139(CODE[8]), STR_125(CODE[8]), 
		 -> STR_123(CODE[8]), STR_111(CODE[8]), STR_89(CODE[9]), STR_87(CODE[9]), 
		 -> STR_65(CODE[9]), STR_63(CODE[9]), STR_51(CODE[11]), STR_49(CODE[11]), 
		 -> STR_43(CODE[13]), STR_37(CODE[9]), STR_33(CODE[13]), STR_31(CODE[19]), 
		 -> STR_29(CODE[12]), STR_27(CODE[19]), STR_5(CODE[15]), STR_1(CODE[9]), 

    print_error@bottom	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_164(CODE[4]), STR_160(CODE[4]), STR_156(CODE[4]), STR_152(CODE[4]), 
		 -> STR_150(CODE[15]), STR_148(CODE[17]), STR_138(CODE[13]), STR_136(CODE[14]), 
		 -> STR_134(CODE[5]), STR_132(CODE[5]), STR_130(CODE[5]), STR_128(CODE[4]), 
		 -> STR_122(CODE[13]), STR_120(CODE[16]), STR_118(CODE[14]), STR_116(CODE[4]), 
		 -> STR_114(CODE[4]), STR_110(CODE[4]), STR_108(CODE[9]), STR_106(CODE[3]), 
		 -> STR_104(CODE[7]), STR_102(CODE[4]), STR_100(CODE[4]), STR_98(CODE[15]), 
		 -> STR_96(CODE[16]), STR_94(CODE[3]), STR_92(CODE[9]), STR_86(CODE[3]), 
		 -> STR_84(CODE[9]), STR_82(CODE[3]), STR_80(CODE[7]), STR_78(CODE[4]), 
		 -> STR_76(CODE[4]), STR_74(CODE[15]), STR_72(CODE[16]), STR_70(CODE[3]), 
		 -> STR_68(CODE[9]), STR_62(CODE[9]), STR_60(CODE[3]), STR_58(CODE[7]), 
		 -> STR_56(CODE[3]), STR_54(CODE[9]), STR_48(CODE[18]), STR_46(CODE[14]), 
		 -> STR_42(CODE[3]), STR_40(CODE[12]), STR_36(CODE[3]), STR_26(CODE[12]), 
		 -> STR_24(CODE[11]), STR_22(CODE[13]), STR_20(CODE[13]), STR_18(CODE[13]), 
		 -> STR_16(CODE[13]), STR_14(CODE[12]), STR_12(CODE[11]), STR_10(CODE[13]), 
		 -> STR_8(CODE[13]), STR_4(CODE[14]), 

    print_error@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_163(CODE[12]), STR_159(CODE[12]), STR_155(CODE[12]), STR_151(CODE[12]), 
		 -> STR_149(CODE[8]), STR_147(CODE[8]), STR_137(CODE[13]), STR_135(CODE[13]), 
		 -> STR_133(CODE[12]), STR_131(CODE[12]), STR_129(CODE[12]), STR_127(CODE[12]), 
		 -> STR_121(CODE[12]), STR_119(CODE[12]), STR_117(CODE[12]), STR_115(CODE[12]), 
		 -> STR_113(CODE[12]), STR_109(CODE[12]), STR_107(CODE[10]), STR_105(CODE[12]), 
		 -> STR_103(CODE[9]), STR_101(CODE[12]), STR_99(CODE[12]), STR_97(CODE[9]), 
		 -> STR_95(CODE[9]), STR_93(CODE[12]), STR_91(CODE[10]), STR_85(CODE[12]), 
		 -> STR_83(CODE[10]), STR_81(CODE[12]), STR_79(CODE[9]), STR_77(CODE[12]), 
		 -> STR_75(CODE[12]), STR_73(CODE[9]), STR_71(CODE[9]), STR_69(CODE[12]), 
		 -> STR_67(CODE[10]), STR_61(CODE[19]), STR_59(CODE[12]), STR_57(CODE[16]), 
		 -> STR_55(CODE[12]), STR_53(CODE[19]), STR_47(CODE[12]), STR_45(CODE[12]), 
		 -> STR_41(CODE[12]), STR_39(CODE[13]), STR_35(CODE[12]), STR_25(CODE[14]), 
		 -> STR_23(CODE[11]), STR_21(CODE[15]), STR_19(CODE[15]), STR_17(CODE[14]), 
		 -> STR_15(CODE[14]), STR_13(CODE[14]), STR_11(CODE[11]), STR_9(CODE[14]), 
		 -> STR_7(CODE[14]), STR_3(CODE[9]), 

    i2c_Write_string@data	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_204(CODE[17]), STR_203(CODE[12]), STR_202(CODE[13]), STR_201(CODE[17]), 
		 -> STR_200(CODE[13]), STR_199(CODE[16]), STR_198(CODE[13]), STR_197(CODE[12]), 
		 -> STR_196(CODE[13]), STR_195(CODE[15]), STR_194(CODE[14]), STR_193(CODE[17]), 
		 -> STR_192(CODE[14]), STR_191(CODE[16]), STR_190(CODE[14]), STR_189(CODE[12]), 
		 -> STR_188(CODE[14]), STR_187(CODE[15]), STR_186(CODE[8]), STR_185(CODE[17]), 
		 -> STR_184(CODE[8]), STR_183(CODE[9]), STR_182(CODE[9]), STR_181(CODE[16]), 
		 -> STR_180(CODE[9]), STR_179(CODE[5]), STR_178(CODE[9]), STR_177(CODE[8]), 
		 -> STR_176(CODE[14]), STR_175(CODE[14]), STR_174(CODE[14]), STR_173(CODE[16]), 
		 -> STR_172(CODE[14]), STR_171(CODE[9]), STR_170(CODE[14]), STR_169(CODE[12]), 
		 -> STR_168(CODE[11]), STR_167(CODE[10]), STR_166(CODE[13]), STR_165(CODE[16]), 
		 -> STR_164(CODE[4]), STR_163(CODE[12]), STR_162(CODE[10]), STR_161(CODE[10]), 
		 -> STR_160(CODE[4]), STR_159(CODE[12]), STR_158(CODE[2]), STR_157(CODE[14]), 
		 -> STR_156(CODE[4]), STR_155(CODE[12]), STR_154(CODE[2]), STR_153(CODE[13]), 
		 -> STR_152(CODE[4]), STR_151(CODE[12]), STR_150(CODE[15]), STR_149(CODE[8]), 
		 -> STR_148(CODE[17]), STR_147(CODE[8]), STR_146(CODE[16]), STR_145(CODE[8]), 
		 -> STR_144(CODE[15]), STR_143(CODE[8]), STR_142(CODE[7]), STR_141(CODE[8]), 
		 -> STR_140(CODE[10]), STR_139(CODE[8]), STR_138(CODE[13]), STR_137(CODE[13]), 
		 -> STR_136(CODE[14]), STR_135(CODE[13]), STR_134(CODE[5]), STR_133(CODE[12]), 
		 -> STR_132(CODE[5]), STR_131(CODE[12]), STR_130(CODE[5]), STR_129(CODE[12]), 
		 -> STR_128(CODE[4]), STR_127(CODE[12]), STR_126(CODE[5]), STR_125(CODE[8]), 
		 -> STR_124(CODE[9]), STR_123(CODE[8]), STR_122(CODE[13]), STR_121(CODE[12]), 
		 -> STR_120(CODE[16]), STR_119(CODE[12]), STR_118(CODE[14]), STR_117(CODE[12]), 
		 -> STR_116(CODE[4]), STR_115(CODE[12]), STR_114(CODE[4]), STR_113(CODE[12]), 
		 -> STR_112(CODE[4]), STR_111(CODE[8]), STR_110(CODE[4]), STR_109(CODE[12]), 
		 -> STR_108(CODE[9]), STR_107(CODE[10]), STR_106(CODE[3]), STR_105(CODE[12]), 
		 -> STR_104(CODE[7]), STR_103(CODE[9]), STR_102(CODE[4]), STR_101(CODE[12]), 
		 -> STR_100(CODE[4]), STR_99(CODE[12]), STR_98(CODE[15]), STR_97(CODE[9]), 
		 -> STR_96(CODE[16]), STR_95(CODE[9]), STR_94(CODE[3]), STR_93(CODE[12]), 
		 -> STR_92(CODE[9]), STR_91(CODE[10]), STR_90(CODE[3]), STR_89(CODE[9]), 
		 -> STR_88(CODE[1]), STR_87(CODE[9]), STR_86(CODE[3]), STR_85(CODE[12]), 
		 -> STR_84(CODE[9]), STR_83(CODE[10]), STR_82(CODE[3]), STR_81(CODE[12]), 
		 -> STR_80(CODE[7]), STR_79(CODE[9]), STR_78(CODE[4]), STR_77(CODE[12]), 
		 -> STR_76(CODE[4]), STR_75(CODE[12]), STR_74(CODE[15]), STR_73(CODE[9]), 
		 -> STR_72(CODE[16]), STR_71(CODE[9]), STR_70(CODE[3]), STR_69(CODE[12]), 
		 -> STR_68(CODE[9]), STR_67(CODE[10]), STR_66(CODE[3]), STR_65(CODE[9]), 
		 -> STR_64(CODE[1]), STR_63(CODE[9]), STR_62(CODE[9]), STR_61(CODE[19]), 
		 -> STR_60(CODE[3]), STR_59(CODE[12]), STR_58(CODE[7]), STR_57(CODE[16]), 
		 -> STR_56(CODE[3]), STR_55(CODE[12]), STR_54(CODE[9]), STR_53(CODE[19]), 
		 -> STR_52(CODE[5]), STR_51(CODE[11]), STR_50(CODE[1]), STR_49(CODE[11]), 
		 -> STR_48(CODE[18]), STR_47(CODE[12]), STR_46(CODE[14]), STR_45(CODE[12]), 
		 -> STR_44(CODE[6]), STR_43(CODE[13]), STR_42(CODE[3]), STR_41(CODE[12]), 
		 -> STR_40(CODE[12]), STR_39(CODE[13]), STR_38(CODE[18]), STR_37(CODE[9]), 
		 -> STR_36(CODE[3]), STR_35(CODE[12]), STR_34(CODE[6]), STR_33(CODE[13]), 
		 -> STR_32(CODE[9]), STR_31(CODE[19]), STR_30(CODE[13]), STR_29(CODE[12]), 
		 -> STR_28(CODE[1]), STR_27(CODE[19]), STR_26(CODE[12]), STR_25(CODE[14]), 
		 -> STR_24(CODE[11]), STR_23(CODE[11]), STR_22(CODE[13]), STR_21(CODE[15]), 
		 -> STR_20(CODE[13]), STR_19(CODE[15]), STR_18(CODE[13]), STR_17(CODE[14]), 
		 -> STR_16(CODE[13]), STR_15(CODE[14]), STR_14(CODE[12]), STR_13(CODE[14]), 
		 -> STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[13]), STR_9(CODE[14]), 
		 -> STR_8(CODE[13]), STR_7(CODE[14]), STR_6(CODE[1]), STR_5(CODE[15]), 
		 -> STR_4(CODE[14]), STR_3(CODE[9]), STR_2(CODE[17]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _testjig_done->_print_screen
    _print_error->_print_screen
    _print_screen->_i2c_Write_string
    _i2c_second_line->_i2c_Write
    _i2c_first_line->_i2c_Write
    _i2c_Write_string->_i2c_Write
    _clear_lcd->_i2c_Write
    _ten_thou_conv->___wmul
    _lcd_set_cursor->_i2c_Write
    _i2c_write_char->_i2c_Write
    _init_i2c_lcd_5v->_i2c_Write
    _get_30v_current->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl
    _Vout_set->_digitalpot
    _digitalpot->_i2c_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_print_int
    _lcd_print_int->_get_30v_current
    _get_30v_current->___fltol
    ___fltol->___fladd
    ___fladd->___flmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   42039
                                             65 BANK0     14    14      0
                        _ADC_get_val
                             _RX_one
                     _RX_one_timeout
                             _TX_one
                           _Vout_set
                      _debug_fast_tx
                    _get_30v_current
                           _init_ADC
                  _init_current_sink
                           _init_i2c
                    _init_i2c_lcd_5v
                      _lcd_print_int
                   _power_supply_set
                        _print_error
                       _print_screen
                       _testjig_done
 ---------------------------------------------------------------------------------
 (1) _testjig_done                                         5     4      1    7384
                                              8 COMMON     5     4      1
                           _buzz_one
                      _debug_fast_tx
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (1) _print_error                                          7     3      4   14739
                                              8 COMMON     4     0      4
                                              0 BANK0      3     3      0
                           _buzz_one
                          _clear_lcd
                      _debug_fast_tx
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (2) _print_screen                                         4     0      4    6065
                                              4 COMMON     4     0      4
                          _clear_lcd
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
 ---------------------------------------------------------------------------------
 (3) _i2c_second_line                                      1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_first_line                                       1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write_string                                     3     1      2     323
                                              1 COMMON     3     1      2
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _clear_lcd                                            2     2      0      22
                                              1 COMMON     2     2      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _power_supply_set                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _debug_fast_tx                                        3     1      2     581
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _buzz_one                                             2     0      2     214
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd_print_int                                        6     0      6    5373
                                             59 BANK0      6     0      6
                        _ADC_get_val (ARG)
                    _get_30v_current (ARG)
                     _i2c_write_char
                     _lcd_set_cursor
                      _ten_thou_conv
 ---------------------------------------------------------------------------------
 (2) _ten_thou_conv                                        5     3      2    2091
                                              6 COMMON     5     3      2
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     910
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1    1029
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       3     2      1     158
                                              1 COMMON     3     2      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_write_char                                       1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c_lcd_5v                                      4     3      1     152
                                              1 COMMON     4     3      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init_current_sink                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_30v_current                                      4     2      2    5529
                                             55 BANK0      4     2      2
                        _ADC_get_val
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     386
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     293
                                             45 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2565
                                              0 BANK0     25    17      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            8     5      3     989
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2194
                                             25 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_get_val                                          6     3      3      46
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Vout_set                                             6     4      2     349
                                              4 COMMON     6     4      2
                         _digitalpot
 ---------------------------------------------------------------------------------
 (2) _digitalpot                                           3     3      0      44
                                              1 COMMON     3     3      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (4) _i2c_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TX_one                                               3     3      0      69
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one_timeout                                       3     3      0      93
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one                                               3     3      0      93
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_get_val
   _RX_one
   _RX_one_timeout
   _TX_one
   _Vout_set
     _digitalpot
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _debug_fast_tx
   _get_30v_current
     _ADC_get_val
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _init_ADC
   _init_current_sink
   _init_i2c
   _init_i2c_lcd_5v
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _lcd_print_int
     _ADC_get_val (ARG)
     _get_30v_current (ARG)
       _ADC_get_val
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _i2c_write_char (ARG)
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _lcd_set_cursor (ARG)
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _ten_thou_conv (ARG)
       ___bmul
       ___wmul
   _power_supply_set
   _print_error
     _buzz_one
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _debug_fast_tx
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
   _print_screen
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _testjig_done
     _buzz_one
     _debug_fast_tx
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      1C       7       35.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0      7A      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      7A      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Feb 27 14:38:59 2019

         _motor_direction_timer 00AA             ??_init_current_sink 0070                     main@RX_data 006E  
                             pc 0002                  ___bmul@product 0071                     __CFG_CP$OFF 0000  
              _power_supply_set 0BF3             ___wmul@multiplicand 0072                      TX_one@data 0071  
           __Umul8_16@word_mpld 0076                             l311 162D                             l304 1576  
                           l510 0A65                             l407 0399                             l530 0BE3  
                           l426 04A3                             l346 0169                             l435 0542  
                           l710 0BF9                             l382 0274                             l711 0BFE  
                           l519 0A96                             l536 0BD8                             l712 0C03  
                           l448 05AD                             l545 0BE8                             l561 0BC2  
                           l475 0722                             l708 0BF5                             l484 097E  
                           l396 031E                             l733 0AB3                             l493 09D3  
                           l726 08C6                             l478 0714                             l743 07B3  
                           l760 07A0                             l761 07A2                             l753 078F  
                           l657 096C                             l746 07BE                             l738 07E6  
                           l748 07C5                             l749 07C7                             l758 0799  
                           l698 0C63                             _GIE 005F                             _RA2 0062  
                           _RA4 0064                             _RA5 0065               ??_i2c_second_line 0071  
                           _RE0 0080                             _RF0 1460                             _RF1 1461  
                           _RF2 1462                             _RE4 0084                             _RG1 1469  
                           _RF3 1463                             _RE5 0085                             _RE6 0086  
                           _RG3 146B                             _RF5 1465                             _PR2 001B  
                           _PR8 0596                             _isr 0004                             _ten 00B6  
                  __CFG_BORV$HI 0000                             wreg 0009                  ?_lcd_print_int 005B  
                  ___flmul@aexp 002D                    ___flmul@bexp 0032                    ___flmul@sign 002C  
                  ___flmul@temp 0037                    ___flmul@prod 0033                            S4906 080C  
       __size_of_i2c_write_char 000D                 ?_lcd_set_cursor 0071                    __CFG_LVP$OFF 0000  
     __end_of_init_current_sink 08A7                    ___fltol@exp1 0056                            l1000 0C83  
                          l1001 0C81                            l1011 0D03                            l1013 0CF0  
                          l1005 0C9E                            l1022 0D1E                            l1014 0CF6  
                          l1006 0C9C                            l1023 0D1F                            l1015 0CF7  
                          l1033 0D89                            l1122 0FA9                            l1115 0F38  
                          l1028 0D70                            l1135 0FDB                            l1048 0DBB  
                          l1147 0F87                            l1093 0DD4                            l1094 0DD2  
                          l3102 14D1                            l3200 0F6F                            l1097 0DEA  
                          l3050 0BDA                            l1098 0DE8                            l3106 14D7  
                          l4012 078A                            l3212 0F7F                            l4014 0792  
                          l3054 0BE6                            l3206 0F77                            l3056 0B82  
                          l3234 0ABA                            l3242 0C08                            l3066 0B8A  
                          l4202 1568                            l3500 0D68                            l3068 0B9C  
                          l4220 15C7                            l4212 15BC                            l3182 0F57  
                          l3350 0740                            l4214 15A2                            l3520 0D8F  
                          l3176 0F4F                            l3352 0745                            l4320 17CF  
                          l4224 15DA                            l3530 0D9A                            l3514 0D8A  
                          l3506 0D7E                            l3194 0F67                            l3370 0768  
                          l3290 08EF                            l4410 01C7                            l3428 0CAA  
                          l3188 0F5F                            l3292 08F1                            l4404 01AD  
                          l4316 17B6                            l4244 167B                            l4236 161D  
                          l4228 15ED                            l3550 0DB7                            l3542 0DAB  
                          l3526 0D98                            l3518 0D8D                            l3366 0761  
                          l3710 0FD0                            l4342 00B4                            l4270 16C8  
                          l4246 164B                            l3472 0CFE                            l3640 0EDD  
                          l3376 076C                            l3704 0FCB                            l4600 03ED  
                          l4520 02D8                            l4408 01B6                            l4256 1686  
                          l3554 0DBC                            l3490 0D27                            l3458 0CC8  
                          l3650 0EF2                            l3378 0775                            l3722 0FF7  
                          l3714 0FE4                            l4602 03F5                            l4610 0415  
                          l4522 02E0                            l4530 02FB                            l4362 0132  
                          l4354 00F9                            l4290 1739                            l4282 170E  
                          l4274 16DB                            l3900 08C1                            l3660 0F04  
                          l3708 0FD9                            l4604 03FD                            l4612 041D  
                          l4516 02C8                            l4532 0303                            l4620 0440  
                          l4452 01F3                            l3902 08C3                            l3478 0D0D  
                          l3670 0F2A                            l3646 0EF0                            l3822 0A05  
                          l3814 09F1                            l3830 0A35                            l4606 0405  
                          l4614 0425                            l4518 02D0                            l4526 02EB  
                          l4534 030B                            l4366 013B                            l4358 010C  
                          l4294 1749                            l3664 0F17                            l3592 0DF8  
                          l3576 0DD8                            l3808 09E3                            l3832 0A3D  
                          l4800 068F                            l4624 0449                            l4608 040D  
                          l4616 042D                            l4528 02F3                            l4536 0313  
                          l4448 01EB                            l4376 015A                            l3906 08CB  
                          l3842 0A53                            l3818 09F9                            l4714 059B  
                          l4650 0494                            l4642 047C                            l4570 0391  
                          l4618 0435                            l3908 08DB                            l3588 0DEE  
                          l3692 0FB4                            l3924 0C5B                            l3764 0BBB  
                          l3940 0912                            l4820 06C7                            l4724 058B  
                          l4708 0574                            l4484 026F                            l3950 0924  
                          l3862 0A8C                            l3854 0A7C                            l3846 0A5B  
                          l3838 0A4B                            l4830 06E9                            l4806 069C  
                          l4734 05B1                            l4646 0488                            l4638 0471  
                          l4486 026C                            l4398 019A                            l3696 0FB6  
                          l3688 0FA1                            l3952 0928                            l3944 0918  
                          l3936 090C                            l3792 09A5                            l3784 0995  
                          l4816 06BE                            l4752 05E5                            l4744 05C6  
                          l4568 0394                            l3698 0FC0                            l3938 090F  
                          l3882 0B0C                            l3858 0A84                            l4770 0627  
                          l4682 0501                            l4674 04EA                            l4908 08D0  
                          l3796 09AD                            l3788 099D                            l4836 06F6  
                          l3974 094D                            l3966 0940                            l3958 0931  
                          l4782 0651                            l4774 0635                            l4694 0533  
                          l4686 050D                            l4678 04F5                            l3984 095F  
                          l3968 0944                            l3898 08BF                            l3986 0963  
                          l4786 065D                            l4778 0645                            l4788 0668  
                          ?_isr 0070                            STR_1 135B                            STR_2 107D  
                          STR_3 135B                            STR_4 1175                            STR_5 10FF  
                          STR_6 10AE                            STR_7 11AD                            STR_8 11FD  
                          STR_9 11AD                            u3205 074E                            u3135 13F7  
                          u3080 0AB8                            u3145 1406                            u3155 1415  
                          u3165 1431                            u4310 07EB                            u3175 145D  
                          u3185 1484                            u3370 0CE7                            u4324 07ED  
                          u3380 0CE8                            u3365 0CDC                            u6007 03C0  
                          u3473 0D39                            u6017 03D8                            u6107 09C8  
                          u6027 04BB                            u6117 09DC                            u6037 0524  
                          u3815 0F0D                            u6207 0B64                            u6127 0A15  
                          u6047 0554                            u3825 0F21                            u6217 0BCF  
                          u6137 0A2B                            u5505 0633                            u6057 0581  
                          u5425 0572                            u6307 07B9                            u6227 08AE  
                          u6147 0A6E                            u6067 0591                            u6317 07CB  
                          u6237 0B7C                            u6157 0A9F                            u6077 05DC  
                          u6327 07D6                            u6247 07E2                            u6167 0B25  
                          u6087 061B                            u6257 07F0                            u6177 0B3C  
                          u6097 070E                            u6267 07FD                            u6187 0AF1  
                          u5707 1592                            u6277 0794                            u6197 0B51  
                          u5717 160E                            u6287 07A6                            u5807 17AF  
                          u5727 163E                            u6297 07AF                            u5817 17C8  
                          u5737 16B0                            u5907 0247                            u5827 17D8  
                          u5747 16FF                            u5917 025F                            u5837 17E7  
                          u5757 172A                            u5677 1542                            u5927 0288  
                          u5847 00DB                            u5767 1764                            u5687 1551  
                          u5937 029B                            u5857 012B                            u5777 177F  
                          u5697 155C                            u5947 02B3                            u5867 01D2  
                          u5787 178E                            u5957 0338                            u5877 01E4  
                          u5797 179E                            u5967 0350                            u5887 0213  
                          u5977 036C                            u5897 022B                            u5987 0384  
                          u5997 03AD                            _TMR0 0015                            _WPUB 020D  
                          _WPUD 020F                            _WPUE 0210                    __CFG_WRT$OFF 0000  
                          _main 14E4                            _hund 00B4                            _thou 00B8  
                          fsr0h 0005                            fsr0l 0004                            indf0 0000  
                          _unit 00B7                            btemp 007E               ??_get_30v_current 007E  
                 __CFG_BOREN$ON 0000                            ltemp 007E                            start 00A1  
                          ttemp 007E                            wtemp 007E                ??_RX_one_timeout 0070  
                 __CFG_IESO$OFF 0000         i2c_write_char@char_data 0071               ___bmul@multiplier 0072  
                 __CFG_MCLRE$ON 0000                 digitalpot@value 0073            __size_of_ADC_get_val 0012  
       __end_of_init_i2c_lcd_5v 0BD5                           ??_isr 0070                  _i2c_first_line 0B44  
                 ___fltol@sign1 0055                 __end_of___fladd 0DC1                           ?_main 0070  
                         STR_10 11E3                           STR_11 114E                           STR_20 11FD  
                         STR_12 12AB                           STR_21 114A                           STR_13 11AD  
                         STR_22 11E3                           STR_30 1019                           STR_14 1293  
                         STR_31 1013                           STR_23 12CC                           STR_15 11BB  
                         STR_16 11FD                           STR_24 12AB                           STR_32 1364  
                         STR_40 1257                           STR_41 1287                           STR_25 11BB  
                         STR_17 11BB                           STR_33 1217                           STR_50 10AE  
                         STR_42 132B                           STR_18 11E3                           STR_26 1293  
                         STR_34 12BB                           STR_35 1287                           STR_43 11C9  
                         STR_19 114A                           STR_27 1013                           STR_28 10AE  
                         STR_36 1322                           STR_44 1269                           STR_60 13D5  
                         STR_37 1313                           STR_29 127B                           STR_45 1263  
                         STR_53 1000                           STR_70 13D8                           STR_54 1325  
                         STR_62 131C                           STR_46 1167                           STR_38 1026  
                         STR_47 1263                           STR_71 1349                           STR_63 132E  
                         STR_39 1224                           STR_64 10AE                           STR_80 12AF  
                         STR_56 13D2                           STR_72 10EF                           STR_48 1038  
                         STR_65 132E                           STR_73 1349                           STR_81 1287  
                         STR_49 12C1                           STR_57 10BF                           STR_90 13E7  
                         STR_66 13E7                           STR_82 13DB                           STR_74 112C  
                         STR_83 12EB                           STR_75 1287                           STR_91 12F5  
                         STR_67 12EB                           STR_84 131C                           STR_92 1325  
                         STR_68 1325                           STR_76 13C2                           STR_93 1287  
                         STR_85 1287                           STR_77 1287                           STR_69 1287  
                         STR_94 13E1                           STR_86 13DE                           STR_78 13CA  
                         STR_79 1349                           STR_95 1352                           STR_87 1337  
                         STR_88 10AE                           STR_96 10EF                 __end_of___flmul 0F43  
                         STR_89 1337                           STR_97 1352                           STR_98 112C  
                         STR_99 1287                 __end_of___fltol 0784                           _T2CON 001C  
                         _LATC2 0872                           _LATA6 0866                           _LATB5 086D  
                         _LATA7 0867                           _LATD2 087A                           _LATC5 0875  
                         _LATD4 087C                           _LATC6 0876                           _LATD5 087D  
                         _LATC7 0877                           _LATG0 1C68                           _LATD6 087E  
                         _LATF4 1C64           __end_of_debug_fast_tx 0AD3                           _T8CON 0597  
                         i1l300 009F                           i1l282 0033                           i1l274 0012  
                         i1l292 0066                           i1l276 001D                           i1l293 006A  
                         i1l285 0043                           i1l295 0085                           i1l289 005D  
                         _PORTA 000C                           _PORTB 000D                           _PORTC 000E  
                         _PORTD 000F                           _PORTE 0010                           _PORTF 028C  
                         _PORTG 028D                    main@mem_size 0066                           _TRISA 008C  
                         _TRISB 008D                           _TRISC 008E                           _TRISD 008F  
                         _TRISE 0090                           _TRISF 030C                           _TRISG 030D  
                 __CFG_PWRTE$ON 0000                  __CFG_FCMEN$OFF 0000              _current_sink_timer 00A8  
      __end_of_i2c_Write_string 0B9D                           main@i 006B                           main@j 0068  
                  main@response 006A                           ltemp0 007E                           ltemp1 0082  
                         ltemp2 0086                           ltemp3 0080                           ttemp0 007E  
                         ttemp1 0081                           ttemp2 0084                           ttemp3 0087  
                         ttemp4 007F                           status 0003                           wtemp0 007E  
                         wtemp1 0080                           wtemp2 0082                           wtemp3 0084  
                         wtemp4 0086                           wtemp5 0088                           wtemp6 007F  
               __initialization 00A3      lcd_set_cursor@LCD_position 0073                    __end_of_main 0731  
        __end_of_i2c_first_line 0B55                __end_of_i2c_Stop 0BEB                  __CFG_LPBOR$OFF 0000  
                        ??_main 0061                 ??_lcd_print_int 007E             lcd_print_int@number 005B  
                        _ADCON0 009D                          _ADCON1 009E                          i1S4910 0800  
                        STR_100 13CE                          STR_101 1287                          STR_102 13C6  
                        STR_110 13A2                          STR_103 1352                          STR_111 1386  
                        STR_112 1253                          STR_200 120A                          STR_104 12AF  
                        STR_120 10CF                          STR_121 124B                          STR_201 104A  
                        STR_113 1287                          STR_105 1287                          STR_202 120A  
                        STR_106 13E4                          STR_114 13A6                          STR_130 1393  
                        STR_122 123E                          _ADRESH 009C                          STR_107 12F5  
                        STR_123 1386                          STR_203 120B                          STR_131 1287  
                        STR_115 1287                          STR_108 131C                          STR_116 13AA  
                        STR_132 1398                          STR_124 1340                          STR_140 12FF  
                        STR_204 108E                          STR_141 1386                          STR_125 1386  
                        STR_133 1287                          STR_109 1287                          STR_117 124B  
                        STR_126 11F8                          STR_142 1116                          STR_134 139D  
                        STR_118 1191                          STR_150 110E                          _ADRESL 009B  
                        STR_119 124B                          STR_143 1386                          STR_151 1287  
                        STR_127 1287                          STR_135 11F0                          STR_136 1191  
                        STR_160 13BA                          STR_152 13B2                          STR_128 13AE  
                        STR_144 113B                          STR_145 1386                          STR_137 11F0  
                        STR_129 1287                          STR_161 12E1                          STR_153 11D6  
                        STR_154 10AD                          STR_138 123E                          STR_162 1309  
                        STR_170 1183                          STR_146 10AF                          STR_147 1386  
                        STR_139 1386                          STR_163 1287                          STR_155 1287  
                        STR_171 136D                          STR_172 1183                          STR_180 1272  
                        STR_156 13BE                          STR_164 13B6                          STR_148 105B  
                        STR_149 1386                          STR_181 10DF                          STR_157 1159  
                        STR_173 10DF                          STR_165 109F                          STR_158 10AD  
                        STR_190 1175                          STR_174 1183                          STR_182 1272  
                        STR_166 1231                          STR_183 135B                          STR_159 1287  
                        STR_191 10DF                          STR_167 12D7                          STR_175 119F  
                        STR_192 1175                          STR_176 1183                          STR_184 1273  
                        STR_168 12B6                          STR_177 1376                          STR_169 129F  
                        STR_185 106C                          STR_193 104A                          STR_194 1175  
                        STR_178 1272                          STR_186 137E                          STR_195 111D  
                        STR_179 138E                          STR_187 111D                          STR_188 1175  
                        STR_196 120A                          STR_197 126F                          STR_189 126F  
                        STR_198 120A                          STR_199 10DF      __size_of_init_current_sink 0015  
                        _CCPR9L 061A                          _ANSELA 018C                          _ANSELB 018D  
                        _ANSELD 018F                          _ANSELE 0190                          _ANSELF 040C  
                        _ANSELG 040D              __size_of_i2c_Start 0005                          i1l4102 0071  
                        i1l4112 0091                          i1l4104 007B                          i1l4114 0095  
                        i1l4108 0087                          i1l4118 009D                          i1l4062 0014  
                        i1l4070 0026                          i1l4090 0052                          i1l4068 0025  
                        i1l4078 003C                          i1l4096 0061                          i1l4088 0050  
            __size_of_i2c_Write 000C                          _FVRCON 0117                __end_of_Vout_set 08DD  
                        _OSCCON 0099                          _TMR0IE 005D                          _TMR0IF 005A  
                        _TRISC3 0473                          _TRISC4 0474                          _TRISG0 1868  
              __end_of___xxtofl 1000               print_error@bottom 007A                          _RX_one 07B3  
                        _TX_one 07DA             _current_sink_stable 00A6                          ___bmul 14AC  
               ?_i2c_first_line 0070                       ??___fladd 0041                          ___wmul 14CF  
                __CFG_STVREN$ON 0000                       ??___flmul 0028                       ??___fltol 0051  
              __end_of_init_ADC 0892                ?_init_i2c_lcd_5v 0071                __end_of_init_i2c 08BE  
              __end_of_buzz_one 0BF3                _ADC_cur_sink_val 00A0                   i2c_Write@data 0070  
            __size_of__Umul8_16 0049                  _i2c_write_char 0970               debug_fast_tx@data 0070  
      __end_of_power_supply_set 0C13                    ___xxtofl@arg 007A                    ___xxtofl@exp 0079  
                  ___xxtofl@val 0070                    ?_print_error 0078         __end_of__initialization 00B0  
                    ___fltol@f1 004D             ___bmul@multiplicand 0070                 _i2c_second_line 0AE4  
                __pcstackCOMMON 0070                    __pidataBANK1 0000                  print_error@top 0078  
         __end_of_ten_thou_conv 14AC               __end_of_i2c_Start 0BE6               __end_of_i2c_Write 0BE1  
            __size_of_clear_lcd 0015                ??_lcd_set_cursor 0072          __end_of_i2c_write_char 097D  
               _get_30v_current 0C13            i2c_Write_string@data 0071            lcd_print_int@decimal 005F  
              _one_second_timer 00B9                      __pbssBANK0 006F                      __pbssBANK1 00A0  
                     ?_i2c_Stop 0070     lcd_print_int@ten_thou_digit 0060                         ?_RX_one 0070  
            ADC_get_val@channel 0073                         ?_TX_one 0070               __end_of__Umul8_16 0F8C  
                    __pmaintext 14E4                         ?___bmul 0070                         ?___wmul 0070  
                    __pintentry 0004                      _digitalpot 0B6A                         _CCP9CON 061C  
                     ?_Vout_set 0074                 ?_i2c_write_char 0070                       ?___xxtofl 0070  
                       _SSP1ADD 0212                         _SSP1BUF 0211               ?_i2c_Write_string 0071  
                       RX_one@i 0071                         TX_one@i 0072              ??_i2c_Write_string 0073  
                    ??_i2c_Stop 0070                       ?_init_ADC 0070         __end_of_i2c_second_line 0AF5  
                     ?_init_i2c 0070               __end_of_clear_lcd 0B6A                       ?_buzz_one 0070  
                 ??_ADC_get_val 0073                 __size_of_RX_one 0027                 __size_of_TX_one 0026  
               __size_of___bmul 0023                         ___fladd 0C70                         ___flmul 0DC1  
                       ___fltol 0731                 __size_of___wmul 0015         __end_of_get_30v_current 0C5E  
                       __ptext1 097D                         __ptext2 0AF5                         __ptext3 0AD3  
                       __ptext4 0AE4                         __ptext5 0B44                         __ptext6 0B82  
                       __ptext7 0B55                         __ptext8 0BF3                         __ptext9 0AA6  
                    ??_Vout_set 0076                    __size_of_isr 009D                      ??___xxtofl 0074  
                    _buzz_timer 00A2  init_i2c_lcd_5v@single1_double2 0071                         clrloop0 0886  
          end_of_initialization 00B0                      ??_init_ADC 0070                      ??_init_i2c 0070  
                    ??_buzz_one 0072                ??_i2c_first_line 0071            __size_of_print_error 004F  
        __size_of_debug_fast_tx 002D                         psplit$0 C0034                         psplit$1 340035  
                  __pstringtext 1000                     ?_digitalpot 0070             __end_of_ADC_get_val 0C70  
            RX_one_timeout@data 0072         __size_of_RX_one_timeout 002F                     ___fladd@grs 004C  
              __CFG_FOSC$INTOSC 0000           __end_of_lcd_print_int 0970                   ___xxtofl@sign 0078  
                 ?_print_screen 0074            pnum$maintext_split_1 0034            pnum$maintext_split_2 0035  
                 ?_testjig_done 0078                     ___flmul@grs 002E               ?_power_supply_set 0070  
              ?_i2c_second_line 0070              ??_power_supply_set 0070                  ten_thou_conv@n 0076  
                __end_of_RX_one 07DA                  __end_of_TX_one 0800                  __end_of___bmul 14CF  
                __end_of___wmul 14E4                    buzz_one@time 0070                ?_get_30v_current 0057  
                 _debug_fast_tx 0AA6                       _i2c_Start 0BE1                       _i2c_Write 0BD5  
           start_initialization 00A3        __size_of_init_i2c_lcd_5v 0038                  ??_print_screen 0078  
                   __end_of_isr 00A1                  ??_testjig_done 0079             __size_of_digitalpot 0018  
             __size_of_i2c_Stop 0005                 print_screen@top 0074                        ??_RX_one 0070  
                      ??_TX_one 0070                     _ADC_get_val 0C5E         testjig_done@device_type 0078  
                      ??___bmul 0071                        ??___wmul 0074                       __Umul8_16 0F43  
                   __pdataBANK1 00B9                ??_i2c_write_char 0071                       ___fladd@a 003D  
                     ___fladd@b 0039                  ?_debug_fast_tx 0070                      ?_i2c_Start 0070  
                    ?_i2c_Write 0070                       ___flmul@a 0024                       ___flmul@b 0020  
             __size_of_Vout_set 001F                       ___latbits 0003                 main@device_type 006D  
                 __pcstackBANK0 0020              _pickit_red_counter 00B5               __size_of___xxtofl 0074  
              lcd_print_int@pos 005D          __size_of_ten_thou_conv 00C0                       __pnvBANK1 00BB  
             __size_of_init_ADC 0007               __size_of_init_i2c 0017                       _clear_lcd 0B55  
             __size_of_buzz_one 0008       __size_of_i2c_Write_string 001B                        ?___fladd 0039  
                      ?___flmul 0020                        ?___fltol 004D                      ?__Umul8_16 0070  
                _RX_one_timeout 0784                       __pswtext1 080C                       __pswtext2 0800  
                      _CCPTMRS2 029F                __CFG_WDTE$SWDTEN 0000               ??_init_i2c_lcd_5v 0072  
       __size_of_lcd_set_cursor 0018                  ___wmul@product 0074                       clear_ram0 0885  
                      _PIE1bits 0091                        _PCONbits 0096                        _PIR1bits 0011  
                    ?_clear_lcd 0070            __end_of_print_screen 0AE4              print_screen@bottom 0076  
                      _SSP1CON1 0215                        _SSP1CON2 0216            __end_of_testjig_done 0AA6  
        __end_of_RX_one_timeout 07B3                    ??_digitalpot 0071                        _SSP1STAT 0214  
                  _pickit_timer 00AC                    _pickit_state 00BB                   _ten_thou_conv 13EC  
               ??_debug_fast_tx 0072                      _ADCON0bits 009D               ___wmul@multiplier 0070  
                   ??_i2c_Start 0070                     ??_i2c_Write 0070                  debug_fast_tx@i 0072  
             testjig_done@state 007C                        _i2c_Stop 0BE6                   ??_print_error 0020  
            __end_of_digitalpot 0B82           ADC_get_val@return_val 0074                   Vout_set@Volts 0074  
               ?_RX_one_timeout 0070                     ??__Umul8_16 0073                 RX_one_timeout@i 0071  
                  pnum$maintext 000C                __size_of___fladd 0151                  ?_ten_thou_conv 0076  
              __size_of___flmul 0182                __size_of___fltol 0053       __size_of_power_supply_set 0020  
                      _Vout_set 08BE         init_i2c_lcd_5v@contrast 0074               Vout_set@digi_step 0076  
                      ___xxtofl 0F8C                        __ptext10 0BEB                        __ptext11 08F5  
                      __ptext20 088B                        __ptext12 13EC                        __ptext21 0C13  
                      __ptext13 14CF                        __ptext30 0BD5                        __ptext22 0F8C  
                      __ptext14 14AC                        __ptext31 0BE6                        __ptext23 0731  
                      __ptext15 08DD                        __ptext32 0BE1                        __ptext24 0DC1  
                      __ptext16 0970                        __ptext33 07DA                        __ptext25 0F43  
                      __ptext17 0B9D                        __ptext34 0784                        __ptext26 0C70  
                      __ptext18 08A7                        __ptext35 07B3                        __ptext27 0C5E  
                      __ptext19 0892                        __ptext28 08BE                        __ptext29 0B6A  
                  _SSP1CON2bits 0216                        _init_ADC 088B                        _init_i2c 08A7  
                 __size_of_main F24D                        _buzz_one 0BEB                    ?_ADC_get_val 0070  
                   ??_clear_lcd 0071             __end_of_print_error 0B44                _i2c_Write_string 0B82  
                      _ten_thou 006F                        _tj_timer 00B0          __size_of_lcd_print_int 007B  
      __size_of_i2c_second_line 0011                        int$flags 007E                    _SSP1STATbits 0214  
                      main@temp 0064         __size_of_i2c_first_line 0011              _uart_receive_timer 00B2  
           get_30v_current@temp 0059                      _INTCONbits 000B        __size_of_get_30v_current 004B  
                      intlevel1 0000                  _lcd_set_cursor 08DD               lcd_set_cursor@col 0071  
             lcd_set_cursor@row 0072           __size_of_print_screen 0011               __CFG_CLKOUTEN$OFF 0000  
         __size_of_testjig_done 0129          power_supply_set@supply 0070                 ??_ten_thou_conv 0078  
        __Umul8_16@multiplicand 0070                      _OPTION_REG 0095                   _testjig_timer 00AE  
               _init_i2c_lcd_5v 0B9D                   _lcd_print_int 08F5                 _curent_sink_val 00A4  
                  _print_screen 0AD3          __end_of_lcd_set_cursor 08F5                   ___fladd@signs 0049  
                  _testjig_done 097D               _init_current_sink 0892                      RX_one@data 0072  
                   _print_error 0AF5                    ___fladd@aexp 004A                    ___fladd@bexp 004B  
          __Umul8_16@multiplier 0075              ?_init_current_sink 0070               __Umul8_16@product 0073  
