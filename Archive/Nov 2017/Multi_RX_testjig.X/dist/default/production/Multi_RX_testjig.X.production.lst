

Microchip Technology PIC PRO Macro Assembler V1.38 build -256452561 
                                                                                               Wed Nov 15 14:06:15 2017

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	stringtext,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	text12,local,class=CODE,merge=1,delta=2
    17                           	psect	text18,local,class=CODE,merge=1,delta=2
    18                           	psect	text19,local,class=CODE,merge=1,delta=2
    19                           	psect	text20,local,class=CODE,merge=1,delta=2
    20                           	psect	text21,local,class=CODE,merge=1,delta=2
    21                           	psect	text28,local,class=CODE,merge=1,delta=2
    22                           	psect	swtext2,local,class=CONST,delta=2
    23                           	psect	text33,local,class=CODE,merge=1,delta=2
    24                           	psect	text34,local,class=CODE,merge=1,delta=2
    25                           	psect	text35,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	swtext3,local,class=CONST,delta=2
    28                           	psect	pa_nodes,global,class=CODE,delta=2
    29                           	psect	maintext_split_1,global,class=CODE,merge=1,split=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     	;# 
    32  0001                     	;# 
    33  0002                     	;# 
    34  0003                     	;# 
    35  0004                     	;# 
    36  0005                     	;# 
    37  0006                     	;# 
    38  0007                     	;# 
    39  0008                     	;# 
    40  0009                     	;# 
    41  000A                     	;# 
    42  000B                     	;# 
    43  000C                     	;# 
    44  000D                     	;# 
    45  000E                     	;# 
    46  000F                     	;# 
    47  0010                     	;# 
    48  0011                     	;# 
    49  0012                     	;# 
    50  0013                     	;# 
    51  0014                     	;# 
    52  0015                     	;# 
    53  0016                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  001A                     	;# 
    59  001B                     	;# 
    60  001C                     	;# 
    61  008C                     	;# 
    62  008D                     	;# 
    63  008E                     	;# 
    64  008F                     	;# 
    65  0090                     	;# 
    66  0091                     	;# 
    67  0092                     	;# 
    68  0093                     	;# 
    69  0094                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0097                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009B                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  010C                     	;# 
    81  010D                     	;# 
    82  010E                     	;# 
    83  010F                     	;# 
    84  0110                     	;# 
    85  0116                     	;# 
    86  0117                     	;# 
    87  011D                     	;# 
    88  018C                     	;# 
    89  018D                     	;# 
    90  018F                     	;# 
    91  0190                     	;# 
    92  0191                     	;# 
    93  0191                     	;# 
    94  0192                     	;# 
    95  0193                     	;# 
    96  0193                     	;# 
    97  0194                     	;# 
    98  0195                     	;# 
    99  0196                     	;# 
   100  0197                     	;# 
   101  0199                     	;# 
   102  0199                     	;# 
   103  0199                     	;# 
   104  019A                     	;# 
   105  019A                     	;# 
   106  019A                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019B                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019C                     	;# 
   113  019C                     	;# 
   114  019C                     	;# 
   115  019D                     	;# 
   116  019D                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019E                     	;# 
   120  019E                     	;# 
   121  019F                     	;# 
   122  019F                     	;# 
   123  019F                     	;# 
   124  020D                     	;# 
   125  020F                     	;# 
   126  0210                     	;# 
   127  0211                     	;# 
   128  0211                     	;# 
   129  0212                     	;# 
   130  0212                     	;# 
   131  0213                     	;# 
   132  0213                     	;# 
   133  0214                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  0219                     	;# 
   143  021A                     	;# 
   144  021B                     	;# 
   145  021C                     	;# 
   146  021D                     	;# 
   147  021E                     	;# 
   148  021F                     	;# 
   149  028C                     	;# 
   150  028D                     	;# 
   151  0291                     	;# 
   152  0291                     	;# 
   153  0292                     	;# 
   154  0293                     	;# 
   155  0298                     	;# 
   156  0298                     	;# 
   157  0299                     	;# 
   158  029A                     	;# 
   159  029D                     	;# 
   160  029E                     	;# 
   161  029F                     	;# 
   162  030C                     	;# 
   163  030D                     	;# 
   164  0311                     	;# 
   165  0311                     	;# 
   166  0312                     	;# 
   167  0313                     	;# 
   168  0318                     	;# 
   169  0318                     	;# 
   170  0319                     	;# 
   171  031A                     	;# 
   172  031C                     	;# 
   173  031C                     	;# 
   174  031D                     	;# 
   175  031E                     	;# 
   176  038C                     	;# 
   177  038D                     	;# 
   178  0394                     	;# 
   179  0395                     	;# 
   180  0396                     	;# 
   181  040C                     	;# 
   182  040D                     	;# 
   183  0411                     	;# 
   184  0411                     	;# 
   185  0412                     	;# 
   186  0413                     	;# 
   187  0414                     	;# 
   188  0415                     	;# 
   189  0416                     	;# 
   190  0417                     	;# 
   191  0418                     	;# 
   192  0418                     	;# 
   193  0419                     	;# 
   194  041A                     	;# 
   195  041B                     	;# 
   196  041C                     	;# 
   197  041D                     	;# 
   198  041E                     	;# 
   199  048D                     	;# 
   200  0491                     	;# 
   201  0491                     	;# 
   202  0492                     	;# 
   203  0492                     	;# 
   204  0493                     	;# 
   205  0493                     	;# 
   206  0493                     	;# 
   207  0494                     	;# 
   208  0494                     	;# 
   209  0495                     	;# 
   210  0495                     	;# 
   211  0496                     	;# 
   212  0496                     	;# 
   213  0497                     	;# 
   214  0497                     	;# 
   215  0595                     	;# 
   216  0596                     	;# 
   217  0597                     	;# 
   218  059C                     	;# 
   219  059D                     	;# 
   220  059E                     	;# 
   221  0611                     	;# 
   222  0611                     	;# 
   223  0612                     	;# 
   224  0613                     	;# 
   225  0614                     	;# 
   226  0614                     	;# 
   227  0615                     	;# 
   228  0616                     	;# 
   229  0617                     	;# 
   230  0617                     	;# 
   231  0618                     	;# 
   232  0619                     	;# 
   233  061A                     	;# 
   234  061A                     	;# 
   235  061B                     	;# 
   236  061C                     	;# 
   237  061D                     	;# 
   238  061D                     	;# 
   239  061E                     	;# 
   240  061F                     	;# 
   241  0FE4                     	;# 
   242  0FE5                     	;# 
   243  0FE6                     	;# 
   244  0FE7                     	;# 
   245  0FE8                     	;# 
   246  0FE9                     	;# 
   247  0FEA                     	;# 
   248  0FEB                     	;# 
   249  0FED                     	;# 
   250  0FEE                     	;# 
   251  0FEF                     	;# 
   252                           
   253                           	psect	idataBANK0
   254  0000                     __pidataBANK0:	
   255                           
   256                           	psect	nvBANK0
   257  006C                     __pnvBANK0:	
   258  006C                     _buzz_timer:	
   259  006C                     	ds	2
   260                           
   261                           	psect	nvBANK1
   262  00A0                     __pnvBANK1:	
   263  00A0                     _pickit_state:	
   264  00A0                     	ds	1
   265  000B                     _INTCONbits	set	11
   266  0011                     _PIR1bits	set	17
   267  000C                     _PORTA	set	12
   268  000D                     _PORTB	set	13
   269  000E                     _PORTC	set	14
   270  000F                     _PORTD	set	15
   271  0010                     _PORTE	set	16
   272  001B                     _PR2	set	27
   273  001C                     _T2CON	set	28
   274  0015                     _TMR0	set	21
   275  005F                     _GIE	set	95
   276  0062                     _RA2	set	98
   277  0064                     _RA4	set	100
   278  0065                     _RA5	set	101
   279  0080                     _RE0	set	128
   280  0084                     _RE4	set	132
   281  0085                     _RE5	set	133
   282  0086                     _RE6	set	134
   283  005D                     _TMR0IE	set	93
   284  005A                     _TMR0IF	set	90
   285  009D                     _ADCON0	set	157
   286  009D                     _ADCON0bits	set	157
   287  009E                     _ADCON1	set	158
   288  009C                     _ADRESH	set	156
   289  009B                     _ADRESL	set	155
   290  0095                     _OPTION_REG	set	149
   291  0099                     _OSCCON	set	153
   292  0096                     _PCONbits	set	150
   293  0091                     _PIE1bits	set	145
   294  008C                     _TRISA	set	140
   295  008D                     _TRISB	set	141
   296  008E                     _TRISC	set	142
   297  008F                     _TRISD	set	143
   298  0090                     _TRISE	set	144
   299  0473                     _TRISC3	set	1139
   300  0474                     _TRISC4	set	1140
   301  0117                     _FVRCON	set	279
   302  0866                     _LATA6	set	2150
   303  0867                     _LATA7	set	2151
   304  086D                     _LATB5	set	2157
   305  0872                     _LATC2	set	2162
   306  0875                     _LATC5	set	2165
   307  0876                     _LATC6	set	2166
   308  0877                     _LATC7	set	2167
   309  087A                     _LATD2	set	2170
   310  087C                     _LATD4	set	2172
   311  087D                     _LATD5	set	2173
   312  087E                     _LATD6	set	2174
   313  018C                     _ANSELA	set	396
   314  018D                     _ANSELB	set	397
   315  018F                     _ANSELD	set	399
   316  0190                     _ANSELE	set	400
   317  0212                     _SSP1ADD	set	530
   318  0211                     _SSP1BUF	set	529
   319  0215                     _SSP1CON1	set	533
   320  0216                     _SSP1CON2	set	534
   321  0216                     _SSP1CON2bits	set	534
   322  0214                     _SSP1STAT	set	532
   323  0214                     _SSP1STATbits	set	532
   324  020D                     _WPUB	set	525
   325  020F                     _WPUD	set	527
   326  0210                     _WPUE	set	528
   327  029F                     _CCPTMRS2	set	671
   328  028C                     _PORTF	set	652
   329  028D                     _PORTG	set	653
   330  1460                     _RF0	set	5216
   331  1461                     _RF1	set	5217
   332  1462                     _RF2	set	5218
   333  1463                     _RF3	set	5219
   334  1465                     _RF5	set	5221
   335  1469                     _RG1	set	5225
   336  146B                     _RG3	set	5227
   337  030C                     _TRISF	set	780
   338  030D                     _TRISG	set	781
   339  1868                     _TRISG0	set	6248
   340  1C64                     _LATF4	set	7268
   341  1C68                     _LATG0	set	7272
   342  040C                     _ANSELF	set	1036
   343  040D                     _ANSELG	set	1037
   344  0596                     _PR8	set	1430
   345  0597                     _T8CON	set	1431
   346  061C                     _CCP9CON	set	1564
   347  061A                     _CCPR9L	set	1562
   348                           
   349                           	psect	stringtext
   350  1000                     __pstringtext:	
   351  1000                     STR_53:	
   352  1000  3452               	retlw	82	;'R'
   353  1001  3465               	retlw	101	;'e'
   354  1002  346C               	retlw	108	;'l'
   355  1003  3461               	retlw	97	;'a'
   356  1004  3479               	retlw	121	;'y'
   357  1005  3420               	retlw	32	;' '
   358  1006  3464               	retlw	100	;'d'
   359  1007  3465               	retlw	101	;'e'
   360  1008  342D               	retlw	45	;'-'
   361  1009  3465               	retlw	101	;'e'
   362  100A  346E               	retlw	110	;'n'
   363  100B  3465               	retlw	101	;'e'
   364  100C  3472               	retlw	114	;'r'
   365  100D  3467               	retlw	103	;'g'
   366  100E  3469               	retlw	105	;'i'
   367  100F  347A               	retlw	122	;'z'
   368  1010  3465               	retlw	101	;'e'
   369  1011  3464               	retlw	100	;'d'
   370  1012  3400               	retlw	0
   371  1013                     STR_27:	
   372  1013  3450               	retlw	80	;'P'
   373  1014  3469               	retlw	105	;'i'
   374  1015  3463               	retlw	99	;'c'
   375  1016  346B               	retlw	107	;'k'
   376  1017  3469               	retlw	105	;'i'
   377  1018  3474               	retlw	116	;'t'
   378  1019  3420               	retlw	32	;' '
   379  101A  3450               	retlw	80	;'P'
   380  101B  3472               	retlw	114	;'r'
   381  101C  346F               	retlw	111	;'o'
   382  101D  3467               	retlw	103	;'g'
   383  101E  3472               	retlw	114	;'r'
   384  101F  3461               	retlw	97	;'a'
   385  1020  346D               	retlw	109	;'m'
   386  1021  346D               	retlw	109	;'m'
   387  1022  3469               	retlw	105	;'i'
   388  1023  346E               	retlw	110	;'n'
   389  1024  3467               	retlw	103	;'g'
   390  1025  3400               	retlw	0
   391  1026                     STR_38:	
   392  1026  3445               	retlw	69	;'E'
   393  1027  3445               	retlw	69	;'E'
   394  1028  3450               	retlw	80	;'P'
   395  1029  3452               	retlw	82	;'R'
   396  102A  344F               	retlw	79	;'O'
   397  102B  344D               	retlw	77	;'M'
   398  102C  3420               	retlw	32	;' '
   399  102D  3472               	retlw	114	;'r'
   400  102E  3465               	retlw	101	;'e'
   401  102F  3461               	retlw	97	;'a'
   402  1030  3464               	retlw	100	;'d'
   403  1031  342F               	retlw	47	;'/'
   404  1032  3477               	retlw	119	;'w'
   405  1033  3472               	retlw	114	;'r'
   406  1034  3469               	retlw	105	;'i'
   407  1035  3474               	retlw	116	;'t'
   408  1036  3465               	retlw	101	;'e'
   409  1037  3400               	retlw	0
   410  1038                     STR_48:	
   411  1038  3420               	retlw	32	;' '
   412  1039  3445               	retlw	69	;'E'
   413  103A  3472               	retlw	114	;'r'
   414  103B  3472               	retlw	114	;'r'
   415  103C  346F               	retlw	111	;'o'
   416  103D  3472               	retlw	114	;'r'
   417  103E  3420               	retlw	32	;' '
   418  103F  344D               	retlw	77	;'M'
   419  1040  3465               	retlw	101	;'e'
   420  1041  346D               	retlw	109	;'m'
   421  1042  345F               	retlw	95	;'_'
   422  1043  3463               	retlw	99	;'c'
   423  1044  346F               	retlw	111	;'o'
   424  1045  3470               	retlw	112	;'p'
   425  1046  3469               	retlw	105	;'i'
   426  1047  3465               	retlw	101	;'e'
   427  1048  3472               	retlw	114	;'r'
   428  1049  3400               	retlw	0
   429  104A                     STR_187:	
   430  104A  344D               	retlw	77	;'M'
   431  104B  3475               	retlw	117	;'u'
   432  104C  346C               	retlw	108	;'l'
   433  104D  3474               	retlw	116	;'t'
   434  104E  3469               	retlw	105	;'i'
   435  104F  345F               	retlw	95	;'_'
   436  1050  3452               	retlw	82	;'R'
   437  1051  3458               	retlw	88	;'X'
   438  1052  3420               	retlw	32	;' '
   439  1053  3454               	retlw	84	;'T'
   440  1054  3465               	retlw	101	;'e'
   441  1055  3473               	retlw	115	;'s'
   442  1056  3474               	retlw	116	;'t'
   443  1057  346A               	retlw	106	;'j'
   444  1058  3469               	retlw	105	;'i'
   445  1059  3467               	retlw	103	;'g'
   446  105A  3400               	retlw	0
   447  105B                     STR_142:	
   448  105B  3444               	retlw	68	;'D'
   449  105C  3465               	retlw	101	;'e'
   450  105D  3463               	retlw	99	;'c'
   451  105E  346F               	retlw	111	;'o'
   452  105F  3464               	retlw	100	;'d'
   453  1060  3465               	retlw	101	;'e'
   454  1061  3420               	retlw	32	;' '
   455  1062  344F               	retlw	79	;'O'
   456  1063  346C               	retlw	108	;'l'
   457  1064  3464               	retlw	100	;'d'
   458  1065  3420               	retlw	32	;' '
   459  1066  342D               	retlw	45	;'-'
   460  1067  3446               	retlw	70	;'F'
   461  1068  3461               	retlw	97	;'a'
   462  1069  3469               	retlw	105	;'i'
   463  106A  346C               	retlw	108	;'l'
   464  106B  3400               	retlw	0
   465  106C                     STR_179:	
   466  106C  3454               	retlw	84	;'T'
   467  106D  3465               	retlw	101	;'e'
   468  106E  3473               	retlw	115	;'s'
   469  106F  3474               	retlw	116	;'t'
   470  1070  346A               	retlw	106	;'j'
   471  1071  3469               	retlw	105	;'i'
   472  1072  3467               	retlw	103	;'g'
   473  1073  3420               	retlw	32	;' '
   474  1074  3450               	retlw	80	;'P'
   475  1075  346F               	retlw	111	;'o'
   476  1076  3477               	retlw	119	;'w'
   477  1077  3465               	retlw	101	;'e'
   478  1078  3472               	retlw	114	;'r'
   479  1079  342D               	retlw	45	;'-'
   480  107A  3475               	retlw	117	;'u'
   481  107B  3470               	retlw	112	;'p'
   482  107C  3400               	retlw	0
   483  107D                     STR_2:	
   484  107D  3454               	retlw	84	;'T'
   485  107E  3465               	retlw	101	;'e'
   486  107F  3473               	retlw	115	;'s'
   487  1080  3474               	retlw	116	;'t'
   488  1081  342D               	retlw	45	;'-'
   489  1082  344A               	retlw	74	;'J'
   490  1083  3469               	retlw	105	;'i'
   491  1084  3467               	retlw	103	;'g'
   492  1085  347C               	retlw	124	;'|'
   493  1086  3453               	retlw	83	;'S'
   494  1087  3474               	retlw	116	;'t'
   495  1088  3461               	retlw	97	;'a'
   496  1089  3472               	retlw	114	;'r'
   497  108A  3474               	retlw	116	;'t'
   498  108B  3475               	retlw	117	;'u'
   499  108C  3470               	retlw	112	;'p'
   500  108D  3400               	retlw	0
   501  108E                     STR_198:	
   502  108E  3420               	retlw	32	;' '
   503  108F  3474               	retlw	116	;'t'
   504  1090  346F               	retlw	111	;'o'
   505  1091  3420               	retlw	32	;' '
   506  1092  3472               	retlw	114	;'r'
   507  1093  3465               	retlw	101	;'e'
   508  1094  3473               	retlw	115	;'s'
   509  1095  3474               	retlw	116	;'t'
   510  1096  3461               	retlw	97	;'a'
   511  1097  3472               	retlw	114	;'r'
   512  1098  3474               	retlw	116	;'t'
   513  1099  3420               	retlw	32	;' '
   514  109A  3474               	retlw	116	;'t'
   515  109B  3465               	retlw	101	;'e'
   516  109C  3473               	retlw	115	;'s'
   517  109D  3474               	retlw	116	;'t'
   518  109E  3400               	retlw	0
   519  109F                     STR_159:	
   520  109F  3437               	retlw	55	;'7'
   521  10A0  3473               	retlw	115	;'s'
   522  10A1  3465               	retlw	101	;'e'
   523  10A2  3467               	retlw	103	;'g'
   524  10A3  342C               	retlw	44	;','
   525  10A4  3420               	retlw	32	;' '
   526  10A5  3462               	retlw	98	;'b'
   527  10A6  3475               	retlw	117	;'u'
   528  10A7  347A               	retlw	122	;'z'
   529  10A8  347A               	retlw	122	;'z'
   530  10A9  3465               	retlw	101	;'e'
   531  10AA  3472               	retlw	114	;'r'
   532  10AB  342C               	retlw	44	;','
   533  10AC  3420               	retlw	32	;' '
   534  10AD  3420               	retlw	32	;' '
   535  10AE  3400               	retlw	0
   536  10AF                     STR_140:	
   537  10AF  3444               	retlw	68	;'D'
   538  10B0  3465               	retlw	101	;'e'
   539  10B1  3463               	retlw	99	;'c'
   540  10B2  346F               	retlw	111	;'o'
   541  10B3  3464               	retlw	100	;'d'
   542  10B4  3465               	retlw	101	;'e'
   543  10B5  3420               	retlw	32	;' '
   544  10B6  344E               	retlw	78	;'N'
   545  10B7  3465               	retlw	101	;'e'
   546  10B8  3477               	retlw	119	;'w'
   547  10B9  3420               	retlw	32	;' '
   548  10BA  342D               	retlw	45	;'-'
   549  10BB  3420               	retlw	32	;' '
   550  10BC  344F               	retlw	79	;'O'
   551  10BD  344B               	retlw	75	;'K'
   552  10BE  3400               	retlw	0
   553  10BF                     STR_57:	
   554  10BF  3452               	retlw	82	;'R'
   555  10C0  3465               	retlw	101	;'e'
   556  10C1  346C               	retlw	108	;'l'
   557  10C2  3461               	retlw	97	;'a'
   558  10C3  3479               	retlw	121	;'y'
   559  10C4  3420               	retlw	32	;' '
   560  10C5  3465               	retlw	101	;'e'
   561  10C6  346E               	retlw	110	;'n'
   562  10C7  3465               	retlw	101	;'e'
   563  10C8  3472               	retlw	114	;'r'
   564  10C9  3467               	retlw	103	;'g'
   565  10CA  3469               	retlw	105	;'i'
   566  10CB  347A               	retlw	122	;'z'
   567  10CC  3465               	retlw	101	;'e'
   568  10CD  3464               	retlw	100	;'d'
   569  10CE  3400               	retlw	0
   570  10CF                     STR_120:	
   571  10CF  3420               	retlw	32	;' '
   572  10D0  3445               	retlw	69	;'E'
   573  10D1  3472               	retlw	114	;'r'
   574  10D2  3472               	retlw	114	;'r'
   575  10D3  346F               	retlw	111	;'o'
   576  10D4  3472               	retlw	114	;'r'
   577  10D5  3420               	retlw	32	;' '
   578  10D6  342D               	retlw	45	;'-'
   579  10D7  3420               	retlw	32	;' '
   580  10D8  344D               	retlw	77	;'M'
   581  10D9  3469               	retlw	105	;'i'
   582  10DA  3463               	retlw	99	;'c'
   583  10DB  3472               	retlw	114	;'r'
   584  10DC  3465               	retlw	101	;'e'
   585  10DD  346C               	retlw	108	;'l'
   586  10DE  3400               	retlw	0
   587  10DF                     STR_167:	
   588  10DF  344D               	retlw	77	;'M'
   589  10E0  3465               	retlw	101	;'e'
   590  10E1  346D               	retlw	109	;'m'
   591  10E2  345F               	retlw	95	;'_'
   592  10E3  3443               	retlw	67	;'C'
   593  10E4  346F               	retlw	111	;'o'
   594  10E5  3470               	retlw	112	;'p'
   595  10E6  3469               	retlw	105	;'i'
   596  10E7  3465               	retlw	101	;'e'
   597  10E8  3472               	retlw	114	;'r'
   598  10E9  3420               	retlw	32	;' '
   599  10EA  3450               	retlw	80	;'P'
   600  10EB  3461               	retlw	97	;'a'
   601  10EC  3473               	retlw	115	;'s'
   602  10ED  3473               	retlw	115	;'s'
   603  10EE  3400               	retlw	0
   604  10EF                     STR_72:	
   605  10EF  3450               	retlw	80	;'P'
   606  10F0  3454               	retlw	84	;'T'
   607  10F1  3443               	retlw	67	;'C'
   608  10F2  3420               	retlw	32	;' '
   609  10F3  3445               	retlw	69	;'E'
   610  10F4  3472               	retlw	114	;'r'
   611  10F5  3472               	retlw	114	;'r'
   612  10F6  346F               	retlw	111	;'o'
   613  10F7  3472               	retlw	114	;'r'
   614  10F8  3420               	retlw	32	;' '
   615  10F9  3472               	retlw	114	;'r'
   616  10FA  3465               	retlw	101	;'e'
   617  10FB  3473               	retlw	115	;'s'
   618  10FC  3465               	retlw	101	;'e'
   619  10FD  3474               	retlw	116	;'t'
   620  10FE  3400               	retlw	0
   621  10FF                     STR_5:	
   622  10FF  3450               	retlw	80	;'P'
   623  1100  346F               	retlw	111	;'o'
   624  1101  3477               	retlw	119	;'w'
   625  1102  3465               	retlw	101	;'e'
   626  1103  3472               	retlw	114	;'r'
   627  1104  3469               	retlw	105	;'i'
   628  1105  346E               	retlw	110	;'n'
   629  1106  3467               	retlw	103	;'g'
   630  1107  3420               	retlw	32	;' '
   631  1108  3462               	retlw	98	;'b'
   632  1109  346F               	retlw	111	;'o'
   633  110A  3461               	retlw	97	;'a'
   634  110B  3472               	retlw	114	;'r'
   635  110C  3464               	retlw	100	;'d'
   636  110D  3400               	retlw	0
   637  110E                     STR_144:	
   638  110E  3445               	retlw	69	;'E'
   639  110F  3472               	retlw	114	;'r'
   640  1110  3472               	retlw	114	;'r'
   641  1111  346F               	retlw	111	;'o'
   642  1112  3472               	retlw	114	;'r'
   643  1113  3420               	retlw	32	;' '
   644  1114  342D               	retlw	45	;'-'
   645  1115  3420               	retlw	32	;' '
   646  1116  3444               	retlw	68	;'D'
   647  1117  3465               	retlw	101	;'e'
   648  1118  3463               	retlw	99	;'c'
   649  1119  346F               	retlw	111	;'o'
   650  111A  3464               	retlw	100	;'d'
   651  111B  3465               	retlw	101	;'e'
   652  111C  3400               	retlw	0
   653  111D                     STR_181:	
   654  111D  3443               	retlw	67	;'C'
   655  111E  346F               	retlw	111	;'o'
   656  111F  346E               	retlw	110	;'n'
   657  1120  3464               	retlw	100	;'d'
   658  1121  346F               	retlw	111	;'o'
   659  1122  3433               	retlw	51	;'3'
   660  1123  3420               	retlw	32	;' '
   661  1124  3454               	retlw	84	;'T'
   662  1125  3465               	retlw	101	;'e'
   663  1126  3473               	retlw	115	;'s'
   664  1127  3474               	retlw	116	;'t'
   665  1128  346A               	retlw	106	;'j'
   666  1129  3469               	retlw	105	;'i'
   667  112A  3467               	retlw	103	;'g'
   668  112B  3400               	retlw	0
   669  112C                     STR_74:	
   670  112C  3450               	retlw	80	;'P'
   671  112D  3454               	retlw	84	;'T'
   672  112E  3443               	retlw	67	;'C'
   673  112F  3420               	retlw	32	;' '
   674  1130  3445               	retlw	69	;'E'
   675  1131  3472               	retlw	114	;'r'
   676  1132  3472               	retlw	114	;'r'
   677  1133  346F               	retlw	111	;'o'
   678  1134  3472               	retlw	114	;'r'
   679  1135  3420               	retlw	32	;' '
   680  1136  3474               	retlw	116	;'t'
   681  1137  3472               	retlw	114	;'r'
   682  1138  3469               	retlw	105	;'i'
   683  1139  3470               	retlw	112	;'p'
   684  113A  3400               	retlw	0
   685  113B                     STR_19:	
   686  113B  3431               	retlw	49	;'1'
   687  113C  3436               	retlw	54	;'6'
   688  113D  3476               	retlw	118	;'v'
   689  113E  342D               	retlw	45	;'-'
   690  113F  3431               	retlw	49	;'1'
   691  1140  3432               	retlw	50	;'2'
   692  1141  3476               	retlw	118	;'v'
   693  1142  3420               	retlw	32	;' '
   694  1143  3473               	retlw	115	;'s'
   695  1144  3475               	retlw	117	;'u'
   696  1145  3470               	retlw	112	;'p'
   697  1146  3470               	retlw	112	;'p'
   698  1147  346C               	retlw	108	;'l'
   699  1148  3479               	retlw	121	;'y'
   700  1149  3400               	retlw	0
   701  114A                     STR_151:	
   702  114A  344D               	retlw	77	;'M'
   703  114B  3461               	retlw	97	;'a'
   704  114C  3473               	retlw	115	;'s'
   705  114D  3474               	retlw	116	;'t'
   706  114E  3465               	retlw	101	;'e'
   707  114F  3472               	retlw	114	;'r'
   708  1150  3420               	retlw	32	;' '
   709  1151  3445               	retlw	69	;'E'
   710  1152  3472               	retlw	114	;'r'
   711  1153  3461               	retlw	97	;'a'
   712  1154  3473               	retlw	115	;'s'
   713  1155  3465               	retlw	101	;'e'
   714  1156  3420               	retlw	32	;' '
   715  1157  3400               	retlw	0
   716  1158                     STR_46:	
   717  1158  3420               	retlw	32	;' '
   718  1159  3445               	retlw	69	;'E'
   719  115A  3472               	retlw	114	;'r'
   720  115B  3472               	retlw	114	;'r'
   721  115C  346F               	retlw	111	;'o'
   722  115D  3472               	retlw	114	;'r'
   723  115E  3420               	retlw	32	;' '
   724  115F  3443               	retlw	67	;'C'
   725  1160  346F               	retlw	111	;'o'
   726  1161  346E               	retlw	110	;'n'
   727  1162  3464               	retlw	100	;'d'
   728  1163  346F               	retlw	111	;'o'
   729  1164  3433               	retlw	51	;'3'
   730  1165  3400               	retlw	0
   731  1166                     STR_4:	
   732  1166  342D               	retlw	45	;'-'
   733  1167  343E               	retlw	62	;'>'
   734  1168  3420               	retlw	32	;' '
   735  1169  3449               	retlw	73	;'I'
   736  116A  346E               	retlw	110	;'n'
   737  116B  3473               	retlw	115	;'s'
   738  116C  3465               	retlw	101	;'e'
   739  116D  3472               	retlw	114	;'r'
   740  116E  3474               	retlw	116	;'t'
   741  116F  3420               	retlw	32	;' '
   742  1170  3450               	retlw	80	;'P'
   743  1171  3443               	retlw	67	;'C'
   744  1172  3442               	retlw	66	;'B'
   745  1173  3400               	retlw	0
   746  1174                     STR_164:	
   747  1174  3420               	retlw	32	;' '
   748  1175  3452               	retlw	82	;'R'
   749  1176  3465               	retlw	101	;'e'
   750  1177  346D               	retlw	109	;'m'
   751  1178  346F               	retlw	111	;'o'
   752  1179  3476               	retlw	118	;'v'
   753  117A  3465               	retlw	101	;'e'
   754  117B  3420               	retlw	32	;' '
   755  117C  3462               	retlw	98	;'b'
   756  117D  346F               	retlw	111	;'o'
   757  117E  3461               	retlw	97	;'a'
   758  117F  3472               	retlw	114	;'r'
   759  1180  3464               	retlw	100	;'d'
   760  1181  3400               	retlw	0
   761  1182                     STR_118:	
   762  1182  3420               	retlw	32	;' '
   763  1183  3445               	retlw	69	;'E'
   764  1184  3472               	retlw	114	;'r'
   765  1185  3472               	retlw	114	;'r'
   766  1186  346F               	retlw	111	;'o'
   767  1187  3472               	retlw	114	;'r'
   768  1188  3420               	retlw	32	;' '
   769  1189  342D               	retlw	45	;'-'
   770  118A  3420               	retlw	32	;' '
   771  118B  3448               	retlw	72	;'H'
   772  118C  3469               	retlw	105	;'i'
   773  118D  3467               	retlw	103	;'g'
   774  118E  3468               	retlw	104	;'h'
   775  118F  3400               	retlw	0
   776  1190                     STR_169:	
   777  1190  344D               	retlw	77	;'M'
   778  1191  3475               	retlw	117	;'u'
   779  1192  346C               	retlw	108	;'l'
   780  1193  3474               	retlw	116	;'t'
   781  1194  3469               	retlw	105	;'i'
   782  1195  345F               	retlw	95	;'_'
   783  1196  3452               	retlw	82	;'R'
   784  1197  3458               	retlw	88	;'X'
   785  1198  3420               	retlw	32	;' '
   786  1199  3450               	retlw	80	;'P'
   787  119A  3461               	retlw	97	;'a'
   788  119B  3473               	retlw	115	;'s'
   789  119C  3473               	retlw	115	;'s'
   790  119D  3400               	retlw	0
   791  119E                     STR_7:	
   792  119E  3431               	retlw	49	;'1'
   793  119F  3432               	retlw	50	;'2'
   794  11A0  3476               	retlw	118	;'v'
   795  11A1  342D               	retlw	45	;'-'
   796  11A2  3435               	retlw	53	;'5'
   797  11A3  3476               	retlw	118	;'v'
   798  11A4  3420               	retlw	32	;' '
   799  11A5  3473               	retlw	115	;'s'
   800  11A6  3475               	retlw	117	;'u'
   801  11A7  3470               	retlw	112	;'p'
   802  11A8  3470               	retlw	112	;'p'
   803  11A9  346C               	retlw	108	;'l'
   804  11AA  3479               	retlw	121	;'y'
   805  11AB  3400               	retlw	0
   806  11AC                     STR_15:	
   807  11AC  3431               	retlw	49	;'1'
   808  11AD  3436               	retlw	54	;'6'
   809  11AE  3476               	retlw	118	;'v'
   810  11AF  342D               	retlw	45	;'-'
   811  11B0  3435               	retlw	53	;'5'
   812  11B1  3476               	retlw	118	;'v'
   813  11B2  3420               	retlw	32	;' '
   814  11B3  3473               	retlw	115	;'s'
   815  11B4  3475               	retlw	117	;'u'
   816  11B5  3470               	retlw	112	;'p'
   817  11B6  3470               	retlw	112	;'p'
   818  11B7  346C               	retlw	108	;'l'
   819  11B8  3479               	retlw	121	;'y'
   820  11B9  3400               	retlw	0
   821  11BA                     STR_43:	
   822  11BA  3454               	retlw	84	;'T'
   823  11BB  3465               	retlw	101	;'e'
   824  11BC  3473               	retlw	115	;'s'
   825  11BD  3474               	retlw	116	;'t'
   826  11BE  3420               	retlw	32	;' '
   827  11BF  3445               	retlw	69	;'E'
   828  11C0  3445               	retlw	69	;'E'
   829  11C1  3450               	retlw	80	;'P'
   830  11C2  3452               	retlw	82	;'R'
   831  11C3  344F               	retlw	79	;'O'
   832  11C4  344D               	retlw	77	;'M'
   833  11C5  3420               	retlw	32	;' '
   834  11C6  3400               	retlw	0
   835  11C7                     STR_147:	
   836  11C7  3454               	retlw	84	;'T'
   837  11C8  3434               	retlw	52	;'4'
   838  11C9  3420               	retlw	32	;' '
   839  11CA  3462               	retlw	98	;'b'
   840  11CB  3475               	retlw	117	;'u'
   841  11CC  3473               	retlw	115	;'s'
   842  11CD  3420               	retlw	32	;' '
   843  11CE  3428               	retlw	40	;'('
   844  11CF  3443               	retlw	67	;'C'
   845  11D0  3441               	retlw	65	;'A'
   846  11D1  344E               	retlw	78	;'N'
   847  11D2  3429               	retlw	41	;')'
   848  11D3  3400               	retlw	0
   849  11D4                     STR_10:	
   850  11D4  3456               	retlw	86	;'V'
   851  11D5  346F               	retlw	111	;'o'
   852  11D6  346C               	retlw	108	;'l'
   853  11D7  3474               	retlw	116	;'t'
   854  11D8  3420               	retlw	32	;' '
   855  11D9  3445               	retlw	69	;'E'
   856  11DA  3472               	retlw	114	;'r'
   857  11DB  3472               	retlw	114	;'r'
   858  11DC  346F               	retlw	111	;'o'
   859  11DD  3472               	retlw	114	;'r'
   860  11DE  3420               	retlw	32	;' '
   861  11DF  3448               	retlw	72	;'H'
   862  11E0  3400               	retlw	0
   863  11E1                     STR_131:	
   864  11E1  3454               	retlw	84	;'T'
   865  11E2  3465               	retlw	101	;'e'
   866  11E3  3473               	retlw	115	;'s'
   867  11E4  3474               	retlw	116	;'t'
   868  11E5  3420               	retlw	32	;' '
   869  11E6  3452               	retlw	82	;'R'
   870  11E7  3446               	retlw	70	;'F'
   871  11E8  3420               	retlw	32	;' '
   872  11E9  3452               	retlw	82	;'R'
   873  11EA  3453               	retlw	83	;'S'
   874  11EB  3453               	retlw	83	;'S'
   875  11EC  3449               	retlw	73	;'I'
   876  11ED  3400               	retlw	0
   877  11EE                     STR_8:	
   878  11EE  3456               	retlw	86	;'V'
   879  11EF  346F               	retlw	111	;'o'
   880  11F0  346C               	retlw	108	;'l'
   881  11F1  3474               	retlw	116	;'t'
   882  11F2  3420               	retlw	32	;' '
   883  11F3  3445               	retlw	69	;'E'
   884  11F4  3472               	retlw	114	;'r'
   885  11F5  3472               	retlw	114	;'r'
   886  11F6  346F               	retlw	111	;'o'
   887  11F7  3472               	retlw	114	;'r'
   888  11F8  3420               	retlw	32	;' '
   889  11F9  344C               	retlw	76	;'L'
   890  11FA  3400               	retlw	0
   891  11FB                     STR_190:	
   892  11FB  3420               	retlw	32	;' '
   893  11FC  3450               	retlw	80	;'P'
   894  11FD  3472               	retlw	114	;'r'
   895  11FE  3465               	retlw	101	;'e'
   896  11FF  3473               	retlw	115	;'s'
   897  1200  3473               	retlw	115	;'s'
   898  1201  3420               	retlw	32	;' '
   899  1202  3453               	retlw	83	;'S'
   900  1203  3454               	retlw	84	;'T'
   901  1204  3441               	retlw	65	;'A'
   902  1205  3452               	retlw	82	;'R'
   903  1206  3454               	retlw	84	;'T'
   904  1207  3400               	retlw	0
   905  1208                     STR_33:	
   906  1208  3445               	retlw	69	;'E'
   907  1209  3473               	retlw	115	;'s'
   908  120A  3474               	retlw	116	;'t'
   909  120B  3461               	retlw	97	;'a'
   910  120C  3462               	retlw	98	;'b'
   911  120D  346C               	retlw	108	;'l'
   912  120E  3469               	retlw	105	;'i'
   913  120F  3473               	retlw	115	;'s'
   914  1210  3468               	retlw	104	;'h'
   915  1211  3469               	retlw	105	;'i'
   916  1212  346E               	retlw	110	;'n'
   917  1213  3467               	retlw	103	;'g'
   918  1214  3400               	retlw	0
   919  1215                     STR_39:	
   920  1215  3445               	retlw	69	;'E'
   921  1216  3445               	retlw	69	;'E'
   922  1217  3450               	retlw	80	;'P'
   923  1218  3452               	retlw	82	;'R'
   924  1219  344F               	retlw	79	;'O'
   925  121A  344D               	retlw	77	;'M'
   926  121B  3420               	retlw	32	;' '
   927  121C  3465               	retlw	101	;'e'
   928  121D  3472               	retlw	114	;'r'
   929  121E  3472               	retlw	114	;'r'
   930  121F  346F               	retlw	111	;'o'
   931  1220  3472               	retlw	114	;'r'
   932  1221  3400               	retlw	0
   933  1222                     STR_160:	
   934  1222  3420               	retlw	32	;' '
   935  1223  3462               	retlw	98	;'b'
   936  1224  3475               	retlw	117	;'u'
   937  1225  3474               	retlw	116	;'t'
   938  1226  3474               	retlw	116	;'t'
   939  1227  346F               	retlw	111	;'o'
   940  1228  346E               	retlw	110	;'n'
   941  1229  3420               	retlw	32	;' '
   942  122A  3474               	retlw	116	;'t'
   943  122B  3465               	retlw	101	;'e'
   944  122C  3473               	retlw	115	;'s'
   945  122D  3474               	retlw	116	;'t'
   946  122E  3400               	retlw	0
   947  122F                     STR_122:	
   948  122F  3420               	retlw	32	;' '
   949  1230  3445               	retlw	69	;'E'
   950  1231  3472               	retlw	114	;'r'
   951  1232  3472               	retlw	114	;'r'
   952  1233  346F               	retlw	111	;'o'
   953  1234  3472               	retlw	114	;'r'
   954  1235  3420               	retlw	32	;' '
   955  1236  342D               	retlw	45	;'-'
   956  1237  3420               	retlw	32	;' '
   957  1238  344C               	retlw	76	;'L'
   958  1239  346F               	retlw	111	;'o'
   959  123A  3477               	retlw	119	;'w'
   960  123B  3400               	retlw	0
   961  123C                     STR_117:	
   962  123C  3454               	retlw	84	;'T'
   963  123D  3465               	retlw	101	;'e'
   964  123E  3473               	retlw	115	;'s'
   965  123F  3474               	retlw	116	;'t'
   966  1240  3420               	retlw	32	;' '
   967  1241  3452               	retlw	82	;'R'
   968  1242  3446               	retlw	70	;'F'
   969  1243  3420               	retlw	32	;' '
   970  1244  3433               	retlw	51	;'3'
   971  1245  3476               	retlw	118	;'v'
   972  1246  3433               	retlw	51	;'3'
   973  1247  3400               	retlw	0
   974  1248                     STR_40:	
   975  1248  3420               	retlw	32	;' '
   976  1249  3452               	retlw	82	;'R'
   977  124A  3465               	retlw	101	;'e'
   978  124B  3461               	retlw	97	;'a'
   979  124C  3464               	retlw	100	;'d'
   980  124D  342F               	retlw	47	;'/'
   981  124E  3457               	retlw	87	;'W'
   982  124F  3472               	retlw	114	;'r'
   983  1250  3469               	retlw	105	;'i'
   984  1251  3474               	retlw	116	;'t'
   985  1252  3465               	retlw	101	;'e'
   986  1253  3400               	retlw	0
   987  1254                     STR_45:	
   988  1254  3445               	retlw	69	;'E'
   989  1255  3445               	retlw	69	;'E'
   990  1256  3450               	retlw	80	;'P'
   991  1257  3452               	retlw	82	;'R'
   992  1258  344F               	retlw	79	;'O'
   993  1259  344D               	retlw	77	;'M'
   994  125A  3420               	retlw	32	;' '
   995  125B  3473               	retlw	115	;'s'
   996  125C  3469               	retlw	105	;'i'
   997  125D  347A               	retlw	122	;'z'
   998  125E  3465               	retlw	101	;'e'
   999  125F  3400               	retlw	0
  1000  1260                     STR_183:	
  1001  1260  3452               	retlw	82	;'R'
  1002  1261  3458               	retlw	88	;'X'
  1003  1262  3433               	retlw	51	;'3'
  1004  1263  3420               	retlw	32	;' '
  1005  1264  3454               	retlw	84	;'T'
  1006  1265  3465               	retlw	101	;'e'
  1007  1266  3473               	retlw	115	;'s'
  1008  1267  3474               	retlw	116	;'t'
  1009  1268  346A               	retlw	106	;'j'
  1010  1269  3469               	retlw	105	;'i'
  1011  126A  3467               	retlw	103	;'g'
  1012  126B  3400               	retlw	0
  1013  126C                     STR_29:	
  1014  126C  3457               	retlw	87	;'W'
  1015  126D  3461               	retlw	97	;'a'
  1016  126E  3469               	retlw	105	;'i'
  1017  126F  3474               	retlw	116	;'t'
  1018  1270  3469               	retlw	105	;'i'
  1019  1271  346E               	retlw	110	;'n'
  1020  1272  3467               	retlw	103	;'g'
  1021  1273  3420               	retlw	32	;' '
  1022  1274  3466               	retlw	102	;'f'
  1023  1275  346F               	retlw	111	;'o'
  1024  1276  3472               	retlw	114	;'r'
  1025  1277  3400               	retlw	0
  1026  1278                     STR_35:	
  1027  1278  3443               	retlw	67	;'C'
  1028  1279  346F               	retlw	111	;'o'
  1029  127A  346D               	retlw	109	;'m'
  1030  127B  346D               	retlw	109	;'m'
  1031  127C  3473               	retlw	115	;'s'
  1032  127D  3420               	retlw	32	;' '
  1033  127E  3445               	retlw	69	;'E'
  1034  127F  3472               	retlw	114	;'r'
  1035  1280  3472               	retlw	114	;'r'
  1036  1281  346F               	retlw	111	;'o'
  1037  1282  3472               	retlw	114	;'r'
  1038  1283  3400               	retlw	0
  1039  1284                     STR_14:	
  1040  1284  3454               	retlw	84	;'T'
  1041  1285  342D               	retlw	45	;'-'
  1042  1286  346F               	retlw	111	;'o'
  1043  1287  3475               	retlw	117	;'u'
  1044  1288  3474               	retlw	116	;'t'
  1045  1289  3420               	retlw	32	;' '
  1046  128A  3445               	retlw	69	;'E'
  1047  128B  3472               	retlw	114	;'r'
  1048  128C  3472               	retlw	114	;'r'
  1049  128D  346F               	retlw	111	;'o'
  1050  128E  3472               	retlw	114	;'r'
  1051  128F  3400               	retlw	0
  1052  1290                     STR_163:	
  1053  1290  3443               	retlw	67	;'C'
  1054  1291  346F               	retlw	111	;'o'
  1055  1292  346E               	retlw	110	;'n'
  1056  1293  3464               	retlw	100	;'d'
  1057  1294  346F               	retlw	111	;'o'
  1058  1295  3433               	retlw	51	;'3'
  1059  1296  3420               	retlw	32	;' '
  1060  1297  3450               	retlw	80	;'P'
  1061  1298  3461               	retlw	97	;'a'
  1062  1299  3473               	retlw	115	;'s'
  1063  129A  3473               	retlw	115	;'s'
  1064  129B  3400               	retlw	0
  1065  129C                     STR_12:	
  1066  129C  3443               	retlw	67	;'C'
  1067  129D  3475               	retlw	117	;'u'
  1068  129E  3472               	retlw	114	;'r'
  1069  129F  3472               	retlw	114	;'r'
  1070  12A0  3420               	retlw	32	;' '
  1071  12A1  3445               	retlw	69	;'E'
  1072  12A2  3472               	retlw	114	;'r'
  1073  12A3  3472               	retlw	114	;'r'
  1074  12A4  346F               	retlw	111	;'o'
  1075  12A5  3472               	retlw	114	;'r'
  1076  12A6  3400               	retlw	0
  1077  12A7                     STR_162:	
  1078  12A7  3420               	retlw	32	;' '
  1079  12A8  3466               	retlw	102	;'f'
  1080  12A9  346F               	retlw	111	;'o'
  1081  12AA  3472               	retlw	114	;'r'
  1082  12AB  3420               	retlw	32	;' '
  1083  12AC  3463               	retlw	99	;'c'
  1084  12AD  346F               	retlw	111	;'o'
  1085  12AE  346D               	retlw	109	;'m'
  1086  12AF  346D               	retlw	109	;'m'
  1087  12B0  3473               	retlw	115	;'s'
  1088  12B1  3400               	retlw	0
  1089  12B2                     STR_49:	
  1090  12B2  3454               	retlw	84	;'T'
  1091  12B3  3465               	retlw	101	;'e'
  1092  12B4  3473               	retlw	115	;'s'
  1093  12B5  3474               	retlw	116	;'t'
  1094  12B6  3420               	retlw	32	;' '
  1095  12B7  3452               	retlw	82	;'R'
  1096  12B8  3465               	retlw	101	;'e'
  1097  12B9  346C               	retlw	108	;'l'
  1098  12BA  3461               	retlw	97	;'a'
  1099  12BB  3479               	retlw	121	;'y'
  1100  12BC  3400               	retlw	0
  1101  12BD                     STR_23:	
  1102  12BD  3431               	retlw	49	;'1'
  1103  12BE  3436               	retlw	54	;'6'
  1104  12BF  3476               	retlw	118	;'v'
  1105  12C0  3420               	retlw	32	;' '
  1106  12C1  3473               	retlw	115	;'s'
  1107  12C2  3475               	retlw	117	;'u'
  1108  12C3  3470               	retlw	112	;'p'
  1109  12C4  3470               	retlw	112	;'p'
  1110  12C5  346C               	retlw	108	;'l'
  1111  12C6  3479               	retlw	121	;'y'
  1112  12C7  3400               	retlw	0
  1113  12C8                     STR_161:	
  1114  12C8  3477               	retlw	119	;'w'
  1115  12C9  3461               	retlw	97	;'a'
  1116  12CA  3469               	retlw	105	;'i'
  1117  12CB  3474               	retlw	116	;'t'
  1118  12CC  3469               	retlw	105	;'i'
  1119  12CD  346E               	retlw	110	;'n'
  1120  12CE  3467               	retlw	103	;'g'
  1121  12CF  3420               	retlw	32	;' '
  1122  12D0  3420               	retlw	32	;' '
  1123  12D1  3400               	retlw	0
  1124  12D2                     STR_155:	
  1125  12D2  3453               	retlw	83	;'S'
  1126  12D3  3465               	retlw	101	;'e'
  1127  12D4  3474               	retlw	116	;'t'
  1128  12D5  3420               	retlw	32	;' '
  1129  12D6  3423               	retlw	35	;'#'
  1130  12D7  3420               	retlw	32	;' '
  1131  12D8  346F               	retlw	111	;'o'
  1132  12D9  3466               	retlw	102	;'f'
  1133  12DA  3420               	retlw	32	;' '
  1134  12DB  3400               	retlw	0
  1135  12DC                     STR_67:	
  1136  12DC  3443               	retlw	67	;'C'
  1137  12DD  3448               	retlw	72	;'H'
  1138  12DE  3432               	retlw	50	;'2'
  1139  12DF  3420               	retlw	32	;' '
  1140  12E0  342D               	retlw	45	;'-'
  1141  12E1  3420               	retlw	32	;' '
  1142  12E2  344F               	retlw	79	;'O'
  1143  12E3  3446               	retlw	70	;'F'
  1144  12E4  3446               	retlw	70	;'F'
  1145  12E5  3400               	retlw	0
  1146  12E6                     STR_91:	
  1147  12E6  3443               	retlw	67	;'C'
  1148  12E7  3448               	retlw	72	;'H'
  1149  12E8  3433               	retlw	51	;'3'
  1150  12E9  3420               	retlw	32	;' '
  1151  12EA  342D               	retlw	45	;'-'
  1152  12EB  3420               	retlw	32	;' '
  1153  12EC  344F               	retlw	79	;'O'
  1154  12ED  3446               	retlw	70	;'F'
  1155  12EE  3446               	retlw	70	;'F'
  1156  12EF  3400               	retlw	0
  1157  12F0                     STR_136:	
  1158  12F0  3452               	retlw	82	;'R'
  1159  12F1  3453               	retlw	83	;'S'
  1160  12F2  3453               	retlw	83	;'S'
  1161  12F3  3449               	retlw	73	;'I'
  1162  12F4  3420               	retlw	32	;' '
  1163  12F5  342D               	retlw	45	;'-'
  1164  12F6  3420               	retlw	32	;' '
  1165  12F7  344F               	retlw	79	;'O'
  1166  12F8  344B               	retlw	75	;'K'
  1167  12F9  3400               	retlw	0
  1168  12FA                     STR_156:	
  1169  12FA  3420               	retlw	32	;' '
  1170  12FB  3463               	retlw	99	;'c'
  1171  12FC  3468               	retlw	104	;'h'
  1172  12FD  3461               	retlw	97	;'a'
  1173  12FE  346E               	retlw	110	;'n'
  1174  12FF  346E               	retlw	110	;'n'
  1175  1300  3465               	retlw	101	;'e'
  1176  1301  346C               	retlw	108	;'l'
  1177  1302  3473               	retlw	115	;'s'
  1178  1303  3400               	retlw	0
  1179  1304                     STR_37:	
  1180  1304  3454               	retlw	84	;'T'
  1181  1305  3465               	retlw	101	;'e'
  1182  1306  3473               	retlw	115	;'s'
  1183  1307  3474               	retlw	116	;'t'
  1184  1308  3469               	retlw	105	;'i'
  1185  1309  346E               	retlw	110	;'n'
  1186  130A  3467               	retlw	103	;'g'
  1187  130B  3420               	retlw	32	;' '
  1188  130C  3400               	retlw	0
  1189  130D                     STR_62:	
  1190  130D  3420               	retlw	32	;' '
  1191  130E  3445               	retlw	69	;'E'
  1192  130F  3472               	retlw	114	;'r'
  1193  1310  3472               	retlw	114	;'r'
  1194  1311  346F               	retlw	111	;'o'
  1195  1312  3472               	retlw	114	;'r'
  1196  1313  3420               	retlw	32	;' '
  1197  1314  3431               	retlw	49	;'1'
  1198  1315  3400               	retlw	0
  1199  1316                     STR_54:	
  1200  1316  3420               	retlw	32	;' '
  1201  1317  3445               	retlw	69	;'E'
  1202  1318  3472               	retlw	114	;'r'
  1203  1319  3472               	retlw	114	;'r'
  1204  131A  346F               	retlw	111	;'o'
  1205  131B  3472               	retlw	114	;'r'
  1206  131C  3420               	retlw	32	;' '
  1207  131D  3432               	retlw	50	;'2'
  1208  131E  3400               	retlw	0
  1209  131F                     STR_63:	
  1210  131F  3454               	retlw	84	;'T'
  1211  1320  3465               	retlw	101	;'e'
  1212  1321  3473               	retlw	115	;'s'
  1213  1322  3474               	retlw	116	;'t'
  1214  1323  3420               	retlw	32	;' '
  1215  1324  3443               	retlw	67	;'C'
  1216  1325  3448               	retlw	72	;'H'
  1217  1326  3432               	retlw	50	;'2'
  1218  1327  3400               	retlw	0
  1219  1328                     STR_87:	
  1220  1328  3454               	retlw	84	;'T'
  1221  1329  3465               	retlw	101	;'e'
  1222  132A  3473               	retlw	115	;'s'
  1223  132B  3474               	retlw	116	;'t'
  1224  132C  3420               	retlw	32	;' '
  1225  132D  3443               	retlw	67	;'C'
  1226  132E  3448               	retlw	72	;'H'
  1227  132F  3433               	retlw	51	;'3'
  1228  1330  3400               	retlw	0
  1229  1331                     STR_124:	
  1230  1331  3433               	retlw	51	;'3'
  1231  1332  3476               	retlw	118	;'v'
  1232  1333  3433               	retlw	51	;'3'
  1233  1334  3420               	retlw	32	;' '
  1234  1335  342D               	retlw	45	;'-'
  1235  1336  3420               	retlw	32	;' '
  1236  1337  344F               	retlw	79	;'O'
  1237  1338  344B               	retlw	75	;'K'
  1238  1339  3400               	retlw	0
  1239  133A                     STR_71:	
  1240  133A  3443               	retlw	67	;'C'
  1241  133B  3448               	retlw	72	;'H'
  1242  133C  3432               	retlw	50	;'2'
  1243  133D  3420               	retlw	32	;' '
  1244  133E  342D               	retlw	45	;'-'
  1245  133F  3420               	retlw	32	;' '
  1246  1340  344F               	retlw	79	;'O'
  1247  1341  344E               	retlw	78	;'N'
  1248  1342  3400               	retlw	0
  1249  1343                     STR_95:	
  1250  1343  3443               	retlw	67	;'C'
  1251  1344  3448               	retlw	72	;'H'
  1252  1345  3433               	retlw	51	;'3'
  1253  1346  3420               	retlw	32	;' '
  1254  1347  342D               	retlw	45	;'-'
  1255  1348  3420               	retlw	32	;' '
  1256  1349  344F               	retlw	79	;'O'
  1257  134A  344E               	retlw	78	;'N'
  1258  134B  3400               	retlw	0
  1259  134C                     STR_1:	
  1260  134C  344D               	retlw	77	;'M'
  1261  134D  3475               	retlw	117	;'u'
  1262  134E  346C               	retlw	108	;'l'
  1263  134F  3474               	retlw	116	;'t'
  1264  1350  3469               	retlw	105	;'i'
  1265  1351  345F               	retlw	95	;'_'
  1266  1352  3452               	retlw	82	;'R'
  1267  1353  3458               	retlw	88	;'X'
  1268  1354  3400               	retlw	0
  1269  1355                     STR_32:	
  1270  1355  3420               	retlw	32	;' '
  1271  1356  3473               	retlw	115	;'s'
  1272  1357  346B               	retlw	107	;'k'
  1273  1358  3469               	retlw	105	;'i'
  1274  1359  3470               	retlw	112	;'p'
  1275  135A  3470               	retlw	112	;'p'
  1276  135B  3465               	retlw	101	;'e'
  1277  135C  3464               	retlw	100	;'d'
  1278  135D  3400               	retlw	0
  1279  135E                     STR_165:	
  1280  135E  3452               	retlw	82	;'R'
  1281  135F  3458               	retlw	88	;'X'
  1282  1360  3433               	retlw	51	;'3'
  1283  1361  3420               	retlw	32	;' '
  1284  1362  3450               	retlw	80	;'P'
  1285  1363  3461               	retlw	97	;'a'
  1286  1364  3473               	retlw	115	;'s'
  1287  1365  3473               	retlw	115	;'s'
  1288  1366  3400               	retlw	0
  1289  1367                     STR_171:	
  1290  1367  3443               	retlw	67	;'C'
  1291  1368  346F               	retlw	111	;'o'
  1292  1369  346E               	retlw	110	;'n'
  1293  136A  3464               	retlw	100	;'d'
  1294  136B  346F               	retlw	111	;'o'
  1295  136C  3433               	retlw	51	;'3'
  1296  136D  3420               	retlw	32	;' '
  1297  136E  3400               	retlw	0
  1298  136F                     STR_180:	
  1299  136F  3477               	retlw	119	;'w'
  1300  1370  3461               	retlw	97	;'a'
  1301  1371  3469               	retlw	105	;'i'
  1302  1372  3474               	retlw	116	;'t'
  1303  1373  342E               	retlw	46	;'.'
  1304  1374  342E               	retlw	46	;'.'
  1305  1375  342E               	retlw	46	;'.'
  1306  1376  3400               	retlw	0
  1307  1377                     STR_111:	
  1308  1377  3454               	retlw	84	;'T'
  1309  1378  3465               	retlw	101	;'e'
  1310  1379  3473               	retlw	115	;'s'
  1311  137A  3474               	retlw	116	;'t'
  1312  137B  3420               	retlw	32	;' '
  1313  137C  3452               	retlw	82	;'R'
  1314  137D  3446               	retlw	70	;'F'
  1315  137E  3400               	retlw	0
  1316  137F                     STR_173:	
  1317  137F  3452               	retlw	82	;'R'
  1318  1380  3458               	retlw	88	;'X'
  1319  1381  3433               	retlw	51	;'3'
  1320  1382  3420               	retlw	32	;' '
  1321  1383  3400               	retlw	0
  1322  1384                     STR_110:	
  1323  1384  3420               	retlw	32	;' '
  1324  1385  3431               	retlw	49	;'1'
  1325  1386  3430               	retlw	48	;'0'
  1326  1387  3400               	retlw	0
  1327  1388                     STR_114:	
  1328  1388  3420               	retlw	32	;' '
  1329  1389  3431               	retlw	49	;'1'
  1330  138A  3431               	retlw	49	;'1'
  1331  138B  3400               	retlw	0
  1332  138C                     STR_116:	
  1333  138C  3420               	retlw	32	;' '
  1334  138D  3431               	retlw	49	;'1'
  1335  138E  3432               	retlw	50	;'2'
  1336  138F  3400               	retlw	0
  1337  1390                     STR_128:	
  1338  1390  3420               	retlw	32	;' '
  1339  1391  3431               	retlw	49	;'1'
  1340  1392  3433               	retlw	51	;'3'
  1341  1393  3400               	retlw	0
  1342  1394                     STR_130:	
  1343  1394  3420               	retlw	32	;' '
  1344  1395  3431               	retlw	49	;'1'
  1345  1396  3434               	retlw	52	;'4'
  1346  1397  3400               	retlw	0
  1347  1398                     STR_146:	
  1348  1398  3420               	retlw	32	;' '
  1349  1399  3431               	retlw	49	;'1'
  1350  139A  3435               	retlw	53	;'5'
  1351  139B  3400               	retlw	0
  1352  139C                     STR_158:	
  1353  139C  3420               	retlw	32	;' '
  1354  139D  3431               	retlw	49	;'1'
  1355  139E  3436               	retlw	54	;'6'
  1356  139F  3400               	retlw	0
  1357  13A0                     STR_154:	
  1358  13A0  3420               	retlw	32	;' '
  1359  13A1  3431               	retlw	49	;'1'
  1360  13A2  3437               	retlw	55	;'7'
  1361  13A3  3400               	retlw	0
  1362  13A4                     STR_150:	
  1363  13A4  3420               	retlw	32	;' '
  1364  13A5  3431               	retlw	49	;'1'
  1365  13A6  3438               	retlw	56	;'8'
  1366  13A7  3400               	retlw	0
  1367  13A8                     STR_76:	
  1368  13A8  3420               	retlw	32	;' '
  1369  13A9  3436               	retlw	54	;'6'
  1370  13AA  3461               	retlw	97	;'a'
  1371  13AB  3400               	retlw	0
  1372  13AC                     STR_102:	
  1373  13AC  3420               	retlw	32	;' '
  1374  13AD  3438               	retlw	56	;'8'
  1375  13AE  3461               	retlw	97	;'a'
  1376  13AF  3400               	retlw	0
  1377  13B0                     STR_78:	
  1378  13B0  3420               	retlw	32	;' '
  1379  13B1  3436               	retlw	54	;'6'
  1380  13B2  3462               	retlw	98	;'b'
  1381  13B3  3400               	retlw	0
  1382  13B4                     STR_100:	
  1383  13B4  3420               	retlw	32	;' '
  1384  13B5  3438               	retlw	56	;'8'
  1385  13B6  3462               	retlw	98	;'b'
  1386  13B7  3400               	retlw	0
  1387  13B8                     STR_56:	
  1388  13B8  3420               	retlw	32	;' '
  1389  13B9  3433               	retlw	51	;'3'
  1390  13BA  3400               	retlw	0
  1391  13BB                     STR_60:	
  1392  13BB  3420               	retlw	32	;' '
  1393  13BC  3434               	retlw	52	;'4'
  1394  13BD  3400               	retlw	0
  1395  13BE                     STR_70:	
  1396  13BE  3420               	retlw	32	;' '
  1397  13BF  3435               	retlw	53	;'5'
  1398  13C0  3400               	retlw	0
  1399  13C1                     STR_82:	
  1400  13C1  3420               	retlw	32	;' '
  1401  13C2  3436               	retlw	54	;'6'
  1402  13C3  3400               	retlw	0
  1403  13C4                     STR_86:	
  1404  13C4  3420               	retlw	32	;' '
  1405  13C5  3437               	retlw	55	;'7'
  1406  13C6  3400               	retlw	0
  1407  13C7                     STR_94:	
  1408  13C7  3420               	retlw	32	;' '
  1409  13C8  3438               	retlw	56	;'8'
  1410  13C9  3400               	retlw	0
  1411  13CA                     STR_106:	
  1412  13CA  3420               	retlw	32	;' '
  1413  13CB  3439               	retlw	57	;'9'
  1414  13CC  3400               	retlw	0
  1415  13CD                     STR_66:	
  1416  13CD  346F               	retlw	111	;'o'
  1417  13CE  346B               	retlw	107	;'k'
  1418  13CF  3400               	retlw	0
  1419  10AE                     
  1420                           ; #config settings
  1421  0000                     
  1422                           	psect	cinit
  1423  00A1                     start_initialization:	
  1424  00A1                     __initialization:	
  1425                           
  1426                           ;initializer for _one_second_timer
  1427  00A1  30E8               	movlw	232
  1428  00A2  00EE               	movwf	__pdataBANK0& (0+127)
  1429  00A3  3003               	movlw	3
  1430  00A4  00EF               	movwf	(__pdataBANK0+1)& (0+127)
  1431                           
  1432                           ; Clear objects allocated to BANK0
  1433  00A5  3054               	movlw	low __pbssBANK0
  1434  00A6  0084               	movwf	4
  1435  00A7  3000               	movlw	high __pbssBANK0
  1436  00A8  0085               	movwf	5
  1437  00A9  3018               	movlw	24
  1438  00AA  3187  27FA         	fcall	clear_ram0
  1439  00AC                     end_of_initialization:	
  1440                           ;End of C runtime variable initialization code
  1441                           
  1442  00AC                     __end_of__initialization:	
  1443  00AC  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1444  00AD  0020               	movlb	0
  1445  00AE  3186  2E2F         	ljmp	_main	;jump to C main() function
  1446                           
  1447                           	psect	bssBANK0
  1448  0054                     __pbssBANK0:	
  1449  0054                     _ADC_cur_sink_val:	
  1450  0054                     	ds	2
  1451  0056                     _curent_sink_val:	
  1452  0056                     	ds	2
  1453  0058                     _current_sink_stable:	
  1454  0058                     	ds	2
  1455  005A                     _current_sink_timer:	
  1456  005A                     	ds	2
  1457  005C                     _motor_direction_timer:	
  1458  005C                     	ds	2
  1459  005E                     _pickit_timer:	
  1460  005E                     	ds	2
  1461  0060                     _testjig_timer:	
  1462  0060                     	ds	2
  1463  0062                     _tj_timer:	
  1464  0062                     	ds	2
  1465  0064                     _uart_receive_timer:	
  1466  0064                     	ds	2
  1467  0066                     _hund:	
  1468  0066                     	ds	1
  1469  0067                     _pickit_red_counter:	
  1470  0067                     	ds	1
  1471  0068                     _ten:	
  1472  0068                     	ds	1
  1473  0069                     _ten_thou:	
  1474  0069                     	ds	1
  1475  006A                     _unit:	
  1476  006A                     	ds	1
  1477  006B                     _thou:	
  1478  006B                     	ds	1
  1479                           
  1480                           	psect	dataBANK0
  1481  006E                     __pdataBANK0:	
  1482  006E                     _one_second_timer:	
  1483  006E                     	ds	2
  1484                           
  1485                           	psect	clrtext
  1486  07FA                     clear_ram0:	
  1487                           ;	Called with FSR0 containing the base address, and
  1488                           ;	WREG with the size to clear
  1489                           
  1490  07FA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1491  07FB                     clrloop0:	
  1492  07FB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1493  07FC  3101               	addfsr 0,1
  1494  07FD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1495  07FE  2FFB               	goto	clrloop0	;have we reached the end yet?
  1496  07FF  3400               	retlw	0	;all done for this memory range, return
  1497                           
  1498                           	psect	cstackCOMMON
  1499  0070                     __pcstackCOMMON:	
  1500  0070                     ?_init_ADC:	
  1501  0070                     ??_init_ADC:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504  0070                     ?_init_current_sink:	
  1505                           ; 1 bytes @ 0x0
  1506                           
  1507  0070                     ??_init_current_sink:	
  1508                           ; 1 bytes @ 0x0
  1509                           
  1510  0070                     ?_buzz_one:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513  0070                     ?_init_i2c:	
  1514                           ; 1 bytes @ 0x0
  1515                           
  1516  0070                     ??_init_i2c:	
  1517                           ; 1 bytes @ 0x0
  1518                           
  1519  0070                     ?_debug_fast_tx:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0070                     ?_power_supply_set:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0070                     ??_power_supply_set:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0070                     ?_TX_one:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0070                     ??_TX_one:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0070                     ?_RX_one_timeout:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0070                     ??_RX_one_timeout:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0070                     ?_RX_one:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0070                     ??_RX_one:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0070                     ?_digitalpot:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0070                     ?_isr:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0070                     ??_isr:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0070                     ?_main:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0070                     ?_i2c_Start:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  0070                     ??_i2c_Start:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564  0070                     ?_i2c_Write:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567  0070                     ??_i2c_Write:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570  0070                     ?_i2c_Stop:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573  0070                     ??_i2c_Stop:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576  0070                     ?_i2c_write_char:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579  0070                     ?_clear_lcd:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582  0070                     ?_i2c_first_line:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585  0070                     ?_i2c_second_line:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588  0070                     ?___bmul:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591  0070                     ?_ADC_get_val:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594  0070                     ?___wmul:	
  1595                           ; 2 bytes @ 0x0
  1596                           
  1597  0070                     ?___ftpack:	
  1598                           ; 2 bytes @ 0x0
  1599                           
  1600  0070                     i2c_Write@data:	
  1601                           ; 3 bytes @ 0x0
  1602                           
  1603  0070                     power_supply_set@supply:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606  0070                     ___bmul@multiplicand:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0070                     buzz_one@time:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0070                     debug_fast_tx@data:	
  1613                           ; 2 bytes @ 0x0
  1614                           
  1615  0070                     ___wmul@multiplier:	
  1616                           ; 2 bytes @ 0x0
  1617                           
  1618  0070                     ___ftpack@arg:	
  1619                           ; 2 bytes @ 0x0
  1620                           
  1621                           
  1622                           ; 3 bytes @ 0x0
  1623  0070                     	ds	1
  1624  0071                     ?_init_i2c_lcd_5v:	
  1625  0071                     ??_digitalpot:	
  1626                           ; 1 bytes @ 0x1
  1627                           
  1628  0071                     ?_i2c_Write_string:	
  1629                           ; 1 bytes @ 0x1
  1630                           
  1631  0071                     ??_i2c_write_char:	
  1632                           ; 1 bytes @ 0x1
  1633                           
  1634  0071                     ??_clear_lcd:	
  1635                           ; 1 bytes @ 0x1
  1636                           
  1637  0071                     ??_i2c_first_line:	
  1638                           ; 1 bytes @ 0x1
  1639                           
  1640  0071                     ??_i2c_second_line:	
  1641                           ; 1 bytes @ 0x1
  1642                           
  1643  0071                     ?_lcd_set_cursor:	
  1644                           ; 1 bytes @ 0x1
  1645                           
  1646  0071                     ??___bmul:	
  1647                           ; 1 bytes @ 0x1
  1648                           
  1649  0071                     i2c_write_char@char_data:	
  1650                           ; 1 bytes @ 0x1
  1651                           
  1652  0071                     init_i2c_lcd_5v@single1_double2:	
  1653                           ; 1 bytes @ 0x1
  1654                           
  1655  0071                     lcd_set_cursor@col:	
  1656                           ; 1 bytes @ 0x1
  1657                           
  1658  0071                     TX_one@data:	
  1659                           ; 1 bytes @ 0x1
  1660                           
  1661  0071                     RX_one@i:	
  1662                           ; 1 bytes @ 0x1
  1663                           
  1664  0071                     RX_one_timeout@i:	
  1665                           ; 1 bytes @ 0x1
  1666                           
  1667  0071                     ___bmul@product:	
  1668                           ; 1 bytes @ 0x1
  1669                           
  1670  0071                     i2c_Write_string@data:	
  1671                           ; 1 bytes @ 0x1
  1672                           
  1673                           
  1674                           ; 2 bytes @ 0x1
  1675  0071                     	ds	1
  1676  0072                     ??_buzz_one:	
  1677  0072                     ??_init_i2c_lcd_5v:	
  1678                           ; 1 bytes @ 0x2
  1679                           
  1680  0072                     ??_debug_fast_tx:	
  1681                           ; 1 bytes @ 0x2
  1682                           
  1683  0072                     ??_lcd_set_cursor:	
  1684                           ; 1 bytes @ 0x2
  1685                           
  1686  0072                     lcd_set_cursor@row:	
  1687                           ; 1 bytes @ 0x2
  1688                           
  1689  0072                     debug_fast_tx@i:	
  1690                           ; 1 bytes @ 0x2
  1691                           
  1692  0072                     TX_one@i:	
  1693                           ; 1 bytes @ 0x2
  1694                           
  1695  0072                     RX_one@data:	
  1696                           ; 1 bytes @ 0x2
  1697                           
  1698  0072                     RX_one_timeout@data:	
  1699                           ; 1 bytes @ 0x2
  1700                           
  1701  0072                     ___bmul@multiplier:	
  1702                           ; 1 bytes @ 0x2
  1703                           
  1704  0072                     ___wmul@multiplicand:	
  1705                           ; 1 bytes @ 0x2
  1706                           
  1707                           
  1708                           ; 2 bytes @ 0x2
  1709  0072                     	ds	1
  1710  0073                     ??_ADC_get_val:	
  1711  0073                     ??_i2c_Write_string:	
  1712                           ; 1 bytes @ 0x3
  1713                           
  1714  0073                     lcd_set_cursor@LCD_position:	
  1715                           ; 1 bytes @ 0x3
  1716                           
  1717  0073                     ADC_get_val@channel:	
  1718                           ; 1 bytes @ 0x3
  1719                           
  1720  0073                     digitalpot@value:	
  1721                           ; 1 bytes @ 0x3
  1722                           
  1723  0073                     ___ftpack@exp:	
  1724                           ; 1 bytes @ 0x3
  1725                           
  1726                           
  1727                           ; 1 bytes @ 0x3
  1728  0073                     	ds	1
  1729  0074                     ?_print_screen:	
  1730  0074                     ?_Vout_set:	
  1731                           ; 1 bytes @ 0x4
  1732                           
  1733  0074                     ??___wmul:	
  1734                           ; 1 bytes @ 0x4
  1735                           
  1736  0074                     init_i2c_lcd_5v@contrast:	
  1737                           ; 1 bytes @ 0x4
  1738                           
  1739  0074                     ___ftpack@sign:	
  1740                           ; 1 bytes @ 0x4
  1741                           
  1742  0074                     print_screen@top:	
  1743                           ; 1 bytes @ 0x4
  1744                           
  1745  0074                     ADC_get_val@return_val:	
  1746                           ; 2 bytes @ 0x4
  1747                           
  1748  0074                     Vout_set@Volts:	
  1749                           ; 2 bytes @ 0x4
  1750                           
  1751  0074                     ___wmul@product:	
  1752                           ; 2 bytes @ 0x4
  1753                           
  1754                           
  1755                           ; 2 bytes @ 0x4
  1756  0074                     	ds	1
  1757  0075                     ??___ftpack:	
  1758                           
  1759                           ; 1 bytes @ 0x5
  1760  0075                     	ds	1
  1761  0076                     ??_Vout_set:	
  1762  0076                     ?_ten_thou_conv:	
  1763                           ; 1 bytes @ 0x6
  1764                           
  1765  0076                     ten_thou_conv@n:	
  1766                           ; 1 bytes @ 0x6
  1767                           
  1768  0076                     print_screen@bottom:	
  1769                           ; 2 bytes @ 0x6
  1770                           
  1771  0076                     Vout_set@digi_step:	
  1772                           ; 2 bytes @ 0x6
  1773                           
  1774                           
  1775                           ; 4 bytes @ 0x6
  1776  0076                     	ds	2
  1777  0078                     ??_print_screen:	
  1778  0078                     ?_testjig_done:	
  1779                           ; 1 bytes @ 0x8
  1780                           
  1781  0078                     ?_print_error:	
  1782                           ; 1 bytes @ 0x8
  1783                           
  1784  0078                     ??_ten_thou_conv:	
  1785                           ; 1 bytes @ 0x8
  1786                           
  1787  0078                     ?___lwtoft:	
  1788                           ; 1 bytes @ 0x8
  1789                           
  1790  0078                     testjig_done@device_type:	
  1791                           ; 3 bytes @ 0x8
  1792                           
  1793  0078                     print_error@top:	
  1794                           ; 1 bytes @ 0x8
  1795                           
  1796  0078                     ___lwtoft@c:	
  1797                           ; 2 bytes @ 0x8
  1798                           
  1799                           
  1800                           ; 2 bytes @ 0x8
  1801  0078                     	ds	1
  1802  0079                     ??_testjig_done:	
  1803                           
  1804                           ; 1 bytes @ 0x9
  1805  0079                     	ds	1
  1806  007A                     print_error@bottom:	
  1807                           
  1808                           ; 2 bytes @ 0xA
  1809  007A                     	ds	1
  1810  007B                     ??_lcd_print_int:	
  1811  007B                     ??___ftmul:	
  1812                           ; 1 bytes @ 0xB
  1813                           
  1814  007B                     ??___lwtoft:	
  1815                           ; 1 bytes @ 0xB
  1816                           
  1817                           
  1818                           ; 1 bytes @ 0xB
  1819  007B                     	ds	1
  1820  007C                     testjig_done@state:	
  1821                           
  1822                           ; 1 bytes @ 0xC
  1823  007C                     	ds	2
  1824  007E                     ??_get_30v_current:	
  1825                           
  1826                           	psect	cstackBANK0
  1827  0020                     __pcstackBANK0:	
  1828                           ; 1 bytes @ 0xE
  1829                           
  1830  0020                     ??_print_error:	
  1831  0020                     ?_lcd_print_int:	
  1832                           ; 1 bytes @ 0x0
  1833                           
  1834  0020                     ?___ftmul:	
  1835                           ; 1 bytes @ 0x0
  1836                           
  1837  0020                     lcd_print_int@number:	
  1838                           ; 3 bytes @ 0x0
  1839                           
  1840  0020                     ___ftmul@f1:	
  1841                           ; 2 bytes @ 0x0
  1842                           
  1843                           
  1844                           ; 3 bytes @ 0x0
  1845  0020                     	ds	2
  1846  0022                     lcd_print_int@pos:	
  1847                           
  1848                           ; 2 bytes @ 0x2
  1849  0022                     	ds	1
  1850  0023                     ___ftmul@f2:	
  1851                           
  1852                           ; 3 bytes @ 0x3
  1853  0023                     	ds	1
  1854  0024                     lcd_print_int@decimal:	
  1855                           
  1856                           ; 1 bytes @ 0x4
  1857  0024                     	ds	1
  1858  0025                     lcd_print_int@ten_thou_digit:	
  1859                           
  1860                           ; 1 bytes @ 0x5
  1861  0025                     	ds	1
  1862  0026                     ___ftmul@exp:	
  1863                           
  1864                           ; 1 bytes @ 0x6
  1865  0026                     	ds	1
  1866  0027                     ___ftmul@f3_as_product:	
  1867                           
  1868                           ; 3 bytes @ 0x7
  1869  0027                     	ds	3
  1870  002A                     ___ftmul@cntr:	
  1871                           
  1872                           ; 1 bytes @ 0xA
  1873  002A                     	ds	1
  1874  002B                     ___ftmul@sign:	
  1875                           
  1876                           ; 1 bytes @ 0xB
  1877  002B                     	ds	1
  1878  002C                     ?___ftadd:	
  1879  002C                     ___ftadd@f1:	
  1880                           ; 3 bytes @ 0xC
  1881                           
  1882                           
  1883                           ; 3 bytes @ 0xC
  1884  002C                     	ds	3
  1885  002F                     ___ftadd@f2:	
  1886                           
  1887                           ; 3 bytes @ 0xF
  1888  002F                     	ds	3
  1889  0032                     ??___ftadd:	
  1890                           
  1891                           ; 1 bytes @ 0x12
  1892  0032                     	ds	3
  1893  0035                     ___ftadd@sign:	
  1894                           
  1895                           ; 1 bytes @ 0x15
  1896  0035                     	ds	1
  1897  0036                     ___ftadd@exp2:	
  1898                           
  1899                           ; 1 bytes @ 0x16
  1900  0036                     	ds	1
  1901  0037                     ___ftadd@exp1:	
  1902                           
  1903                           ; 1 bytes @ 0x17
  1904  0037                     	ds	1
  1905  0038                     ?___fttol:	
  1906  0038                     ___fttol@f1:	
  1907                           ; 4 bytes @ 0x18
  1908                           
  1909                           
  1910                           ; 3 bytes @ 0x18
  1911  0038                     	ds	4
  1912  003C                     ??___fttol:	
  1913                           
  1914                           ; 1 bytes @ 0x1C
  1915  003C                     	ds	3
  1916  003F                     ___fttol@sign1:	
  1917                           
  1918                           ; 1 bytes @ 0x1F
  1919  003F                     	ds	1
  1920  0040                     ___fttol@lval:	
  1921                           
  1922                           ; 4 bytes @ 0x20
  1923  0040                     	ds	4
  1924  0044                     ___fttol@exp1:	
  1925                           
  1926                           ; 1 bytes @ 0x24
  1927  0044                     	ds	1
  1928  0045                     ?_get_30v_current:	
  1929                           
  1930                           ; 2 bytes @ 0x25
  1931  0045                     	ds	2
  1932  0047                     get_30v_current@temp:	
  1933                           
  1934                           ; 2 bytes @ 0x27
  1935  0047                     	ds	2
  1936  0049                     ??_main:	
  1937                           
  1938                           ; 1 bytes @ 0x29
  1939  0049                     	ds	3
  1940  004C                     main@temp:	
  1941                           
  1942                           ; 2 bytes @ 0x2C
  1943  004C                     	ds	2
  1944  004E                     main@mem_size:	
  1945                           
  1946                           ; 2 bytes @ 0x2E
  1947  004E                     	ds	2
  1948  0050                     main@i:	
  1949                           
  1950                           ; 2 bytes @ 0x30
  1951  0050                     	ds	2
  1952  0052                     main@RX_data:	
  1953                           
  1954                           ; 1 bytes @ 0x32
  1955  0052                     	ds	1
  1956  0053                     main@device_type:	
  1957                           
  1958                           ; 1 bytes @ 0x33
  1959  0053                     	ds	1
  1960                           
  1961                           	psect	maintext
  1962  062F                     __pmaintext:	
  1963 ;;
  1964 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1965 ;;
  1966 ;; *************** function _main *****************
  1967 ;; Defined at:
  1968 ;;		line 471 in file "Multi_RX_testjig_v2.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  mem_size        2   46[BANK0 ] unsigned int 
  1973 ;;  i               2   48[BANK0 ] unsigned int 
  1974 ;;  temp            2   44[BANK0 ] unsigned int 
  1975 ;;  device_type     1   51[BANK0 ] unsigned char 
  1976 ;;  RX_data         1   50[BANK0 ] unsigned char 
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : B1F/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  1986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1987 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1988 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1989 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1990 ;;Total ram usage:       11 bytes
  1991 ;; Hardware stack levels required when called:    5
  1992 ;; This function calls:
  1993 ;;		_ADC_get_val
  1994 ;;		_RX_one
  1995 ;;		_RX_one_timeout
  1996 ;;		_TX_one
  1997 ;;		_Vout_set
  1998 ;;		_buzz_one
  1999 ;;		_debug_fast_tx
  2000 ;;		_get_30v_current
  2001 ;;		_init_ADC
  2002 ;;		_init_current_sink
  2003 ;;		_init_i2c
  2004 ;;		_init_i2c_lcd_5v
  2005 ;;		_lcd_print_int
  2006 ;;		_power_supply_set
  2007 ;;		_print_error
  2008 ;;		_print_screen
  2009 ;;		_testjig_done
  2010 ;; This function is called by:
  2011 ;;		Startup code after reset
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           
  2016                           ;psect for function _main
  2017  062F                     _main:	
  2018                           
  2019                           ;Multi_RX_testjig_v2.c: 474: OSCCON = 0x7A;
  2020                           
  2021                           ;incstack = 0
  2022                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2023  062F  307A               	movlw	122
  2024  0630  0021               	movlb	1	; select bank1
  2025  0631  0099               	movwf	25	;volatile
  2026                           
  2027                           ;Multi_RX_testjig_v2.c: 476: OPTION_REG = 0b11010000;
  2028  0632  30D0               	movlw	208
  2029  0633  0095               	movwf	21	;volatile
  2030                           
  2031                           ;Multi_RX_testjig_v2.c: 477: TMR0 = 0x00;
  2032  0634  0020               	movlb	0	; select bank0
  2033  0635  0195               	clrf	21	;volatile
  2034                           
  2035                           ;Multi_RX_testjig_v2.c: 478: TMR0IF = 0;
  2036  0636  110B               	bcf	11,2	;volatile
  2037                           
  2038                           ;Multi_RX_testjig_v2.c: 479: TMR0IE = 1;
  2039  0637  168B               	bsf	11,5	;volatile
  2040                           
  2041                           ;Multi_RX_testjig_v2.c: 482: TRISA = 0b00001111;
  2042  0638  300F               	movlw	15
  2043  0639  0021               	movlb	1	; select bank1
  2044  063A  008C               	movwf	12	;volatile
  2045                           
  2046                           ;Multi_RX_testjig_v2.c: 483: TRISB = 0b11001111;
  2047  063B  30CF               	movlw	207
  2048  063C  008D               	movwf	13	;volatile
  2049                           
  2050                           ;Multi_RX_testjig_v2.c: 484: TRISC = 0b00011010;
  2051  063D  301A               	movlw	26
  2052  063E  008E               	movwf	14	;volatile
  2053                           
  2054                           ;Multi_RX_testjig_v2.c: 485: TRISD = 0b10001011;
  2055  063F  308B               	movlw	139
  2056  0640  008F               	movwf	15	;volatile
  2057                           
  2058                           ;Multi_RX_testjig_v2.c: 486: TRISE = 0b11110110;
  2059  0641  30F6               	movlw	246
  2060  0642  0090               	movwf	16	;volatile
  2061                           
  2062                           ;Multi_RX_testjig_v2.c: 487: TRISF = 0b00101111;
  2063  0643  302F               	movlw	47
  2064  0644  0026               	movlb	6	; select bank6
  2065  0645  008C               	movwf	12	;volatile
  2066                           
  2067                           ;Multi_RX_testjig_v2.c: 488: TRISG = 0b11101111;
  2068  0646  30EF               	movlw	239
  2069  0647  008D               	movwf	13	;volatile
  2070                           
  2071                           ;Multi_RX_testjig_v2.c: 490: PORTA = 0b00000000;
  2072  0648  0020               	movlb	0	; select bank0
  2073  0649  018C               	clrf	12	;volatile
  2074                           
  2075                           ;Multi_RX_testjig_v2.c: 491: PORTB = 0b00000000;
  2076  064A  018D               	clrf	13	;volatile
  2077                           
  2078                           ;Multi_RX_testjig_v2.c: 492: PORTC = 0b00000000;
  2079  064B  018E               	clrf	14	;volatile
  2080                           
  2081                           ;Multi_RX_testjig_v2.c: 493: PORTD = 0b01000000;
  2082  064C  3040               	movlw	64
  2083  064D  008F               	movwf	15	;volatile
  2084                           
  2085                           ;Multi_RX_testjig_v2.c: 494: PORTE = 0b00000000;
  2086  064E  0190               	clrf	16	;volatile
  2087                           
  2088                           ;Multi_RX_testjig_v2.c: 495: PORTF = 0b00000000;
  2089  064F  0025               	movlb	5	; select bank5
  2090  0650  018C               	clrf	12	;volatile
  2091                           
  2092                           ;Multi_RX_testjig_v2.c: 496: PORTG = 0b00000000;
  2093  0651  018D               	clrf	13	;volatile
  2094                           
  2095                           ;Multi_RX_testjig_v2.c: 498: WPUB = 0b00000000;
  2096  0652  0024               	movlb	4	; select bank4
  2097  0653  018D               	clrf	13	;volatile
  2098                           
  2099                           ;Multi_RX_testjig_v2.c: 499: WPUD = 0b00000000;
  2100  0654  018F               	clrf	15	;volatile
  2101                           
  2102                           ;Multi_RX_testjig_v2.c: 500: WPUE = 0b00000000;
  2103  0655  0190               	clrf	16	;volatile
  2104                           
  2105                           ;Multi_RX_testjig_v2.c: 502: ANSELA = 0b00000000;
  2106  0656  0023               	movlb	3	; select bank3
  2107  0657  018C               	clrf	12	;volatile
  2108                           
  2109                           ;Multi_RX_testjig_v2.c: 503: ANSELB = 0b00001100;
  2110  0658  300C               	movlw	12
  2111  0659  008D               	movwf	13	;volatile
  2112                           
  2113                           ;Multi_RX_testjig_v2.c: 504: ANSELD = 0b00001111;
  2114  065A  300F               	movlw	15
  2115  065B  008F               	movwf	15	;volatile
  2116                           
  2117                           ;Multi_RX_testjig_v2.c: 505: ANSELE = 0b00000100;
  2118  065C  3004               	movlw	4
  2119  065D  0090               	movwf	16	;volatile
  2120                           
  2121                           ;Multi_RX_testjig_v2.c: 506: ANSELF = 0b00000000;
  2122  065E  0028               	movlb	8	; select bank8
  2123  065F  018C               	clrf	12	;volatile
  2124                           
  2125                           ;Multi_RX_testjig_v2.c: 507: ANSELG = 0b00000000;
  2126  0660  018D               	clrf	13	;volatile
  2127                           
  2128                           ;Multi_RX_testjig_v2.c: 510: init_ADC();
  2129  0661  3188  2053  3186   	fcall	_init_ADC
  2130                           
  2131                           ;Multi_RX_testjig_v2.c: 511: init_current_sink();
  2132  0664  3188  205A  3186   	fcall	_init_current_sink
  2133                           
  2134                           ;Multi_RX_testjig_v2.c: 512: pickit_state = pickit_idle;
  2135  0667  3005               	movlw	5
  2136  0668  0021               	movlb	1	; select bank1
  2137  0669  00A0               	movwf	_pickit_state^(0+128)
  2138                           
  2139                           ;Multi_RX_testjig_v2.c: 514: RA5 = 0;
  2140  066A  0020               	movlb	0	; select bank0
  2141  066B  128C               	bcf	12,5	;volatile
  2142                           
  2143                           ;Multi_RX_testjig_v2.c: 515: buzz_one(200);
  2144  066C  30C8               	movlw	200
  2145  066D  00F0               	movwf	buzz_one@time
  2146  066E  01F1               	clrf	buzz_one@time+1
  2147  066F  3183  23EC  3186   	fcall	_buzz_one
  2148                           
  2149                           ;Multi_RX_testjig_v2.c: 516: RA5 = 1;
  2150  0672  0020               	movlb	0	; select bank0
  2151  0673  168C               	bsf	12,5	;volatile
  2152                           
  2153                           ;Multi_RX_testjig_v2.c: 517: init_i2c();
  2154  0674  3188  206F  3186   	fcall	_init_i2c
  2155                           
  2156                           ;Multi_RX_testjig_v2.c: 524: init_i2c_lcd_5v(8, 0x38);
  2157  0677  3038               	movlw	56
  2158  0678  00F1               	movwf	init_i2c_lcd_5v@single1_double2
  2159  0679  3008               	movlw	8
  2160  067A  3183  239E  3186   	fcall	_init_i2c_lcd_5v
  2161                           
  2162                           ;Multi_RX_testjig_v2.c: 525: print_screen("Multi_RX", "Test-Jig|Startup");
  2163  067D  304C               	movlw	low (STR_1| (0+32768))
  2164  067E  00F4               	movwf	print_screen@top
  2165  067F  3093               	movlw	high (STR_1| (0+32768))
  2166  0680  00F5               	movwf	print_screen@top+1
  2167  0681  307D               	movlw	low (STR_2| (0+32768))
  2168  0682  00F6               	movwf	print_screen@bottom
  2169  0683  3090               	movlw	high (STR_2| (0+32768))
  2170  0684  00F7               	movwf	print_screen@bottom+1
  2171  0685  3182  22D6  3186   	fcall	_print_screen
  2172                           
  2173                           ;Multi_RX_testjig_v2.c: 526: RA4 = 1;
  2174  0688  0020               	movlb	0	; select bank0
  2175  0689  160C               	bsf	12,4	;volatile
  2176                           
  2177                           ;Multi_RX_testjig_v2.c: 527: GIE = 1;
  2178  068A  178B               	bsf	11,7	;volatile
  2179                           
  2180                           ;Multi_RX_testjig_v2.c: 528: LATC7 = 1;
  2181  068B  0022               	movlb	2	; select bank2
  2182  068C  178E               	bsf	14,7	;volatile
  2183                           
  2184                           ;Multi_RX_testjig_v2.c: 529: _delay((unsigned long)((100)*(16000000/4000.0)));
  2185  068D  3003               	movlw	3
  2186  068E  0020               	movlb	0	; select bank0
  2187  068F  00CB               	movwf	??_main+2
  2188  0690  3008               	movlw	8
  2189  0691  00CA               	movwf	??_main+1
  2190  0692  3078               	movlw	120
  2191  0693  00C9               	movwf	??_main
  2192  0694                     u4817:	
  2193  0694  0BC9               	decfsz	??_main,f
  2194  0695  2E94               	goto	u4817
  2195  0696  0BCA               	decfsz	??_main+1,f
  2196  0697  2E94               	goto	u4817
  2197  0698  0BCB               	decfsz	??_main+2,f
  2198  0699  2E94               	goto	u4817
  2199                           
  2200                           ;Multi_RX_testjig_v2.c: 530: debug_fast_tx(0xAAAA);
  2201  069A  30AA               	movlw	170
  2202  069B  00F0               	movwf	debug_fast_tx@data
  2203  069C  00F1               	movwf	debug_fast_tx@data+1
  2204  069D  3182  22A9  3186   	fcall	_debug_fast_tx
  2205                           
  2206                           ;Multi_RX_testjig_v2.c: 531: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2207  06A0  3085               	movlw	133
  2208  06A1  0020               	movlb	0	; select bank0
  2209  06A2  00C9               	movwf	??_main
  2210  06A3                     u4827:	
  2211  06A3  0BC9               	decfsz	??_main,f
  2212  06A4  2EA3               	goto	u4827
  2213                           
  2214                           ;Multi_RX_testjig_v2.c: 532: debug_fast_tx(0x5555);
  2215  06A5  3055               	movlw	85
  2216  06A6  00F0               	movwf	debug_fast_tx@data
  2217  06A7  00F1               	movwf	debug_fast_tx@data+1
  2218  06A8  3182  22A9  3186   	fcall	_debug_fast_tx
  2219                           
  2220                           ;Multi_RX_testjig_v2.c: 533: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2221  06AB  3085               	movlw	133
  2222  06AC  0020               	movlb	0	; select bank0
  2223  06AD  00C9               	movwf	??_main
  2224  06AE                     u4837:	
  2225  06AE  0BC9               	decfsz	??_main,f
  2226  06AF  2EAE               	goto	u4837
  2227                           
  2228                           ;Multi_RX_testjig_v2.c: 535: RE0 = 0;
  2229  06B0  0020               	movlb	0	; select bank0
  2230  06B1  1010               	bcf	16,0	;volatile
  2231                           
  2232                           ;Multi_RX_testjig_v2.c: 537: if(PCONbits.nRMCLR == 1)
  2233  06B2  0021               	movlb	1	; select bank1
  2234  06B3  1D96               	btfss	22,3	;volatile
  2235  06B4  2EBA               	goto	l3685
  2236  06B5  3002               	movlw	2
  2237                           
  2238                           ;Multi_RX_testjig_v2.c: 538: testjig_done(2, 0);
  2239  06B6  01F8               	clrf	testjig_done@device_type
  2240  06B7  3181  2182  3186   	fcall	_testjig_done
  2241  06BA                     l3685:	
  2242                           
  2243                           ;Multi_RX_testjig_v2.c: 541: if(RF3 == 1)
  2244  06BA  0025               	movlb	5	; select bank5
  2245  06BB  1D8C               	btfss	12,3	;volatile
  2246  06BC  2EC8               	goto	l304
  2247                           
  2248                           ;Multi_RX_testjig_v2.c: 542: print_error("Multi_RX", "-> Insert PCB");
  2249  06BD  304C               	movlw	low (STR_1| (0+32768))
  2250  06BE  00F8               	movwf	print_error@top
  2251  06BF  3093               	movlw	high (STR_1| (0+32768))
  2252  06C0  00F9               	movwf	print_error@top+1
  2253  06C1  3066               	movlw	low (STR_4| (0+32768))
  2254  06C2  00FA               	movwf	print_error@bottom
  2255  06C3  3091               	movlw	high (STR_4| (0+32768))
  2256  06C4  00FB               	movwf	print_error@bottom+1
  2257  06C5  3182  22F8  3186   	fcall	_print_error
  2258  06C8                     l304:	
  2259                           
  2260                           ;Multi_RX_testjig_v2.c: 545: print_screen("Powering board", "");
  2261  06C8  30FF               	movlw	low (STR_5| (0+32768))
  2262  06C9  00F4               	movwf	print_screen@top
  2263  06CA  3090               	movlw	high (STR_5| (0+32768))
  2264  06CB  00F5               	movwf	print_screen@top+1
  2265  06CC  30AE               	movlw	low ((STR_159+15)| (0+32768))
  2266  06CD  00F6               	movwf	print_screen@bottom
  2267  06CE  3090               	movlw	high ((STR_159+15)| (0+32768))
  2268  06CF  00F7               	movwf	print_screen@bottom+1
  2269  06D0  3182  22D6  3186   	fcall	_print_screen
  2270                           
  2271                           ;Multi_RX_testjig_v2.c: 548: Vout_set(12);
  2272  06D3  300C               	movlw	12
  2273  06D4  00F4               	movwf	Vout_set@Volts
  2274  06D5  01F5               	clrf	Vout_set@Volts+1
  2275  06D6  3180  20B0  3186   	fcall	_Vout_set
  2276                           
  2277                           ;Multi_RX_testjig_v2.c: 549: power_supply_set(0);
  2278  06D9  3000               	movlw	0
  2279  06DA  3183  23F4  3186   	fcall	_power_supply_set
  2280                           
  2281                           ;Multi_RX_testjig_v2.c: 550: _delay((unsigned long)((50)*(16000000/4000.0)));
  2282  06DD  3002               	movlw	2
  2283  06DE  0020               	movlb	0	; select bank0
  2284  06DF  00CB               	movwf	??_main+2
  2285  06E0  3004               	movlw	4
  2286  06E1  00CA               	movwf	??_main+1
  2287  06E2  30BA               	movlw	186
  2288  06E3  00C9               	movwf	??_main
  2289  06E4                     u4847:	
  2290  06E4  0BC9               	decfsz	??_main,f
  2291  06E5  2EE4               	goto	u4847
  2292  06E6  0BCA               	decfsz	??_main+1,f
  2293  06E7  2EE4               	goto	u4847
  2294  06E8  0BCB               	decfsz	??_main+2,f
  2295  06E9  2EE4               	goto	u4847
  2296  06EA  0000               	nop
  2297                           
  2298                           ;Multi_RX_testjig_v2.c: 551: ADC_val = ADC_get_val(0b01011111);
  2299  06EB  305F               	movlw	95
  2300  06EC  3184  2454  3186   	fcall	_ADC_get_val
  2301                           
  2302                           ;Multi_RX_testjig_v2.c: 552: testjig_timer = (unsigned int)(7518.8/2);
  2303  06EF  30AF               	movlw	175
  2304  06F0  0020               	movlb	0	; select bank0
  2305  06F1  00E0               	movwf	_testjig_timer	;volatile
  2306  06F2  300E               	movlw	14
  2307  06F3  00E1               	movwf	_testjig_timer+1	;volatile
  2308  06F4  2F0E               	goto	l3695
  2309  06F5                     l3697:	
  2310  06F5  305F               	movlw	95
  2311  06F6  3184  2454  3186   	fcall	_ADC_get_val
  2312  06F9  3000               	movlw	0
  2313  06FA  0271               	subwf	?_ADC_get_val+1,w
  2314  06FB  307B               	movlw	123
  2315  06FC  1903               	skipnz
  2316  06FD  0270               	subwf	?_ADC_get_val,w
  2317  06FE  1C03               	skipc
  2318  06FF  2F19               	goto	l3703
  2319  0700  3184  2415  3186   	fcall	_get_30v_current
  2320  0703  3000               	movlw	0
  2321  0704  0246               	subwf	?_get_30v_current+1,w
  2322  0705  301E               	movlw	30
  2323  0706  1903               	skipnz
  2324  0707  0245               	subwf	?_get_30v_current,w
  2325  0708  1803               	skipnc
  2326  0709  2F19               	goto	l3703
  2327  070A  0860               	movf	_testjig_timer,w	;volatile
  2328  070B  0461               	iorwf	_testjig_timer+1,w	;volatile
  2329  070C  1903               	btfsc	3,2
  2330  070D  2F19               	goto	l3703
  2331  070E                     l3695:	
  2332                           ;Multi_RX_testjig_v2.c: 553: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08)) && (get_30v_current() < 30) && testjig_timer);
  2333                           
  2334  070E  305F               	movlw	95
  2335  070F  3184  2454  3186   	fcall	_ADC_get_val
  2336  0712  3000               	movlw	0
  2337  0713  0271               	subwf	?_ADC_get_val+1,w
  2338  0714  3068               	movlw	104
  2339  0715  1903               	skipnz
  2340  0716  0270               	subwf	?_ADC_get_val,w
  2341  0717  1C03               	btfss	3,0
  2342  0718  2EF5               	goto	l3697
  2343  0719                     l3703:	
  2344                           
  2345                           ;Multi_RX_testjig_v2.c: 554: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  2346  0719  305F               	movlw	95
  2347  071A  3184  2454  3186   	fcall	_ADC_get_val
  2348  071D  3000               	movlw	0
  2349  071E  0271               	subwf	?_ADC_get_val+1,w
  2350  071F  3068               	movlw	104
  2351  0720  1903               	skipnz
  2352  0721  0270               	subwf	?_ADC_get_val,w
  2353  0722  1803               	skipnc
  2354  0723  2F2C               	goto	l3707
  2355                           
  2356                           ;Multi_RX_testjig_v2.c: 555: print_error("12v-5v supply", "Volt Error L");
  2357  0724  309E               	movlw	low (STR_7| (0+32768))
  2358  0725  00F8               	movwf	print_error@top
  2359  0726  3091               	movlw	high (STR_7| (0+32768))
  2360  0727  00F9               	movwf	print_error@top+1
  2361  0728  30EE               	movlw	low (STR_8| (0+32768))
  2362  0729  00FA               	movwf	print_error@bottom
  2363  072A  3091               	movlw	high (STR_8| (0+32768))
  2364  072B  2F5C               	goto	L1
  2365  072C                     l3707:	
  2366                           
  2367                           ;Multi_RX_testjig_v2.c: 556: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  2368  072C  305F               	movlw	95
  2369  072D  3184  2454  3186   	fcall	_ADC_get_val
  2370  0730  3000               	movlw	0
  2371  0731  0271               	subwf	?_ADC_get_val+1,w
  2372  0732  307B               	movlw	123
  2373  0733  1903               	skipnz
  2374  0734  0270               	subwf	?_ADC_get_val,w
  2375  0735  1C03               	skipc
  2376  0736  2F3F               	goto	l3711
  2377                           
  2378                           ;Multi_RX_testjig_v2.c: 557: print_error("12v-5v supply", "Volt Error H");
  2379  0737  309E               	movlw	low (STR_7| (0+32768))
  2380  0738  00F8               	movwf	print_error@top
  2381  0739  3091               	movlw	high (STR_7| (0+32768))
  2382  073A  00F9               	movwf	print_error@top+1
  2383  073B  30D4               	movlw	low (STR_10| (0+32768))
  2384  073C  00FA               	movwf	print_error@bottom
  2385  073D  3091               	movlw	high (STR_10| (0+32768))
  2386  073E  2F5C               	goto	L1
  2387  073F                     l3711:	
  2388                           
  2389                           ;Multi_RX_testjig_v2.c: 558: else if((get_30v_current() >= 60))
  2390  073F  3184  2415  3186   	fcall	_get_30v_current
  2391  0742  3000               	movlw	0
  2392  0743  0246               	subwf	?_get_30v_current+1,w
  2393  0744  303C               	movlw	60
  2394  0745  1903               	skipnz
  2395  0746  0245               	subwf	?_get_30v_current,w
  2396  0747  1C03               	skipc
  2397  0748  2F51               	goto	l3715
  2398                           
  2399                           ;Multi_RX_testjig_v2.c: 559: print_error("12v supply", "Curr Error");
  2400  0749  303F               	movlw	low ((STR_19+4)| (0+32768))
  2401  074A  00F8               	movwf	print_error@top
  2402  074B  3091               	movlw	high ((STR_19+4)| (0+32768))
  2403  074C  00F9               	movwf	print_error@top+1
  2404  074D  309C               	movlw	low (STR_12| (0+32768))
  2405  074E  00FA               	movwf	print_error@bottom
  2406  074F  3092               	movlw	high (STR_12| (0+32768))
  2407  0750  2F5C               	goto	L1
  2408  0751                     l3715:	
  2409                           
  2410                           ;Multi_RX_testjig_v2.c: 560: else if(testjig_timer == 0)
  2411  0751  0860               	movf	_testjig_timer,w	;volatile
  2412  0752  0461               	iorwf	_testjig_timer+1,w	;volatile
  2413  0753  1D03               	btfss	3,2
  2414  0754  2F60               	goto	l311
  2415                           
  2416                           ;Multi_RX_testjig_v2.c: 561: print_error("12v-5v supply", "T-out Error");
  2417  0755  309E               	movlw	low (STR_7| (0+32768))
  2418  0756  00F8               	movwf	print_error@top
  2419  0757  3091               	movlw	high (STR_7| (0+32768))
  2420  0758  00F9               	movwf	print_error@top+1
  2421  0759  3084               	movlw	low (STR_14| (0+32768))
  2422  075A  00FA               	movwf	print_error@bottom
  2423  075B  3092               	movlw	high (STR_14| (0+32768))
  2424  075C                     L1:	
  2425  075C  00FB               	movwf	print_error@bottom+1
  2426  075D  3182  22F8  3186   	fcall	_print_error
  2427  0760                     l311:	
  2428                           
  2429                           ;Multi_RX_testjig_v2.c: 566: power_supply_set(1);
  2430  0760  3001               	movlw	1
  2431  0761  3183  23F4  3186   	fcall	_power_supply_set
  2432                           
  2433                           ;Multi_RX_testjig_v2.c: 567: Vout_set(16);
  2434  0764  3010               	movlw	16
  2435  0765  00F4               	movwf	Vout_set@Volts
  2436  0766  01F5               	clrf	Vout_set@Volts+1
  2437  0767  3180  20B0  3186   	fcall	_Vout_set
  2438                           
  2439                           ;Multi_RX_testjig_v2.c: 568: _delay((unsigned long)((150)*(16000000/4000.0)));
  2440  076A  3004               	movlw	4
  2441  076B  0020               	movlb	0	; select bank0
  2442  076C  00CB               	movwf	??_main+2
  2443  076D  300C               	movlw	12
  2444  076E  00CA               	movwf	??_main+1
  2445  076F  3035               	movlw	53
  2446  0770  00C9               	movwf	??_main
  2447  0771                     u4857:	
  2448  0771  0BC9               	decfsz	??_main,f
  2449  0772  2F71               	goto	u4857
  2450  0773  0BCA               	decfsz	??_main+1,f
  2451  0774  2F71               	goto	u4857
  2452  0775  0BCB               	decfsz	??_main+2,f
  2453  0776  2F71               	goto	u4857
  2454  0777  3200               	nop2
  2455                           
  2456                           ;Multi_RX_testjig_v2.c: 569: testjig_timer = (unsigned int)(7518.8/2);
  2457  0778  30AF               	movlw	175
  2458  0779  0020               	movlb	0	; select bank0
  2459  077A  00E0               	movwf	_testjig_timer	;volatile
  2460  077B  300E               	movlw	14
  2461  077C  00E1               	movwf	_testjig_timer+1	;volatile
  2462  077D  3188  28D7         	goto	l3723
  2463                           
  2464                           	psect	swtext1
  2465  080C                     __pswtext1:	
  2466  080C                     S4321:	
  2467  080C  3183  2BF6         	ljmp	l690
  2468  080E  3183  2BFB         	ljmp	l692
  2469  0810  3184  2C00         	ljmp	l693
  2470  0812  3184  2C05         	ljmp	l694
  2471                           
  2472                           	psect	text12
  2473  1719                     __ptext12:	
  2474 ;; *************** function _ten_thou_conv *****************
  2475 ;; Defined at:
  2476 ;;		line 1478 in file "Multi_RX_testjig_v2.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  n               2    6[COMMON] int 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0, pclath, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 1F/0
  2487 ;;		On exit  : 1F/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2492 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2493 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2494 ;;Total ram usage:        5 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    2
  2497 ;; This function calls:
  2498 ;;		___bmul
  2499 ;;		___wmul
  2500 ;; This function is called by:
  2501 ;;		_lcd_print_int
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           
  2506                           ;psect for function _ten_thou_conv
  2507  1719                     _ten_thou_conv:	
  2508                           
  2509                           ;Multi_RX_testjig_v2.c: 1480: unit = n & 0x1F;
  2510                           
  2511                           ;incstack = 0
  2512                           ; Regs used in _ten_thou_conv: [wreg+status,2+status,0+pclath+cstack]
  2513  1719  0876               	movf	ten_thou_conv@n,w
  2514  171A  00EA               	movwf	_unit
  2515  171B  301F               	movlw	31
  2516  171C  05EA               	andwf	_unit,f
  2517                           
  2518                           ;Multi_RX_testjig_v2.c: 1481: ten = (n >> 5) & 0xF;
  2519  171D  0877               	movf	ten_thou_conv@n+1,w
  2520  171E  00F9               	movwf	??_ten_thou_conv+1
  2521  171F  0876               	movf	ten_thou_conv@n,w
  2522  1720  00F8               	movwf	??_ten_thou_conv
  2523  1721  3005               	movlw	5
  2524  1722  00FA               	movwf	??_ten_thou_conv+2
  2525  1723                     u2705:	
  2526  1723  0D79               	rlf	??_ten_thou_conv+1,w
  2527  1724  0CF9               	rrf	??_ten_thou_conv+1,f
  2528  1725  0CF8               	rrf	??_ten_thou_conv,f
  2529  1726  0BFA               	decfsz	??_ten_thou_conv+2,f
  2530  1727  2F23               	goto	u2705
  2531  1728  0878               	movf	??_ten_thou_conv,w
  2532  1729  00E8               	movwf	_ten
  2533  172A  300F               	movlw	15
  2534  172B  05E8               	andwf	_ten,f
  2535                           
  2536                           ;Multi_RX_testjig_v2.c: 1482: hund = (n >> 9) & 0xF;
  2537  172C  0877               	movf	ten_thou_conv@n+1,w
  2538  172D  00F9               	movwf	??_ten_thou_conv+1
  2539  172E  0876               	movf	ten_thou_conv@n,w
  2540  172F  00F8               	movwf	??_ten_thou_conv
  2541  1730  3009               	movlw	9
  2542  1731  00FA               	movwf	??_ten_thou_conv+2
  2543  1732                     u2715:	
  2544  1732  0D79               	rlf	??_ten_thou_conv+1,w
  2545  1733  0CF9               	rrf	??_ten_thou_conv+1,f
  2546  1734  0CF8               	rrf	??_ten_thou_conv,f
  2547  1735  0BFA               	decfsz	??_ten_thou_conv+2,f
  2548  1736  2F32               	goto	u2715
  2549  1737  0878               	movf	??_ten_thou_conv,w
  2550  1738  00E6               	movwf	_hund
  2551  1739  300F               	movlw	15
  2552  173A  05E6               	andwf	_hund,f
  2553                           
  2554                           ;Multi_RX_testjig_v2.c: 1483: thou = (n >> 13) & 0x7;
  2555  173B  0877               	movf	ten_thou_conv@n+1,w
  2556  173C  00F9               	movwf	??_ten_thou_conv+1
  2557  173D  0876               	movf	ten_thou_conv@n,w
  2558  173E  00F8               	movwf	??_ten_thou_conv
  2559  173F  300D               	movlw	13
  2560  1740  00FA               	movwf	??_ten_thou_conv+2
  2561  1741                     u2725:	
  2562  1741  0D79               	rlf	??_ten_thou_conv+1,w
  2563  1742  0CF9               	rrf	??_ten_thou_conv+1,f
  2564  1743  0CF8               	rrf	??_ten_thou_conv,f
  2565  1744  0BFA               	decfsz	??_ten_thou_conv+2,f
  2566  1745  2F41               	goto	u2725
  2567  1746  0878               	movf	??_ten_thou_conv,w
  2568  1747  00EB               	movwf	_thou
  2569  1748  3007               	movlw	7
  2570  1749  05EB               	andwf	_thou,f
  2571                           
  2572                           ;Multi_RX_testjig_v2.c: 1485: unit = 2 * (thou + hund + ten) + unit;
  2573  174A  086B               	movf	_thou,w
  2574  174B  0766               	addwf	_hund,w
  2575  174C  0768               	addwf	_ten,w
  2576  174D  0709               	addwf	9,w
  2577  174E  07EA               	addwf	_unit,f
  2578                           
  2579                           ;Multi_RX_testjig_v2.c: 1486: ten_thou = (unit * 0x67) >> 10;
  2580  174F  086A               	movf	_unit,w
  2581  1750  00F0               	movwf	___wmul@multiplier
  2582  1751  3067               	movlw	103
  2583  1752  01F1               	clrf	___wmul@multiplier+1
  2584  1753  00F2               	movwf	___wmul@multiplicand
  2585  1754  01F3               	clrf	___wmul@multiplicand+1
  2586  1755  27EB  3197         	fcall	___wmul
  2587  1757  0870               	movf	?___wmul,w
  2588  1758  00F8               	movwf	??_ten_thou_conv
  2589  1759  0871               	movf	?___wmul+1,w
  2590  175A  00F9               	movwf	??_ten_thou_conv+1
  2591  175B  300A               	movlw	10
  2592  175C  00FA               	movwf	??_ten_thou_conv+2
  2593  175D                     u2735:	
  2594  175D  0D79               	rlf	??_ten_thou_conv+1,w
  2595  175E  0CF9               	rrf	??_ten_thou_conv+1,f
  2596  175F  0CF8               	rrf	??_ten_thou_conv,f
  2597  1760  0BFA               	decfsz	??_ten_thou_conv+2,f
  2598  1761  2F5D               	goto	u2735
  2599  1762  0878               	movf	??_ten_thou_conv,w
  2600  1763  00E9               	movwf	_ten_thou
  2601                           
  2602                           ;Multi_RX_testjig_v2.c: 1487: unit = unit - 10 * ten_thou;
  2603  1764  30F6               	movlw	246
  2604  1765  00F0               	movwf	___bmul@multiplicand
  2605  1766  0869               	movf	_ten_thou,w
  2606  1767  27C8  3197         	fcall	___bmul
  2607  1769  07EA               	addwf	_unit,f
  2608                           
  2609                           ;Multi_RX_testjig_v2.c: 1489: ten = 9 * thou + hund + 3 * ten + ten_thou;
  2610  176A  3009               	movlw	9
  2611  176B  00F0               	movwf	___bmul@multiplicand
  2612  176C  086B               	movf	_thou,w
  2613  176D  27C8  3197         	fcall	___bmul
  2614  176F  00F8               	movwf	??_ten_thou_conv
  2615  1770  0868               	movf	_ten,w
  2616  1771  0768               	addwf	_ten,w
  2617  1772  0768               	addwf	_ten,w
  2618  1773  0778               	addwf	??_ten_thou_conv,w
  2619  1774  0766               	addwf	_hund,w
  2620  1775  0769               	addwf	_ten_thou,w
  2621  1776  00E8               	movwf	_ten
  2622                           
  2623                           ;Multi_RX_testjig_v2.c: 1490: ten_thou = (ten * 0x67) >> 10;
  2624  1777  00F0               	movwf	___wmul@multiplier
  2625  1778  3067               	movlw	103
  2626  1779  01F1               	clrf	___wmul@multiplier+1
  2627  177A  00F2               	movwf	___wmul@multiplicand
  2628  177B  01F3               	clrf	___wmul@multiplicand+1
  2629  177C  27EB  3197         	fcall	___wmul
  2630  177E  0870               	movf	?___wmul,w
  2631  177F  00F8               	movwf	??_ten_thou_conv
  2632  1780  0871               	movf	?___wmul+1,w
  2633  1781  00F9               	movwf	??_ten_thou_conv+1
  2634  1782  300A               	movlw	10
  2635  1783  00FA               	movwf	??_ten_thou_conv+2
  2636  1784                     u2745:	
  2637  1784  0D79               	rlf	??_ten_thou_conv+1,w
  2638  1785  0CF9               	rrf	??_ten_thou_conv+1,f
  2639  1786  0CF8               	rrf	??_ten_thou_conv,f
  2640  1787  0BFA               	decfsz	??_ten_thou_conv+2,f
  2641  1788  2F84               	goto	u2745
  2642  1789  0878               	movf	??_ten_thou_conv,w
  2643  178A  00E9               	movwf	_ten_thou
  2644                           
  2645                           ;Multi_RX_testjig_v2.c: 1491: ten = ten - 10 * ten_thou;
  2646  178B  30F6               	movlw	246
  2647  178C  00F0               	movwf	___bmul@multiplicand
  2648  178D  0869               	movf	_ten_thou,w
  2649  178E  27C8  3197         	fcall	___bmul
  2650  1790  07E8               	addwf	_ten,f
  2651                           
  2652                           ;Multi_RX_testjig_v2.c: 1493: hund = thou + 5 * hund + ten_thou;
  2653  1791  3005               	movlw	5
  2654  1792  00F0               	movwf	___bmul@multiplicand
  2655  1793  0866               	movf	_hund,w
  2656  1794  27C8  3197         	fcall	___bmul
  2657  1796  076B               	addwf	_thou,w
  2658  1797  0769               	addwf	_ten_thou,w
  2659  1798  00E6               	movwf	_hund
  2660                           
  2661                           ;Multi_RX_testjig_v2.c: 1494: ten_thou = (hund * 0x67) >> 10;
  2662  1799  00F0               	movwf	___wmul@multiplier
  2663  179A  3067               	movlw	103
  2664  179B  01F1               	clrf	___wmul@multiplier+1
  2665  179C  00F2               	movwf	___wmul@multiplicand
  2666  179D  01F3               	clrf	___wmul@multiplicand+1
  2667  179E  27EB  3197         	fcall	___wmul
  2668  17A0  0870               	movf	?___wmul,w
  2669  17A1  00F8               	movwf	??_ten_thou_conv
  2670  17A2  0871               	movf	?___wmul+1,w
  2671  17A3  00F9               	movwf	??_ten_thou_conv+1
  2672  17A4  300A               	movlw	10
  2673  17A5  00FA               	movwf	??_ten_thou_conv+2
  2674  17A6                     u2755:	
  2675  17A6  0D79               	rlf	??_ten_thou_conv+1,w
  2676  17A7  0CF9               	rrf	??_ten_thou_conv+1,f
  2677  17A8  0CF8               	rrf	??_ten_thou_conv,f
  2678  17A9  0BFA               	decfsz	??_ten_thou_conv+2,f
  2679  17AA  2FA6               	goto	u2755
  2680  17AB  0878               	movf	??_ten_thou_conv,w
  2681  17AC  00E9               	movwf	_ten_thou
  2682                           
  2683                           ;Multi_RX_testjig_v2.c: 1495: hund = hund - 10 * ten_thou;
  2684  17AD  30F6               	movlw	246
  2685  17AE  00F0               	movwf	___bmul@multiplicand
  2686  17AF  0869               	movf	_ten_thou,w
  2687  17B0  27C8  3197         	fcall	___bmul
  2688  17B2  07E6               	addwf	_hund,f
  2689                           
  2690                           ;Multi_RX_testjig_v2.c: 1497: thou = 8 * thou + ten_thou;
  2691  17B3  086B               	movf	_thou,w
  2692  17B4  0709               	addwf	9,w
  2693  17B5  0709               	addwf	9,w
  2694  17B6  0709               	addwf	9,w
  2695  17B7  0769               	addwf	_ten_thou,w
  2696  17B8  00EB               	movwf	_thou
  2697                           
  2698                           ;Multi_RX_testjig_v2.c: 1498: ten_thou = (thou * 0x1A) >> 8;
  2699  17B9  00F0               	movwf	___wmul@multiplier
  2700  17BA  301A               	movlw	26
  2701  17BB  01F1               	clrf	___wmul@multiplier+1
  2702  17BC  00F2               	movwf	___wmul@multiplicand
  2703  17BD  01F3               	clrf	___wmul@multiplicand+1
  2704  17BE  27EB  3197         	fcall	___wmul
  2705  17C0  0871               	movf	?___wmul+1,w
  2706  17C1  00E9               	movwf	_ten_thou
  2707                           
  2708                           ;Multi_RX_testjig_v2.c: 1499: thou = thou - 10 * ten_thou;
  2709  17C2  30F6               	movlw	246
  2710  17C3  00F0               	movwf	___bmul@multiplicand
  2711  17C4  0869               	movf	_ten_thou,w
  2712  17C5  27C8               	fcall	___bmul
  2713  17C6  07EB               	addwf	_thou,f
  2714  17C7  0008               	return
  2715  17C8                     __end_of_ten_thou_conv:	
  2716  17C8                     __ptext14:	
  2717 ;; *************** function ___bmul *****************
  2718 ;; Defined at:
  2719 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  multiplier      1    wreg     unsigned char 
  2722 ;;  multiplicand    1    0[COMMON] unsigned char 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  multiplier      1    2[COMMON] unsigned char 
  2725 ;;  product         1    1[COMMON] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      unsigned char 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0
  2730 ;; Tracked objects:
  2731 ;;		On entry : 1F/0
  2732 ;;		On exit  : 1F/0
  2733 ;;		Unchanged: 1F/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2735 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2736 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2738 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2739 ;;Total ram usage:        3 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    1
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_ten_thou_conv
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           
  2750                           ;psect for function ___bmul
  2751  17C8                     ___bmul:	
  2752                           
  2753                           ;incstack = 0
  2754                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2755                           ;___bmul@multiplier stored from wreg
  2756  17C8  00F2               	movwf	___bmul@multiplier
  2757  17C9  01F1               	clrf	___bmul@product
  2758  17CA  0870               	movf	___bmul@multiplicand,w
  2759  17CB  1872               	btfsc	___bmul@multiplier,0
  2760  17CC  07F1               	addwf	___bmul@product,f
  2761  17CD  35F0               	lslf	___bmul@multiplicand,f
  2762  17CE  0870               	movf	___bmul@multiplicand,w
  2763  17CF  18F2               	btfsc	___bmul@multiplier,1
  2764  17D0  07F1               	addwf	___bmul@product,f
  2765  17D1  35F0               	lslf	___bmul@multiplicand,f
  2766  17D2  0870               	movf	___bmul@multiplicand,w
  2767  17D3  1972               	btfsc	___bmul@multiplier,2
  2768  17D4  07F1               	addwf	___bmul@product,f
  2769  17D5  35F0               	lslf	___bmul@multiplicand,f
  2770  17D6  0870               	movf	___bmul@multiplicand,w
  2771  17D7  19F2               	btfsc	___bmul@multiplier,3
  2772  17D8  07F1               	addwf	___bmul@product,f
  2773  17D9  35F0               	lslf	___bmul@multiplicand,f
  2774  17DA  0870               	movf	___bmul@multiplicand,w
  2775  17DB  1A72               	btfsc	___bmul@multiplier,4
  2776  17DC  07F1               	addwf	___bmul@product,f
  2777  17DD  35F0               	lslf	___bmul@multiplicand,f
  2778  17DE  0870               	movf	___bmul@multiplicand,w
  2779  17DF  1AF2               	btfsc	___bmul@multiplier,5
  2780  17E0  07F1               	addwf	___bmul@product,f
  2781  17E1  35F0               	lslf	___bmul@multiplicand,f
  2782  17E2  0870               	movf	___bmul@multiplicand,w
  2783  17E3  1B72               	btfsc	___bmul@multiplier,6
  2784  17E4  07F1               	addwf	___bmul@product,f
  2785  17E5  35F0               	lslf	___bmul@multiplicand,f
  2786  17E6  0870               	movf	___bmul@multiplicand,w
  2787  17E7  1BF2               	btfsc	___bmul@multiplier,7
  2788  17E8  07F1               	addwf	___bmul@product,f
  2789  17E9  0871               	movf	___bmul@product,w
  2790  17EA  0008               	return
  2791  17EB                     __end_of___bmul:	
  2792  17EB                     __ptext13:	
  2793 ;; *************** function ___wmul *****************
  2794 ;; Defined at:
  2795 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  multiplier      2    0[COMMON] unsigned int 
  2798 ;;  multiplicand    2    2[COMMON] unsigned int 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  product         2    4[COMMON] unsigned int 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  2    0[COMMON] unsigned int 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0
  2805 ;; Tracked objects:
  2806 ;;		On entry : 1F/0
  2807 ;;		On exit  : 1F/0
  2808 ;;		Unchanged: 1F/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2813 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2814 ;;Total ram usage:        6 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    1
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_ten_thou_conv
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           
  2825                           ;psect for function ___wmul
  2826  17EB                     ___wmul:	
  2827                           
  2828                           ;incstack = 0
  2829                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2830  17EB  01F4               	clrf	___wmul@product
  2831  17EC  01F5               	clrf	___wmul@product+1
  2832  17ED                     l2793:	
  2833  17ED  1C70               	btfss	___wmul@multiplier,0
  2834  17EE  2FF3               	goto	l2797
  2835  17EF  0872               	movf	___wmul@multiplicand,w
  2836  17F0  07F4               	addwf	___wmul@product,f
  2837  17F1  0873               	movf	___wmul@multiplicand+1,w
  2838  17F2  3DF5               	addwfc	___wmul@product+1,f
  2839  17F3                     l2797:	
  2840  17F3  35F2               	lslf	___wmul@multiplicand,f
  2841  17F4  0DF3               	rlf	___wmul@multiplicand+1,f
  2842  17F5  36F1               	lsrf	___wmul@multiplier+1,f
  2843  17F6  0CF0               	rrf	___wmul@multiplier,f
  2844  17F7  0870               	movf	___wmul@multiplier,w
  2845  17F8  0471               	iorwf	___wmul@multiplier+1,w
  2846  17F9  1D03               	btfss	3,2
  2847  17FA  2FED               	goto	l2793
  2848  17FB  0875               	movf	___wmul@product+1,w
  2849  17FC  00F1               	movwf	?___wmul+1
  2850  17FD  0874               	movf	___wmul@product,w
  2851  17FE  00F0               	movwf	?___wmul
  2852  17FF  0008               	return
  2853  1800                     __end_of___wmul:	
  2854                           
  2855                           	psect	text18
  2856  086F                     __ptext18:	
  2857 ;; *************** function _init_i2c *****************
  2858 ;; Defined at:
  2859 ;;		line 1925 in file "Multi_RX_testjig_v2.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg
  2868 ;; Tracked objects:
  2869 ;;		On entry : 1F/0
  2870 ;;		On exit  : 1F/4
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2875 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2876 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2877 ;;Total ram usage:        3 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    1
  2880 ;; This function calls:
  2881 ;;		Nothing
  2882 ;; This function is called by:
  2883 ;;		_main
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           
  2888                           ;psect for function _init_i2c
  2889  086F                     _init_i2c:	
  2890                           
  2891                           ;Multi_RX_testjig_v2.c: 1927: RA5 = 1;
  2892                           
  2893                           ;incstack = 0
  2894                           ; Regs used in _init_i2c: [wreg]
  2895  086F  168C               	bsf	12,5	;volatile
  2896                           
  2897                           ;Multi_RX_testjig_v2.c: 1928: _delay((unsigned long)((200)*(16000000/4000.0)));
  2898  0870  3005               	movlw	5
  2899  0871  00F2               	movwf	??_init_i2c+2
  2900  0872  300F               	movlw	15
  2901  0873  00F1               	movwf	??_init_i2c+1
  2902  0874  30F4               	movlw	244
  2903  0875  00F0               	movwf	??_init_i2c
  2904  0876                     u5287:	
  2905  0876  0BF0               	decfsz	??_init_i2c,f
  2906  0877  2876               	goto	u5287
  2907  0878  0BF1               	decfsz	??_init_i2c+1,f
  2908  0879  2876               	goto	u5287
  2909  087A  0BF2               	decfsz	??_init_i2c+2,f
  2910  087B  2876               	goto	u5287
  2911                           
  2912                           ;Multi_RX_testjig_v2.c: 1929: TRISC3 = 1;
  2913  087C  0021               	movlb	1	; select bank1
  2914  087D  158E               	bsf	14,3	;volatile
  2915                           
  2916                           ;Multi_RX_testjig_v2.c: 1930: TRISC4 = 1;
  2917  087E  160E               	bsf	14,4	;volatile
  2918                           
  2919                           ;Multi_RX_testjig_v2.c: 1931: SSP1STAT |= 0x80;
  2920  087F  0024               	movlb	4	; select bank4
  2921  0880  1794               	bsf	20,7	;volatile
  2922                           
  2923                           ;Multi_RX_testjig_v2.c: 1932: SSP1CON1 = 0x28;
  2924  0881  3028               	movlw	40
  2925  0882  0095               	movwf	21	;volatile
  2926                           
  2927                           ;Multi_RX_testjig_v2.c: 1933: SSP1ADD = 0x14;
  2928  0883  3014               	movlw	20
  2929  0884  0092               	movwf	18	;volatile
  2930  0885  0008               	return
  2931  0886                     __end_of_init_i2c:	
  2932                           
  2933                           	psect	text19
  2934  085A                     __ptext19:	
  2935 ;; *************** function _init_current_sink *****************
  2936 ;; Defined at:
  2937 ;;		line 1954 in file "Multi_RX_testjig_v2.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		wreg, status,2
  2946 ;; Tracked objects:
  2947 ;;		On entry : B1F/1
  2948 ;;		On exit  : B1F/C
  2949 ;;		Unchanged: B00/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2955 ;;Total ram usage:        0 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:    1
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_main
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           
  2966                           ;psect for function _init_current_sink
  2967  085A                     _init_current_sink:	
  2968                           
  2969                           ;Multi_RX_testjig_v2.c: 1956: T2CON = 0b00000110;
  2970                           
  2971                           ;incstack = 0
  2972                           ; Regs used in _init_current_sink: [wreg+status,2]
  2973  085A  3006               	movlw	6
  2974  085B  0020               	movlb	0	; select bank0
  2975  085C  009C               	movwf	28	;volatile
  2976                           
  2977                           ;Multi_RX_testjig_v2.c: 1957: PR2 = 0xFA;
  2978  085D  30FA               	movlw	250
  2979  085E  009B               	movwf	27	;volatile
  2980                           
  2981                           ;Multi_RX_testjig_v2.c: 1958: PIE1bits.TMR2IE = 1;
  2982  085F  0021               	movlb	1	; select bank1
  2983  0860  1491               	bsf	17,1	;volatile
  2984                           
  2985                           ;Multi_RX_testjig_v2.c: 1960: T8CON = 0b00000100;
  2986  0861  3004               	movlw	4
  2987  0862  002B               	movlb	11	; select bank11
  2988  0863  0097               	movwf	23	;volatile
  2989                           
  2990                           ;Multi_RX_testjig_v2.c: 1961: PR8 = 0xFF;
  2991  0864  30FF               	movlw	255
  2992  0865  0096               	movwf	22	;volatile
  2993                           
  2994                           ;Multi_RX_testjig_v2.c: 1962: CCP9CON = 0b00001100;
  2995  0866  300C               	movlw	12
  2996  0867  002C               	movlb	12	; select bank12
  2997  0868  009C               	movwf	28	;volatile
  2998                           
  2999                           ;Multi_RX_testjig_v2.c: 1963: CCPTMRS2 = 0b00000001;
  3000  0869  3001               	movlw	1
  3001  086A  0025               	movlb	5	; select bank5
  3002  086B  009F               	movwf	31	;volatile
  3003                           
  3004                           ;Multi_RX_testjig_v2.c: 1964: CCPR9L = 0x00;
  3005  086C  002C               	movlb	12	; select bank12
  3006  086D  019A               	clrf	26	;volatile
  3007  086E  0008               	return
  3008  086F                     __end_of_init_current_sink:	
  3009                           
  3010                           	psect	text20
  3011  0853                     __ptext20:	
  3012 ;; *************** function _init_ADC *****************
  3013 ;; Defined at:
  3014 ;;		line 1936 in file "Multi_RX_testjig_v2.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;		None
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg
  3023 ;; Tracked objects:
  3024 ;;		On entry : B1F/8
  3025 ;;		On exit  : B1F/1
  3026 ;;		Unchanged: B00/0
  3027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3032 ;;Total ram usage:        0 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    1
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_main
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           
  3043                           ;psect for function _init_ADC
  3044  0853                     _init_ADC:	
  3045                           
  3046                           ;Multi_RX_testjig_v2.c: 1938: FVRCON = 0b10000011;
  3047                           
  3048                           ;incstack = 0
  3049                           ; Regs used in _init_ADC: [wreg]
  3050  0853  3083               	movlw	131
  3051  0854  0022               	movlb	2	; select bank2
  3052  0855  0097               	movwf	23	;volatile
  3053                           
  3054                           ;Multi_RX_testjig_v2.c: 1940: ADCON1 = 0b10100011;
  3055  0856  30A3               	movlw	163
  3056  0857  0021               	movlb	1	; select bank1
  3057  0858  009E               	movwf	30	;volatile
  3058  0859  0008               	return
  3059  085A                     __end_of_init_ADC:	
  3060                           
  3061                           	psect	text21
  3062  0415                     __ptext21:	
  3063 ;; *************** function _get_30v_current *****************
  3064 ;; Defined at:
  3065 ;;		line 1994 in file "Multi_RX_testjig_v2.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;		None
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  temp            2   39[BANK0 ] unsigned int 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  2   37[BANK0 ] unsigned int 
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, status,0, pclath, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 1A/1
  3076 ;;		On exit  : 1F/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3079 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3080 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3082 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3083 ;;Total ram usage:        4 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; Hardware stack levels required when called:    3
  3086 ;; This function calls:
  3087 ;;		_ADC_get_val
  3088 ;;		___ftadd
  3089 ;;		___ftmul
  3090 ;;		___fttol
  3091 ;;		___lwtoft
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           
  3098                           ;psect for function _get_30v_current
  3099  0415                     _get_30v_current:	
  3100                           
  3101                           ;Multi_RX_testjig_v2.c: 1996: unsigned int temp;
  3102                           ;Multi_RX_testjig_v2.c: 1997: temp = ADC_get_val(0b01010011);
  3103                           
  3104                           ;incstack = 0
  3105                           ; Regs used in _get_30v_current: [wreg+status,2+status,0+pclath+cstack]
  3106  0415  3053               	movlw	83
  3107  0416  2454  3184         	fcall	_ADC_get_val
  3108  0418  0871               	movf	?_ADC_get_val+1,w
  3109  0419  0020               	movlb	0	; select bank0
  3110  041A  00C8               	movwf	get_30v_current@temp+1
  3111  041B  0870               	movf	?_ADC_get_val,w
  3112  041C  00C7               	movwf	get_30v_current@temp
  3113                           
  3114                           ;Multi_RX_testjig_v2.c: 1998: if(temp > 4)
  3115  041D  3000               	movlw	0
  3116  041E  0248               	subwf	get_30v_current@temp+1,w
  3117  041F  3005               	movlw	5
  3118  0420  1903               	skipnz
  3119  0421  0247               	subwf	get_30v_current@temp,w
  3120  0422  1C03               	skipc
  3121  0423  2C51               	goto	l3405
  3122                           
  3123                           ;Multi_RX_testjig_v2.c: 1999: return ( temp * 3.4) - 16;
  3124  0424  0848               	movf	get_30v_current@temp+1,w
  3125  0425  00F9               	movwf	___lwtoft@c+1
  3126  0426  0847               	movf	get_30v_current@temp,w
  3127  0427  00F8               	movwf	___lwtoft@c
  3128  0428  25C2  3184         	fcall	___lwtoft
  3129  042A  0878               	movf	?___lwtoft,w
  3130  042B  00A3               	movwf	___ftmul@f2
  3131  042C  0879               	movf	?___lwtoft+1,w
  3132  042D  00A4               	movwf	___ftmul@f2+1
  3133  042E  087A               	movf	?___lwtoft+2,w
  3134  042F  00A5               	movwf	___ftmul@f2+2
  3135  0430  309A               	movlw	154
  3136  0431  00A0               	movwf	___ftmul@f1
  3137  0432  3059               	movlw	89
  3138  0433  00A1               	movwf	___ftmul@f1+1
  3139  0434  3040               	movlw	64
  3140  0435  00A2               	movwf	___ftmul@f1+2
  3141  0436  251A  3184         	fcall	___ftmul
  3142  0438  0820               	movf	?___ftmul,w
  3143  0439  00AF               	movwf	___ftadd@f2
  3144  043A  0821               	movf	?___ftmul+1,w
  3145  043B  00B0               	movwf	___ftadd@f2+1
  3146  043C  0822               	movf	?___ftmul+2,w
  3147  043D  00B1               	movwf	___ftadd@f2+2
  3148  043E  3080               	movlw	128
  3149  043F  01AC               	clrf	___ftadd@f1
  3150  0440  00AD               	movwf	___ftadd@f1+1
  3151  0441  30C1               	movlw	193
  3152  0442  00AE               	movwf	___ftadd@f1+2
  3153  0443  2466  3184         	fcall	___ftadd
  3154  0445  082C               	movf	?___ftadd,w
  3155  0446  00B8               	movwf	___fttol@f1
  3156  0447  082D               	movf	?___ftadd+1,w
  3157  0448  00B9               	movwf	___fttol@f1+1
  3158  0449  082E               	movf	?___ftadd+2,w
  3159  044A  00BA               	movwf	___fttol@f1+2
  3160  044B  25D2               	fcall	___fttol
  3161  044C  0839               	movf	?___fttol+1,w
  3162  044D  00C6               	movwf	?_get_30v_current+1
  3163  044E  0838               	movf	?___fttol,w
  3164  044F  00C5               	movwf	?_get_30v_current
  3165  0450  0008               	return
  3166  0451                     l3405:	
  3167                           
  3168                           ;Multi_RX_testjig_v2.c: 2000: else
  3169                           ;Multi_RX_testjig_v2.c: 2001: return 0;
  3170  0451  01C5               	clrf	?_get_30v_current
  3171  0452  01C6               	clrf	?_get_30v_current+1
  3172  0453  0008               	return
  3173  0454                     __end_of_get_30v_current:	
  3174  0454                     __ptext27:	
  3175 ;; *************** function _ADC_get_val *****************
  3176 ;; Defined at:
  3177 ;;		line 1943 in file "Multi_RX_testjig_v2.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  channel         1    wreg     unsigned char 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  channel         1    3[COMMON] unsigned char 
  3182 ;;  return_val      2    4[COMMON] unsigned int 
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  2    0[COMMON] unsigned int 
  3185 ;; Registers used:
  3186 ;;		wreg
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/5
  3189 ;;		On exit  : 1F/1
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3192 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3193 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3195 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3196 ;;Total ram usage:        6 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; Hardware stack levels required when called:    1
  3199 ;; This function calls:
  3200 ;;		Nothing
  3201 ;; This function is called by:
  3202 ;;		_main
  3203 ;;		_get_30v_current
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           
  3208                           ;psect for function _ADC_get_val
  3209  0454                     _ADC_get_val:	
  3210                           
  3211                           ;incstack = 0
  3212                           ; Regs used in _ADC_get_val: [wreg]
  3213                           ;ADC_get_val@channel stored from wreg
  3214  0454  00F3               	movwf	ADC_get_val@channel
  3215                           
  3216                           ;Multi_RX_testjig_v2.c: 1945: unsigned int return_val;
  3217                           ;Multi_RX_testjig_v2.c: 1946: GIE = 0;
  3218  0455  138B               	bcf	11,7	;volatile
  3219                           
  3220                           ;Multi_RX_testjig_v2.c: 1947: ADCON0 = channel;
  3221  0456  0873               	movf	ADC_get_val@channel,w
  3222  0457  0021               	movlb	1	; select bank1
  3223  0458  009D               	movwf	29	;volatile
  3224  0459                     l680:	
  3225                           ;Multi_RX_testjig_v2.c: 1948: while(ADCON0bits.GO_nDONE == 1);
  3226                           
  3227  0459  189D               	btfsc	29,1	;volatile
  3228  045A  2C59               	goto	l680
  3229                           
  3230                           ;Multi_RX_testjig_v2.c: 1949: return_val = ADRESH << 8 | ADRESL;
  3231  045B  081C               	movf	28,w	;volatile
  3232  045C  00F5               	movwf	ADC_get_val@return_val+1
  3233  045D  01F4               	clrf	ADC_get_val@return_val
  3234  045E  081B               	movf	27,w	;volatile
  3235  045F  04F4               	iorwf	ADC_get_val@return_val,f
  3236                           
  3237                           ;Multi_RX_testjig_v2.c: 1950: GIE = 1;
  3238  0460  178B               	bsf	11,7	;volatile
  3239                           
  3240                           ;Multi_RX_testjig_v2.c: 1951: return return_val;
  3241  0461  0875               	movf	ADC_get_val@return_val+1,w
  3242  0462  00F1               	movwf	?_ADC_get_val+1
  3243  0463  0874               	movf	ADC_get_val@return_val,w
  3244  0464  00F0               	movwf	?_ADC_get_val
  3245  0465  0008               	return
  3246  0466                     __end_of_ADC_get_val:	
  3247  0466                     __ptext25:	
  3248 ;; *************** function ___ftadd *****************
  3249 ;; Defined at:
  3250 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  f1              3   12[BANK0 ] float 
  3253 ;;  f2              3   15[BANK0 ] float 
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;  exp1            1   23[BANK0 ] unsigned char 
  3256 ;;  exp2            1   22[BANK0 ] unsigned char 
  3257 ;;  sign            1   21[BANK0 ] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  3   12[BANK0 ] float 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0, pclath, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 1F/0
  3264 ;;		On exit  : 1F/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3267 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3268 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3269 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3270 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3271 ;;Total ram usage:       12 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    2
  3274 ;; This function calls:
  3275 ;;		___ftpack
  3276 ;; This function is called by:
  3277 ;;		_get_30v_current
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           
  3282                           ;psect for function ___ftadd
  3283  0466                     ___ftadd:	
  3284                           
  3285                           ;incstack = 0
  3286                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3287  0466  082C               	movf	___ftadd@f1,w
  3288  0467  00B2               	movwf	??___ftadd
  3289  0468  082D               	movf	___ftadd@f1+1,w
  3290  0469  00B3               	movwf	??___ftadd+1
  3291  046A  082E               	movf	___ftadd@f1+2,w
  3292  046B  00B4               	movwf	??___ftadd+2
  3293  046C  1003               	clrc
  3294  046D  0D33               	rlf	??___ftadd+1,w
  3295  046E  0D34               	rlf	??___ftadd+2,w
  3296  046F  00B7               	movwf	___ftadd@exp1
  3297  0470  082F               	movf	___ftadd@f2,w
  3298  0471  00B2               	movwf	??___ftadd
  3299  0472  0830               	movf	___ftadd@f2+1,w
  3300  0473  00B3               	movwf	??___ftadd+1
  3301  0474  0831               	movf	___ftadd@f2+2,w
  3302  0475  00B4               	movwf	??___ftadd+2
  3303  0476  1003               	clrc
  3304  0477  0D33               	rlf	??___ftadd+1,w
  3305  0478  0D34               	rlf	??___ftadd+2,w
  3306  0479  00B6               	movwf	___ftadd@exp2
  3307  047A  0837               	movf	___ftadd@exp1,w
  3308  047B  1903               	btfsc	3,2
  3309  047C  2C89               	goto	l3017
  3310  047D  0836               	movf	___ftadd@exp2,w
  3311  047E  0237               	subwf	___ftadd@exp1,w
  3312  047F  0836               	movf	___ftadd@exp2,w
  3313  0480  1803               	skipnc
  3314  0481  2C91               	goto	L25
  3315  0482  00B2               	movwf	??___ftadd
  3316  0483  0837               	movf	___ftadd@exp1,w
  3317  0484  02B2               	subwf	??___ftadd,f
  3318  0485  3019               	movlw	25
  3319  0486  0232               	subwf	??___ftadd,w
  3320  0487  1C03               	skipc
  3321  0488  2C90               	goto	l3021
  3322  0489                     l3017:	
  3323  0489  082F               	movf	___ftadd@f2,w
  3324  048A  00AC               	movwf	?___ftadd
  3325  048B  0830               	movf	___ftadd@f2+1,w
  3326  048C  00AD               	movwf	?___ftadd+1
  3327  048D  0831               	movf	___ftadd@f2+2,w
  3328  048E  00AE               	movwf	?___ftadd+2
  3329  048F  0008               	return
  3330  0490                     l3021:	
  3331  0490  0836               	movf	___ftadd@exp2,w
  3332  0491                     L25:	
  3333  0491  1903               	btfsc	3,2
  3334  0492  0008               	return
  3335  0493  0837               	movf	___ftadd@exp1,w
  3336  0494  0236               	subwf	___ftadd@exp2,w
  3337  0495  1803               	skipnc
  3338  0496  2C9F               	goto	l3027
  3339  0497  0837               	movf	___ftadd@exp1,w
  3340  0498  00B2               	movwf	??___ftadd
  3341  0499  0836               	movf	___ftadd@exp2,w
  3342  049A  02B2               	subwf	??___ftadd,f
  3343  049B  3019               	movlw	25
  3344  049C  0232               	subwf	??___ftadd,w
  3345  049D  1803               	btfsc	3,0
  3346  049E  0008               	return
  3347  049F                     l3027:	
  3348  049F  3006               	movlw	6
  3349  04A0  00B5               	movwf	___ftadd@sign
  3350  04A1  1BAE               	btfsc	___ftadd@f1+2,7
  3351  04A2  17B5               	bsf	___ftadd@sign,7
  3352  04A3  1BB1               	btfsc	___ftadd@f2+2,7
  3353  04A4  1735               	bsf	___ftadd@sign,6
  3354  04A5  17AD               	bsf	___ftadd@f1+1,7
  3355  04A6  01AE               	clrf	___ftadd@f1+2
  3356  04A7  17B0               	bsf	___ftadd@f2+1,7
  3357  04A8  01B1               	clrf	___ftadd@f2+2
  3358  04A9  0836               	movf	___ftadd@exp2,w
  3359  04AA  0237               	subwf	___ftadd@exp1,w
  3360  04AB  1803               	skipnc
  3361  04AC  2CC4               	goto	l3049
  3362  04AD                     l3039:	
  3363  04AD  35AF               	lslf	___ftadd@f2,f
  3364  04AE  0DB0               	rlf	___ftadd@f2+1,f
  3365  04AF  0DB1               	rlf	___ftadd@f2+2,f
  3366  04B0  03B6               	decf	___ftadd@exp2,f
  3367  04B1  0836               	movf	___ftadd@exp2,w
  3368  04B2  0637               	xorwf	___ftadd@exp1,w
  3369  04B3  1903               	skipnz
  3370  04B4  2CBF               	goto	l3047
  3371  04B5  03B5               	decf	___ftadd@sign,f
  3372  04B6  0835               	movf	___ftadd@sign,w
  3373  04B7  3907               	andlw	7
  3374  04B8  1903               	btfsc	3,2
  3375  04B9  2CBF               	goto	l3047
  3376  04BA  2CAD               	goto	l3039
  3377  04BB                     l3045:	
  3378  04BB  36AE               	lsrf	___ftadd@f1+2,f
  3379  04BC  0CAD               	rrf	___ftadd@f1+1,f
  3380  04BD  0CAC               	rrf	___ftadd@f1,f
  3381  04BE  0AB7               	incf	___ftadd@exp1,f
  3382  04BF                     l3047:	
  3383  04BF  0837               	movf	___ftadd@exp1,w
  3384  04C0  0636               	xorwf	___ftadd@exp2,w
  3385  04C1  1903               	btfsc	3,2
  3386  04C2  2CDE               	goto	l957
  3387  04C3  2CBB               	goto	l3045
  3388  04C4                     l3049:	
  3389  04C4  0837               	movf	___ftadd@exp1,w
  3390  04C5  0236               	subwf	___ftadd@exp2,w
  3391  04C6  1803               	skipnc
  3392  04C7  2CDE               	goto	l957
  3393  04C8                     l3051:	
  3394  04C8  35AC               	lslf	___ftadd@f1,f
  3395  04C9  0DAD               	rlf	___ftadd@f1+1,f
  3396  04CA  0DAE               	rlf	___ftadd@f1+2,f
  3397  04CB  03B7               	decf	___ftadd@exp1,f
  3398  04CC  0836               	movf	___ftadd@exp2,w
  3399  04CD  0637               	xorwf	___ftadd@exp1,w
  3400  04CE  1903               	skipnz
  3401  04CF  2CDA               	goto	l3059
  3402  04D0  03B5               	decf	___ftadd@sign,f
  3403  04D1  0835               	movf	___ftadd@sign,w
  3404  04D2  3907               	andlw	7
  3405  04D3  1903               	btfsc	3,2
  3406  04D4  2CDA               	goto	l3059
  3407  04D5  2CC8               	goto	l3051
  3408  04D6                     l3057:	
  3409  04D6  36B1               	lsrf	___ftadd@f2+2,f
  3410  04D7  0CB0               	rrf	___ftadd@f2+1,f
  3411  04D8  0CAF               	rrf	___ftadd@f2,f
  3412  04D9  0AB6               	incf	___ftadd@exp2,f
  3413  04DA                     l3059:	
  3414  04DA  0837               	movf	___ftadd@exp1,w
  3415  04DB  0636               	xorwf	___ftadd@exp2,w
  3416  04DC  1D03               	skipz
  3417  04DD  2CD6               	goto	l3057
  3418  04DE                     l957:	
  3419  04DE  1FB5               	btfss	___ftadd@sign,7
  3420  04DF  2CE9               	goto	l3065
  3421  04E0  30FF               	movlw	255
  3422  04E1  06AC               	xorwf	___ftadd@f1,f
  3423  04E2  06AD               	xorwf	___ftadd@f1+1,f
  3424  04E3  06AE               	xorwf	___ftadd@f1+2,f
  3425  04E4  0AAC               	incf	___ftadd@f1,f
  3426  04E5  1903               	skipnz
  3427  04E6  0AAD               	incf	___ftadd@f1+1,f
  3428  04E7  1903               	skipnz
  3429  04E8  0AAE               	incf	___ftadd@f1+2,f
  3430  04E9                     l3065:	
  3431  04E9  1F35               	btfss	___ftadd@sign,6
  3432  04EA  2CF4               	goto	l3071
  3433  04EB  30FF               	movlw	255
  3434  04EC  06AF               	xorwf	___ftadd@f2,f
  3435  04ED  06B0               	xorwf	___ftadd@f2+1,f
  3436  04EE  06B1               	xorwf	___ftadd@f2+2,f
  3437  04EF  0AAF               	incf	___ftadd@f2,f
  3438  04F0  1903               	skipnz
  3439  04F1  0AB0               	incf	___ftadd@f2+1,f
  3440  04F2  1903               	skipnz
  3441  04F3  0AB1               	incf	___ftadd@f2+2,f
  3442  04F4                     l3071:	
  3443  04F4  01B5               	clrf	___ftadd@sign
  3444  04F5  082C               	movf	___ftadd@f1,w
  3445  04F6  07AF               	addwf	___ftadd@f2,f
  3446  04F7  082D               	movf	___ftadd@f1+1,w
  3447  04F8  3DB0               	addwfc	___ftadd@f2+1,f
  3448  04F9  082E               	movf	___ftadd@f1+2,w
  3449  04FA  3DB1               	addwfc	___ftadd@f2+2,f
  3450  04FB  1FB1               	btfss	___ftadd@f2+2,7
  3451  04FC  2D08               	goto	l3083
  3452  04FD  30FF               	movlw	255
  3453  04FE  06AF               	xorwf	___ftadd@f2,f
  3454  04FF  06B0               	xorwf	___ftadd@f2+1,f
  3455  0500  06B1               	xorwf	___ftadd@f2+2,f
  3456  0501  0AAF               	incf	___ftadd@f2,f
  3457  0502  1903               	skipnz
  3458  0503  0AB0               	incf	___ftadd@f2+1,f
  3459  0504  1903               	skipnz
  3460  0505  0AB1               	incf	___ftadd@f2+2,f
  3461  0506  01B5               	clrf	___ftadd@sign
  3462  0507  0AB5               	incf	___ftadd@sign,f
  3463  0508                     l3083:	
  3464  0508  082F               	movf	___ftadd@f2,w
  3465  0509  00F0               	movwf	___ftpack@arg
  3466  050A  0830               	movf	___ftadd@f2+1,w
  3467  050B  00F1               	movwf	___ftpack@arg+1
  3468  050C  0831               	movf	___ftadd@f2+2,w
  3469  050D  00F2               	movwf	___ftpack@arg+2
  3470  050E  0837               	movf	___ftadd@exp1,w
  3471  050F  00F3               	movwf	___ftpack@exp
  3472  0510  0835               	movf	___ftadd@sign,w
  3473  0511  00F4               	movwf	___ftpack@sign
  3474  0512  2584               	fcall	___ftpack
  3475  0513  0870               	movf	?___ftpack,w
  3476  0514  00AC               	movwf	?___ftadd
  3477  0515  0871               	movf	?___ftpack+1,w
  3478  0516  00AD               	movwf	?___ftadd+1
  3479  0517  0872               	movf	?___ftpack+2,w
  3480  0518  00AE               	movwf	?___ftadd+2
  3481  0519  0008               	return
  3482  051A                     __end_of___ftadd:	
  3483  051A                     __ptext24:	
  3484 ;; *************** function ___ftmul *****************
  3485 ;; Defined at:
  3486 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  f1              3    0[BANK0 ] float 
  3489 ;;  f2              3    3[BANK0 ] float 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  3492 ;;  sign            1   11[BANK0 ] unsigned char 
  3493 ;;  cntr            1   10[BANK0 ] unsigned char 
  3494 ;;  exp             1    6[BANK0 ] unsigned char 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  3    0[BANK0 ] float 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0, pclath, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 1F/0
  3501 ;;		On exit  : 1F/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3504 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3505 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3506 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3507 ;;      Totals:         3      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3508 ;;Total ram usage:       15 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:    2
  3511 ;; This function calls:
  3512 ;;		___ftpack
  3513 ;; This function is called by:
  3514 ;;		_get_30v_current
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           
  3519                           ;psect for function ___ftmul
  3520  051A                     ___ftmul:	
  3521                           
  3522                           ;incstack = 0
  3523                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3524  051A  0820               	movf	___ftmul@f1,w
  3525  051B  00FB               	movwf	??___ftmul
  3526  051C  0821               	movf	___ftmul@f1+1,w
  3527  051D  00FC               	movwf	??___ftmul+1
  3528  051E  0822               	movf	___ftmul@f1+2,w
  3529  051F  00FD               	movwf	??___ftmul+2
  3530  0520  1003               	clrc
  3531  0521  0D7C               	rlf	??___ftmul+1,w
  3532  0522  0D7D               	rlf	??___ftmul+2,w
  3533  0523  00A6               	movwf	___ftmul@exp
  3534  0524  0826               	movf	___ftmul@exp,w
  3535  0525  1D03               	btfss	3,2
  3536  0526  2D2B               	goto	l3091
  3537  0527  01A0               	clrf	?___ftmul
  3538  0528  01A1               	clrf	?___ftmul+1
  3539  0529  01A2               	clrf	?___ftmul+2
  3540  052A  0008               	return
  3541  052B                     l3091:	
  3542  052B  0823               	movf	___ftmul@f2,w
  3543  052C  00FB               	movwf	??___ftmul
  3544  052D  0824               	movf	___ftmul@f2+1,w
  3545  052E  00FC               	movwf	??___ftmul+1
  3546  052F  0825               	movf	___ftmul@f2+2,w
  3547  0530  00FD               	movwf	??___ftmul+2
  3548  0531  1003               	clrc
  3549  0532  0D7C               	rlf	??___ftmul+1,w
  3550  0533  0D7D               	rlf	??___ftmul+2,w
  3551  0534  00AB               	movwf	___ftmul@sign
  3552  0535  082B               	movf	___ftmul@sign,w
  3553  0536  1D03               	btfss	3,2
  3554  0537  2D3C               	goto	l3095
  3555  0538  01A0               	clrf	?___ftmul
  3556  0539  01A1               	clrf	?___ftmul+1
  3557  053A  01A2               	clrf	?___ftmul+2
  3558  053B  0008               	return
  3559  053C                     l3095:	
  3560  053C  082B               	movf	___ftmul@sign,w
  3561  053D  3E7B               	addlw	123
  3562  053E  07A6               	addwf	___ftmul@exp,f
  3563  053F  0822               	movf	___ftmul@f1+2,w
  3564  0540  00AB               	movwf	___ftmul@sign
  3565  0541  0825               	movf	___ftmul@f2+2,w
  3566  0542  06AB               	xorwf	___ftmul@sign,f
  3567  0543  3080               	movlw	128
  3568  0544  05AB               	andwf	___ftmul@sign,f
  3569  0545  30FF               	movlw	255
  3570  0546  17A1               	bsf	___ftmul@f1+1,7
  3571  0547  17A4               	bsf	___ftmul@f2+1,7
  3572  0548  05A3               	andwf	___ftmul@f2,f
  3573  0549  05A4               	andwf	___ftmul@f2+1,f
  3574  054A  3007               	movlw	7
  3575  054B  01A5               	clrf	___ftmul@f2+2
  3576  054C  01A7               	clrf	___ftmul@f3_as_product
  3577  054D  01A8               	clrf	___ftmul@f3_as_product+1
  3578  054E  01A9               	clrf	___ftmul@f3_as_product+2
  3579  054F  00AA               	movwf	___ftmul@cntr
  3580  0550                     l3113:	
  3581  0550  1C20               	btfss	___ftmul@f1,0
  3582  0551  2D58               	goto	l3117
  3583  0552  0823               	movf	___ftmul@f2,w
  3584  0553  07A7               	addwf	___ftmul@f3_as_product,f
  3585  0554  0824               	movf	___ftmul@f2+1,w
  3586  0555  3DA8               	addwfc	___ftmul@f3_as_product+1,f
  3587  0556  0825               	movf	___ftmul@f2+2,w
  3588  0557  3DA9               	addwfc	___ftmul@f3_as_product+2,f
  3589  0558                     l3117:	
  3590  0558  36A2               	lsrf	___ftmul@f1+2,f
  3591  0559  0CA1               	rrf	___ftmul@f1+1,f
  3592  055A  0CA0               	rrf	___ftmul@f1,f
  3593  055B  35A3               	lslf	___ftmul@f2,f
  3594  055C  0DA4               	rlf	___ftmul@f2+1,f
  3595  055D  0DA5               	rlf	___ftmul@f2+2,f
  3596  055E  0BAA               	decfsz	___ftmul@cntr,f
  3597  055F  2D50               	goto	l3113
  3598  0560  3009               	movlw	9
  3599  0561  00AA               	movwf	___ftmul@cntr
  3600  0562                     l3125:	
  3601  0562  1C20               	btfss	___ftmul@f1,0
  3602  0563  2D6A               	goto	l3129
  3603  0564  0823               	movf	___ftmul@f2,w
  3604  0565  07A7               	addwf	___ftmul@f3_as_product,f
  3605  0566  0824               	movf	___ftmul@f2+1,w
  3606  0567  3DA8               	addwfc	___ftmul@f3_as_product+1,f
  3607  0568  0825               	movf	___ftmul@f2+2,w
  3608  0569  3DA9               	addwfc	___ftmul@f3_as_product+2,f
  3609  056A                     l3129:	
  3610  056A  36A2               	lsrf	___ftmul@f1+2,f
  3611  056B  0CA1               	rrf	___ftmul@f1+1,f
  3612  056C  0CA0               	rrf	___ftmul@f1,f
  3613  056D  36A9               	lsrf	___ftmul@f3_as_product+2,f
  3614  056E  0CA8               	rrf	___ftmul@f3_as_product+1,f
  3615  056F  0CA7               	rrf	___ftmul@f3_as_product,f
  3616  0570  0BAA               	decfsz	___ftmul@cntr,f
  3617  0571  2D62               	goto	l3125
  3618  0572  0827               	movf	___ftmul@f3_as_product,w
  3619  0573  00F0               	movwf	___ftpack@arg
  3620  0574  0828               	movf	___ftmul@f3_as_product+1,w
  3621  0575  00F1               	movwf	___ftpack@arg+1
  3622  0576  0829               	movf	___ftmul@f3_as_product+2,w
  3623  0577  00F2               	movwf	___ftpack@arg+2
  3624  0578  0826               	movf	___ftmul@exp,w
  3625  0579  00F3               	movwf	___ftpack@exp
  3626  057A  082B               	movf	___ftmul@sign,w
  3627  057B  00F4               	movwf	___ftpack@sign
  3628  057C  2584               	fcall	___ftpack
  3629  057D  0870               	movf	?___ftpack,w
  3630  057E  00A0               	movwf	?___ftmul
  3631  057F  0871               	movf	?___ftpack+1,w
  3632  0580  00A1               	movwf	?___ftmul+1
  3633  0581  0872               	movf	?___ftpack+2,w
  3634  0582  00A2               	movwf	?___ftmul+2
  3635  0583  0008               	return
  3636  0584                     __end_of___ftmul:	
  3637  0584                     __ptext26:	
  3638 ;; *************** function ___ftpack *****************
  3639 ;; Defined at:
  3640 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  arg             3    0[COMMON] unsigned um
  3643 ;;  exp             1    3[COMMON] unsigned char 
  3644 ;;  sign            1    4[COMMON] unsigned char 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  3    0[COMMON] float 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2, status,0
  3651 ;; Tracked objects:
  3652 ;;		On entry : 1F/0
  3653 ;;		On exit  : 1F/0
  3654 ;;		Unchanged: 1F/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3656 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3658 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3659 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3660 ;;Total ram usage:        8 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:    1
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		___ftadd
  3667 ;;		___ftmul
  3668 ;;		___lwtoft
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           
  3673                           ;psect for function ___ftpack
  3674  0584                     ___ftpack:	
  3675                           
  3676                           ;incstack = 0
  3677                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3678  0584  0873               	movf	___ftpack@exp,w
  3679  0585  1903               	btfsc	3,2
  3680  0586  2D8C               	goto	l921
  3681  0587  0872               	movf	___ftpack@arg+2,w
  3682  0588  0471               	iorwf	___ftpack@arg+1,w
  3683  0589  0470               	iorwf	___ftpack@arg,w
  3684  058A  1D03               	skipz
  3685  058B  2D94               	goto	l2865
  3686  058C                     l921:	
  3687  058C  01F0               	clrf	?___ftpack
  3688  058D  01F1               	clrf	?___ftpack+1
  3689  058E  01F2               	clrf	?___ftpack+2
  3690  058F  0008               	return
  3691  0590                     l2863:	
  3692  0590  0AF3               	incf	___ftpack@exp,f
  3693  0591  36F2               	lsrf	___ftpack@arg+2,f
  3694  0592  0CF1               	rrf	___ftpack@arg+1,f
  3695  0593  0CF0               	rrf	___ftpack@arg,f
  3696  0594                     l2865:	
  3697  0594  30FE               	movlw	254
  3698  0595  0572               	andwf	___ftpack@arg+2,w
  3699  0596  1903               	btfsc	3,2
  3700  0597  2DA2               	goto	l2869
  3701  0598  2D90               	goto	l2863
  3702  0599                     l2867:	
  3703  0599  0AF3               	incf	___ftpack@exp,f
  3704  059A  0AF0               	incf	___ftpack@arg,f
  3705  059B  1903               	skipnz
  3706  059C  0AF1               	incf	___ftpack@arg+1,f
  3707  059D  1903               	skipnz
  3708  059E  0AF2               	incf	___ftpack@arg+2,f
  3709  059F  36F2               	lsrf	___ftpack@arg+2,f
  3710  05A0  0CF1               	rrf	___ftpack@arg+1,f
  3711  05A1  0CF0               	rrf	___ftpack@arg,f
  3712  05A2                     l2869:	
  3713  05A2  30FF               	movlw	255
  3714  05A3  0572               	andwf	___ftpack@arg+2,w
  3715  05A4  1903               	btfsc	3,2
  3716  05A5  2DAF               	goto	l2873
  3717  05A6  2D99               	goto	l2867
  3718  05A7                     l2875:	
  3719  05A7  3002               	movlw	2
  3720  05A8  0273               	subwf	___ftpack@exp,w
  3721  05A9  1C03               	btfss	3,0
  3722  05AA  2DB1               	goto	l933
  3723  05AB  03F3               	decf	___ftpack@exp,f
  3724  05AC  35F0               	lslf	___ftpack@arg,f
  3725  05AD  0DF1               	rlf	___ftpack@arg+1,f
  3726  05AE  0DF2               	rlf	___ftpack@arg+2,f
  3727  05AF                     l2873:	
  3728  05AF  1FF1               	btfss	___ftpack@arg+1,7
  3729  05B0  2DA7               	goto	l2875
  3730  05B1                     l933:	
  3731  05B1  1C73               	btfss	___ftpack@exp,0
  3732  05B2  13F1               	bcf	___ftpack@arg+1,7
  3733  05B3  36F3               	lsrf	___ftpack@exp,f
  3734  05B4  0873               	movf	___ftpack@exp,w
  3735  05B5  00F7               	movwf	??___ftpack+2
  3736  05B6  01F6               	clrf	??___ftpack+1
  3737  05B7  01F5               	clrf	??___ftpack
  3738  05B8  0875               	movf	??___ftpack,w
  3739  05B9  04F0               	iorwf	___ftpack@arg,f
  3740  05BA  0876               	movf	??___ftpack+1,w
  3741  05BB  04F1               	iorwf	___ftpack@arg+1,f
  3742  05BC  0877               	movf	??___ftpack+2,w
  3743  05BD  04F2               	iorwf	___ftpack@arg+2,f
  3744  05BE  0874               	movf	___ftpack@sign,w
  3745  05BF  1D03               	btfss	3,2
  3746  05C0  17F2               	bsf	___ftpack@arg+2,7
  3747  05C1  0008               	return
  3748  05C2                     __end_of___ftpack:	
  3749  05C2                     __ptext22:	
  3750 ;; *************** function ___lwtoft *****************
  3751 ;; Defined at:
  3752 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  c               2    8[COMMON] unsigned int 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;		None
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  3    8[COMMON] float 
  3759 ;; Registers used:
  3760 ;;		wreg, status,2, status,0, pclath, cstack
  3761 ;; Tracked objects:
  3762 ;;		On entry : 1F/0
  3763 ;;		On exit  : 1F/0
  3764 ;;		Unchanged: 1F/0
  3765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3766 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3769 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3770 ;;Total ram usage:        3 bytes
  3771 ;; Hardware stack levels used:    1
  3772 ;; Hardware stack levels required when called:    2
  3773 ;; This function calls:
  3774 ;;		___ftpack
  3775 ;; This function is called by:
  3776 ;;		_get_30v_current
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           
  3781                           ;psect for function ___lwtoft
  3782  05C2                     ___lwtoft:	
  3783                           
  3784                           ;incstack = 0
  3785                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3786  05C2  0878               	movf	___lwtoft@c,w
  3787  05C3  00F0               	movwf	___ftpack@arg
  3788  05C4  0879               	movf	___lwtoft@c+1,w
  3789  05C5  00F1               	movwf	___ftpack@arg+1
  3790  05C6  308E               	movlw	142
  3791  05C7  01F2               	clrf	___ftpack@arg+2
  3792  05C8  00F3               	movwf	___ftpack@exp
  3793  05C9  01F4               	clrf	___ftpack@sign
  3794  05CA  2584               	fcall	___ftpack
  3795  05CB  0870               	movf	?___ftpack,w
  3796  05CC  00F8               	movwf	?___lwtoft
  3797  05CD  0871               	movf	?___ftpack+1,w
  3798  05CE  00F9               	movwf	?___lwtoft+1
  3799  05CF  0872               	movf	?___ftpack+2,w
  3800  05D0  00FA               	movwf	?___lwtoft+2
  3801  05D1  0008               	return
  3802  05D2                     __end_of___lwtoft:	
  3803  05D2                     __ptext23:	
  3804 ;; *************** function ___fttol *****************
  3805 ;; Defined at:
  3806 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;  f1              3   24[BANK0 ] float 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  lval            4   32[BANK0 ] unsigned long 
  3811 ;;  exp1            1   36[BANK0 ] unsigned char 
  3812 ;;  sign1           1   31[BANK0 ] unsigned char 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  4   24[BANK0 ] long 
  3815 ;; Registers used:
  3816 ;;		wreg, status,2, status,0
  3817 ;; Tracked objects:
  3818 ;;		On entry : 1F/0
  3819 ;;		On exit  : 1F/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3822 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3823 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3824 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3825 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3826 ;;Total ram usage:       13 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    1
  3829 ;; This function calls:
  3830 ;;		Nothing
  3831 ;; This function is called by:
  3832 ;;		_get_30v_current
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           
  3837                           ;psect for function ___fttol
  3838  05D2                     ___fttol:	
  3839                           
  3840                           ;incstack = 0
  3841                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3842  05D2  0838               	movf	___fttol@f1,w
  3843  05D3  00BC               	movwf	??___fttol
  3844  05D4  0839               	movf	___fttol@f1+1,w
  3845  05D5  00BD               	movwf	??___fttol+1
  3846  05D6  083A               	movf	___fttol@f1+2,w
  3847  05D7  00BE               	movwf	??___fttol+2
  3848  05D8  1003               	clrc
  3849  05D9  0D3D               	rlf	??___fttol+1,w
  3850  05DA  0D3E               	rlf	??___fttol+2,w
  3851  05DB  00C4               	movwf	___fttol@exp1
  3852  05DC  0844               	movf	___fttol@exp1,w
  3853  05DD  1D03               	btfss	3,2
  3854  05DE  2DE4               	goto	l3143
  3855  05DF                     l3141:	
  3856  05DF  01B8               	clrf	?___fttol
  3857  05E0  01B9               	clrf	?___fttol+1
  3858  05E1  01BA               	clrf	?___fttol+2
  3859  05E2  01BB               	clrf	?___fttol+3
  3860  05E3  0008               	return
  3861  05E4                     l3143:	
  3862  05E4  0838               	movf	___fttol@f1,w
  3863  05E5  00BC               	movwf	??___fttol
  3864  05E6  0839               	movf	___fttol@f1+1,w
  3865  05E7  00BD               	movwf	??___fttol+1
  3866  05E8  083A               	movf	___fttol@f1+2,w
  3867  05E9  00BE               	movwf	??___fttol+2
  3868  05EA  3017               	movlw	23
  3869  05EB                     u3025:	
  3870  05EB  36BE               	lsrf	??___fttol+2,f
  3871  05EC  0CBD               	rrf	??___fttol+1,f
  3872  05ED  0CBC               	rrf	??___fttol,f
  3873  05EE  0B89               	decfsz	9,f
  3874  05EF  2DEB               	goto	u3025
  3875  05F0  083C               	movf	??___fttol,w
  3876  05F1  00BF               	movwf	___fttol@sign1
  3877  05F2  17B9               	bsf	___fttol@f1+1,7
  3878  05F3  01BA               	clrf	___fttol@f1+2
  3879  05F4  0838               	movf	___fttol@f1,w
  3880  05F5  00C0               	movwf	___fttol@lval
  3881  05F6  0839               	movf	___fttol@f1+1,w
  3882  05F7  00C1               	movwf	___fttol@lval+1
  3883  05F8  083A               	movf	___fttol@f1+2,w
  3884  05F9  00C2               	movwf	___fttol@lval+2
  3885  05FA  308E               	movlw	142
  3886  05FB  01C3               	clrf	___fttol@lval+3
  3887  05FC  02C4               	subwf	___fttol@exp1,f
  3888  05FD  1FC4               	btfss	___fttol@exp1,7
  3889  05FE  2E0B               	goto	l3163
  3890  05FF  0844               	movf	___fttol@exp1,w
  3891  0600  3A80               	xorlw	128
  3892  0601  3E8F               	addlw	143
  3893  0602  1C03               	btfss	3,0
  3894  0603  2DDF               	goto	l3141
  3895  0604                     l3159:	
  3896  0604  36C3               	lsrf	___fttol@lval+3,f
  3897  0605  0CC2               	rrf	___fttol@lval+2,f
  3898  0606  0CC1               	rrf	___fttol@lval+1,f
  3899  0607  0CC0               	rrf	___fttol@lval,f
  3900  0608  0FC4               	incfsz	___fttol@exp1,f
  3901  0609  2E04               	goto	l3159
  3902  060A  2E18               	goto	l3171
  3903  060B                     l3163:	
  3904  060B  3018               	movlw	24
  3905  060C  0244               	subwf	___fttol@exp1,w
  3906  060D  1803               	btfsc	3,0
  3907  060E  2DDF               	goto	l3141
  3908  060F                     l3169:	
  3909  060F  0844               	movf	___fttol@exp1,w
  3910  0610  1903               	btfsc	3,2
  3911  0611  2E18               	goto	l3171
  3912  0612  35C0               	lslf	___fttol@lval,f
  3913  0613  0DC1               	rlf	___fttol@lval+1,f
  3914  0614  0DC2               	rlf	___fttol@lval+2,f
  3915  0615  0DC3               	rlf	___fttol@lval+3,f
  3916  0616  03C4               	decf	___fttol@exp1,f
  3917  0617  2E0F               	goto	l3169
  3918  0618                     l3171:	
  3919  0618  083F               	movf	___fttol@sign1,w
  3920  0619  1903               	btfsc	3,2
  3921  061A  2E26               	goto	l3175
  3922  061B  09C0               	comf	___fttol@lval,f
  3923  061C  09C1               	comf	___fttol@lval+1,f
  3924  061D  09C2               	comf	___fttol@lval+2,f
  3925  061E  09C3               	comf	___fttol@lval+3,f
  3926  061F  0AC0               	incf	___fttol@lval,f
  3927  0620  1903               	skipnz
  3928  0621  0AC1               	incf	___fttol@lval+1,f
  3929  0622  1903               	skipnz
  3930  0623  0AC2               	incf	___fttol@lval+2,f
  3931  0624  1903               	skipnz
  3932  0625  0AC3               	incf	___fttol@lval+3,f
  3933  0626                     l3175:	
  3934  0626  0843               	movf	___fttol@lval+3,w
  3935  0627  00BB               	movwf	?___fttol+3
  3936  0628  0842               	movf	___fttol@lval+2,w
  3937  0629  00BA               	movwf	?___fttol+2
  3938  062A  0841               	movf	___fttol@lval+1,w
  3939  062B  00B9               	movwf	?___fttol+1
  3940  062C  0840               	movf	___fttol@lval,w
  3941  062D  00B8               	movwf	?___fttol
  3942  062E  0008               	return
  3943  062F                     __end_of___fttol:	
  3944                           
  3945                           	psect	text28
  3946  00B0                     __ptext28:	
  3947 ;; *************** function _Vout_set *****************
  3948 ;; Defined at:
  3949 ;;		line 2004 in file "Multi_RX_testjig_v2.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  Volts           2    4[COMMON] int 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  digi_step       4    6[COMMON] unsigned long 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/4
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3964 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3966 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3967 ;;Total ram usage:        6 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; Hardware stack levels required when called:    3
  3970 ;; This function calls:
  3971 ;;		_digitalpot
  3972 ;; This function is called by:
  3973 ;;		_main
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           
  3978                           ;psect for function _Vout_set
  3979  00B0                     _Vout_set:	
  3980                           
  3981                           ;Multi_RX_testjig_v2.c: 2012: switch(Volts)
  3982                           
  3983                           ;incstack = 0
  3984                           ; Regs used in _Vout_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3985  00B0  28D5               	goto	l3383
  3986  00B1                     l3351:	
  3987                           
  3988                           ;Multi_RX_testjig_v2.c: 2015: digi_step = 20;
  3989  00B1  3014               	movlw	20
  3990  00B2  28CE               	goto	L39
  3991  00B3                     l3353:	
  3992                           ;Multi_RX_testjig_v2.c: 2016: break;
  3993                           
  3994                           
  3995                           ;Multi_RX_testjig_v2.c: 2018: digi_step = 39;
  3996  00B3  3027               	movlw	39
  3997  00B4  28CE               	goto	L39
  3998  00B5                     l3355:	
  3999                           ;Multi_RX_testjig_v2.c: 2019: break;
  4000                           
  4001                           
  4002                           ;Multi_RX_testjig_v2.c: 2021: digi_step = 52;
  4003  00B5  3034               	movlw	52
  4004  00B6  28CE               	goto	L39
  4005  00B7                     l3357:	
  4006                           ;Multi_RX_testjig_v2.c: 2022: break;
  4007                           
  4008                           
  4009                           ;Multi_RX_testjig_v2.c: 2024: digi_step = 62;
  4010  00B7  303E               	movlw	62
  4011  00B8  28CE               	goto	L39
  4012  00B9                     l3359:	
  4013                           ;Multi_RX_testjig_v2.c: 2025: break;
  4014                           
  4015                           
  4016                           ;Multi_RX_testjig_v2.c: 2027: digi_step = 70;
  4017  00B9  3046               	movlw	70
  4018  00BA  28CE               	goto	L39
  4019  00BB                     l3361:	
  4020                           ;Multi_RX_testjig_v2.c: 2028: break;
  4021                           
  4022                           
  4023                           ;Multi_RX_testjig_v2.c: 2030: digi_step = 76;
  4024  00BB  304C               	movlw	76
  4025  00BC  28CE               	goto	L39
  4026  00BD                     l3363:	
  4027                           ;Multi_RX_testjig_v2.c: 2031: break;
  4028                           
  4029                           
  4030                           ;Multi_RX_testjig_v2.c: 2033: digi_step = 81;
  4031  00BD  3051               	movlw	81
  4032  00BE  28CE               	goto	L39
  4033  00BF                     l3365:	
  4034                           ;Multi_RX_testjig_v2.c: 2034: break;
  4035                           
  4036                           
  4037                           ;Multi_RX_testjig_v2.c: 2036: digi_step = 85;
  4038  00BF  3055               	movlw	85
  4039  00C0  28CE               	goto	L39
  4040  00C1                     l3367:	
  4041                           ;Multi_RX_testjig_v2.c: 2037: break;
  4042                           
  4043                           
  4044                           ;Multi_RX_testjig_v2.c: 2039: digi_step = 88;
  4045  00C1  3058               	movlw	88
  4046  00C2  28CE               	goto	L39
  4047  00C3                     l3369:	
  4048                           ;Multi_RX_testjig_v2.c: 2040: break;
  4049                           
  4050                           
  4051                           ;Multi_RX_testjig_v2.c: 2042: digi_step = 91;
  4052  00C3  305B               	movlw	91
  4053  00C4  28CE               	goto	L39
  4054  00C5                     l3371:	
  4055                           ;Multi_RX_testjig_v2.c: 2043: break;
  4056                           
  4057                           
  4058                           ;Multi_RX_testjig_v2.c: 2045: digi_step = 94;
  4059  00C5  305E               	movlw	94
  4060  00C6  28CE               	goto	L39
  4061  00C7                     l3373:	
  4062                           ;Multi_RX_testjig_v2.c: 2046: break;
  4063                           
  4064                           
  4065                           ;Multi_RX_testjig_v2.c: 2048: digi_step = 96;
  4066  00C7  3060               	movlw	96
  4067  00C8  28CE               	goto	L39
  4068  00C9                     l3375:	
  4069                           ;Multi_RX_testjig_v2.c: 2049: break;
  4070                           
  4071                           
  4072                           ;Multi_RX_testjig_v2.c: 2051: digi_step = 98;
  4073  00C9  3062               	movlw	98
  4074  00CA  28CE               	goto	L39
  4075  00CB                     l3377:	
  4076                           ;Multi_RX_testjig_v2.c: 2052: break;
  4077                           
  4078                           
  4079                           ;Multi_RX_testjig_v2.c: 2054: digi_step = 102;
  4080  00CB  3066               	movlw	102
  4081  00CC  28CE               	goto	L39
  4082  00CD                     l3379:	
  4083                           ;Multi_RX_testjig_v2.c: 2055: break;
  4084                           
  4085                           
  4086                           ;Multi_RX_testjig_v2.c: 2057: digi_step = 112;
  4087  00CD  3070               	movlw	112
  4088  00CE                     L39:	
  4089  00CE  00F6               	movwf	Vout_set@digi_step
  4090  00CF  28D1               	goto	L40
  4091  00D0                     l720:	
  4092                           ;Multi_RX_testjig_v2.c: 2059: default:
  4093                           
  4094                           ;Multi_RX_testjig_v2.c: 2058: break;
  4095                           
  4096                           
  4097                           ;Multi_RX_testjig_v2.c: 2060: digi_step = 0;
  4098  00D0  01F6               	clrf	Vout_set@digi_step
  4099  00D1                     L40:	
  4100  00D1  01F7               	clrf	Vout_set@digi_step+1
  4101  00D2  01F8               	clrf	Vout_set@digi_step+2
  4102  00D3  01F9               	clrf	Vout_set@digi_step+3
  4103                           
  4104                           ;Multi_RX_testjig_v2.c: 2061: break;
  4105  00D4  28E7               	goto	l3385
  4106  00D5                     l3383:	
  4107                           
  4108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4109                           ; Switch size 1, requested type "speed"
  4110                           ; Number of cases is 1, Range of values is 0 to 0
  4111                           ; switch strategies available:
  4112                           ; Name         Instructions Cycles
  4113                           ; simple_byte            4     3 (average)
  4114                           ; direct_byte            8     6 (fixed)
  4115                           ; jumptable            260     6 (fixed)
  4116                           ;	Chosen strategy is simple_byte
  4117  00D5  0875               	movf	Vout_set@Volts+1,w
  4118  00D6  3A00               	xorlw	0	; case 0
  4119  00D7  1903               	skipnz
  4120  00D8  28DA               	goto	l4323
  4121  00D9  28D0               	goto	l720
  4122  00DA                     l4323:	
  4123                           
  4124                           ; Switch size 1, requested type "speed"
  4125                           ; Number of cases is 15, Range of values is 6 to 25
  4126                           ; switch strategies available:
  4127                           ; Name         Instructions Cycles
  4128                           ; direct_byte           49     9 (fixed)
  4129                           ; simple_byte           46    24 (average)
  4130                           ; jumptable            263     9 (fixed)
  4131                           ;	Chosen strategy is direct_byte
  4132  00DA  0874               	movf	Vout_set@Volts,w
  4133  00DB  3EFA               	addlw	-6
  4134  00DC  1C03               	skipc
  4135  00DD  28D0               	goto	l720
  4136  00DE  0084               	movwf	4
  4137  00DF  3014               	movlw	20
  4138  00E0  0204               	subwf	4,w
  4139  00E1  1803               	skipnc
  4140  00E2  28D0               	goto	l720
  4141  00E3  3187               	movlp	high S4325
  4142  00E4  3504               	lslf	4,w
  4143  00E5  3EAE               	addlw	low S4325
  4144  00E6  0082               	movwf	2
  4145  00E7                     l3385:	
  4146                           
  4147                           ;Multi_RX_testjig_v2.c: 2068: digitalpot((unsigned char) digi_step);
  4148  00E7  0876               	movf	Vout_set@digi_step,w
  4149  00E8  2B6B               	ljmp	_digitalpot
  4150  00E9                     __end_of_Vout_set:	
  4151  00E9                     __ptext15:	
  4152 ;; *************** function _lcd_set_cursor *****************
  4153 ;; Defined at:
  4154 ;;		line 1223 in file "Multi_RX_testjig_v2.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  row             1    wreg     unsigned char 
  4157 ;;  col             1    1[COMMON] unsigned char 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  row             1    2[COMMON] unsigned char 
  4160 ;;  LCD_position    1    3[COMMON] unsigned char 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0, pclath, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 1F/0
  4167 ;;		On exit  : 1F/4
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4170 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4173 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4174 ;;Total ram usage:        3 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    2
  4177 ;; This function calls:
  4178 ;;		_i2c_Start
  4179 ;;		_i2c_Stop
  4180 ;;		_i2c_Write
  4181 ;; This function is called by:
  4182 ;;		_lcd_print_int
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           
  4187                           ;psect for function _lcd_set_cursor
  4188  00E9                     _lcd_set_cursor:	
  4189                           
  4190                           ;incstack = 0
  4191                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4192                           ;lcd_set_cursor@row stored from wreg
  4193  00E9  00F2               	movwf	lcd_set_cursor@row
  4194                           
  4195                           ;Multi_RX_testjig_v2.c: 1226: col--;
  4196  00EA  03F1               	decf	lcd_set_cursor@col,f
  4197                           
  4198                           ;Multi_RX_testjig_v2.c: 1227: i2c_Start();
  4199  00EB  23E2  3180         	fcall	_i2c_Start
  4200                           
  4201                           ;Multi_RX_testjig_v2.c: 1228: i2c_Write(0x7C);
  4202  00ED  307C               	movlw	124
  4203  00EE  23D6  3180         	fcall	_i2c_Write
  4204                           
  4205                           ;Multi_RX_testjig_v2.c: 1229: i2c_Write(0x00);
  4206  00F0  3000               	movlw	0
  4207  00F1  23D6  3180         	fcall	_i2c_Write
  4208                           
  4209                           ;Multi_RX_testjig_v2.c: 1230: LCD_position = col & 0b11001111;
  4210  00F3  0871               	movf	lcd_set_cursor@col,w
  4211  00F4  00F3               	movwf	lcd_set_cursor@LCD_position
  4212  00F5  30CF               	movlw	207
  4213  00F6  05F3               	andwf	lcd_set_cursor@LCD_position,f
  4214                           
  4215                           ;Multi_RX_testjig_v2.c: 1231: if(row == 1)
  4216  00F7  0B72               	decfsz	lcd_set_cursor@row,w
  4217  00F8  28FB               	goto	l2953
  4218                           
  4219                           ;Multi_RX_testjig_v2.c: 1232: LCD_position |= 0b10000000;
  4220  00F9  17F3               	bsf	lcd_set_cursor@LCD_position,7
  4221  00FA  28FD               	goto	l2955
  4222  00FB                     l2953:	
  4223                           
  4224                           ;Multi_RX_testjig_v2.c: 1233: else
  4225                           ;Multi_RX_testjig_v2.c: 1234: LCD_position |= 0b11000000;
  4226  00FB  30C0               	movlw	192
  4227  00FC  04F3               	iorwf	lcd_set_cursor@LCD_position,f
  4228  00FD                     l2955:	
  4229                           
  4230                           ;Multi_RX_testjig_v2.c: 1235: i2c_Write(LCD_position);
  4231  00FD  0873               	movf	lcd_set_cursor@LCD_position,w
  4232  00FE  23D6  3180         	fcall	_i2c_Write
  4233                           
  4234                           ;Multi_RX_testjig_v2.c: 1236: i2c_Stop();
  4235  0100  2BE7               	ljmp	l2745
  4236  0101                     __end_of_lcd_set_cursor:	
  4237  0101                     __ptext11:	
  4238 ;; *************** function _lcd_print_int *****************
  4239 ;; Defined at:
  4240 ;;		line 1798 in file "Multi_RX_testjig_v2.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  number          2    0[BANK0 ] unsigned int 
  4243 ;;  pos             2    2[BANK0 ] unsigned int 
  4244 ;;  decimal         1    4[BANK0 ] unsigned char 
  4245 ;;  ten_thou_dig    1    5[BANK0 ] unsigned char 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0, pclath, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 1F/0
  4254 ;;		On exit  : 1F/4
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4257 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4260 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4261 ;;Total ram usage:        6 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    3
  4264 ;; This function calls:
  4265 ;;		_i2c_write_char
  4266 ;;		_lcd_set_cursor
  4267 ;;		_ten_thou_conv
  4268 ;; This function is called by:
  4269 ;;		_main
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           
  4274                           ;psect for function _lcd_print_int
  4275  0101                     _lcd_print_int:	
  4276                           
  4277                           ;Multi_RX_testjig_v2.c: 1800: lcd_set_cursor(2, pos + 1 - ten_thou_digit);
  4278                           
  4279                           ;incstack = 0
  4280                           ; Regs used in _lcd_print_int: [wreg+status,2+status,0+pclath+cstack]
  4281  0101  0825               	movf	lcd_print_int@ten_thou_digit,w
  4282  0102  0222               	subwf	lcd_print_int@pos,w
  4283  0103  3E01               	addlw	1
  4284  0104  00F1               	movwf	lcd_set_cursor@col
  4285  0105  3002               	movlw	2
  4286  0106  20E9               	fcall	_lcd_set_cursor
  4287                           
  4288                           ;Multi_RX_testjig_v2.c: 1801: ten_thou_conv(number);
  4289  0107  0020               	movlb	0	; select bank0
  4290  0108  0821               	movf	lcd_print_int@number+1,w
  4291  0109  00F7               	movwf	ten_thou_conv@n+1
  4292  010A  0820               	movf	lcd_print_int@number,w
  4293  010B  00F6               	movwf	ten_thou_conv@n
  4294  010C  3197  2719  3180   	fcall	_ten_thou_conv
  4295                           
  4296                           ;Multi_RX_testjig_v2.c: 1802: if(ten_thou_digit)
  4297  010F  0825               	movf	lcd_print_int@ten_thou_digit,w
  4298  0110  1903               	btfsc	3,2
  4299  0111  291D               	goto	l3421
  4300                           
  4301                           ;Multi_RX_testjig_v2.c: 1803: {
  4302                           ;Multi_RX_testjig_v2.c: 1804: if(ten_thou != 0 || decimal & 0x10)
  4303  0112  0869               	movf	_ten_thou,w
  4304  0113  1D03               	btfss	3,2
  4305  0114  2917               	goto	l3417
  4306  0115  1E24               	btfss	lcd_print_int@decimal,4
  4307  0116  291A               	goto	l3419
  4308  0117                     l3417:	
  4309                           
  4310                           ;Multi_RX_testjig_v2.c: 1805: i2c_write_char(ten_thou + 48);
  4311  0117  0869               	movf	_ten_thou,w
  4312  0118  3E30               	addlw	48
  4313  0119  291B               	goto	L21
  4314  011A                     l3419:	
  4315                           
  4316                           ;Multi_RX_testjig_v2.c: 1806: else i2c_write_char(' ');
  4317  011A  3020               	movlw	32
  4318  011B                     L21:	
  4319  011B  2175  3180         	fcall	_i2c_write_char
  4320  011D                     l3421:	
  4321                           
  4322                           ;Multi_RX_testjig_v2.c: 1807: }
  4323                           ;Multi_RX_testjig_v2.c: 1808: if(decimal & 0x10)i2c_write_char('.');
  4324  011D  0020               	movlb	0	; select bank0
  4325  011E  1E24               	btfss	lcd_print_int@decimal,4
  4326  011F  2923               	goto	l3425
  4327  0120  302E               	movlw	46
  4328  0121  2175  3180         	fcall	_i2c_write_char
  4329  0123                     l3425:	
  4330                           
  4331                           ;Multi_RX_testjig_v2.c: 1809: if(thou != 0 || ten_thou != 0 || decimal & 0x18)
  4332  0123  0020               	movlb	0	; select bank0
  4333  0124  086B               	movf	_thou,w
  4334  0125  1D03               	btfss	3,2
  4335  0126  292E               	goto	l3431
  4336  0127  0869               	movf	_ten_thou,w
  4337  0128  1D03               	btfss	3,2
  4338  0129  292E               	goto	l3431
  4339  012A  0824               	movf	lcd_print_int@decimal,w
  4340  012B  3918               	andlw	24
  4341  012C  1903               	btfsc	3,2
  4342  012D  2931               	goto	l3433
  4343  012E                     l3431:	
  4344                           
  4345                           ;Multi_RX_testjig_v2.c: 1810: i2c_write_char(thou + 48);
  4346  012E  086B               	movf	_thou,w
  4347  012F  3E30               	addlw	48
  4348  0130  2932               	goto	L22
  4349  0131                     l3433:	
  4350                           
  4351                           ;Multi_RX_testjig_v2.c: 1811: else i2c_write_char(' ');
  4352  0131  3020               	movlw	32
  4353  0132                     L22:	
  4354  0132  2175  3180         	fcall	_i2c_write_char
  4355                           
  4356                           ;Multi_RX_testjig_v2.c: 1812: if(decimal & 0x08)i2c_write_char('.');
  4357  0134  0020               	movlb	0	; select bank0
  4358  0135  1DA4               	btfss	lcd_print_int@decimal,3
  4359  0136  293A               	goto	l3439
  4360  0137  302E               	movlw	46
  4361  0138  2175  3180         	fcall	_i2c_write_char
  4362  013A                     l3439:	
  4363                           
  4364                           ;Multi_RX_testjig_v2.c: 1813: if(hund != 0 || thou != 0 || ten_thou != 0 || decimal & 0x
      +                          1C)
  4365  013A  0020               	movlb	0	; select bank0
  4366  013B  0866               	movf	_hund,w
  4367  013C  1D03               	btfss	3,2
  4368  013D  2948               	goto	l3447
  4369  013E  086B               	movf	_thou,w
  4370  013F  1D03               	btfss	3,2
  4371  0140  2948               	goto	l3447
  4372  0141  0869               	movf	_ten_thou,w
  4373  0142  1D03               	btfss	3,2
  4374  0143  2948               	goto	l3447
  4375  0144  0824               	movf	lcd_print_int@decimal,w
  4376  0145  391C               	andlw	28
  4377  0146  1903               	btfsc	3,2
  4378  0147  294B               	goto	l3449
  4379  0148                     l3447:	
  4380                           
  4381                           ;Multi_RX_testjig_v2.c: 1814: i2c_write_char(hund + 48);
  4382  0148  0866               	movf	_hund,w
  4383  0149  3E30               	addlw	48
  4384  014A  294C               	goto	L23
  4385  014B                     l3449:	
  4386                           
  4387                           ;Multi_RX_testjig_v2.c: 1815: else i2c_write_char(' ');
  4388  014B  3020               	movlw	32
  4389  014C                     L23:	
  4390  014C  2175  3180         	fcall	_i2c_write_char
  4391                           
  4392                           ;Multi_RX_testjig_v2.c: 1816: if(decimal & 0x04)i2c_write_char('.');
  4393  014E  0020               	movlb	0	; select bank0
  4394  014F  1D24               	btfss	lcd_print_int@decimal,2
  4395  0150  2954               	goto	l3455
  4396  0151  302E               	movlw	46
  4397  0152  2175  3180         	fcall	_i2c_write_char
  4398  0154                     l3455:	
  4399                           
  4400                           ;Multi_RX_testjig_v2.c: 1817: if(ten != 0 || hund != 0 || thou != 0 || ten_thou != 0 || 
      +                          decimal & 0x1E)
  4401  0154  0020               	movlb	0	; select bank0
  4402  0155  0868               	movf	_ten,w
  4403  0156  1D03               	btfss	3,2
  4404  0157  2965               	goto	l3465
  4405  0158  0866               	movf	_hund,w
  4406  0159  1D03               	btfss	3,2
  4407  015A  2965               	goto	l3465
  4408  015B  086B               	movf	_thou,w
  4409  015C  1D03               	btfss	3,2
  4410  015D  2965               	goto	l3465
  4411  015E  0869               	movf	_ten_thou,w
  4412  015F  1D03               	btfss	3,2
  4413  0160  2965               	goto	l3465
  4414  0161  0824               	movf	lcd_print_int@decimal,w
  4415  0162  391E               	andlw	30
  4416  0163  1903               	btfsc	3,2
  4417  0164  2968               	goto	l3467
  4418  0165                     l3465:	
  4419                           
  4420                           ;Multi_RX_testjig_v2.c: 1818: i2c_write_char(ten + 48);
  4421  0165  0868               	movf	_ten,w
  4422  0166  3E30               	addlw	48
  4423  0167  2969               	goto	L24
  4424  0168                     l3467:	
  4425                           
  4426                           ;Multi_RX_testjig_v2.c: 1819: else i2c_write_char(' ');
  4427  0168  3020               	movlw	32
  4428  0169                     L24:	
  4429  0169  2175  3180         	fcall	_i2c_write_char
  4430                           
  4431                           ;Multi_RX_testjig_v2.c: 1820: if(decimal & 0x02)i2c_write_char('.');
  4432  016B  0020               	movlb	0	; select bank0
  4433  016C  1CA4               	btfss	lcd_print_int@decimal,1
  4434  016D  2971               	goto	l639
  4435  016E  302E               	movlw	46
  4436  016F  2175  3180         	fcall	_i2c_write_char
  4437  0171                     l639:	
  4438                           
  4439                           ;Multi_RX_testjig_v2.c: 1821: i2c_write_char(unit + 48);
  4440  0171  0020               	movlb	0	; select bank0
  4441  0172  086A               	movf	_unit,w
  4442  0173  3E30               	addlw	48
  4443  0174  2975               	ljmp	_i2c_write_char
  4444  0175                     __end_of_lcd_print_int:	
  4445  0175                     __ptext16:	
  4446 ;; *************** function _i2c_write_char *****************
  4447 ;; Defined at:
  4448 ;;		line 1139 in file "Multi_RX_testjig_v2.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;  char_data       1    wreg     unsigned char 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;  char_data       1    1[COMMON] unsigned char 
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0, pclath, cstack
  4457 ;; Tracked objects:
  4458 ;;		On entry : 1F/0
  4459 ;;		On exit  : 1F/4
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4465 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4466 ;;Total ram usage:        1 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    2
  4469 ;; This function calls:
  4470 ;;		_i2c_Start
  4471 ;;		_i2c_Stop
  4472 ;;		_i2c_Write
  4473 ;; This function is called by:
  4474 ;;		_lcd_print_int
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           
  4479                           ;psect for function _i2c_write_char
  4480  0175                     _i2c_write_char:	
  4481                           
  4482                           ;incstack = 0
  4483                           ; Regs used in _i2c_write_char: [wreg+status,2+status,0+pclath+cstack]
  4484                           ;i2c_write_char@char_data stored from wreg
  4485  0175  00F1               	movwf	i2c_write_char@char_data
  4486                           
  4487                           ;Multi_RX_testjig_v2.c: 1141: i2c_Start();
  4488  0176  23E2  3180         	fcall	_i2c_Start
  4489                           
  4490                           ;Multi_RX_testjig_v2.c: 1142: i2c_Write(0x7C);
  4491  0178  307C               	movlw	124
  4492  0179  23D6  3180         	fcall	_i2c_Write
  4493                           
  4494                           ;Multi_RX_testjig_v2.c: 1143: i2c_Write(0x40);
  4495  017B  3040               	movlw	64
  4496  017C  23D6  3180         	fcall	_i2c_Write
  4497                           
  4498                           ;Multi_RX_testjig_v2.c: 1144: i2c_Write(char_data);
  4499  017E  0871               	movf	i2c_write_char@char_data,w
  4500  017F  23D6  3180         	fcall	_i2c_Write
  4501                           
  4502                           ;Multi_RX_testjig_v2.c: 1145: i2c_Stop();
  4503  0181  2BE7               	ljmp	l2745
  4504  0182                     __end_of_i2c_write_char:	
  4505  0182                     __ptext1:	
  4506 ;; *************** function _testjig_done *****************
  4507 ;; Defined at:
  4508 ;;		line 1021 in file "Multi_RX_testjig_v2.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;  state           1    wreg     unsigned char 
  4511 ;;  device_type     1    8[COMMON] unsigned char 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  state           1   12[COMMON] unsigned char 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 1E/1
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4523 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4525 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4526 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4527 ;;Total ram usage:        5 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:    4
  4530 ;; This function calls:
  4531 ;;		_buzz_one
  4532 ;;		_debug_fast_tx
  4533 ;;		_power_supply_set
  4534 ;;		_print_screen
  4535 ;; This function is called by:
  4536 ;;		_main
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           
  4541                           ;psect for function _testjig_done
  4542  0182                     _testjig_done:	
  4543                           
  4544                           ;incstack = 0
  4545                           ; Regs used in _testjig_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4546                           ;testjig_done@state stored from wreg
  4547  0182  00FC               	movwf	testjig_done@state
  4548  0183                     l466:	
  4549                           ;Multi_RX_testjig_v2.c: 1023: while(1)
  4550                           
  4551                           
  4552                           ;Multi_RX_testjig_v2.c: 1024: {
  4553                           ;Multi_RX_testjig_v2.c: 1025: RE0 = 0;
  4554  0183  0020               	movlb	0	; select bank0
  4555  0184  1010               	bcf	16,0	;volatile
  4556                           
  4557                           ;Multi_RX_testjig_v2.c: 1026: power_supply_set(3);
  4558  0185  3003               	movlw	3
  4559  0186  23F4  3180         	fcall	_power_supply_set
  4560                           
  4561                           ;Multi_RX_testjig_v2.c: 1027: LATA7 = 0;
  4562  0188  0022               	movlb	2	; select bank2
  4563  0189  138C               	bcf	12,7	;volatile
  4564                           
  4565                           ;Multi_RX_testjig_v2.c: 1028: LATB5 = 0;
  4566  018A  128D               	bcf	13,5	;volatile
  4567                           
  4568                           ;Multi_RX_testjig_v2.c: 1029: LATA6 = 0;
  4569  018B  130C               	bcf	12,6	;volatile
  4570                           
  4571                           ;Multi_RX_testjig_v2.c: 1030: debug_fast_tx(11110);
  4572  018C  3066               	movlw	102
  4573  018D  00F0               	movwf	debug_fast_tx@data
  4574  018E  302B               	movlw	43
  4575  018F  00F1               	movwf	debug_fast_tx@data+1
  4576  0190  22A9  3180         	fcall	_debug_fast_tx
  4577                           
  4578                           ;Multi_RX_testjig_v2.c: 1031: debug_fast_tx(state);
  4579  0192  087C               	movf	testjig_done@state,w
  4580  0193  00F0               	movwf	debug_fast_tx@data
  4581  0194  01F1               	clrf	debug_fast_tx@data+1
  4582  0195  22A9  3180         	fcall	_debug_fast_tx
  4583                           
  4584                           ;Multi_RX_testjig_v2.c: 1032: switch(state)
  4585  0197  2A38               	goto	l3285
  4586  0198                     l3239:	
  4587                           
  4588                           ;Multi_RX_testjig_v2.c: 1035: if(device_type == 0xAA)
  4589  0198  30AA               	movlw	170
  4590  0199  0678               	xorwf	testjig_done@device_type,w
  4591  019A  1D03               	btfss	3,2
  4592  019B  29A0               	goto	l3243
  4593                           
  4594                           ;Multi_RX_testjig_v2.c: 1036: print_screen("Condo3 Pass", " Remove board");
  4595  019C  3090               	movlw	low (STR_163| (0+32768))
  4596  019D  00F4               	movwf	print_screen@top
  4597  019E  3092               	movlw	high (STR_163| (0+32768))
  4598  019F  29B3               	goto	L14
  4599  01A0                     l3243:	
  4600                           
  4601                           ;Multi_RX_testjig_v2.c: 1037: else if(device_type == 0xA1)
  4602  01A0  30A1               	movlw	161
  4603  01A1  0678               	xorwf	testjig_done@device_type,w
  4604  01A2  1D03               	btfss	3,2
  4605  01A3  29A8               	goto	l3247
  4606                           
  4607                           ;Multi_RX_testjig_v2.c: 1038: print_screen("RX3 Pass", " Remove board");
  4608  01A4  305E               	movlw	low (STR_165| (0+32768))
  4609  01A5  00F4               	movwf	print_screen@top
  4610  01A6  3093               	movlw	high (STR_165| (0+32768))
  4611  01A7  29B3               	goto	L14
  4612  01A8                     l3247:	
  4613                           
  4614                           ;Multi_RX_testjig_v2.c: 1039: else if(device_type == 0xA2)
  4615  01A8  30A2               	movlw	162
  4616  01A9  0678               	xorwf	testjig_done@device_type,w
  4617  01AA  1D03               	btfss	3,2
  4618  01AB  29B0               	goto	l3251
  4619                           
  4620                           ;Multi_RX_testjig_v2.c: 1040: print_screen("Mem_Copier Pass", " Remove board");
  4621  01AC  30DF               	movlw	low (STR_167| (0+32768))
  4622  01AD  00F4               	movwf	print_screen@top
  4623  01AE  3090               	movlw	high (STR_167| (0+32768))
  4624  01AF  29B3               	goto	L14
  4625  01B0                     l3251:	
  4626                           
  4627                           ;Multi_RX_testjig_v2.c: 1041: else
  4628                           ;Multi_RX_testjig_v2.c: 1042: print_screen("Multi_RX Pass", " Remove board");
  4629  01B0  3090               	movlw	low (STR_169| (0+32768))
  4630  01B1  00F4               	movwf	print_screen@top
  4631  01B2  3091               	movlw	high (STR_169| (0+32768))
  4632  01B3                     L14:	
  4633  01B3  00F5               	movwf	print_screen@top+1
  4634  01B4  3074               	movlw	low (STR_164| (0+32768))
  4635  01B5  00F6               	movwf	print_screen@bottom
  4636  01B6  3091               	movlw	high (STR_164| (0+32768))
  4637  01B7  00F7               	movwf	print_screen@bottom+1
  4638  01B8  22D6  3180         	fcall	_print_screen
  4639                           
  4640                           ;Multi_RX_testjig_v2.c: 1043: debug_fast_tx(11111);
  4641  01BA  3067               	movlw	103
  4642  01BB  00F0               	movwf	debug_fast_tx@data
  4643  01BC  302B               	movlw	43
  4644  01BD  00F1               	movwf	debug_fast_tx@data+1
  4645  01BE  22A9  3180         	fcall	_debug_fast_tx
  4646                           
  4647                           ;Multi_RX_testjig_v2.c: 1044: buzz_one(100);
  4648  01C0  3064               	movlw	100
  4649  01C1  00F0               	movwf	buzz_one@time
  4650  01C2  01F1               	clrf	buzz_one@time+1
  4651  01C3  23EC  3180         	fcall	_buzz_one
  4652                           
  4653                           ;Multi_RX_testjig_v2.c: 1045: _delay((unsigned long)((200)*(16000000/4000.0)));
  4654  01C5  3005               	movlw	5
  4655  01C6  00FB               	movwf	??_testjig_done+2
  4656  01C7  300F               	movlw	15
  4657  01C8  00FA               	movwf	??_testjig_done+1
  4658  01C9  30F4               	movlw	244
  4659  01CA  00F9               	movwf	??_testjig_done
  4660  01CB                     u5167:	
  4661  01CB  0BF9               	decfsz	??_testjig_done,f
  4662  01CC  29CB               	goto	u5167
  4663  01CD  0BFA               	decfsz	??_testjig_done+1,f
  4664  01CE  29CB               	goto	u5167
  4665  01CF  0BFB               	decfsz	??_testjig_done+2,f
  4666  01D0  29CB               	goto	u5167
  4667                           
  4668                           ;Multi_RX_testjig_v2.c: 1046: buzz_one(100);
  4669  01D1  3064               	movlw	100
  4670  01D2  00F0               	movwf	buzz_one@time
  4671  01D3  01F1               	clrf	buzz_one@time+1
  4672  01D4  23EC  3180         	fcall	_buzz_one
  4673  01D6                     l475:	
  4674                           ;Multi_RX_testjig_v2.c: 1047: while(RF3 == 0);
  4675                           
  4676  01D6  0025               	movlb	5	; select bank5
  4677  01D7  1D8C               	btfss	12,3	;volatile
  4678  01D8  29D6               	goto	l475
  4679                           
  4680                           ;Multi_RX_testjig_v2.c: 1048: _delay((unsigned long)((100)*(16000000/4000.0)));
  4681  01D9  3003               	movlw	3
  4682  01DA  00FB               	movwf	??_testjig_done+2
  4683  01DB  3008               	movlw	8
  4684  01DC  00FA               	movwf	??_testjig_done+1
  4685  01DD  3078               	movlw	120
  4686  01DE  00F9               	movwf	??_testjig_done
  4687  01DF                     u5177:	
  4688  01DF  0BF9               	decfsz	??_testjig_done,f
  4689  01E0  29DF               	goto	u5177
  4690  01E1  0BFA               	decfsz	??_testjig_done+1,f
  4691  01E2  29DF               	goto	u5177
  4692  01E3  0BFB               	decfsz	??_testjig_done+2,f
  4693  01E4  29DF               	goto	u5177
  4694  01E5  2A35               	goto	L15
  4695  01E6                     l3263:	
  4696                           ;Multi_RX_testjig_v2.c: 1050: break;
  4697                           
  4698                           ;Multi_RX_testjig_v2.c: 1049: state = 0xFF;
  4699                           
  4700                           
  4701                           ;Multi_RX_testjig_v2.c: 1052: debug_fast_tx(11112);
  4702  01E6  3068               	movlw	104
  4703  01E7  00F0               	movwf	debug_fast_tx@data
  4704  01E8  302B               	movlw	43
  4705  01E9  00F1               	movwf	debug_fast_tx@data+1
  4706  01EA  22A9  3180         	fcall	_debug_fast_tx
  4707                           
  4708                           ;Multi_RX_testjig_v2.c: 1054: if(device_type == 0xAA)
  4709  01EC  30AA               	movlw	170
  4710  01ED  0678               	xorwf	testjig_done@device_type,w
  4711  01EE  1D03               	btfss	3,2
  4712  01EF  29F4               	goto	l3269
  4713                           
  4714                           ;Multi_RX_testjig_v2.c: 1055: print_screen("Condo3 ", " Testjig");
  4715  01F0  3067               	movlw	low (STR_171| (0+32768))
  4716  01F1  00F4               	movwf	print_screen@top
  4717  01F2  3093               	movlw	high (STR_171| (0+32768))
  4718  01F3  2A03               	goto	L20
  4719  01F4                     l3269:	
  4720                           
  4721                           ;Multi_RX_testjig_v2.c: 1056: else if(device_type == 0xA1)
  4722  01F4  30A1               	movlw	161
  4723  01F5  0678               	xorwf	testjig_done@device_type,w
  4724  01F6  1D03               	btfss	3,2
  4725  01F7  29FC               	goto	l3273
  4726                           
  4727                           ;Multi_RX_testjig_v2.c: 1057: print_screen("RX3 ", " Testjig");
  4728  01F8  307F               	movlw	low (STR_173| (0+32768))
  4729  01F9  00F4               	movwf	print_screen@top
  4730  01FA  3093               	movlw	high (STR_173| (0+32768))
  4731  01FB  2A03               	goto	L20
  4732  01FC                     l3273:	
  4733                           
  4734                           ;Multi_RX_testjig_v2.c: 1058: else if(device_type == 0xA2)
  4735  01FC  30A2               	movlw	162
  4736  01FD  0678               	xorwf	testjig_done@device_type,w
  4737  01FE  1D03               	btfss	3,2
  4738  01FF  2A08               	goto	l3277
  4739                           
  4740                           ;Multi_RX_testjig_v2.c: 1059: print_screen("Mem_Copier Pass", " Testjig");
  4741  0200  30DF               	movlw	low (STR_167| (0+32768))
  4742  0201  00F4               	movwf	print_screen@top
  4743  0202  3090               	movlw	high (STR_167| (0+32768))
  4744  0203                     L20:	
  4745  0203  00F5               	movwf	print_screen@top+1
  4746  0204  3063               	movlw	low ((STR_183+3)| (0+32768))
  4747  0205  00F6               	movwf	print_screen@bottom
  4748  0206  3092               	movlw	high ((STR_183+3)| (0+32768))
  4749  0207  2A0F               	goto	L16
  4750  0208                     l3277:	
  4751                           
  4752                           ;Multi_RX_testjig_v2.c: 1060: else
  4753                           ;Multi_RX_testjig_v2.c: 1061: print_screen("Multi_RX", "Testjig");
  4754  0208  304C               	movlw	low (STR_1| (0+32768))
  4755  0209  00F4               	movwf	print_screen@top
  4756  020A  3093               	movlw	high (STR_1| (0+32768))
  4757  020B  00F5               	movwf	print_screen@top+1
  4758  020C  3064               	movlw	low ((STR_183+4)| (0+32768))
  4759  020D  00F6               	movwf	print_screen@bottom
  4760  020E  3092               	movlw	high ((STR_183+4)| (0+32768))
  4761  020F                     L16:	
  4762  020F  00F7               	movwf	print_screen@bottom+1
  4763  0210  22D6  3180         	fcall	_print_screen
  4764                           
  4765                           ;Multi_RX_testjig_v2.c: 1062: _delay((unsigned long)((2000)*(16000000/4000.0)));
  4766  0212  3029               	movlw	41
  4767  0213  00FB               	movwf	??_testjig_done+2
  4768  0214  3096               	movlw	150
  4769  0215  00FA               	movwf	??_testjig_done+1
  4770  0216  30A6               	movlw	166
  4771  0217  00F9               	movwf	??_testjig_done
  4772  0218                     u5187:	
  4773  0218  0BF9               	decfsz	??_testjig_done,f
  4774  0219  2A18               	goto	u5187
  4775  021A  0BFA               	decfsz	??_testjig_done+1,f
  4776  021B  2A18               	goto	u5187
  4777  021C  0BFB               	decfsz	??_testjig_done+2,f
  4778  021D  2A18               	goto	u5187
  4779                           
  4780                           ;Multi_RX_testjig_v2.c: 1063: print_screen("Testjig Power-up", "wait...");
  4781  021E  306C               	movlw	low (STR_179| (0+32768))
  4782  021F  00F4               	movwf	print_screen@top
  4783  0220  3090               	movlw	high (STR_179| (0+32768))
  4784  0221  00F5               	movwf	print_screen@top+1
  4785  0222  306F               	movlw	low (STR_180| (0+32768))
  4786  0223  00F6               	movwf	print_screen@bottom
  4787  0224  3093               	movlw	high (STR_180| (0+32768))
  4788  0225  00F7               	movwf	print_screen@bottom+1
  4789  0226  22D6  3180         	fcall	_print_screen
  4790                           
  4791                           ;Multi_RX_testjig_v2.c: 1064: _delay((unsigned long)((3000)*(16000000/4000.0)));
  4792  0228  303D               	movlw	61
  4793  0229  00FB               	movwf	??_testjig_done+2
  4794  022A  30E1               	movlw	225
  4795  022B  00FA               	movwf	??_testjig_done+1
  4796  022C  307A               	movlw	122
  4797  022D  00F9               	movwf	??_testjig_done
  4798  022E                     u5197:	
  4799  022E  0BF9               	decfsz	??_testjig_done,f
  4800  022F  2A2E               	goto	u5197
  4801  0230  0BFA               	decfsz	??_testjig_done+1,f
  4802  0231  2A2E               	goto	u5197
  4803  0232  0BFB               	decfsz	??_testjig_done+2,f
  4804  0233  2A2E               	goto	u5197
  4805  0234  3200               	nop2
  4806  0235                     L15:	
  4807                           
  4808                           ;Multi_RX_testjig_v2.c: 1065: state = 0xFF;
  4809  0235  30FF               	movlw	255
  4810  0236  00FC               	movwf	testjig_done@state
  4811                           
  4812                           ;Multi_RX_testjig_v2.c: 1066: break;
  4813  0237  2A40               	goto	l3287
  4814  0238                     l3285:	
  4815  0238  087C               	movf	testjig_done@state,w
  4816                           
  4817                           ; Switch size 1, requested type "speed"
  4818                           ; Number of cases is 2, Range of values is 1 to 2
  4819                           ; switch strategies available:
  4820                           ; Name         Instructions Cycles
  4821                           ; simple_byte            7     4 (average)
  4822                           ; direct_byte           13     9 (fixed)
  4823                           ; jumptable            263     9 (fixed)
  4824                           ;	Chosen strategy is simple_byte
  4825  0239  3A01               	xorlw	1	; case 1
  4826  023A  1903               	skipnz
  4827  023B  2998               	goto	l3239
  4828  023C  3A03               	xorlw	3	; case 2
  4829  023D  1903               	skipnz
  4830  023E  29E6               	goto	l3263
  4831  023F  2A40               	goto	l3287
  4832  0240                     l3287:	
  4833                           
  4834                           ;Multi_RX_testjig_v2.c: 1068: debug_fast_tx(11113);
  4835  0240  3069               	movlw	105
  4836  0241  00F0               	movwf	debug_fast_tx@data
  4837  0242  302B               	movlw	43
  4838  0243  00F1               	movwf	debug_fast_tx@data+1
  4839  0244  22A9  3180         	fcall	_debug_fast_tx
  4840                           
  4841                           ;Multi_RX_testjig_v2.c: 1069: if(device_type == 0xAA)
  4842  0246  30AA               	movlw	170
  4843  0247  0678               	xorwf	testjig_done@device_type,w
  4844  0248  1D03               	btfss	3,2
  4845  0249  2A4E               	goto	l3293
  4846                           
  4847                           ;Multi_RX_testjig_v2.c: 1070: print_screen("Condo3 Testjig", "-> Insert PCB");
  4848  024A  301D               	movlw	low (STR_181| (0+32768))
  4849  024B  00F4               	movwf	print_screen@top
  4850  024C  3091               	movlw	high (STR_181| (0+32768))
  4851  024D  2A61               	goto	L17
  4852  024E                     l3293:	
  4853                           
  4854                           ;Multi_RX_testjig_v2.c: 1071: else if(device_type == 0xA1)
  4855  024E  30A1               	movlw	161
  4856  024F  0678               	xorwf	testjig_done@device_type,w
  4857  0250  1D03               	btfss	3,2
  4858  0251  2A56               	goto	l3297
  4859                           
  4860                           ;Multi_RX_testjig_v2.c: 1072: print_screen("RX3 Testjig", "-> Insert PCB");
  4861  0252  3060               	movlw	low (STR_183| (0+32768))
  4862  0253  00F4               	movwf	print_screen@top
  4863  0254  3092               	movlw	high (STR_183| (0+32768))
  4864  0255  2A61               	goto	L17
  4865  0256                     l3297:	
  4866                           
  4867                           ;Multi_RX_testjig_v2.c: 1073: else if(device_type == 0xA2)
  4868  0256  30A2               	movlw	162
  4869  0257  0678               	xorwf	testjig_done@device_type,w
  4870  0258  1D03               	btfss	3,2
  4871  0259  2A5E               	goto	l3301
  4872                           
  4873                           ;Multi_RX_testjig_v2.c: 1074: print_screen("Mem_Copier Pass", "-> Insert PCB");
  4874  025A  30DF               	movlw	low (STR_167| (0+32768))
  4875  025B  00F4               	movwf	print_screen@top
  4876  025C  3090               	movlw	high (STR_167| (0+32768))
  4877  025D  2A61               	goto	L17
  4878  025E                     l3301:	
  4879                           
  4880                           ;Multi_RX_testjig_v2.c: 1075: else
  4881                           ;Multi_RX_testjig_v2.c: 1076: print_screen("Multi_RX Testjig", "-> Insert PCB");
  4882  025E  304A               	movlw	low (STR_187| (0+32768))
  4883  025F  00F4               	movwf	print_screen@top
  4884  0260  3090               	movlw	high (STR_187| (0+32768))
  4885  0261                     L17:	
  4886  0261  00F5               	movwf	print_screen@top+1
  4887  0262  3066               	movlw	low (STR_4| (0+32768))
  4888  0263  00F6               	movwf	print_screen@bottom
  4889  0264  3091               	movlw	high (STR_4| (0+32768))
  4890  0265  00F7               	movwf	print_screen@bottom+1
  4891  0266  22D6  3180         	fcall	_print_screen
  4892  0268                     l492:	
  4893  0268  0025               	movlb	5	; select bank5
  4894  0269  198C               	btfsc	12,3	;volatile
  4895  026A  2A68               	goto	l492
  4896                           
  4897                           ;Multi_RX_testjig_v2.c: 1078: _delay((unsigned long)((100)*(16000000/4000.0)));
  4898  026B  3003               	movlw	3
  4899  026C  00FB               	movwf	??_testjig_done+2
  4900  026D  3008               	movlw	8
  4901  026E  00FA               	movwf	??_testjig_done+1
  4902  026F  3078               	movlw	120
  4903  0270  00F9               	movwf	??_testjig_done
  4904  0271                     u5207:	
  4905  0271  0BF9               	decfsz	??_testjig_done,f
  4906  0272  2A71               	goto	u5207
  4907  0273  0BFA               	decfsz	??_testjig_done+1,f
  4908  0274  2A71               	goto	u5207
  4909  0275  0BFB               	decfsz	??_testjig_done+2,f
  4910  0276  2A71               	goto	u5207
  4911                           
  4912                           ;Multi_RX_testjig_v2.c: 1079: if(device_type == 0xAA)
  4913  0277  30AA               	movlw	170
  4914  0278  0678               	xorwf	testjig_done@device_type,w
  4915  0279  1D03               	btfss	3,2
  4916  027A  2A7F               	goto	l3309
  4917                           
  4918                           ;Multi_RX_testjig_v2.c: 1080: print_screen("Condo3 Testjig", " Press START");
  4919  027B  301D               	movlw	low (STR_181| (0+32768))
  4920  027C  00F4               	movwf	print_screen@top
  4921  027D  3091               	movlw	high (STR_181| (0+32768))
  4922  027E  2A92               	goto	L18
  4923  027F                     l3309:	
  4924                           
  4925                           ;Multi_RX_testjig_v2.c: 1081: else if(device_type == 0xA1)
  4926  027F  30A1               	movlw	161
  4927  0280  0678               	xorwf	testjig_done@device_type,w
  4928  0281  1D03               	btfss	3,2
  4929  0282  2A87               	goto	l3313
  4930                           
  4931                           ;Multi_RX_testjig_v2.c: 1082: print_screen("RX3 Testjig", " Press START");
  4932  0283  3060               	movlw	low (STR_183| (0+32768))
  4933  0284  00F4               	movwf	print_screen@top
  4934  0285  3092               	movlw	high (STR_183| (0+32768))
  4935  0286  2A92               	goto	L18
  4936  0287                     l3313:	
  4937                           
  4938                           ;Multi_RX_testjig_v2.c: 1083: else if(device_type == 0xA2)
  4939  0287  30A2               	movlw	162
  4940  0288  0678               	xorwf	testjig_done@device_type,w
  4941  0289  1D03               	btfss	3,2
  4942  028A  2A8F               	goto	l3317
  4943                           
  4944                           ;Multi_RX_testjig_v2.c: 1084: print_screen("Mem_Copier Pass", " Press START");
  4945  028B  30DF               	movlw	low (STR_167| (0+32768))
  4946  028C  00F4               	movwf	print_screen@top
  4947  028D  3090               	movlw	high (STR_167| (0+32768))
  4948  028E  2A92               	goto	L18
  4949  028F                     l3317:	
  4950                           
  4951                           ;Multi_RX_testjig_v2.c: 1085: else
  4952                           ;Multi_RX_testjig_v2.c: 1086: print_screen("Multi_RX Testjig", " Press START");
  4953  028F  304A               	movlw	low (STR_187| (0+32768))
  4954  0290  00F4               	movwf	print_screen@top
  4955  0291  3090               	movlw	high (STR_187| (0+32768))
  4956  0292                     L18:	
  4957  0292  00F5               	movwf	print_screen@top+1
  4958  0293  30FB               	movlw	low (STR_190| (0+32768))
  4959  0294  00F6               	movwf	print_screen@bottom
  4960  0295  3091               	movlw	high (STR_190| (0+32768))
  4961  0296  00F7               	movwf	print_screen@bottom+1
  4962  0297  22D6  3180         	fcall	_print_screen
  4963  0299                     l501:	
  4964  0299  0025               	movlb	5	; select bank5
  4965  029A  1D8C               	btfss	12,3	;volatile
  4966  029B  2A99               	goto	l501
  4967                           
  4968                           ;Multi_RX_testjig_v2.c: 1088: _delay((unsigned long)((100)*(16000000/4000.0)));
  4969  029C  3003               	movlw	3
  4970  029D  00FB               	movwf	??_testjig_done+2
  4971  029E  3008               	movlw	8
  4972  029F  00FA               	movwf	??_testjig_done+1
  4973  02A0  3078               	movlw	120
  4974  02A1  00F9               	movwf	??_testjig_done
  4975  02A2                     u5217:	
  4976  02A2  0BF9               	decfsz	??_testjig_done,f
  4977  02A3  2AA2               	goto	u5217
  4978  02A4  0BFA               	decfsz	??_testjig_done+1,f
  4979  02A5  2AA2               	goto	u5217
  4980  02A6  0BFB               	decfsz	??_testjig_done+2,f
  4981  02A7  2AA2               	goto	u5217
  4982  02A8  2983               	goto	l466
  4983  02A9                     __end_of_testjig_done:	
  4984  02A9                     __ptext9:	
  4985 ;; *************** function _debug_fast_tx *****************
  4986 ;; Defined at:
  4987 ;;		line 2081 in file "Multi_RX_testjig_v2.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  data            2    0[COMMON] unsigned int 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  i               1    2[COMMON] unsigned char 
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  1    wreg      void 
  4994 ;; Registers used:
  4995 ;;		wreg, status,2, status,0
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/2
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5002 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5004 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5005 ;;Total ram usage:        3 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:    1
  5008 ;; This function calls:
  5009 ;;		Nothing
  5010 ;; This function is called by:
  5011 ;;		_main
  5012 ;;		_testjig_done
  5013 ;;		_print_error
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           
  5018                           ;psect for function _debug_fast_tx
  5019  02A9                     _debug_fast_tx:	
  5020                           
  5021                           ;Multi_RX_testjig_v2.c: 2083: GIE = 0;
  5022                           
  5023                           ;incstack = 0
  5024                           ; Regs used in _debug_fast_tx: [wreg+status,2+status,0]
  5025  02A9  138B               	bcf	11,7	;volatile
  5026                           
  5027                           ;Multi_RX_testjig_v2.c: 2084: LATD2 = 0;
  5028  02AA  0022               	movlb	2	; select bank2
  5029  02AB  110F               	bcf	15,2	;volatile
  5030                           
  5031                           ;Multi_RX_testjig_v2.c: 2090: __nop();
  5032  02AC  0000               	nop
  5033                           
  5034                           ;Multi_RX_testjig_v2.c: 2091: __nop();
  5035  02AD  0000               	nop
  5036                           
  5037                           ;Multi_RX_testjig_v2.c: 2092: __nop();
  5038  02AE  0000               	nop
  5039                           
  5040                           ;Multi_RX_testjig_v2.c: 2093: __nop();
  5041  02AF  0000               	nop
  5042                           
  5043                           ;Multi_RX_testjig_v2.c: 2094: __nop();
  5044  02B0  0000               	nop
  5045                           
  5046                           ;Multi_RX_testjig_v2.c: 2095: __nop();
  5047  02B1  0000               	nop
  5048                           
  5049                           ;Multi_RX_testjig_v2.c: 2096: __nop();
  5050  02B2  0000               	nop
  5051                           
  5052                           ;Multi_RX_testjig_v2.c: 2097: __nop();
  5053  02B3  0000               	nop
  5054                           
  5055                           ;Multi_RX_testjig_v2.c: 2098: __nop();
  5056  02B4  0000               	nop
  5057                           
  5058                           ;Multi_RX_testjig_v2.c: 2099: unsigned char i;
  5059                           ;Multi_RX_testjig_v2.c: 2100: for(i = 0; i < 16; i++)
  5060  02B5  01F2               	clrf	debug_fast_tx@i
  5061  02B6                     l727:	
  5062                           
  5063                           ;Multi_RX_testjig_v2.c: 2101: {
  5064                           ;Multi_RX_testjig_v2.c: 2102: LATD2 = data & 0x01;
  5065  02B6  1C70               	btfss	debug_fast_tx@data,0
  5066  02B7  2ABB               	goto	u2650
  5067  02B8  0022               	movlb	2	; select bank2
  5068  02B9  150F               	bsf	15,2	;volatile
  5069  02BA  2ABD               	goto	l2901
  5070  02BB                     u2650:	
  5071  02BB  0022               	movlb	2	; select bank2
  5072  02BC  110F               	bcf	15,2	;volatile
  5073  02BD                     l2901:	
  5074  02BD  3010               	movlw	16
  5075                           
  5076                           ;Multi_RX_testjig_v2.c: 2103: data = data >> 1;
  5077  02BE  36F1               	lsrf	debug_fast_tx@data+1,f
  5078  02BF  0CF0               	rrf	debug_fast_tx@data,f
  5079  02C0  0AF2               	incf	debug_fast_tx@i,f
  5080  02C1  0272               	subwf	debug_fast_tx@i,w
  5081  02C2  1C03               	skipc
  5082  02C3  2AB6               	goto	l727
  5083                           
  5084                           ;Multi_RX_testjig_v2.c: 2104: }
  5085                           ;Multi_RX_testjig_v2.c: 2105: __nop();
  5086  02C4  0000               	nop
  5087                           
  5088                           ;Multi_RX_testjig_v2.c: 2106: __nop();
  5089  02C5  0000               	nop
  5090                           
  5091                           ;Multi_RX_testjig_v2.c: 2107: __nop();
  5092  02C6  0000               	nop
  5093                           
  5094                           ;Multi_RX_testjig_v2.c: 2108: __nop();
  5095  02C7  0000               	nop
  5096                           
  5097                           ;Multi_RX_testjig_v2.c: 2109: __nop();
  5098  02C8  0000               	nop
  5099                           
  5100                           ;Multi_RX_testjig_v2.c: 2110: __nop();
  5101  02C9  0000               	nop
  5102                           
  5103                           ;Multi_RX_testjig_v2.c: 2111: LATD2 = 1;
  5104  02CA  0022               	movlb	2	; select bank2
  5105  02CB  150F               	bsf	15,2	;volatile
  5106                           
  5107                           ;Multi_RX_testjig_v2.c: 2112: __nop();
  5108  02CC  0000               	nop
  5109                           
  5110                           ;Multi_RX_testjig_v2.c: 2113: __nop();
  5111  02CD  0000               	nop
  5112                           
  5113                           ;Multi_RX_testjig_v2.c: 2114: __nop();
  5114  02CE  0000               	nop
  5115                           
  5116                           ;Multi_RX_testjig_v2.c: 2115: __nop();
  5117  02CF  0000               	nop
  5118                           
  5119                           ;Multi_RX_testjig_v2.c: 2116: __nop();
  5120  02D0  0000               	nop
  5121                           
  5122                           ;Multi_RX_testjig_v2.c: 2117: __nop();
  5123  02D1  0000               	nop
  5124                           
  5125                           ;Multi_RX_testjig_v2.c: 2118: __nop();
  5126  02D2  0000               	nop
  5127                           
  5128                           ;Multi_RX_testjig_v2.c: 2119: __nop();
  5129  02D3  0000               	nop
  5130                           
  5131                           ;Multi_RX_testjig_v2.c: 2120: GIE = 1;
  5132  02D4  178B               	bsf	11,7	;volatile
  5133  02D5  0008               	return
  5134  02D6                     __end_of_debug_fast_tx:	
  5135  02D6                     __ptext3:	
  5136 ;; *************** function _print_screen *****************
  5137 ;; Defined at:
  5138 ;;		line 1588 in file "Multi_RX_testjig_v2.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  top             2    4[COMMON] PTR const unsigned char 
  5141 ;;		 -> STR_197(12), STR_195(17), STR_193(16), STR_191(12), 
  5142 ;;		 -> STR_189(15), STR_187(17), STR_185(16), STR_183(12), 
  5143 ;;		 -> STR_181(15), STR_179(17), STR_177(9), STR_175(16), 
  5144 ;;		 -> STR_173(5), STR_171(8), STR_169(14), STR_167(16), 
  5145 ;;		 -> STR_165(9), STR_163(12), STR_161(10), STR_159(16), 
  5146 ;;		 -> STR_155(10), STR_151(14), STR_147(13), STR_139(8), 
  5147 ;;		 -> STR_137(8), STR_135(8), STR_125(8), STR_123(8), 
  5148 ;;		 -> STR_111(8), STR_89(9), STR_87(9), STR_65(9), 
  5149 ;;		 -> STR_63(9), STR_51(11), STR_49(11), STR_43(13), 
  5150 ;;		 -> STR_37(9), STR_33(13), STR_31(19), STR_29(12), 
  5151 ;;		 -> STR_27(19), STR_5(15), STR_1(9), 
  5152 ;;  bottom          2    6[COMMON] PTR const unsigned char 
  5153 ;;		 -> STR_198(17), STR_196(13), STR_194(13), STR_192(13), 
  5154 ;;		 -> STR_190(13), STR_188(14), STR_186(14), STR_184(14), 
  5155 ;;		 -> STR_182(14), STR_180(8), STR_178(8), STR_176(9), 
  5156 ;;		 -> STR_174(9), STR_172(9), STR_170(14), STR_168(14), 
  5157 ;;		 -> STR_166(14), STR_164(14), STR_162(11), STR_160(13), 
  5158 ;;		 -> STR_156(10), STR_152(2), STR_148(2), STR_140(16), 
  5159 ;;		 -> STR_138(7), STR_136(10), STR_126(5), STR_124(9), 
  5160 ;;		 -> STR_112(4), STR_90(3), STR_88(1), STR_66(3), 
  5161 ;;		 -> STR_64(1), STR_52(5), STR_50(1), STR_44(6), 
  5162 ;;		 -> STR_38(18), STR_34(6), STR_32(9), STR_30(13), 
  5163 ;;		 -> STR_28(1), STR_6(1), STR_2(17), 
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;		None
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  1    wreg      void 
  5168 ;; Registers used:
  5169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/4
  5172 ;;		On exit  : 1F/4
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5178 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5179 ;;Total ram usage:        4 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:    3
  5182 ;; This function calls:
  5183 ;;		_clear_lcd
  5184 ;;		_i2c_Write_string
  5185 ;;		_i2c_first_line
  5186 ;;		_i2c_second_line
  5187 ;; This function is called by:
  5188 ;;		_main
  5189 ;;		_testjig_done
  5190 ;;		_print_error
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           
  5195                           ;psect for function _print_screen
  5196  02D6                     _print_screen:	
  5197                           
  5198                           ;Multi_RX_testjig_v2.c: 1590: clear_lcd();
  5199                           
  5200                           ;incstack = 0
  5201                           ; Regs used in _print_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5202  02D6  2356  3180         	fcall	_clear_lcd
  5203                           
  5204                           ;Multi_RX_testjig_v2.c: 1591: i2c_first_line();
  5205  02D8  2345  3180         	fcall	_i2c_first_line
  5206                           
  5207                           ;Multi_RX_testjig_v2.c: 1592: i2c_Write_string(top);
  5208  02DA  0875               	movf	print_screen@top+1,w
  5209  02DB  00F2               	movwf	i2c_Write_string@data+1
  5210  02DC  0874               	movf	print_screen@top,w
  5211  02DD  00F1               	movwf	i2c_Write_string@data
  5212  02DE  2383  3180         	fcall	_i2c_Write_string
  5213                           
  5214                           ;Multi_RX_testjig_v2.c: 1593: i2c_second_line();
  5215  02E0  22E7  3180         	fcall	_i2c_second_line
  5216                           
  5217                           ;Multi_RX_testjig_v2.c: 1594: i2c_Write_string(bottom);
  5218  02E2  0877               	movf	print_screen@bottom+1,w
  5219  02E3  00F2               	movwf	i2c_Write_string@data+1
  5220  02E4  0876               	movf	print_screen@bottom,w
  5221  02E5  00F1               	movwf	i2c_Write_string@data
  5222  02E6  2B83               	ljmp	l2747
  5223  02E7                     __end_of_print_screen:	
  5224  02E7                     __ptext4:	
  5225 ;; *************** function _i2c_second_line *****************
  5226 ;; Defined at:
  5227 ;;		line 1213 in file "Multi_RX_testjig_v2.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;		None
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;		None
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  1    wreg      void 
  5234 ;; Registers used:
  5235 ;;		wreg, status,2, status,0, pclath, cstack
  5236 ;; Tracked objects:
  5237 ;;		On entry : 1F/4
  5238 ;;		On exit  : 1F/4
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5243 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5244 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5245 ;;Total ram usage:        1 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    2
  5248 ;; This function calls:
  5249 ;;		_i2c_Start
  5250 ;;		_i2c_Stop
  5251 ;;		_i2c_Write
  5252 ;; This function is called by:
  5253 ;;		_print_error
  5254 ;;		_print_screen
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           
  5259                           ;psect for function _i2c_second_line
  5260  02E7                     _i2c_second_line:	
  5261                           
  5262                           ;Multi_RX_testjig_v2.c: 1215: i2c_Start();
  5263                           
  5264                           ;incstack = 0
  5265                           ; Regs used in _i2c_second_line: [wreg+status,2+status,0+pclath+cstack]
  5266  02E7  23E2  3180         	fcall	_i2c_Start
  5267                           
  5268                           ;Multi_RX_testjig_v2.c: 1216: i2c_Write(0x7C);
  5269  02E9  307C               	movlw	124
  5270  02EA  23D6  3180         	fcall	_i2c_Write
  5271                           
  5272                           ;Multi_RX_testjig_v2.c: 1217: i2c_Write(0x00);
  5273  02EC  3000               	movlw	0
  5274  02ED  23D6  3180         	fcall	_i2c_Write
  5275                           
  5276                           ;Multi_RX_testjig_v2.c: 1218: i2c_Write(0xC0);
  5277  02EF  30C0               	movlw	192
  5278  02F0  23D6  3180         	fcall	_i2c_Write
  5279                           
  5280                           ;Multi_RX_testjig_v2.c: 1219: _delay((unsigned long)((27)*(16000000/4000000.0)));
  5281  02F2  3023               	movlw	35
  5282  02F3  00F1               	movwf	??_i2c_second_line
  5283  02F4                     u5247:	
  5284  02F4  0BF1               	decfsz	??_i2c_second_line,f
  5285  02F5  2AF4               	goto	u5247
  5286  02F6  3200               	nop2	;nop
  5287                           
  5288                           ;Multi_RX_testjig_v2.c: 1220: i2c_Stop();
  5289  02F7  2BE7               	ljmp	l2745
  5290  02F8                     __end_of_i2c_second_line:	
  5291  02F8                     __ptext2:	
  5292 ;; *************** function _print_error *****************
  5293 ;; Defined at:
  5294 ;;		line 1565 in file "Multi_RX_testjig_v2.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  top             2    8[COMMON] PTR const unsigned char 
  5297 ;;		 -> STR_157(12), STR_153(12), STR_149(12), STR_145(12), 
  5298 ;;		 -> STR_143(8), STR_141(8), STR_133(13), STR_131(13), 
  5299 ;;		 -> STR_129(12), STR_127(12), STR_121(12), STR_119(12), 
  5300 ;;		 -> STR_117(12), STR_115(12), STR_113(12), STR_109(12), 
  5301 ;;		 -> STR_107(10), STR_105(12), STR_103(9), STR_101(12), 
  5302 ;;		 -> STR_99(12), STR_97(9), STR_95(9), STR_93(12), 
  5303 ;;		 -> STR_91(10), STR_85(12), STR_83(10), STR_81(12), 
  5304 ;;		 -> STR_79(9), STR_77(12), STR_75(12), STR_73(9), 
  5305 ;;		 -> STR_71(9), STR_69(12), STR_67(10), STR_61(19), 
  5306 ;;		 -> STR_59(12), STR_57(16), STR_55(12), STR_53(19), 
  5307 ;;		 -> STR_47(12), STR_45(12), STR_41(12), STR_39(13), 
  5308 ;;		 -> STR_35(12), STR_25(14), STR_23(11), STR_21(15), 
  5309 ;;		 -> STR_19(15), STR_17(14), STR_15(14), STR_13(14), 
  5310 ;;		 -> STR_11(11), STR_9(14), STR_7(14), STR_3(9), 
  5311 ;;  bottom          2   10[COMMON] PTR const unsigned char 
  5312 ;;		 -> STR_158(4), STR_154(4), STR_150(4), STR_146(4), 
  5313 ;;		 -> STR_144(15), STR_142(17), STR_134(13), STR_132(14), 
  5314 ;;		 -> STR_130(4), STR_128(4), STR_122(13), STR_120(16), 
  5315 ;;		 -> STR_118(14), STR_116(4), STR_114(4), STR_110(4), 
  5316 ;;		 -> STR_108(9), STR_106(3), STR_104(7), STR_102(4), 
  5317 ;;		 -> STR_100(4), STR_98(15), STR_96(16), STR_94(3), 
  5318 ;;		 -> STR_92(9), STR_86(3), STR_84(9), STR_82(3), 
  5319 ;;		 -> STR_80(7), STR_78(4), STR_76(4), STR_74(15), 
  5320 ;;		 -> STR_72(16), STR_70(3), STR_68(9), STR_62(9), 
  5321 ;;		 -> STR_60(3), STR_58(7), STR_56(3), STR_54(9), 
  5322 ;;		 -> STR_48(18), STR_46(14), STR_42(3), STR_40(12), 
  5323 ;;		 -> STR_36(3), STR_26(12), STR_24(11), STR_22(13), 
  5324 ;;		 -> STR_20(13), STR_18(13), STR_16(13), STR_14(12), 
  5325 ;;		 -> STR_12(11), STR_10(13), STR_8(13), STR_4(14), 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;		None
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  1    wreg      void 
  5330 ;; Registers used:
  5331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/5
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5339 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5340 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5341 ;;Total ram usage:        7 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    4
  5344 ;; This function calls:
  5345 ;;		_buzz_one
  5346 ;;		_clear_lcd
  5347 ;;		_debug_fast_tx
  5348 ;;		_i2c_Write_string
  5349 ;;		_i2c_first_line
  5350 ;;		_i2c_second_line
  5351 ;;		_power_supply_set
  5352 ;;		_print_screen
  5353 ;; This function is called by:
  5354 ;;		_main
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358                           
  5359                           ;psect for function _print_error
  5360  02F8                     _print_error:	
  5361                           
  5362                           ;Multi_RX_testjig_v2.c: 1567: power_supply_set(3);
  5363                           
  5364                           ;incstack = 0
  5365                           ; Regs used in _print_error: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5366  02F8  3003               	movlw	3
  5367  02F9  23F4  3180         	fcall	_power_supply_set
  5368                           
  5369                           ;Multi_RX_testjig_v2.c: 1568: LATA7 = 0;
  5370  02FB  0022               	movlb	2	; select bank2
  5371  02FC  138C               	bcf	12,7	;volatile
  5372                           
  5373                           ;Multi_RX_testjig_v2.c: 1569: LATB5 = 0;
  5374  02FD  128D               	bcf	13,5	;volatile
  5375                           
  5376                           ;Multi_RX_testjig_v2.c: 1570: LATA6 = 0;
  5377  02FE  130C               	bcf	12,6	;volatile
  5378                           
  5379                           ;Multi_RX_testjig_v2.c: 1571: RE0 = 0;
  5380  02FF  0020               	movlb	0	; select bank0
  5381  0300  1010               	bcf	16,0	;volatile
  5382                           
  5383                           ;Multi_RX_testjig_v2.c: 1572: debug_fast_tx(12345);
  5384  0301  3039               	movlw	57
  5385  0302  00F0               	movwf	debug_fast_tx@data
  5386  0303  3030               	movlw	48
  5387  0304  00F1               	movwf	debug_fast_tx@data+1
  5388  0305  22A9  3180         	fcall	_debug_fast_tx
  5389                           
  5390                           ;Multi_RX_testjig_v2.c: 1573: buzz_one(1000);
  5391  0307  30E8               	movlw	232
  5392  0308  00F0               	movwf	buzz_one@time
  5393  0309  3003               	movlw	3
  5394  030A  00F1               	movwf	buzz_one@time+1
  5395  030B  23EC  3180         	fcall	_buzz_one
  5396  030D                     l3335:	
  5397                           
  5398                           ;Multi_RX_testjig_v2.c: 1575: {
  5399                           ;Multi_RX_testjig_v2.c: 1576: clear_lcd();
  5400  030D  2356  3180         	fcall	_clear_lcd
  5401                           
  5402                           ;Multi_RX_testjig_v2.c: 1577: i2c_first_line();
  5403  030F  2345  3180         	fcall	_i2c_first_line
  5404                           
  5405                           ;Multi_RX_testjig_v2.c: 1578: i2c_Write_string(top);
  5406  0311  0879               	movf	print_error@top+1,w
  5407  0312  00F2               	movwf	i2c_Write_string@data+1
  5408  0313  0878               	movf	print_error@top,w
  5409  0314  00F1               	movwf	i2c_Write_string@data
  5410  0315  2383  3180         	fcall	_i2c_Write_string
  5411                           
  5412                           ;Multi_RX_testjig_v2.c: 1579: i2c_second_line();
  5413  0317  22E7  3180         	fcall	_i2c_second_line
  5414                           
  5415                           ;Multi_RX_testjig_v2.c: 1580: i2c_Write_string(bottom);
  5416  0319  087B               	movf	print_error@bottom+1,w
  5417  031A  00F2               	movwf	i2c_Write_string@data+1
  5418  031B  087A               	movf	print_error@bottom,w
  5419  031C  00F1               	movwf	i2c_Write_string@data
  5420  031D  2383  3180         	fcall	_i2c_Write_string
  5421                           
  5422                           ;Multi_RX_testjig_v2.c: 1581: _delay((unsigned long)((2000)*(16000000/4000.0)));
  5423  031F  3029               	movlw	41
  5424  0320  0020               	movlb	0	; select bank0
  5425  0321  00A2               	movwf	??_print_error+2
  5426  0322  3096               	movlw	150
  5427  0323  00A1               	movwf	??_print_error+1
  5428  0324  30A6               	movlw	166
  5429  0325  00A0               	movwf	??_print_error
  5430  0326                     u5227:	
  5431  0326  0BA0               	decfsz	??_print_error,f
  5432  0327  2B26               	goto	u5227
  5433  0328  0BA1               	decfsz	??_print_error+1,f
  5434  0329  2B26               	goto	u5227
  5435  032A  0BA2               	decfsz	??_print_error+2,f
  5436  032B  2B26               	goto	u5227
  5437                           
  5438                           ;Multi_RX_testjig_v2.c: 1582: print_screen("Press START", " to restart test");
  5439  032C  30FC               	movlw	low ((STR_190+1)| (0+32768))
  5440  032D  00F4               	movwf	print_screen@top
  5441  032E  3091               	movlw	high ((STR_190+1)| (0+32768))
  5442  032F  00F5               	movwf	print_screen@top+1
  5443  0330  308E               	movlw	low (STR_198| (0+32768))
  5444  0331  00F6               	movwf	print_screen@bottom
  5445  0332  3090               	movlw	high (STR_198| (0+32768))
  5446  0333  00F7               	movwf	print_screen@bottom+1
  5447  0334  22D6  3180         	fcall	_print_screen
  5448                           
  5449                           ;Multi_RX_testjig_v2.c: 1584: _delay((unsigned long)((1200)*(16000000/4000.0)));
  5450  0336  3019               	movlw	25
  5451  0337  0020               	movlb	0	; select bank0
  5452  0338  00A2               	movwf	??_print_error+2
  5453  0339  305A               	movlw	90
  5454  033A  00A1               	movwf	??_print_error+1
  5455  033B  30C8               	movlw	200
  5456  033C  00A0               	movwf	??_print_error
  5457  033D                     u5237:	
  5458  033D  0BA0               	decfsz	??_print_error,f
  5459  033E  2B3D               	goto	u5237
  5460  033F  0BA1               	decfsz	??_print_error+1,f
  5461  0340  2B3D               	goto	u5237
  5462  0341  0BA2               	decfsz	??_print_error+2,f
  5463  0342  2B3D               	goto	u5237
  5464  0343  3200               	nop2
  5465  0344  2B0D               	goto	l3335
  5466  0345                     __end_of_print_error:	
  5467  0345                     __ptext5:	
  5468 ;; *************** function _i2c_first_line *****************
  5469 ;; Defined at:
  5470 ;;		line 1203 in file "Multi_RX_testjig_v2.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;		None
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;		None
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      void 
  5477 ;; Registers used:
  5478 ;;		wreg, status,2, status,0, pclath, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 1F/4
  5481 ;;		On exit  : 1F/4
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5487 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5488 ;;Total ram usage:        1 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    2
  5491 ;; This function calls:
  5492 ;;		_i2c_Start
  5493 ;;		_i2c_Stop
  5494 ;;		_i2c_Write
  5495 ;; This function is called by:
  5496 ;;		_print_error
  5497 ;;		_print_screen
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           
  5502                           ;psect for function _i2c_first_line
  5503  0345                     _i2c_first_line:	
  5504                           
  5505                           ;Multi_RX_testjig_v2.c: 1205: i2c_Start();
  5506                           
  5507                           ;incstack = 0
  5508                           ; Regs used in _i2c_first_line: [wreg+status,2+status,0+pclath+cstack]
  5509  0345  23E2  3180         	fcall	_i2c_Start
  5510                           
  5511                           ;Multi_RX_testjig_v2.c: 1206: i2c_Write(0x7C);
  5512  0347  307C               	movlw	124
  5513  0348  23D6  3180         	fcall	_i2c_Write
  5514                           
  5515                           ;Multi_RX_testjig_v2.c: 1207: i2c_Write(0x00);
  5516  034A  3000               	movlw	0
  5517  034B  23D6  3180         	fcall	_i2c_Write
  5518                           
  5519                           ;Multi_RX_testjig_v2.c: 1208: i2c_Write(0x80);
  5520  034D  3080               	movlw	128
  5521  034E  23D6  3180         	fcall	_i2c_Write
  5522                           
  5523                           ;Multi_RX_testjig_v2.c: 1209: _delay((unsigned long)((27)*(16000000/4000000.0)));
  5524  0350  3023               	movlw	35
  5525  0351  00F1               	movwf	??_i2c_first_line
  5526  0352                     u5257:	
  5527  0352  0BF1               	decfsz	??_i2c_first_line,f
  5528  0353  2B52               	goto	u5257
  5529  0354  3200               	nop2	;nop
  5530                           
  5531                           ;Multi_RX_testjig_v2.c: 1210: i2c_Stop();
  5532  0355  2BE7               	ljmp	l2745
  5533  0356                     __end_of_i2c_first_line:	
  5534  0356                     __ptext7:	
  5535 ;; *************** function _clear_lcd *****************
  5536 ;; Defined at:
  5537 ;;		line 1193 in file "Multi_RX_testjig_v2.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;		None
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;		None
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		wreg, status,2, status,0, pclath, cstack
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/2
  5548 ;;		On exit  : 1F/4
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5553 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5555 ;;Total ram usage:        2 bytes
  5556 ;; Hardware stack levels used:    1
  5557 ;; Hardware stack levels required when called:    2
  5558 ;; This function calls:
  5559 ;;		_i2c_Start
  5560 ;;		_i2c_Stop
  5561 ;;		_i2c_Write
  5562 ;; This function is called by:
  5563 ;;		_print_error
  5564 ;;		_print_screen
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           
  5569                           ;psect for function _clear_lcd
  5570  0356                     _clear_lcd:	
  5571                           
  5572                           ;Multi_RX_testjig_v2.c: 1195: i2c_Start();
  5573                           
  5574                           ;incstack = 0
  5575                           ; Regs used in _clear_lcd: [wreg+status,2+status,0+pclath+cstack]
  5576  0356  23E2  3180         	fcall	_i2c_Start
  5577                           
  5578                           ;Multi_RX_testjig_v2.c: 1196: i2c_Write(0x7C);
  5579  0358  307C               	movlw	124
  5580  0359  23D6  3180         	fcall	_i2c_Write
  5581                           
  5582                           ;Multi_RX_testjig_v2.c: 1197: i2c_Write(0x00);
  5583  035B  3000               	movlw	0
  5584  035C  23D6  3180         	fcall	_i2c_Write
  5585                           
  5586                           ;Multi_RX_testjig_v2.c: 1198: i2c_Write(0x01);
  5587  035E  3001               	movlw	1
  5588  035F  23D6  3180         	fcall	_i2c_Write
  5589                           
  5590                           ;Multi_RX_testjig_v2.c: 1199: _delay((unsigned long)((2)*(16000000/4000.0)));
  5591  0361  300B               	movlw	11
  5592  0362  00F2               	movwf	??_clear_lcd+1
  5593  0363  3062               	movlw	98
  5594  0364  00F1               	movwf	??_clear_lcd
  5595  0365                     u5267:	
  5596  0365  0BF1               	decfsz	??_clear_lcd,f
  5597  0366  2B65               	goto	u5267
  5598  0367  0BF2               	decfsz	??_clear_lcd+1,f
  5599  0368  2B65               	goto	u5267
  5600  0369  0000               	nop
  5601                           
  5602                           ;Multi_RX_testjig_v2.c: 1200: i2c_Stop();
  5603  036A  2BE7               	ljmp	l2745
  5604  036B                     __end_of_clear_lcd:	
  5605  036B                     __ptext29:	
  5606 ;; *************** function _digitalpot *****************
  5607 ;; Defined at:
  5608 ;;		line 2071 in file "Multi_RX_testjig_v2.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  value           1    wreg     unsigned char 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  value           1    3[COMMON] unsigned char 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      void 
  5615 ;; Registers used:
  5616 ;;		wreg, status,2, status,0, pclath, cstack
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/4
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5624 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5625 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5626 ;;Total ram usage:        3 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    2
  5629 ;; This function calls:
  5630 ;;		_i2c_Start
  5631 ;;		_i2c_Stop
  5632 ;;		_i2c_Write
  5633 ;; This function is called by:
  5634 ;;		_Vout_set
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           
  5639                           ;psect for function _digitalpot
  5640  036B                     _digitalpot:	
  5641                           
  5642                           ;incstack = 0
  5643                           ; Regs used in _digitalpot: [wreg+status,2+status,0+pclath+cstack]
  5644                           ;digitalpot@value stored from wreg
  5645  036B  00F3               	movwf	digitalpot@value
  5646                           
  5647                           ;Multi_RX_testjig_v2.c: 2073: i2c_Start();
  5648  036C  23E2  3180         	fcall	_i2c_Start
  5649                           
  5650                           ;Multi_RX_testjig_v2.c: 2074: i2c_Write(0x5C);
  5651  036E  305C               	movlw	92
  5652  036F  23D6  3180         	fcall	_i2c_Write
  5653                           
  5654                           ;Multi_RX_testjig_v2.c: 2075: i2c_Write(0b00000000);
  5655  0371  3000               	movlw	0
  5656  0372  23D6  3180         	fcall	_i2c_Write
  5657                           
  5658                           ;Multi_RX_testjig_v2.c: 2076: i2c_Write(value);
  5659  0374  0873               	movf	digitalpot@value,w
  5660  0375  23D6  3180         	fcall	_i2c_Write
  5661                           
  5662                           ;Multi_RX_testjig_v2.c: 2077: i2c_Stop();
  5663  0377  23E7  3180         	fcall	_i2c_Stop
  5664                           
  5665                           ;Multi_RX_testjig_v2.c: 2078: _delay((unsigned long)((20)*(16000000/4000.0)));
  5666  0379  3068               	movlw	104
  5667  037A  00F2               	movwf	??_digitalpot+1
  5668  037B  30E4               	movlw	228
  5669  037C  00F1               	movwf	??_digitalpot
  5670  037D                     u5297:	
  5671  037D  0BF1               	decfsz	??_digitalpot,f
  5672  037E  2B7D               	goto	u5297
  5673  037F  0BF2               	decfsz	??_digitalpot+1,f
  5674  0380  2B7D               	goto	u5297
  5675  0381  0000               	nop
  5676  0382  0008               	return
  5677  0383                     __end_of_digitalpot:	
  5678  0383                     __ptext6:	
  5679 ;; *************** function _i2c_Write_string *****************
  5680 ;; Defined at:
  5681 ;;		line 1125 in file "Multi_RX_testjig_v2.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  data            2    1[COMMON] PTR const unsigned char 
  5684 ;;		 -> STR_198(17), STR_197(12), STR_196(13), STR_195(17), 
  5685 ;;		 -> STR_194(13), STR_193(16), STR_192(13), STR_191(12), 
  5686 ;;		 -> STR_190(13), STR_189(15), STR_188(14), STR_187(17), 
  5687 ;;		 -> STR_186(14), STR_185(16), STR_184(14), STR_183(12), 
  5688 ;;		 -> STR_182(14), STR_181(15), STR_180(8), STR_179(17), 
  5689 ;;		 -> STR_178(8), STR_177(9), STR_176(9), STR_175(16), 
  5690 ;;		 -> STR_174(9), STR_173(5), STR_172(9), STR_171(8), 
  5691 ;;		 -> STR_170(14), STR_169(14), STR_168(14), STR_167(16), 
  5692 ;;		 -> STR_166(14), STR_165(9), STR_164(14), STR_163(12), 
  5693 ;;		 -> STR_162(11), STR_161(10), STR_160(13), STR_159(16), 
  5694 ;;		 -> STR_158(4), STR_157(12), STR_156(10), STR_155(10), 
  5695 ;;		 -> STR_154(4), STR_153(12), STR_152(2), STR_151(14), 
  5696 ;;		 -> STR_150(4), STR_149(12), STR_148(2), STR_147(13), 
  5697 ;;		 -> STR_146(4), STR_145(12), STR_144(15), STR_143(8), 
  5698 ;;		 -> STR_142(17), STR_141(8), STR_140(16), STR_139(8), 
  5699 ;;		 -> STR_138(7), STR_137(8), STR_136(10), STR_135(8), 
  5700 ;;		 -> STR_134(13), STR_133(13), STR_132(14), STR_131(13), 
  5701 ;;		 -> STR_130(4), STR_129(12), STR_128(4), STR_127(12), 
  5702 ;;		 -> STR_126(5), STR_125(8), STR_124(9), STR_123(8), 
  5703 ;;		 -> STR_122(13), STR_121(12), STR_120(16), STR_119(12), 
  5704 ;;		 -> STR_118(14), STR_117(12), STR_116(4), STR_115(12), 
  5705 ;;		 -> STR_114(4), STR_113(12), STR_112(4), STR_111(8), 
  5706 ;;		 -> STR_110(4), STR_109(12), STR_108(9), STR_107(10), 
  5707 ;;		 -> STR_106(3), STR_105(12), STR_104(7), STR_103(9), 
  5708 ;;		 -> STR_102(4), STR_101(12), STR_100(4), STR_99(12), 
  5709 ;;		 -> STR_98(15), STR_97(9), STR_96(16), STR_95(9), 
  5710 ;;		 -> STR_94(3), STR_93(12), STR_92(9), STR_91(10), 
  5711 ;;		 -> STR_90(3), STR_89(9), STR_88(1), STR_87(9), 
  5712 ;;		 -> STR_86(3), STR_85(12), STR_84(9), STR_83(10), 
  5713 ;;		 -> STR_82(3), STR_81(12), STR_80(7), STR_79(9), 
  5714 ;;		 -> STR_78(4), STR_77(12), STR_76(4), STR_75(12), 
  5715 ;;		 -> STR_74(15), STR_73(9), STR_72(16), STR_71(9), 
  5716 ;;		 -> STR_70(3), STR_69(12), STR_68(9), STR_67(10), 
  5717 ;;		 -> STR_66(3), STR_65(9), STR_64(1), STR_63(9), 
  5718 ;;		 -> STR_62(9), STR_61(19), STR_60(3), STR_59(12), 
  5719 ;;		 -> STR_58(7), STR_57(16), STR_56(3), STR_55(12), 
  5720 ;;		 -> STR_54(9), STR_53(19), STR_52(5), STR_51(11), 
  5721 ;;		 -> STR_50(1), STR_49(11), STR_48(18), STR_47(12), 
  5722 ;;		 -> STR_46(14), STR_45(12), STR_44(6), STR_43(13), 
  5723 ;;		 -> STR_42(3), STR_41(12), STR_40(12), STR_39(13), 
  5724 ;;		 -> STR_38(18), STR_37(9), STR_36(3), STR_35(12), 
  5725 ;;		 -> STR_34(6), STR_33(13), STR_32(9), STR_31(19), 
  5726 ;;		 -> STR_30(13), STR_29(12), STR_28(1), STR_27(19), 
  5727 ;;		 -> STR_26(12), STR_25(14), STR_24(11), STR_23(11), 
  5728 ;;		 -> STR_22(13), STR_21(15), STR_20(13), STR_19(15), 
  5729 ;;		 -> STR_18(13), STR_17(14), STR_16(13), STR_15(14), 
  5730 ;;		 -> STR_14(12), STR_13(14), STR_12(11), STR_11(11), 
  5731 ;;		 -> STR_10(13), STR_9(14), STR_8(13), STR_7(14), 
  5732 ;;		 -> STR_6(1), STR_5(15), STR_4(14), STR_3(9), 
  5733 ;;		 -> STR_2(17), STR_1(9), 
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;		None
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  1    wreg      void 
  5738 ;; Registers used:
  5739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5740 ;; Tracked objects:
  5741 ;;		On entry : 1F/4
  5742 ;;		On exit  : 1F/4
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5747 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5748 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5749 ;;Total ram usage:        3 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    2
  5752 ;; This function calls:
  5753 ;;		_i2c_Start
  5754 ;;		_i2c_Stop
  5755 ;;		_i2c_Write
  5756 ;; This function is called by:
  5757 ;;		_print_error
  5758 ;;		_print_screen
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           
  5763                           ;psect for function _i2c_Write_string
  5764  0383                     _i2c_Write_string:	
  5765  0383                     l2747:	
  5766                           ;incstack = 0
  5767                           ; Regs used in _i2c_Write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5768                           
  5769                           
  5770                           ;Multi_RX_testjig_v2.c: 1127: i2c_Start();
  5771  0383  23E2  3180         	fcall	_i2c_Start
  5772                           
  5773                           ;Multi_RX_testjig_v2.c: 1128: i2c_Write(0x7C);
  5774  0385  307C               	movlw	124
  5775  0386  23D6  3180         	fcall	_i2c_Write
  5776                           
  5777                           ;Multi_RX_testjig_v2.c: 1129: i2c_Write(0x40);
  5778  0388  3040               	movlw	64
  5779  0389  23D6  3180         	fcall	_i2c_Write
  5780  038B                     l2757:	
  5781                           ;Multi_RX_testjig_v2.c: 1131: while(*data != (0))
  5782                           
  5783  038B  0871               	movf	i2c_Write_string@data,w
  5784  038C  0084               	movwf	4
  5785  038D  0872               	movf	i2c_Write_string@data+1,w
  5786  038E  0085               	movwf	5
  5787  038F  0012               	moviw fsr0++
  5788  0390  1903               	btfsc	3,2
  5789  0391  2B9D               	goto	l2759
  5790                           
  5791                           ;Multi_RX_testjig_v2.c: 1132: {
  5792                           ;Multi_RX_testjig_v2.c: 1133: i2c_Write(*data);
  5793  0392  0871               	movf	i2c_Write_string@data,w
  5794  0393  0084               	movwf	4
  5795  0394  0872               	movf	i2c_Write_string@data+1,w
  5796  0395  0085               	movwf	5
  5797  0396  0800               	movf	0,w	;code access
  5798  0397  23D6  3180         	fcall	_i2c_Write
  5799                           
  5800                           ;Multi_RX_testjig_v2.c: 1134: data++;
  5801  0399  0AF1               	incf	i2c_Write_string@data,f
  5802  039A  1903               	skipnz
  5803  039B  0AF2               	incf	i2c_Write_string@data+1,f
  5804  039C  2B8B               	goto	l2757
  5805  039D                     l2759:	
  5806                           
  5807                           ;Multi_RX_testjig_v2.c: 1135: }
  5808                           ;Multi_RX_testjig_v2.c: 1136: i2c_Stop();
  5809  039D  2BE7               	ljmp	l2745
  5810  039E                     __end_of_i2c_Write_string:	
  5811  039E                     __ptext17:	
  5812 ;; *************** function _init_i2c_lcd_5v *****************
  5813 ;; Defined at:
  5814 ;;		line 1149 in file "Multi_RX_testjig_v2.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;  contrast        1    wreg     unsigned char 
  5817 ;;  single1_doub    1    1[COMMON] unsigned char 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;  contrast        1    4[COMMON] unsigned char 
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  1    wreg      void 
  5822 ;; Registers used:
  5823 ;;		wreg, status,2, status,0, pclath, cstack
  5824 ;; Tracked objects:
  5825 ;;		On entry : 1F/4
  5826 ;;		On exit  : 1F/4
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5829 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5832 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5833 ;;Total ram usage:        4 bytes
  5834 ;; Hardware stack levels used:    1
  5835 ;; Hardware stack levels required when called:    2
  5836 ;; This function calls:
  5837 ;;		_i2c_Start
  5838 ;;		_i2c_Stop
  5839 ;;		_i2c_Write
  5840 ;; This function is called by:
  5841 ;;		_main
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           
  5846                           ;psect for function _init_i2c_lcd_5v
  5847  039E                     _init_i2c_lcd_5v:	
  5848                           
  5849                           ;incstack = 0
  5850                           ; Regs used in _init_i2c_lcd_5v: [wreg+status,2+status,0+pclath+cstack]
  5851                           ;init_i2c_lcd_5v@contrast stored from wreg
  5852  039E  00F4               	movwf	init_i2c_lcd_5v@contrast
  5853                           
  5854                           ;Multi_RX_testjig_v2.c: 1151: i2c_Start();
  5855  039F  23E2  3180         	fcall	_i2c_Start
  5856                           
  5857                           ;Multi_RX_testjig_v2.c: 1152: i2c_Write(0x7C);
  5858  03A1  307C               	movlw	124
  5859  03A2  23D6  3180         	fcall	_i2c_Write
  5860                           
  5861                           ;Multi_RX_testjig_v2.c: 1153: i2c_Write(0x00);
  5862  03A4  3000               	movlw	0
  5863  03A5  23D6  3180         	fcall	_i2c_Write
  5864                           
  5865                           ;Multi_RX_testjig_v2.c: 1154: i2c_Write(0x39);
  5866  03A7  3039               	movlw	57
  5867  03A8  23D6  3180         	fcall	_i2c_Write
  5868                           
  5869                           ;Multi_RX_testjig_v2.c: 1155: i2c_Write(0x1C);
  5870  03AA  301C               	movlw	28
  5871  03AB  23D6  3180         	fcall	_i2c_Write
  5872                           
  5873                           ;Multi_RX_testjig_v2.c: 1156: i2c_Write(0x70 | contrast);
  5874  03AD  0874               	movf	init_i2c_lcd_5v@contrast,w
  5875  03AE  3870               	iorlw	112
  5876  03AF  23D6  3180         	fcall	_i2c_Write
  5877                           
  5878                           ;Multi_RX_testjig_v2.c: 1157: i2c_Write(0x50);
  5879  03B1  3050               	movlw	80
  5880  03B2  23D6  3180         	fcall	_i2c_Write
  5881                           
  5882                           ;Multi_RX_testjig_v2.c: 1158: i2c_Write(0x6C);
  5883  03B4  306C               	movlw	108
  5884  03B5  23D6  3180         	fcall	_i2c_Write
  5885                           
  5886                           ;Multi_RX_testjig_v2.c: 1159: if(single1_double2 == 1)
  5887  03B7  0B71               	decfsz	init_i2c_lcd_5v@single1_double2,w
  5888  03B8  2BBC               	goto	l3221
  5889                           
  5890                           ;Multi_RX_testjig_v2.c: 1160: i2c_Write(0x38);
  5891  03B9  3038               	movlw	56
  5892  03BA  23D6  3180         	fcall	_i2c_Write
  5893  03BC                     l3221:	
  5894                           
  5895                           ;Multi_RX_testjig_v2.c: 1161: if(single1_double2 == 2)
  5896  03BC  3002               	movlw	2
  5897  03BD  0671               	xorwf	init_i2c_lcd_5v@single1_double2,w
  5898  03BE  1D03               	btfss	3,2
  5899  03BF  2BC3               	goto	l543
  5900                           
  5901                           ;Multi_RX_testjig_v2.c: 1162: i2c_Write(0x34);
  5902  03C0  3034               	movlw	52
  5903  03C1  23D6  3180         	fcall	_i2c_Write
  5904  03C3                     l543:	
  5905                           
  5906                           ;Multi_RX_testjig_v2.c: 1163: i2c_Write(0x0C);
  5907  03C3  300C               	movlw	12
  5908  03C4  23D6  3180         	fcall	_i2c_Write
  5909                           
  5910                           ;Multi_RX_testjig_v2.c: 1164: i2c_Write(0x06);
  5911  03C6  3006               	movlw	6
  5912  03C7  23D6  3180         	fcall	_i2c_Write
  5913                           
  5914                           ;Multi_RX_testjig_v2.c: 1165: i2c_Write(0x01);
  5915  03C9  3001               	movlw	1
  5916  03CA  23D6  3180         	fcall	_i2c_Write
  5917                           
  5918                           ;Multi_RX_testjig_v2.c: 1166: _delay((unsigned long)((2)*(16000000/4000.0)));
  5919  03CC  300B               	movlw	11
  5920  03CD  00F3               	movwf	??_init_i2c_lcd_5v+1
  5921  03CE  3062               	movlw	98
  5922  03CF  00F2               	movwf	??_init_i2c_lcd_5v
  5923  03D0                     u5277:	
  5924  03D0  0BF2               	decfsz	??_init_i2c_lcd_5v,f
  5925  03D1  2BD0               	goto	u5277
  5926  03D2  0BF3               	decfsz	??_init_i2c_lcd_5v+1,f
  5927  03D3  2BD0               	goto	u5277
  5928  03D4  0000               	nop
  5929                           
  5930                           ;Multi_RX_testjig_v2.c: 1167: i2c_Stop();
  5931  03D5  2BE7               	ljmp	l2745
  5932  03D6                     __end_of_init_i2c_lcd_5v:	
  5933  03D6                     __ptext30:	
  5934 ;; *************** function _i2c_Write *****************
  5935 ;; Defined at:
  5936 ;;		line 1111 in file "Multi_RX_testjig_v2.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;  data            1    wreg     unsigned char 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  data            1    0[COMMON] unsigned char 
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  1    wreg      void 
  5943 ;; Registers used:
  5944 ;;		wreg, status,2
  5945 ;; Tracked objects:
  5946 ;;		On entry : 1F/4
  5947 ;;		On exit  : 1F/4
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5953 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5954 ;;Total ram usage:        1 bytes
  5955 ;; Hardware stack levels used:    1
  5956 ;; Hardware stack levels required when called:    1
  5957 ;; This function calls:
  5958 ;;		Nothing
  5959 ;; This function is called by:
  5960 ;;		_i2c_Write_string
  5961 ;;		_i2c_write_char
  5962 ;;		_init_i2c_lcd_5v
  5963 ;;		_clear_lcd
  5964 ;;		_i2c_first_line
  5965 ;;		_i2c_second_line
  5966 ;;		_lcd_set_cursor
  5967 ;;		_digitalpot
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           
  5972                           ;psect for function _i2c_Write
  5973  03D6                     _i2c_Write:	
  5974                           
  5975                           ;incstack = 0
  5976                           ; Regs used in _i2c_Write: [wreg+status,2]
  5977                           ;i2c_Write@data stored from wreg
  5978  03D6  00F0               	movwf	i2c_Write@data
  5979                           
  5980                           ;Multi_RX_testjig_v2.c: 1113: SSP1BUF = data;
  5981  03D7  0870               	movf	i2c_Write@data,w
  5982  03D8  0091               	movwf	17	;volatile
  5983  03D9                     l518:	
  5984                           ;Multi_RX_testjig_v2.c: 1114: while(SSP1STATbits.BF == 1);
  5985                           
  5986  03D9  1814               	btfsc	20,0	;volatile
  5987  03DA  2BD9               	goto	l518
  5988  03DB                     l2741:	
  5989  03DB  0816               	movf	22,w	;volatile
  5990  03DC  391F               	andlw	31
  5991  03DD  1D03               	btfss	3,2
  5992  03DE  2BDB               	goto	l2741
  5993  03DF  1D14               	btfss	20,2	;volatile
  5994  03E0  0008               	return
  5995  03E1  2BDB               	goto	l2741
  5996  03E2                     __end_of_i2c_Write:	
  5997  03E2                     __ptext32:	
  5998 ;; *************** function _i2c_Start *****************
  5999 ;; Defined at:
  6000 ;;		line 1102 in file "Multi_RX_testjig_v2.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;		None
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  1    wreg      void 
  6007 ;; Registers used:
  6008 ;;		None
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/4
  6011 ;;		On exit  : 1F/4
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6018 ;;Total ram usage:        0 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; Hardware stack levels required when called:    1
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		_i2c_Write_string
  6025 ;;		_i2c_write_char
  6026 ;;		_init_i2c_lcd_5v
  6027 ;;		_clear_lcd
  6028 ;;		_i2c_first_line
  6029 ;;		_i2c_second_line
  6030 ;;		_lcd_set_cursor
  6031 ;;		_digitalpot
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           
  6036                           ;psect for function _i2c_Start
  6037  03E2                     _i2c_Start:	
  6038                           
  6039                           ;Multi_RX_testjig_v2.c: 1105: SSP1CON2bits.SEN = 1;
  6040                           
  6041                           ;incstack = 0
  6042                           ; Regs used in _i2c_Start: []
  6043  03E2  0024               	movlb	4	; select bank4
  6044  03E3  1416               	bsf	22,0	;volatile
  6045  03E4                     l512:	
  6046                           ;Multi_RX_testjig_v2.c: 1107: while(SSP1CON2bits.SEN == 1);
  6047                           
  6048  03E4  1C16               	btfss	22,0	;volatile
  6049  03E5  0008               	return
  6050  03E6  2BE4               	goto	l512
  6051  03E7                     __end_of_i2c_Start:	
  6052  03E7                     __ptext31:	
  6053 ;; *************** function _i2c_Stop *****************
  6054 ;; Defined at:
  6055 ;;		line 1118 in file "Multi_RX_testjig_v2.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;		None
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;		None
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  1    wreg      void 
  6062 ;; Registers used:
  6063 ;;		None
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/4
  6066 ;;		On exit  : 1F/4
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6073 ;;Total ram usage:        0 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; Hardware stack levels required when called:    1
  6076 ;; This function calls:
  6077 ;;		Nothing
  6078 ;; This function is called by:
  6079 ;;		_i2c_Write_string
  6080 ;;		_i2c_write_char
  6081 ;;		_init_i2c_lcd_5v
  6082 ;;		_clear_lcd
  6083 ;;		_i2c_first_line
  6084 ;;		_i2c_second_line
  6085 ;;		_lcd_set_cursor
  6086 ;;		_digitalpot
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           
  6091                           ;psect for function _i2c_Stop
  6092  03E7                     _i2c_Stop:	
  6093  03E7                     l2745:	
  6094                           ;incstack = 0
  6095                           ; Regs used in _i2c_Stop: []
  6096                           
  6097                           
  6098                           ;Multi_RX_testjig_v2.c: 1120: SSP1CON2bits.PEN = 1;
  6099  03E7  0024               	movlb	4	; select bank4
  6100  03E8  1516               	bsf	22,2	;volatile
  6101  03E9                     l527:	
  6102                           ;Multi_RX_testjig_v2.c: 1121: while(SSP1CON2bits.PEN == 1);
  6103                           
  6104  03E9  1D16               	btfss	22,2	;volatile
  6105  03EA  0008               	return
  6106  03EB  2BE9               	goto	l527
  6107  03EC                     __end_of_i2c_Stop:	
  6108  03EC                     __ptext10:	
  6109 ;; *************** function _buzz_one *****************
  6110 ;; Defined at:
  6111 ;;		line 1092 in file "Multi_RX_testjig_v2.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  time            2    0[COMMON] unsigned int 
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;		None
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1    wreg      void 
  6118 ;; Registers used:
  6119 ;;		wreg
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 1F/2
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6128 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6129 ;;Total ram usage:        2 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:    1
  6132 ;; This function calls:
  6133 ;;		Nothing
  6134 ;; This function is called by:
  6135 ;;		_main
  6136 ;;		_testjig_done
  6137 ;;		_print_error
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           
  6142                           ;psect for function _buzz_one
  6143  03EC                     _buzz_one:	
  6144                           
  6145                           ;Multi_RX_testjig_v2.c: 1094: buzz_timer = time;
  6146                           
  6147                           ;incstack = 0
  6148                           ; Regs used in _buzz_one: [wreg]
  6149  03EC  0871               	movf	buzz_one@time+1,w
  6150  03ED  0020               	movlb	0	; select bank0
  6151  03EE  00ED               	movwf	_buzz_timer+1	;volatile
  6152  03EF  0870               	movf	buzz_one@time,w
  6153  03F0  00EC               	movwf	_buzz_timer	;volatile
  6154                           
  6155                           ;Multi_RX_testjig_v2.c: 1095: LATC5 = 1;
  6156  03F1  0022               	movlb	2	; select bank2
  6157  03F2  168E               	bsf	14,5	;volatile
  6158  03F3  0008               	return
  6159  03F4                     __end_of_buzz_one:	
  6160  03F4                     __ptext8:	
  6161 ;; *************** function _power_supply_set *****************
  6162 ;; Defined at:
  6163 ;;		line 1967 in file "Multi_RX_testjig_v2.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  supply          1    wreg     unsigned char 
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;  supply          1    0[COMMON] unsigned char 
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1    wreg      void 
  6170 ;; Registers used:
  6171 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/4
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6178 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6180 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6181 ;;Total ram usage:        1 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    1
  6184 ;; This function calls:
  6185 ;;		Nothing
  6186 ;; This function is called by:
  6187 ;;		_main
  6188 ;;		_testjig_done
  6189 ;;		_print_error
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           
  6194                           ;psect for function _power_supply_set
  6195  03F4                     _power_supply_set:	
  6196                           
  6197                           ;incstack = 0
  6198                           ; Regs used in _power_supply_set: [wreg-fsr0h+status,2+status,0]
  6199                           ;power_supply_set@supply stored from wreg
  6200  03F4  00F0               	movwf	power_supply_set@supply
  6201                           
  6202                           ;Multi_RX_testjig_v2.c: 1969: switch(supply)
  6203  03F5  2C0A               	goto	l2909
  6204  03F6                     l690:	
  6205                           ;Multi_RX_testjig_v2.c: 1970: {
  6206                           ;Multi_RX_testjig_v2.c: 1971: case 0:
  6207                           
  6208                           
  6209                           ;Multi_RX_testjig_v2.c: 1972: LATD4 = 1;
  6210  03F6  0022               	movlb	2	; select bank2
  6211  03F7  160F               	bsf	15,4	;volatile
  6212                           
  6213                           ;Multi_RX_testjig_v2.c: 1973: LATD5 = 1;
  6214  03F8  168F               	bsf	15,5	;volatile
  6215                           
  6216                           ;Multi_RX_testjig_v2.c: 1974: LATD6 = 1;
  6217  03F9  170F               	bsf	15,6	;volatile
  6218                           
  6219                           ;Multi_RX_testjig_v2.c: 1975: break;
  6220  03FA  0008               	return
  6221  03FB                     l692:	
  6222                           ;Multi_RX_testjig_v2.c: 1976: case 1:
  6223                           
  6224                           
  6225                           ;Multi_RX_testjig_v2.c: 1977: LATD4 = 1;
  6226  03FB  0022               	movlb	2	; select bank2
  6227  03FC  160F               	bsf	15,4	;volatile
  6228                           
  6229                           ;Multi_RX_testjig_v2.c: 1978: LATD5 = 0;
  6230  03FD  128F               	bcf	15,5	;volatile
  6231                           
  6232                           ;Multi_RX_testjig_v2.c: 1979: LATD6 = 1;
  6233  03FE  170F               	bsf	15,6	;volatile
  6234                           
  6235                           ;Multi_RX_testjig_v2.c: 1980: break;
  6236  03FF  0008               	return
  6237  0400                     l693:	
  6238                           ;Multi_RX_testjig_v2.c: 1981: case 2:
  6239                           
  6240                           
  6241                           ;Multi_RX_testjig_v2.c: 1982: LATD4 = 0;
  6242  0400  0022               	movlb	2	; select bank2
  6243  0401  120F               	bcf	15,4	;volatile
  6244                           
  6245                           ;Multi_RX_testjig_v2.c: 1983: LATD5 = 0;
  6246  0402  128F               	bcf	15,5	;volatile
  6247                           
  6248                           ;Multi_RX_testjig_v2.c: 1984: LATD6 = 0;
  6249  0403  130F               	bcf	15,6	;volatile
  6250                           
  6251                           ;Multi_RX_testjig_v2.c: 1985: break;
  6252  0404  0008               	return
  6253  0405                     l694:	
  6254                           ;Multi_RX_testjig_v2.c: 1986: case 3:
  6255                           
  6256                           
  6257                           ;Multi_RX_testjig_v2.c: 1987: LATD4 = 0;
  6258  0405  0022               	movlb	2	; select bank2
  6259  0406  120F               	bcf	15,4	;volatile
  6260                           
  6261                           ;Multi_RX_testjig_v2.c: 1988: LATD5 = 0;
  6262  0407  128F               	bcf	15,5	;volatile
  6263                           
  6264                           ;Multi_RX_testjig_v2.c: 1989: LATD6 = 1;
  6265  0408  170F               	bsf	15,6	;volatile
  6266                           
  6267                           ;Multi_RX_testjig_v2.c: 1990: break;
  6268  0409  0008               	return
  6269  040A                     l2909:	
  6270  040A  0870               	movf	power_supply_set@supply,w
  6271                           
  6272                           ; Switch size 1, requested type "speed"
  6273                           ; Number of cases is 4, Range of values is 0 to 3
  6274                           ; switch strategies available:
  6275                           ; Name         Instructions Cycles
  6276                           ; direct_byte           14     6 (fixed)
  6277                           ; simple_byte           13     7 (average)
  6278                           ; jumptable            260     6 (fixed)
  6279                           ;	Chosen strategy is direct_byte
  6280  040B  0084               	movwf	4
  6281  040C  3004               	movlw	4
  6282  040D  0204               	subwf	4,w
  6283  040E  1803               	skipnc
  6284  040F  0008               	return
  6285  0410  3188               	movlp	high S4321
  6286  0411  3504               	lslf	4,w
  6287  0412  3E0C               	addlw	low S4321
  6288  0413  0082               	movwf	2
  6289  0414  0008               	return
  6290  0415                     __end_of_power_supply_set:	
  6291                           
  6292                           	psect	swtext2
  6293  07AE                     __pswtext2:	
  6294  07AE                     S4325:	
  6295  07AE  3180  28B1         	ljmp	l3351
  6296  07B0  3180  28B3         	ljmp	l3353
  6297  07B2  3180  28B5         	ljmp	l3355
  6298  07B4  3180  28B7         	ljmp	l3357
  6299  07B6  3180  28B9         	ljmp	l3359
  6300  07B8  3180  28BB         	ljmp	l3361
  6301  07BA  3180  28BD         	ljmp	l3363
  6302  07BC  3180  28BF         	ljmp	l3365
  6303  07BE  3180  28C1         	ljmp	l3367
  6304  07C0  3180  28C3         	ljmp	l3369
  6305  07C2  3180  28C5         	ljmp	l3371
  6306  07C4  3180  28C7         	ljmp	l3373
  6307  07C6  3180  28C9         	ljmp	l3375
  6308  07C8  3180  28D0         	ljmp	l720
  6309  07CA  3180  28CB         	ljmp	l3377
  6310  07CC  3180  28D0         	ljmp	l720
  6311  07CE  3180  28D0         	ljmp	l720
  6312  07D0  3180  28D0         	ljmp	l720
  6313  07D2  3180  28D0         	ljmp	l720
  6314  07D4  3180  28CD         	ljmp	l3379
  6315                           
  6316                           	psect	text33
  6317  0886                     __ptext33:	
  6318 ;; *************** function _TX_one *****************
  6319 ;; Defined at:
  6320 ;;		line 2123 in file "Multi_RX_testjig_v2.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  data            1    wreg     unsigned char 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;  data            1    1[COMMON] unsigned char 
  6325 ;;  i               1    2[COMMON] unsigned char 
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1    wreg      void 
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, status,0
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6337 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6338 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6339 ;;Total ram usage:        3 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    1
  6342 ;; This function calls:
  6343 ;;		Nothing
  6344 ;; This function is called by:
  6345 ;;		_main
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           
  6350                           ;psect for function _TX_one
  6351  0886                     _TX_one:	
  6352                           
  6353                           ;incstack = 0
  6354                           ; Regs used in _TX_one: [wreg+status,2+status,0]
  6355                           ;TX_one@data stored from wreg
  6356  0886  00F1               	movwf	TX_one@data
  6357                           
  6358                           ;Multi_RX_testjig_v2.c: 2125: TRISG0 = 0;
  6359  0887  0026               	movlb	6	; select bank6
  6360  0888  100D               	bcf	13,0	;volatile
  6361                           
  6362                           ;Multi_RX_testjig_v2.c: 2126: LATG0 = 0;
  6363  0889  0027               	movlb	7	; select bank7
  6364  088A  100D               	bcf	13,0	;volatile
  6365                           
  6366                           ;Multi_RX_testjig_v2.c: 2127: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6367  088B  3085               	movlw	133
  6368  088C  00F0               	movwf	??_TX_one
  6369  088D                     u5307:	
  6370  088D  0BF0               	decfsz	??_TX_one,f
  6371  088E  288D               	goto	u5307
  6372                           
  6373                           ;Multi_RX_testjig_v2.c: 2129: unsigned char i;
  6374                           ;Multi_RX_testjig_v2.c: 2130: for(i = 0; i < 8; i++)
  6375  088F  01F2               	clrf	TX_one@i
  6376  0890                     l732:	
  6377                           
  6378                           ;Multi_RX_testjig_v2.c: 2131: {
  6379                           ;Multi_RX_testjig_v2.c: 2132: LATG0 = data & 0x01;
  6380  0890  1C71               	btfss	TX_one@data,0
  6381  0891  2895               	goto	u3460
  6382  0892  0027               	movlb	7	; select bank7
  6383  0893  140D               	bsf	13,0	;volatile
  6384  0894  2897               	goto	u3474
  6385  0895                     u3460:	
  6386  0895  0027               	movlb	7	; select bank7
  6387  0896  100D               	bcf	13,0	;volatile
  6388  0897                     u3474:	
  6389  0897  3085               	movlw	133
  6390                           
  6391                           ;Multi_RX_testjig_v2.c: 2133: data = data >> 1;
  6392  0898  36F1               	lsrf	TX_one@data,f
  6393                           
  6394                           ;Multi_RX_testjig_v2.c: 2134: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6395  0899  00F0               	movwf	??_TX_one
  6396  089A                     u5317:	
  6397  089A  0BF0               	decfsz	??_TX_one,f
  6398  089B  289A               	goto	u5317
  6399  089C  3008               	movlw	8
  6400  089D  0AF2               	incf	TX_one@i,f
  6401  089E  0272               	subwf	TX_one@i,w
  6402  089F  1C03               	skipc
  6403  08A0  2890               	goto	l732
  6404                           
  6405                           ;Multi_RX_testjig_v2.c: 2135: }
  6406                           ;Multi_RX_testjig_v2.c: 2136: LATG0 = 1;
  6407  08A1  0027               	movlb	7	; select bank7
  6408  08A2  140D               	bsf	13,0	;volatile
  6409                           
  6410                           ;Multi_RX_testjig_v2.c: 2137: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6411  08A3  3085               	movlw	133
  6412  08A4  00F0               	movwf	??_TX_one
  6413  08A5                     u5327:	
  6414  08A5  0BF0               	decfsz	??_TX_one,f
  6415  08A6  28A5               	goto	u5327
  6416  08A7  0008               	return
  6417  08A8                     __end_of_TX_one:	
  6418                           
  6419                           	psect	text34
  6420  077F                     __ptext34:	
  6421 ;; *************** function _RX_one_timeout *****************
  6422 ;; Defined at:
  6423 ;;		line 2162 in file "Multi_RX_testjig_v2.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;		None
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;  data            1    2[COMMON] unsigned char 
  6428 ;;  i               1    1[COMMON] unsigned char 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  1    wreg      unsigned char 
  6431 ;; Registers used:
  6432 ;;		wreg, status,2, status,0
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6439 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6440 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6441 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6442 ;;Total ram usage:        3 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:    1
  6445 ;; This function calls:
  6446 ;;		Nothing
  6447 ;; This function is called by:
  6448 ;;		_main
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           
  6453                           ;psect for function _RX_one_timeout
  6454  077F                     _RX_one_timeout:	
  6455                           
  6456                           ;Multi_RX_testjig_v2.c: 2165: uart_receive_timer = 500;
  6457                           
  6458                           ;incstack = 0
  6459                           ; Regs used in _RX_one_timeout: [wreg+status,2+status,0]
  6460  077F  30F4               	movlw	244
  6461  0780  0020               	movlb	0	; select bank0
  6462  0781  00E4               	movwf	_uart_receive_timer	;volatile
  6463  0782  3001               	movlw	1
  6464  0783  00E5               	movwf	_uart_receive_timer+1	;volatile
  6465  0784  2F8A               	goto	l747
  6466  0785                     l3493:	
  6467  0785  0020               	movlb	0	; select bank0
  6468  0786  0864               	movf	_uart_receive_timer,w	;volatile
  6469  0787  0465               	iorwf	_uart_receive_timer+1,w	;volatile
  6470  0788  1903               	btfsc	3,2
  6471  0789  2F8D               	goto	l3495
  6472  078A                     l747:	
  6473                           ;Multi_RX_testjig_v2.c: 2166: while(RG3 == 1 && uart_receive_timer);
  6474                           
  6475  078A  0025               	movlb	5	; select bank5
  6476  078B  198D               	btfsc	13,3	;volatile
  6477  078C  2F85               	goto	l3493
  6478  078D                     l3495:	
  6479                           
  6480                           ;Multi_RX_testjig_v2.c: 2167: _delay((unsigned long)((150)*(16000000/4000000.0)));
  6481  078D  30C7               	movlw	199
  6482  078E  00F0               	movwf	??_RX_one_timeout
  6483  078F                     u5337:	
  6484  078F  0BF0               	decfsz	??_RX_one_timeout,f
  6485  0790  2F8F               	goto	u5337
  6486  0791  3200               	nop2	;nop
  6487                           
  6488                           ;Multi_RX_testjig_v2.c: 2168: unsigned char i;
  6489                           ;Multi_RX_testjig_v2.c: 2169: unsigned char data = 0;
  6490  0792  01F2               	clrf	RX_one_timeout@data
  6491                           
  6492                           ;Multi_RX_testjig_v2.c: 2170: for(i = 0; i < 8; i++)
  6493  0793  01F1               	clrf	RX_one_timeout@i
  6494  0794                     l752:	
  6495                           
  6496                           ;Multi_RX_testjig_v2.c: 2171: {
  6497                           ;Multi_RX_testjig_v2.c: 2172: LATF4 = 1;
  6498  0794  0027               	movlb	7	; select bank7
  6499  0795  160C               	bsf	12,4	;volatile
  6500                           
  6501                           ;Multi_RX_testjig_v2.c: 2173: if(RG3 == 0)
  6502  0796  0025               	movlb	5	; select bank5
  6503  0797  198D               	btfsc	13,3	;volatile
  6504  0798  2F9B               	goto	l754
  6505                           
  6506                           ;Multi_RX_testjig_v2.c: 2174: data = data >> 1;
  6507  0799  36F2               	lsrf	RX_one_timeout@data,f
  6508  079A  2F9D               	goto	l755
  6509  079B                     l754:	
  6510                           
  6511                           ;Multi_RX_testjig_v2.c: 2175: else
  6512                           ;Multi_RX_testjig_v2.c: 2176: data = (data >> 1) | 0x80;
  6513  079B  1403               	setc
  6514  079C  0CF2               	rrf	RX_one_timeout@data,f
  6515  079D                     l755:	
  6516                           
  6517                           ;Multi_RX_testjig_v2.c: 2177: LATF4 = 0;
  6518  079D  0027               	movlb	7	; select bank7
  6519  079E  120C               	bcf	12,4	;volatile
  6520                           
  6521                           ;Multi_RX_testjig_v2.c: 2178: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6522  079F  3085               	movlw	133
  6523  07A0  00F0               	movwf	??_RX_one_timeout
  6524  07A1                     u5347:	
  6525  07A1  0BF0               	decfsz	??_RX_one_timeout,f
  6526  07A2  2FA1               	goto	u5347
  6527  07A3  3008               	movlw	8
  6528  07A4  0AF1               	incf	RX_one_timeout@i,f
  6529  07A5  0271               	subwf	RX_one_timeout@i,w
  6530  07A6  1C03               	skipc
  6531  07A7  2F94               	goto	l752
  6532                           
  6533                           ;Multi_RX_testjig_v2.c: 2179: }
  6534                           ;Multi_RX_testjig_v2.c: 2180: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6535  07A8  3085               	movlw	133
  6536  07A9  00F0               	movwf	??_RX_one_timeout
  6537  07AA                     u5357:	
  6538  07AA  0BF0               	decfsz	??_RX_one_timeout,f
  6539  07AB  2FAA               	goto	u5357
  6540                           
  6541                           ;Multi_RX_testjig_v2.c: 2182: return data;
  6542  07AC  0872               	movf	RX_one_timeout@data,w
  6543  07AD  0008               	return
  6544  07AE                     __end_of_RX_one_timeout:	
  6545                           
  6546                           	psect	text35
  6547  07D6                     __ptext35:	
  6548 ;; *************** function _RX_one *****************
  6549 ;; Defined at:
  6550 ;;		line 2140 in file "Multi_RX_testjig_v2.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;		None
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;  data            1    2[COMMON] unsigned char 
  6555 ;;  i               1    1[COMMON] unsigned char 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  1    wreg      unsigned char 
  6558 ;; Registers used:
  6559 ;;		wreg, status,2, status,0
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/4
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6566 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6567 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6568 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6569 ;;Total ram usage:        3 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:    1
  6572 ;; This function calls:
  6573 ;;		Nothing
  6574 ;; This function is called by:
  6575 ;;		_main
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           
  6580                           ;psect for function _RX_one
  6581  07D6                     _RX_one:	
  6582  07D6                     l737:	
  6583                           ;Multi_RX_testjig_v2.c: 2143: while(RG3 == 1);
  6584                           
  6585                           ;incstack = 0
  6586                           ; Regs used in _RX_one: [wreg+status,2+status,0]
  6587                           
  6588  07D6  0025               	movlb	5	; select bank5
  6589  07D7  198D               	btfsc	13,3	;volatile
  6590  07D8  2FD6               	goto	l737
  6591                           
  6592                           ;Multi_RX_testjig_v2.c: 2144: _delay((unsigned long)((150)*(16000000/4000000.0)));
  6593  07D9  30C7               	movlw	199
  6594  07DA  00F0               	movwf	??_RX_one
  6595  07DB                     u5367:	
  6596  07DB  0BF0               	decfsz	??_RX_one,f
  6597  07DC  2FDB               	goto	u5367
  6598  07DD  3200               	nop2	;nop
  6599                           
  6600                           ;Multi_RX_testjig_v2.c: 2145: unsigned char i;
  6601                           ;Multi_RX_testjig_v2.c: 2146: unsigned char data = 0;
  6602  07DE  01F2               	clrf	RX_one@data
  6603                           
  6604                           ;Multi_RX_testjig_v2.c: 2147: for(i = 0; i < 8; i++)
  6605  07DF  01F1               	clrf	RX_one@i
  6606  07E0                     l740:	
  6607                           
  6608                           ;Multi_RX_testjig_v2.c: 2148: {
  6609                           ;Multi_RX_testjig_v2.c: 2149: LATF4 = 1;
  6610  07E0  0027               	movlb	7	; select bank7
  6611  07E1  160C               	bsf	12,4	;volatile
  6612                           
  6613                           ;Multi_RX_testjig_v2.c: 2150: if(RG3 == 0)
  6614  07E2  0025               	movlb	5	; select bank5
  6615  07E3  198D               	btfsc	13,3	;volatile
  6616  07E4  2FE7               	goto	l742
  6617                           
  6618                           ;Multi_RX_testjig_v2.c: 2151: data = data >> 1;
  6619  07E5  36F2               	lsrf	RX_one@data,f
  6620  07E6  2FE9               	goto	l743
  6621  07E7                     l742:	
  6622                           
  6623                           ;Multi_RX_testjig_v2.c: 2152: else
  6624                           ;Multi_RX_testjig_v2.c: 2153: data = (data >> 1) | 0x80;
  6625  07E7  1403               	setc
  6626  07E8  0CF2               	rrf	RX_one@data,f
  6627  07E9                     l743:	
  6628                           
  6629                           ;Multi_RX_testjig_v2.c: 2154: LATF4 = 0;
  6630  07E9  0027               	movlb	7	; select bank7
  6631  07EA  120C               	bcf	12,4	;volatile
  6632                           
  6633                           ;Multi_RX_testjig_v2.c: 2155: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6634  07EB  3085               	movlw	133
  6635  07EC  00F0               	movwf	??_RX_one
  6636  07ED                     u5377:	
  6637  07ED  0BF0               	decfsz	??_RX_one,f
  6638  07EE  2FED               	goto	u5377
  6639  07EF  3008               	movlw	8
  6640  07F0  0AF1               	incf	RX_one@i,f
  6641  07F1  0271               	subwf	RX_one@i,w
  6642  07F2  1C03               	skipc
  6643  07F3  2FE0               	goto	l740
  6644                           
  6645                           ;Multi_RX_testjig_v2.c: 2156: }
  6646                           ;Multi_RX_testjig_v2.c: 2157: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6647  07F4  3085               	movlw	133
  6648  07F5  00F0               	movwf	??_RX_one
  6649  07F6                     u5387:	
  6650  07F6  0BF0               	decfsz	??_RX_one,f
  6651  07F7  2FF6               	goto	u5387
  6652                           
  6653                           ;Multi_RX_testjig_v2.c: 2159: return data;
  6654  07F8  0872               	movf	RX_one@data,w
  6655  07F9  0008               	return
  6656  07FA                     __end_of_RX_one:	
  6657                           
  6658                           	psect	intentry
  6659  0004                     __pintentry:	
  6660 ;; *************** function _isr *****************
  6661 ;; Defined at:
  6662 ;;		line 322 in file "Multi_RX_testjig_v2.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;		None
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;		None
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  1    wreg      void 
  6669 ;; Registers used:
  6670 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 1F/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6680 ;;Total ram usage:        0 bytes
  6681 ;; Hardware stack levels used:    1
  6682 ;; This function calls:
  6683 ;;		Nothing
  6684 ;; This function is called by:
  6685 ;;		Interrupt level 1
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689  0004                     _isr:	
  6690                           
  6691                           ;incstack = 0
  6692  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6693                           
  6694                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  6695  0005  3180               	pagesel	$
  6696                           
  6697                           ;Multi_RX_testjig_v2.c: 324: if(INTCONbits.TMR0IF == 1)
  6698  0006  1D0B               	btfss	11,2	;volatile
  6699  0007  2824               	goto	i1l3551
  6700                           
  6701                           ;Multi_RX_testjig_v2.c: 325: {
  6702                           ;Multi_RX_testjig_v2.c: 327: if(testjig_timer)
  6703  0008  0020               	movlb	0	; select bank0
  6704  0009  0860               	movf	_testjig_timer,w	;volatile
  6705  000A  0461               	iorwf	_testjig_timer+1,w	;volatile
  6706  000B  1903               	btfsc	3,2
  6707  000C  2812               	goto	i1l274
  6708                           
  6709                           ;Multi_RX_testjig_v2.c: 328: testjig_timer--;
  6710  000D  3001               	movlw	1
  6711  000E  02E0               	subwf	_testjig_timer,f	;volatile
  6712  000F  3000               	movlw	0
  6713  0010  3BE1               	subwfb	_testjig_timer+1,f	;volatile
  6714  0011  2813               	goto	i1l3543
  6715  0012                     i1l274:	
  6716                           
  6717                           ;Multi_RX_testjig_v2.c: 329: else
  6718                           ;Multi_RX_testjig_v2.c: 330: RE0 = 0;
  6719  0012  1010               	bcf	16,0	;volatile
  6720  0013                     i1l3543:	
  6721                           
  6722                           ;Multi_RX_testjig_v2.c: 331: if(uart_receive_timer)
  6723  0013  0864               	movf	_uart_receive_timer,w	;volatile
  6724  0014  0465               	iorwf	_uart_receive_timer+1,w	;volatile
  6725  0015  1903               	btfsc	3,2
  6726  0016  281B               	goto	i1l276
  6727                           
  6728                           ;Multi_RX_testjig_v2.c: 332: uart_receive_timer--;
  6729  0017  30FF               	movlw	-1
  6730  0018  07E4               	addwf	_uart_receive_timer,f	;volatile
  6731  0019  1C03               	skipc
  6732  001A  03E5               	decf	_uart_receive_timer+1,f	;volatile
  6733  001B                     i1l276:	
  6734                           
  6735                           ;Multi_RX_testjig_v2.c: 333: if(motor_direction_timer)
  6736  001B  085C               	movf	_motor_direction_timer,w	;volatile
  6737  001C  045D               	iorwf	_motor_direction_timer+1,w	;volatile
  6738  001D  1903               	btfsc	3,2
  6739  001E  2823               	goto	i1l3549
  6740                           
  6741                           ;Multi_RX_testjig_v2.c: 334: motor_direction_timer--;
  6742  001F  30FF               	movlw	-1
  6743  0020  07DC               	addwf	_motor_direction_timer,f	;volatile
  6744  0021  1C03               	skipc
  6745  0022  03DD               	decf	_motor_direction_timer+1,f	;volatile
  6746  0023                     i1l3549:	
  6747                           
  6748                           ;Multi_RX_testjig_v2.c: 336: INTCONbits.TMR0IF = 0;
  6749  0023  110B               	bcf	11,2	;volatile
  6750  0024                     i1l3551:	
  6751                           
  6752                           ;Multi_RX_testjig_v2.c: 338: }
  6753                           ;Multi_RX_testjig_v2.c: 339: if(PIR1bits.TMR2IF == 1)
  6754  0024  0020               	movlb	0	; select bank0
  6755  0025  1C91               	btfss	17,1	;volatile
  6756  0026  289D               	goto	i1l300
  6757                           
  6758                           ;Multi_RX_testjig_v2.c: 340: {
  6759                           ;Multi_RX_testjig_v2.c: 342: if(pickit_timer)
  6760  0027  085E               	movf	_pickit_timer,w	;volatile
  6761  0028  045F               	iorwf	_pickit_timer+1,w	;volatile
  6762  0029  1903               	btfsc	3,2
  6763  002A  286F               	goto	i1l3583
  6764                           
  6765                           ;Multi_RX_testjig_v2.c: 343: pickit_timer--;
  6766  002B  3001               	movlw	1
  6767  002C  02DE               	subwf	_pickit_timer,f	;volatile
  6768  002D  3000               	movlw	0
  6769  002E  3BDF               	subwfb	_pickit_timer+1,f	;volatile
  6770  002F  287A               	goto	i1l3585
  6771  0030                     i1l282:	
  6772                           ;Multi_RX_testjig_v2.c: 347: {
  6773                           ;Multi_RX_testjig_v2.c: 348: case pickit_start:
  6774                           
  6775                           
  6776                           ;Multi_RX_testjig_v2.c: 349: LATC2 = 1;
  6777  0030  0022               	movlb	2	; select bank2
  6778  0031  150E               	bsf	14,2	;volatile
  6779                           
  6780                           ;Multi_RX_testjig_v2.c: 350: LATC7 = 1;
  6781  0032  178E               	bsf	14,7	;volatile
  6782                           
  6783                           ;Multi_RX_testjig_v2.c: 351: pickit_timer = 10;
  6784  0033  300A               	movlw	10
  6785  0034  0020               	movlb	0	; select bank0
  6786  0035  00DE               	movwf	_pickit_timer	;volatile
  6787  0036  01DF               	clrf	_pickit_timer+1	;volatile
  6788                           
  6789                           ;Multi_RX_testjig_v2.c: 352: pickit_state = pickit_push_button;
  6790  0037  3002               	movlw	2
  6791  0038  286C               	goto	L42
  6792  0039                     i1l3559:	
  6793                           ;Multi_RX_testjig_v2.c: 353: break;
  6794                           
  6795                           
  6796                           ;Multi_RX_testjig_v2.c: 355: pickit_timer = 1000;
  6797  0039  30E8               	movlw	232
  6798  003A  0020               	movlb	0	; select bank0
  6799  003B  00DE               	movwf	_pickit_timer	;volatile
  6800  003C  3003               	movlw	3
  6801  003D  00DF               	movwf	_pickit_timer+1	;volatile
  6802                           
  6803                           ;Multi_RX_testjig_v2.c: 356: LATC6 = 1;
  6804  003E  0022               	movlb	2	; select bank2
  6805  003F  170E               	bsf	14,6	;volatile
  6806                           
  6807                           ;Multi_RX_testjig_v2.c: 357: pickit_state = pickit_busy;
  6808  0040  286C               	goto	L42
  6809  0041                     i1l285:	
  6810                           ;Multi_RX_testjig_v2.c: 359: case pickit_busy:
  6811                           
  6812                           ;Multi_RX_testjig_v2.c: 358: break;
  6813                           
  6814                           
  6815                           ;Multi_RX_testjig_v2.c: 360: LATC6 = 0;
  6816  0041  0022               	movlb	2	; select bank2
  6817  0042  130E               	bcf	14,6	;volatile
  6818                           
  6819                           ;Multi_RX_testjig_v2.c: 361: if(RE6 == 0)
  6820  0043  0020               	movlb	0	; select bank0
  6821  0044  1B10               	btfsc	16,6	;volatile
  6822  0045  284E               	goto	i1l3569
  6823  0046  3065               	movlw	101
  6824                           
  6825                           ;Multi_RX_testjig_v2.c: 362: {
  6826                           ;Multi_RX_testjig_v2.c: 363: pickit_red_counter++;
  6827  0047  0AE7               	incf	_pickit_red_counter,f
  6828                           
  6829                           ;Multi_RX_testjig_v2.c: 364: if(pickit_red_counter > 100)
  6830  0048  0267               	subwf	_pickit_red_counter,w
  6831  0049  1C03               	skipc
  6832  004A  284F               	goto	i1l3571
  6833                           
  6834                           ;Multi_RX_testjig_v2.c: 365: pickit_state = pickit_finish;
  6835  004B  0021               	movlb	1	; select bank1
  6836  004C  01A0               	clrf	_pickit_state^(0+128)
  6837  004D  284F               	goto	i1l3571
  6838  004E                     i1l3569:	
  6839                           
  6840                           ;Multi_RX_testjig_v2.c: 367: else
  6841                           ;Multi_RX_testjig_v2.c: 368: pickit_red_counter = 0;
  6842  004E  01E7               	clrf	_pickit_red_counter
  6843  004F                     i1l3571:	
  6844                           
  6845                           ;Multi_RX_testjig_v2.c: 369: if(RE5 == 0)
  6846  004F  0020               	movlb	0	; select bank0
  6847  0050  1A90               	btfsc	16,5	;volatile
  6848  0051  285B               	goto	i1l289
  6849                           
  6850                           ;Multi_RX_testjig_v2.c: 370: {
  6851                           ;Multi_RX_testjig_v2.c: 371: pickit_state = pickit_error;
  6852  0052  3004               	movlw	4
  6853  0053  0021               	movlb	1	; select bank1
  6854  0054  00A0               	movwf	_pickit_state^(0+128)
  6855                           
  6856                           ;Multi_RX_testjig_v2.c: 372: pickit_timer = 1000;
  6857  0055  30E8               	movlw	232
  6858  0056  0020               	movlb	0	; select bank0
  6859  0057  00DE               	movwf	_pickit_timer	;volatile
  6860  0058  3003               	movlw	3
  6861  0059  00DF               	movwf	_pickit_timer+1	;volatile
  6862                           
  6863                           ;Multi_RX_testjig_v2.c: 373: }
  6864  005A  285F               	goto	i1l3577
  6865  005B                     i1l289:	
  6866                           
  6867                           ;Multi_RX_testjig_v2.c: 374: else if(RE4 == 0)
  6868  005B  1A10               	btfsc	16,4	;volatile
  6869  005C  285F               	goto	i1l3577
  6870                           
  6871                           ;Multi_RX_testjig_v2.c: 375: {
  6872                           ;Multi_RX_testjig_v2.c: 376: pickit_state = pickit_finish;
  6873  005D  0021               	movlb	1	; select bank1
  6874  005E  01A0               	clrf	_pickit_state^(0+128)
  6875  005F                     i1l3577:	
  6876                           
  6877                           ;Multi_RX_testjig_v2.c: 377: }
  6878                           ;Multi_RX_testjig_v2.c: 378: pickit_timer = 1;
  6879  005F  3001               	movlw	1
  6880  0060  0020               	movlb	0	; select bank0
  6881  0061  00DE               	movwf	_pickit_timer	;volatile
  6882  0062  01DF               	clrf	_pickit_timer+1	;volatile
  6883                           
  6884                           ;Multi_RX_testjig_v2.c: 379: break;
  6885  0063  287A               	goto	i1l3585
  6886  0064                     i1l292:	
  6887                           ;Multi_RX_testjig_v2.c: 380: case pickit_error:
  6888                           
  6889                           
  6890                           ;Multi_RX_testjig_v2.c: 381: LATC2 = 0;
  6891  0064  0022               	movlb	2	; select bank2
  6892  0065  110E               	bcf	14,2	;volatile
  6893                           
  6894                           ;Multi_RX_testjig_v2.c: 382: LATC7 = 0;
  6895  0066  138E               	bcf	14,7	;volatile
  6896                           
  6897                           ;Multi_RX_testjig_v2.c: 383: break;
  6898  0067  287A               	goto	i1l3585
  6899  0068                     i1l293:	
  6900                           ;Multi_RX_testjig_v2.c: 384: case pickit_finish:
  6901                           
  6902                           
  6903                           ;Multi_RX_testjig_v2.c: 385: LATC2 = 0;
  6904  0068  0022               	movlb	2	; select bank2
  6905  0069  110E               	bcf	14,2	;volatile
  6906                           
  6907                           ;Multi_RX_testjig_v2.c: 386: LATC7 = 0;
  6908  006A  138E               	bcf	14,7	;volatile
  6909                           
  6910                           ;Multi_RX_testjig_v2.c: 387: pickit_state = pickit_idle;
  6911  006B  3005               	movlw	5
  6912  006C                     L42:	
  6913  006C  0021               	movlb	1	; select bank1
  6914  006D  00A0               	movwf	_pickit_state^(0+128)
  6915                           
  6916                           ;Multi_RX_testjig_v2.c: 388: break;
  6917  006E  287A               	goto	i1l3585
  6918  006F                     i1l3583:	
  6919  006F  0021               	movlb	1	; select bank1
  6920  0070  0820               	movf	_pickit_state^(0+128),w
  6921                           
  6922                           ; Switch size 1, requested type "speed"
  6923                           ; Number of cases is 6, Range of values is 0 to 5
  6924                           ; switch strategies available:
  6925                           ; Name         Instructions Cycles
  6926                           ; direct_byte           18     6 (fixed)
  6927                           ; simple_byte           19    10 (average)
  6928                           ; jumptable            260     6 (fixed)
  6929                           ;	Chosen strategy is direct_byte
  6930  0071  0084               	movwf	4
  6931  0072  3006               	movlw	6
  6932  0073  0204               	subwf	4,w
  6933  0074  1803               	skipnc
  6934  0075  287A               	goto	i1l3585
  6935  0076  3188               	movlp	high i1S4327
  6936  0077  3504               	lslf	4,w
  6937  0078  3E00               	addlw	low i1S4327
  6938  0079  0082               	movwf	2
  6939  007A                     i1l3585:	
  6940                           
  6941                           ;Multi_RX_testjig_v2.c: 392: }
  6942                           ;Multi_RX_testjig_v2.c: 454: if(buzz_timer)
  6943  007A  0020               	movlb	0	; select bank0
  6944  007B  086C               	movf	_buzz_timer,w	;volatile
  6945  007C  046D               	iorwf	_buzz_timer+1,w	;volatile
  6946  007D  1903               	btfsc	3,2
  6947  007E  2884               	goto	i1l295
  6948                           
  6949                           ;Multi_RX_testjig_v2.c: 455: buzz_timer--;
  6950  007F  3001               	movlw	1
  6951  0080  02EC               	subwf	_buzz_timer,f	;volatile
  6952  0081  3000               	movlw	0
  6953  0082  3BED               	subwfb	_buzz_timer+1,f	;volatile
  6954  0083  2886               	goto	i1l3589
  6955  0084                     i1l295:	
  6956                           
  6957                           ;Multi_RX_testjig_v2.c: 456: else
  6958                           ;Multi_RX_testjig_v2.c: 457: LATC5 = 0;
  6959  0084  0022               	movlb	2	; select bank2
  6960  0085  128E               	bcf	14,5	;volatile
  6961  0086                     i1l3589:	
  6962                           
  6963                           ;Multi_RX_testjig_v2.c: 458: if(one_second_timer)
  6964  0086  0020               	movlb	0	; select bank0
  6965  0087  086E               	movf	_one_second_timer,w	;volatile
  6966  0088  046F               	iorwf	_one_second_timer+1,w	;volatile
  6967  0089  1903               	btfsc	3,2
  6968  008A  2890               	goto	i1l3593
  6969                           
  6970                           ;Multi_RX_testjig_v2.c: 459: one_second_timer--;
  6971  008B  3001               	movlw	1
  6972  008C  02EE               	subwf	_one_second_timer,f	;volatile
  6973  008D  3000               	movlw	0
  6974  008E  3BEF               	subwfb	_one_second_timer+1,f	;volatile
  6975  008F  2894               	goto	i1l3595
  6976  0090                     i1l3593:	
  6977                           
  6978                           ;Multi_RX_testjig_v2.c: 460: else
  6979                           ;Multi_RX_testjig_v2.c: 461: {
  6980                           ;Multi_RX_testjig_v2.c: 462: one_second_timer = 1000;
  6981  0090  30E8               	movlw	232
  6982  0091  00EE               	movwf	_one_second_timer	;volatile
  6983  0092  3003               	movlw	3
  6984  0093  00EF               	movwf	_one_second_timer+1	;volatile
  6985  0094                     i1l3595:	
  6986                           
  6987                           ;Multi_RX_testjig_v2.c: 463: }
  6988                           ;Multi_RX_testjig_v2.c: 464: if(tj_timer)
  6989  0094  0862               	movf	_tj_timer,w
  6990  0095  0463               	iorwf	_tj_timer+1,w
  6991  0096  1903               	btfsc	3,2
  6992  0097  289C               	goto	i1l3599
  6993                           
  6994                           ;Multi_RX_testjig_v2.c: 465: tj_timer--;
  6995  0098  3001               	movlw	1
  6996  0099  02E2               	subwf	_tj_timer,f
  6997  009A  3000               	movlw	0
  6998  009B  3BE3               	subwfb	_tj_timer+1,f
  6999  009C                     i1l3599:	
  7000                           
  7001                           ;Multi_RX_testjig_v2.c: 466: PIR1bits.TMR2IF = 0;
  7002  009C  1091               	bcf	17,1	;volatile
  7003  009D                     i1l300:	
  7004  009D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7005  009E  0009               	retfie
  7006  009F                     __end_of_isr:	
  7007  007E                     btemp	set	126	;btemp
  7008  007E                     int$flags	set	126
  7009  007E                     wtemp	set	126
  7010  007E                     wtemp0	set	126
  7011  0080                     wtemp1	set	128
  7012  0082                     wtemp2	set	130
  7013  0084                     wtemp3	set	132
  7014  0086                     wtemp4	set	134
  7015  0088                     wtemp5	set	136
  7016  007F                     wtemp6	set	127
  7017  007E                     ttemp	set	126
  7018  007E                     ttemp0	set	126
  7019  0081                     ttemp1	set	129
  7020  0084                     ttemp2	set	132
  7021  0087                     ttemp3	set	135
  7022  007F                     ttemp4	set	127
  7023  007E                     ltemp	set	126
  7024  007E                     ltemp0	set	126
  7025  0082                     ltemp1	set	130
  7026  0086                     ltemp2	set	134
  7027  0080                     ltemp3	set	128
  7028                           
  7029                           	psect	swtext3
  7030  0800                     __pswtext3:	
  7031  0800                     i1S4327:	
  7032  0800  3180  2868         	ljmp	i1l293
  7033  0802  3180  2830         	ljmp	i1l282
  7034  0804  3180  2839         	ljmp	i1l3559
  7035  0806  3180  2841         	ljmp	i1l285
  7036  0808  3180  2864         	ljmp	i1l292
  7037  080A  3180  287A         	ljmp	i1l3585
  7038                           
  7039                           	psect	maintext_split_1
  7040  08A8                     l3725:	
  7041  08A8  305F               	movlw	95
  7042  08A9  3184  2454  3188   	fcall	_ADC_get_val
  7043  08AC  3000               	movlw	0
  7044  08AD  0271               	subwf	?_ADC_get_val+1,w
  7045  08AE  307B               	movlw	123
  7046  08AF  1903               	skipnz
  7047  08B0  0270               	subwf	?_ADC_get_val,w
  7048  08B1  1C03               	skipc
  7049  08B2  28E2               	goto	l3735
  7050  08B3  3063               	movlw	99
  7051  08B4  3184  2454  3188   	fcall	_ADC_get_val
  7052  08B7  3000               	movlw	0
  7053  08B8  0271               	subwf	?_ADC_get_val+1,w
  7054  08B9  30F5               	movlw	245
  7055  08BA  1903               	skipnz
  7056  08BB  0270               	subwf	?_ADC_get_val,w
  7057  08BC  1803               	skipnc
  7058  08BD  28E2               	goto	l3735
  7059  08BE  3063               	movlw	99
  7060  08BF  3184  2454  3188   	fcall	_ADC_get_val
  7061  08C2  3001               	movlw	1
  7062  08C3  0271               	subwf	?_ADC_get_val+1,w
  7063  08C4  3048               	movlw	72
  7064  08C5  1903               	skipnz
  7065  08C6  0270               	subwf	?_ADC_get_val,w
  7066  08C7  1C03               	skipc
  7067  08C8  28E2               	goto	l3735
  7068  08C9  3184  2415  3188   	fcall	_get_30v_current
  7069  08CC  3000               	movlw	0
  7070  08CD  0246               	subwf	?_get_30v_current+1,w
  7071  08CE  303C               	movlw	60
  7072  08CF  1903               	skipnz
  7073  08D0  0245               	subwf	?_get_30v_current,w
  7074  08D1  1803               	skipnc
  7075  08D2  28E2               	goto	l3735
  7076  08D3  0860               	movf	_testjig_timer,w	;volatile
  7077  08D4  0461               	iorwf	_testjig_timer+1,w	;volatile
  7078  08D5  1903               	btfsc	3,2
  7079  08D6  28E2               	goto	l3735
  7080  08D7                     l3723:	
  7081                           ;Multi_RX_testjig_v2.c: 570: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08))&&(ADC_get_val(0b01100011) < (unsigned int)((((12/11.0)*1024)/4.096)*0.9)) && (AD
      +                          C_get_val(0b011
  7082                           
  7083  08D7  305F               	movlw	95
  7084  08D8  3184  2454  3188   	fcall	_ADC_get_val
  7085  08DB  3000               	movlw	0
  7086  08DC  0271               	subwf	?_ADC_get_val+1,w
  7087  08DD  3068               	movlw	104
  7088  08DE  1903               	skipnz
  7089  08DF  0270               	subwf	?_ADC_get_val,w
  7090  08E0  1C03               	btfss	3,0
  7091  08E1  28A8               	goto	l3725
  7092  08E2                     l3735:	
  7093                           
  7094                           ;Multi_RX_testjig_v2.c: 571: unsigned int temp;
  7095                           ;Multi_RX_testjig_v2.c: 572: temp = get_30v_current();
  7096  08E2  3184  2415  3188   	fcall	_get_30v_current
  7097  08E5  0846               	movf	?_get_30v_current+1,w
  7098  08E6  00CD               	movwf	main@temp+1
  7099  08E7  0845               	movf	?_get_30v_current,w
  7100  08E8  00CC               	movwf	main@temp
  7101                           
  7102                           ;Multi_RX_testjig_v2.c: 573: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  7103  08E9  305F               	movlw	95
  7104  08EA  3184  2454  3188   	fcall	_ADC_get_val
  7105  08ED  3000               	movlw	0
  7106  08EE  0271               	subwf	?_ADC_get_val+1,w
  7107  08EF  3068               	movlw	104
  7108  08F0  1903               	skipnz
  7109  08F1  0270               	subwf	?_ADC_get_val,w
  7110  08F2  1803               	skipnc
  7111  08F3  28F8               	goto	l3741
  7112                           
  7113                           ;Multi_RX_testjig_v2.c: 574: print_error("16v-5v supply", "Volt Error L");
  7114  08F4  30AC               	movlw	low (STR_15| (0+32768))
  7115  08F5  00F8               	movwf	print_error@top
  7116  08F6  3091               	movlw	high (STR_15| (0+32768))
  7117  08F7  2915               	goto	L12
  7118  08F8                     l3741:	
  7119                           
  7120                           ;Multi_RX_testjig_v2.c: 575: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  7121  08F8  305F               	movlw	95
  7122  08F9  3184  2454  3188   	fcall	_ADC_get_val
  7123  08FC  3000               	movlw	0
  7124  08FD  0271               	subwf	?_ADC_get_val+1,w
  7125  08FE  307B               	movlw	123
  7126  08FF  1903               	skipnz
  7127  0900  0270               	subwf	?_ADC_get_val,w
  7128  0901  1C03               	skipc
  7129  0902  2907               	goto	l3745
  7130                           
  7131                           ;Multi_RX_testjig_v2.c: 576: print_error("16v-5v supply", "Volt Error H");
  7132  0903  30AC               	movlw	low (STR_15| (0+32768))
  7133  0904  00F8               	movwf	print_error@top
  7134  0905  3091               	movlw	high (STR_15| (0+32768))
  7135  0906  2928               	goto	L13
  7136  0907                     l3745:	
  7137                           
  7138                           ;Multi_RX_testjig_v2.c: 577: else if((ADC_get_val(0b01100011) < (unsigned int)((((12/11.
      +                          0)*1024)/4.096)*0.9)))
  7139  0907  3063               	movlw	99
  7140  0908  3184  2454  3188   	fcall	_ADC_get_val
  7141  090B  3000               	movlw	0
  7142  090C  0271               	subwf	?_ADC_get_val+1,w
  7143  090D  30F5               	movlw	245
  7144  090E  1903               	skipnz
  7145  090F  0270               	subwf	?_ADC_get_val,w
  7146  0910  1803               	skipnc
  7147  0911  291A               	goto	l3749
  7148                           
  7149                           ;Multi_RX_testjig_v2.c: 578: print_error("16v-12v supply", "Volt Error L");
  7150  0912  303B               	movlw	low (STR_19| (0+32768))
  7151  0913  00F8               	movwf	print_error@top
  7152  0914  3091               	movlw	high (STR_19| (0+32768))
  7153  0915                     L12:	
  7154  0915  00F9               	movwf	print_error@top+1
  7155  0916  30EE               	movlw	low (STR_8| (0+32768))
  7156  0917  00FA               	movwf	print_error@bottom
  7157  0918  3091               	movlw	high (STR_8| (0+32768))
  7158  0919  2963               	goto	L8
  7159  091A                     l3749:	
  7160                           
  7161                           ;Multi_RX_testjig_v2.c: 579: else if((ADC_get_val(0b01100011) > (unsigned int)((((12/11.
      +                          0)*1024)/4.096)*1.2)))
  7162  091A  3063               	movlw	99
  7163  091B  3184  2454  3188   	fcall	_ADC_get_val
  7164  091E  3001               	movlw	1
  7165  091F  0271               	subwf	?_ADC_get_val+1,w
  7166  0920  3048               	movlw	72
  7167  0921  1903               	skipnz
  7168  0922  0270               	subwf	?_ADC_get_val,w
  7169  0923  1C03               	skipc
  7170  0924  292D               	goto	l3753
  7171                           
  7172                           ;Multi_RX_testjig_v2.c: 580: print_error("16v-12v supply", "Volt Error H");
  7173  0925  303B               	movlw	low (STR_19| (0+32768))
  7174  0926  00F8               	movwf	print_error@top
  7175  0927  3091               	movlw	high (STR_19| (0+32768))
  7176  0928                     L13:	
  7177  0928  00F9               	movwf	print_error@top+1
  7178  0929  30D4               	movlw	low (STR_10| (0+32768))
  7179  092A  00FA               	movwf	print_error@bottom
  7180  092B  3091               	movlw	high (STR_10| (0+32768))
  7181  092C  2963               	goto	L8
  7182  092D                     l3753:	
  7183                           
  7184                           ;Multi_RX_testjig_v2.c: 581: else if((temp >= 60))
  7185  092D  3000               	movlw	0
  7186  092E  0020               	movlb	0	; select bank0
  7187  092F  024D               	subwf	main@temp+1,w
  7188  0930  303C               	movlw	60
  7189  0931  1903               	skipnz
  7190  0932  024C               	subwf	main@temp,w
  7191  0933  1C03               	skipc
  7192  0934  2958               	goto	l3761
  7193                           
  7194                           ;Multi_RX_testjig_v2.c: 582: {
  7195                           ;Multi_RX_testjig_v2.c: 583: lcd_print_int(temp, 5, 0, 1);
  7196  0935  084D               	movf	main@temp+1,w
  7197  0936  00A1               	movwf	lcd_print_int@number+1
  7198  0937  084C               	movf	main@temp,w
  7199  0938  00A0               	movwf	lcd_print_int@number
  7200  0939  3005               	movlw	5
  7201  093A  00A2               	movwf	lcd_print_int@pos
  7202  093B  01A3               	clrf	lcd_print_int@pos+1
  7203  093C  01A4               	clrf	lcd_print_int@decimal
  7204  093D  01A5               	clrf	lcd_print_int@ten_thou_digit
  7205  093E  0AA5               	incf	lcd_print_int@ten_thou_digit,f
  7206  093F  3181  2101  3188   	fcall	_lcd_print_int
  7207                           
  7208                           ;Multi_RX_testjig_v2.c: 584: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7209  0942  3015               	movlw	21
  7210  0943  0020               	movlb	0	; select bank0
  7211  0944  00CB               	movwf	??_main+2
  7212  0945  304B               	movlw	75
  7213  0946  00CA               	movwf	??_main+1
  7214  0947  30D1               	movlw	209
  7215  0948  00C9               	movwf	??_main
  7216  0949                     u4867:	
  7217  0949  0BC9               	decfsz	??_main,f
  7218  094A  2949               	goto	u4867
  7219  094B  0BCA               	decfsz	??_main+1,f
  7220  094C  2949               	goto	u4867
  7221  094D  0BCB               	decfsz	??_main+2,f
  7222  094E  2949               	goto	u4867
  7223  094F  0000               	nop
  7224                           
  7225                           ;Multi_RX_testjig_v2.c: 585: print_error("16v supply", "Curr Error");
  7226  0950  30BD               	movlw	low (STR_23| (0+32768))
  7227  0951  00F8               	movwf	print_error@top
  7228  0952  3092               	movlw	high (STR_23| (0+32768))
  7229  0953  00F9               	movwf	print_error@top+1
  7230  0954  309C               	movlw	low (STR_12| (0+32768))
  7231  0955  00FA               	movwf	print_error@bottom
  7232  0956  3092               	movlw	high (STR_12| (0+32768))
  7233  0957  2963               	goto	L8
  7234  0958                     l3761:	
  7235                           ;Multi_RX_testjig_v2.c: 586: }
  7236                           
  7237                           
  7238                           ;Multi_RX_testjig_v2.c: 587: else if(testjig_timer == 0)
  7239  0958  0860               	movf	_testjig_timer,w	;volatile
  7240  0959  0461               	iorwf	_testjig_timer+1,w	;volatile
  7241  095A  1D03               	btfss	3,2
  7242  095B  2967               	goto	l3765
  7243                           
  7244                           ;Multi_RX_testjig_v2.c: 588: print_error("16v-5v supply", "T-out Error");
  7245  095C  30AC               	movlw	low (STR_15| (0+32768))
  7246  095D  00F8               	movwf	print_error@top
  7247  095E  3091               	movlw	high (STR_15| (0+32768))
  7248  095F  00F9               	movwf	print_error@top+1
  7249  0960  3084               	movlw	low (STR_14| (0+32768))
  7250  0961  00FA               	movwf	print_error@bottom
  7251  0962  3092               	movlw	high (STR_14| (0+32768))
  7252  0963                     L8:	
  7253  0963  00FB               	movwf	print_error@bottom+1
  7254  0964  3182  22F8  3188   	fcall	_print_error
  7255  0967                     l3765:	
  7256                           
  7257                           ;Multi_RX_testjig_v2.c: 594: if(RA2 == 1)
  7258  0967  0020               	movlb	0	; select bank0
  7259  0968  1D0C               	btfss	12,2	;volatile
  7260  0969  29D4               	goto	l3787
  7261                           
  7262                           ;Multi_RX_testjig_v2.c: 595: {
  7263                           ;Multi_RX_testjig_v2.c: 596: power_supply_set(0);
  7264  096A  3000               	movlw	0
  7265  096B  3183  23F4  3188   	fcall	_power_supply_set
  7266                           
  7267                           ;Multi_RX_testjig_v2.c: 598: print_screen("Pickit Programming", "");
  7268  096E  3013               	movlw	low (STR_27| (0+32768))
  7269  096F  00F4               	movwf	print_screen@top
  7270  0970  3090               	movlw	high (STR_27| (0+32768))
  7271  0971  00F5               	movwf	print_screen@top+1
  7272  0972  30AE               	movlw	low ((STR_159+15)| (0+32768))
  7273  0973  00F6               	movwf	print_screen@bottom
  7274  0974  3090               	movlw	high ((STR_159+15)| (0+32768))
  7275  0975  00F7               	movwf	print_screen@bottom+1
  7276  0976  3182  22D6  3188   	fcall	_print_screen
  7277                           
  7278                           ;Multi_RX_testjig_v2.c: 599: LATA7 = 1;
  7279  0979  0022               	movlb	2	; select bank2
  7280  097A  178C               	bsf	12,7	;volatile
  7281                           
  7282                           ;Multi_RX_testjig_v2.c: 600: _delay((unsigned long)((100)*(16000000/4000.0)));
  7283  097B  3003               	movlw	3
  7284  097C  0020               	movlb	0	; select bank0
  7285  097D  00CB               	movwf	??_main+2
  7286  097E  3008               	movlw	8
  7287  097F  00CA               	movwf	??_main+1
  7288  0980  3078               	movlw	120
  7289  0981  00C9               	movwf	??_main
  7290  0982                     u4877:	
  7291  0982  0BC9               	decfsz	??_main,f
  7292  0983  2982               	goto	u4877
  7293  0984  0BCA               	decfsz	??_main+1,f
  7294  0985  2982               	goto	u4877
  7295  0986  0BCB               	decfsz	??_main+2,f
  7296  0987  2982               	goto	u4877
  7297                           
  7298                           ;Multi_RX_testjig_v2.c: 601: print_screen("Waiting for", " Programming");
  7299  0988  306C               	movlw	low (STR_29| (0+32768))
  7300  0989  00F4               	movwf	print_screen@top
  7301  098A  3092               	movlw	high (STR_29| (0+32768))
  7302  098B  00F5               	movwf	print_screen@top+1
  7303  098C  3019               	movlw	low ((STR_27+6)| (0+32768))
  7304  098D  00F6               	movwf	print_screen@bottom
  7305  098E  3090               	movlw	high ((STR_27+6)| (0+32768))
  7306  098F  00F7               	movwf	print_screen@bottom+1
  7307  0990  3182  22D6  3188   	fcall	_print_screen
  7308                           
  7309                           ;Multi_RX_testjig_v2.c: 604: LATC2 = 1;
  7310  0993  0022               	movlb	2	; select bank2
  7311  0994  150E               	bsf	14,2	;volatile
  7312                           
  7313                           ;Multi_RX_testjig_v2.c: 605: LATC7 = 1;
  7314  0995  178E               	bsf	14,7	;volatile
  7315                           
  7316                           ;Multi_RX_testjig_v2.c: 606: _delay((unsigned long)((100)*(16000000/4000.0)));
  7317  0996  3003               	movlw	3
  7318  0997  0020               	movlb	0	; select bank0
  7319  0998  00CB               	movwf	??_main+2
  7320  0999  3008               	movlw	8
  7321  099A  00CA               	movwf	??_main+1
  7322  099B  3078               	movlw	120
  7323  099C  00C9               	movwf	??_main
  7324  099D                     u4887:	
  7325  099D  0BC9               	decfsz	??_main,f
  7326  099E  299D               	goto	u4887
  7327  099F  0BCA               	decfsz	??_main+1,f
  7328  09A0  299D               	goto	u4887
  7329  09A1  0BCB               	decfsz	??_main+2,f
  7330  09A2  299D               	goto	u4887
  7331                           
  7332                           ;Multi_RX_testjig_v2.c: 607: LATC6 = 1;
  7333  09A3  0022               	movlb	2	; select bank2
  7334  09A4  170E               	bsf	14,6	;volatile
  7335                           
  7336                           ;Multi_RX_testjig_v2.c: 608: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7337  09A5  3015               	movlw	21
  7338  09A6  0020               	movlb	0	; select bank0
  7339  09A7  00CB               	movwf	??_main+2
  7340  09A8  304B               	movlw	75
  7341  09A9  00CA               	movwf	??_main+1
  7342  09AA  30D1               	movlw	209
  7343  09AB  00C9               	movwf	??_main
  7344  09AC                     u4897:	
  7345  09AC  0BC9               	decfsz	??_main,f
  7346  09AD  29AC               	goto	u4897
  7347  09AE  0BCA               	decfsz	??_main+1,f
  7348  09AF  29AC               	goto	u4897
  7349  09B0  0BCB               	decfsz	??_main+2,f
  7350  09B1  29AC               	goto	u4897
  7351  09B2  0000               	nop
  7352                           
  7353                           ;Multi_RX_testjig_v2.c: 609: LATC6 = 0;
  7354  09B3  0022               	movlb	2	; select bank2
  7355  09B4  130E               	bcf	14,6	;volatile
  7356                           
  7357                           ;Multi_RX_testjig_v2.c: 610: _delay((unsigned long)((4500)*(16000000/4000.0)));
  7358  09B5  305C               	movlw	92
  7359  09B6  0020               	movlb	0	; select bank0
  7360  09B7  00CB               	movwf	??_main+2
  7361  09B8  3051               	movlw	81
  7362  09B9  00CA               	movwf	??_main+1
  7363  09BA  30BA               	movlw	186
  7364  09BB  00C9               	movwf	??_main
  7365  09BC                     u4907:	
  7366  09BC  0BC9               	decfsz	??_main,f
  7367  09BD  29BC               	goto	u4907
  7368  09BE  0BCA               	decfsz	??_main+1,f
  7369  09BF  29BC               	goto	u4907
  7370  09C0  0BCB               	decfsz	??_main+2,f
  7371  09C1  29BC               	goto	u4907
  7372  09C2  0000               	nop
  7373                           
  7374                           ;Multi_RX_testjig_v2.c: 611: LATC2 = 0;
  7375  09C3  0022               	movlb	2	; select bank2
  7376  09C4  110E               	bcf	14,2	;volatile
  7377                           
  7378                           ;Multi_RX_testjig_v2.c: 612: LATC7 = 0;
  7379  09C5  138E               	bcf	14,7	;volatile
  7380                           
  7381                           ;Multi_RX_testjig_v2.c: 613: _delay((unsigned long)((100)*(16000000/4000.0)));
  7382  09C6  3003               	movlw	3
  7383  09C7  0020               	movlb	0	; select bank0
  7384  09C8  00CB               	movwf	??_main+2
  7385  09C9  3008               	movlw	8
  7386  09CA  00CA               	movwf	??_main+1
  7387  09CB  3078               	movlw	120
  7388  09CC  00C9               	movwf	??_main
  7389  09CD                     u4917:	
  7390  09CD  0BC9               	decfsz	??_main,f
  7391  09CE  29CD               	goto	u4917
  7392  09CF  0BCA               	decfsz	??_main+1,f
  7393  09D0  29CD               	goto	u4917
  7394  09D1  0BCB               	decfsz	??_main+2,f
  7395  09D2  29CD               	goto	u4917
  7396                           
  7397                           ;Multi_RX_testjig_v2.c: 620: }
  7398  09D3  29ED               	goto	l3791
  7399  09D4                     l3787:	
  7400                           
  7401                           ;Multi_RX_testjig_v2.c: 621: else
  7402                           ;Multi_RX_testjig_v2.c: 622: {
  7403                           ;Multi_RX_testjig_v2.c: 623: print_screen("Pickit Programming", " skipped");
  7404  09D4  3013               	movlw	low (STR_27| (0+32768))
  7405  09D5  00F4               	movwf	print_screen@top
  7406  09D6  3090               	movlw	high (STR_27| (0+32768))
  7407  09D7  00F5               	movwf	print_screen@top+1
  7408  09D8  3055               	movlw	low (STR_32| (0+32768))
  7409  09D9  00F6               	movwf	print_screen@bottom
  7410  09DA  3093               	movlw	high (STR_32| (0+32768))
  7411  09DB  00F7               	movwf	print_screen@bottom+1
  7412  09DC  3182  22D6  3188   	fcall	_print_screen
  7413                           
  7414                           ;Multi_RX_testjig_v2.c: 624: _delay((unsigned long)((300)*(16000000/4000.0)));
  7415  09DF  3007               	movlw	7
  7416  09E0  0020               	movlb	0	; select bank0
  7417  09E1  00CB               	movwf	??_main+2
  7418  09E2  3017               	movlw	23
  7419  09E3  00CA               	movwf	??_main+1
  7420  09E4  306F               	movlw	111
  7421  09E5  00C9               	movwf	??_main
  7422  09E6                     u4927:	
  7423  09E6  0BC9               	decfsz	??_main,f
  7424  09E7  29E6               	goto	u4927
  7425  09E8  0BCA               	decfsz	??_main+1,f
  7426  09E9  29E6               	goto	u4927
  7427  09EA  0BCB               	decfsz	??_main+2,f
  7428  09EB  29E6               	goto	u4927
  7429  09EC  0000               	nop
  7430  09ED                     l3791:	
  7431                           
  7432                           ;Multi_RX_testjig_v2.c: 625: }
  7433                           ;Multi_RX_testjig_v2.c: 640: LATF4 = 0;
  7434  09ED  0027               	movlb	7	; select bank7
  7435  09EE  120C               	bcf	12,4	;volatile
  7436                           
  7437                           ;Multi_RX_testjig_v2.c: 641: _delay((unsigned long)((100)*(16000000/4000.0)));
  7438  09EF  3003               	movlw	3
  7439  09F0  0020               	movlb	0	; select bank0
  7440  09F1  00CB               	movwf	??_main+2
  7441  09F2  3008               	movlw	8
  7442  09F3  00CA               	movwf	??_main+1
  7443  09F4  3078               	movlw	120
  7444  09F5  00C9               	movwf	??_main
  7445  09F6                     u4937:	
  7446  09F6  0BC9               	decfsz	??_main,f
  7447  09F7  29F6               	goto	u4937
  7448  09F8  0BCA               	decfsz	??_main+1,f
  7449  09F9  29F6               	goto	u4937
  7450  09FA  0BCB               	decfsz	??_main+2,f
  7451  09FB  29F6               	goto	u4937
  7452                           
  7453                           ;Multi_RX_testjig_v2.c: 642: LATF4 = 1;
  7454  09FC  0027               	movlb	7	; select bank7
  7455  09FD  160C               	bsf	12,4	;volatile
  7456                           
  7457                           ;Multi_RX_testjig_v2.c: 643: _delay((unsigned long)((100)*(16000000/4000.0)));
  7458  09FE  3003               	movlw	3
  7459  09FF  0020               	movlb	0	; select bank0
  7460  0A00  00CB               	movwf	??_main+2
  7461  0A01  3008               	movlw	8
  7462  0A02  00CA               	movwf	??_main+1
  7463  0A03  3078               	movlw	120
  7464  0A04  00C9               	movwf	??_main
  7465  0A05                     u4947:	
  7466  0A05  0BC9               	decfsz	??_main,f
  7467  0A06  2A05               	goto	u4947
  7468  0A07  0BCA               	decfsz	??_main+1,f
  7469  0A08  2A05               	goto	u4947
  7470  0A09  0BCB               	decfsz	??_main+2,f
  7471  0A0A  2A05               	goto	u4947
  7472                           
  7473                           ;Multi_RX_testjig_v2.c: 644: LATF4 = 0;
  7474  0A0B  0027               	movlb	7	; select bank7
  7475  0A0C  120C               	bcf	12,4	;volatile
  7476                           
  7477                           ;Multi_RX_testjig_v2.c: 645: print_screen("Establishing", "comms");
  7478  0A0D  3008               	movlw	low (STR_33| (0+32768))
  7479  0A0E  00F4               	movwf	print_screen@top
  7480  0A0F  3092               	movlw	high (STR_33| (0+32768))
  7481  0A10  00F5               	movwf	print_screen@top+1
  7482  0A11  30AC               	movlw	low ((STR_162+5)| (0+32768))
  7483  0A12  00F6               	movwf	print_screen@bottom
  7484  0A13  3092               	movlw	high ((STR_162+5)| (0+32768))
  7485  0A14  00F7               	movwf	print_screen@bottom+1
  7486  0A15  3182  22D6  3188   	fcall	_print_screen
  7487                           
  7488                           ;Multi_RX_testjig_v2.c: 646: unsigned char device_type;
  7489                           ;Multi_RX_testjig_v2.c: 647: unsigned char RX_data = 0;
  7490  0A18  0020               	movlb	0	; select bank0
  7491  0A19  3000               	movlw	0
  7492  0A1A  01D2               	clrf	main@RX_data
  7493  0A1B  01D0               	clrf	main@i
  7494  0A1C  01D1               	clrf	main@i+1
  7495  0A1D  2A51               	goto	L9
  7496  0A1E                     l3813:	
  7497  0A1E  30A1               	movlw	161
  7498  0A1F  0653               	xorwf	main@device_type,w
  7499  0A20  1903               	btfsc	3,2
  7500  0A21  2A63               	goto	l3825
  7501  0A22  30A2               	movlw	162
  7502  0A23  0653               	xorwf	main@device_type,w
  7503  0A24  1903               	btfsc	3,2
  7504  0A25  2A63               	goto	l3825
  7505                           
  7506                           ;Multi_RX_testjig_v2.c: 655: lcd_print_int(i, 11, 0, 0);
  7507  0A26  0851               	movf	main@i+1,w
  7508  0A27  00A1               	movwf	lcd_print_int@number+1
  7509  0A28  0850               	movf	main@i,w
  7510  0A29  00A0               	movwf	lcd_print_int@number
  7511  0A2A  300B               	movlw	11
  7512  0A2B  00A2               	movwf	lcd_print_int@pos
  7513  0A2C  01A3               	clrf	lcd_print_int@pos+1
  7514  0A2D  01A4               	clrf	lcd_print_int@decimal
  7515  0A2E  01A5               	clrf	lcd_print_int@ten_thou_digit
  7516  0A2F  3181  2101  3188   	fcall	_lcd_print_int
  7517                           
  7518                           ;Multi_RX_testjig_v2.c: 656: lcd_print_int(device_type, 5, 0, 0);
  7519  0A32  0020               	movlb	0	; select bank0
  7520  0A33  0853               	movf	main@device_type,w
  7521  0A34  00A0               	movwf	lcd_print_int@number
  7522  0A35  3005               	movlw	5
  7523  0A36  01A1               	clrf	lcd_print_int@number+1
  7524  0A37  00A2               	movwf	lcd_print_int@pos
  7525  0A38  01A3               	clrf	lcd_print_int@pos+1
  7526  0A39  01A4               	clrf	lcd_print_int@decimal
  7527  0A3A  01A5               	clrf	lcd_print_int@ten_thou_digit
  7528  0A3B  3181  2101  3188   	fcall	_lcd_print_int
  7529                           
  7530                           ;Multi_RX_testjig_v2.c: 657: _delay((unsigned long)((50)*(16000000/4000.0)));
  7531  0A3E  3002               	movlw	2
  7532  0A3F  0020               	movlb	0	; select bank0
  7533  0A40  00CB               	movwf	??_main+2
  7534  0A41  3004               	movlw	4
  7535  0A42  00CA               	movwf	??_main+1
  7536  0A43  30BA               	movlw	186
  7537  0A44  00C9               	movwf	??_main
  7538  0A45                     u4957:	
  7539  0A45  0BC9               	decfsz	??_main,f
  7540  0A46  2A45               	goto	u4957
  7541  0A47  0BCA               	decfsz	??_main+1,f
  7542  0A48  2A45               	goto	u4957
  7543  0A49  0BCB               	decfsz	??_main+2,f
  7544  0A4A  2A45               	goto	u4957
  7545  0A4B  0000               	nop
  7546  0A4C  0020               	movlb	0	; select bank0
  7547  0A4D  0AD0               	incf	main@i,f
  7548  0A4E  1903               	skipnz
  7549  0A4F  0AD1               	incf	main@i+1,f
  7550  0A50  3000               	movlw	0
  7551  0A51                     L9:	
  7552  0A51  0251               	subwf	main@i+1,w
  7553  0A52  3064               	movlw	100
  7554  0A53  1903               	skipnz
  7555  0A54  0250               	subwf	main@i,w
  7556  0A55  1803               	btfsc	3,0
  7557  0A56  2A63               	goto	l3825
  7558                           
  7559                           ;Multi_RX_testjig_v2.c: 650: {
  7560                           ;Multi_RX_testjig_v2.c: 651: TX_one(0x01);
  7561  0A57  3001               	movlw	1
  7562  0A58  3188  2086  3188   	fcall	_TX_one
  7563                           
  7564                           ;Multi_RX_testjig_v2.c: 652: device_type = RX_one_timeout();
  7565  0A5B  3187  277F  3188   	fcall	_RX_one_timeout
  7566  0A5E  0020               	movlb	0	; select bank0
  7567  0A5F  00D3               	movwf	main@device_type
  7568                           
  7569                           ;Multi_RX_testjig_v2.c: 653: if((device_type == 0xAA) || (device_type == 0xA1) || (devic
      +                          e_type == 0xA2))
  7570  0A60  3AAA               	xorlw	170
  7571  0A61  1D03               	btfss	3,2
  7572  0A62  2A1E               	goto	l3813
  7573  0A63                     l3825:	
  7574                           
  7575                           ;Multi_RX_testjig_v2.c: 658: }
  7576                           ;Multi_RX_testjig_v2.c: 659: if(i >= 10)
  7577  0A63  3000               	movlw	0
  7578  0A64  0251               	subwf	main@i+1,w
  7579  0A65  300A               	movlw	10
  7580  0A66  1903               	skipnz
  7581  0A67  0250               	subwf	main@i,w
  7582  0A68  1C03               	skipc
  7583  0A69  2A76               	goto	l3829
  7584                           
  7585                           ;Multi_RX_testjig_v2.c: 660: {
  7586                           ;Multi_RX_testjig_v2.c: 663: print_error("Comms Error", " 1");
  7587  0A6A  3078               	movlw	low (STR_35| (0+32768))
  7588  0A6B  00F8               	movwf	print_error@top
  7589  0A6C  3092               	movlw	high (STR_35| (0+32768))
  7590  0A6D  00F9               	movwf	print_error@top+1
  7591  0A6E  3013               	movlw	low ((STR_62+6)| (0+32768))
  7592  0A6F  00FA               	movwf	print_error@bottom
  7593  0A70  3093               	movlw	high ((STR_62+6)| (0+32768))
  7594  0A71  00FB               	movwf	print_error@bottom+1
  7595  0A72  3182  22F8  3188   	fcall	_print_error
  7596                           
  7597                           ;Multi_RX_testjig_v2.c: 664: }
  7598  0A75  2A9C               	goto	l3833
  7599  0A76                     l3829:	
  7600                           
  7601                           ;Multi_RX_testjig_v2.c: 665: else
  7602                           ;Multi_RX_testjig_v2.c: 666: {
  7603                           ;Multi_RX_testjig_v2.c: 667: lcd_print_int(i, 11, 0, 0);
  7604  0A76  0851               	movf	main@i+1,w
  7605  0A77  00A1               	movwf	lcd_print_int@number+1
  7606  0A78  0850               	movf	main@i,w
  7607  0A79  00A0               	movwf	lcd_print_int@number
  7608  0A7A  300B               	movlw	11
  7609  0A7B  00A2               	movwf	lcd_print_int@pos
  7610  0A7C  01A3               	clrf	lcd_print_int@pos+1
  7611  0A7D  01A4               	clrf	lcd_print_int@decimal
  7612  0A7E  01A5               	clrf	lcd_print_int@ten_thou_digit
  7613  0A7F  3181  2101  3188   	fcall	_lcd_print_int
  7614                           
  7615                           ;Multi_RX_testjig_v2.c: 668: lcd_print_int(device_type, 5, 0, 0);
  7616  0A82  0020               	movlb	0	; select bank0
  7617  0A83  0853               	movf	main@device_type,w
  7618  0A84  00A0               	movwf	lcd_print_int@number
  7619  0A85  3005               	movlw	5
  7620  0A86  01A1               	clrf	lcd_print_int@number+1
  7621  0A87  00A2               	movwf	lcd_print_int@pos
  7622  0A88  01A3               	clrf	lcd_print_int@pos+1
  7623  0A89  01A4               	clrf	lcd_print_int@decimal
  7624  0A8A  01A5               	clrf	lcd_print_int@ten_thou_digit
  7625  0A8B  3181  2101  3188   	fcall	_lcd_print_int
  7626                           
  7627                           ;Multi_RX_testjig_v2.c: 669: _delay((unsigned long)((50)*(16000000/4000.0)));
  7628  0A8E  3002               	movlw	2
  7629  0A8F  0020               	movlb	0	; select bank0
  7630  0A90  00CB               	movwf	??_main+2
  7631  0A91  3004               	movlw	4
  7632  0A92  00CA               	movwf	??_main+1
  7633  0A93  30BA               	movlw	186
  7634  0A94  00C9               	movwf	??_main
  7635  0A95                     u4967:	
  7636  0A95  0BC9               	decfsz	??_main,f
  7637  0A96  2A95               	goto	u4967
  7638  0A97  0BCA               	decfsz	??_main+1,f
  7639  0A98  2A95               	goto	u4967
  7640  0A99  0BCB               	decfsz	??_main+2,f
  7641  0A9A  2A95               	goto	u4967
  7642  0A9B  0000               	nop
  7643  0A9C                     l3833:	
  7644                           
  7645                           ;Multi_RX_testjig_v2.c: 670: }
  7646                           ;Multi_RX_testjig_v2.c: 672: if((device_type == 0xAA)|| (device_type == 0xA2))
  7647  0A9C  30AA               	movlw	170
  7648  0A9D  0020               	movlb	0	; select bank0
  7649  0A9E  0653               	xorwf	main@device_type,w
  7650  0A9F  1903               	btfsc	3,2
  7651  0AA0  2AA5               	goto	l3837
  7652  0AA1  30A2               	movlw	162
  7653  0AA2  0653               	xorwf	main@device_type,w
  7654  0AA3  1D03               	btfss	3,2
  7655  0AA4  2B17               	goto	l3875
  7656  0AA5                     l3837:	
  7657                           
  7658                           ;Multi_RX_testjig_v2.c: 673: {
  7659                           ;Multi_RX_testjig_v2.c: 675: print_screen("Testing ", "EEPROM read/write");
  7660  0AA5  3004               	movlw	low (STR_37| (0+32768))
  7661  0AA6  00F4               	movwf	print_screen@top
  7662  0AA7  3093               	movlw	high (STR_37| (0+32768))
  7663  0AA8  00F5               	movwf	print_screen@top+1
  7664  0AA9  3026               	movlw	low (STR_38| (0+32768))
  7665  0AAA  00F6               	movwf	print_screen@bottom
  7666  0AAB  3090               	movlw	high (STR_38| (0+32768))
  7667  0AAC  00F7               	movwf	print_screen@bottom+1
  7668  0AAD  3182  22D6  3188   	fcall	_print_screen
  7669                           
  7670                           ;Multi_RX_testjig_v2.c: 676: TX_one(0x10);
  7671  0AB0  3010               	movlw	16
  7672  0AB1  3188  2086  3188   	fcall	_TX_one
  7673                           
  7674                           ;Multi_RX_testjig_v2.c: 677: RX_data = RX_one();
  7675  0AB4  3187  27D6  3188   	fcall	_RX_one
  7676  0AB7  0020               	movlb	0	; select bank0
  7677  0AB8  00D2               	movwf	main@RX_data
  7678                           
  7679                           ;Multi_RX_testjig_v2.c: 678: if(RX_data == 0xEE)
  7680  0AB9  3AEE               	xorlw	238
  7681  0ABA  1D03               	btfss	3,2
  7682  0ABB  2AC4               	goto	l3847
  7683                           
  7684                           ;Multi_RX_testjig_v2.c: 679: print_error("EEPROM error", " Read/Write");
  7685  0ABC  3015               	movlw	low (STR_39| (0+32768))
  7686  0ABD  00F8               	movwf	print_error@top
  7687  0ABE  3092               	movlw	high (STR_39| (0+32768))
  7688  0ABF  00F9               	movwf	print_error@top+1
  7689  0AC0  3048               	movlw	low (STR_40| (0+32768))
  7690  0AC1  00FA               	movwf	print_error@bottom
  7691  0AC2  3092               	movlw	high (STR_40| (0+32768))
  7692  0AC3  2ACF               	goto	L2
  7693  0AC4                     l3847:	
  7694                           
  7695                           ;Multi_RX_testjig_v2.c: 680: else if(RX_data != 0x1A)
  7696  0AC4  301A               	movlw	26
  7697  0AC5  0652               	xorwf	main@RX_data,w
  7698  0AC6  1903               	btfsc	3,2
  7699  0AC7  2AD3               	goto	l346
  7700                           
  7701                           ;Multi_RX_testjig_v2.c: 681: print_error("Comms Error", " 2");
  7702  0AC8  3078               	movlw	low (STR_35| (0+32768))
  7703  0AC9  00F8               	movwf	print_error@top
  7704  0ACA  3092               	movlw	high (STR_35| (0+32768))
  7705  0ACB  00F9               	movwf	print_error@top+1
  7706  0ACC  301C               	movlw	low ((STR_54+6)| (0+32768))
  7707  0ACD  00FA               	movwf	print_error@bottom
  7708  0ACE  3093               	movlw	high ((STR_54+6)| (0+32768))
  7709  0ACF                     L2:	
  7710  0ACF  00FB               	movwf	print_error@bottom+1
  7711  0AD0  3182  22F8  3188   	fcall	_print_error
  7712  0AD3                     l346:	
  7713                           
  7714                           ;Multi_RX_testjig_v2.c: 684: unsigned int mem_size;
  7715                           ;Multi_RX_testjig_v2.c: 685: print_screen("Test EEPROM ", " size");
  7716  0AD3  30BA               	movlw	low (STR_43| (0+32768))
  7717  0AD4  00F4               	movwf	print_screen@top
  7718  0AD5  3091               	movlw	high (STR_43| (0+32768))
  7719  0AD6  00F5               	movwf	print_screen@top+1
  7720  0AD7  305A               	movlw	low ((STR_45+6)| (0+32768))
  7721  0AD8  00F6               	movwf	print_screen@bottom
  7722  0AD9  3092               	movlw	high ((STR_45+6)| (0+32768))
  7723  0ADA  00F7               	movwf	print_screen@bottom+1
  7724  0ADB  3182  22D6  3188   	fcall	_print_screen
  7725                           
  7726                           ;Multi_RX_testjig_v2.c: 686: TX_one(0x20);
  7727  0ADE  3020               	movlw	32
  7728  0ADF  3188  2086  3188   	fcall	_TX_one
  7729                           
  7730                           ;Multi_RX_testjig_v2.c: 687: RX_data = RX_one();
  7731  0AE2  3187  27D6  3188   	fcall	_RX_one
  7732  0AE5  0020               	movlb	0	; select bank0
  7733  0AE6  00D2               	movwf	main@RX_data
  7734                           
  7735                           ;Multi_RX_testjig_v2.c: 688: mem_size = RX_data<<8;
  7736  0AE7  00CF               	movwf	main@mem_size+1
  7737  0AE8  3021               	movlw	33
  7738  0AE9  01CE               	clrf	main@mem_size
  7739                           
  7740                           ;Multi_RX_testjig_v2.c: 689: TX_one(0x21);
  7741  0AEA  3188  2086  3188   	fcall	_TX_one
  7742                           
  7743                           ;Multi_RX_testjig_v2.c: 690: RX_data = RX_one();
  7744  0AED  3187  27D6  3188   	fcall	_RX_one
  7745  0AF0  0020               	movlb	0	; select bank0
  7746  0AF1  00D2               	movwf	main@RX_data
  7747                           
  7748                           ;Multi_RX_testjig_v2.c: 691: mem_size = mem_size | RX_data;
  7749  0AF2  04CE               	iorwf	main@mem_size,f
  7750                           
  7751                           ;Multi_RX_testjig_v2.c: 692: if(device_type == 0xAA)
  7752  0AF3  30AA               	movlw	170
  7753  0AF4  0653               	xorwf	main@device_type,w
  7754  0AF5  1D03               	btfss	3,2
  7755  0AF6  2B04               	goto	l3869
  7756                           
  7757                           ;Multi_RX_testjig_v2.c: 693: {
  7758                           ;Multi_RX_testjig_v2.c: 694: if(mem_size != 0x2000)
  7759  0AF7  3020               	movlw	32
  7760  0AF8  064F               	xorwf	main@mem_size+1,w
  7761  0AF9  044E               	iorwf	main@mem_size,w
  7762  0AFA  1903               	btfsc	3,2
  7763  0AFB  2B17               	goto	l3875
  7764                           
  7765                           ;Multi_RX_testjig_v2.c: 695: print_error("EEPROM size", " Error Condo3");
  7766  0AFC  3054               	movlw	low (STR_45| (0+32768))
  7767  0AFD  00F8               	movwf	print_error@top
  7768  0AFE  3092               	movlw	high (STR_45| (0+32768))
  7769  0AFF  00F9               	movwf	print_error@top+1
  7770  0B00  3058               	movlw	low (STR_46| (0+32768))
  7771  0B01  00FA               	movwf	print_error@bottom
  7772  0B02  3091               	movlw	high (STR_46| (0+32768))
  7773  0B03  2B13               	goto	L10
  7774  0B04                     l3869:	
  7775                           
  7776                           ;Multi_RX_testjig_v2.c: 697: else if(device_type == 0xA2)
  7777  0B04  30A2               	movlw	162
  7778  0B05  0653               	xorwf	main@device_type,w
  7779  0B06  1D03               	btfss	3,2
  7780  0B07  2B17               	goto	l3875
  7781                           
  7782                           ;Multi_RX_testjig_v2.c: 698: {
  7783                           ;Multi_RX_testjig_v2.c: 699: if(mem_size != 0x0000)
  7784  0B08  084E               	movf	main@mem_size,w
  7785  0B09  044F               	iorwf	main@mem_size+1,w
  7786  0B0A  1903               	btfsc	3,2
  7787  0B0B  2B17               	goto	l3875
  7788                           
  7789                           ;Multi_RX_testjig_v2.c: 700: print_error("EEPROM size", " Error Mem_copier");
  7790  0B0C  3054               	movlw	low (STR_45| (0+32768))
  7791  0B0D  00F8               	movwf	print_error@top
  7792  0B0E  3092               	movlw	high (STR_45| (0+32768))
  7793  0B0F  00F9               	movwf	print_error@top+1
  7794  0B10  3038               	movlw	low (STR_48| (0+32768))
  7795  0B11  00FA               	movwf	print_error@bottom
  7796  0B12  3090               	movlw	high (STR_48| (0+32768))
  7797  0B13                     L10:	
  7798  0B13  00FB               	movwf	print_error@bottom+1
  7799  0B14  3182  22F8  3188   	fcall	_print_error
  7800  0B17                     l3875:	
  7801                           
  7802                           ;Multi_RX_testjig_v2.c: 701: }
  7803                           ;Multi_RX_testjig_v2.c: 702: }
  7804                           ;Multi_RX_testjig_v2.c: 704: if((device_type == 0xAA)|| (device_type == 0xA1))
  7805  0B17  30AA               	movlw	170
  7806  0B18  0020               	movlb	0	; select bank0
  7807  0B19  0653               	xorwf	main@device_type,w
  7808  0B1A  1903               	btfsc	3,2
  7809  0B1B  2B20               	goto	l3879
  7810  0B1C  30A1               	movlw	161
  7811  0B1D  0653               	xorwf	main@device_type,w
  7812  0B1E  1D03               	btfss	3,2
  7813  0B1F  2BA4               	goto	l3913
  7814  0B20                     l3879:	
  7815                           
  7816                           ;Multi_RX_testjig_v2.c: 705: {
  7817                           ;Multi_RX_testjig_v2.c: 707: Vout_set(12);
  7818  0B20  300C               	movlw	12
  7819  0B21  00F4               	movwf	Vout_set@Volts
  7820  0B22  01F5               	clrf	Vout_set@Volts+1
  7821  0B23  3180  20B0  3188   	fcall	_Vout_set
  7822                           
  7823                           ;Multi_RX_testjig_v2.c: 708: print_screen("Test Relay", "");
  7824  0B26  30B2               	movlw	low (STR_49| (0+32768))
  7825  0B27  00F4               	movwf	print_screen@top
  7826  0B28  3092               	movlw	high (STR_49| (0+32768))
  7827  0B29  00F5               	movwf	print_screen@top+1
  7828  0B2A  30AE               	movlw	low ((STR_159+15)| (0+32768))
  7829  0B2B  00F6               	movwf	print_screen@bottom
  7830  0B2C  3090               	movlw	high ((STR_159+15)| (0+32768))
  7831  0B2D  00F7               	movwf	print_screen@bottom+1
  7832  0B2E  3182  22D6  3188   	fcall	_print_screen
  7833                           
  7834                           ;Multi_RX_testjig_v2.c: 709: if(RF5 == 0 && RF2 == 1)
  7835  0B31  0025               	movlb	5	; select bank5
  7836  0B32  1E8C               	btfss	12,5	;volatile
  7837  0B33  1D0C               	btfss	12,2	;volatile
  7838  0B34  2B99               	goto	l3911
  7839                           
  7840                           ;Multi_RX_testjig_v2.c: 710: {
  7841                           ;Multi_RX_testjig_v2.c: 711: TX_one(0x30);
  7842  0B35  3030               	movlw	48
  7843  0B36  3188  2086  3188   	fcall	_TX_one
  7844                           
  7845                           ;Multi_RX_testjig_v2.c: 712: if(RX_one() == 0x3A)
  7846  0B39  3187  27D6  3188   	fcall	_RX_one
  7847  0B3C  3A3A               	xorlw	58
  7848  0B3D  1D03               	skipz
  7849  0B3E  2B91               	goto	l3909
  7850                           
  7851                           ;Multi_RX_testjig_v2.c: 713: {
  7852                           ;Multi_RX_testjig_v2.c: 714: _delay((unsigned long)((50)*(16000000/4000.0)));
  7853  0B3F  3002               	movlw	2
  7854  0B40  0020               	movlb	0	; select bank0
  7855  0B41  00CB               	movwf	??_main+2
  7856  0B42  3004               	movlw	4
  7857  0B43  00CA               	movwf	??_main+1
  7858  0B44  30BA               	movlw	186
  7859  0B45  00C9               	movwf	??_main
  7860  0B46                     u4977:	
  7861  0B46  0BC9               	decfsz	??_main,f
  7862  0B47  2B46               	goto	u4977
  7863  0B48  0BCA               	decfsz	??_main+1,f
  7864  0B49  2B46               	goto	u4977
  7865  0B4A  0BCB               	decfsz	??_main+2,f
  7866  0B4B  2B46               	goto	u4977
  7867  0B4C  0000               	nop
  7868                           
  7869                           ;Multi_RX_testjig_v2.c: 715: if(RF5 == 1 && RF2 == 0)
  7870  0B4D  0025               	movlb	5	; select bank5
  7871  0B4E  1A8C               	btfsc	12,5	;volatile
  7872  0B4F  190C               	btfsc	12,2	;volatile
  7873  0B50  2B89               	goto	l3907
  7874                           
  7875                           ;Multi_RX_testjig_v2.c: 716: {
  7876                           ;Multi_RX_testjig_v2.c: 717: TX_one(0x31);
  7877  0B51  3031               	movlw	49
  7878  0B52  3188  2086  3188   	fcall	_TX_one
  7879                           
  7880                           ;Multi_RX_testjig_v2.c: 718: if(RX_one() == 0x3A)
  7881  0B55  3187  27D6  3188   	fcall	_RX_one
  7882  0B58  3A3A               	xorlw	58
  7883  0B59  1D03               	skipz
  7884  0B5A  2B81               	goto	l3905
  7885                           
  7886                           ;Multi_RX_testjig_v2.c: 719: {
  7887                           ;Multi_RX_testjig_v2.c: 720: _delay((unsigned long)((50)*(16000000/4000.0)));
  7888  0B5B  3002               	movlw	2
  7889  0B5C  0020               	movlb	0	; select bank0
  7890  0B5D  00CB               	movwf	??_main+2
  7891  0B5E  3004               	movlw	4
  7892  0B5F  00CA               	movwf	??_main+1
  7893  0B60  30BA               	movlw	186
  7894  0B61  00C9               	movwf	??_main
  7895  0B62                     u4987:	
  7896  0B62  0BC9               	decfsz	??_main,f
  7897  0B63  2B62               	goto	u4987
  7898  0B64  0BCA               	decfsz	??_main+1,f
  7899  0B65  2B62               	goto	u4987
  7900  0B66  0BCB               	decfsz	??_main+2,f
  7901  0B67  2B62               	goto	u4987
  7902  0B68  0000               	nop
  7903                           
  7904                           ;Multi_RX_testjig_v2.c: 721: if(RF5 == 0 && RF2 == 1)
  7905  0B69  0025               	movlb	5	; select bank5
  7906  0B6A  1E8C               	btfss	12,5	;volatile
  7907  0B6B  1D0C               	btfss	12,2	;volatile
  7908  0B6C  2B79               	goto	l3903
  7909                           
  7910                           ;Multi_RX_testjig_v2.c: 722: {
  7911                           ;Multi_RX_testjig_v2.c: 723: print_screen("Test Relay", "Pass");
  7912  0B6D  30B2               	movlw	low (STR_49| (0+32768))
  7913  0B6E  00F4               	movwf	print_screen@top
  7914  0B6F  3092               	movlw	high (STR_49| (0+32768))
  7915  0B70  00F5               	movwf	print_screen@top+1
  7916  0B71  3062               	movlw	low ((STR_165+4)| (0+32768))
  7917  0B72  00F6               	movwf	print_screen@bottom
  7918  0B73  3093               	movlw	high ((STR_165+4)| (0+32768))
  7919  0B74  00F7               	movwf	print_screen@bottom+1
  7920  0B75  3182  22D6  3188   	fcall	_print_screen
  7921                           
  7922                           ;Multi_RX_testjig_v2.c: 724: }
  7923  0B78  2BA4               	goto	l3913
  7924  0B79                     l3903:	
  7925                           
  7926                           ;Multi_RX_testjig_v2.c: 725: else
  7927                           ;Multi_RX_testjig_v2.c: 726: print_error("Relay de-energized", " Error 2");
  7928  0B79  3000               	movlw	low (STR_53| (0+32768))
  7929  0B7A  00F8               	movwf	print_error@top
  7930  0B7B  3090               	movlw	high (STR_53| (0+32768))
  7931  0B7C  00F9               	movwf	print_error@top+1
  7932  0B7D  3016               	movlw	low (STR_54| (0+32768))
  7933  0B7E  00FA               	movwf	print_error@bottom
  7934  0B7F  3093               	movlw	high (STR_54| (0+32768))
  7935  0B80  2BA0               	goto	L3
  7936  0B81                     l3905:	
  7937                           
  7938                           ;Multi_RX_testjig_v2.c: 728: else
  7939                           ;Multi_RX_testjig_v2.c: 729: print_error("Comms Error", " 3");
  7940  0B81  3078               	movlw	low (STR_35| (0+32768))
  7941  0B82  00F8               	movwf	print_error@top
  7942  0B83  3092               	movlw	high (STR_35| (0+32768))
  7943  0B84  00F9               	movwf	print_error@top+1
  7944  0B85  30B8               	movlw	low (STR_56| (0+32768))
  7945  0B86  00FA               	movwf	print_error@bottom
  7946  0B87  3093               	movlw	high (STR_56| (0+32768))
  7947  0B88  2BA0               	goto	L3
  7948  0B89                     l3907:	
  7949                           
  7950                           ;Multi_RX_testjig_v2.c: 731: else
  7951                           ;Multi_RX_testjig_v2.c: 732: print_error("Relay energized", " Error");
  7952  0B89  30BF               	movlw	low (STR_57| (0+32768))
  7953  0B8A  00F8               	movwf	print_error@top
  7954  0B8B  3090               	movlw	high (STR_57| (0+32768))
  7955  0B8C  00F9               	movwf	print_error@top+1
  7956  0B8D  30A0               	movlw	low ((STR_12+4)| (0+32768))
  7957  0B8E  00FA               	movwf	print_error@bottom
  7958  0B8F  3092               	movlw	high ((STR_12+4)| (0+32768))
  7959  0B90  2BA0               	goto	L3
  7960  0B91                     l3909:	
  7961                           
  7962                           ;Multi_RX_testjig_v2.c: 734: else
  7963                           ;Multi_RX_testjig_v2.c: 735: print_error("Comms Error", " 4");
  7964  0B91  3078               	movlw	low (STR_35| (0+32768))
  7965  0B92  00F8               	movwf	print_error@top
  7966  0B93  3092               	movlw	high (STR_35| (0+32768))
  7967  0B94  00F9               	movwf	print_error@top+1
  7968  0B95  30BB               	movlw	low (STR_60| (0+32768))
  7969  0B96  00FA               	movwf	print_error@bottom
  7970  0B97  3093               	movlw	high (STR_60| (0+32768))
  7971  0B98  2BA0               	goto	L3
  7972  0B99                     l3911:	
  7973                           
  7974                           ;Multi_RX_testjig_v2.c: 737: else
  7975                           ;Multi_RX_testjig_v2.c: 738: print_error("Relay de-energized", " Error 1");
  7976  0B99  3000               	movlw	low (STR_53| (0+32768))
  7977  0B9A  00F8               	movwf	print_error@top
  7978  0B9B  3090               	movlw	high (STR_53| (0+32768))
  7979  0B9C  00F9               	movwf	print_error@top+1
  7980  0B9D  300D               	movlw	low (STR_62| (0+32768))
  7981  0B9E  00FA               	movwf	print_error@bottom
  7982  0B9F  3093               	movlw	high (STR_62| (0+32768))
  7983  0BA0                     L3:	
  7984  0BA0  00FB               	movwf	print_error@bottom+1
  7985  0BA1  3182  22F8  3188   	fcall	_print_error
  7986  0BA4                     l3913:	
  7987                           
  7988                           ;Multi_RX_testjig_v2.c: 739: }
  7989                           ;Multi_RX_testjig_v2.c: 741: if((device_type == 0xAA)|| (device_type == 0xA1))
  7990  0BA4  30AA               	movlw	170
  7991  0BA5  0020               	movlb	0	; select bank0
  7992  0BA6  0653               	xorwf	main@device_type,w
  7993  0BA7  1903               	btfsc	3,2
  7994  0BA8  2BAD               	goto	l3917
  7995  0BA9  30A1               	movlw	161
  7996  0BAA  0653               	xorwf	main@device_type,w
  7997  0BAB  1D03               	btfss	3,2
  7998  0BAC  2DFA               	goto	l4085
  7999  0BAD                     l3917:	
  8000                           
  8001                           ;Multi_RX_testjig_v2.c: 742: {
  8002                           ;Multi_RX_testjig_v2.c: 744: Vout_set(15);
  8003  0BAD  300F               	movlw	15
  8004  0BAE  00F4               	movwf	Vout_set@Volts
  8005  0BAF  01F5               	clrf	Vout_set@Volts+1
  8006  0BB0  3180  20B0  3188   	fcall	_Vout_set
  8007                           
  8008                           ;Multi_RX_testjig_v2.c: 745: print_screen("Test CH2", "");
  8009  0BB3  301F               	movlw	low (STR_63| (0+32768))
  8010  0BB4  00F4               	movwf	print_screen@top
  8011  0BB5  3093               	movlw	high (STR_63| (0+32768))
  8012  0BB6  00F5               	movwf	print_screen@top+1
  8013  0BB7  30AE               	movlw	low ((STR_159+15)| (0+32768))
  8014  0BB8  00F6               	movwf	print_screen@bottom
  8015  0BB9  3090               	movlw	high ((STR_159+15)| (0+32768))
  8016  0BBA  00F7               	movwf	print_screen@bottom+1
  8017  0BBB  3182  22D6  3188   	fcall	_print_screen
  8018                           
  8019                           ;Multi_RX_testjig_v2.c: 746: TX_one(0x41);
  8020  0BBE  3041               	movlw	65
  8021  0BBF  3188  2086  3188   	fcall	_TX_one
  8022                           
  8023                           ;Multi_RX_testjig_v2.c: 747: if(RX_one() == 0x4A)
  8024  0BC2  3187  27D6  3188   	fcall	_RX_one
  8025  0BC5  3A4A               	xorlw	74
  8026  0BC6  1D03               	skipz
  8027  0BC7  2CCD               	goto	l4001
  8028                           
  8029                           ;Multi_RX_testjig_v2.c: 748: {
  8030                           ;Multi_RX_testjig_v2.c: 749: _delay((unsigned long)((10)*(16000000/4000.0)));
  8031  0BC8  3034               	movlw	52
  8032  0BC9  0020               	movlb	0	; select bank0
  8033  0BCA  00CA               	movwf	??_main+1
  8034  0BCB  30F1               	movlw	241
  8035  0BCC  00C9               	movwf	??_main
  8036  0BCD                     u4997:	
  8037  0BCD  0BC9               	decfsz	??_main,f
  8038  0BCE  2BCD               	goto	u4997
  8039  0BCF  0BCA               	decfsz	??_main+1,f
  8040  0BD0  2BCD               	goto	u4997
  8041  0BD1  3200               	nop2
  8042                           
  8043                           ;Multi_RX_testjig_v2.c: 750: if(RF1 == 1 && RF0 == 1)
  8044  0BD2  0025               	movlb	5	; select bank5
  8045  0BD3  188C               	btfsc	12,1	;volatile
  8046  0BD4  1C0C               	btfss	12,0	;volatile
  8047  0BD5  2CC5               	goto	l3999
  8048                           
  8049                           ;Multi_RX_testjig_v2.c: 751: {
  8050                           ;Multi_RX_testjig_v2.c: 752: TX_one(0x40);
  8051  0BD6  3040               	movlw	64
  8052  0BD7  3188  2086  3188   	fcall	_TX_one
  8053                           
  8054                           ;Multi_RX_testjig_v2.c: 753: if(RX_one() == 0x4A)
  8055  0BDA  3187  27D6  3188   	fcall	_RX_one
  8056  0BDD  3A4A               	xorlw	74
  8057  0BDE  1D03               	skipz
  8058  0BDF  2CBD               	goto	l3997
  8059                           
  8060                           ;Multi_RX_testjig_v2.c: 754: {
  8061                           ;Multi_RX_testjig_v2.c: 755: _delay((unsigned long)((10)*(16000000/4000.0)));
  8062  0BE0  3034               	movlw	52
  8063  0BE1  0020               	movlb	0	; select bank0
  8064  0BE2  00CA               	movwf	??_main+1
  8065  0BE3  30F1               	movlw	241
  8066  0BE4  00C9               	movwf	??_main
  8067  0BE5                     u5007:	
  8068  0BE5  0BC9               	decfsz	??_main,f
  8069  0BE6  2BE5               	goto	u5007
  8070  0BE7  0BCA               	decfsz	??_main+1,f
  8071  0BE8  2BE5               	goto	u5007
  8072  0BE9  3200               	nop2
  8073                           
  8074                           ;Multi_RX_testjig_v2.c: 756: if(RF1 == 0 && RF0 == 1)
  8075  0BEA  0025               	movlb	5	; select bank5
  8076  0BEB  1C8C               	btfss	12,1	;volatile
  8077  0BEC  1C0C               	btfss	12,0	;volatile
  8078  0BED  2CB5               	goto	l3995
  8079                           
  8080                           ;Multi_RX_testjig_v2.c: 757: {
  8081                           ;Multi_RX_testjig_v2.c: 758: TX_one(0x41);
  8082  0BEE  3041               	movlw	65
  8083  0BEF  3188  2086  3188   	fcall	_TX_one
  8084                           
  8085                           ;Multi_RX_testjig_v2.c: 759: if(RX_one() == 0x4A)
  8086  0BF2  3187  27D6  3188   	fcall	_RX_one
  8087  0BF5  3A4A               	xorlw	74
  8088  0BF6  1D03               	skipz
  8089  0BF7  2CAD               	goto	l3993
  8090                           
  8091                           ;Multi_RX_testjig_v2.c: 760: {
  8092                           ;Multi_RX_testjig_v2.c: 761: LATB5 = 1;
  8093  0BF8  0022               	movlb	2	; select bank2
  8094  0BF9  168D               	bsf	13,5	;volatile
  8095                           
  8096                           ;Multi_RX_testjig_v2.c: 762: _delay((unsigned long)((50)*(16000000/4000.0)));
  8097  0BFA  3002               	movlw	2
  8098  0BFB  0020               	movlb	0	; select bank0
  8099  0BFC  00CB               	movwf	??_main+2
  8100  0BFD  3004               	movlw	4
  8101  0BFE  00CA               	movwf	??_main+1
  8102  0BFF  30BA               	movlw	186
  8103  0C00  00C9               	movwf	??_main
  8104  0C01                     u5017:	
  8105  0C01  0BC9               	decfsz	??_main,f
  8106  0C02  2C01               	goto	u5017
  8107  0C03  0BCA               	decfsz	??_main+1,f
  8108  0C04  2C01               	goto	u5017
  8109  0C05  0BCB               	decfsz	??_main+2,f
  8110  0C06  2C01               	goto	u5017
  8111  0C07  0000               	nop
  8112                           
  8113                           ;Multi_RX_testjig_v2.c: 763: TX_one(0x40);
  8114  0C08  3040               	movlw	64
  8115  0C09  3188  2086  3188   	fcall	_TX_one
  8116                           
  8117                           ;Multi_RX_testjig_v2.c: 764: if(RX_one() == 0x4A)
  8118  0C0C  3187  27D6  3188   	fcall	_RX_one
  8119  0C0F  3A4A               	xorlw	74
  8120  0C10  1D03               	skipz
  8121  0C11  2CA5               	goto	l3991
  8122                           
  8123                           ;Multi_RX_testjig_v2.c: 765: {
  8124                           ;Multi_RX_testjig_v2.c: 766: _delay((unsigned long)((50)*(16000000/4000.0)));
  8125  0C12  3002               	movlw	2
  8126  0C13  0020               	movlb	0	; select bank0
  8127  0C14  00CB               	movwf	??_main+2
  8128  0C15  3004               	movlw	4
  8129  0C16  00CA               	movwf	??_main+1
  8130  0C17  30BA               	movlw	186
  8131  0C18  00C9               	movwf	??_main
  8132  0C19                     u5027:	
  8133  0C19  0BC9               	decfsz	??_main,f
  8134  0C1A  2C19               	goto	u5027
  8135  0C1B  0BCA               	decfsz	??_main+1,f
  8136  0C1C  2C19               	goto	u5027
  8137  0C1D  0BCB               	decfsz	??_main+2,f
  8138  0C1E  2C19               	goto	u5027
  8139  0C1F  0000               	nop
  8140                           
  8141                           ;Multi_RX_testjig_v2.c: 767: tj_timer = 1500;
  8142  0C20  30DC               	movlw	220
  8143  0C21  0020               	movlb	0	; select bank0
  8144  0C22  00E2               	movwf	_tj_timer
  8145  0C23  3005               	movlw	5
  8146  0C24  00E3               	movwf	_tj_timer+1
  8147  0C25  2C29               	goto	l3949
  8148  0C26                     l3951:	
  8149  0C26  0025               	movlb	5	; select bank5
  8150  0C27  188C               	btfsc	12,1	;volatile
  8151  0C28  2C2E               	goto	l379
  8152  0C29                     l3949:	
  8153                           ;Multi_RX_testjig_v2.c: 768: while(tj_timer && RF1 == 0);
  8154                           
  8155  0C29  0020               	movlb	0	; select bank0
  8156  0C2A  0862               	movf	_tj_timer,w
  8157  0C2B  0463               	iorwf	_tj_timer+1,w
  8158  0C2C  1D03               	btfss	3,2
  8159  0C2D  2C26               	goto	l3951
  8160  0C2E                     l379:	
  8161                           
  8162                           ;Multi_RX_testjig_v2.c: 769: if(RF1 == 1 && RF0 == 1)
  8163  0C2E  0025               	movlb	5	; select bank5
  8164  0C2F  188C               	btfsc	12,1	;volatile
  8165  0C30  1C0C               	btfss	12,0	;volatile
  8166  0C31  2C9A               	goto	l3987
  8167                           
  8168                           ;Multi_RX_testjig_v2.c: 770: {
  8169                           ;Multi_RX_testjig_v2.c: 771: LATB5 = 0;
  8170  0C32  0022               	movlb	2	; select bank2
  8171  0C33  128D               	bcf	13,5	;volatile
  8172                           
  8173                           ;Multi_RX_testjig_v2.c: 772: TX_one(0x41);
  8174  0C34  3041               	movlw	65
  8175  0C35  3188  2086  3188   	fcall	_TX_one
  8176                           
  8177                           ;Multi_RX_testjig_v2.c: 773: RX_one();
  8178  0C38  3187  27D6  3188   	fcall	_RX_one
  8179                           
  8180                           ;Multi_RX_testjig_v2.c: 774: _delay((unsigned long)((150)*(16000000/4000.0)));
  8181  0C3B  3004               	movlw	4
  8182  0C3C  0020               	movlb	0	; select bank0
  8183  0C3D  00CB               	movwf	??_main+2
  8184  0C3E  300C               	movlw	12
  8185  0C3F  00CA               	movwf	??_main+1
  8186  0C40  3035               	movlw	53
  8187  0C41  00C9               	movwf	??_main
  8188  0C42                     u5037:	
  8189  0C42  0BC9               	decfsz	??_main,f
  8190  0C43  2C42               	goto	u5037
  8191  0C44  0BCA               	decfsz	??_main+1,f
  8192  0C45  2C42               	goto	u5037
  8193  0C46  0BCB               	decfsz	??_main+2,f
  8194  0C47  2C42               	goto	u5037
  8195  0C48  3200               	nop2
  8196                           
  8197                           ;Multi_RX_testjig_v2.c: 775: TX_one(0x40);
  8198  0C49  3040               	movlw	64
  8199  0C4A  3188  2086  3188   	fcall	_TX_one
  8200                           
  8201                           ;Multi_RX_testjig_v2.c: 776: RX_one();
  8202  0C4D  3187  27D6  3188   	fcall	_RX_one
  8203                           
  8204                           ;Multi_RX_testjig_v2.c: 777: _delay((unsigned long)((20)*(16000000/4000.0)));
  8205  0C50  3068               	movlw	104
  8206  0C51  0020               	movlb	0	; select bank0
  8207  0C52  00CA               	movwf	??_main+1
  8208  0C53  30E4               	movlw	228
  8209  0C54  00C9               	movwf	??_main
  8210  0C55                     u5047:	
  8211  0C55  0BC9               	decfsz	??_main,f
  8212  0C56  2C55               	goto	u5047
  8213  0C57  0BCA               	decfsz	??_main+1,f
  8214  0C58  2C55               	goto	u5047
  8215  0C59  0000               	nop
  8216                           
  8217                           ;Multi_RX_testjig_v2.c: 778: if(RF1 == 0 && RF0 == 1)
  8218  0C5A  0025               	movlb	5	; select bank5
  8219  0C5B  1C8C               	btfss	12,1	;volatile
  8220  0C5C  1C0C               	btfss	12,0	;volatile
  8221  0C5D  2C92               	goto	l3985
  8222                           
  8223                           ;Multi_RX_testjig_v2.c: 779: {
  8224                           ;Multi_RX_testjig_v2.c: 780: TX_one(0x41);
  8225  0C5E  3041               	movlw	65
  8226  0C5F  3188  2086  3188   	fcall	_TX_one
  8227                           
  8228                           ;Multi_RX_testjig_v2.c: 781: if(RX_one() == 0x4A)
  8229  0C62  3187  27D6  3188   	fcall	_RX_one
  8230  0C65  3A4A               	xorlw	74
  8231  0C66  1D03               	skipz
  8232  0C67  2C8A               	goto	l3983
  8233                           
  8234                           ;Multi_RX_testjig_v2.c: 782: {
  8235                           ;Multi_RX_testjig_v2.c: 783: _delay((unsigned long)((10)*(16000000/4000.0)));
  8236  0C68  3034               	movlw	52
  8237  0C69  0020               	movlb	0	; select bank0
  8238  0C6A  00CA               	movwf	??_main+1
  8239  0C6B  30F1               	movlw	241
  8240  0C6C  00C9               	movwf	??_main
  8241  0C6D                     u5057:	
  8242  0C6D  0BC9               	decfsz	??_main,f
  8243  0C6E  2C6D               	goto	u5057
  8244  0C6F  0BCA               	decfsz	??_main+1,f
  8245  0C70  2C6D               	goto	u5057
  8246  0C71  3200               	nop2
  8247                           
  8248                           ;Multi_RX_testjig_v2.c: 784: if(RF1 == 1 && RF0 == 1)
  8249  0C72  0025               	movlb	5	; select bank5
  8250  0C73  188C               	btfsc	12,1	;volatile
  8251  0C74  1C0C               	btfss	12,0	;volatile
  8252  0C75  2C82               	goto	l3981
  8253                           
  8254                           ;Multi_RX_testjig_v2.c: 785: {
  8255                           ;Multi_RX_testjig_v2.c: 786: print_screen("Test CH2", "ok");
  8256  0C76  301F               	movlw	low (STR_63| (0+32768))
  8257  0C77  00F4               	movwf	print_screen@top
  8258  0C78  3093               	movlw	high (STR_63| (0+32768))
  8259  0C79  00F5               	movwf	print_screen@top+1
  8260  0C7A  30CD               	movlw	low (STR_66| (0+32768))
  8261  0C7B  00F6               	movwf	print_screen@bottom
  8262  0C7C  3093               	movlw	high (STR_66| (0+32768))
  8263  0C7D  00F7               	movwf	print_screen@bottom+1
  8264  0C7E  3182  22D6  3188   	fcall	_print_screen
  8265                           
  8266                           ;Multi_RX_testjig_v2.c: 787: }
  8267  0C81  2CD8               	goto	l393
  8268  0C82                     l3981:	
  8269                           
  8270                           ;Multi_RX_testjig_v2.c: 788: else
  8271                           ;Multi_RX_testjig_v2.c: 789: print_error("CH2 - OFF", " Error 2");
  8272  0C82  30DC               	movlw	low (STR_67| (0+32768))
  8273  0C83  00F8               	movwf	print_error@top
  8274  0C84  3092               	movlw	high (STR_67| (0+32768))
  8275  0C85  00F9               	movwf	print_error@top+1
  8276  0C86  3016               	movlw	low (STR_54| (0+32768))
  8277  0C87  00FA               	movwf	print_error@bottom
  8278  0C88  3093               	movlw	high (STR_54| (0+32768))
  8279  0C89  2CD4               	goto	L4
  8280  0C8A                     l3983:	
  8281                           
  8282                           ;Multi_RX_testjig_v2.c: 791: else
  8283                           ;Multi_RX_testjig_v2.c: 792: print_error("Comms Error", " 5");
  8284  0C8A  3078               	movlw	low (STR_35| (0+32768))
  8285  0C8B  00F8               	movwf	print_error@top
  8286  0C8C  3092               	movlw	high (STR_35| (0+32768))
  8287  0C8D  00F9               	movwf	print_error@top+1
  8288  0C8E  30BE               	movlw	low (STR_70| (0+32768))
  8289  0C8F  00FA               	movwf	print_error@bottom
  8290  0C90  3093               	movlw	high (STR_70| (0+32768))
  8291  0C91  2CD4               	goto	L4
  8292  0C92                     l3985:	
  8293                           
  8294                           ;Multi_RX_testjig_v2.c: 794: else
  8295                           ;Multi_RX_testjig_v2.c: 795: print_error("CH2 - ON", "PTC Error reset");
  8296  0C92  303A               	movlw	low (STR_71| (0+32768))
  8297  0C93  00F8               	movwf	print_error@top
  8298  0C94  3093               	movlw	high (STR_71| (0+32768))
  8299  0C95  00F9               	movwf	print_error@top+1
  8300  0C96  30EF               	movlw	low (STR_72| (0+32768))
  8301  0C97  00FA               	movwf	print_error@bottom
  8302  0C98  3090               	movlw	high (STR_72| (0+32768))
  8303  0C99  2CD4               	goto	L4
  8304  0C9A                     l3987:	
  8305                           
  8306                           ;Multi_RX_testjig_v2.c: 797: else
  8307                           ;Multi_RX_testjig_v2.c: 798: {
  8308                           ;Multi_RX_testjig_v2.c: 799: trip_current = get_30v_current();
  8309  0C9A  3184  2415  3188   	fcall	_get_30v_current
  8310                           
  8311                           ;Multi_RX_testjig_v2.c: 800: print_error("CH2 - ON", "PTC Error trip");
  8312  0C9D  303A               	movlw	low (STR_71| (0+32768))
  8313  0C9E  00F8               	movwf	print_error@top
  8314  0C9F  3093               	movlw	high (STR_71| (0+32768))
  8315  0CA0  00F9               	movwf	print_error@top+1
  8316  0CA1  302C               	movlw	low (STR_74| (0+32768))
  8317  0CA2  00FA               	movwf	print_error@bottom
  8318  0CA3  3091               	movlw	high (STR_74| (0+32768))
  8319  0CA4  2CD4               	goto	L4
  8320  0CA5                     l3991:	
  8321                           
  8322                           ;Multi_RX_testjig_v2.c: 803: else
  8323                           ;Multi_RX_testjig_v2.c: 804: print_error("Comms Error", " 6a");
  8324  0CA5  3078               	movlw	low (STR_35| (0+32768))
  8325  0CA6  00F8               	movwf	print_error@top
  8326  0CA7  3092               	movlw	high (STR_35| (0+32768))
  8327  0CA8  00F9               	movwf	print_error@top+1
  8328  0CA9  30A8               	movlw	low (STR_76| (0+32768))
  8329  0CAA  00FA               	movwf	print_error@bottom
  8330  0CAB  3093               	movlw	high (STR_76| (0+32768))
  8331  0CAC  2CD4               	goto	L4
  8332  0CAD                     l3993:	
  8333                           
  8334                           ;Multi_RX_testjig_v2.c: 806: else
  8335                           ;Multi_RX_testjig_v2.c: 807: print_error("Comms Error", " 6b");
  8336  0CAD  3078               	movlw	low (STR_35| (0+32768))
  8337  0CAE  00F8               	movwf	print_error@top
  8338  0CAF  3092               	movlw	high (STR_35| (0+32768))
  8339  0CB0  00F9               	movwf	print_error@top+1
  8340  0CB1  30B0               	movlw	low (STR_78| (0+32768))
  8341  0CB2  00FA               	movwf	print_error@bottom
  8342  0CB3  3093               	movlw	high (STR_78| (0+32768))
  8343  0CB4  2CD4               	goto	L4
  8344  0CB5                     l3995:	
  8345                           
  8346                           ;Multi_RX_testjig_v2.c: 809: else
  8347                           ;Multi_RX_testjig_v2.c: 810: print_error("CH2 - ON", " Error");
  8348  0CB5  303A               	movlw	low (STR_71| (0+32768))
  8349  0CB6  00F8               	movwf	print_error@top
  8350  0CB7  3093               	movlw	high (STR_71| (0+32768))
  8351  0CB8  00F9               	movwf	print_error@top+1
  8352  0CB9  30A0               	movlw	low ((STR_12+4)| (0+32768))
  8353  0CBA  00FA               	movwf	print_error@bottom
  8354  0CBB  3092               	movlw	high ((STR_12+4)| (0+32768))
  8355  0CBC  2CD4               	goto	L4
  8356  0CBD                     l3997:	
  8357                           
  8358                           ;Multi_RX_testjig_v2.c: 812: else
  8359                           ;Multi_RX_testjig_v2.c: 813: print_error("Comms Error", " 6");
  8360  0CBD  3078               	movlw	low (STR_35| (0+32768))
  8361  0CBE  00F8               	movwf	print_error@top
  8362  0CBF  3092               	movlw	high (STR_35| (0+32768))
  8363  0CC0  00F9               	movwf	print_error@top+1
  8364  0CC1  30C1               	movlw	low (STR_82| (0+32768))
  8365  0CC2  00FA               	movwf	print_error@bottom
  8366  0CC3  3093               	movlw	high (STR_82| (0+32768))
  8367  0CC4  2CD4               	goto	L4
  8368  0CC5                     l3999:	
  8369                           
  8370                           ;Multi_RX_testjig_v2.c: 815: else
  8371                           ;Multi_RX_testjig_v2.c: 816: print_error("CH2 - OFF", " Error 1");
  8372  0CC5  30DC               	movlw	low (STR_67| (0+32768))
  8373  0CC6  00F8               	movwf	print_error@top
  8374  0CC7  3092               	movlw	high (STR_67| (0+32768))
  8375  0CC8  00F9               	movwf	print_error@top+1
  8376  0CC9  300D               	movlw	low (STR_62| (0+32768))
  8377  0CCA  00FA               	movwf	print_error@bottom
  8378  0CCB  3093               	movlw	high (STR_62| (0+32768))
  8379  0CCC  2CD4               	goto	L4
  8380  0CCD                     l4001:	
  8381                           
  8382                           ;Multi_RX_testjig_v2.c: 818: else
  8383                           ;Multi_RX_testjig_v2.c: 819: print_error("Comms Error", " 7");
  8384  0CCD  3078               	movlw	low (STR_35| (0+32768))
  8385  0CCE  00F8               	movwf	print_error@top
  8386  0CCF  3092               	movlw	high (STR_35| (0+32768))
  8387  0CD0  00F9               	movwf	print_error@top+1
  8388  0CD1  30C4               	movlw	low (STR_86| (0+32768))
  8389  0CD2  00FA               	movwf	print_error@bottom
  8390  0CD3  3093               	movlw	high (STR_86| (0+32768))
  8391  0CD4                     L4:	
  8392  0CD4  00FB               	movwf	print_error@bottom+1
  8393  0CD5  3182  22F8  3188   	fcall	_print_error
  8394  0CD8                     l393:	
  8395                           
  8396                           ;Multi_RX_testjig_v2.c: 823: print_screen("Test CH3", "");
  8397  0CD8  3028               	movlw	low (STR_87| (0+32768))
  8398  0CD9  00F4               	movwf	print_screen@top
  8399  0CDA  3093               	movlw	high (STR_87| (0+32768))
  8400  0CDB  00F5               	movwf	print_screen@top+1
  8401  0CDC  30AE               	movlw	low ((STR_159+15)| (0+32768))
  8402  0CDD  00F6               	movwf	print_screen@bottom
  8403  0CDE  3090               	movlw	high ((STR_159+15)| (0+32768))
  8404  0CDF  00F7               	movwf	print_screen@bottom+1
  8405  0CE0  3182  22D6  3188   	fcall	_print_screen
  8406                           
  8407                           ;Multi_RX_testjig_v2.c: 824: TX_one(0x51);
  8408  0CE3  3051               	movlw	81
  8409  0CE4  3188  2086  3188   	fcall	_TX_one
  8410                           
  8411                           ;Multi_RX_testjig_v2.c: 825: if(RX_one() == 0x5A)
  8412  0CE7  3187  27D6  3188   	fcall	_RX_one
  8413  0CEA  3A5A               	xorlw	90
  8414  0CEB  1D03               	skipz
  8415  0CEC  2DEF               	goto	l4083
  8416                           
  8417                           ;Multi_RX_testjig_v2.c: 826: {
  8418                           ;Multi_RX_testjig_v2.c: 827: _delay((unsigned long)((10)*(16000000/4000.0)));
  8419  0CED  3034               	movlw	52
  8420  0CEE  0020               	movlb	0	; select bank0
  8421  0CEF  00CA               	movwf	??_main+1
  8422  0CF0  30F1               	movlw	241
  8423  0CF1  00C9               	movwf	??_main
  8424  0CF2                     u5067:	
  8425  0CF2  0BC9               	decfsz	??_main,f
  8426  0CF3  2CF2               	goto	u5067
  8427  0CF4  0BCA               	decfsz	??_main+1,f
  8428  0CF5  2CF2               	goto	u5067
  8429  0CF6  3200               	nop2
  8430                           
  8431                           ;Multi_RX_testjig_v2.c: 828: if(RF1 == 1 && RF0 == 1)
  8432  0CF7  0025               	movlb	5	; select bank5
  8433  0CF8  188C               	btfsc	12,1	;volatile
  8434  0CF9  1C0C               	btfss	12,0	;volatile
  8435  0CFA  2DE7               	goto	l4081
  8436                           
  8437                           ;Multi_RX_testjig_v2.c: 829: {
  8438                           ;Multi_RX_testjig_v2.c: 830: TX_one(0x50);
  8439  0CFB  3050               	movlw	80
  8440  0CFC  3188  2086  3188   	fcall	_TX_one
  8441                           
  8442                           ;Multi_RX_testjig_v2.c: 831: if(RX_one() == 0x5A)
  8443  0CFF  3187  27D6  3188   	fcall	_RX_one
  8444  0D02  3A5A               	xorlw	90
  8445  0D03  1D03               	skipz
  8446  0D04  2DDF               	goto	l4079
  8447                           
  8448                           ;Multi_RX_testjig_v2.c: 832: {
  8449                           ;Multi_RX_testjig_v2.c: 833: _delay((unsigned long)((10)*(16000000/4000.0)));
  8450  0D05  3034               	movlw	52
  8451  0D06  0020               	movlb	0	; select bank0
  8452  0D07  00CA               	movwf	??_main+1
  8453  0D08  30F1               	movlw	241
  8454  0D09  00C9               	movwf	??_main
  8455  0D0A                     u5077:	
  8456  0D0A  0BC9               	decfsz	??_main,f
  8457  0D0B  2D0A               	goto	u5077
  8458  0D0C  0BCA               	decfsz	??_main+1,f
  8459  0D0D  2D0A               	goto	u5077
  8460  0D0E  3200               	nop2
  8461                           
  8462                           ;Multi_RX_testjig_v2.c: 834: if(RF1 == 1 && RF0 == 0)
  8463  0D0F  0025               	movlb	5	; select bank5
  8464  0D10  188C               	btfsc	12,1	;volatile
  8465  0D11  180C               	btfsc	12,0	;volatile
  8466  0D12  2DD7               	goto	l4077
  8467                           
  8468                           ;Multi_RX_testjig_v2.c: 835: {
  8469                           ;Multi_RX_testjig_v2.c: 836: TX_one(0x51);
  8470  0D13  3051               	movlw	81
  8471  0D14  3188  2086  3188   	fcall	_TX_one
  8472                           
  8473                           ;Multi_RX_testjig_v2.c: 837: if(RX_one() == 0x5A)
  8474  0D17  3187  27D6  3188   	fcall	_RX_one
  8475  0D1A  3A5A               	xorlw	90
  8476  0D1B  1D03               	skipz
  8477  0D1C  2DCF               	goto	l4075
  8478                           
  8479                           ;Multi_RX_testjig_v2.c: 838: {
  8480                           ;Multi_RX_testjig_v2.c: 839: LATA6 = 1;
  8481  0D1D  0022               	movlb	2	; select bank2
  8482  0D1E  170C               	bsf	12,6	;volatile
  8483                           
  8484                           ;Multi_RX_testjig_v2.c: 840: _delay((unsigned long)((50)*(16000000/4000.0)));
  8485  0D1F  3002               	movlw	2
  8486  0D20  0020               	movlb	0	; select bank0
  8487  0D21  00CB               	movwf	??_main+2
  8488  0D22  3004               	movlw	4
  8489  0D23  00CA               	movwf	??_main+1
  8490  0D24  30BA               	movlw	186
  8491  0D25  00C9               	movwf	??_main
  8492  0D26                     u5087:	
  8493  0D26  0BC9               	decfsz	??_main,f
  8494  0D27  2D26               	goto	u5087
  8495  0D28  0BCA               	decfsz	??_main+1,f
  8496  0D29  2D26               	goto	u5087
  8497  0D2A  0BCB               	decfsz	??_main+2,f
  8498  0D2B  2D26               	goto	u5087
  8499  0D2C  0000               	nop
  8500                           
  8501                           ;Multi_RX_testjig_v2.c: 841: TX_one(0x50);
  8502  0D2D  3050               	movlw	80
  8503  0D2E  3188  2086  3188   	fcall	_TX_one
  8504                           
  8505                           ;Multi_RX_testjig_v2.c: 842: if(RX_one() == 0x5A)
  8506  0D31  3187  27D6  3188   	fcall	_RX_one
  8507  0D34  3A5A               	xorlw	90
  8508  0D35  1D03               	skipz
  8509  0D36  2DC7               	goto	l4073
  8510                           
  8511                           ;Multi_RX_testjig_v2.c: 843: {
  8512                           ;Multi_RX_testjig_v2.c: 844: _delay((unsigned long)((50)*(16000000/4000.0)));
  8513  0D37  3002               	movlw	2
  8514  0D38  0020               	movlb	0	; select bank0
  8515  0D39  00CB               	movwf	??_main+2
  8516  0D3A  3004               	movlw	4
  8517  0D3B  00CA               	movwf	??_main+1
  8518  0D3C  30BA               	movlw	186
  8519  0D3D  00C9               	movwf	??_main
  8520  0D3E                     u5097:	
  8521  0D3E  0BC9               	decfsz	??_main,f
  8522  0D3F  2D3E               	goto	u5097
  8523  0D40  0BCA               	decfsz	??_main+1,f
  8524  0D41  2D3E               	goto	u5097
  8525  0D42  0BCB               	decfsz	??_main+2,f
  8526  0D43  2D3E               	goto	u5097
  8527  0D44  0000               	nop
  8528                           
  8529                           ;Multi_RX_testjig_v2.c: 845: tj_timer = 1500;
  8530  0D45  30DC               	movlw	220
  8531  0D46  0020               	movlb	0	; select bank0
  8532  0D47  00E2               	movwf	_tj_timer
  8533  0D48  3005               	movlw	5
  8534  0D49  00E3               	movwf	_tj_timer+1
  8535  0D4A  2D4E               	goto	l4033
  8536  0D4B                     l4035:	
  8537  0D4B  0025               	movlb	5	; select bank5
  8538  0D4C  180C               	btfsc	12,0	;volatile
  8539  0D4D  2D53               	goto	l404
  8540  0D4E                     l4033:	
  8541                           ;Multi_RX_testjig_v2.c: 846: while(tj_timer && RF0 == 0);
  8542                           
  8543  0D4E  0020               	movlb	0	; select bank0
  8544  0D4F  0862               	movf	_tj_timer,w
  8545  0D50  0463               	iorwf	_tj_timer+1,w
  8546  0D51  1D03               	btfss	3,2
  8547  0D52  2D4B               	goto	l4035
  8548  0D53                     l404:	
  8549                           
  8550                           ;Multi_RX_testjig_v2.c: 847: if(RF1 == 1 && RF0 == 1)
  8551  0D53  0025               	movlb	5	; select bank5
  8552  0D54  188C               	btfsc	12,1	;volatile
  8553  0D55  1C0C               	btfss	12,0	;volatile
  8554  0D56  2DBF               	goto	l4071
  8555                           
  8556                           ;Multi_RX_testjig_v2.c: 848: {
  8557                           ;Multi_RX_testjig_v2.c: 849: LATA6 = 0;
  8558  0D57  0022               	movlb	2	; select bank2
  8559  0D58  130C               	bcf	12,6	;volatile
  8560                           
  8561                           ;Multi_RX_testjig_v2.c: 850: TX_one(0x51);
  8562  0D59  3051               	movlw	81
  8563  0D5A  3188  2086  3188   	fcall	_TX_one
  8564                           
  8565                           ;Multi_RX_testjig_v2.c: 851: RX_one();
  8566  0D5D  3187  27D6  3188   	fcall	_RX_one
  8567                           
  8568                           ;Multi_RX_testjig_v2.c: 852: _delay((unsigned long)((150)*(16000000/4000.0)));
  8569  0D60  3004               	movlw	4
  8570  0D61  0020               	movlb	0	; select bank0
  8571  0D62  00CB               	movwf	??_main+2
  8572  0D63  300C               	movlw	12
  8573  0D64  00CA               	movwf	??_main+1
  8574  0D65  3035               	movlw	53
  8575  0D66  00C9               	movwf	??_main
  8576  0D67                     u5107:	
  8577  0D67  0BC9               	decfsz	??_main,f
  8578  0D68  2D67               	goto	u5107
  8579  0D69  0BCA               	decfsz	??_main+1,f
  8580  0D6A  2D67               	goto	u5107
  8581  0D6B  0BCB               	decfsz	??_main+2,f
  8582  0D6C  2D67               	goto	u5107
  8583  0D6D  3200               	nop2
  8584                           
  8585                           ;Multi_RX_testjig_v2.c: 853: TX_one(0x50);
  8586  0D6E  3050               	movlw	80
  8587  0D6F  3188  2086  3188   	fcall	_TX_one
  8588                           
  8589                           ;Multi_RX_testjig_v2.c: 854: RX_one();
  8590  0D72  3187  27D6  3188   	fcall	_RX_one
  8591                           
  8592                           ;Multi_RX_testjig_v2.c: 855: _delay((unsigned long)((20)*(16000000/4000.0)));
  8593  0D75  3068               	movlw	104
  8594  0D76  0020               	movlb	0	; select bank0
  8595  0D77  00CA               	movwf	??_main+1
  8596  0D78  30E4               	movlw	228
  8597  0D79  00C9               	movwf	??_main
  8598  0D7A                     u5117:	
  8599  0D7A  0BC9               	decfsz	??_main,f
  8600  0D7B  2D7A               	goto	u5117
  8601  0D7C  0BCA               	decfsz	??_main+1,f
  8602  0D7D  2D7A               	goto	u5117
  8603  0D7E  0000               	nop
  8604                           
  8605                           ;Multi_RX_testjig_v2.c: 856: if(RF1 == 1 && RF0 == 0)
  8606  0D7F  0025               	movlb	5	; select bank5
  8607  0D80  188C               	btfsc	12,1	;volatile
  8608  0D81  180C               	btfsc	12,0	;volatile
  8609  0D82  2DB7               	goto	l4069
  8610                           
  8611                           ;Multi_RX_testjig_v2.c: 857: {
  8612                           ;Multi_RX_testjig_v2.c: 858: TX_one(0x51);
  8613  0D83  3051               	movlw	81
  8614  0D84  3188  2086  3188   	fcall	_TX_one
  8615                           
  8616                           ;Multi_RX_testjig_v2.c: 859: if(RX_one() == 0x5A)
  8617  0D87  3187  27D6  3188   	fcall	_RX_one
  8618  0D8A  3A5A               	xorlw	90
  8619  0D8B  1D03               	skipz
  8620  0D8C  2DAF               	goto	l4067
  8621                           
  8622                           ;Multi_RX_testjig_v2.c: 860: {
  8623                           ;Multi_RX_testjig_v2.c: 861: _delay((unsigned long)((10)*(16000000/4000.0)));
  8624  0D8D  3034               	movlw	52
  8625  0D8E  0020               	movlb	0	; select bank0
  8626  0D8F  00CA               	movwf	??_main+1
  8627  0D90  30F1               	movlw	241
  8628  0D91  00C9               	movwf	??_main
  8629  0D92                     u5127:	
  8630  0D92  0BC9               	decfsz	??_main,f
  8631  0D93  2D92               	goto	u5127
  8632  0D94  0BCA               	decfsz	??_main+1,f
  8633  0D95  2D92               	goto	u5127
  8634  0D96  3200               	nop2
  8635                           
  8636                           ;Multi_RX_testjig_v2.c: 862: if(RF1 == 1 && RF0 == 1)
  8637  0D97  0025               	movlb	5	; select bank5
  8638  0D98  188C               	btfsc	12,1	;volatile
  8639  0D99  1C0C               	btfss	12,0	;volatile
  8640  0D9A  2DA7               	goto	l4065
  8641                           
  8642                           ;Multi_RX_testjig_v2.c: 863: {
  8643                           ;Multi_RX_testjig_v2.c: 864: print_screen("Test CH3", "ok");
  8644  0D9B  3028               	movlw	low (STR_87| (0+32768))
  8645  0D9C  00F4               	movwf	print_screen@top
  8646  0D9D  3093               	movlw	high (STR_87| (0+32768))
  8647  0D9E  00F5               	movwf	print_screen@top+1
  8648  0D9F  30CD               	movlw	low (STR_66| (0+32768))
  8649  0DA0  00F6               	movwf	print_screen@bottom
  8650  0DA1  3093               	movlw	high (STR_66| (0+32768))
  8651  0DA2  00F7               	movwf	print_screen@bottom+1
  8652  0DA3  3182  22D6  3188   	fcall	_print_screen
  8653                           
  8654                           ;Multi_RX_testjig_v2.c: 865: }
  8655  0DA6  2DFA               	goto	l4085
  8656  0DA7                     l4065:	
  8657                           
  8658                           ;Multi_RX_testjig_v2.c: 866: else
  8659                           ;Multi_RX_testjig_v2.c: 867: print_error("CH3 - OFF", " Error 2");
  8660  0DA7  30E6               	movlw	low (STR_91| (0+32768))
  8661  0DA8  00F8               	movwf	print_error@top
  8662  0DA9  3092               	movlw	high (STR_91| (0+32768))
  8663  0DAA  00F9               	movwf	print_error@top+1
  8664  0DAB  3016               	movlw	low (STR_54| (0+32768))
  8665  0DAC  00FA               	movwf	print_error@bottom
  8666  0DAD  3093               	movlw	high (STR_54| (0+32768))
  8667  0DAE  2DF6               	goto	L5
  8668  0DAF                     l4067:	
  8669                           
  8670                           ;Multi_RX_testjig_v2.c: 869: else
  8671                           ;Multi_RX_testjig_v2.c: 870: print_error("Comms Error", " 8");
  8672  0DAF  3078               	movlw	low (STR_35| (0+32768))
  8673  0DB0  00F8               	movwf	print_error@top
  8674  0DB1  3092               	movlw	high (STR_35| (0+32768))
  8675  0DB2  00F9               	movwf	print_error@top+1
  8676  0DB3  30C7               	movlw	low (STR_94| (0+32768))
  8677  0DB4  00FA               	movwf	print_error@bottom
  8678  0DB5  3093               	movlw	high (STR_94| (0+32768))
  8679  0DB6  2DF6               	goto	L5
  8680  0DB7                     l4069:	
  8681                           
  8682                           ;Multi_RX_testjig_v2.c: 872: else
  8683                           ;Multi_RX_testjig_v2.c: 873: print_error("CH3 - ON", "PTC Error reset");
  8684  0DB7  3043               	movlw	low (STR_95| (0+32768))
  8685  0DB8  00F8               	movwf	print_error@top
  8686  0DB9  3093               	movlw	high (STR_95| (0+32768))
  8687  0DBA  00F9               	movwf	print_error@top+1
  8688  0DBB  30EF               	movlw	low (STR_72| (0+32768))
  8689  0DBC  00FA               	movwf	print_error@bottom
  8690  0DBD  3090               	movlw	high (STR_72| (0+32768))
  8691  0DBE  2DF6               	goto	L5
  8692  0DBF                     l4071:	
  8693                           
  8694                           ;Multi_RX_testjig_v2.c: 875: else
  8695                           ;Multi_RX_testjig_v2.c: 876: print_error("CH3 - ON", "PTC Error trip");
  8696  0DBF  3043               	movlw	low (STR_95| (0+32768))
  8697  0DC0  00F8               	movwf	print_error@top
  8698  0DC1  3093               	movlw	high (STR_95| (0+32768))
  8699  0DC2  00F9               	movwf	print_error@top+1
  8700  0DC3  302C               	movlw	low (STR_74| (0+32768))
  8701  0DC4  00FA               	movwf	print_error@bottom
  8702  0DC5  3091               	movlw	high (STR_74| (0+32768))
  8703  0DC6  2DF6               	goto	L5
  8704  0DC7                     l4073:	
  8705                           
  8706                           ;Multi_RX_testjig_v2.c: 878: else
  8707                           ;Multi_RX_testjig_v2.c: 879: print_error("Comms Error", " 8b");
  8708  0DC7  3078               	movlw	low (STR_35| (0+32768))
  8709  0DC8  00F8               	movwf	print_error@top
  8710  0DC9  3092               	movlw	high (STR_35| (0+32768))
  8711  0DCA  00F9               	movwf	print_error@top+1
  8712  0DCB  30B4               	movlw	low (STR_100| (0+32768))
  8713  0DCC  00FA               	movwf	print_error@bottom
  8714  0DCD  3093               	movlw	high (STR_100| (0+32768))
  8715  0DCE  2DF6               	goto	L5
  8716  0DCF                     l4075:	
  8717                           
  8718                           ;Multi_RX_testjig_v2.c: 881: else
  8719                           ;Multi_RX_testjig_v2.c: 882: print_error("Comms Error", " 8a");
  8720  0DCF  3078               	movlw	low (STR_35| (0+32768))
  8721  0DD0  00F8               	movwf	print_error@top
  8722  0DD1  3092               	movlw	high (STR_35| (0+32768))
  8723  0DD2  00F9               	movwf	print_error@top+1
  8724  0DD3  30AC               	movlw	low (STR_102| (0+32768))
  8725  0DD4  00FA               	movwf	print_error@bottom
  8726  0DD5  3093               	movlw	high (STR_102| (0+32768))
  8727  0DD6  2DF6               	goto	L5
  8728  0DD7                     l4077:	
  8729                           
  8730                           ;Multi_RX_testjig_v2.c: 884: else
  8731                           ;Multi_RX_testjig_v2.c: 885: print_error("CH3 - ON", " Error");
  8732  0DD7  3043               	movlw	low (STR_95| (0+32768))
  8733  0DD8  00F8               	movwf	print_error@top
  8734  0DD9  3093               	movlw	high (STR_95| (0+32768))
  8735  0DDA  00F9               	movwf	print_error@top+1
  8736  0DDB  30A0               	movlw	low ((STR_12+4)| (0+32768))
  8737  0DDC  00FA               	movwf	print_error@bottom
  8738  0DDD  3092               	movlw	high ((STR_12+4)| (0+32768))
  8739  0DDE  2DF6               	goto	L5
  8740  0DDF                     l4079:	
  8741                           
  8742                           ;Multi_RX_testjig_v2.c: 887: else
  8743                           ;Multi_RX_testjig_v2.c: 888: print_error("Comms Error", " 9");
  8744  0DDF  3078               	movlw	low (STR_35| (0+32768))
  8745  0DE0  00F8               	movwf	print_error@top
  8746  0DE1  3092               	movlw	high (STR_35| (0+32768))
  8747  0DE2  00F9               	movwf	print_error@top+1
  8748  0DE3  30CA               	movlw	low (STR_106| (0+32768))
  8749  0DE4  00FA               	movwf	print_error@bottom
  8750  0DE5  3093               	movlw	high (STR_106| (0+32768))
  8751  0DE6  2DF6               	goto	L5
  8752  0DE7                     l4081:	
  8753                           
  8754                           ;Multi_RX_testjig_v2.c: 890: else
  8755                           ;Multi_RX_testjig_v2.c: 891: print_error("CH3 - OFF", " Error 1");
  8756  0DE7  30E6               	movlw	low (STR_91| (0+32768))
  8757  0DE8  00F8               	movwf	print_error@top
  8758  0DE9  3092               	movlw	high (STR_91| (0+32768))
  8759  0DEA  00F9               	movwf	print_error@top+1
  8760  0DEB  300D               	movlw	low (STR_62| (0+32768))
  8761  0DEC  00FA               	movwf	print_error@bottom
  8762  0DED  3093               	movlw	high (STR_62| (0+32768))
  8763  0DEE  2DF6               	goto	L5
  8764  0DEF                     l4083:	
  8765                           
  8766                           ;Multi_RX_testjig_v2.c: 893: else
  8767                           ;Multi_RX_testjig_v2.c: 894: print_error("Comms Error", " 10");
  8768  0DEF  3078               	movlw	low (STR_35| (0+32768))
  8769  0DF0  00F8               	movwf	print_error@top
  8770  0DF1  3092               	movlw	high (STR_35| (0+32768))
  8771  0DF2  00F9               	movwf	print_error@top+1
  8772  0DF3  3084               	movlw	low (STR_110| (0+32768))
  8773  0DF4  00FA               	movwf	print_error@bottom
  8774  0DF5  3093               	movlw	high (STR_110| (0+32768))
  8775  0DF6                     L5:	
  8776  0DF6  00FB               	movwf	print_error@bottom+1
  8777  0DF7  3182  22F8  3188   	fcall	_print_error
  8778  0DFA                     l4085:	
  8779                           
  8780                           ;Multi_RX_testjig_v2.c: 895: }
  8781                           ;Multi_RX_testjig_v2.c: 897: if((device_type == 0xAA)|| (device_type == 0xA1))
  8782  0DFA  30AA               	movlw	170
  8783  0DFB  0020               	movlb	0	; select bank0
  8784  0DFC  0653               	xorwf	main@device_type,w
  8785  0DFD  1903               	btfsc	3,2
  8786  0DFE  2E03               	goto	l4089
  8787  0DFF  30A1               	movlw	161
  8788  0E00  0653               	xorwf	main@device_type,w
  8789  0E01  1D03               	btfss	3,2
  8790  0E02  2F38               	goto	l4183
  8791  0E03                     l4089:	
  8792                           
  8793                           ;Multi_RX_testjig_v2.c: 898: {
  8794                           ;Multi_RX_testjig_v2.c: 900: print_screen("Test RF", "3v3");
  8795  0E03  3077               	movlw	low (STR_111| (0+32768))
  8796  0E04  00F4               	movwf	print_screen@top
  8797  0E05  3093               	movlw	high (STR_111| (0+32768))
  8798  0E06  00F5               	movwf	print_screen@top+1
  8799  0E07  3044               	movlw	low ((STR_117+8)| (0+32768))
  8800  0E08  00F6               	movwf	print_screen@bottom
  8801  0E09  3092               	movlw	high ((STR_117+8)| (0+32768))
  8802  0E0A  00F7               	movwf	print_screen@bottom+1
  8803  0E0B  3182  22D6  3188   	fcall	_print_screen
  8804                           
  8805                           ;Multi_RX_testjig_v2.c: 901: TX_one(0x70);
  8806  0E0E  3070               	movlw	112
  8807  0E0F  3188  2086  3188   	fcall	_TX_one
  8808                           
  8809                           ;Multi_RX_testjig_v2.c: 902: RX_data = RX_one();
  8810  0E12  3187  27D6  3188   	fcall	_RX_one
  8811  0E15  0020               	movlb	0	; select bank0
  8812  0E16  00D2               	movwf	main@RX_data
  8813                           
  8814                           ;Multi_RX_testjig_v2.c: 903: TX_one(0x70);
  8815  0E17  3070               	movlw	112
  8816  0E18  3188  2086  3188   	fcall	_TX_one
  8817                           
  8818                           ;Multi_RX_testjig_v2.c: 904: RX_data = RX_one();
  8819  0E1B  3187  27D6  3188   	fcall	_RX_one
  8820  0E1E  0020               	movlb	0	; select bank0
  8821  0E1F  00D2               	movwf	main@RX_data
  8822                           
  8823                           ;Multi_RX_testjig_v2.c: 905: if(RX_data == 0)
  8824  0E20  0852               	movf	main@RX_data,w
  8825  0E21  1D03               	btfss	3,2
  8826  0E22  2E2B               	goto	l4103
  8827                           
  8828                           ;Multi_RX_testjig_v2.c: 906: print_error("Comms Error", " 11");
  8829  0E23  3078               	movlw	low (STR_35| (0+32768))
  8830  0E24  00F8               	movwf	print_error@top
  8831  0E25  3092               	movlw	high (STR_35| (0+32768))
  8832  0E26  00F9               	movwf	print_error@top+1
  8833  0E27  3088               	movlw	low (STR_114| (0+32768))
  8834  0E28  00FA               	movwf	print_error@bottom
  8835  0E29  3093               	movlw	high (STR_114| (0+32768))
  8836  0E2A  2E59               	goto	L11
  8837  0E2B                     l4103:	
  8838                           
  8839                           ;Multi_RX_testjig_v2.c: 907: else if(RX_data == 0xFF)
  8840  0E2B  0A52               	incf	main@RX_data,w
  8841  0E2C  1D03               	btfss	3,2
  8842  0E2D  2E36               	goto	l4107
  8843                           
  8844                           ;Multi_RX_testjig_v2.c: 908: print_error("Comms Error", " 12");
  8845  0E2E  3078               	movlw	low (STR_35| (0+32768))
  8846  0E2F  00F8               	movwf	print_error@top
  8847  0E30  3092               	movlw	high (STR_35| (0+32768))
  8848  0E31  00F9               	movwf	print_error@top+1
  8849  0E32  308C               	movlw	low (STR_116| (0+32768))
  8850  0E33  00FA               	movwf	print_error@bottom
  8851  0E34  3093               	movlw	high (STR_116| (0+32768))
  8852  0E35  2E59               	goto	L11
  8853  0E36                     l4107:	
  8854                           
  8855                           ;Multi_RX_testjig_v2.c: 909: else if(RX_data > 179)
  8856  0E36  30B4               	movlw	180
  8857  0E37  0252               	subwf	main@RX_data,w
  8858  0E38  1C03               	skipc
  8859  0E39  2E42               	goto	l4111
  8860                           
  8861                           ;Multi_RX_testjig_v2.c: 910: print_error("Test RF 3v3", " Error - High");
  8862  0E3A  303C               	movlw	low (STR_117| (0+32768))
  8863  0E3B  00F8               	movwf	print_error@top
  8864  0E3C  3092               	movlw	high (STR_117| (0+32768))
  8865  0E3D  00F9               	movwf	print_error@top+1
  8866  0E3E  3082               	movlw	low (STR_118| (0+32768))
  8867  0E3F  00FA               	movwf	print_error@bottom
  8868  0E40  3091               	movlw	high (STR_118| (0+32768))
  8869  0E41  2E59               	goto	L11
  8870  0E42                     l4111:	
  8871                           
  8872                           ;Multi_RX_testjig_v2.c: 911: else if(RX_data < 153)
  8873  0E42  3099               	movlw	153
  8874  0E43  0252               	subwf	main@RX_data,w
  8875  0E44  1803               	skipnc
  8876  0E45  2E4E               	goto	l4115
  8877                           
  8878                           ;Multi_RX_testjig_v2.c: 912: print_error("Test RF 3v3", " Error - Micrel");
  8879  0E46  303C               	movlw	low (STR_117| (0+32768))
  8880  0E47  00F8               	movwf	print_error@top
  8881  0E48  3092               	movlw	high (STR_117| (0+32768))
  8882  0E49  00F9               	movwf	print_error@top+1
  8883  0E4A  30CF               	movlw	low (STR_120| (0+32768))
  8884  0E4B  00FA               	movwf	print_error@bottom
  8885  0E4C  3090               	movlw	high (STR_120| (0+32768))
  8886  0E4D  2E59               	goto	L11
  8887  0E4E                     l4115:	
  8888                           
  8889                           ;Multi_RX_testjig_v2.c: 913: else if(RX_data < 158)
  8890  0E4E  309E               	movlw	158
  8891  0E4F  0252               	subwf	main@RX_data,w
  8892  0E50  1803               	skipnc
  8893  0E51  2E5D               	goto	l423
  8894                           
  8895                           ;Multi_RX_testjig_v2.c: 914: print_error("Test RF 3v3", " Error - Low");
  8896  0E52  303C               	movlw	low (STR_117| (0+32768))
  8897  0E53  00F8               	movwf	print_error@top
  8898  0E54  3092               	movlw	high (STR_117| (0+32768))
  8899  0E55  00F9               	movwf	print_error@top+1
  8900  0E56  302F               	movlw	low (STR_122| (0+32768))
  8901  0E57  00FA               	movwf	print_error@bottom
  8902  0E58  3092               	movlw	high (STR_122| (0+32768))
  8903  0E59                     L11:	
  8904  0E59  00FB               	movwf	print_error@bottom+1
  8905  0E5A  3182  22F8  3188   	fcall	_print_error
  8906  0E5D                     l423:	
  8907                           
  8908                           ;Multi_RX_testjig_v2.c: 916: print_screen("Test RF", "3v3 - OK");
  8909  0E5D  3077               	movlw	low (STR_111| (0+32768))
  8910  0E5E  00F4               	movwf	print_screen@top
  8911  0E5F  3093               	movlw	high (STR_111| (0+32768))
  8912  0E60  00F5               	movwf	print_screen@top+1
  8913  0E61  3031               	movlw	low (STR_124| (0+32768))
  8914  0E62  00F6               	movwf	print_screen@bottom
  8915  0E63  3093               	movlw	high (STR_124| (0+32768))
  8916  0E64  00F7               	movwf	print_screen@bottom+1
  8917  0E65  3182  22D6  3188   	fcall	_print_screen
  8918                           
  8919                           ;Multi_RX_testjig_v2.c: 919: testjig_timer = (unsigned int)((3*7518.8));
  8920  0E68  301C               	movlw	28
  8921  0E69  0020               	movlb	0	; select bank0
  8922  0E6A  00E0               	movwf	_testjig_timer	;volatile
  8923  0E6B  3058               	movlw	88
  8924  0E6C  00E1               	movwf	_testjig_timer+1	;volatile
  8925                           
  8926                           ;Multi_RX_testjig_v2.c: 920: RE0 = 1;
  8927  0E6D  1410               	bsf	16,0	;volatile
  8928                           
  8929                           ;Multi_RX_testjig_v2.c: 921: _delay((unsigned long)((200)*(16000000/4000.0)));
  8930  0E6E  3005               	movlw	5
  8931  0E6F  00CB               	movwf	??_main+2
  8932  0E70  300F               	movlw	15
  8933  0E71  00CA               	movwf	??_main+1
  8934  0E72  30F4               	movlw	244
  8935  0E73  00C9               	movwf	??_main
  8936  0E74                     u5137:	
  8937  0E74  0BC9               	decfsz	??_main,f
  8938  0E75  2E74               	goto	u5137
  8939  0E76  0BCA               	decfsz	??_main+1,f
  8940  0E77  2E74               	goto	u5137
  8941  0E78  0BCB               	decfsz	??_main+2,f
  8942  0E79  2E74               	goto	u5137
  8943                           
  8944                           ;Multi_RX_testjig_v2.c: 922: print_screen("Test RF", "RSSI");
  8945  0E7A  3077               	movlw	low (STR_111| (0+32768))
  8946  0E7B  00F4               	movwf	print_screen@top
  8947  0E7C  3093               	movlw	high (STR_111| (0+32768))
  8948  0E7D  00F5               	movwf	print_screen@top+1
  8949  0E7E  30E9               	movlw	low ((STR_131+8)| (0+32768))
  8950  0E7F  00F6               	movwf	print_screen@bottom
  8951  0E80  3091               	movlw	high ((STR_131+8)| (0+32768))
  8952  0E81  00F7               	movwf	print_screen@bottom+1
  8953  0E82  3182  22D6  3188   	fcall	_print_screen
  8954                           
  8955                           ;Multi_RX_testjig_v2.c: 923: TX_one(0x60);
  8956  0E85  3060               	movlw	96
  8957  0E86  3188  2086  3188   	fcall	_TX_one
  8958                           
  8959                           ;Multi_RX_testjig_v2.c: 924: RX_data = RX_one();
  8960  0E89  3187  27D6  3188   	fcall	_RX_one
  8961  0E8C  0020               	movlb	0	; select bank0
  8962  0E8D  00D2               	movwf	main@RX_data
  8963                           
  8964                           ;Multi_RX_testjig_v2.c: 925: TX_one(0x60);
  8965  0E8E  3060               	movlw	96
  8966  0E8F  3188  2086  3188   	fcall	_TX_one
  8967                           
  8968                           ;Multi_RX_testjig_v2.c: 926: RX_data = RX_one();
  8969  0E92  3187  27D6  3188   	fcall	_RX_one
  8970  0E95  0020               	movlb	0	; select bank0
  8971  0E96  00D2               	movwf	main@RX_data
  8972                           
  8973                           ;Multi_RX_testjig_v2.c: 927: if(RX_data == 0)
  8974  0E97  0852               	movf	main@RX_data,w
  8975  0E98  1D03               	btfss	3,2
  8976  0E99  2EA2               	goto	l4137
  8977                           
  8978                           ;Multi_RX_testjig_v2.c: 928: print_error("Comms Error", " 13");
  8979  0E9A  3078               	movlw	low (STR_35| (0+32768))
  8980  0E9B  00F8               	movwf	print_error@top
  8981  0E9C  3092               	movlw	high (STR_35| (0+32768))
  8982  0E9D  00F9               	movwf	print_error@top+1
  8983  0E9E  3090               	movlw	low (STR_128| (0+32768))
  8984  0E9F  00FA               	movwf	print_error@bottom
  8985  0EA0  3093               	movlw	high (STR_128| (0+32768))
  8986  0EA1  2EC4               	goto	L6
  8987  0EA2                     l4137:	
  8988                           
  8989                           ;Multi_RX_testjig_v2.c: 929: else if(RX_data == 0xFF)
  8990  0EA2  0A52               	incf	main@RX_data,w
  8991  0EA3  1D03               	btfss	3,2
  8992  0EA4  2EAD               	goto	l4141
  8993                           
  8994                           ;Multi_RX_testjig_v2.c: 930: print_error("Comms Error", " 14");
  8995  0EA5  3078               	movlw	low (STR_35| (0+32768))
  8996  0EA6  00F8               	movwf	print_error@top
  8997  0EA7  3092               	movlw	high (STR_35| (0+32768))
  8998  0EA8  00F9               	movwf	print_error@top+1
  8999  0EA9  3094               	movlw	low (STR_130| (0+32768))
  9000  0EAA  00FA               	movwf	print_error@bottom
  9001  0EAB  3093               	movlw	high (STR_130| (0+32768))
  9002  0EAC  2EC4               	goto	L6
  9003  0EAD                     l4141:	
  9004                           
  9005                           ;Multi_RX_testjig_v2.c: 931: else if(RX_data > 120)
  9006  0EAD  3079               	movlw	121
  9007  0EAE  0252               	subwf	main@RX_data,w
  9008  0EAF  1C03               	skipc
  9009  0EB0  2EB9               	goto	l4145
  9010                           
  9011                           ;Multi_RX_testjig_v2.c: 932: print_error("Test RF RSSI", " Error - High");
  9012  0EB1  30E1               	movlw	low (STR_131| (0+32768))
  9013  0EB2  00F8               	movwf	print_error@top
  9014  0EB3  3091               	movlw	high (STR_131| (0+32768))
  9015  0EB4  00F9               	movwf	print_error@top+1
  9016  0EB5  3082               	movlw	low (STR_118| (0+32768))
  9017  0EB6  00FA               	movwf	print_error@bottom
  9018  0EB7  3091               	movlw	high (STR_118| (0+32768))
  9019  0EB8  2EC4               	goto	L6
  9020  0EB9                     l4145:	
  9021                           
  9022                           ;Multi_RX_testjig_v2.c: 933: else if(RX_data < 90)
  9023  0EB9  305A               	movlw	90
  9024  0EBA  0252               	subwf	main@RX_data,w
  9025  0EBB  1803               	skipnc
  9026  0EBC  2EC8               	goto	l432
  9027                           
  9028                           ;Multi_RX_testjig_v2.c: 934: print_error("Test RF RSSI", " Error - Low");
  9029  0EBD  30E1               	movlw	low (STR_131| (0+32768))
  9030  0EBE  00F8               	movwf	print_error@top
  9031  0EBF  3091               	movlw	high (STR_131| (0+32768))
  9032  0EC0  00F9               	movwf	print_error@top+1
  9033  0EC1  302F               	movlw	low (STR_122| (0+32768))
  9034  0EC2  00FA               	movwf	print_error@bottom
  9035  0EC3  3092               	movlw	high (STR_122| (0+32768))
  9036  0EC4                     L6:	
  9037  0EC4  00FB               	movwf	print_error@bottom+1
  9038  0EC5  3182  22F8  3188   	fcall	_print_error
  9039  0EC8                     l432:	
  9040                           
  9041                           ;Multi_RX_testjig_v2.c: 935: print_screen("Test RF", "RSSI - OK");
  9042  0EC8  3077               	movlw	low (STR_111| (0+32768))
  9043  0EC9  00F4               	movwf	print_screen@top
  9044  0ECA  3093               	movlw	high (STR_111| (0+32768))
  9045  0ECB  00F5               	movwf	print_screen@top+1
  9046  0ECC  30F0               	movlw	low (STR_136| (0+32768))
  9047  0ECD  00F6               	movwf	print_screen@bottom
  9048  0ECE  3092               	movlw	high (STR_136| (0+32768))
  9049  0ECF  00F7               	movwf	print_screen@bottom+1
  9050  0ED0  3182  22D6  3188   	fcall	_print_screen
  9051                           
  9052                           ;Multi_RX_testjig_v2.c: 938: print_screen("Test RF", "Decode");
  9053  0ED3  3077               	movlw	low (STR_111| (0+32768))
  9054  0ED4  00F4               	movwf	print_screen@top
  9055  0ED5  3093               	movlw	high (STR_111| (0+32768))
  9056  0ED6  00F5               	movwf	print_screen@top+1
  9057  0ED7  3016               	movlw	low ((STR_144+8)| (0+32768))
  9058  0ED8  00F6               	movwf	print_screen@bottom
  9059  0ED9  3091               	movlw	high ((STR_144+8)| (0+32768))
  9060  0EDA  00F7               	movwf	print_screen@bottom+1
  9061  0EDB  3182  22D6  3188   	fcall	_print_screen
  9062                           
  9063                           ;Multi_RX_testjig_v2.c: 939: for(i = 0; i < 10; i++)
  9064  0EDE  0020               	movlb	0	; select bank0
  9065  0EDF  01D0               	clrf	main@i
  9066  0EE0  01D1               	clrf	main@i+1
  9067  0EE1  2EF2               	goto	l4151
  9068  0EE2                     l4161:	
  9069                           
  9070                           ;Multi_RX_testjig_v2.c: 945: _delay((unsigned long)((200)*(16000000/4000.0)));
  9071  0EE2  3005               	movlw	5
  9072  0EE3  00CB               	movwf	??_main+2
  9073  0EE4  300F               	movlw	15
  9074  0EE5  00CA               	movwf	??_main+1
  9075  0EE6  30F4               	movlw	244
  9076  0EE7  00C9               	movwf	??_main
  9077  0EE8                     u5147:	
  9078  0EE8  0BC9               	decfsz	??_main,f
  9079  0EE9  2EE8               	goto	u5147
  9080  0EEA  0BCA               	decfsz	??_main+1,f
  9081  0EEB  2EE8               	goto	u5147
  9082  0EEC  0BCB               	decfsz	??_main+2,f
  9083  0EED  2EE8               	goto	u5147
  9084  0EEE  0020               	movlb	0	; select bank0
  9085  0EEF  0AD0               	incf	main@i,f
  9086  0EF0  1903               	skipnz
  9087  0EF1  0AD1               	incf	main@i+1,f
  9088  0EF2                     l4151:	
  9089  0EF2  3000               	movlw	0
  9090  0EF3  0251               	subwf	main@i+1,w
  9091  0EF4  300A               	movlw	10
  9092  0EF5  1903               	skipnz
  9093  0EF6  0250               	subwf	main@i,w
  9094  0EF7  1803               	btfsc	3,0
  9095  0EF8  2F04               	goto	l4167
  9096                           
  9097                           ;Multi_RX_testjig_v2.c: 940: {
  9098                           ;Multi_RX_testjig_v2.c: 941: TX_one(0x61);
  9099  0EF9  3061               	movlw	97
  9100  0EFA  3188  2086  3188   	fcall	_TX_one
  9101                           
  9102                           ;Multi_RX_testjig_v2.c: 942: RX_data = RX_one();
  9103  0EFD  3187  27D6  3188   	fcall	_RX_one
  9104  0F00  0020               	movlb	0	; select bank0
  9105  0F01  00D2               	movwf	main@RX_data
  9106                           
  9107                           ;Multi_RX_testjig_v2.c: 943: if(RX_data == 1)
  9108  0F02  0B52               	decfsz	main@RX_data,w
  9109  0F03  2EE2               	goto	l4161
  9110  0F04                     l4167:	
  9111                           
  9112                           ;Multi_RX_testjig_v2.c: 946: }
  9113                           ;Multi_RX_testjig_v2.c: 948: if(RX_data == 1)
  9114  0F04  0352               	decf	main@RX_data,w
  9115  0F05  1D03               	btfss	3,2
  9116  0F06  2F13               	goto	l4171
  9117                           
  9118                           ;Multi_RX_testjig_v2.c: 949: print_screen("Test RF", "Decode New - OK");
  9119  0F07  3077               	movlw	low (STR_111| (0+32768))
  9120  0F08  00F4               	movwf	print_screen@top
  9121  0F09  3093               	movlw	high (STR_111| (0+32768))
  9122  0F0A  00F5               	movwf	print_screen@top+1
  9123  0F0B  30AF               	movlw	low (STR_140| (0+32768))
  9124  0F0C  00F6               	movwf	print_screen@bottom
  9125  0F0D  3090               	movlw	high (STR_140| (0+32768))
  9126  0F0E  00F7               	movwf	print_screen@bottom+1
  9127  0F0F  3182  22D6  3188   	fcall	_print_screen
  9128  0F12  2F36               	goto	l4181
  9129  0F13                     l4171:	
  9130                           
  9131                           ;Multi_RX_testjig_v2.c: 950: else if(RX_data == 2)
  9132  0F13  3002               	movlw	2
  9133  0F14  0652               	xorwf	main@RX_data,w
  9134  0F15  1D03               	btfss	3,2
  9135  0F16  2F1F               	goto	l4175
  9136                           
  9137                           ;Multi_RX_testjig_v2.c: 951: print_error("Test RF", "Decode Old -Fail");
  9138  0F17  3077               	movlw	low (STR_111| (0+32768))
  9139  0F18  00F8               	movwf	print_error@top
  9140  0F19  3093               	movlw	high (STR_111| (0+32768))
  9141  0F1A  00F9               	movwf	print_error@top+1
  9142  0F1B  305B               	movlw	low (STR_142| (0+32768))
  9143  0F1C  00FA               	movwf	print_error@bottom
  9144  0F1D  3090               	movlw	high (STR_142| (0+32768))
  9145  0F1E  2F32               	goto	L7
  9146  0F1F                     l4175:	
  9147                           
  9148                           ;Multi_RX_testjig_v2.c: 952: else if(RX_data == 3)
  9149  0F1F  3003               	movlw	3
  9150  0F20  0652               	xorwf	main@RX_data,w
  9151  0F21  1D03               	btfss	3,2
  9152  0F22  2F2B               	goto	l4179
  9153                           
  9154                           ;Multi_RX_testjig_v2.c: 953: print_error("Test RF", "Error - Decode");
  9155  0F23  3077               	movlw	low (STR_111| (0+32768))
  9156  0F24  00F8               	movwf	print_error@top
  9157  0F25  3093               	movlw	high (STR_111| (0+32768))
  9158  0F26  00F9               	movwf	print_error@top+1
  9159  0F27  300E               	movlw	low (STR_144| (0+32768))
  9160  0F28  00FA               	movwf	print_error@bottom
  9161  0F29  3091               	movlw	high (STR_144| (0+32768))
  9162  0F2A  2F32               	goto	L7
  9163  0F2B                     l4179:	
  9164                           
  9165                           ;Multi_RX_testjig_v2.c: 954: else
  9166                           ;Multi_RX_testjig_v2.c: 955: print_error("Comms Error", " 15");
  9167  0F2B  3078               	movlw	low (STR_35| (0+32768))
  9168  0F2C  00F8               	movwf	print_error@top
  9169  0F2D  3092               	movlw	high (STR_35| (0+32768))
  9170  0F2E  00F9               	movwf	print_error@top+1
  9171  0F2F  3098               	movlw	low (STR_146| (0+32768))
  9172  0F30  00FA               	movwf	print_error@bottom
  9173  0F31  3093               	movlw	high (STR_146| (0+32768))
  9174  0F32                     L7:	
  9175  0F32  00FB               	movwf	print_error@bottom+1
  9176  0F33  3182  22F8  3188   	fcall	_print_error
  9177  0F36                     l4181:	
  9178                           
  9179                           ;Multi_RX_testjig_v2.c: 957: RE0 = 0;
  9180  0F36  0020               	movlb	0	; select bank0
  9181  0F37  1010               	bcf	16,0	;volatile
  9182  0F38                     l4183:	
  9183                           
  9184                           ;Multi_RX_testjig_v2.c: 958: }
  9185                           ;Multi_RX_testjig_v2.c: 960: if(device_type == 0xA2)
  9186  0F38  30A2               	movlw	162
  9187  0F39  0653               	xorwf	main@device_type,w
  9188  0F3A  1D03               	btfss	3,2
  9189  0F3B  2F5E               	goto	l4195
  9190                           
  9191                           ;Multi_RX_testjig_v2.c: 961: {
  9192                           ;Multi_RX_testjig_v2.c: 963: print_screen("T4 bus (CAN)", " ");
  9193  0F3C  30C7               	movlw	low (STR_147| (0+32768))
  9194  0F3D  00F4               	movwf	print_screen@top
  9195  0F3E  3091               	movlw	high (STR_147| (0+32768))
  9196  0F3F  00F5               	movwf	print_screen@top+1
  9197  0F40  30AD               	movlw	low ((STR_159+14)| (0+32768))
  9198  0F41  00F6               	movwf	print_screen@bottom
  9199  0F42  3090               	movlw	high ((STR_159+14)| (0+32768))
  9200  0F43  00F7               	movwf	print_screen@bottom+1
  9201  0F44  3182  22D6  3188   	fcall	_print_screen
  9202                           
  9203                           ;Multi_RX_testjig_v2.c: 964: TX_one(0xA0);
  9204  0F47  30A0               	movlw	160
  9205  0F48  3188  2086  3188   	fcall	_TX_one
  9206                           
  9207                           ;Multi_RX_testjig_v2.c: 965: RX_data = RX_one();
  9208  0F4B  3187  27D6  3188   	fcall	_RX_one
  9209  0F4E  0020               	movlb	0	; select bank0
  9210  0F4F  00D2               	movwf	main@RX_data
  9211                           
  9212                           ;Multi_RX_testjig_v2.c: 966: if(RX_data != 0xAA)
  9213  0F50  3AAA               	xorlw	170
  9214  0F51  1903               	btfsc	3,2
  9215  0F52  2F5E               	goto	l4195
  9216                           
  9217                           ;Multi_RX_testjig_v2.c: 967: print_error("Comms Error", " 18");
  9218  0F53  3078               	movlw	low (STR_35| (0+32768))
  9219  0F54  00F8               	movwf	print_error@top
  9220  0F55  3092               	movlw	high (STR_35| (0+32768))
  9221  0F56  00F9               	movwf	print_error@top+1
  9222  0F57  30A4               	movlw	low (STR_150| (0+32768))
  9223  0F58  00FA               	movwf	print_error@bottom
  9224  0F59  3093               	movlw	high (STR_150| (0+32768))
  9225  0F5A  00FB               	movwf	print_error@bottom+1
  9226  0F5B  3182  22F8  3188   	fcall	_print_error
  9227  0F5E                     l4195:	
  9228                           
  9229                           ;Multi_RX_testjig_v2.c: 971: }
  9230                           ;Multi_RX_testjig_v2.c: 973: if((device_type == 0xAA) || (device_type == 0xA1) || (devic
      +                          e_type == 0xA2))
  9231  0F5E  30AA               	movlw	170
  9232  0F5F  0020               	movlb	0	; select bank0
  9233  0F60  0653               	xorwf	main@device_type,w
  9234  0F61  1903               	btfsc	3,2
  9235  0F62  2F6B               	goto	l4201
  9236  0F63  30A1               	movlw	161
  9237  0F64  0653               	xorwf	main@device_type,w
  9238  0F65  1903               	btfsc	3,2
  9239  0F66  2F6B               	goto	l4201
  9240  0F67  30A2               	movlw	162
  9241  0F68  0653               	xorwf	main@device_type,w
  9242  0F69  1D03               	btfss	3,2
  9243  0F6A  2F8D               	goto	l4211
  9244  0F6B                     l4201:	
  9245                           
  9246                           ;Multi_RX_testjig_v2.c: 974: {
  9247                           ;Multi_RX_testjig_v2.c: 976: print_screen("Master Erase ", " ");
  9248  0F6B  304A               	movlw	low (STR_151| (0+32768))
  9249  0F6C  00F4               	movwf	print_screen@top
  9250  0F6D  3091               	movlw	high (STR_151| (0+32768))
  9251  0F6E  00F5               	movwf	print_screen@top+1
  9252  0F6F  30AD               	movlw	low ((STR_159+14)| (0+32768))
  9253  0F70  00F6               	movwf	print_screen@bottom
  9254  0F71  3090               	movlw	high ((STR_159+14)| (0+32768))
  9255  0F72  00F7               	movwf	print_screen@bottom+1
  9256  0F73  3182  22D6  3188   	fcall	_print_screen
  9257                           
  9258                           ;Multi_RX_testjig_v2.c: 977: TX_one(0x82);
  9259  0F76  3082               	movlw	130
  9260  0F77  3188  2086  3188   	fcall	_TX_one
  9261                           
  9262                           ;Multi_RX_testjig_v2.c: 978: RX_data = RX_one();
  9263  0F7A  3187  27D6  3188   	fcall	_RX_one
  9264  0F7D  0020               	movlb	0	; select bank0
  9265  0F7E  00D2               	movwf	main@RX_data
  9266                           
  9267                           ;Multi_RX_testjig_v2.c: 979: if(RX_data != 0x8A)
  9268  0F7F  3A8A               	xorlw	138
  9269  0F80  1903               	btfsc	3,2
  9270  0F81  2F8D               	goto	l4211
  9271                           
  9272                           ;Multi_RX_testjig_v2.c: 980: print_error("Comms Error", " 17");
  9273  0F82  3078               	movlw	low (STR_35| (0+32768))
  9274  0F83  00F8               	movwf	print_error@top
  9275  0F84  3092               	movlw	high (STR_35| (0+32768))
  9276  0F85  00F9               	movwf	print_error@top+1
  9277  0F86  30A0               	movlw	low (STR_154| (0+32768))
  9278  0F87  00FA               	movwf	print_error@bottom
  9279  0F88  3093               	movlw	high (STR_154| (0+32768))
  9280  0F89  00FB               	movwf	print_error@bottom+1
  9281  0F8A  3182  22F8  3188   	fcall	_print_error
  9282  0F8D                     l4211:	
  9283                           
  9284                           ;Multi_RX_testjig_v2.c: 981: }
  9285                           ;Multi_RX_testjig_v2.c: 983: if((device_type == 0xAA) || (device_type == 0xA1))
  9286  0F8D  30AA               	movlw	170
  9287  0F8E  0020               	movlb	0	; select bank0
  9288  0F8F  0653               	xorwf	main@device_type,w
  9289  0F90  1903               	btfsc	3,2
  9290  0F91  2F96               	goto	l4215
  9291  0F92  30A1               	movlw	161
  9292  0F93  0653               	xorwf	main@device_type,w
  9293  0F94  1D03               	btfss	3,2
  9294  0F95  2FB8               	goto	l4225
  9295  0F96                     l4215:	
  9296                           
  9297                           ;Multi_RX_testjig_v2.c: 984: {
  9298                           ;Multi_RX_testjig_v2.c: 986: print_screen("Set # of ", " channels");
  9299  0F96  30D2               	movlw	low (STR_155| (0+32768))
  9300  0F97  00F4               	movwf	print_screen@top
  9301  0F98  3092               	movlw	high (STR_155| (0+32768))
  9302  0F99  00F5               	movwf	print_screen@top+1
  9303  0F9A  30FA               	movlw	low (STR_156| (0+32768))
  9304  0F9B  00F6               	movwf	print_screen@bottom
  9305  0F9C  3092               	movlw	high (STR_156| (0+32768))
  9306  0F9D  00F7               	movwf	print_screen@bottom+1
  9307  0F9E  3182  22D6  3188   	fcall	_print_screen
  9308                           
  9309                           ;Multi_RX_testjig_v2.c: 987: TX_one(0x81);
  9310  0FA1  3081               	movlw	129
  9311  0FA2  3188  2086  3188   	fcall	_TX_one
  9312                           
  9313                           ;Multi_RX_testjig_v2.c: 988: RX_data = RX_one();
  9314  0FA5  3187  27D6  3188   	fcall	_RX_one
  9315  0FA8  0020               	movlb	0	; select bank0
  9316  0FA9  00D2               	movwf	main@RX_data
  9317                           
  9318                           ;Multi_RX_testjig_v2.c: 989: if(RX_data != 0x8A)
  9319  0FAA  3A8A               	xorlw	138
  9320  0FAB  1903               	btfsc	3,2
  9321  0FAC  2FB8               	goto	l4225
  9322                           
  9323                           ;Multi_RX_testjig_v2.c: 990: print_error("Comms Error", " 16");
  9324  0FAD  3078               	movlw	low (STR_35| (0+32768))
  9325  0FAE  00F8               	movwf	print_error@top
  9326  0FAF  3092               	movlw	high (STR_35| (0+32768))
  9327  0FB0  00F9               	movwf	print_error@top+1
  9328  0FB1  309C               	movlw	low (STR_158| (0+32768))
  9329  0FB2  00FA               	movwf	print_error@bottom
  9330  0FB3  3093               	movlw	high (STR_158| (0+32768))
  9331  0FB4  00FB               	movwf	print_error@bottom+1
  9332  0FB5  3182  22F8  3188   	fcall	_print_error
  9333  0FB8                     l4225:	
  9334                           
  9335                           ;Multi_RX_testjig_v2.c: 991: }
  9336                           ;Multi_RX_testjig_v2.c: 993: if((device_type == 0xAA) || (device_type == 0xA1)|| (device
      +                          _type == 0xA2))
  9337  0FB8  30AA               	movlw	170
  9338  0FB9  0020               	movlb	0	; select bank0
  9339  0FBA  0653               	xorwf	main@device_type,w
  9340  0FBB  1903               	btfsc	3,2
  9341  0FBC  2FC5               	goto	l4231
  9342  0FBD  30A1               	movlw	161
  9343  0FBE  0653               	xorwf	main@device_type,w
  9344  0FBF  1903               	btfsc	3,2
  9345  0FC0  2FC5               	goto	l4231
  9346  0FC1  30A2               	movlw	162
  9347  0FC2  0653               	xorwf	main@device_type,w
  9348  0FC3  1D03               	btfss	3,2
  9349  0FC4  2FF1               	goto	l457
  9350  0FC5                     l4231:	
  9351                           
  9352                           ;Multi_RX_testjig_v2.c: 994: {
  9353                           ;Multi_RX_testjig_v2.c: 996: print_screen("7seg, buzzer,  ", " button test");
  9354  0FC5  309F               	movlw	low (STR_159| (0+32768))
  9355  0FC6  00F4               	movwf	print_screen@top
  9356  0FC7  3090               	movlw	high (STR_159| (0+32768))
  9357  0FC8  00F5               	movwf	print_screen@top+1
  9358  0FC9  3022               	movlw	low (STR_160| (0+32768))
  9359  0FCA  00F6               	movwf	print_screen@bottom
  9360  0FCB  3092               	movlw	high (STR_160| (0+32768))
  9361  0FCC  00F7               	movwf	print_screen@bottom+1
  9362  0FCD  3182  22D6  3188   	fcall	_print_screen
  9363                           
  9364                           ;Multi_RX_testjig_v2.c: 997: TX_one(0x90);
  9365  0FD0  3090               	movlw	144
  9366  0FD1  3188  2086  3188   	fcall	_TX_one
  9367                           
  9368                           ;Multi_RX_testjig_v2.c: 998: TRISG0 = 1;
  9369  0FD4  0026               	movlb	6	; select bank6
  9370  0FD5  140D               	bsf	13,0	;volatile
  9371                           
  9372                           ;Multi_RX_testjig_v2.c: 999: _delay((unsigned long)((100)*(16000000/4000.0)));
  9373  0FD6  3003               	movlw	3
  9374  0FD7  0020               	movlb	0	; select bank0
  9375  0FD8  00CB               	movwf	??_main+2
  9376  0FD9  3008               	movlw	8
  9377  0FDA  00CA               	movwf	??_main+1
  9378  0FDB  3078               	movlw	120
  9379  0FDC  00C9               	movwf	??_main
  9380  0FDD                     u5157:	
  9381  0FDD  0BC9               	decfsz	??_main,f
  9382  0FDE  2FDD               	goto	u5157
  9383  0FDF  0BCA               	decfsz	??_main+1,f
  9384  0FE0  2FDD               	goto	u5157
  9385  0FE1  0BCB               	decfsz	??_main+2,f
  9386  0FE2  2FDD               	goto	u5157
  9387  0FE3                     l460:	
  9388                           ;Multi_RX_testjig_v2.c: 1000: while(RG1 == 1);
  9389                           
  9390  0FE3  0025               	movlb	5	; select bank5
  9391  0FE4  188D               	btfsc	13,1	;volatile
  9392  0FE5  2FE3               	goto	l460
  9393                           
  9394                           ;Multi_RX_testjig_v2.c: 1001: print_screen("waiting  ", " for comms");
  9395  0FE6  30C8               	movlw	low (STR_161| (0+32768))
  9396  0FE7  00F4               	movwf	print_screen@top
  9397  0FE8  3092               	movlw	high (STR_161| (0+32768))
  9398  0FE9  00F5               	movwf	print_screen@top+1
  9399  0FEA  30A7               	movlw	low (STR_162| (0+32768))
  9400  0FEB  00F6               	movwf	print_screen@bottom
  9401  0FEC  3092               	movlw	high (STR_162| (0+32768))
  9402  0FED  00F7               	movwf	print_screen@bottom+1
  9403  0FEE  3182  22D6  3188   	fcall	_print_screen
  9404  0FF1                     l457:	
  9405                           
  9406                           ;Multi_RX_testjig_v2.c: 1006: }
  9407                           ;Multi_RX_testjig_v2.c: 1008: testjig_done(1, device_type);
  9408  0FF1  0020               	movlb	0	; select bank0
  9409  0FF2  0853               	movf	main@device_type,w
  9410  0FF3  00F8               	movwf	testjig_done@device_type
  9411  0FF4  3001               	movlw	1
  9412  0FF5  3181  2182  3188   	fcall	_testjig_done
  9413                           
  9414                           ;Multi_RX_testjig_v2.c: 1018: testjig_done(1, device_type);
  9415  0FF8  0020               	movlb	0	; select bank0
  9416  0FF9  0853               	movf	main@device_type,w
  9417  0FFA  00F8               	movwf	testjig_done@device_type
  9418  0FFB  3001               	movlw	1
  9419  0FFC  3181  2182         	fcall	_testjig_done
  9420  0FFE  3180  289F         	ljmp	start
  9421  1000                     __end_of_main:	


Data Sizes:
    Strings     976
    Constant    0
    Data        2
    BSS         24
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      80
    BANK1            80      0       1
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0

Pointer List with Targets:

    print_screen@bottom	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_198(CODE[17]), STR_196(CODE[13]), STR_194(CODE[13]), STR_192(CODE[13]), 
		 -> STR_190(CODE[13]), STR_188(CODE[14]), STR_186(CODE[14]), STR_184(CODE[14]), 
		 -> STR_182(CODE[14]), STR_180(CODE[8]), STR_178(CODE[8]), STR_176(CODE[9]), 
		 -> STR_174(CODE[9]), STR_172(CODE[9]), STR_170(CODE[14]), STR_168(CODE[14]), 
		 -> STR_166(CODE[14]), STR_164(CODE[14]), STR_162(CODE[11]), STR_160(CODE[13]), 
		 -> STR_156(CODE[10]), STR_152(CODE[2]), STR_148(CODE[2]), STR_140(CODE[16]), 
		 -> STR_138(CODE[7]), STR_136(CODE[10]), STR_126(CODE[5]), STR_124(CODE[9]), 
		 -> STR_112(CODE[4]), STR_90(CODE[3]), STR_88(CODE[1]), STR_66(CODE[3]), 
		 -> STR_64(CODE[1]), STR_52(CODE[5]), STR_50(CODE[1]), STR_44(CODE[6]), 
		 -> STR_38(CODE[18]), STR_34(CODE[6]), STR_32(CODE[9]), STR_30(CODE[13]), 
		 -> STR_28(CODE[1]), STR_6(CODE[1]), STR_2(CODE[17]), 

    print_screen@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_197(CODE[12]), STR_195(CODE[17]), STR_193(CODE[16]), STR_191(CODE[12]), 
		 -> STR_189(CODE[15]), STR_187(CODE[17]), STR_185(CODE[16]), STR_183(CODE[12]), 
		 -> STR_181(CODE[15]), STR_179(CODE[17]), STR_177(CODE[9]), STR_175(CODE[16]), 
		 -> STR_173(CODE[5]), STR_171(CODE[8]), STR_169(CODE[14]), STR_167(CODE[16]), 
		 -> STR_165(CODE[9]), STR_163(CODE[12]), STR_161(CODE[10]), STR_159(CODE[16]), 
		 -> STR_155(CODE[10]), STR_151(CODE[14]), STR_147(CODE[13]), STR_139(CODE[8]), 
		 -> STR_137(CODE[8]), STR_135(CODE[8]), STR_125(CODE[8]), STR_123(CODE[8]), 
		 -> STR_111(CODE[8]), STR_89(CODE[9]), STR_87(CODE[9]), STR_65(CODE[9]), 
		 -> STR_63(CODE[9]), STR_51(CODE[11]), STR_49(CODE[11]), STR_43(CODE[13]), 
		 -> STR_37(CODE[9]), STR_33(CODE[13]), STR_31(CODE[19]), STR_29(CODE[12]), 
		 -> STR_27(CODE[19]), STR_5(CODE[15]), STR_1(CODE[9]), 

    print_error@bottom	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_158(CODE[4]), STR_154(CODE[4]), STR_150(CODE[4]), STR_146(CODE[4]), 
		 -> STR_144(CODE[15]), STR_142(CODE[17]), STR_134(CODE[13]), STR_132(CODE[14]), 
		 -> STR_130(CODE[4]), STR_128(CODE[4]), STR_122(CODE[13]), STR_120(CODE[16]), 
		 -> STR_118(CODE[14]), STR_116(CODE[4]), STR_114(CODE[4]), STR_110(CODE[4]), 
		 -> STR_108(CODE[9]), STR_106(CODE[3]), STR_104(CODE[7]), STR_102(CODE[4]), 
		 -> STR_100(CODE[4]), STR_98(CODE[15]), STR_96(CODE[16]), STR_94(CODE[3]), 
		 -> STR_92(CODE[9]), STR_86(CODE[3]), STR_84(CODE[9]), STR_82(CODE[3]), 
		 -> STR_80(CODE[7]), STR_78(CODE[4]), STR_76(CODE[4]), STR_74(CODE[15]), 
		 -> STR_72(CODE[16]), STR_70(CODE[3]), STR_68(CODE[9]), STR_62(CODE[9]), 
		 -> STR_60(CODE[3]), STR_58(CODE[7]), STR_56(CODE[3]), STR_54(CODE[9]), 
		 -> STR_48(CODE[18]), STR_46(CODE[14]), STR_42(CODE[3]), STR_40(CODE[12]), 
		 -> STR_36(CODE[3]), STR_26(CODE[12]), STR_24(CODE[11]), STR_22(CODE[13]), 
		 -> STR_20(CODE[13]), STR_18(CODE[13]), STR_16(CODE[13]), STR_14(CODE[12]), 
		 -> STR_12(CODE[11]), STR_10(CODE[13]), STR_8(CODE[13]), STR_4(CODE[14]), 

    print_error@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_157(CODE[12]), STR_153(CODE[12]), STR_149(CODE[12]), STR_145(CODE[12]), 
		 -> STR_143(CODE[8]), STR_141(CODE[8]), STR_133(CODE[13]), STR_131(CODE[13]), 
		 -> STR_129(CODE[12]), STR_127(CODE[12]), STR_121(CODE[12]), STR_119(CODE[12]), 
		 -> STR_117(CODE[12]), STR_115(CODE[12]), STR_113(CODE[12]), STR_109(CODE[12]), 
		 -> STR_107(CODE[10]), STR_105(CODE[12]), STR_103(CODE[9]), STR_101(CODE[12]), 
		 -> STR_99(CODE[12]), STR_97(CODE[9]), STR_95(CODE[9]), STR_93(CODE[12]), 
		 -> STR_91(CODE[10]), STR_85(CODE[12]), STR_83(CODE[10]), STR_81(CODE[12]), 
		 -> STR_79(CODE[9]), STR_77(CODE[12]), STR_75(CODE[12]), STR_73(CODE[9]), 
		 -> STR_71(CODE[9]), STR_69(CODE[12]), STR_67(CODE[10]), STR_61(CODE[19]), 
		 -> STR_59(CODE[12]), STR_57(CODE[16]), STR_55(CODE[12]), STR_53(CODE[19]), 
		 -> STR_47(CODE[12]), STR_45(CODE[12]), STR_41(CODE[12]), STR_39(CODE[13]), 
		 -> STR_35(CODE[12]), STR_25(CODE[14]), STR_23(CODE[11]), STR_21(CODE[15]), 
		 -> STR_19(CODE[15]), STR_17(CODE[14]), STR_15(CODE[14]), STR_13(CODE[14]), 
		 -> STR_11(CODE[11]), STR_9(CODE[14]), STR_7(CODE[14]), STR_3(CODE[9]), 

    i2c_Write_string@data	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_198(CODE[17]), STR_197(CODE[12]), STR_196(CODE[13]), STR_195(CODE[17]), 
		 -> STR_194(CODE[13]), STR_193(CODE[16]), STR_192(CODE[13]), STR_191(CODE[12]), 
		 -> STR_190(CODE[13]), STR_189(CODE[15]), STR_188(CODE[14]), STR_187(CODE[17]), 
		 -> STR_186(CODE[14]), STR_185(CODE[16]), STR_184(CODE[14]), STR_183(CODE[12]), 
		 -> STR_182(CODE[14]), STR_181(CODE[15]), STR_180(CODE[8]), STR_179(CODE[17]), 
		 -> STR_178(CODE[8]), STR_177(CODE[9]), STR_176(CODE[9]), STR_175(CODE[16]), 
		 -> STR_174(CODE[9]), STR_173(CODE[5]), STR_172(CODE[9]), STR_171(CODE[8]), 
		 -> STR_170(CODE[14]), STR_169(CODE[14]), STR_168(CODE[14]), STR_167(CODE[16]), 
		 -> STR_166(CODE[14]), STR_165(CODE[9]), STR_164(CODE[14]), STR_163(CODE[12]), 
		 -> STR_162(CODE[11]), STR_161(CODE[10]), STR_160(CODE[13]), STR_159(CODE[16]), 
		 -> STR_158(CODE[4]), STR_157(CODE[12]), STR_156(CODE[10]), STR_155(CODE[10]), 
		 -> STR_154(CODE[4]), STR_153(CODE[12]), STR_152(CODE[2]), STR_151(CODE[14]), 
		 -> STR_150(CODE[4]), STR_149(CODE[12]), STR_148(CODE[2]), STR_147(CODE[13]), 
		 -> STR_146(CODE[4]), STR_145(CODE[12]), STR_144(CODE[15]), STR_143(CODE[8]), 
		 -> STR_142(CODE[17]), STR_141(CODE[8]), STR_140(CODE[16]), STR_139(CODE[8]), 
		 -> STR_138(CODE[7]), STR_137(CODE[8]), STR_136(CODE[10]), STR_135(CODE[8]), 
		 -> STR_134(CODE[13]), STR_133(CODE[13]), STR_132(CODE[14]), STR_131(CODE[13]), 
		 -> STR_130(CODE[4]), STR_129(CODE[12]), STR_128(CODE[4]), STR_127(CODE[12]), 
		 -> STR_126(CODE[5]), STR_125(CODE[8]), STR_124(CODE[9]), STR_123(CODE[8]), 
		 -> STR_122(CODE[13]), STR_121(CODE[12]), STR_120(CODE[16]), STR_119(CODE[12]), 
		 -> STR_118(CODE[14]), STR_117(CODE[12]), STR_116(CODE[4]), STR_115(CODE[12]), 
		 -> STR_114(CODE[4]), STR_113(CODE[12]), STR_112(CODE[4]), STR_111(CODE[8]), 
		 -> STR_110(CODE[4]), STR_109(CODE[12]), STR_108(CODE[9]), STR_107(CODE[10]), 
		 -> STR_106(CODE[3]), STR_105(CODE[12]), STR_104(CODE[7]), STR_103(CODE[9]), 
		 -> STR_102(CODE[4]), STR_101(CODE[12]), STR_100(CODE[4]), STR_99(CODE[12]), 
		 -> STR_98(CODE[15]), STR_97(CODE[9]), STR_96(CODE[16]), STR_95(CODE[9]), 
		 -> STR_94(CODE[3]), STR_93(CODE[12]), STR_92(CODE[9]), STR_91(CODE[10]), 
		 -> STR_90(CODE[3]), STR_89(CODE[9]), STR_88(CODE[1]), STR_87(CODE[9]), 
		 -> STR_86(CODE[3]), STR_85(CODE[12]), STR_84(CODE[9]), STR_83(CODE[10]), 
		 -> STR_82(CODE[3]), STR_81(CODE[12]), STR_80(CODE[7]), STR_79(CODE[9]), 
		 -> STR_78(CODE[4]), STR_77(CODE[12]), STR_76(CODE[4]), STR_75(CODE[12]), 
		 -> STR_74(CODE[15]), STR_73(CODE[9]), STR_72(CODE[16]), STR_71(CODE[9]), 
		 -> STR_70(CODE[3]), STR_69(CODE[12]), STR_68(CODE[9]), STR_67(CODE[10]), 
		 -> STR_66(CODE[3]), STR_65(CODE[9]), STR_64(CODE[1]), STR_63(CODE[9]), 
		 -> STR_62(CODE[9]), STR_61(CODE[19]), STR_60(CODE[3]), STR_59(CODE[12]), 
		 -> STR_58(CODE[7]), STR_57(CODE[16]), STR_56(CODE[3]), STR_55(CODE[12]), 
		 -> STR_54(CODE[9]), STR_53(CODE[19]), STR_52(CODE[5]), STR_51(CODE[11]), 
		 -> STR_50(CODE[1]), STR_49(CODE[11]), STR_48(CODE[18]), STR_47(CODE[12]), 
		 -> STR_46(CODE[14]), STR_45(CODE[12]), STR_44(CODE[6]), STR_43(CODE[13]), 
		 -> STR_42(CODE[3]), STR_41(CODE[12]), STR_40(CODE[12]), STR_39(CODE[13]), 
		 -> STR_38(CODE[18]), STR_37(CODE[9]), STR_36(CODE[3]), STR_35(CODE[12]), 
		 -> STR_34(CODE[6]), STR_33(CODE[13]), STR_32(CODE[9]), STR_31(CODE[19]), 
		 -> STR_30(CODE[13]), STR_29(CODE[12]), STR_28(CODE[1]), STR_27(CODE[19]), 
		 -> STR_26(CODE[12]), STR_25(CODE[14]), STR_24(CODE[11]), STR_23(CODE[11]), 
		 -> STR_22(CODE[13]), STR_21(CODE[15]), STR_20(CODE[13]), STR_19(CODE[15]), 
		 -> STR_18(CODE[13]), STR_17(CODE[14]), STR_16(CODE[13]), STR_15(CODE[14]), 
		 -> STR_14(CODE[12]), STR_13(CODE[14]), STR_12(CODE[11]), STR_11(CODE[11]), 
		 -> STR_10(CODE[13]), STR_9(CODE[14]), STR_8(CODE[13]), STR_7(CODE[14]), 
		 -> STR_6(CODE[1]), STR_5(CODE[15]), STR_4(CODE[14]), STR_3(CODE[9]), 
		 -> STR_2(CODE[17]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _testjig_done->_print_screen
    _print_error->_print_screen
    _print_screen->_i2c_Write_string
    _i2c_second_line->_i2c_Write
    _i2c_first_line->_i2c_Write
    _i2c_Write_string->_i2c_Write
    _clear_lcd->_i2c_Write
    _lcd_print_int->_ten_thou_conv
    _ten_thou_conv->___wmul
    _lcd_set_cursor->_i2c_Write
    _i2c_write_char->_i2c_Write
    _init_i2c_lcd_5v->_i2c_Write
    _get_30v_current->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    ___ftadd->___ftmul
    _Vout_set->_digitalpot
    _digitalpot->_i2c_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_get_30v_current
    _get_30v_current->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   36170
                                             41 BANK0     11    11      0
                        _ADC_get_val
                             _RX_one
                     _RX_one_timeout
                             _TX_one
                           _Vout_set
                           _buzz_one
                      _debug_fast_tx
                    _get_30v_current
                           _init_ADC
                  _init_current_sink
                           _init_i2c
                    _init_i2c_lcd_5v
                      _lcd_print_int
                   _power_supply_set
                        _print_error
                       _print_screen
                       _testjig_done
 ---------------------------------------------------------------------------------
 (1) _testjig_done                                         5     4      1    6165
                                              8 COMMON     5     4      1
                           _buzz_one
                      _debug_fast_tx
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (1) _print_error                                          7     3      4   12021
                                              8 COMMON     4     0      4
                                              0 BANK0      3     3      0
                           _buzz_one
                          _clear_lcd
                      _debug_fast_tx
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (2) _print_screen                                         4     0      4    4947
                                              4 COMMON     4     0      4
                          _clear_lcd
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
 ---------------------------------------------------------------------------------
 (3) _i2c_second_line                                      1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_first_line                                       1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write_string                                     3     1      2     279
                                              1 COMMON     3     1      2
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _clear_lcd                                            2     2      0      22
                                              1 COMMON     2     2      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _power_supply_set                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _debug_fast_tx                                        3     1      2     493
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _buzz_one                                             2     0      2     234
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd_print_int                                        6     0      6    3320
                                              0 BANK0      6     0      6
                     _i2c_write_char
                     _lcd_set_cursor
                      _ten_thou_conv
 ---------------------------------------------------------------------------------
 (2) _ten_thou_conv                                        5     3      2    1805
                                              6 COMMON     5     3      2
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     756
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     908
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       3     2      1     147
                                              1 COMMON     3     2      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_write_char                                       1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c_lcd_5v                                      4     3      1     141
                                              1 COMMON     4     3      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init_current_sink                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_30v_current                                      4     2      2    6935
                                             37 BANK0      4     2      2
                        _ADC_get_val
                            ___ftadd
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    1743
                                              8 COMMON     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             13     9      4     305
                                             24 BANK0     13     9      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2102
                                             11 COMMON     3     3      0
                                              0 BANK0     12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    2694
                                             12 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _ADC_get_val                                          6     3      3      46
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Vout_set                                             6     4      2     317
                                              4 COMMON     6     4      2
                         _digitalpot
 ---------------------------------------------------------------------------------
 (2) _digitalpot                                           3     3      0      44
                                              1 COMMON     3     3      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (4) _i2c_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TX_one                                               3     3      0      69
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one_timeout                                       3     3      0      93
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one                                               3     3      0      93
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_get_val
   _RX_one
   _RX_one_timeout
   _TX_one
   _Vout_set
     _digitalpot
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _buzz_one
   _debug_fast_tx
   _get_30v_current
     _ADC_get_val
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _init_ADC
   _init_current_sink
   _init_i2c
   _init_i2c_lcd_5v
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _lcd_print_int
     _i2c_write_char
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _lcd_set_cursor
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _ten_thou_conv
       ___bmul
       ___wmul
   _power_supply_set
   _print_error
     _buzz_one
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _debug_fast_tx
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
   _print_screen
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _testjig_done
     _buzz_one
     _debug_fast_tx
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       1       7        1.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0      5F      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      5F      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Nov 15 14:06:15 2017

         _motor_direction_timer 005C                      __CFG_CP$ON 0000             ??_init_current_sink 0070  
                   main@RX_data 0052                               pc 0002                  ___bmul@product 0071  
              _power_supply_set 03F4             ___wmul@multiplicand 0072                      TX_one@data 0071  
                  ___ftadd@exp1 0037                    ___ftadd@exp2 0036                    ___ftadd@sign 0035  
                           l311 0760                             l304 06C8                             l404 0D53  
                           l501 0299                             l423 0E5D                             l512 03E4  
                           l432 0EC8                             l346 0AD3                             l460 0FE3  
                           l518 03D9                             l527 03E9                             l543 03C3  
                           l720 00D0                             l457 0FF1                             l393 0CD8  
                           l466 0183                             l475 01D6                             l379 0C2E  
                           l740 07E0                             l732 0890                             l492 0268  
                           l742 07E7                             l743 07E9                             l639 0171  
                           l727 02B6                             l752 0794                             l680 0459  
                           l737 07D6                             l921 058C                             l754 079B  
                           l690 03F6                             l755 079D                             l747 078A  
                           l692 03FB                             l933 05B1                             l693 0400  
                           l694 0405                             l957 04DE                             _GIE 005F  
                           _RA2 0062                             _RA4 0064                             _RA5 0065  
             ??_i2c_second_line 0071                             _RE0 0080                             _RF0 1460  
                           _RF1 1461                             _RF2 1462                             _RE4 0084  
                           _RG1 1469                             _RF3 1463                             _RE5 0085  
                           _RE6 0086                             _RG3 146B                             _RF5 1465  
                           _PR2 001B                             _PR8 0596                             _isr 0004  
                           _ten 0068                    __CFG_BORV$HI 0000                             wreg 0009  
                ?_lcd_print_int 0020                            S4321 080C                            S4325 07AE  
       __size_of_i2c_write_char 000D                 ?_lcd_set_cursor 0071                    __CFG_LVP$OFF 0000  
     __end_of_init_current_sink 086F                            l3021 0490                            l3017 0489  
                          l3113 0550                            l4001 0CCD                            l3051 04C8  
                          l3027 049F                            l3045 04BB                            l3125 0562  
                          l3117 0558                            l3141 05DF                            l3221 03BC  
                          l3301 025E                            l3071 04F4                            l3047 04BF  
                          l3039 04AD                            l3143 05E4                            l4111 0E42  
                          l4103 0E2B                            l3065 04E9                            l3057 04D6  
                          l3049 04C4                            l3129 056A                            l3313 0287  
                          l4201 0F6B                            l4033 0D4E                            l3083 0508  
                          l3059 04DA                            l3091 052B                            l3171 0618  
                          l3163 060B                            l3251 01B0                            l3243 01A0  
                          l4211 0F8D                            l4115 0E4E                            l4107 0E36  
                          l4035 0D4B                            l3405 0451                            l3421 011D  
                          l3317 028F                            l3309 027F                            l4141 0EAD  
                          l3351 00B1                            l3095 053C                            l3175 0626  
                          l3159 0604                            l3431 012E                            l3335 030D  
                          l3263 01E6                            l3247 01A8                            l3239 0198  
                          l4231 0FC5                            l4215 0F96                            l4151 0EF2  
                          l4071 0DBF                            l3361 00BB                            l3353 00B3  
                          l3169 060F                            l3433 0131                            l3425 0123  
                          l3417 0117                            l3273 01FC                            l4225 0FB8  
                          l4161 0EE2                            l4145 0EB9                            l4137 0EA2  
                          l4065 0DA7                            l4073 0DC7                            l4081 0DE7  
                          l4323 00DA                            l3371 00C5                            l3363 00BD  
                          l3355 00B5                            l3419 011A                            l4171 0F13  
                          l4067 0DAF                            l4075 0DCF                            l4083 0DEF  
                          l2741 03DB                            l3373 00C7                            l3365 00BF  
                          l3357 00B7                            l2901 02BD                            l3293 024E  
                          l3277 0208                            l3269 01F4                            l3285 0238  
                          l4181 0F36                            l4069 0DB7                            l4077 0DD7  
                          l4085 0DFA                            l3375 00C9                            l3367 00C1  
                          l3359 00B9                            l3383 00D5                            l3455 0154  
                          l3447 0148                            l3439 013A                            l3287 0240  
                          l4175 0F1F                            l4167 0F04                            l4183 0F38  
                          l4079 0DDF                            l3711 073F                            l3703 0719  
                          l2745 03E7                            l3377 00CB                            l3369 00C3  
                          l3385 00E7                            l3465 0165                            l3449 014B  
                          l3297 0256                            l4089 0E03                            l3379 00CD  
                          l3467 0168                            l2747 0383                            l4195 0F5E  
                          l4179 0F2B                            l3723 08D7                            l3715 0751  
                          l3707 072C                            l3493 0785                            l2909 040A  
                          l2757 038B                            l3813 0A1E                            l3741 08F8  
                          l3725 08A8                            l3495 078D                            l2863 0590  
                          l2759 039D                            l3903 0B79                            l3911 0B99  
                          l3735 08E2                            l2873 05AF                            l2865 0594  
                          l2953 00FB                            l2793 17ED                            l3905 0B81  
                          l3913 0BA4                            l3833 0A9C                            l3825 0A63  
                          l3761 0958                            l3753 092D                            l3745 0907  
                          l2875 05A7                            l2867 0599                            l2955 00FD  
                          l3907 0B89                            l2869 05A2                            l2797 17F3  
                          l3917 0BAD                            l3909 0B91                            l3837 0AA5  
                          l3829 0A76                            l3749 091A                            l3765 0967  
                          l3685 06BA                            l3951 0C26                            l3847 0AC4  
                          l3791 09ED                            l3695 070E                            l3697 06F5  
                          l3875 0B17                            l3787 09D4                            l3981 0C82  
                          l3949 0C29                            l3869 0B04                            l3983 0C8A  
                          l3991 0CA5                            l3879 0B20                            l3985 0C92  
                          l3993 0CAD                            l3987 0C9A                            l3995 0CB5  
                          ?_isr 0070                            l3997 0CBD                            l3999 0CC5  
                          STR_1 134C                            STR_2 107D                            STR_3 134C  
                          STR_4 1166                            STR_5 10FF                            STR_6 10AE  
                          STR_7 119E                            STR_8 11EE                            STR_9 119E  
                          u3025 05EB                            u5007 0BE5                            u2705 1723  
                          u5017 0C01                            u2650 02BB                            u2715 1732  
                          u5107 0D67                            u5027 0C19                            u3460 0895  
                          u2725 1741                            u5117 0D7A                            u5037 0C42  
                          u2735 175D                            u5207 0271                            u5127 0D92  
                          u5047 0C55                            u2745 1784                            u5217 02A2  
                          u5137 0E74                            u5057 0C6D                            u3474 0897  
                          u5307 088D                            u2755 17A6                            u5227 0326  
                          u5147 0EE8                            u5067 0CF2                            u5317 089A  
                          u5237 033D                            u5157 0FDD                            u5077 0D0A  
                          u5327 08A5                            u5247 02F4                            u5167 01CB  
                          u5087 0D26                            u5337 078F                            u5257 0352  
                          u5177 01DF                            u5097 0D3E                            u5347 07A1  
                          u5267 0365                            u5187 0218                            u5357 07AA  
                          u5277 03D0                            u5197 022E                            u5367 07DB  
                          u5287 0876                            u5377 07ED                            u5297 037D  
                          u4817 0694                            u5387 07F6                            u4907 09BC  
                          u4827 06A3                            u4917 09CD                            u4837 06AE  
                          u4927 09E6                            u4847 06E4                            u4937 09F6  
                          u4857 0771                            u4947 0A05                            u4867 0949  
                          u4957 0A45                            u4877 0982                            u4967 0A95  
                          u4887 099D                            u4977 0B46                            u4897 09AC  
                          u4987 0B62                            u4997 0BCD                            _TMR0 0015  
                          _WPUB 020D                            _WPUD 020F                            _WPUE 0210  
                  __CFG_WRT$OFF 0000                            _main 062F                    ___ftpack@arg 0070  
                          _hund 0066                    ___ftpack@exp 0073                            _thou 006B  
                          fsr0h 0005                            fsr0l 0004                            indf0 0000  
                          _unit 006A                            btemp 007E               ??_get_30v_current 007E  
                 __CFG_BOREN$ON 0000                            ltemp 007E                            start 009F  
                          ttemp 007E                            wtemp 007E                ??_RX_one_timeout 0070  
                 __CFG_IESO$OFF 0000         i2c_write_char@char_data 0071               ___bmul@multiplier 0072  
                 __CFG_MCLRE$ON 0000                    ___ftmul@cntr 002A                    ___ftmul@sign 002B  
               digitalpot@value 0073            __size_of_ADC_get_val 0012         __end_of_init_i2c_lcd_5v 03D6  
                  ___fttol@exp1 0044                    ___fttol@lval 0040                           ??_isr 0070  
                _i2c_first_line 0345                           ?_main 0070                 __end_of___ftadd 051A  
                         STR_10 11D4                           STR_11 113F                           STR_20 11EE  
                         STR_12 129C                           STR_21 113B                           STR_13 119E  
                         STR_22 11D4                           STR_30 1019                           STR_14 1284  
                         STR_31 1013                           STR_23 12BD                           STR_15 11AC  
                         STR_16 11EE                           STR_24 129C                           STR_32 1355  
                         STR_40 1248                           STR_41 1278                           STR_25 11AC  
                         STR_17 11AC                           STR_33 1208                           STR_50 10AE  
                         STR_42 131C                           STR_18 11D4                           STR_26 1284  
                         STR_34 12AC                           STR_51 12B2                           STR_35 1278  
                         STR_43 11BA                           STR_19 113B                           STR_27 1013  
                         STR_28 10AE                           STR_36 1313                           STR_44 125A  
                         STR_52 1362                           STR_60 13BB                           STR_61 1000  
                         STR_37 1304                           STR_29 126C                           STR_45 1254  
                         STR_53 1000                           STR_70 13BE                           STR_54 1316  
                         STR_62 130D                           STR_46 1158                           STR_38 1026  
                         STR_47 1254                           STR_55 1278                           STR_71 133A  
                         STR_63 131F                           STR_39 1215                           STR_64 10AE  
                         STR_80 12A0                           STR_56 13B8                           STR_72 10EF  
                         STR_48 1038                           STR_65 131F                           STR_73 133A  
                         STR_81 1278                           STR_49 12B2                           STR_57 10BF  
                         STR_90 13CD                           STR_58 12A0                           STR_66 13CD  
                         STR_82 13C1                           STR_74 112C                           STR_83 12DC  
                         STR_75 1278                           STR_59 1278                           STR_91 12E6  
                         STR_67 12DC                           STR_84 130D                           STR_92 1316  
                         STR_68 1316                           STR_76 13A8                           STR_93 1278  
                         STR_85 1278                           STR_77 1278                           STR_69 1278  
                         STR_94 13C7                           STR_86 13C4                           STR_78 13B0  
                         STR_79 133A                           STR_95 1343                           STR_87 1328  
                         STR_88 10AE                           STR_96 10EF                           STR_89 1328  
                         STR_97 1343                           STR_98 112C                           STR_99 1278  
               __end_of___ftmul 0584                 __end_of___fttol 062F                           _T2CON 001C  
                         _LATC2 0872                           _LATA6 0866                           _LATB5 086D  
                         _LATA7 0867                           _LATD2 087A                           _LATC5 0875  
                         _LATD4 087C                           _LATC6 0876                           _LATD5 087D  
                         _LATC7 0877                           _LATG0 1C68                           _LATD6 087E  
                         _LATF4 1C64           __end_of_debug_fast_tx 02D6                           _T8CON 0597  
                         i1l300 009D                           i1l282 0030                           i1l274 0012  
                         i1l292 0064                           i1l276 001B                           i1l293 0068  
                         i1l285 0041                           i1l295 0084                           i1l289 005B  
                         _PORTA 000C                           _PORTB 000D                           _PORTC 000E  
                         _PORTD 000F                           _PORTE 0010                           _PORTF 028C  
                         _PORTG 028D                    main@mem_size 004E                           _TRISA 008C  
                         _TRISB 008D                           _TRISC 008E                           _TRISD 008F  
                         _TRISE 0090                           _TRISF 030C                           _TRISG 030D  
                 __CFG_PWRTE$ON 0000                  __CFG_FCMEN$OFF 0000              _current_sink_timer 005A  
      __end_of_i2c_Write_string 039E                   ___ftpack@sign 0074                           main@i 0050  
                         ltemp0 007E                           ltemp1 0082                           ltemp2 0086  
                         ltemp3 0080                           ttemp0 007E                           ttemp1 0081  
                         ttemp2 0084                           ttemp3 0087                           ttemp4 007F  
                         status 0003                           wtemp0 007E                           wtemp1 0080  
                         wtemp2 0082                           wtemp3 0084                           wtemp4 0086  
                         wtemp5 0088                           wtemp6 007F                 __initialization 00A1  
    lcd_set_cursor@LCD_position 0073                    __end_of_main 1000          __end_of_i2c_first_line 0356  
              __end_of_i2c_Stop 03EC                  __CFG_LPBOR$OFF 0000                          ??_main 0049  
                 ___fttol@sign1 003F                 ??_lcd_print_int 007B             lcd_print_int@number 0020  
                        _ADCON0 009D                          _ADCON1 009E                          i1S4327 0800  
                        STR_100 13B4                          STR_101 1278                          STR_102 13AC  
                        STR_110 1384                          STR_103 1343                          STR_111 1377  
                        STR_112 1244                          STR_104 12A0                          STR_120 10CF  
                        STR_121 123C                          STR_113 1278                          STR_105 1278  
                        STR_106 13CA                          STR_130 1394                          STR_114 1388  
                        STR_122 122F                          _ADRESH 009C                          STR_107 12E6  
                        STR_123 1377                          STR_115 1278                          STR_131 11E1  
                        STR_108 130D                          STR_132 1182                          STR_116 138C  
                        STR_124 1331                          STR_140 10AF                          STR_141 1377  
                        STR_125 1377                          STR_133 11E1                          STR_109 1278  
                        STR_117 123C                          STR_126 11E9                          STR_134 122F  
                        STR_150 13A4                          STR_118 1182                          STR_142 105B  
                        _ADRESL 009B                          STR_119 123C                          STR_143 1377  
                        STR_135 1377                          STR_127 1278                          STR_151 114A  
                        STR_152 10AD                          STR_128 1390                          STR_136 12F0  
                        STR_160 1222                          STR_144 110E                          STR_137 1377  
                        STR_153 1278                          STR_145 1278                          STR_129 1278  
                        STR_161 12C8                          STR_170 1174                          STR_138 1116  
                        STR_154 13A0                          STR_146 1398                          STR_162 12A7  
                        STR_139 1377                          STR_171 1367                          STR_155 12D2  
                        STR_163 1290                          STR_147 11C7                          STR_148 10AD  
                        STR_172 1263                          STR_180 136F                          STR_156 12FA  
                        STR_164 1174                          STR_157 1278                          STR_149 1278  
                        STR_173 137F                          STR_165 135E                          STR_181 111D  
                        STR_182 1166                          STR_166 1174                          STR_174 1263  
                        STR_158 139C                          STR_190 11FB                          STR_191 1260  
                        STR_175 10DF                          STR_183 1260                          STR_167 10DF  
                        STR_159 109F                          STR_184 1166                          STR_192 11FB  
                        STR_168 1174                          STR_176 1263                          STR_177 134C  
                        STR_193 10DF                          STR_185 10DF                          STR_169 1190  
                        STR_186 1166                          STR_194 11FB                          STR_178 1264  
                        STR_195 104A                          STR_179 106C                          STR_187 104A  
                        STR_188 1166                          STR_196 11FB                          STR_197 11FC  
                        STR_189 111D                          STR_198 108E      __size_of_init_current_sink 0015  
                        _CCPR9L 061A                          _ANSELA 018C                          _ANSELB 018D  
                        _ANSELD 018F                          _ANSELE 0190                          _ANSELF 040C  
              __end_of___ftpack 05C2                          _ANSELG 040D              __size_of_i2c_Start 0005  
                        i1l3543 0013                          i1l3551 0024                          i1l3571 004F  
                        i1l3549 0023                          i1l3559 0039                          i1l3583 006F  
                        i1l3593 0090                          i1l3577 005F                          i1l3569 004E  
                        i1l3585 007A              __size_of_i2c_Write 000C                          i1l3595 0094  
                        i1l3589 0086                          i1l3599 009C                          _FVRCON 0117  
              __end_of_Vout_set 00E9                __end_of___lwtoft 05D2                          _OSCCON 0099  
                        _TMR0IE 005D                          _TMR0IF 005A                          _TRISC3 0473  
                        _TRISC4 0474                          _TRISG0 1868               print_error@bottom 007A  
                        _RX_one 07D6                          _TX_one 0886             _current_sink_stable 0058  
                        ___bmul 17C8                 ?_i2c_first_line 0070                          ___wmul 17EB  
                     ??___ftadd 0032                  __CFG_STVREN$ON 0000                       ??___ftmul 007B  
                     ??___fttol 003C                __end_of_init_ADC 085A                ?_init_i2c_lcd_5v 0071  
              __end_of_init_i2c 0886                __end_of_buzz_one 03F4                _ADC_cur_sink_val 0054  
         ___ftmul@f3_as_product 0027                   i2c_Write@data 0070                  _i2c_write_char 0175  
             debug_fast_tx@data 0070        __end_of_power_supply_set 0415                    ?_print_error 0078  
       __end_of__initialization 00AC                      ___ftadd@f1 002C                      ___ftadd@f2 002F  
           ___bmul@multiplicand 0070                      ___ftmul@f1 0020                      ___ftmul@f2 0023  
               _i2c_second_line 02E7                      ___fttol@f1 0038                  __pcstackCOMMON 0070  
                  __pidataBANK0 0000                  print_error@top 0078           __end_of_ten_thou_conv 17C8  
             __end_of_i2c_Start 03E7               __end_of_i2c_Write 03E2              __size_of_clear_lcd 0015  
                    ___lwtoft@c 0078                ??_lcd_set_cursor 0072          __end_of_i2c_write_char 0182  
               _get_30v_current 0415            i2c_Write_string@data 0071            lcd_print_int@decimal 0024  
              _one_second_timer 006E                      __pbssBANK0 0054                       ?_i2c_Stop 0070  
   lcd_print_int@ten_thou_digit 0025                         ?_RX_one 0070              ADC_get_val@channel 0073  
                       ?_TX_one 0070                      __pmaintext 062F                         ?___bmul 0070  
                       ?___wmul 0070                      __pintentry 0004                      _digitalpot 036B  
                       _CCP9CON 061C                       ?___ftpack 0070                       ?_Vout_set 0074  
                     ?___lwtoft 0078                 ?_i2c_write_char 0070                         _SSP1ADD 0212  
                       _SSP1BUF 0211               ?_i2c_Write_string 0071                         RX_one@i 0071  
                       TX_one@i 0072              ??_i2c_Write_string 0073                      ??_i2c_Stop 0070  
                     ?_init_ADC 0070         __end_of_i2c_second_line 02F8                       ?_init_i2c 0070  
             __end_of_clear_lcd 036B                       ?_buzz_one 0070                   ??_ADC_get_val 0073  
               __size_of_RX_one 0024                 __size_of_TX_one 0022                 __size_of___bmul 0023  
                       ___ftadd 0466                 __size_of___wmul 0015                         ___ftmul 051A  
                       ___fttol 05D2                      ??___ftpack 0075         __end_of_get_30v_current 0454  
                       __ptext1 0182                         __ptext2 02F8                         __ptext3 02D6  
                       __ptext4 02E7                         __ptext5 0345                         __ptext6 0383  
                       __ptext7 0356                         __ptext8 03F4                         __ptext9 02A9  
                    ??_Vout_set 0076                      ??___lwtoft 007B                    __size_of_isr 009B  
                    _buzz_timer 006C  init_i2c_lcd_5v@single1_double2 0071                         clrloop0 07FB  
          end_of_initialization 00AC                      ??_init_ADC 0070                      ??_init_i2c 0070  
                    ??_buzz_one 0072                ??_i2c_first_line 0071            __size_of_print_error 004D  
        __size_of_debug_fast_tx 002D                         psplit$0 C0035                    __pstringtext 1000  
                   ?_digitalpot 0070             __end_of_ADC_get_val 0466              RX_one_timeout@data 0072  
       __size_of_RX_one_timeout 002F                __CFG_FOSC$INTOSC 0000           __end_of_lcd_print_int 0175  
                 ?_print_screen 0074            pnum$maintext_split_1 0035                   ?_testjig_done 0078  
             ?_power_supply_set 0070                ?_i2c_second_line 0070              ??_power_supply_set 0070  
                ten_thou_conv@n 0076                     ___ftmul@exp 0026                  __end_of_RX_one 07FA  
                __end_of_TX_one 08A8                  __end_of___bmul 17EB                  __end_of___wmul 1800  
                  buzz_one@time 0070                ?_get_30v_current 0045                   _debug_fast_tx 02A9  
                     _i2c_Start 03E2                       _i2c_Write 03D6             start_initialization 00A1  
      __size_of_init_i2c_lcd_5v 0038                  ??_print_screen 0078                     __end_of_isr 009F  
                ??_testjig_done 0079             __size_of_digitalpot 0018               __size_of_i2c_Stop 0005  
               print_screen@top 0074                        ??_RX_one 0070                        ??_TX_one 0070  
                   _ADC_get_val 0454         testjig_done@device_type 0078                        ??___bmul 0071  
                      ??___wmul 0074                     __pdataBANK0 006E                ??_i2c_write_char 0071  
                ?_debug_fast_tx 0070               __size_of___ftpack 003E                      ?_i2c_Start 0070  
                    ?_i2c_Write 0070               __size_of_Vout_set 0039                       ___latbits 0003  
             __size_of___lwtoft 0010                 main@device_type 0053                   __pcstackBANK0 0020  
            _pickit_red_counter 0067                lcd_print_int@pos 0022          __size_of_ten_thou_conv 00AF  
                     __pnvBANK0 006C                       __pnvBANK1 00A0               __size_of_init_ADC 0007  
             __size_of_init_i2c 0017                       _clear_lcd 0356               __size_of_buzz_one 0008  
     __size_of_i2c_Write_string 001B                        ?___ftadd 002C                        ?___ftmul 0020  
                      ?___fttol 0038                  _RX_one_timeout 077F                       __pswtext1 080C  
                     __pswtext2 07AE                       __pswtext3 0800                        _CCPTMRS2 029F  
              __CFG_WDTE$SWDTEN 0000               ??_init_i2c_lcd_5v 0072         __size_of_lcd_set_cursor 0018  
                ___wmul@product 0074                       clear_ram0 07FA                        _PIE1bits 0091  
                      _PCONbits 0096                        _PIR1bits 0011                      ?_clear_lcd 0070  
          __end_of_print_screen 02E7              print_screen@bottom 0076                        _SSP1CON1 0215  
                      _SSP1CON2 0216            __end_of_testjig_done 02A9          __end_of_RX_one_timeout 07AE  
                  ??_digitalpot 0071                        _SSP1STAT 0214                    _pickit_timer 005E  
                  _pickit_state 00A0                   _ten_thou_conv 1719                 ??_debug_fast_tx 0072  
                    _ADCON0bits 009D               ___wmul@multiplier 0070                     ??_i2c_Start 0070  
                   ??_i2c_Write 0070                  debug_fast_tx@i 0072               testjig_done@state 007C  
                      _i2c_Stop 03E7                   ??_print_error 0020              __end_of_digitalpot 0383  
         ADC_get_val@return_val 0074                   Vout_set@Volts 0074                 ?_RX_one_timeout 0070  
               RX_one_timeout@i 0071                    pnum$maintext 000C                  ?_ten_thou_conv 0076  
              __size_of___ftadd 00B4                __size_of___ftmul 006A                __size_of___fttol 005D  
     __size_of_power_supply_set 0021                        ___ftpack 0584                        _Vout_set 00B0  
                      ___lwtoft 05C2         init_i2c_lcd_5v@contrast 0074               Vout_set@digi_step 0076  
                      __ptext10 03EC                        __ptext11 0101                        __ptext20 0853  
                      __ptext12 1719                        __ptext21 0415                        __ptext13 17EB  
                      __ptext30 03D6                        __ptext22 05C2                        __ptext14 17C8  
                      __ptext31 03E7                        __ptext23 05D2                        __ptext15 00E9  
                      __ptext32 03E2                        __ptext24 051A                        __ptext16 0175  
                      __ptext33 0886                        __ptext25 0466                        __ptext17 039E  
                      __ptext34 077F                        __ptext26 0584                        __ptext18 086F  
                      __ptext35 07D6                        __ptext27 0454                        __ptext19 085A  
                      __ptext28 00B0                        __ptext29 036B                    _SSP1CON2bits 0216  
                      _init_ADC 0853                        _init_i2c 086F                   __size_of_main 09D1  
                      _buzz_one 03EC                    ?_ADC_get_val 0070                     ??_clear_lcd 0071  
           __end_of_print_error 0345                _i2c_Write_string 0383                        _ten_thou 0069  
                      _tj_timer 0062          __size_of_lcd_print_int 0074        __size_of_i2c_second_line 0011  
                      int$flags 007E                    _SSP1STATbits 0214                        main@temp 004C  
       __size_of_i2c_first_line 0011              _uart_receive_timer 0064             get_30v_current@temp 0047  
                    _INTCONbits 000B        __size_of_get_30v_current 003F                        intlevel1 0000  
                _lcd_set_cursor 00E9               lcd_set_cursor@col 0071               lcd_set_cursor@row 0072  
         __size_of_print_screen 0011               __CFG_CLKOUTEN$OFF 0000           __size_of_testjig_done 0127  
        power_supply_set@supply 0070                 ??_ten_thou_conv 0078                      _OPTION_REG 0095  
                 _testjig_timer 0060                 _init_i2c_lcd_5v 039E                   _lcd_print_int 0101  
               _curent_sink_val 0056                    _print_screen 02D6          __end_of_lcd_set_cursor 0101  
                  _testjig_done 0182               _init_current_sink 085A                      RX_one@data 0072  
                   _print_error 02F8              ?_init_current_sink 0070  
