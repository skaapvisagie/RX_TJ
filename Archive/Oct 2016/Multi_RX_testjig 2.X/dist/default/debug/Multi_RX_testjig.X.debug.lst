

Microchip Technology PIC PRO Macro Assembler V1.38 build -256452561 
                                                                                               Mon Oct 17 15:23:59 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	stringtext,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	swtext1,local,class=CONST,delta=2
    17                           	psect	text18,local,class=CODE,merge=1,delta=2
    18                           	psect	text19,local,class=CODE,merge=1,delta=2
    19                           	psect	text21,local,class=CODE,merge=1,delta=2
    20                           	psect	text28,local,class=CODE,merge=1,delta=2
    21                           	psect	swtext2,local,class=CONST,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	swtext3,local,class=CONST,delta=2
    24                           	psect	pa_nodes,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     	;# 
    27  0001                     	;# 
    28  0002                     	;# 
    29  0003                     	;# 
    30  0004                     	;# 
    31  0005                     	;# 
    32  0006                     	;# 
    33  0007                     	;# 
    34  0008                     	;# 
    35  0009                     	;# 
    36  000A                     	;# 
    37  000B                     	;# 
    38  000C                     	;# 
    39  000D                     	;# 
    40  000E                     	;# 
    41  000F                     	;# 
    42  0010                     	;# 
    43  0011                     	;# 
    44  0012                     	;# 
    45  0013                     	;# 
    46  0014                     	;# 
    47  0015                     	;# 
    48  0016                     	;# 
    49  0016                     	;# 
    50  0017                     	;# 
    51  0018                     	;# 
    52  0019                     	;# 
    53  001A                     	;# 
    54  001B                     	;# 
    55  001C                     	;# 
    56  008C                     	;# 
    57  008D                     	;# 
    58  008E                     	;# 
    59  008F                     	;# 
    60  0090                     	;# 
    61  0091                     	;# 
    62  0092                     	;# 
    63  0093                     	;# 
    64  0094                     	;# 
    65  0095                     	;# 
    66  0096                     	;# 
    67  0097                     	;# 
    68  0099                     	;# 
    69  009A                     	;# 
    70  009B                     	;# 
    71  009B                     	;# 
    72  009C                     	;# 
    73  009D                     	;# 
    74  009E                     	;# 
    75  010C                     	;# 
    76  010D                     	;# 
    77  010E                     	;# 
    78  010F                     	;# 
    79  0110                     	;# 
    80  0116                     	;# 
    81  0117                     	;# 
    82  011D                     	;# 
    83  018C                     	;# 
    84  018D                     	;# 
    85  018F                     	;# 
    86  0190                     	;# 
    87  0191                     	;# 
    88  0191                     	;# 
    89  0192                     	;# 
    90  0193                     	;# 
    91  0193                     	;# 
    92  0194                     	;# 
    93  0195                     	;# 
    94  0196                     	;# 
    95  0197                     	;# 
    96  0199                     	;# 
    97  0199                     	;# 
    98  0199                     	;# 
    99  019A                     	;# 
   100  019A                     	;# 
   101  019A                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019C                     	;# 
   108  019C                     	;# 
   109  019C                     	;# 
   110  019D                     	;# 
   111  019D                     	;# 
   112  019D                     	;# 
   113  019E                     	;# 
   114  019E                     	;# 
   115  019E                     	;# 
   116  019F                     	;# 
   117  019F                     	;# 
   118  019F                     	;# 
   119  020D                     	;# 
   120  020F                     	;# 
   121  0210                     	;# 
   122  0211                     	;# 
   123  0211                     	;# 
   124  0212                     	;# 
   125  0212                     	;# 
   126  0213                     	;# 
   127  0213                     	;# 
   128  0214                     	;# 
   129  0214                     	;# 
   130  0215                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0216                     	;# 
   134  0216                     	;# 
   135  0217                     	;# 
   136  0217                     	;# 
   137  0219                     	;# 
   138  021A                     	;# 
   139  021B                     	;# 
   140  021C                     	;# 
   141  021D                     	;# 
   142  021E                     	;# 
   143  021F                     	;# 
   144  028C                     	;# 
   145  028D                     	;# 
   146  0291                     	;# 
   147  0291                     	;# 
   148  0292                     	;# 
   149  0293                     	;# 
   150  0298                     	;# 
   151  0298                     	;# 
   152  0299                     	;# 
   153  029A                     	;# 
   154  029D                     	;# 
   155  029E                     	;# 
   156  029F                     	;# 
   157  030C                     	;# 
   158  030D                     	;# 
   159  0311                     	;# 
   160  0311                     	;# 
   161  0312                     	;# 
   162  0313                     	;# 
   163  0318                     	;# 
   164  0318                     	;# 
   165  0319                     	;# 
   166  031A                     	;# 
   167  031C                     	;# 
   168  031C                     	;# 
   169  031D                     	;# 
   170  031E                     	;# 
   171  038C                     	;# 
   172  038D                     	;# 
   173  0394                     	;# 
   174  0395                     	;# 
   175  0396                     	;# 
   176  040C                     	;# 
   177  040D                     	;# 
   178  0411                     	;# 
   179  0411                     	;# 
   180  0412                     	;# 
   181  0413                     	;# 
   182  0414                     	;# 
   183  0415                     	;# 
   184  0416                     	;# 
   185  0417                     	;# 
   186  0418                     	;# 
   187  0418                     	;# 
   188  0419                     	;# 
   189  041A                     	;# 
   190  041B                     	;# 
   191  041C                     	;# 
   192  041D                     	;# 
   193  041E                     	;# 
   194  048D                     	;# 
   195  0491                     	;# 
   196  0491                     	;# 
   197  0492                     	;# 
   198  0492                     	;# 
   199  0493                     	;# 
   200  0493                     	;# 
   201  0493                     	;# 
   202  0494                     	;# 
   203  0494                     	;# 
   204  0495                     	;# 
   205  0495                     	;# 
   206  0496                     	;# 
   207  0496                     	;# 
   208  0497                     	;# 
   209  0497                     	;# 
   210  0595                     	;# 
   211  0596                     	;# 
   212  0597                     	;# 
   213  059C                     	;# 
   214  059D                     	;# 
   215  059E                     	;# 
   216  0611                     	;# 
   217  0611                     	;# 
   218  0612                     	;# 
   219  0613                     	;# 
   220  0614                     	;# 
   221  0614                     	;# 
   222  0615                     	;# 
   223  0616                     	;# 
   224  0617                     	;# 
   225  0617                     	;# 
   226  0618                     	;# 
   227  0619                     	;# 
   228  061A                     	;# 
   229  061A                     	;# 
   230  061B                     	;# 
   231  061C                     	;# 
   232  061D                     	;# 
   233  061D                     	;# 
   234  061E                     	;# 
   235  061F                     	;# 
   236  0FE4                     	;# 
   237  0FE5                     	;# 
   238  0FE6                     	;# 
   239  0FE7                     	;# 
   240  0FE8                     	;# 
   241  0FE9                     	;# 
   242  0FEA                     	;# 
   243  0FEB                     	;# 
   244  0FED                     	;# 
   245  0FEE                     	;# 
   246  0FEF                     	;# 
   247                           
   248                           	psect	idataBANK0
   249  0000                     __pidataBANK0:	
   250                           
   251                           	psect	nvBANK0
   252  006F                     __pnvBANK0:	
   253  006F                     _pickit_state:	
   254  006F                     	ds	1
   255                           
   256                           	psect	nvBANK1
   257  00A0                     __pnvBANK1:	
   258  00A0                     _buzz_timer:	
   259  00A0                     	ds	2
   260  000B                     _INTCONbits	set	11
   261  0011                     _PIR1bits	set	17
   262  000C                     _PORTA	set	12
   263  000D                     _PORTB	set	13
   264  000E                     _PORTC	set	14
   265  000F                     _PORTD	set	15
   266  0010                     _PORTE	set	16
   267  001B                     _PR2	set	27
   268  001C                     _T2CON	set	28
   269  0015                     _TMR0	set	21
   270  005F                     _GIE	set	95
   271  0062                     _RA2	set	98
   272  0064                     _RA4	set	100
   273  0065                     _RA5	set	101
   274  0080                     _RE0	set	128
   275  0084                     _RE4	set	132
   276  0085                     _RE5	set	133
   277  0086                     _RE6	set	134
   278  005D                     _TMR0IE	set	93
   279  005A                     _TMR0IF	set	90
   280  009D                     _ADCON0	set	157
   281  009D                     _ADCON0bits	set	157
   282  009E                     _ADCON1	set	158
   283  009C                     _ADRESH	set	156
   284  009B                     _ADRESL	set	155
   285  0095                     _OPTION_REG	set	149
   286  0099                     _OSCCON	set	153
   287  0096                     _PCONbits	set	150
   288  0091                     _PIE1bits	set	145
   289  008C                     _TRISA	set	140
   290  008D                     _TRISB	set	141
   291  008E                     _TRISC	set	142
   292  008F                     _TRISD	set	143
   293  0090                     _TRISE	set	144
   294  0473                     _TRISC3	set	1139
   295  0474                     _TRISC4	set	1140
   296  0117                     _FVRCON	set	279
   297  0866                     _LATA6	set	2150
   298  0867                     _LATA7	set	2151
   299  086D                     _LATB5	set	2157
   300  0872                     _LATC2	set	2162
   301  0875                     _LATC5	set	2165
   302  0876                     _LATC6	set	2166
   303  0877                     _LATC7	set	2167
   304  087A                     _LATD2	set	2170
   305  087C                     _LATD4	set	2172
   306  087D                     _LATD5	set	2173
   307  087E                     _LATD6	set	2174
   308  018C                     _ANSELA	set	396
   309  018D                     _ANSELB	set	397
   310  018F                     _ANSELD	set	399
   311  0190                     _ANSELE	set	400
   312  0212                     _SSP1ADD	set	530
   313  0211                     _SSP1BUF	set	529
   314  0215                     _SSP1CON1	set	533
   315  0216                     _SSP1CON2	set	534
   316  0216                     _SSP1CON2bits	set	534
   317  0214                     _SSP1STAT	set	532
   318  0214                     _SSP1STATbits	set	532
   319  020D                     _WPUB	set	525
   320  020F                     _WPUD	set	527
   321  0210                     _WPUE	set	528
   322  029F                     _CCPTMRS2	set	671
   323  028C                     _PORTF	set	652
   324  028D                     _PORTG	set	653
   325  1460                     _RF0	set	5216
   326  1461                     _RF1	set	5217
   327  1462                     _RF2	set	5218
   328  1463                     _RF3	set	5219
   329  1465                     _RF5	set	5221
   330  1469                     _RG1	set	5225
   331  146B                     _RG3	set	5227
   332  030C                     _TRISF	set	780
   333  030D                     _TRISG	set	781
   334  1868                     _TRISG0	set	6248
   335  1C68                     _LATG0	set	7272
   336  040C                     _ANSELF	set	1036
   337  040D                     _ANSELG	set	1037
   338  0596                     _PR8	set	1430
   339  0597                     _T8CON	set	1431
   340  061C                     _CCP9CON	set	1564
   341  061A                     _CCPR9L	set	1562
   342                           
   343                           	psect	stringtext
   344  1000                     __pstringtext:	
   345  1000                     STR_53:	
   346  1000  3452               	retlw	82	;'R'
   347  1001  3465               	retlw	101	;'e'
   348  1002  346C               	retlw	108	;'l'
   349  1003  3461               	retlw	97	;'a'
   350  1004  3479               	retlw	121	;'y'
   351  1005  3420               	retlw	32	;' '
   352  1006  3464               	retlw	100	;'d'
   353  1007  3465               	retlw	101	;'e'
   354  1008  342D               	retlw	45	;'-'
   355  1009  3465               	retlw	101	;'e'
   356  100A  346E               	retlw	110	;'n'
   357  100B  3465               	retlw	101	;'e'
   358  100C  3472               	retlw	114	;'r'
   359  100D  3467               	retlw	103	;'g'
   360  100E  3469               	retlw	105	;'i'
   361  100F  347A               	retlw	122	;'z'
   362  1010  3465               	retlw	101	;'e'
   363  1011  3464               	retlw	100	;'d'
   364  1012  3400               	retlw	0
   365  1013                     STR_27:	
   366  1013  3450               	retlw	80	;'P'
   367  1014  3469               	retlw	105	;'i'
   368  1015  3463               	retlw	99	;'c'
   369  1016  346B               	retlw	107	;'k'
   370  1017  3469               	retlw	105	;'i'
   371  1018  3474               	retlw	116	;'t'
   372  1019  3420               	retlw	32	;' '
   373  101A  3450               	retlw	80	;'P'
   374  101B  3472               	retlw	114	;'r'
   375  101C  346F               	retlw	111	;'o'
   376  101D  3467               	retlw	103	;'g'
   377  101E  3472               	retlw	114	;'r'
   378  101F  3461               	retlw	97	;'a'
   379  1020  346D               	retlw	109	;'m'
   380  1021  346D               	retlw	109	;'m'
   381  1022  3469               	retlw	105	;'i'
   382  1023  346E               	retlw	110	;'n'
   383  1024  3467               	retlw	103	;'g'
   384  1025  3400               	retlw	0
   385  1026                     STR_165:	
   386  1026  344D               	retlw	77	;'M'
   387  1027  3475               	retlw	117	;'u'
   388  1028  346C               	retlw	108	;'l'
   389  1029  3474               	retlw	116	;'t'
   390  102A  3469               	retlw	105	;'i'
   391  102B  345F               	retlw	95	;'_'
   392  102C  3452               	retlw	82	;'R'
   393  102D  3458               	retlw	88	;'X'
   394  102E  3420               	retlw	32	;' '
   395  102F  3454               	retlw	84	;'T'
   396  1030  3465               	retlw	101	;'e'
   397  1031  3473               	retlw	115	;'s'
   398  1032  3474               	retlw	116	;'t'
   399  1033  346A               	retlw	106	;'j'
   400  1034  3469               	retlw	105	;'i'
   401  1035  3467               	retlw	103	;'g'
   402  1036  3400               	retlw	0
   403  1037                     STR_142:	
   404  1037  3444               	retlw	68	;'D'
   405  1038  3465               	retlw	101	;'e'
   406  1039  3463               	retlw	99	;'c'
   407  103A  346F               	retlw	111	;'o'
   408  103B  3464               	retlw	100	;'d'
   409  103C  3465               	retlw	101	;'e'
   410  103D  3420               	retlw	32	;' '
   411  103E  344F               	retlw	79	;'O'
   412  103F  346C               	retlw	108	;'l'
   413  1040  3464               	retlw	100	;'d'
   414  1041  3420               	retlw	32	;' '
   415  1042  342D               	retlw	45	;'-'
   416  1043  3446               	retlw	70	;'F'
   417  1044  3461               	retlw	97	;'a'
   418  1045  3469               	retlw	105	;'i'
   419  1046  346C               	retlw	108	;'l'
   420  1047  3400               	retlw	0
   421  1048                     STR_163:	
   422  1048  3454               	retlw	84	;'T'
   423  1049  3465               	retlw	101	;'e'
   424  104A  3473               	retlw	115	;'s'
   425  104B  3474               	retlw	116	;'t'
   426  104C  346A               	retlw	106	;'j'
   427  104D  3469               	retlw	105	;'i'
   428  104E  3467               	retlw	103	;'g'
   429  104F  3420               	retlw	32	;' '
   430  1050  3450               	retlw	80	;'P'
   431  1051  346F               	retlw	111	;'o'
   432  1052  3477               	retlw	119	;'w'
   433  1053  3465               	retlw	101	;'e'
   434  1054  3472               	retlw	114	;'r'
   435  1055  342D               	retlw	45	;'-'
   436  1056  3475               	retlw	117	;'u'
   437  1057  3470               	retlw	112	;'p'
   438  1058  3400               	retlw	0
   439  1059                     STR_2:	
   440  1059  3454               	retlw	84	;'T'
   441  105A  3465               	retlw	101	;'e'
   442  105B  3473               	retlw	115	;'s'
   443  105C  3474               	retlw	116	;'t'
   444  105D  342D               	retlw	45	;'-'
   445  105E  344A               	retlw	74	;'J'
   446  105F  3469               	retlw	105	;'i'
   447  1060  3467               	retlw	103	;'g'
   448  1061  347C               	retlw	124	;'|'
   449  1062  3453               	retlw	83	;'S'
   450  1063  3474               	retlw	116	;'t'
   451  1064  3461               	retlw	97	;'a'
   452  1065  3472               	retlw	114	;'r'
   453  1066  3474               	retlw	116	;'t'
   454  1067  3475               	retlw	117	;'u'
   455  1068  3470               	retlw	112	;'p'
   456  1069  3400               	retlw	0
   457  106A                     STR_170:	
   458  106A  3420               	retlw	32	;' '
   459  106B  3474               	retlw	116	;'t'
   460  106C  346F               	retlw	111	;'o'
   461  106D  3420               	retlw	32	;' '
   462  106E  3472               	retlw	114	;'r'
   463  106F  3465               	retlw	101	;'e'
   464  1070  3473               	retlw	115	;'s'
   465  1071  3474               	retlw	116	;'t'
   466  1072  3461               	retlw	97	;'a'
   467  1073  3472               	retlw	114	;'r'
   468  1074  3474               	retlw	116	;'t'
   469  1075  3420               	retlw	32	;' '
   470  1076  3474               	retlw	116	;'t'
   471  1077  3465               	retlw	101	;'e'
   472  1078  3473               	retlw	115	;'s'
   473  1079  3474               	retlw	116	;'t'
   474  107A  3400               	retlw	0
   475  107B                     STR_155:	
   476  107B  3437               	retlw	55	;'7'
   477  107C  3473               	retlw	115	;'s'
   478  107D  3465               	retlw	101	;'e'
   479  107E  3467               	retlw	103	;'g'
   480  107F  342C               	retlw	44	;','
   481  1080  3420               	retlw	32	;' '
   482  1081  3462               	retlw	98	;'b'
   483  1082  3475               	retlw	117	;'u'
   484  1083  347A               	retlw	122	;'z'
   485  1084  347A               	retlw	122	;'z'
   486  1085  3465               	retlw	101	;'e'
   487  1086  3472               	retlw	114	;'r'
   488  1087  342C               	retlw	44	;','
   489  1088  3420               	retlw	32	;' '
   490  1089  3420               	retlw	32	;' '
   491  108A  3400               	retlw	0
   492  108B                     STR_140:	
   493  108B  3444               	retlw	68	;'D'
   494  108C  3465               	retlw	101	;'e'
   495  108D  3463               	retlw	99	;'c'
   496  108E  346F               	retlw	111	;'o'
   497  108F  3464               	retlw	100	;'d'
   498  1090  3465               	retlw	101	;'e'
   499  1091  3420               	retlw	32	;' '
   500  1092  344E               	retlw	78	;'N'
   501  1093  3465               	retlw	101	;'e'
   502  1094  3477               	retlw	119	;'w'
   503  1095  3420               	retlw	32	;' '
   504  1096  342D               	retlw	45	;'-'
   505  1097  3420               	retlw	32	;' '
   506  1098  344F               	retlw	79	;'O'
   507  1099  344B               	retlw	75	;'K'
   508  109A  3400               	retlw	0
   509  109B                     STR_57:	
   510  109B  3452               	retlw	82	;'R'
   511  109C  3465               	retlw	101	;'e'
   512  109D  346C               	retlw	108	;'l'
   513  109E  3461               	retlw	97	;'a'
   514  109F  3479               	retlw	121	;'y'
   515  10A0  3420               	retlw	32	;' '
   516  10A1  3465               	retlw	101	;'e'
   517  10A2  346E               	retlw	110	;'n'
   518  10A3  3465               	retlw	101	;'e'
   519  10A4  3472               	retlw	114	;'r'
   520  10A5  3467               	retlw	103	;'g'
   521  10A6  3469               	retlw	105	;'i'
   522  10A7  347A               	retlw	122	;'z'
   523  10A8  3465               	retlw	101	;'e'
   524  10A9  3464               	retlw	100	;'d'
   525  10AA  3400               	retlw	0
   526  10AB                     STR_120:	
   527  10AB  3420               	retlw	32	;' '
   528  10AC  3445               	retlw	69	;'E'
   529  10AD  3472               	retlw	114	;'r'
   530  10AE  3472               	retlw	114	;'r'
   531  10AF  346F               	retlw	111	;'o'
   532  10B0  3472               	retlw	114	;'r'
   533  10B1  3420               	retlw	32	;' '
   534  10B2  342D               	retlw	45	;'-'
   535  10B3  3420               	retlw	32	;' '
   536  10B4  344D               	retlw	77	;'M'
   537  10B5  3469               	retlw	105	;'i'
   538  10B6  3463               	retlw	99	;'c'
   539  10B7  3472               	retlw	114	;'r'
   540  10B8  3465               	retlw	101	;'e'
   541  10B9  346C               	retlw	108	;'l'
   542  10BA  3400               	retlw	0
   543  10BB                     STR_72:	
   544  10BB  3450               	retlw	80	;'P'
   545  10BC  3454               	retlw	84	;'T'
   546  10BD  3443               	retlw	67	;'C'
   547  10BE  3420               	retlw	32	;' '
   548  10BF  3445               	retlw	69	;'E'
   549  10C0  3472               	retlw	114	;'r'
   550  10C1  3472               	retlw	114	;'r'
   551  10C2  346F               	retlw	111	;'o'
   552  10C3  3472               	retlw	114	;'r'
   553  10C4  3420               	retlw	32	;' '
   554  10C5  3472               	retlw	114	;'r'
   555  10C6  3465               	retlw	101	;'e'
   556  10C7  3473               	retlw	115	;'s'
   557  10C8  3465               	retlw	101	;'e'
   558  10C9  3474               	retlw	116	;'t'
   559  10CA  3400               	retlw	0
   560  10CB                     STR_5:	
   561  10CB  3450               	retlw	80	;'P'
   562  10CC  346F               	retlw	111	;'o'
   563  10CD  3477               	retlw	119	;'w'
   564  10CE  3465               	retlw	101	;'e'
   565  10CF  3472               	retlw	114	;'r'
   566  10D0  3469               	retlw	105	;'i'
   567  10D1  346E               	retlw	110	;'n'
   568  10D2  3467               	retlw	103	;'g'
   569  10D3  3420               	retlw	32	;' '
   570  10D4  3462               	retlw	98	;'b'
   571  10D5  346F               	retlw	111	;'o'
   572  10D6  3461               	retlw	97	;'a'
   573  10D7  3472               	retlw	114	;'r'
   574  10D8  3464               	retlw	100	;'d'
   575  10D9  3400               	retlw	0
   576  10DA                     STR_144:	
   577  10DA  3445               	retlw	69	;'E'
   578  10DB  3472               	retlw	114	;'r'
   579  10DC  3472               	retlw	114	;'r'
   580  10DD  346F               	retlw	111	;'o'
   581  10DE  3472               	retlw	114	;'r'
   582  10DF  3420               	retlw	32	;' '
   583  10E0  342D               	retlw	45	;'-'
   584  10E1  3420               	retlw	32	;' '
   585  10E2  3444               	retlw	68	;'D'
   586  10E3  3465               	retlw	101	;'e'
   587  10E4  3463               	retlw	99	;'c'
   588  10E5  346F               	retlw	111	;'o'
   589  10E6  3464               	retlw	100	;'d'
   590  10E7  3465               	retlw	101	;'e'
   591  10E8  3400               	retlw	0
   592  10E9                     STR_74:	
   593  10E9  3450               	retlw	80	;'P'
   594  10EA  3454               	retlw	84	;'T'
   595  10EB  3443               	retlw	67	;'C'
   596  10EC  3420               	retlw	32	;' '
   597  10ED  3445               	retlw	69	;'E'
   598  10EE  3472               	retlw	114	;'r'
   599  10EF  3472               	retlw	114	;'r'
   600  10F0  346F               	retlw	111	;'o'
   601  10F1  3472               	retlw	114	;'r'
   602  10F2  3420               	retlw	32	;' '
   603  10F3  3474               	retlw	116	;'t'
   604  10F4  3472               	retlw	114	;'r'
   605  10F5  3469               	retlw	105	;'i'
   606  10F6  3470               	retlw	112	;'p'
   607  10F7  3400               	retlw	0
   608  10F8                     STR_19:	
   609  10F8  3431               	retlw	49	;'1'
   610  10F9  3436               	retlw	54	;'6'
   611  10FA  3476               	retlw	118	;'v'
   612  10FB  342D               	retlw	45	;'-'
   613  10FC  3431               	retlw	49	;'1'
   614  10FD  3432               	retlw	50	;'2'
   615  10FE  3476               	retlw	118	;'v'
   616  10FF  3420               	retlw	32	;' '
   617  1100  3473               	retlw	115	;'s'
   618  1101  3475               	retlw	117	;'u'
   619  1102  3470               	retlw	112	;'p'
   620  1103  3470               	retlw	112	;'p'
   621  1104  346C               	retlw	108	;'l'
   622  1105  3479               	retlw	121	;'y'
   623  1106  3400               	retlw	0
   624  1107                     STR_147:	
   625  1107  344D               	retlw	77	;'M'
   626  1108  3461               	retlw	97	;'a'
   627  1109  3473               	retlw	115	;'s'
   628  110A  3474               	retlw	116	;'t'
   629  110B  3465               	retlw	101	;'e'
   630  110C  3472               	retlw	114	;'r'
   631  110D  3420               	retlw	32	;' '
   632  110E  3445               	retlw	69	;'E'
   633  110F  3472               	retlw	114	;'r'
   634  1110  3461               	retlw	97	;'a'
   635  1111  3473               	retlw	115	;'s'
   636  1112  3465               	retlw	101	;'e'
   637  1113  3420               	retlw	32	;' '
   638  1114  3400               	retlw	0
   639  1115                     STR_4:	
   640  1115  342D               	retlw	45	;'-'
   641  1116  343E               	retlw	62	;'>'
   642  1117  3420               	retlw	32	;' '
   643  1118  3449               	retlw	73	;'I'
   644  1119  346E               	retlw	110	;'n'
   645  111A  3473               	retlw	115	;'s'
   646  111B  3465               	retlw	101	;'e'
   647  111C  3472               	retlw	114	;'r'
   648  111D  3474               	retlw	116	;'t'
   649  111E  3420               	retlw	32	;' '
   650  111F  3450               	retlw	80	;'P'
   651  1120  3443               	retlw	67	;'C'
   652  1121  3442               	retlw	66	;'B'
   653  1122  3400               	retlw	0
   654  1123                     STR_160:	
   655  1123  3420               	retlw	32	;' '
   656  1124  3452               	retlw	82	;'R'
   657  1125  3465               	retlw	101	;'e'
   658  1126  346D               	retlw	109	;'m'
   659  1127  346F               	retlw	111	;'o'
   660  1128  3476               	retlw	118	;'v'
   661  1129  3465               	retlw	101	;'e'
   662  112A  3420               	retlw	32	;' '
   663  112B  3462               	retlw	98	;'b'
   664  112C  346F               	retlw	111	;'o'
   665  112D  3461               	retlw	97	;'a'
   666  112E  3472               	retlw	114	;'r'
   667  112F  3464               	retlw	100	;'d'
   668  1130  3400               	retlw	0
   669  1131                     STR_118:	
   670  1131  3420               	retlw	32	;' '
   671  1132  3445               	retlw	69	;'E'
   672  1133  3472               	retlw	114	;'r'
   673  1134  3472               	retlw	114	;'r'
   674  1135  346F               	retlw	111	;'o'
   675  1136  3472               	retlw	114	;'r'
   676  1137  3420               	retlw	32	;' '
   677  1138  342D               	retlw	45	;'-'
   678  1139  3420               	retlw	32	;' '
   679  113A  3448               	retlw	72	;'H'
   680  113B  3469               	retlw	105	;'i'
   681  113C  3467               	retlw	103	;'g'
   682  113D  3468               	retlw	104	;'h'
   683  113E  3400               	retlw	0
   684  113F                     STR_7:	
   685  113F  3431               	retlw	49	;'1'
   686  1140  3432               	retlw	50	;'2'
   687  1141  3476               	retlw	118	;'v'
   688  1142  342D               	retlw	45	;'-'
   689  1143  3435               	retlw	53	;'5'
   690  1144  3476               	retlw	118	;'v'
   691  1145  3420               	retlw	32	;' '
   692  1146  3473               	retlw	115	;'s'
   693  1147  3475               	retlw	117	;'u'
   694  1148  3470               	retlw	112	;'p'
   695  1149  3470               	retlw	112	;'p'
   696  114A  346C               	retlw	108	;'l'
   697  114B  3479               	retlw	121	;'y'
   698  114C  3400               	retlw	0
   699  114D                     STR_15:	
   700  114D  3431               	retlw	49	;'1'
   701  114E  3436               	retlw	54	;'6'
   702  114F  3476               	retlw	118	;'v'
   703  1150  342D               	retlw	45	;'-'
   704  1151  3435               	retlw	53	;'5'
   705  1152  3476               	retlw	118	;'v'
   706  1153  3420               	retlw	32	;' '
   707  1154  3473               	retlw	115	;'s'
   708  1155  3475               	retlw	117	;'u'
   709  1156  3470               	retlw	112	;'p'
   710  1157  3470               	retlw	112	;'p'
   711  1158  346C               	retlw	108	;'l'
   712  1159  3479               	retlw	121	;'y'
   713  115A  3400               	retlw	0
   714  115B                     STR_43:	
   715  115B  3454               	retlw	84	;'T'
   716  115C  3465               	retlw	101	;'e'
   717  115D  3473               	retlw	115	;'s'
   718  115E  3474               	retlw	116	;'t'
   719  115F  3420               	retlw	32	;' '
   720  1160  3445               	retlw	69	;'E'
   721  1161  3445               	retlw	69	;'E'
   722  1162  3450               	retlw	80	;'P'
   723  1163  3452               	retlw	82	;'R'
   724  1164  344F               	retlw	79	;'O'
   725  1165  344D               	retlw	77	;'M'
   726  1166  3420               	retlw	32	;' '
   727  1167  3400               	retlw	0
   728  1168                     STR_10:	
   729  1168  3456               	retlw	86	;'V'
   730  1169  346F               	retlw	111	;'o'
   731  116A  346C               	retlw	108	;'l'
   732  116B  3474               	retlw	116	;'t'
   733  116C  3420               	retlw	32	;' '
   734  116D  3445               	retlw	69	;'E'
   735  116E  3472               	retlw	114	;'r'
   736  116F  3472               	retlw	114	;'r'
   737  1170  346F               	retlw	111	;'o'
   738  1171  3472               	retlw	114	;'r'
   739  1172  3420               	retlw	32	;' '
   740  1173  3448               	retlw	72	;'H'
   741  1174  3400               	retlw	0
   742  1175                     STR_131:	
   743  1175  3454               	retlw	84	;'T'
   744  1176  3465               	retlw	101	;'e'
   745  1177  3473               	retlw	115	;'s'
   746  1178  3474               	retlw	116	;'t'
   747  1179  3420               	retlw	32	;' '
   748  117A  3452               	retlw	82	;'R'
   749  117B  3446               	retlw	70	;'F'
   750  117C  3420               	retlw	32	;' '
   751  117D  3452               	retlw	82	;'R'
   752  117E  3453               	retlw	83	;'S'
   753  117F  3453               	retlw	83	;'S'
   754  1180  3449               	retlw	73	;'I'
   755  1181  3400               	retlw	0
   756  1182                     STR_8:	
   757  1182  3456               	retlw	86	;'V'
   758  1183  346F               	retlw	111	;'o'
   759  1184  346C               	retlw	108	;'l'
   760  1185  3474               	retlw	116	;'t'
   761  1186  3420               	retlw	32	;' '
   762  1187  3445               	retlw	69	;'E'
   763  1188  3472               	retlw	114	;'r'
   764  1189  3472               	retlw	114	;'r'
   765  118A  346F               	retlw	111	;'o'
   766  118B  3472               	retlw	114	;'r'
   767  118C  3420               	retlw	32	;' '
   768  118D  344C               	retlw	76	;'L'
   769  118E  3400               	retlw	0
   770  118F                     STR_168:	
   771  118F  3420               	retlw	32	;' '
   772  1190  3450               	retlw	80	;'P'
   773  1191  3472               	retlw	114	;'r'
   774  1192  3465               	retlw	101	;'e'
   775  1193  3473               	retlw	115	;'s'
   776  1194  3473               	retlw	115	;'s'
   777  1195  3420               	retlw	32	;' '
   778  1196  3453               	retlw	83	;'S'
   779  1197  3454               	retlw	84	;'T'
   780  1198  3441               	retlw	65	;'A'
   781  1199  3452               	retlw	82	;'R'
   782  119A  3454               	retlw	84	;'T'
   783  119B  3400               	retlw	0
   784  119C                     STR_35:	
   785  119C  3445               	retlw	69	;'E'
   786  119D  3473               	retlw	115	;'s'
   787  119E  3474               	retlw	116	;'t'
   788  119F  3461               	retlw	97	;'a'
   789  11A0  3462               	retlw	98	;'b'
   790  11A1  346C               	retlw	108	;'l'
   791  11A2  3469               	retlw	105	;'i'
   792  11A3  3473               	retlw	115	;'s'
   793  11A4  3468               	retlw	104	;'h'
   794  11A5  3469               	retlw	105	;'i'
   795  11A6  346E               	retlw	110	;'n'
   796  11A7  3467               	retlw	103	;'g'
   797  11A8  3400               	retlw	0
   798  11A9                     STR_39:	
   799  11A9  3445               	retlw	69	;'E'
   800  11AA  3445               	retlw	69	;'E'
   801  11AB  3450               	retlw	80	;'P'
   802  11AC  3452               	retlw	82	;'R'
   803  11AD  344F               	retlw	79	;'O'
   804  11AE  344D               	retlw	77	;'M'
   805  11AF  3420               	retlw	32	;' '
   806  11B0  3465               	retlw	101	;'e'
   807  11B1  3472               	retlw	114	;'r'
   808  11B2  3472               	retlw	114	;'r'
   809  11B3  346F               	retlw	111	;'o'
   810  11B4  3472               	retlw	114	;'r'
   811  11B5  3400               	retlw	0
   812  11B6                     STR_159:	
   813  11B6  3454               	retlw	84	;'T'
   814  11B7  3465               	retlw	101	;'e'
   815  11B8  3473               	retlw	115	;'s'
   816  11B9  3474               	retlw	116	;'t'
   817  11BA  346A               	retlw	106	;'j'
   818  11BB  3469               	retlw	105	;'i'
   819  11BC  3467               	retlw	103	;'g'
   820  11BD  3420               	retlw	32	;' '
   821  11BE  3450               	retlw	80	;'P'
   822  11BF  3461               	retlw	97	;'a'
   823  11C0  3473               	retlw	115	;'s'
   824  11C1  3473               	retlw	115	;'s'
   825  11C2  3400               	retlw	0
   826  11C3                     STR_156:	
   827  11C3  3420               	retlw	32	;' '
   828  11C4  3462               	retlw	98	;'b'
   829  11C5  3475               	retlw	117	;'u'
   830  11C6  3474               	retlw	116	;'t'
   831  11C7  3474               	retlw	116	;'t'
   832  11C8  346F               	retlw	111	;'o'
   833  11C9  346E               	retlw	110	;'n'
   834  11CA  3420               	retlw	32	;' '
   835  11CB  3474               	retlw	116	;'t'
   836  11CC  3465               	retlw	101	;'e'
   837  11CD  3473               	retlw	115	;'s'
   838  11CE  3474               	retlw	116	;'t'
   839  11CF  3400               	retlw	0
   840  11D0                     STR_122:	
   841  11D0  3420               	retlw	32	;' '
   842  11D1  3445               	retlw	69	;'E'
   843  11D2  3472               	retlw	114	;'r'
   844  11D3  3472               	retlw	114	;'r'
   845  11D4  346F               	retlw	111	;'o'
   846  11D5  3472               	retlw	114	;'r'
   847  11D6  3420               	retlw	32	;' '
   848  11D7  342D               	retlw	45	;'-'
   849  11D8  3420               	retlw	32	;' '
   850  11D9  344C               	retlw	76	;'L'
   851  11DA  346F               	retlw	111	;'o'
   852  11DB  3477               	retlw	119	;'w'
   853  11DC  3400               	retlw	0
   854  11DD                     STR_117:	
   855  11DD  3454               	retlw	84	;'T'
   856  11DE  3465               	retlw	101	;'e'
   857  11DF  3473               	retlw	115	;'s'
   858  11E0  3474               	retlw	116	;'t'
   859  11E1  3420               	retlw	32	;' '
   860  11E2  3452               	retlw	82	;'R'
   861  11E3  3446               	retlw	70	;'F'
   862  11E4  3420               	retlw	32	;' '
   863  11E5  3433               	retlw	51	;'3'
   864  11E6  3476               	retlw	118	;'v'
   865  11E7  3433               	retlw	51	;'3'
   866  11E8  3400               	retlw	0
   867  11E9                     STR_40:	
   868  11E9  3420               	retlw	32	;' '
   869  11EA  3452               	retlw	82	;'R'
   870  11EB  3465               	retlw	101	;'e'
   871  11EC  3461               	retlw	97	;'a'
   872  11ED  3464               	retlw	100	;'d'
   873  11EE  342F               	retlw	47	;'/'
   874  11EF  3457               	retlw	87	;'W'
   875  11F0  3472               	retlw	114	;'r'
   876  11F1  3469               	retlw	105	;'i'
   877  11F2  3474               	retlw	116	;'t'
   878  11F3  3465               	retlw	101	;'e'
   879  11F4  3400               	retlw	0
   880  11F5                     STR_45:	
   881  11F5  3445               	retlw	69	;'E'
   882  11F6  3445               	retlw	69	;'E'
   883  11F7  3450               	retlw	80	;'P'
   884  11F8  3452               	retlw	82	;'R'
   885  11F9  344F               	retlw	79	;'O'
   886  11FA  344D               	retlw	77	;'M'
   887  11FB  3420               	retlw	32	;' '
   888  11FC  3473               	retlw	115	;'s'
   889  11FD  3469               	retlw	105	;'i'
   890  11FE  347A               	retlw	122	;'z'
   891  11FF  3465               	retlw	101	;'e'
   892  1200  3400               	retlw	0
   893  1201                     STR_29:	
   894  1201  3457               	retlw	87	;'W'
   895  1202  3461               	retlw	97	;'a'
   896  1203  3469               	retlw	105	;'i'
   897  1204  3474               	retlw	116	;'t'
   898  1205  3469               	retlw	105	;'i'
   899  1206  346E               	retlw	110	;'n'
   900  1207  3467               	retlw	103	;'g'
   901  1208  3420               	retlw	32	;' '
   902  1209  3466               	retlw	102	;'f'
   903  120A  346F               	retlw	111	;'o'
   904  120B  3472               	retlw	114	;'r'
   905  120C  3400               	retlw	0
   906  120D                     STR_37:	
   907  120D  3443               	retlw	67	;'C'
   908  120E  346F               	retlw	111	;'o'
   909  120F  346D               	retlw	109	;'m'
   910  1210  346D               	retlw	109	;'m'
   911  1211  3473               	retlw	115	;'s'
   912  1212  3420               	retlw	32	;' '
   913  1213  3445               	retlw	69	;'E'
   914  1214  3472               	retlw	114	;'r'
   915  1215  3472               	retlw	114	;'r'
   916  1216  346F               	retlw	111	;'o'
   917  1217  3472               	retlw	114	;'r'
   918  1218  3400               	retlw	0
   919  1219                     STR_14:	
   920  1219  3454               	retlw	84	;'T'
   921  121A  342D               	retlw	45	;'-'
   922  121B  346F               	retlw	111	;'o'
   923  121C  3475               	retlw	117	;'u'
   924  121D  3474               	retlw	116	;'t'
   925  121E  3420               	retlw	32	;' '
   926  121F  3445               	retlw	69	;'E'
   927  1220  3472               	retlw	114	;'r'
   928  1221  3472               	retlw	114	;'r'
   929  1222  346F               	retlw	111	;'o'
   930  1223  3472               	retlw	114	;'r'
   931  1224  3400               	retlw	0
   932  1225                     STR_12:	
   933  1225  3443               	retlw	67	;'C'
   934  1226  3475               	retlw	117	;'u'
   935  1227  3472               	retlw	114	;'r'
   936  1228  3472               	retlw	114	;'r'
   937  1229  3420               	retlw	32	;' '
   938  122A  3445               	retlw	69	;'E'
   939  122B  3472               	retlw	114	;'r'
   940  122C  3472               	retlw	114	;'r'
   941  122D  346F               	retlw	111	;'o'
   942  122E  3472               	retlw	114	;'r'
   943  122F  3400               	retlw	0
   944  1230                     STR_158:	
   945  1230  3420               	retlw	32	;' '
   946  1231  3466               	retlw	102	;'f'
   947  1232  346F               	retlw	111	;'o'
   948  1233  3472               	retlw	114	;'r'
   949  1234  3420               	retlw	32	;' '
   950  1235  3463               	retlw	99	;'c'
   951  1236  346F               	retlw	111	;'o'
   952  1237  346D               	retlw	109	;'m'
   953  1238  346D               	retlw	109	;'m'
   954  1239  3473               	retlw	115	;'s'
   955  123A  3400               	retlw	0
   956  123B                     STR_49:	
   957  123B  3454               	retlw	84	;'T'
   958  123C  3465               	retlw	101	;'e'
   959  123D  3473               	retlw	115	;'s'
   960  123E  3474               	retlw	116	;'t'
   961  123F  3420               	retlw	32	;' '
   962  1240  3452               	retlw	82	;'R'
   963  1241  3465               	retlw	101	;'e'
   964  1242  346C               	retlw	108	;'l'
   965  1243  3461               	retlw	97	;'a'
   966  1244  3479               	retlw	121	;'y'
   967  1245  3400               	retlw	0
   968  1246                     STR_157:	
   969  1246  3477               	retlw	119	;'w'
   970  1247  3461               	retlw	97	;'a'
   971  1248  3469               	retlw	105	;'i'
   972  1249  3474               	retlw	116	;'t'
   973  124A  3469               	retlw	105	;'i'
   974  124B  346E               	retlw	110	;'n'
   975  124C  3467               	retlw	103	;'g'
   976  124D  3420               	retlw	32	;' '
   977  124E  3420               	retlw	32	;' '
   978  124F  3400               	retlw	0
   979  1250                     STR_151:	
   980  1250  3453               	retlw	83	;'S'
   981  1251  3465               	retlw	101	;'e'
   982  1252  3474               	retlw	116	;'t'
   983  1253  3420               	retlw	32	;' '
   984  1254  3423               	retlw	35	;'#'
   985  1255  3420               	retlw	32	;' '
   986  1256  346F               	retlw	111	;'o'
   987  1257  3466               	retlw	102	;'f'
   988  1258  3420               	retlw	32	;' '
   989  1259  3400               	retlw	0
   990  125A                     STR_67:	
   991  125A  3443               	retlw	67	;'C'
   992  125B  3448               	retlw	72	;'H'
   993  125C  3432               	retlw	50	;'2'
   994  125D  3420               	retlw	32	;' '
   995  125E  342D               	retlw	45	;'-'
   996  125F  3420               	retlw	32	;' '
   997  1260  344F               	retlw	79	;'O'
   998  1261  3446               	retlw	70	;'F'
   999  1262  3446               	retlw	70	;'F'
  1000  1263  3400               	retlw	0
  1001  1264                     STR_91:	
  1002  1264  3443               	retlw	67	;'C'
  1003  1265  3448               	retlw	72	;'H'
  1004  1266  3433               	retlw	51	;'3'
  1005  1267  3420               	retlw	32	;' '
  1006  1268  342D               	retlw	45	;'-'
  1007  1269  3420               	retlw	32	;' '
  1008  126A  344F               	retlw	79	;'O'
  1009  126B  3446               	retlw	70	;'F'
  1010  126C  3446               	retlw	70	;'F'
  1011  126D  3400               	retlw	0
  1012  126E                     STR_136:	
  1013  126E  3452               	retlw	82	;'R'
  1014  126F  3453               	retlw	83	;'S'
  1015  1270  3453               	retlw	83	;'S'
  1016  1271  3449               	retlw	73	;'I'
  1017  1272  3420               	retlw	32	;' '
  1018  1273  342D               	retlw	45	;'-'
  1019  1274  3420               	retlw	32	;' '
  1020  1275  344F               	retlw	79	;'O'
  1021  1276  344B               	retlw	75	;'K'
  1022  1277  3400               	retlw	0
  1023  1278                     STR_152:	
  1024  1278  3420               	retlw	32	;' '
  1025  1279  3463               	retlw	99	;'c'
  1026  127A  3468               	retlw	104	;'h'
  1027  127B  3461               	retlw	97	;'a'
  1028  127C  346E               	retlw	110	;'n'
  1029  127D  346E               	retlw	110	;'n'
  1030  127E  3465               	retlw	101	;'e'
  1031  127F  346C               	retlw	108	;'l'
  1032  1280  3473               	retlw	115	;'s'
  1033  1281  3400               	retlw	0
  1034  1282                     STR_46:	
  1035  1282  3420               	retlw	32	;' '
  1036  1283  3445               	retlw	69	;'E'
  1037  1284  3472               	retlw	114	;'r'
  1038  1285  3472               	retlw	114	;'r'
  1039  1286  346F               	retlw	111	;'o'
  1040  1287  3472               	retlw	114	;'r'
  1041  1288  3420               	retlw	32	;' '
  1042  1289  3431               	retlw	49	;'1'
  1043  128A  3400               	retlw	0
  1044  128B                     STR_48:	
  1045  128B  3420               	retlw	32	;' '
  1046  128C  3445               	retlw	69	;'E'
  1047  128D  3472               	retlw	114	;'r'
  1048  128E  3472               	retlw	114	;'r'
  1049  128F  346F               	retlw	111	;'o'
  1050  1290  3472               	retlw	114	;'r'
  1051  1291  3420               	retlw	32	;' '
  1052  1292  3432               	retlw	50	;'2'
  1053  1293  3400               	retlw	0
  1054  1294                     STR_63:	
  1055  1294  3454               	retlw	84	;'T'
  1056  1295  3465               	retlw	101	;'e'
  1057  1296  3473               	retlw	115	;'s'
  1058  1297  3474               	retlw	116	;'t'
  1059  1298  3420               	retlw	32	;' '
  1060  1299  3443               	retlw	67	;'C'
  1061  129A  3448               	retlw	72	;'H'
  1062  129B  3432               	retlw	50	;'2'
  1063  129C  3400               	retlw	0
  1064  129D                     STR_87:	
  1065  129D  3454               	retlw	84	;'T'
  1066  129E  3465               	retlw	101	;'e'
  1067  129F  3473               	retlw	115	;'s'
  1068  12A0  3474               	retlw	116	;'t'
  1069  12A1  3420               	retlw	32	;' '
  1070  12A2  3443               	retlw	67	;'C'
  1071  12A3  3448               	retlw	72	;'H'
  1072  12A4  3433               	retlw	51	;'3'
  1073  12A5  3400               	retlw	0
  1074  12A6                     STR_124:	
  1075  12A6  3433               	retlw	51	;'3'
  1076  12A7  3476               	retlw	118	;'v'
  1077  12A8  3433               	retlw	51	;'3'
  1078  12A9  3420               	retlw	32	;' '
  1079  12AA  342D               	retlw	45	;'-'
  1080  12AB  3420               	retlw	32	;' '
  1081  12AC  344F               	retlw	79	;'O'
  1082  12AD  344B               	retlw	75	;'K'
  1083  12AE  3400               	retlw	0
  1084  12AF                     STR_71:	
  1085  12AF  3443               	retlw	67	;'C'
  1086  12B0  3448               	retlw	72	;'H'
  1087  12B1  3432               	retlw	50	;'2'
  1088  12B2  3420               	retlw	32	;' '
  1089  12B3  342D               	retlw	45	;'-'
  1090  12B4  3420               	retlw	32	;' '
  1091  12B5  344F               	retlw	79	;'O'
  1092  12B6  344E               	retlw	78	;'N'
  1093  12B7  3400               	retlw	0
  1094  12B8                     STR_95:	
  1095  12B8  3443               	retlw	67	;'C'
  1096  12B9  3448               	retlw	72	;'H'
  1097  12BA  3433               	retlw	51	;'3'
  1098  12BB  3420               	retlw	32	;' '
  1099  12BC  342D               	retlw	45	;'-'
  1100  12BD  3420               	retlw	32	;' '
  1101  12BE  344F               	retlw	79	;'O'
  1102  12BF  344E               	retlw	78	;'N'
  1103  12C0  3400               	retlw	0
  1104  12C1                     STR_1:	
  1105  12C1  344D               	retlw	77	;'M'
  1106  12C2  3475               	retlw	117	;'u'
  1107  12C3  346C               	retlw	108	;'l'
  1108  12C4  3474               	retlw	116	;'t'
  1109  12C5  3469               	retlw	105	;'i'
  1110  12C6  345F               	retlw	95	;'_'
  1111  12C7  3452               	retlw	82	;'R'
  1112  12C8  3458               	retlw	88	;'X'
  1113  12C9  3400               	retlw	0
  1114  12CA                     STR_34:	
  1115  12CA  3420               	retlw	32	;' '
  1116  12CB  3473               	retlw	115	;'s'
  1117  12CC  346B               	retlw	107	;'k'
  1118  12CD  3469               	retlw	105	;'i'
  1119  12CE  3470               	retlw	112	;'p'
  1120  12CF  3470               	retlw	112	;'p'
  1121  12D0  3465               	retlw	101	;'e'
  1122  12D1  3464               	retlw	100	;'d'
  1123  12D2  3400               	retlw	0
  1124  12D3                     STR_164:	
  1125  12D3  3477               	retlw	119	;'w'
  1126  12D4  3461               	retlw	97	;'a'
  1127  12D5  3469               	retlw	105	;'i'
  1128  12D6  3474               	retlw	116	;'t'
  1129  12D7  342E               	retlw	46	;'.'
  1130  12D8  342E               	retlw	46	;'.'
  1131  12D9  342E               	retlw	46	;'.'
  1132  12DA  3400               	retlw	0
  1133  12DB                     STR_111:	
  1134  12DB  3454               	retlw	84	;'T'
  1135  12DC  3465               	retlw	101	;'e'
  1136  12DD  3473               	retlw	115	;'s'
  1137  12DE  3474               	retlw	116	;'t'
  1138  12DF  3420               	retlw	32	;' '
  1139  12E0  3452               	retlw	82	;'R'
  1140  12E1  3446               	retlw	70	;'F'
  1141  12E2  3400               	retlw	0
  1142  12E3                     STR_110:	
  1143  12E3  3420               	retlw	32	;' '
  1144  12E4  3431               	retlw	49	;'1'
  1145  12E5  3430               	retlw	48	;'0'
  1146  12E6  3400               	retlw	0
  1147  12E7                     STR_114:	
  1148  12E7  3420               	retlw	32	;' '
  1149  12E8  3431               	retlw	49	;'1'
  1150  12E9  3431               	retlw	49	;'1'
  1151  12EA  3400               	retlw	0
  1152  12EB                     STR_116:	
  1153  12EB  3420               	retlw	32	;' '
  1154  12EC  3431               	retlw	49	;'1'
  1155  12ED  3432               	retlw	50	;'2'
  1156  12EE  3400               	retlw	0
  1157  12EF                     STR_128:	
  1158  12EF  3420               	retlw	32	;' '
  1159  12F0  3431               	retlw	49	;'1'
  1160  12F1  3433               	retlw	51	;'3'
  1161  12F2  3400               	retlw	0
  1162  12F3                     STR_130:	
  1163  12F3  3420               	retlw	32	;' '
  1164  12F4  3431               	retlw	49	;'1'
  1165  12F5  3434               	retlw	52	;'4'
  1166  12F6  3400               	retlw	0
  1167  12F7                     STR_146:	
  1168  12F7  3420               	retlw	32	;' '
  1169  12F8  3431               	retlw	49	;'1'
  1170  12F9  3435               	retlw	53	;'5'
  1171  12FA  3400               	retlw	0
  1172  12FB                     STR_154:	
  1173  12FB  3420               	retlw	32	;' '
  1174  12FC  3431               	retlw	49	;'1'
  1175  12FD  3436               	retlw	54	;'6'
  1176  12FE  3400               	retlw	0
  1177  12FF                     STR_150:	
  1178  12FF  3420               	retlw	32	;' '
  1179  1300  3431               	retlw	49	;'1'
  1180  1301  3437               	retlw	55	;'7'
  1181  1302  3400               	retlw	0
  1182  1303                     STR_76:	
  1183  1303  3420               	retlw	32	;' '
  1184  1304  3436               	retlw	54	;'6'
  1185  1305  3461               	retlw	97	;'a'
  1186  1306  3400               	retlw	0
  1187  1307                     STR_102:	
  1188  1307  3420               	retlw	32	;' '
  1189  1308  3438               	retlw	56	;'8'
  1190  1309  3461               	retlw	97	;'a'
  1191  130A  3400               	retlw	0
  1192  130B                     STR_78:	
  1193  130B  3420               	retlw	32	;' '
  1194  130C  3436               	retlw	54	;'6'
  1195  130D  3462               	retlw	98	;'b'
  1196  130E  3400               	retlw	0
  1197  130F                     STR_100:	
  1198  130F  3420               	retlw	32	;' '
  1199  1310  3438               	retlw	56	;'8'
  1200  1311  3462               	retlw	98	;'b'
  1201  1312  3400               	retlw	0
  1202  1313                     STR_56:	
  1203  1313  3420               	retlw	32	;' '
  1204  1314  3433               	retlw	51	;'3'
  1205  1315  3400               	retlw	0
  1206  1316                     STR_60:	
  1207  1316  3420               	retlw	32	;' '
  1208  1317  3434               	retlw	52	;'4'
  1209  1318  3400               	retlw	0
  1210  1319                     STR_70:	
  1211  1319  3420               	retlw	32	;' '
  1212  131A  3435               	retlw	53	;'5'
  1213  131B  3400               	retlw	0
  1214  131C                     STR_82:	
  1215  131C  3420               	retlw	32	;' '
  1216  131D  3436               	retlw	54	;'6'
  1217  131E  3400               	retlw	0
  1218  131F                     STR_86:	
  1219  131F  3420               	retlw	32	;' '
  1220  1320  3437               	retlw	55	;'7'
  1221  1321  3400               	retlw	0
  1222  1322                     STR_94:	
  1223  1322  3420               	retlw	32	;' '
  1224  1323  3438               	retlw	56	;'8'
  1225  1324  3400               	retlw	0
  1226  1325                     STR_106:	
  1227  1325  3420               	retlw	32	;' '
  1228  1326  3439               	retlw	57	;'9'
  1229  1327  3400               	retlw	0
  1230  1328                     STR_66:	
  1231  1328  346F               	retlw	111	;'o'
  1232  1329  346B               	retlw	107	;'k'
  1233  132A  3400               	retlw	0
  1234  108A                     
  1235                           ; #config settings
  1236  0000                     
  1237                           	psect	cinit
  1238  0097                     start_initialization:	
  1239  0097                     __initialization:	
  1240                           
  1241                           ;initializer for _one_second_timer
  1242  0097  30E8               	movlw	232
  1243  0098  00ED               	movwf	__pdataBANK0& (0+127)
  1244  0099  3003               	movlw	3
  1245  009A  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  1246                           
  1247                           ; Clear objects allocated to BANK0
  1248  009B  3055               	movlw	low __pbssBANK0
  1249  009C  0084               	movwf	4
  1250  009D  3000               	movlw	high __pbssBANK0
  1251  009E  0085               	movwf	5
  1252  009F  3018               	movlw	24
  1253  00A0  3186  267B         	fcall	clear_ram0
  1254  00A2                     end_of_initialization:	
  1255                           ;End of C runtime variable initialization code
  1256                           
  1257  00A2                     __end_of__initialization:	
  1258  00A2  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1259  00A3  0020               	movlb	0
  1260  00A4  3188  2804         	ljmp	_main	;jump to C main() function
  1261                           
  1262                           	psect	bssBANK0
  1263  0055                     __pbssBANK0:	
  1264  0055                     _ADC_cur_sink_val:	
  1265  0055                     	ds	2
  1266  0057                     _curent_sink_val:	
  1267  0057                     	ds	2
  1268  0059                     _current_sink_stable:	
  1269  0059                     	ds	2
  1270  005B                     _current_sink_timer:	
  1271  005B                     	ds	2
  1272  005D                     _motor_direction_timer:	
  1273  005D                     	ds	2
  1274  005F                     _pickit_timer:	
  1275  005F                     	ds	2
  1276  0061                     _testjig_timer:	
  1277  0061                     	ds	2
  1278  0063                     _tj_timer:	
  1279  0063                     	ds	2
  1280  0065                     _uart_receive_timer:	
  1281  0065                     	ds	2
  1282  0067                     _hund:	
  1283  0067                     	ds	1
  1284  0068                     _pickit_red_counter:	
  1285  0068                     	ds	1
  1286  0069                     _ten:	
  1287  0069                     	ds	1
  1288  006A                     _ten_thou:	
  1289  006A                     	ds	1
  1290  006B                     _unit:	
  1291  006B                     	ds	1
  1292  006C                     _thou:	
  1293  006C                     	ds	1
  1294                           
  1295                           	psect	dataBANK0
  1296  006D                     __pdataBANK0:	
  1297  006D                     _one_second_timer:	
  1298  006D                     	ds	2
  1299                           
  1300                           	psect	clrtext
  1301  067B                     clear_ram0:	
  1302                           ;	Called with FSR0 containing the base address, and
  1303                           ;	WREG with the size to clear
  1304                           
  1305  067B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1306  067C                     clrloop0:	
  1307  067C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1308  067D  3101               	addfsr 0,1
  1309  067E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1310  067F  2E7C               	goto	clrloop0	;have we reached the end yet?
  1311  0680  3400               	retlw	0	;all done for this memory range, return
  1312                           
  1313                           	psect	cstackCOMMON
  1314  0070                     __pcstackCOMMON:	
  1315  0070                     ?_init_ADC:	
  1316  0070                     ??_init_ADC:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0070                     ?_init_current_sink:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     ??_init_current_sink:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0070                     ?_buzz_one:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  0070                     ?_init_i2c:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0070                     ??_init_i2c:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0070                     ?_debug_fast_tx:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0070                     ?_testjig_done:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340  0070                     ?_power_supply_set:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  0070                     ??_power_supply_set:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346  0070                     ?_TX_one:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349  0070                     ??_TX_one:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  0070                     ?_RX_one:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355  0070                     ??_RX_one:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  0070                     ?_digitalpot:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361  0070                     ?_isr:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  0070                     ??_isr:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0070                     ?_main:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0070                     ?_i2c_Start:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373  0070                     ??_i2c_Start:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376  0070                     ?_i2c_Write:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  0070                     ??_i2c_Write:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  0070                     ?_i2c_Stop:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ??_i2c_Stop:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  0070                     ?_i2c_write_char:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  0070                     ?_clear_lcd:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  0070                     ?_i2c_first_line:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397  0070                     ?_i2c_second_line:	
  1398                           ; 1 bytes @ 0x0
  1399                           
  1400  0070                     ?___bmul:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403  0070                     ?_ADC_get_val:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406  0070                     ?___wmul:	
  1407                           ; 2 bytes @ 0x0
  1408                           
  1409  0070                     ?___ftpack:	
  1410                           ; 2 bytes @ 0x0
  1411                           
  1412  0070                     i2c_Write@data:	
  1413                           ; 3 bytes @ 0x0
  1414                           
  1415  0070                     power_supply_set@supply:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418  0070                     ___bmul@multiplicand:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0070                     buzz_one@time:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0070                     debug_fast_tx@data:	
  1425                           ; 2 bytes @ 0x0
  1426                           
  1427  0070                     ___wmul@multiplier:	
  1428                           ; 2 bytes @ 0x0
  1429                           
  1430  0070                     ___ftpack@arg:	
  1431                           ; 2 bytes @ 0x0
  1432                           
  1433                           
  1434                           ; 3 bytes @ 0x0
  1435  0070                     	ds	1
  1436  0071                     ?_init_i2c_lcd_5v:	
  1437  0071                     ??_digitalpot:	
  1438                           ; 1 bytes @ 0x1
  1439                           
  1440  0071                     ?_i2c_Write_string:	
  1441                           ; 1 bytes @ 0x1
  1442                           
  1443  0071                     ??_i2c_write_char:	
  1444                           ; 1 bytes @ 0x1
  1445                           
  1446  0071                     ??_clear_lcd:	
  1447                           ; 1 bytes @ 0x1
  1448                           
  1449  0071                     ??_i2c_first_line:	
  1450                           ; 1 bytes @ 0x1
  1451                           
  1452  0071                     ??_i2c_second_line:	
  1453                           ; 1 bytes @ 0x1
  1454                           
  1455  0071                     ?_lcd_set_cursor:	
  1456                           ; 1 bytes @ 0x1
  1457                           
  1458  0071                     ??___bmul:	
  1459                           ; 1 bytes @ 0x1
  1460                           
  1461  0071                     i2c_write_char@char_data:	
  1462                           ; 1 bytes @ 0x1
  1463                           
  1464  0071                     init_i2c_lcd_5v@single1_double2:	
  1465                           ; 1 bytes @ 0x1
  1466                           
  1467  0071                     lcd_set_cursor@col:	
  1468                           ; 1 bytes @ 0x1
  1469                           
  1470  0071                     TX_one@data:	
  1471                           ; 1 bytes @ 0x1
  1472                           
  1473  0071                     RX_one@i:	
  1474                           ; 1 bytes @ 0x1
  1475                           
  1476  0071                     ___bmul@product:	
  1477                           ; 1 bytes @ 0x1
  1478                           
  1479  0071                     i2c_Write_string@data:	
  1480                           ; 1 bytes @ 0x1
  1481                           
  1482                           
  1483                           ; 2 bytes @ 0x1
  1484  0071                     	ds	1
  1485  0072                     ??_buzz_one:	
  1486  0072                     ??_init_i2c_lcd_5v:	
  1487                           ; 1 bytes @ 0x2
  1488                           
  1489  0072                     ??_debug_fast_tx:	
  1490                           ; 1 bytes @ 0x2
  1491                           
  1492  0072                     ??_lcd_set_cursor:	
  1493                           ; 1 bytes @ 0x2
  1494                           
  1495  0072                     lcd_set_cursor@row:	
  1496                           ; 1 bytes @ 0x2
  1497                           
  1498  0072                     debug_fast_tx@i:	
  1499                           ; 1 bytes @ 0x2
  1500                           
  1501  0072                     TX_one@i:	
  1502                           ; 1 bytes @ 0x2
  1503                           
  1504  0072                     RX_one@data:	
  1505                           ; 1 bytes @ 0x2
  1506                           
  1507  0072                     ___bmul@multiplier:	
  1508                           ; 1 bytes @ 0x2
  1509                           
  1510  0072                     ___wmul@multiplicand:	
  1511                           ; 1 bytes @ 0x2
  1512                           
  1513                           
  1514                           ; 2 bytes @ 0x2
  1515  0072                     	ds	1
  1516  0073                     ??_ADC_get_val:	
  1517  0073                     ??_i2c_Write_string:	
  1518                           ; 1 bytes @ 0x3
  1519                           
  1520  0073                     lcd_set_cursor@LCD_position:	
  1521                           ; 1 bytes @ 0x3
  1522                           
  1523  0073                     ADC_get_val@channel:	
  1524                           ; 1 bytes @ 0x3
  1525                           
  1526  0073                     digitalpot@value:	
  1527                           ; 1 bytes @ 0x3
  1528                           
  1529  0073                     ___ftpack@exp:	
  1530                           ; 1 bytes @ 0x3
  1531                           
  1532                           
  1533                           ; 1 bytes @ 0x3
  1534  0073                     	ds	1
  1535  0074                     ?_print_screen:	
  1536  0074                     ?_Vout_set:	
  1537                           ; 1 bytes @ 0x4
  1538                           
  1539  0074                     ??___wmul:	
  1540                           ; 1 bytes @ 0x4
  1541                           
  1542  0074                     init_i2c_lcd_5v@contrast:	
  1543                           ; 1 bytes @ 0x4
  1544                           
  1545  0074                     ___ftpack@sign:	
  1546                           ; 1 bytes @ 0x4
  1547                           
  1548  0074                     print_screen@top:	
  1549                           ; 1 bytes @ 0x4
  1550                           
  1551  0074                     ADC_get_val@return_val:	
  1552                           ; 2 bytes @ 0x4
  1553                           
  1554  0074                     Vout_set@Volts:	
  1555                           ; 2 bytes @ 0x4
  1556                           
  1557  0074                     ___wmul@product:	
  1558                           ; 2 bytes @ 0x4
  1559                           
  1560                           
  1561                           ; 2 bytes @ 0x4
  1562  0074                     	ds	1
  1563  0075                     ??___ftpack:	
  1564                           
  1565                           ; 1 bytes @ 0x5
  1566  0075                     	ds	1
  1567  0076                     ??_Vout_set:	
  1568  0076                     ?_ten_thou_conv:	
  1569                           ; 1 bytes @ 0x6
  1570                           
  1571  0076                     ten_thou_conv@n:	
  1572                           ; 1 bytes @ 0x6
  1573                           
  1574  0076                     print_screen@bottom:	
  1575                           ; 2 bytes @ 0x6
  1576                           
  1577  0076                     Vout_set@digi_step:	
  1578                           ; 2 bytes @ 0x6
  1579                           
  1580                           
  1581                           ; 4 bytes @ 0x6
  1582  0076                     	ds	2
  1583  0078                     ??_print_screen:	
  1584  0078                     ??_testjig_done:	
  1585                           ; 1 bytes @ 0x8
  1586                           
  1587  0078                     ?_print_error:	
  1588                           ; 1 bytes @ 0x8
  1589                           
  1590  0078                     ??_ten_thou_conv:	
  1591                           ; 1 bytes @ 0x8
  1592                           
  1593  0078                     ?___lwtoft:	
  1594                           ; 1 bytes @ 0x8
  1595                           
  1596  0078                     print_error@top:	
  1597                           ; 3 bytes @ 0x8
  1598                           
  1599  0078                     ___lwtoft@c:	
  1600                           ; 2 bytes @ 0x8
  1601                           
  1602                           
  1603                           ; 2 bytes @ 0x8
  1604  0078                     	ds	2
  1605  007A                     print_error@bottom:	
  1606                           
  1607                           ; 2 bytes @ 0xA
  1608  007A                     	ds	1
  1609  007B                     ??___ftmul:	
  1610  007B                     ??___lwtoft:	
  1611                           ; 1 bytes @ 0xB
  1612                           
  1613  007B                     testjig_done@state:	
  1614                           ; 1 bytes @ 0xB
  1615                           
  1616                           
  1617                           ; 1 bytes @ 0xB
  1618  007B                     	ds	3
  1619  007E                     ??_get_30v_current:	
  1620  007E                     ??_lcd_print_int:	
  1621                           ; 1 bytes @ 0xE
  1622                           
  1623                           
  1624                           	psect	cstackBANK0
  1625  0020                     __pcstackBANK0:	
  1626                           ; 1 bytes @ 0xE
  1627                           
  1628  0020                     ??_print_error:	
  1629  0020                     ?___ftmul:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632  0020                     ___ftmul@f1:	
  1633                           ; 3 bytes @ 0x0
  1634                           
  1635                           
  1636                           ; 3 bytes @ 0x0
  1637  0020                     	ds	3
  1638  0023                     ___ftmul@f2:	
  1639                           
  1640                           ; 3 bytes @ 0x3
  1641  0023                     	ds	3
  1642  0026                     ___ftmul@exp:	
  1643                           
  1644                           ; 1 bytes @ 0x6
  1645  0026                     	ds	1
  1646  0027                     ___ftmul@f3_as_product:	
  1647                           
  1648                           ; 3 bytes @ 0x7
  1649  0027                     	ds	3
  1650  002A                     ___ftmul@cntr:	
  1651                           
  1652                           ; 1 bytes @ 0xA
  1653  002A                     	ds	1
  1654  002B                     ___ftmul@sign:	
  1655                           
  1656                           ; 1 bytes @ 0xB
  1657  002B                     	ds	1
  1658  002C                     ?___ftadd:	
  1659  002C                     ___ftadd@f1:	
  1660                           ; 3 bytes @ 0xC
  1661                           
  1662                           
  1663                           ; 3 bytes @ 0xC
  1664  002C                     	ds	3
  1665  002F                     ___ftadd@f2:	
  1666                           
  1667                           ; 3 bytes @ 0xF
  1668  002F                     	ds	3
  1669  0032                     ??___ftadd:	
  1670                           
  1671                           ; 1 bytes @ 0x12
  1672  0032                     	ds	3
  1673  0035                     ___ftadd@sign:	
  1674                           
  1675                           ; 1 bytes @ 0x15
  1676  0035                     	ds	1
  1677  0036                     ___ftadd@exp2:	
  1678                           
  1679                           ; 1 bytes @ 0x16
  1680  0036                     	ds	1
  1681  0037                     ___ftadd@exp1:	
  1682                           
  1683                           ; 1 bytes @ 0x17
  1684  0037                     	ds	1
  1685  0038                     ?___fttol:	
  1686  0038                     ___fttol@f1:	
  1687                           ; 4 bytes @ 0x18
  1688                           
  1689                           
  1690                           ; 3 bytes @ 0x18
  1691  0038                     	ds	4
  1692  003C                     ??___fttol:	
  1693                           
  1694                           ; 1 bytes @ 0x1C
  1695  003C                     	ds	3
  1696  003F                     ___fttol@sign1:	
  1697                           
  1698                           ; 1 bytes @ 0x1F
  1699  003F                     	ds	1
  1700  0040                     ___fttol@lval:	
  1701                           
  1702                           ; 4 bytes @ 0x20
  1703  0040                     	ds	4
  1704  0044                     ___fttol@exp1:	
  1705                           
  1706                           ; 1 bytes @ 0x24
  1707  0044                     	ds	1
  1708  0045                     ?_get_30v_current:	
  1709                           
  1710                           ; 2 bytes @ 0x25
  1711  0045                     	ds	2
  1712  0047                     get_30v_current@temp:	
  1713                           
  1714                           ; 2 bytes @ 0x27
  1715  0047                     	ds	2
  1716  0049                     ?_lcd_print_int:	
  1717  0049                     lcd_print_int@number:	
  1718                           ; 1 bytes @ 0x29
  1719                           
  1720                           
  1721                           ; 2 bytes @ 0x29
  1722  0049                     	ds	2
  1723  004B                     lcd_print_int@pos:	
  1724                           
  1725                           ; 2 bytes @ 0x2B
  1726  004B                     	ds	2
  1727  004D                     lcd_print_int@decimal:	
  1728                           
  1729                           ; 1 bytes @ 0x2D
  1730  004D                     	ds	1
  1731  004E                     lcd_print_int@ten_thou_digit:	
  1732                           
  1733                           ; 1 bytes @ 0x2E
  1734  004E                     	ds	1
  1735  004F                     ??_main:	
  1736                           
  1737                           ; 1 bytes @ 0x2F
  1738  004F                     	ds	3
  1739  0052                     main@i:	
  1740                           
  1741                           ; 2 bytes @ 0x32
  1742  0052                     	ds	2
  1743  0054                     main@RX_data:	
  1744                           
  1745                           ; 1 bytes @ 0x34
  1746  0054                     	ds	1
  1747                           
  1748                           	psect	maintext
  1749  0804                     __pmaintext:	
  1750 ;;
  1751 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1752 ;;
  1753 ;; *************** function _main *****************
  1754 ;; Defined at:
  1755 ;;		line 455 in file "Multi_RX_testjig_v1.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  i               2   50[BANK0 ] unsigned int 
  1760 ;;  RX_data         1   52[BANK0 ] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : B1F/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  1770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1771 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1772 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1773 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1774 ;;Total ram usage:        6 bytes
  1775 ;; Hardware stack levels required when called:    5
  1776 ;; This function calls:
  1777 ;;		_ADC_get_val
  1778 ;;		_RX_one
  1779 ;;		_TX_one
  1780 ;;		_Vout_set
  1781 ;;		_buzz_one
  1782 ;;		_debug_fast_tx
  1783 ;;		_get_30v_current
  1784 ;;		_init_ADC
  1785 ;;		_init_current_sink
  1786 ;;		_init_i2c
  1787 ;;		_init_i2c_lcd_5v
  1788 ;;		_lcd_print_int
  1789 ;;		_power_supply_set
  1790 ;;		_print_error
  1791 ;;		_print_screen
  1792 ;;		_testjig_done
  1793 ;; This function is called by:
  1794 ;;		Startup code after reset
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           
  1799                           ;psect for function _main
  1800  0804                     _main:	
  1801                           
  1802                           ;Multi_RX_testjig_v1.c: 458: OSCCON = 0x7A;
  1803                           
  1804                           ;incstack = 0
  1805                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1806  0804  307A               	movlw	122
  1807  0805  0021               	movlb	1	; select bank1
  1808  0806  0099               	movwf	25	;volatile
  1809                           
  1810                           ;Multi_RX_testjig_v1.c: 460: OPTION_REG = 0b11010000;
  1811  0807  30D0               	movlw	208
  1812  0808  0095               	movwf	21	;volatile
  1813                           
  1814                           ;Multi_RX_testjig_v1.c: 461: TMR0 = 0x00;
  1815  0809  0020               	movlb	0	; select bank0
  1816  080A  0195               	clrf	21	;volatile
  1817                           
  1818                           ;Multi_RX_testjig_v1.c: 462: TMR0IF = 0;
  1819  080B  110B               	bcf	11,2	;volatile
  1820                           
  1821                           ;Multi_RX_testjig_v1.c: 463: TMR0IE = 1;
  1822  080C  168B               	bsf	11,5	;volatile
  1823                           
  1824                           ;Multi_RX_testjig_v1.c: 466: TRISA = 0b00001111;
  1825  080D  300F               	movlw	15
  1826  080E  0021               	movlb	1	; select bank1
  1827  080F  008C               	movwf	12	;volatile
  1828                           
  1829                           ;Multi_RX_testjig_v1.c: 467: TRISB = 0b11001111;
  1830  0810  30CF               	movlw	207
  1831  0811  008D               	movwf	13	;volatile
  1832                           
  1833                           ;Multi_RX_testjig_v1.c: 468: TRISC = 0b00011010;
  1834  0812  301A               	movlw	26
  1835  0813  008E               	movwf	14	;volatile
  1836                           
  1837                           ;Multi_RX_testjig_v1.c: 469: TRISD = 0b10001011;
  1838  0814  308B               	movlw	139
  1839  0815  008F               	movwf	15	;volatile
  1840                           
  1841                           ;Multi_RX_testjig_v1.c: 470: TRISE = 0b11110110;
  1842  0816  30F6               	movlw	246
  1843  0817  0090               	movwf	16	;volatile
  1844                           
  1845                           ;Multi_RX_testjig_v1.c: 471: TRISF = 0b00101111;
  1846  0818  302F               	movlw	47
  1847  0819  0026               	movlb	6	; select bank6
  1848  081A  008C               	movwf	12	;volatile
  1849                           
  1850                           ;Multi_RX_testjig_v1.c: 472: TRISG = 0b11101111;
  1851  081B  30EF               	movlw	239
  1852  081C  008D               	movwf	13	;volatile
  1853                           
  1854                           ;Multi_RX_testjig_v1.c: 474: PORTA = 0b00000000;
  1855  081D  0020               	movlb	0	; select bank0
  1856  081E  018C               	clrf	12	;volatile
  1857                           
  1858                           ;Multi_RX_testjig_v1.c: 475: PORTB = 0b00000000;
  1859  081F  018D               	clrf	13	;volatile
  1860                           
  1861                           ;Multi_RX_testjig_v1.c: 476: PORTC = 0b00000000;
  1862  0820  018E               	clrf	14	;volatile
  1863                           
  1864                           ;Multi_RX_testjig_v1.c: 477: PORTD = 0b01000000;
  1865  0821  3040               	movlw	64
  1866  0822  008F               	movwf	15	;volatile
  1867                           
  1868                           ;Multi_RX_testjig_v1.c: 478: PORTE = 0b00000000;
  1869  0823  0190               	clrf	16	;volatile
  1870                           
  1871                           ;Multi_RX_testjig_v1.c: 479: PORTF = 0b00000000;
  1872  0824  0025               	movlb	5	; select bank5
  1873  0825  018C               	clrf	12	;volatile
  1874                           
  1875                           ;Multi_RX_testjig_v1.c: 480: PORTG = 0b00000000;
  1876  0826  018D               	clrf	13	;volatile
  1877                           
  1878                           ;Multi_RX_testjig_v1.c: 482: WPUB = 0b00000000;
  1879  0827  0024               	movlb	4	; select bank4
  1880  0828  018D               	clrf	13	;volatile
  1881                           
  1882                           ;Multi_RX_testjig_v1.c: 483: WPUD = 0b00000000;
  1883  0829  018F               	clrf	15	;volatile
  1884                           
  1885                           ;Multi_RX_testjig_v1.c: 484: WPUE = 0b00000000;
  1886  082A  0190               	clrf	16	;volatile
  1887                           
  1888                           ;Multi_RX_testjig_v1.c: 486: ANSELA = 0b00000000;
  1889  082B  0023               	movlb	3	; select bank3
  1890  082C  018C               	clrf	12	;volatile
  1891                           
  1892                           ;Multi_RX_testjig_v1.c: 487: ANSELB = 0b00001100;
  1893  082D  300C               	movlw	12
  1894  082E  008D               	movwf	13	;volatile
  1895                           
  1896                           ;Multi_RX_testjig_v1.c: 488: ANSELD = 0b00001111;
  1897  082F  300F               	movlw	15
  1898  0830  008F               	movwf	15	;volatile
  1899                           
  1900                           ;Multi_RX_testjig_v1.c: 489: ANSELE = 0b00000100;
  1901  0831  3004               	movlw	4
  1902  0832  0090               	movwf	16	;volatile
  1903                           
  1904                           ;Multi_RX_testjig_v1.c: 490: ANSELF = 0b00000000;
  1905  0833  0028               	movlb	8	; select bank8
  1906  0834  018C               	clrf	12	;volatile
  1907                           
  1908                           ;Multi_RX_testjig_v1.c: 491: ANSELG = 0b00000000;
  1909  0835  018D               	clrf	13	;volatile
  1910                           
  1911                           ;Multi_RX_testjig_v1.c: 494: init_ADC();
  1912  0836  27F9               	fcall	_init_ADC
  1913                           
  1914                           ;Multi_RX_testjig_v1.c: 495: init_current_sink();
  1915  0837  3186  2652  3188   	fcall	_init_current_sink
  1916                           
  1917                           ;Multi_RX_testjig_v1.c: 496: pickit_state = pickit_idle;
  1918  083A  3005               	movlw	5
  1919  083B  0020               	movlb	0	; select bank0
  1920  083C  00EF               	movwf	_pickit_state
  1921                           
  1922                           ;Multi_RX_testjig_v1.c: 498: RA5 = 0;
  1923  083D  128C               	bcf	12,5	;volatile
  1924                           
  1925                           ;Multi_RX_testjig_v1.c: 499: buzz_one(200);
  1926  083E  30C8               	movlw	200
  1927  083F  00F0               	movwf	buzz_one@time
  1928  0840  01F1               	clrf	buzz_one@time+1
  1929  0841  27F1               	fcall	_buzz_one
  1930                           
  1931                           ;Multi_RX_testjig_v1.c: 500: RA5 = 1;
  1932  0842  0020               	movlb	0	; select bank0
  1933  0843  168C               	bsf	12,5	;volatile
  1934                           
  1935                           ;Multi_RX_testjig_v1.c: 501: init_i2c();
  1936  0844  3186  263B  3188   	fcall	_init_i2c
  1937                           
  1938                           ;Multi_RX_testjig_v1.c: 508: init_i2c_lcd_5v(8, 0x38);
  1939  0847  3038               	movlw	56
  1940  0848  00F1               	movwf	init_i2c_lcd_5v@single1_double2
  1941  0849  3008               	movlw	8
  1942  084A  3181  21E2  3188   	fcall	_init_i2c_lcd_5v
  1943                           
  1944                           ;Multi_RX_testjig_v1.c: 509: print_screen("Multi_RX", "Test-Jig|Startup");
  1945  084D  30C1               	movlw	low (STR_1| (0+32768))
  1946  084E  00F4               	movwf	print_screen@top
  1947  084F  3092               	movlw	high (STR_1| (0+32768))
  1948  0850  00F5               	movwf	print_screen@top+1
  1949  0851  3059               	movlw	low (STR_2| (0+32768))
  1950  0852  00F6               	movwf	print_screen@bottom
  1951  0853  3090               	movlw	high (STR_2| (0+32768))
  1952  0854  00F7               	movwf	print_screen@bottom+1
  1953  0855  2757  3188         	fcall	_print_screen
  1954                           
  1955                           ;Multi_RX_testjig_v1.c: 510: RA4 = 1;
  1956  0857  0020               	movlb	0	; select bank0
  1957  0858  160C               	bsf	12,4	;volatile
  1958                           
  1959                           ;Multi_RX_testjig_v1.c: 511: GIE = 1;
  1960  0859  178B               	bsf	11,7	;volatile
  1961                           
  1962                           ;Multi_RX_testjig_v1.c: 512: LATC7 = 1;
  1963  085A  0022               	movlb	2	; select bank2
  1964  085B  178E               	bsf	14,7	;volatile
  1965                           
  1966                           ;Multi_RX_testjig_v1.c: 513: _delay((unsigned long)((100)*(16000000/4000.0)));
  1967  085C  3003               	movlw	3
  1968  085D  0020               	movlb	0	; select bank0
  1969  085E  00D1               	movwf	??_main+2
  1970  085F  3008               	movlw	8
  1971  0860  00D0               	movwf	??_main+1
  1972  0861  3078               	movlw	120
  1973  0862  00CF               	movwf	??_main
  1974  0863                     u4097:	
  1975  0863  0BCF               	decfsz	??_main,f
  1976  0864  2863               	goto	u4097
  1977  0865  0BD0               	decfsz	??_main+1,f
  1978  0866  2863               	goto	u4097
  1979  0867  0BD1               	decfsz	??_main+2,f
  1980  0868  2863               	goto	u4097
  1981                           
  1982                           ;Multi_RX_testjig_v1.c: 514: debug_fast_tx(0xAAAA);
  1983  0869  30AA               	movlw	170
  1984  086A  00F0               	movwf	debug_fast_tx@data
  1985  086B  00F1               	movwf	debug_fast_tx@data+1
  1986  086C  3185  25E6  3188   	fcall	_debug_fast_tx
  1987                           
  1988                           ;Multi_RX_testjig_v1.c: 515: _delay((unsigned long)((100)*(16000000/4000000.0)));
  1989  086F  3085               	movlw	133
  1990  0870  0020               	movlb	0	; select bank0
  1991  0871  00CF               	movwf	??_main
  1992  0872                     u4107:	
  1993  0872  0BCF               	decfsz	??_main,f
  1994  0873  2872               	goto	u4107
  1995                           
  1996                           ;Multi_RX_testjig_v1.c: 516: debug_fast_tx(0x5555);
  1997  0874  3055               	movlw	85
  1998  0875  00F0               	movwf	debug_fast_tx@data
  1999  0876  00F1               	movwf	debug_fast_tx@data+1
  2000  0877  3185  25E6  3188   	fcall	_debug_fast_tx
  2001                           
  2002                           ;Multi_RX_testjig_v1.c: 517: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2003  087A  3085               	movlw	133
  2004  087B  0020               	movlb	0	; select bank0
  2005  087C  00CF               	movwf	??_main
  2006  087D                     u4117:	
  2007  087D  0BCF               	decfsz	??_main,f
  2008  087E  287D               	goto	u4117
  2009                           
  2010                           ;Multi_RX_testjig_v1.c: 519: if(PCONbits.nRMCLR == 1)
  2011  087F  0021               	movlb	1	; select bank1
  2012  0880  1D96               	btfss	22,3	;volatile
  2013  0881  2886               	goto	l3396
  2014                           
  2015                           ;Multi_RX_testjig_v1.c: 520: testjig_done(2);
  2016  0882  3002               	movlw	2
  2017  0883  3185  2520  3188   	fcall	_testjig_done
  2018  0886                     l3396:	
  2019                           
  2020                           ;Multi_RX_testjig_v1.c: 523: if(RF3 == 1)
  2021  0886  0025               	movlb	5	; select bank5
  2022  0887  1D8C               	btfss	12,3	;volatile
  2023  0888  2893               	goto	l299
  2024                           
  2025                           ;Multi_RX_testjig_v1.c: 524: print_error("Multi_RX", "-> Insert PCB");
  2026  0889  30C1               	movlw	low (STR_1| (0+32768))
  2027  088A  00F8               	movwf	print_error@top
  2028  088B  3092               	movlw	high (STR_1| (0+32768))
  2029  088C  00F9               	movwf	print_error@top+1
  2030  088D  3015               	movlw	low (STR_4| (0+32768))
  2031  088E  00FA               	movwf	print_error@bottom
  2032  088F  3091               	movlw	high (STR_4| (0+32768))
  2033  0890  00FB               	movwf	print_error@bottom+1
  2034  0891  276D  3188         	fcall	_print_error
  2035  0893                     l299:	
  2036                           
  2037                           ;Multi_RX_testjig_v1.c: 527: print_screen("Powering board", "");
  2038  0893  30CB               	movlw	low (STR_5| (0+32768))
  2039  0894  00F4               	movwf	print_screen@top
  2040  0895  3090               	movlw	high (STR_5| (0+32768))
  2041  0896  00F5               	movwf	print_screen@top+1
  2042  0897  308A               	movlw	low ((STR_155+15)| (0+32768))
  2043  0898  00F6               	movwf	print_screen@bottom
  2044  0899  3090               	movlw	high ((STR_155+15)| (0+32768))
  2045  089A  00F7               	movwf	print_screen@bottom+1
  2046  089B  2757               	fcall	_print_screen
  2047                           
  2048                           ;Multi_RX_testjig_v1.c: 530: Vout_set(12);
  2049  089C  300C               	movlw	12
  2050  089D  00F4               	movwf	Vout_set@Volts
  2051  089E  01F5               	clrf	Vout_set@Volts+1
  2052  089F  3180  20A6  3188   	fcall	_Vout_set
  2053                           
  2054                           ;Multi_RX_testjig_v1.c: 531: power_supply_set(0);
  2055  08A2  3000               	movlw	0
  2056  08A3  27D0  3188         	fcall	_power_supply_set
  2057                           
  2058                           ;Multi_RX_testjig_v1.c: 532: _delay((unsigned long)((50)*(16000000/4000.0)));
  2059  08A5  3002               	movlw	2
  2060  08A6  0020               	movlb	0	; select bank0
  2061  08A7  00D1               	movwf	??_main+2
  2062  08A8  3004               	movlw	4
  2063  08A9  00D0               	movwf	??_main+1
  2064  08AA  30BA               	movlw	186
  2065  08AB  00CF               	movwf	??_main
  2066  08AC                     u4127:	
  2067  08AC  0BCF               	decfsz	??_main,f
  2068  08AD  28AC               	goto	u4127
  2069  08AE  0BD0               	decfsz	??_main+1,f
  2070  08AF  28AC               	goto	u4127
  2071  08B0  0BD1               	decfsz	??_main+2,f
  2072  08B1  28AC               	goto	u4127
  2073  08B2  0000               	nop
  2074                           
  2075                           ;Multi_RX_testjig_v1.c: 533: ADC_val = ADC_get_val(0b01011111);
  2076  08B3  305F               	movlw	95
  2077  08B4  27BE  3188         	fcall	_ADC_get_val
  2078                           
  2079                           ;Multi_RX_testjig_v1.c: 534: testjig_timer = (unsigned int)(7518.8/2);
  2080  08B6  30AF               	movlw	175
  2081  08B7  0020               	movlb	0	; select bank0
  2082  08B8  00E1               	movwf	_testjig_timer	;volatile
  2083  08B9  300E               	movlw	14
  2084  08BA  00E2               	movwf	_testjig_timer+1	;volatile
  2085  08BB  28D4               	goto	l3406
  2086  08BC                     l3408:	
  2087  08BC  305F               	movlw	95
  2088  08BD  27BE  3188         	fcall	_ADC_get_val
  2089  08BF  3000               	movlw	0
  2090  08C0  0271               	subwf	?_ADC_get_val+1,w
  2091  08C1  307B               	movlw	123
  2092  08C2  1903               	skipnz
  2093  08C3  0270               	subwf	?_ADC_get_val,w
  2094  08C4  1C03               	skipc
  2095  08C5  28DE               	goto	l3414
  2096  08C6  3183  2317  3188   	fcall	_get_30v_current
  2097  08C9  3000               	movlw	0
  2098  08CA  0246               	subwf	?_get_30v_current+1,w
  2099  08CB  301E               	movlw	30
  2100  08CC  1903               	skipnz
  2101  08CD  0245               	subwf	?_get_30v_current,w
  2102  08CE  1803               	skipnc
  2103  08CF  28DE               	goto	l3414
  2104  08D0  0861               	movf	_testjig_timer,w	;volatile
  2105  08D1  0462               	iorwf	_testjig_timer+1,w	;volatile
  2106  08D2  1903               	btfsc	3,2
  2107  08D3  28DE               	goto	l3414
  2108  08D4                     l3406:	
  2109                           ;Multi_RX_testjig_v1.c: 535: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08)) && (get_30v_current() < 30) && testjig_timer);
  2110                           
  2111  08D4  305F               	movlw	95
  2112  08D5  27BE  3188         	fcall	_ADC_get_val
  2113  08D7  3000               	movlw	0
  2114  08D8  0271               	subwf	?_ADC_get_val+1,w
  2115  08D9  3068               	movlw	104
  2116  08DA  1903               	skipnz
  2117  08DB  0270               	subwf	?_ADC_get_val,w
  2118  08DC  1C03               	btfss	3,0
  2119  08DD  28BC               	goto	l3408
  2120  08DE                     l3414:	
  2121                           
  2122                           ;Multi_RX_testjig_v1.c: 536: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  2123  08DE  305F               	movlw	95
  2124  08DF  27BE  3188         	fcall	_ADC_get_val
  2125  08E1  3000               	movlw	0
  2126  08E2  0271               	subwf	?_ADC_get_val+1,w
  2127  08E3  3068               	movlw	104
  2128  08E4  1903               	skipnz
  2129  08E5  0270               	subwf	?_ADC_get_val,w
  2130  08E6  1803               	skipnc
  2131  08E7  28F0               	goto	l3418
  2132                           
  2133                           ;Multi_RX_testjig_v1.c: 537: print_error("12v-5v supply", "Volt Error L");
  2134  08E8  303F               	movlw	low (STR_7| (0+32768))
  2135  08E9  00F8               	movwf	print_error@top
  2136  08EA  3091               	movlw	high (STR_7| (0+32768))
  2137  08EB  00F9               	movwf	print_error@top+1
  2138  08EC  3082               	movlw	low (STR_8| (0+32768))
  2139  08ED  00FA               	movwf	print_error@bottom
  2140  08EE  3091               	movlw	high (STR_8| (0+32768))
  2141  08EF  291F               	goto	L1
  2142  08F0                     l3418:	
  2143                           
  2144                           ;Multi_RX_testjig_v1.c: 538: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  2145  08F0  305F               	movlw	95
  2146  08F1  27BE  3188         	fcall	_ADC_get_val
  2147  08F3  3000               	movlw	0
  2148  08F4  0271               	subwf	?_ADC_get_val+1,w
  2149  08F5  307B               	movlw	123
  2150  08F6  1903               	skipnz
  2151  08F7  0270               	subwf	?_ADC_get_val,w
  2152  08F8  1C03               	skipc
  2153  08F9  2902               	goto	l3422
  2154                           
  2155                           ;Multi_RX_testjig_v1.c: 539: print_error("12v-5v supply", "Volt Error H");
  2156  08FA  303F               	movlw	low (STR_7| (0+32768))
  2157  08FB  00F8               	movwf	print_error@top
  2158  08FC  3091               	movlw	high (STR_7| (0+32768))
  2159  08FD  00F9               	movwf	print_error@top+1
  2160  08FE  3068               	movlw	low (STR_10| (0+32768))
  2161  08FF  00FA               	movwf	print_error@bottom
  2162  0900  3091               	movlw	high (STR_10| (0+32768))
  2163  0901  291F               	goto	L1
  2164  0902                     l3422:	
  2165                           
  2166                           ;Multi_RX_testjig_v1.c: 540: else if((get_30v_current() >= 30))
  2167  0902  3183  2317  3188   	fcall	_get_30v_current
  2168  0905  3000               	movlw	0
  2169  0906  0246               	subwf	?_get_30v_current+1,w
  2170  0907  301E               	movlw	30
  2171  0908  1903               	skipnz
  2172  0909  0245               	subwf	?_get_30v_current,w
  2173  090A  1C03               	skipc
  2174  090B  2914               	goto	l3426
  2175                           
  2176                           ;Multi_RX_testjig_v1.c: 541: print_error("12v-5v supply", "Curr Error");
  2177  090C  303F               	movlw	low (STR_7| (0+32768))
  2178  090D  00F8               	movwf	print_error@top
  2179  090E  3091               	movlw	high (STR_7| (0+32768))
  2180  090F  00F9               	movwf	print_error@top+1
  2181  0910  3025               	movlw	low (STR_12| (0+32768))
  2182  0911  00FA               	movwf	print_error@bottom
  2183  0912  3092               	movlw	high (STR_12| (0+32768))
  2184  0913  291F               	goto	L1
  2185  0914                     l3426:	
  2186                           
  2187                           ;Multi_RX_testjig_v1.c: 542: else if(testjig_timer == 0)
  2188  0914  0861               	movf	_testjig_timer,w	;volatile
  2189  0915  0462               	iorwf	_testjig_timer+1,w	;volatile
  2190  0916  1D03               	btfss	3,2
  2191  0917  2922               	goto	l306
  2192                           
  2193                           ;Multi_RX_testjig_v1.c: 543: print_error("12v-5v supply", "T-out Error");
  2194  0918  303F               	movlw	low (STR_7| (0+32768))
  2195  0919  00F8               	movwf	print_error@top
  2196  091A  3091               	movlw	high (STR_7| (0+32768))
  2197  091B  00F9               	movwf	print_error@top+1
  2198  091C  3019               	movlw	low (STR_14| (0+32768))
  2199  091D  00FA               	movwf	print_error@bottom
  2200  091E  3092               	movlw	high (STR_14| (0+32768))
  2201  091F                     L1:	
  2202  091F  00FB               	movwf	print_error@bottom+1
  2203  0920  276D  3188         	fcall	_print_error
  2204  0922                     l306:	
  2205                           
  2206                           ;Multi_RX_testjig_v1.c: 548: power_supply_set(1);
  2207  0922  3001               	movlw	1
  2208  0923  27D0               	fcall	_power_supply_set
  2209                           
  2210                           ;Multi_RX_testjig_v1.c: 549: Vout_set(16);
  2211  0924  3010               	movlw	16
  2212  0925  00F4               	movwf	Vout_set@Volts
  2213  0926  01F5               	clrf	Vout_set@Volts+1
  2214  0927  3180  20A6  3188   	fcall	_Vout_set
  2215                           
  2216                           ;Multi_RX_testjig_v1.c: 550: _delay((unsigned long)((150)*(16000000/4000.0)));
  2217  092A  3004               	movlw	4
  2218  092B  0020               	movlb	0	; select bank0
  2219  092C  00D1               	movwf	??_main+2
  2220  092D  300C               	movlw	12
  2221  092E  00D0               	movwf	??_main+1
  2222  092F  3035               	movlw	53
  2223  0930  00CF               	movwf	??_main
  2224  0931                     u4137:	
  2225  0931  0BCF               	decfsz	??_main,f
  2226  0932  2931               	goto	u4137
  2227  0933  0BD0               	decfsz	??_main+1,f
  2228  0934  2931               	goto	u4137
  2229  0935  0BD1               	decfsz	??_main+2,f
  2230  0936  2931               	goto	u4137
  2231  0937  3200               	nop2
  2232                           
  2233                           ;Multi_RX_testjig_v1.c: 551: testjig_timer = (unsigned int)(7518.8/2);
  2234  0938  30AF               	movlw	175
  2235  0939  0020               	movlb	0	; select bank0
  2236  093A  00E1               	movwf	_testjig_timer	;volatile
  2237  093B  300E               	movlw	14
  2238  093C  00E2               	movwf	_testjig_timer+1	;volatile
  2239  093D  296A               	goto	l3434
  2240  093E                     l3436:	
  2241  093E  305F               	movlw	95
  2242  093F  27BE  3188         	fcall	_ADC_get_val
  2243  0941  3000               	movlw	0
  2244  0942  0271               	subwf	?_ADC_get_val+1,w
  2245  0943  307B               	movlw	123
  2246  0944  1903               	skipnz
  2247  0945  0270               	subwf	?_ADC_get_val,w
  2248  0946  1C03               	skipc
  2249  0947  2974               	goto	l3446
  2250  0948  3063               	movlw	99
  2251  0949  27BE  3188         	fcall	_ADC_get_val
  2252  094B  3000               	movlw	0
  2253  094C  0271               	subwf	?_ADC_get_val+1,w
  2254  094D  30F5               	movlw	245
  2255  094E  1903               	skipnz
  2256  094F  0270               	subwf	?_ADC_get_val,w
  2257  0950  1803               	skipnc
  2258  0951  2974               	goto	l3446
  2259  0952  3063               	movlw	99
  2260  0953  27BE  3188         	fcall	_ADC_get_val
  2261  0955  3001               	movlw	1
  2262  0956  0271               	subwf	?_ADC_get_val+1,w
  2263  0957  3048               	movlw	72
  2264  0958  1903               	skipnz
  2265  0959  0270               	subwf	?_ADC_get_val,w
  2266  095A  1C03               	skipc
  2267  095B  2974               	goto	l3446
  2268  095C  3183  2317  3188   	fcall	_get_30v_current
  2269  095F  3000               	movlw	0
  2270  0960  0246               	subwf	?_get_30v_current+1,w
  2271  0961  3028               	movlw	40
  2272  0962  1903               	skipnz
  2273  0963  0245               	subwf	?_get_30v_current,w
  2274  0964  1803               	skipnc
  2275  0965  2974               	goto	l3446
  2276  0966  0861               	movf	_testjig_timer,w	;volatile
  2277  0967  0462               	iorwf	_testjig_timer+1,w	;volatile
  2278  0968  1903               	btfsc	3,2
  2279  0969  2974               	goto	l3446
  2280  096A                     l3434:	
  2281                           ;Multi_RX_testjig_v1.c: 552: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08))&&(ADC_get_val(0b01100011) < (unsigned int)((((12/11.0)*1024)/4.096)*0.9)) && (AD
      +                          C_get_val(0b011
  2282                           
  2283  096A  305F               	movlw	95
  2284  096B  27BE  3188         	fcall	_ADC_get_val
  2285  096D  3000               	movlw	0
  2286  096E  0271               	subwf	?_ADC_get_val+1,w
  2287  096F  3068               	movlw	104
  2288  0970  1903               	skipnz
  2289  0971  0270               	subwf	?_ADC_get_val,w
  2290  0972  1C03               	btfss	3,0
  2291  0973  293E               	goto	l3436
  2292  0974                     l3446:	
  2293                           
  2294                           ;Multi_RX_testjig_v1.c: 553: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  2295  0974  305F               	movlw	95
  2296  0975  27BE  3188         	fcall	_ADC_get_val
  2297  0977  3000               	movlw	0
  2298  0978  0271               	subwf	?_ADC_get_val+1,w
  2299  0979  3068               	movlw	104
  2300  097A  1903               	skipnz
  2301  097B  0270               	subwf	?_ADC_get_val,w
  2302  097C  1803               	skipnc
  2303  097D  2982               	goto	l3450
  2304                           
  2305                           ;Multi_RX_testjig_v1.c: 554: print_error("16v-5v supply", "Volt Error L");
  2306  097E  304D               	movlw	low (STR_15| (0+32768))
  2307  097F  00F8               	movwf	print_error@top
  2308  0980  3091               	movlw	high (STR_15| (0+32768))
  2309  0981  299D               	goto	L10
  2310  0982                     l3450:	
  2311                           
  2312                           ;Multi_RX_testjig_v1.c: 555: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  2313  0982  305F               	movlw	95
  2314  0983  27BE  3188         	fcall	_ADC_get_val
  2315  0985  3000               	movlw	0
  2316  0986  0271               	subwf	?_ADC_get_val+1,w
  2317  0987  307B               	movlw	123
  2318  0988  1903               	skipnz
  2319  0989  0270               	subwf	?_ADC_get_val,w
  2320  098A  1C03               	skipc
  2321  098B  2990               	goto	l3454
  2322                           
  2323                           ;Multi_RX_testjig_v1.c: 556: print_error("16v-5v supply", "Volt Error H");
  2324  098C  304D               	movlw	low (STR_15| (0+32768))
  2325  098D  00F8               	movwf	print_error@top
  2326  098E  3091               	movlw	high (STR_15| (0+32768))
  2327  098F  29AF               	goto	L11
  2328  0990                     l3454:	
  2329                           
  2330                           ;Multi_RX_testjig_v1.c: 557: else if((ADC_get_val(0b01100011) < (unsigned int)((((12/11.
      +                          0)*1024)/4.096)*0.9)))
  2331  0990  3063               	movlw	99
  2332  0991  27BE  3188         	fcall	_ADC_get_val
  2333  0993  3000               	movlw	0
  2334  0994  0271               	subwf	?_ADC_get_val+1,w
  2335  0995  30F5               	movlw	245
  2336  0996  1903               	skipnz
  2337  0997  0270               	subwf	?_ADC_get_val,w
  2338  0998  1803               	skipnc
  2339  0999  29A2               	goto	l3458
  2340                           
  2341                           ;Multi_RX_testjig_v1.c: 558: print_error("16v-12v supply", "Volt Error L");
  2342  099A  30F8               	movlw	low (STR_19| (0+32768))
  2343  099B  00F8               	movwf	print_error@top
  2344  099C  3090               	movlw	high (STR_19| (0+32768))
  2345  099D                     L10:	
  2346  099D  00F9               	movwf	print_error@top+1
  2347  099E  3082               	movlw	low (STR_8| (0+32768))
  2348  099F  00FA               	movwf	print_error@bottom
  2349  09A0  3091               	movlw	high (STR_8| (0+32768))
  2350  09A1  29D9               	goto	L8
  2351  09A2                     l3458:	
  2352                           
  2353                           ;Multi_RX_testjig_v1.c: 559: else if((ADC_get_val(0b01100011) > (unsigned int)((((12/11.
      +                          0)*1024)/4.096)*1.2)))
  2354  09A2  3063               	movlw	99
  2355  09A3  27BE  3188         	fcall	_ADC_get_val
  2356  09A5  3001               	movlw	1
  2357  09A6  0271               	subwf	?_ADC_get_val+1,w
  2358  09A7  3048               	movlw	72
  2359  09A8  1903               	skipnz
  2360  09A9  0270               	subwf	?_ADC_get_val,w
  2361  09AA  1C03               	skipc
  2362  09AB  29B4               	goto	l3462
  2363                           
  2364                           ;Multi_RX_testjig_v1.c: 560: print_error("16v-12v supply", "Volt Error H");
  2365  09AC  30F8               	movlw	low (STR_19| (0+32768))
  2366  09AD  00F8               	movwf	print_error@top
  2367  09AE  3090               	movlw	high (STR_19| (0+32768))
  2368  09AF                     L11:	
  2369  09AF  00F9               	movwf	print_error@top+1
  2370  09B0  3068               	movlw	low (STR_10| (0+32768))
  2371  09B1  00FA               	movwf	print_error@bottom
  2372  09B2  3091               	movlw	high (STR_10| (0+32768))
  2373  09B3  29D9               	goto	L8
  2374  09B4                     l3462:	
  2375                           
  2376                           ;Multi_RX_testjig_v1.c: 561: else if((get_30v_current() >= 40))
  2377  09B4  3183  2317  3188   	fcall	_get_30v_current
  2378  09B7  3000               	movlw	0
  2379  09B8  0246               	subwf	?_get_30v_current+1,w
  2380  09B9  3028               	movlw	40
  2381  09BA  1903               	skipnz
  2382  09BB  0245               	subwf	?_get_30v_current,w
  2383  09BC  1C03               	skipc
  2384  09BD  29CE               	goto	l3468
  2385                           
  2386                           ;Multi_RX_testjig_v1.c: 562: {
  2387                           ;Multi_RX_testjig_v1.c: 563: lcd_print_int(get_30v_current(), 10, 0, 0);
  2388  09BE  3183  2317  3188   	fcall	_get_30v_current
  2389  09C1  0846               	movf	?_get_30v_current+1,w
  2390  09C2  00CA               	movwf	lcd_print_int@number+1
  2391  09C3  0845               	movf	?_get_30v_current,w
  2392  09C4  00C9               	movwf	lcd_print_int@number
  2393  09C5  300A               	movlw	10
  2394  09C6  00CB               	movwf	lcd_print_int@pos
  2395  09C7  01CC               	clrf	lcd_print_int@pos+1
  2396  09C8  01CD               	clrf	lcd_print_int@decimal
  2397  09C9  01CE               	clrf	lcd_print_int@ten_thou_digit
  2398  09CA  3180  20F7  3188   	fcall	_lcd_print_int
  2399  09CD                     l326:	
  2400                           ;Multi_RX_testjig_v1.c: 564: while(1);
  2401                           
  2402  09CD  29CD               	goto	l326
  2403  09CE                     l3468:	
  2404                           
  2405                           ;Multi_RX_testjig_v1.c: 567: else if(testjig_timer == 0)
  2406  09CE  0861               	movf	_testjig_timer,w	;volatile
  2407  09CF  0462               	iorwf	_testjig_timer+1,w	;volatile
  2408  09D0  1D03               	btfss	3,2
  2409  09D1  29DC               	goto	l3472
  2410                           
  2411                           ;Multi_RX_testjig_v1.c: 568: print_error("16v-5v supply", "T-out Error");
  2412  09D2  304D               	movlw	low (STR_15| (0+32768))
  2413  09D3  00F8               	movwf	print_error@top
  2414  09D4  3091               	movlw	high (STR_15| (0+32768))
  2415  09D5  00F9               	movwf	print_error@top+1
  2416  09D6  3019               	movlw	low (STR_14| (0+32768))
  2417  09D7  00FA               	movwf	print_error@bottom
  2418  09D8  3092               	movlw	high (STR_14| (0+32768))
  2419  09D9                     L8:	
  2420  09D9  00FB               	movwf	print_error@bottom+1
  2421  09DA  276D  3188         	fcall	_print_error
  2422  09DC                     l3472:	
  2423                           
  2424                           ;Multi_RX_testjig_v1.c: 574: if(RA2 == 1)
  2425  09DC  0020               	movlb	0	; select bank0
  2426  09DD  1D0C               	btfss	12,2	;volatile
  2427  09DE  2A21               	goto	l3492
  2428                           
  2429                           ;Multi_RX_testjig_v1.c: 575: {
  2430                           ;Multi_RX_testjig_v1.c: 576: power_supply_set(0);
  2431  09DF  3000               	movlw	0
  2432  09E0  27D0  3188         	fcall	_power_supply_set
  2433                           
  2434                           ;Multi_RX_testjig_v1.c: 578: print_screen("Pickit Programming", "");
  2435  09E2  3013               	movlw	low (STR_27| (0+32768))
  2436  09E3  00F4               	movwf	print_screen@top
  2437  09E4  3090               	movlw	high (STR_27| (0+32768))
  2438  09E5  00F5               	movwf	print_screen@top+1
  2439  09E6  308A               	movlw	low ((STR_155+15)| (0+32768))
  2440  09E7  00F6               	movwf	print_screen@bottom
  2441  09E8  3090               	movlw	high ((STR_155+15)| (0+32768))
  2442  09E9  00F7               	movwf	print_screen@bottom+1
  2443  09EA  2757  3188         	fcall	_print_screen
  2444                           
  2445                           ;Multi_RX_testjig_v1.c: 579: LATA7 = 1;
  2446  09EC  0022               	movlb	2	; select bank2
  2447  09ED  178C               	bsf	12,7	;volatile
  2448                           
  2449                           ;Multi_RX_testjig_v1.c: 580: _delay((unsigned long)((100)*(16000000/4000.0)));
  2450  09EE  3003               	movlw	3
  2451  09EF  0020               	movlb	0	; select bank0
  2452  09F0  00D1               	movwf	??_main+2
  2453  09F1  3008               	movlw	8
  2454  09F2  00D0               	movwf	??_main+1
  2455  09F3  3078               	movlw	120
  2456  09F4  00CF               	movwf	??_main
  2457  09F5                     u4147:	
  2458  09F5  0BCF               	decfsz	??_main,f
  2459  09F6  29F5               	goto	u4147
  2460  09F7  0BD0               	decfsz	??_main+1,f
  2461  09F8  29F5               	goto	u4147
  2462  09F9  0BD1               	decfsz	??_main+2,f
  2463  09FA  29F5               	goto	u4147
  2464                           
  2465                           ;Multi_RX_testjig_v1.c: 581: pickit_state = pickit_start;
  2466  09FB  0020               	movlb	0	; select bank0
  2467  09FC  3001               	movlw	low (STR_29| (0+32768))
  2468  09FD  01EF               	clrf	_pickit_state
  2469  09FE  0AEF               	incf	_pickit_state,f
  2470                           
  2471                           ;Multi_RX_testjig_v1.c: 583: print_screen("Waiting for", " Programming");
  2472  09FF  00F4               	movwf	print_screen@top
  2473  0A00  3092               	movlw	high (STR_29| (0+32768))
  2474  0A01  00F5               	movwf	print_screen@top+1
  2475  0A02  3019               	movlw	low ((STR_27+6)| (0+32768))
  2476  0A03  00F6               	movwf	print_screen@bottom
  2477  0A04  3090               	movlw	high ((STR_27+6)| (0+32768))
  2478  0A05  00F7               	movwf	print_screen@bottom+1
  2479  0A06  2757  3188         	fcall	_print_screen
  2480  0A08  2A0D               	goto	l3484
  2481  0A09                     l3486:	
  2482  0A09  3004               	movlw	4
  2483  0A0A  066F               	xorwf	_pickit_state,w
  2484  0A0B  1903               	btfsc	3,2
  2485  0A0C  2A12               	goto	l3488
  2486  0A0D                     l3484:	
  2487                           ;Multi_RX_testjig_v1.c: 584: while((pickit_state != pickit_idle) && (pickit_state != pic
      +                          kit_error));
  2488                           
  2489  0A0D  3005               	movlw	5
  2490  0A0E  0020               	movlb	0	; select bank0
  2491  0A0F  066F               	xorwf	_pickit_state,w
  2492  0A10  1D03               	btfss	3,2
  2493  0A11  2A09               	goto	l3486
  2494  0A12                     l3488:	
  2495                           
  2496                           ;Multi_RX_testjig_v1.c: 585: if(pickit_state == pickit_error)
  2497  0A12  3004               	movlw	4
  2498  0A13  066F               	xorwf	_pickit_state,w
  2499  0A14  1D03               	btfss	3,2
  2500  0A15  2A39               	goto	l3496
  2501                           
  2502                           ;Multi_RX_testjig_v1.c: 586: print_error("Programming", "Error");
  2503  0A16  301A               	movlw	low ((STR_27+7)| (0+32768))
  2504  0A17  00F8               	movwf	print_error@top
  2505  0A18  3090               	movlw	high ((STR_27+7)| (0+32768))
  2506  0A19  00F9               	movwf	print_error@top+1
  2507  0A1A  302A               	movlw	low ((STR_12+5)| (0+32768))
  2508  0A1B  00FA               	movwf	print_error@bottom
  2509  0A1C  3092               	movlw	high ((STR_12+5)| (0+32768))
  2510  0A1D  00FB               	movwf	print_error@bottom+1
  2511  0A1E  276D  3188         	fcall	_print_error
  2512  0A20  2A39               	goto	l3496
  2513  0A21                     l3492:	
  2514                           
  2515                           ;Multi_RX_testjig_v1.c: 588: else
  2516                           ;Multi_RX_testjig_v1.c: 589: {
  2517                           ;Multi_RX_testjig_v1.c: 590: print_screen("Pickit Programming", " skipped");
  2518  0A21  3013               	movlw	low (STR_27| (0+32768))
  2519  0A22  00F4               	movwf	print_screen@top
  2520  0A23  3090               	movlw	high (STR_27| (0+32768))
  2521  0A24  00F5               	movwf	print_screen@top+1
  2522  0A25  30CA               	movlw	low (STR_34| (0+32768))
  2523  0A26  00F6               	movwf	print_screen@bottom
  2524  0A27  3092               	movlw	high (STR_34| (0+32768))
  2525  0A28  00F7               	movwf	print_screen@bottom+1
  2526  0A29  2757  3188         	fcall	_print_screen
  2527                           
  2528                           ;Multi_RX_testjig_v1.c: 591: _delay((unsigned long)((300)*(16000000/4000.0)));
  2529  0A2B  3007               	movlw	7
  2530  0A2C  0020               	movlb	0	; select bank0
  2531  0A2D  00D1               	movwf	??_main+2
  2532  0A2E  3017               	movlw	23
  2533  0A2F  00D0               	movwf	??_main+1
  2534  0A30  306F               	movlw	111
  2535  0A31  00CF               	movwf	??_main
  2536  0A32                     u4157:	
  2537  0A32  0BCF               	decfsz	??_main,f
  2538  0A33  2A32               	goto	u4157
  2539  0A34  0BD0               	decfsz	??_main+1,f
  2540  0A35  2A32               	goto	u4157
  2541  0A36  0BD1               	decfsz	??_main+2,f
  2542  0A37  2A32               	goto	u4157
  2543  0A38  0000               	nop
  2544  0A39                     l3496:	
  2545                           
  2546                           ;Multi_RX_testjig_v1.c: 592: }
  2547                           ;Multi_RX_testjig_v1.c: 607: _delay((unsigned long)((100)*(16000000/4000.0)));
  2548  0A39  3003               	movlw	3
  2549  0A3A  0020               	movlb	0	; select bank0
  2550  0A3B  00D1               	movwf	??_main+2
  2551  0A3C  3008               	movlw	8
  2552  0A3D  00D0               	movwf	??_main+1
  2553  0A3E  3078               	movlw	120
  2554  0A3F  00CF               	movwf	??_main
  2555  0A40                     u4167:	
  2556  0A40  0BCF               	decfsz	??_main,f
  2557  0A41  2A40               	goto	u4167
  2558  0A42  0BD0               	decfsz	??_main+1,f
  2559  0A43  2A40               	goto	u4167
  2560  0A44  0BD1               	decfsz	??_main+2,f
  2561  0A45  2A40               	goto	u4167
  2562                           
  2563                           ;Multi_RX_testjig_v1.c: 608: print_screen("Establishing", "comms");
  2564  0A46  309C               	movlw	low (STR_35| (0+32768))
  2565  0A47  00F4               	movwf	print_screen@top
  2566  0A48  3091               	movlw	high (STR_35| (0+32768))
  2567  0A49  00F5               	movwf	print_screen@top+1
  2568  0A4A  3035               	movlw	low ((STR_158+5)| (0+32768))
  2569  0A4B  00F6               	movwf	print_screen@bottom
  2570  0A4C  3092               	movlw	high ((STR_158+5)| (0+32768))
  2571  0A4D  00F7               	movwf	print_screen@bottom+1
  2572  0A4E  2757  3188         	fcall	_print_screen
  2573                           
  2574                           ;Multi_RX_testjig_v1.c: 609: unsigned int i;
  2575                           ;Multi_RX_testjig_v1.c: 610: for(i = 0; i < 10; i++)
  2576  0A50  0020               	movlb	0	; select bank0
  2577  0A51  01D2               	clrf	main@i
  2578  0A52  01D3               	clrf	main@i+1
  2579  0A53                     l3500:	
  2580  0A53  3000               	movlw	0
  2581  0A54  0253               	subwf	main@i+1,w
  2582  0A55  300A               	movlw	10
  2583  0A56  1903               	skipnz
  2584  0A57  0252               	subwf	main@i,w
  2585  0A58  1803               	btfsc	3,0
  2586  0A59  2A82               	goto	l3516
  2587                           
  2588                           ;Multi_RX_testjig_v1.c: 611: {
  2589                           ;Multi_RX_testjig_v1.c: 612: TX_one(0x01);
  2590  0A5A  3001               	movlw	1
  2591  0A5B  2715  3188         	fcall	_TX_one
  2592                           
  2593                           ;Multi_RX_testjig_v1.c: 613: if(RX_one() == 0xAA)
  2594  0A5D  2737  3188         	fcall	_RX_one
  2595  0A5F  3AAA               	xorlw	170
  2596  0A60  1903               	btfsc	3,2
  2597  0A61  2A82               	goto	l3516
  2598                           
  2599                           ;Multi_RX_testjig_v1.c: 615: lcd_print_int(i, 11, 0, 0);
  2600  0A62  0020               	movlb	0	; select bank0
  2601  0A63  0853               	movf	main@i+1,w
  2602  0A64  00CA               	movwf	lcd_print_int@number+1
  2603  0A65  0852               	movf	main@i,w
  2604  0A66  00C9               	movwf	lcd_print_int@number
  2605  0A67  300B               	movlw	11
  2606  0A68  00CB               	movwf	lcd_print_int@pos
  2607  0A69  01CC               	clrf	lcd_print_int@pos+1
  2608  0A6A  01CD               	clrf	lcd_print_int@decimal
  2609  0A6B  01CE               	clrf	lcd_print_int@ten_thou_digit
  2610  0A6C  3180  20F7  3188   	fcall	_lcd_print_int
  2611                           
  2612                           ;Multi_RX_testjig_v1.c: 616: _delay((unsigned long)((50)*(16000000/4000.0)));
  2613  0A6F  3002               	movlw	2
  2614  0A70  0020               	movlb	0	; select bank0
  2615  0A71  00D1               	movwf	??_main+2
  2616  0A72  3004               	movlw	4
  2617  0A73  00D0               	movwf	??_main+1
  2618  0A74  30BA               	movlw	186
  2619  0A75  00CF               	movwf	??_main
  2620  0A76                     u4177:	
  2621  0A76  0BCF               	decfsz	??_main,f
  2622  0A77  2A76               	goto	u4177
  2623  0A78  0BD0               	decfsz	??_main+1,f
  2624  0A79  2A76               	goto	u4177
  2625  0A7A  0BD1               	decfsz	??_main+2,f
  2626  0A7B  2A76               	goto	u4177
  2627  0A7C  0000               	nop
  2628  0A7D  0020               	movlb	0	; select bank0
  2629  0A7E  0AD2               	incf	main@i,f
  2630  0A7F  1903               	skipnz
  2631  0A80  0AD3               	incf	main@i+1,f
  2632  0A81  2A53               	goto	l3500
  2633  0A82                     l3516:	
  2634                           
  2635                           ;Multi_RX_testjig_v1.c: 617: }
  2636                           ;Multi_RX_testjig_v1.c: 618: if(i >= 10)
  2637  0A82  3000               	movlw	0
  2638  0A83  0020               	movlb	0	; select bank0
  2639  0A84  0253               	subwf	main@i+1,w
  2640  0A85  300A               	movlw	10
  2641  0A86  1903               	skipnz
  2642  0A87  0252               	subwf	main@i,w
  2643  0A88  1C03               	skipc
  2644  0A89  2A94               	goto	l3520
  2645                           
  2646                           ;Multi_RX_testjig_v1.c: 619: print_error("Comms Error", " 1");
  2647  0A8A  300D               	movlw	low (STR_37| (0+32768))
  2648  0A8B  00F8               	movwf	print_error@top
  2649  0A8C  3092               	movlw	high (STR_37| (0+32768))
  2650  0A8D  00F9               	movwf	print_error@top+1
  2651  0A8E  3088               	movlw	low ((STR_46+6)| (0+32768))
  2652  0A8F  00FA               	movwf	print_error@bottom
  2653  0A90  3092               	movlw	high ((STR_46+6)| (0+32768))
  2654  0A91  00FB               	movwf	print_error@bottom+1
  2655  0A92  276D  3188         	fcall	_print_error
  2656  0A94                     l3520:	
  2657                           
  2658                           ;Multi_RX_testjig_v1.c: 622: unsigned char RX_data = 0;
  2659  0A94  0020               	movlb	0	; select bank0
  2660  0A95  3010               	movlw	16
  2661  0A96  01D4               	clrf	main@RX_data
  2662                           
  2663                           ;Multi_RX_testjig_v1.c: 623: TX_one(0x10);
  2664  0A97  2715  3188         	fcall	_TX_one
  2665                           
  2666                           ;Multi_RX_testjig_v1.c: 624: RX_data = RX_one();
  2667  0A99  2737  3188         	fcall	_RX_one
  2668  0A9B  0020               	movlb	0	; select bank0
  2669  0A9C  00D4               	movwf	main@RX_data
  2670                           
  2671                           ;Multi_RX_testjig_v1.c: 625: if(RX_data == 0xEE)
  2672  0A9D  3AEE               	xorlw	238
  2673  0A9E  1D03               	btfss	3,2
  2674  0A9F  2AA8               	goto	l3530
  2675                           
  2676                           ;Multi_RX_testjig_v1.c: 626: print_error("EEPROM error", " Read/Write");
  2677  0AA0  30A9               	movlw	low (STR_39| (0+32768))
  2678  0AA1  00F8               	movwf	print_error@top
  2679  0AA2  3091               	movlw	high (STR_39| (0+32768))
  2680  0AA3  00F9               	movwf	print_error@top+1
  2681  0AA4  30E9               	movlw	low (STR_40| (0+32768))
  2682  0AA5  00FA               	movwf	print_error@bottom
  2683  0AA6  3091               	movlw	high (STR_40| (0+32768))
  2684  0AA7  2AB3               	goto	L2
  2685  0AA8                     l3530:	
  2686                           
  2687                           ;Multi_RX_testjig_v1.c: 627: else if(RX_data != 0x1A)
  2688  0AA8  301A               	movlw	26
  2689  0AA9  0654               	xorwf	main@RX_data,w
  2690  0AAA  1903               	btfsc	3,2
  2691  0AAB  2AB6               	goto	l344
  2692                           
  2693                           ;Multi_RX_testjig_v1.c: 628: print_error("Comms Error", " 2");
  2694  0AAC  300D               	movlw	low (STR_37| (0+32768))
  2695  0AAD  00F8               	movwf	print_error@top
  2696  0AAE  3092               	movlw	high (STR_37| (0+32768))
  2697  0AAF  00F9               	movwf	print_error@top+1
  2698  0AB0  3091               	movlw	low ((STR_48+6)| (0+32768))
  2699  0AB1  00FA               	movwf	print_error@bottom
  2700  0AB2  3092               	movlw	high ((STR_48+6)| (0+32768))
  2701  0AB3                     L2:	
  2702  0AB3  00FB               	movwf	print_error@bottom+1
  2703  0AB4  276D  3188         	fcall	_print_error
  2704  0AB6                     l344:	
  2705                           
  2706                           ;Multi_RX_testjig_v1.c: 631: print_screen("Test EEPROM ", " size");
  2707  0AB6  305B               	movlw	low (STR_43| (0+32768))
  2708  0AB7  00F4               	movwf	print_screen@top
  2709  0AB8  3091               	movlw	high (STR_43| (0+32768))
  2710  0AB9  00F5               	movwf	print_screen@top+1
  2711  0ABA  30FB               	movlw	low ((STR_45+6)| (0+32768))
  2712  0ABB  00F6               	movwf	print_screen@bottom
  2713  0ABC  3091               	movlw	high ((STR_45+6)| (0+32768))
  2714  0ABD  00F7               	movwf	print_screen@bottom+1
  2715  0ABE  2757  3188         	fcall	_print_screen
  2716                           
  2717                           ;Multi_RX_testjig_v1.c: 632: TX_one(0x20);
  2718  0AC0  3020               	movlw	32
  2719  0AC1  2715  3188         	fcall	_TX_one
  2720                           
  2721                           ;Multi_RX_testjig_v1.c: 633: RX_data = RX_one();
  2722  0AC3  2737  3188         	fcall	_RX_one
  2723  0AC5  0020               	movlb	0	; select bank0
  2724  0AC6  00D4               	movwf	main@RX_data
  2725                           
  2726                           ;Multi_RX_testjig_v1.c: 634: if(RX_data != 0x20)
  2727  0AC7  3A20               	xorlw	32
  2728  0AC8  1903               	btfsc	3,2
  2729  0AC9  2AD4               	goto	l3542
  2730                           
  2731                           ;Multi_RX_testjig_v1.c: 635: print_error("EEPROM size", " Error 1");
  2732  0ACA  30F5               	movlw	low (STR_45| (0+32768))
  2733  0ACB  00F8               	movwf	print_error@top
  2734  0ACC  3091               	movlw	high (STR_45| (0+32768))
  2735  0ACD  00F9               	movwf	print_error@top+1
  2736  0ACE  3082               	movlw	low (STR_46| (0+32768))
  2737  0ACF  00FA               	movwf	print_error@bottom
  2738  0AD0  3092               	movlw	high (STR_46| (0+32768))
  2739  0AD1  00FB               	movwf	print_error@bottom+1
  2740  0AD2  276D  3188         	fcall	_print_error
  2741  0AD4                     l3542:	
  2742                           
  2743                           ;Multi_RX_testjig_v1.c: 636: TX_one(0x21);
  2744  0AD4  3021               	movlw	33
  2745  0AD5  2715  3188         	fcall	_TX_one
  2746                           
  2747                           ;Multi_RX_testjig_v1.c: 637: RX_data = RX_one();
  2748  0AD7  2737  3188         	fcall	_RX_one
  2749  0AD9  0020               	movlb	0	; select bank0
  2750  0ADA  00D4               	movwf	main@RX_data
  2751                           
  2752                           ;Multi_RX_testjig_v1.c: 638: if(RX_data != 0x00)
  2753  0ADB  0854               	movf	main@RX_data,w
  2754  0ADC  1903               	btfsc	3,2
  2755  0ADD  2AE7               	goto	l347
  2756                           
  2757                           ;Multi_RX_testjig_v1.c: 639: print_error("EEPROM size", " Error 2");
  2758  0ADE  30F5               	movlw	low (STR_45| (0+32768))
  2759  0ADF  00F8               	movwf	print_error@top
  2760  0AE0  3091               	movlw	high (STR_45| (0+32768))
  2761  0AE1  00F9               	movwf	print_error@top+1
  2762  0AE2  308B               	movlw	low (STR_48| (0+32768))
  2763  0AE3  00FA               	movwf	print_error@bottom
  2764  0AE4  3092               	movlw	high (STR_48| (0+32768))
  2765  0AE5  00FB               	movwf	print_error@bottom+1
  2766  0AE6  276D               	fcall	_print_error
  2767  0AE7                     l347:	
  2768                           
  2769                           ;Multi_RX_testjig_v1.c: 642: Vout_set(12);
  2770  0AE7  300C               	movlw	12
  2771  0AE8  00F4               	movwf	Vout_set@Volts
  2772  0AE9  01F5               	clrf	Vout_set@Volts+1
  2773  0AEA  3180  20A6  3188   	fcall	_Vout_set
  2774                           
  2775                           ;Multi_RX_testjig_v1.c: 643: print_screen("Test Relay", "");
  2776  0AED  303B               	movlw	low (STR_49| (0+32768))
  2777  0AEE  00F4               	movwf	print_screen@top
  2778  0AEF  3092               	movlw	high (STR_49| (0+32768))
  2779  0AF0  00F5               	movwf	print_screen@top+1
  2780  0AF1  308A               	movlw	low ((STR_155+15)| (0+32768))
  2781  0AF2  00F6               	movwf	print_screen@bottom
  2782  0AF3  3090               	movlw	high ((STR_155+15)| (0+32768))
  2783  0AF4  00F7               	movwf	print_screen@bottom+1
  2784  0AF5  2757  3188         	fcall	_print_screen
  2785                           
  2786                           ;Multi_RX_testjig_v1.c: 644: if(RF5 == 0 && RF2 == 1)
  2787  0AF7  0025               	movlb	5	; select bank5
  2788  0AF8  1E8C               	btfss	12,5	;volatile
  2789  0AF9  1D0C               	btfss	12,2	;volatile
  2790  0AFA  2B5A               	goto	l3580
  2791                           
  2792                           ;Multi_RX_testjig_v1.c: 645: {
  2793                           ;Multi_RX_testjig_v1.c: 646: TX_one(0x30);
  2794  0AFB  3030               	movlw	48
  2795  0AFC  2715  3188         	fcall	_TX_one
  2796                           
  2797                           ;Multi_RX_testjig_v1.c: 647: if(RX_one() == 0x3A)
  2798  0AFE  2737  3188         	fcall	_RX_one
  2799  0B00  3A3A               	xorlw	58
  2800  0B01  1D03               	skipz
  2801  0B02  2B52               	goto	l3578
  2802                           
  2803                           ;Multi_RX_testjig_v1.c: 648: {
  2804                           ;Multi_RX_testjig_v1.c: 649: _delay((unsigned long)((50)*(16000000/4000.0)));
  2805  0B03  3002               	movlw	2
  2806  0B04  0020               	movlb	0	; select bank0
  2807  0B05  00D1               	movwf	??_main+2
  2808  0B06  3004               	movlw	4
  2809  0B07  00D0               	movwf	??_main+1
  2810  0B08  30BA               	movlw	186
  2811  0B09  00CF               	movwf	??_main
  2812  0B0A                     u4187:	
  2813  0B0A  0BCF               	decfsz	??_main,f
  2814  0B0B  2B0A               	goto	u4187
  2815  0B0C  0BD0               	decfsz	??_main+1,f
  2816  0B0D  2B0A               	goto	u4187
  2817  0B0E  0BD1               	decfsz	??_main+2,f
  2818  0B0F  2B0A               	goto	u4187
  2819  0B10  0000               	nop
  2820                           
  2821                           ;Multi_RX_testjig_v1.c: 650: if(RF5 == 1 && RF2 == 0)
  2822  0B11  0025               	movlb	5	; select bank5
  2823  0B12  1A8C               	btfsc	12,5	;volatile
  2824  0B13  190C               	btfsc	12,2	;volatile
  2825  0B14  2B4A               	goto	l3576
  2826                           
  2827                           ;Multi_RX_testjig_v1.c: 651: {
  2828                           ;Multi_RX_testjig_v1.c: 652: TX_one(0x31);
  2829  0B15  3031               	movlw	49
  2830  0B16  2715  3188         	fcall	_TX_one
  2831                           
  2832                           ;Multi_RX_testjig_v1.c: 653: if(RX_one() == 0x3A)
  2833  0B18  2737  3188         	fcall	_RX_one
  2834  0B1A  3A3A               	xorlw	58
  2835  0B1B  1D03               	skipz
  2836  0B1C  2B42               	goto	l3574
  2837                           
  2838                           ;Multi_RX_testjig_v1.c: 654: {
  2839                           ;Multi_RX_testjig_v1.c: 655: _delay((unsigned long)((50)*(16000000/4000.0)));
  2840  0B1D  3002               	movlw	2
  2841  0B1E  0020               	movlb	0	; select bank0
  2842  0B1F  00D1               	movwf	??_main+2
  2843  0B20  3004               	movlw	4
  2844  0B21  00D0               	movwf	??_main+1
  2845  0B22  30BA               	movlw	186
  2846  0B23  00CF               	movwf	??_main
  2847  0B24                     u4197:	
  2848  0B24  0BCF               	decfsz	??_main,f
  2849  0B25  2B24               	goto	u4197
  2850  0B26  0BD0               	decfsz	??_main+1,f
  2851  0B27  2B24               	goto	u4197
  2852  0B28  0BD1               	decfsz	??_main+2,f
  2853  0B29  2B24               	goto	u4197
  2854  0B2A  0000               	nop
  2855                           
  2856                           ;Multi_RX_testjig_v1.c: 656: if(RF5 == 0 && RF2 == 1)
  2857  0B2B  0025               	movlb	5	; select bank5
  2858  0B2C  1E8C               	btfss	12,5	;volatile
  2859  0B2D  1D0C               	btfss	12,2	;volatile
  2860  0B2E  2B3A               	goto	l3572
  2861                           
  2862                           ;Multi_RX_testjig_v1.c: 657: {
  2863                           ;Multi_RX_testjig_v1.c: 658: print_screen("Test Relay", "Pass");
  2864  0B2F  303B               	movlw	low (STR_49| (0+32768))
  2865  0B30  00F4               	movwf	print_screen@top
  2866  0B31  3092               	movlw	high (STR_49| (0+32768))
  2867  0B32  00F5               	movwf	print_screen@top+1
  2868  0B33  30BE               	movlw	low ((STR_159+8)| (0+32768))
  2869  0B34  00F6               	movwf	print_screen@bottom
  2870  0B35  3091               	movlw	high ((STR_159+8)| (0+32768))
  2871  0B36  00F7               	movwf	print_screen@bottom+1
  2872  0B37  2757  3188         	fcall	_print_screen
  2873                           
  2874                           ;Multi_RX_testjig_v1.c: 659: }
  2875  0B39  2B64               	goto	l357
  2876  0B3A                     l3572:	
  2877                           
  2878                           ;Multi_RX_testjig_v1.c: 660: else
  2879                           ;Multi_RX_testjig_v1.c: 661: print_error("Relay de-energized", " Error 2");
  2880  0B3A  3000               	movlw	low (STR_53| (0+32768))
  2881  0B3B  00F8               	movwf	print_error@top
  2882  0B3C  3090               	movlw	high (STR_53| (0+32768))
  2883  0B3D  00F9               	movwf	print_error@top+1
  2884  0B3E  308B               	movlw	low (STR_48| (0+32768))
  2885  0B3F  00FA               	movwf	print_error@bottom
  2886  0B40  3092               	movlw	high (STR_48| (0+32768))
  2887  0B41  2B61               	goto	L3
  2888  0B42                     l3574:	
  2889                           
  2890                           ;Multi_RX_testjig_v1.c: 663: else
  2891                           ;Multi_RX_testjig_v1.c: 664: print_error("Comms Error", " 3");
  2892  0B42  300D               	movlw	low (STR_37| (0+32768))
  2893  0B43  00F8               	movwf	print_error@top
  2894  0B44  3092               	movlw	high (STR_37| (0+32768))
  2895  0B45  00F9               	movwf	print_error@top+1
  2896  0B46  3013               	movlw	low (STR_56| (0+32768))
  2897  0B47  00FA               	movwf	print_error@bottom
  2898  0B48  3093               	movlw	high (STR_56| (0+32768))
  2899  0B49  2B61               	goto	L3
  2900  0B4A                     l3576:	
  2901                           
  2902                           ;Multi_RX_testjig_v1.c: 666: else
  2903                           ;Multi_RX_testjig_v1.c: 667: print_error("Relay energized", " Error");
  2904  0B4A  309B               	movlw	low (STR_57| (0+32768))
  2905  0B4B  00F8               	movwf	print_error@top
  2906  0B4C  3090               	movlw	high (STR_57| (0+32768))
  2907  0B4D  00F9               	movwf	print_error@top+1
  2908  0B4E  3029               	movlw	low ((STR_12+4)| (0+32768))
  2909  0B4F  00FA               	movwf	print_error@bottom
  2910  0B50  3092               	movlw	high ((STR_12+4)| (0+32768))
  2911  0B51  2B61               	goto	L3
  2912  0B52                     l3578:	
  2913                           
  2914                           ;Multi_RX_testjig_v1.c: 669: else
  2915                           ;Multi_RX_testjig_v1.c: 670: print_error("Comms Error", " 4");
  2916  0B52  300D               	movlw	low (STR_37| (0+32768))
  2917  0B53  00F8               	movwf	print_error@top
  2918  0B54  3092               	movlw	high (STR_37| (0+32768))
  2919  0B55  00F9               	movwf	print_error@top+1
  2920  0B56  3016               	movlw	low (STR_60| (0+32768))
  2921  0B57  00FA               	movwf	print_error@bottom
  2922  0B58  3093               	movlw	high (STR_60| (0+32768))
  2923  0B59  2B61               	goto	L3
  2924  0B5A                     l3580:	
  2925                           
  2926                           ;Multi_RX_testjig_v1.c: 672: else
  2927                           ;Multi_RX_testjig_v1.c: 673: print_error("Relay de-energized", " Error 1");
  2928  0B5A  3000               	movlw	low (STR_53| (0+32768))
  2929  0B5B  00F8               	movwf	print_error@top
  2930  0B5C  3090               	movlw	high (STR_53| (0+32768))
  2931  0B5D  00F9               	movwf	print_error@top+1
  2932  0B5E  3082               	movlw	low (STR_46| (0+32768))
  2933  0B5F  00FA               	movwf	print_error@bottom
  2934  0B60  3092               	movlw	high (STR_46| (0+32768))
  2935  0B61                     L3:	
  2936  0B61  00FB               	movwf	print_error@bottom+1
  2937  0B62  276D  3188         	fcall	_print_error
  2938  0B64                     l357:	
  2939                           
  2940                           ;Multi_RX_testjig_v1.c: 676: print_screen("Test CH2", "");
  2941  0B64  3094               	movlw	low (STR_63| (0+32768))
  2942  0B65  00F4               	movwf	print_screen@top
  2943  0B66  3092               	movlw	high (STR_63| (0+32768))
  2944  0B67  00F5               	movwf	print_screen@top+1
  2945  0B68  308A               	movlw	low ((STR_155+15)| (0+32768))
  2946  0B69  00F6               	movwf	print_screen@bottom
  2947  0B6A  3090               	movlw	high ((STR_155+15)| (0+32768))
  2948  0B6B  00F7               	movwf	print_screen@bottom+1
  2949  0B6C  2757  3188         	fcall	_print_screen
  2950                           
  2951                           ;Multi_RX_testjig_v1.c: 677: TX_one(0x41);
  2952  0B6E  3041               	movlw	65
  2953  0B6F  2715  3188         	fcall	_TX_one
  2954                           
  2955                           ;Multi_RX_testjig_v1.c: 678: if(RX_one() == 0x4A)
  2956  0B71  2737  3188         	fcall	_RX_one
  2957  0B73  3A4A               	xorlw	74
  2958  0B74  1D03               	skipz
  2959  0B75  2C6E               	goto	l3664
  2960                           
  2961                           ;Multi_RX_testjig_v1.c: 679: {
  2962                           ;Multi_RX_testjig_v1.c: 680: _delay((unsigned long)((10)*(16000000/4000.0)));
  2963  0B76  3034               	movlw	52
  2964  0B77  0020               	movlb	0	; select bank0
  2965  0B78  00D0               	movwf	??_main+1
  2966  0B79  30F1               	movlw	241
  2967  0B7A  00CF               	movwf	??_main
  2968  0B7B                     u4207:	
  2969  0B7B  0BCF               	decfsz	??_main,f
  2970  0B7C  2B7B               	goto	u4207
  2971  0B7D  0BD0               	decfsz	??_main+1,f
  2972  0B7E  2B7B               	goto	u4207
  2973  0B7F  3200               	nop2
  2974                           
  2975                           ;Multi_RX_testjig_v1.c: 681: if(RF1 == 1 && RF0 == 1)
  2976  0B80  0025               	movlb	5	; select bank5
  2977  0B81  188C               	btfsc	12,1	;volatile
  2978  0B82  1C0C               	btfss	12,0	;volatile
  2979  0B83  2C66               	goto	l3662
  2980                           
  2981                           ;Multi_RX_testjig_v1.c: 682: {
  2982                           ;Multi_RX_testjig_v1.c: 683: TX_one(0x40);
  2983  0B84  3040               	movlw	64
  2984  0B85  2715  3188         	fcall	_TX_one
  2985                           
  2986                           ;Multi_RX_testjig_v1.c: 684: if(RX_one() == 0x4A)
  2987  0B87  2737  3188         	fcall	_RX_one
  2988  0B89  3A4A               	xorlw	74
  2989  0B8A  1D03               	skipz
  2990  0B8B  2C5E               	goto	l3660
  2991                           
  2992                           ;Multi_RX_testjig_v1.c: 685: {
  2993                           ;Multi_RX_testjig_v1.c: 686: _delay((unsigned long)((10)*(16000000/4000.0)));
  2994  0B8C  3034               	movlw	52
  2995  0B8D  0020               	movlb	0	; select bank0
  2996  0B8E  00D0               	movwf	??_main+1
  2997  0B8F  30F1               	movlw	241
  2998  0B90  00CF               	movwf	??_main
  2999  0B91                     u4217:	
  3000  0B91  0BCF               	decfsz	??_main,f
  3001  0B92  2B91               	goto	u4217
  3002  0B93  0BD0               	decfsz	??_main+1,f
  3003  0B94  2B91               	goto	u4217
  3004  0B95  3200               	nop2
  3005                           
  3006                           ;Multi_RX_testjig_v1.c: 687: if(RF1 == 0 && RF0 == 1)
  3007  0B96  0025               	movlb	5	; select bank5
  3008  0B97  1C8C               	btfss	12,1	;volatile
  3009  0B98  1C0C               	btfss	12,0	;volatile
  3010  0B99  2C56               	goto	l3658
  3011                           
  3012                           ;Multi_RX_testjig_v1.c: 688: {
  3013                           ;Multi_RX_testjig_v1.c: 689: TX_one(0x41);
  3014  0B9A  3041               	movlw	65
  3015  0B9B  2715  3188         	fcall	_TX_one
  3016                           
  3017                           ;Multi_RX_testjig_v1.c: 690: if(RX_one() == 0x4A)
  3018  0B9D  2737  3188         	fcall	_RX_one
  3019  0B9F  3A4A               	xorlw	74
  3020  0BA0  1D03               	skipz
  3021  0BA1  2C4E               	goto	l3656
  3022                           
  3023                           ;Multi_RX_testjig_v1.c: 691: {
  3024                           ;Multi_RX_testjig_v1.c: 692: LATB5 = 1;
  3025  0BA2  0022               	movlb	2	; select bank2
  3026  0BA3  168D               	bsf	13,5	;volatile
  3027                           
  3028                           ;Multi_RX_testjig_v1.c: 693: _delay((unsigned long)((50)*(16000000/4000.0)));
  3029  0BA4  3002               	movlw	2
  3030  0BA5  0020               	movlb	0	; select bank0
  3031  0BA6  00D1               	movwf	??_main+2
  3032  0BA7  3004               	movlw	4
  3033  0BA8  00D0               	movwf	??_main+1
  3034  0BA9  30BA               	movlw	186
  3035  0BAA  00CF               	movwf	??_main
  3036  0BAB                     u4227:	
  3037  0BAB  0BCF               	decfsz	??_main,f
  3038  0BAC  2BAB               	goto	u4227
  3039  0BAD  0BD0               	decfsz	??_main+1,f
  3040  0BAE  2BAB               	goto	u4227
  3041  0BAF  0BD1               	decfsz	??_main+2,f
  3042  0BB0  2BAB               	goto	u4227
  3043  0BB1  0000               	nop
  3044                           
  3045                           ;Multi_RX_testjig_v1.c: 694: TX_one(0x40);
  3046  0BB2  3040               	movlw	64
  3047  0BB3  2715  3188         	fcall	_TX_one
  3048                           
  3049                           ;Multi_RX_testjig_v1.c: 695: if(RX_one() == 0x4A)
  3050  0BB5  2737  3188         	fcall	_RX_one
  3051  0BB7  3A4A               	xorlw	74
  3052  0BB8  1D03               	skipz
  3053  0BB9  2C46               	goto	l3654
  3054                           
  3055                           ;Multi_RX_testjig_v1.c: 696: {
  3056                           ;Multi_RX_testjig_v1.c: 697: _delay((unsigned long)((50)*(16000000/4000.0)));
  3057  0BBA  3002               	movlw	2
  3058  0BBB  0020               	movlb	0	; select bank0
  3059  0BBC  00D1               	movwf	??_main+2
  3060  0BBD  3004               	movlw	4
  3061  0BBE  00D0               	movwf	??_main+1
  3062  0BBF  30BA               	movlw	186
  3063  0BC0  00CF               	movwf	??_main
  3064  0BC1                     u4237:	
  3065  0BC1  0BCF               	decfsz	??_main,f
  3066  0BC2  2BC1               	goto	u4237
  3067  0BC3  0BD0               	decfsz	??_main+1,f
  3068  0BC4  2BC1               	goto	u4237
  3069  0BC5  0BD1               	decfsz	??_main+2,f
  3070  0BC6  2BC1               	goto	u4237
  3071  0BC7  0000               	nop
  3072                           
  3073                           ;Multi_RX_testjig_v1.c: 698: tj_timer = 1000;
  3074  0BC8  30E8               	movlw	232
  3075  0BC9  0020               	movlb	0	; select bank0
  3076  0BCA  00E3               	movwf	_tj_timer
  3077  0BCB  3003               	movlw	3
  3078  0BCC  00E4               	movwf	_tj_timer+1
  3079  0BCD  2BD1               	goto	l3612
  3080  0BCE                     l3614:	
  3081  0BCE  0025               	movlb	5	; select bank5
  3082  0BCF  188C               	btfsc	12,1	;volatile
  3083  0BD0  2BD6               	goto	l368
  3084  0BD1                     l3612:	
  3085                           ;Multi_RX_testjig_v1.c: 699: while(tj_timer && RF1 == 0);
  3086                           
  3087  0BD1  0020               	movlb	0	; select bank0
  3088  0BD2  0863               	movf	_tj_timer,w
  3089  0BD3  0464               	iorwf	_tj_timer+1,w
  3090  0BD4  1D03               	btfss	3,2
  3091  0BD5  2BCE               	goto	l3614
  3092  0BD6                     l368:	
  3093                           
  3094                           ;Multi_RX_testjig_v1.c: 700: if(RF1 == 1 && RF0 == 1)
  3095  0BD6  0025               	movlb	5	; select bank5
  3096  0BD7  188C               	btfsc	12,1	;volatile
  3097  0BD8  1C0C               	btfss	12,0	;volatile
  3098  0BD9  2C3B               	goto	l3650
  3099                           
  3100                           ;Multi_RX_testjig_v1.c: 701: {
  3101                           ;Multi_RX_testjig_v1.c: 702: LATB5 = 0;
  3102  0BDA  0022               	movlb	2	; select bank2
  3103  0BDB  128D               	bcf	13,5	;volatile
  3104                           
  3105                           ;Multi_RX_testjig_v1.c: 703: TX_one(0x41);
  3106  0BDC  3041               	movlw	65
  3107  0BDD  2715  3188         	fcall	_TX_one
  3108                           
  3109                           ;Multi_RX_testjig_v1.c: 704: RX_one();
  3110  0BDF  2737  3188         	fcall	_RX_one
  3111                           
  3112                           ;Multi_RX_testjig_v1.c: 705: _delay((unsigned long)((150)*(16000000/4000.0)));
  3113  0BE1  3004               	movlw	4
  3114  0BE2  0020               	movlb	0	; select bank0
  3115  0BE3  00D1               	movwf	??_main+2
  3116  0BE4  300C               	movlw	12
  3117  0BE5  00D0               	movwf	??_main+1
  3118  0BE6  3035               	movlw	53
  3119  0BE7  00CF               	movwf	??_main
  3120  0BE8                     u4247:	
  3121  0BE8  0BCF               	decfsz	??_main,f
  3122  0BE9  2BE8               	goto	u4247
  3123  0BEA  0BD0               	decfsz	??_main+1,f
  3124  0BEB  2BE8               	goto	u4247
  3125  0BEC  0BD1               	decfsz	??_main+2,f
  3126  0BED  2BE8               	goto	u4247
  3127  0BEE  3200               	nop2
  3128                           
  3129                           ;Multi_RX_testjig_v1.c: 706: TX_one(0x40);
  3130  0BEF  3040               	movlw	64
  3131  0BF0  2715  3188         	fcall	_TX_one
  3132                           
  3133                           ;Multi_RX_testjig_v1.c: 707: RX_one();
  3134  0BF2  2737  3188         	fcall	_RX_one
  3135                           
  3136                           ;Multi_RX_testjig_v1.c: 708: _delay((unsigned long)((20)*(16000000/4000.0)));
  3137  0BF4  3068               	movlw	104
  3138  0BF5  0020               	movlb	0	; select bank0
  3139  0BF6  00D0               	movwf	??_main+1
  3140  0BF7  30E4               	movlw	228
  3141  0BF8  00CF               	movwf	??_main
  3142  0BF9                     u4257:	
  3143  0BF9  0BCF               	decfsz	??_main,f
  3144  0BFA  2BF9               	goto	u4257
  3145  0BFB  0BD0               	decfsz	??_main+1,f
  3146  0BFC  2BF9               	goto	u4257
  3147  0BFD  0000               	nop
  3148                           
  3149                           ;Multi_RX_testjig_v1.c: 709: if(RF1 == 0 && RF0 == 1)
  3150  0BFE  0025               	movlb	5	; select bank5
  3151  0BFF  1C8C               	btfss	12,1	;volatile
  3152  0C00  1C0C               	btfss	12,0	;volatile
  3153  0C01  2C33               	goto	l3648
  3154                           
  3155                           ;Multi_RX_testjig_v1.c: 710: {
  3156                           ;Multi_RX_testjig_v1.c: 711: TX_one(0x41);
  3157  0C02  3041               	movlw	65
  3158  0C03  2715  3188         	fcall	_TX_one
  3159                           
  3160                           ;Multi_RX_testjig_v1.c: 712: if(RX_one() == 0x4A)
  3161  0C05  2737  3188         	fcall	_RX_one
  3162  0C07  3A4A               	xorlw	74
  3163  0C08  1D03               	skipz
  3164  0C09  2C2B               	goto	l3646
  3165                           
  3166                           ;Multi_RX_testjig_v1.c: 713: {
  3167                           ;Multi_RX_testjig_v1.c: 714: _delay((unsigned long)((10)*(16000000/4000.0)));
  3168  0C0A  3034               	movlw	52
  3169  0C0B  0020               	movlb	0	; select bank0
  3170  0C0C  00D0               	movwf	??_main+1
  3171  0C0D  30F1               	movlw	241
  3172  0C0E  00CF               	movwf	??_main
  3173  0C0F                     u4267:	
  3174  0C0F  0BCF               	decfsz	??_main,f
  3175  0C10  2C0F               	goto	u4267
  3176  0C11  0BD0               	decfsz	??_main+1,f
  3177  0C12  2C0F               	goto	u4267
  3178  0C13  3200               	nop2
  3179                           
  3180                           ;Multi_RX_testjig_v1.c: 715: if(RF1 == 1 && RF0 == 1)
  3181  0C14  0025               	movlb	5	; select bank5
  3182  0C15  188C               	btfsc	12,1	;volatile
  3183  0C16  1C0C               	btfss	12,0	;volatile
  3184  0C17  2C23               	goto	l3644
  3185                           
  3186                           ;Multi_RX_testjig_v1.c: 716: {
  3187                           ;Multi_RX_testjig_v1.c: 717: print_screen("Test CH2", "ok");
  3188  0C18  3094               	movlw	low (STR_63| (0+32768))
  3189  0C19  00F4               	movwf	print_screen@top
  3190  0C1A  3092               	movlw	high (STR_63| (0+32768))
  3191  0C1B  00F5               	movwf	print_screen@top+1
  3192  0C1C  3028               	movlw	low (STR_66| (0+32768))
  3193  0C1D  00F6               	movwf	print_screen@bottom
  3194  0C1E  3093               	movlw	high (STR_66| (0+32768))
  3195  0C1F  00F7               	movwf	print_screen@bottom+1
  3196  0C20  2757  3188         	fcall	_print_screen
  3197                           
  3198                           ;Multi_RX_testjig_v1.c: 718: }
  3199  0C22  2C78               	goto	l382
  3200  0C23                     l3644:	
  3201                           
  3202                           ;Multi_RX_testjig_v1.c: 719: else
  3203                           ;Multi_RX_testjig_v1.c: 720: print_error("CH2 - OFF", " Error 2");
  3204  0C23  305A               	movlw	low (STR_67| (0+32768))
  3205  0C24  00F8               	movwf	print_error@top
  3206  0C25  3092               	movlw	high (STR_67| (0+32768))
  3207  0C26  00F9               	movwf	print_error@top+1
  3208  0C27  308B               	movlw	low (STR_48| (0+32768))
  3209  0C28  00FA               	movwf	print_error@bottom
  3210  0C29  3092               	movlw	high (STR_48| (0+32768))
  3211  0C2A  2C75               	goto	L4
  3212  0C2B                     l3646:	
  3213                           
  3214                           ;Multi_RX_testjig_v1.c: 722: else
  3215                           ;Multi_RX_testjig_v1.c: 723: print_error("Comms Error", " 5");
  3216  0C2B  300D               	movlw	low (STR_37| (0+32768))
  3217  0C2C  00F8               	movwf	print_error@top
  3218  0C2D  3092               	movlw	high (STR_37| (0+32768))
  3219  0C2E  00F9               	movwf	print_error@top+1
  3220  0C2F  3019               	movlw	low (STR_70| (0+32768))
  3221  0C30  00FA               	movwf	print_error@bottom
  3222  0C31  3093               	movlw	high (STR_70| (0+32768))
  3223  0C32  2C75               	goto	L4
  3224  0C33                     l3648:	
  3225                           
  3226                           ;Multi_RX_testjig_v1.c: 725: else
  3227                           ;Multi_RX_testjig_v1.c: 726: print_error("CH2 - ON", "PTC Error reset");
  3228  0C33  30AF               	movlw	low (STR_71| (0+32768))
  3229  0C34  00F8               	movwf	print_error@top
  3230  0C35  3092               	movlw	high (STR_71| (0+32768))
  3231  0C36  00F9               	movwf	print_error@top+1
  3232  0C37  30BB               	movlw	low (STR_72| (0+32768))
  3233  0C38  00FA               	movwf	print_error@bottom
  3234  0C39  3090               	movlw	high (STR_72| (0+32768))
  3235  0C3A  2C75               	goto	L4
  3236  0C3B                     l3650:	
  3237                           
  3238                           ;Multi_RX_testjig_v1.c: 728: else
  3239                           ;Multi_RX_testjig_v1.c: 729: {
  3240                           ;Multi_RX_testjig_v1.c: 730: trip_current = get_30v_current();
  3241  0C3B  3183  2317  3188   	fcall	_get_30v_current
  3242                           
  3243                           ;Multi_RX_testjig_v1.c: 731: print_error("CH2 - ON", "PTC Error trip");
  3244  0C3E  30AF               	movlw	low (STR_71| (0+32768))
  3245  0C3F  00F8               	movwf	print_error@top
  3246  0C40  3092               	movlw	high (STR_71| (0+32768))
  3247  0C41  00F9               	movwf	print_error@top+1
  3248  0C42  30E9               	movlw	low (STR_74| (0+32768))
  3249  0C43  00FA               	movwf	print_error@bottom
  3250  0C44  3090               	movlw	high (STR_74| (0+32768))
  3251  0C45  2C75               	goto	L4
  3252  0C46                     l3654:	
  3253                           
  3254                           ;Multi_RX_testjig_v1.c: 734: else
  3255                           ;Multi_RX_testjig_v1.c: 735: print_error("Comms Error", " 6a");
  3256  0C46  300D               	movlw	low (STR_37| (0+32768))
  3257  0C47  00F8               	movwf	print_error@top
  3258  0C48  3092               	movlw	high (STR_37| (0+32768))
  3259  0C49  00F9               	movwf	print_error@top+1
  3260  0C4A  3003               	movlw	low (STR_76| (0+32768))
  3261  0C4B  00FA               	movwf	print_error@bottom
  3262  0C4C  3093               	movlw	high (STR_76| (0+32768))
  3263  0C4D  2C75               	goto	L4
  3264  0C4E                     l3656:	
  3265                           
  3266                           ;Multi_RX_testjig_v1.c: 737: else
  3267                           ;Multi_RX_testjig_v1.c: 738: print_error("Comms Error", " 6b");
  3268  0C4E  300D               	movlw	low (STR_37| (0+32768))
  3269  0C4F  00F8               	movwf	print_error@top
  3270  0C50  3092               	movlw	high (STR_37| (0+32768))
  3271  0C51  00F9               	movwf	print_error@top+1
  3272  0C52  300B               	movlw	low (STR_78| (0+32768))
  3273  0C53  00FA               	movwf	print_error@bottom
  3274  0C54  3093               	movlw	high (STR_78| (0+32768))
  3275  0C55  2C75               	goto	L4
  3276  0C56                     l3658:	
  3277                           
  3278                           ;Multi_RX_testjig_v1.c: 740: else
  3279                           ;Multi_RX_testjig_v1.c: 741: print_error("CH2 - ON", " Error");
  3280  0C56  30AF               	movlw	low (STR_71| (0+32768))
  3281  0C57  00F8               	movwf	print_error@top
  3282  0C58  3092               	movlw	high (STR_71| (0+32768))
  3283  0C59  00F9               	movwf	print_error@top+1
  3284  0C5A  3029               	movlw	low ((STR_12+4)| (0+32768))
  3285  0C5B  00FA               	movwf	print_error@bottom
  3286  0C5C  3092               	movlw	high ((STR_12+4)| (0+32768))
  3287  0C5D  2C75               	goto	L4
  3288  0C5E                     l3660:	
  3289                           
  3290                           ;Multi_RX_testjig_v1.c: 743: else
  3291                           ;Multi_RX_testjig_v1.c: 744: print_error("Comms Error", " 6");
  3292  0C5E  300D               	movlw	low (STR_37| (0+32768))
  3293  0C5F  00F8               	movwf	print_error@top
  3294  0C60  3092               	movlw	high (STR_37| (0+32768))
  3295  0C61  00F9               	movwf	print_error@top+1
  3296  0C62  301C               	movlw	low (STR_82| (0+32768))
  3297  0C63  00FA               	movwf	print_error@bottom
  3298  0C64  3093               	movlw	high (STR_82| (0+32768))
  3299  0C65  2C75               	goto	L4
  3300  0C66                     l3662:	
  3301                           
  3302                           ;Multi_RX_testjig_v1.c: 746: else
  3303                           ;Multi_RX_testjig_v1.c: 747: print_error("CH2 - OFF", " Error 1");
  3304  0C66  305A               	movlw	low (STR_67| (0+32768))
  3305  0C67  00F8               	movwf	print_error@top
  3306  0C68  3092               	movlw	high (STR_67| (0+32768))
  3307  0C69  00F9               	movwf	print_error@top+1
  3308  0C6A  3082               	movlw	low (STR_46| (0+32768))
  3309  0C6B  00FA               	movwf	print_error@bottom
  3310  0C6C  3092               	movlw	high (STR_46| (0+32768))
  3311  0C6D  2C75               	goto	L4
  3312  0C6E                     l3664:	
  3313                           
  3314                           ;Multi_RX_testjig_v1.c: 749: else
  3315                           ;Multi_RX_testjig_v1.c: 750: print_error("Comms Error", " 7");
  3316  0C6E  300D               	movlw	low (STR_37| (0+32768))
  3317  0C6F  00F8               	movwf	print_error@top
  3318  0C70  3092               	movlw	high (STR_37| (0+32768))
  3319  0C71  00F9               	movwf	print_error@top+1
  3320  0C72  301F               	movlw	low (STR_86| (0+32768))
  3321  0C73  00FA               	movwf	print_error@bottom
  3322  0C74  3093               	movlw	high (STR_86| (0+32768))
  3323  0C75                     L4:	
  3324  0C75  00FB               	movwf	print_error@bottom+1
  3325  0C76  276D  3188         	fcall	_print_error
  3326  0C78                     l382:	
  3327                           
  3328                           ;Multi_RX_testjig_v1.c: 754: print_screen("Test CH3", "");
  3329  0C78  309D               	movlw	low (STR_87| (0+32768))
  3330  0C79  00F4               	movwf	print_screen@top
  3331  0C7A  3092               	movlw	high (STR_87| (0+32768))
  3332  0C7B  00F5               	movwf	print_screen@top+1
  3333  0C7C  308A               	movlw	low ((STR_155+15)| (0+32768))
  3334  0C7D  00F6               	movwf	print_screen@bottom
  3335  0C7E  3090               	movlw	high ((STR_155+15)| (0+32768))
  3336  0C7F  00F7               	movwf	print_screen@bottom+1
  3337  0C80  2757  3188         	fcall	_print_screen
  3338                           
  3339                           ;Multi_RX_testjig_v1.c: 755: TX_one(0x51);
  3340  0C82  3051               	movlw	81
  3341  0C83  2715  3188         	fcall	_TX_one
  3342                           
  3343                           ;Multi_RX_testjig_v1.c: 756: if(RX_one() == 0x5A)
  3344  0C85  2737  3188         	fcall	_RX_one
  3345  0C87  3A5A               	xorlw	90
  3346  0C88  1D03               	skipz
  3347  0C89  2D7F               	goto	l3746
  3348                           
  3349                           ;Multi_RX_testjig_v1.c: 757: {
  3350                           ;Multi_RX_testjig_v1.c: 758: _delay((unsigned long)((10)*(16000000/4000.0)));
  3351  0C8A  3034               	movlw	52
  3352  0C8B  0020               	movlb	0	; select bank0
  3353  0C8C  00D0               	movwf	??_main+1
  3354  0C8D  30F1               	movlw	241
  3355  0C8E  00CF               	movwf	??_main
  3356  0C8F                     u4277:	
  3357  0C8F  0BCF               	decfsz	??_main,f
  3358  0C90  2C8F               	goto	u4277
  3359  0C91  0BD0               	decfsz	??_main+1,f
  3360  0C92  2C8F               	goto	u4277
  3361  0C93  3200               	nop2
  3362                           
  3363                           ;Multi_RX_testjig_v1.c: 759: if(RF1 == 1 && RF0 == 1)
  3364  0C94  0025               	movlb	5	; select bank5
  3365  0C95  188C               	btfsc	12,1	;volatile
  3366  0C96  1C0C               	btfss	12,0	;volatile
  3367  0C97  2D77               	goto	l3744
  3368                           
  3369                           ;Multi_RX_testjig_v1.c: 760: {
  3370                           ;Multi_RX_testjig_v1.c: 761: TX_one(0x50);
  3371  0C98  3050               	movlw	80
  3372  0C99  2715  3188         	fcall	_TX_one
  3373                           
  3374                           ;Multi_RX_testjig_v1.c: 762: if(RX_one() == 0x5A)
  3375  0C9B  2737  3188         	fcall	_RX_one
  3376  0C9D  3A5A               	xorlw	90
  3377  0C9E  1D03               	skipz
  3378  0C9F  2D6F               	goto	l3742
  3379                           
  3380                           ;Multi_RX_testjig_v1.c: 763: {
  3381                           ;Multi_RX_testjig_v1.c: 764: _delay((unsigned long)((10)*(16000000/4000.0)));
  3382  0CA0  3034               	movlw	52
  3383  0CA1  0020               	movlb	0	; select bank0
  3384  0CA2  00D0               	movwf	??_main+1
  3385  0CA3  30F1               	movlw	241
  3386  0CA4  00CF               	movwf	??_main
  3387  0CA5                     u4287:	
  3388  0CA5  0BCF               	decfsz	??_main,f
  3389  0CA6  2CA5               	goto	u4287
  3390  0CA7  0BD0               	decfsz	??_main+1,f
  3391  0CA8  2CA5               	goto	u4287
  3392  0CA9  3200               	nop2
  3393                           
  3394                           ;Multi_RX_testjig_v1.c: 765: if(RF1 == 1 && RF0 == 0)
  3395  0CAA  0025               	movlb	5	; select bank5
  3396  0CAB  188C               	btfsc	12,1	;volatile
  3397  0CAC  180C               	btfsc	12,0	;volatile
  3398  0CAD  2D67               	goto	l3740
  3399                           
  3400                           ;Multi_RX_testjig_v1.c: 766: {
  3401                           ;Multi_RX_testjig_v1.c: 767: TX_one(0x51);
  3402  0CAE  3051               	movlw	81
  3403  0CAF  2715  3188         	fcall	_TX_one
  3404                           
  3405                           ;Multi_RX_testjig_v1.c: 768: if(RX_one() == 0x5A)
  3406  0CB1  2737  3188         	fcall	_RX_one
  3407  0CB3  3A5A               	xorlw	90
  3408  0CB4  1D03               	skipz
  3409  0CB5  2D5F               	goto	l3738
  3410                           
  3411                           ;Multi_RX_testjig_v1.c: 769: {
  3412                           ;Multi_RX_testjig_v1.c: 770: LATA6 = 1;
  3413  0CB6  0022               	movlb	2	; select bank2
  3414  0CB7  170C               	bsf	12,6	;volatile
  3415                           
  3416                           ;Multi_RX_testjig_v1.c: 771: _delay((unsigned long)((50)*(16000000/4000.0)));
  3417  0CB8  3002               	movlw	2
  3418  0CB9  0020               	movlb	0	; select bank0
  3419  0CBA  00D1               	movwf	??_main+2
  3420  0CBB  3004               	movlw	4
  3421  0CBC  00D0               	movwf	??_main+1
  3422  0CBD  30BA               	movlw	186
  3423  0CBE  00CF               	movwf	??_main
  3424  0CBF                     u4297:	
  3425  0CBF  0BCF               	decfsz	??_main,f
  3426  0CC0  2CBF               	goto	u4297
  3427  0CC1  0BD0               	decfsz	??_main+1,f
  3428  0CC2  2CBF               	goto	u4297
  3429  0CC3  0BD1               	decfsz	??_main+2,f
  3430  0CC4  2CBF               	goto	u4297
  3431  0CC5  0000               	nop
  3432                           
  3433                           ;Multi_RX_testjig_v1.c: 772: TX_one(0x50);
  3434  0CC6  3050               	movlw	80
  3435  0CC7  2715  3188         	fcall	_TX_one
  3436                           
  3437                           ;Multi_RX_testjig_v1.c: 773: if(RX_one() == 0x5A)
  3438  0CC9  2737  3188         	fcall	_RX_one
  3439  0CCB  3A5A               	xorlw	90
  3440  0CCC  1D03               	skipz
  3441  0CCD  2D57               	goto	l3736
  3442                           
  3443                           ;Multi_RX_testjig_v1.c: 774: {
  3444                           ;Multi_RX_testjig_v1.c: 775: _delay((unsigned long)((50)*(16000000/4000.0)));
  3445  0CCE  3002               	movlw	2
  3446  0CCF  0020               	movlb	0	; select bank0
  3447  0CD0  00D1               	movwf	??_main+2
  3448  0CD1  3004               	movlw	4
  3449  0CD2  00D0               	movwf	??_main+1
  3450  0CD3  30BA               	movlw	186
  3451  0CD4  00CF               	movwf	??_main
  3452  0CD5                     u4307:	
  3453  0CD5  0BCF               	decfsz	??_main,f
  3454  0CD6  2CD5               	goto	u4307
  3455  0CD7  0BD0               	decfsz	??_main+1,f
  3456  0CD8  2CD5               	goto	u4307
  3457  0CD9  0BD1               	decfsz	??_main+2,f
  3458  0CDA  2CD5               	goto	u4307
  3459  0CDB  0000               	nop
  3460                           
  3461                           ;Multi_RX_testjig_v1.c: 776: tj_timer = 1000;
  3462  0CDC  30E8               	movlw	232
  3463  0CDD  0020               	movlb	0	; select bank0
  3464  0CDE  00E3               	movwf	_tj_timer
  3465  0CDF  3003               	movlw	3
  3466  0CE0  00E4               	movwf	_tj_timer+1
  3467  0CE1  2CE5               	goto	l3696
  3468  0CE2                     l3698:	
  3469  0CE2  0025               	movlb	5	; select bank5
  3470  0CE3  180C               	btfsc	12,0	;volatile
  3471  0CE4  2CEA               	goto	l393
  3472  0CE5                     l3696:	
  3473                           ;Multi_RX_testjig_v1.c: 777: while(tj_timer && RF0 == 0);
  3474                           
  3475  0CE5  0020               	movlb	0	; select bank0
  3476  0CE6  0863               	movf	_tj_timer,w
  3477  0CE7  0464               	iorwf	_tj_timer+1,w
  3478  0CE8  1D03               	btfss	3,2
  3479  0CE9  2CE2               	goto	l3698
  3480  0CEA                     l393:	
  3481                           
  3482                           ;Multi_RX_testjig_v1.c: 778: if(RF1 == 1 && RF0 == 1)
  3483  0CEA  0025               	movlb	5	; select bank5
  3484  0CEB  188C               	btfsc	12,1	;volatile
  3485  0CEC  1C0C               	btfss	12,0	;volatile
  3486  0CED  2D4F               	goto	l3734
  3487                           
  3488                           ;Multi_RX_testjig_v1.c: 779: {
  3489                           ;Multi_RX_testjig_v1.c: 780: LATA6 = 0;
  3490  0CEE  0022               	movlb	2	; select bank2
  3491  0CEF  130C               	bcf	12,6	;volatile
  3492                           
  3493                           ;Multi_RX_testjig_v1.c: 781: TX_one(0x51);
  3494  0CF0  3051               	movlw	81
  3495  0CF1  2715  3188         	fcall	_TX_one
  3496                           
  3497                           ;Multi_RX_testjig_v1.c: 782: RX_one();
  3498  0CF3  2737  3188         	fcall	_RX_one
  3499                           
  3500                           ;Multi_RX_testjig_v1.c: 783: _delay((unsigned long)((150)*(16000000/4000.0)));
  3501  0CF5  3004               	movlw	4
  3502  0CF6  0020               	movlb	0	; select bank0
  3503  0CF7  00D1               	movwf	??_main+2
  3504  0CF8  300C               	movlw	12
  3505  0CF9  00D0               	movwf	??_main+1
  3506  0CFA  3035               	movlw	53
  3507  0CFB  00CF               	movwf	??_main
  3508  0CFC                     u4317:	
  3509  0CFC  0BCF               	decfsz	??_main,f
  3510  0CFD  2CFC               	goto	u4317
  3511  0CFE  0BD0               	decfsz	??_main+1,f
  3512  0CFF  2CFC               	goto	u4317
  3513  0D00  0BD1               	decfsz	??_main+2,f
  3514  0D01  2CFC               	goto	u4317
  3515  0D02  3200               	nop2
  3516                           
  3517                           ;Multi_RX_testjig_v1.c: 784: TX_one(0x50);
  3518  0D03  3050               	movlw	80
  3519  0D04  2715  3188         	fcall	_TX_one
  3520                           
  3521                           ;Multi_RX_testjig_v1.c: 785: RX_one();
  3522  0D06  2737  3188         	fcall	_RX_one
  3523                           
  3524                           ;Multi_RX_testjig_v1.c: 786: _delay((unsigned long)((20)*(16000000/4000.0)));
  3525  0D08  3068               	movlw	104
  3526  0D09  0020               	movlb	0	; select bank0
  3527  0D0A  00D0               	movwf	??_main+1
  3528  0D0B  30E4               	movlw	228
  3529  0D0C  00CF               	movwf	??_main
  3530  0D0D                     u4327:	
  3531  0D0D  0BCF               	decfsz	??_main,f
  3532  0D0E  2D0D               	goto	u4327
  3533  0D0F  0BD0               	decfsz	??_main+1,f
  3534  0D10  2D0D               	goto	u4327
  3535  0D11  0000               	nop
  3536                           
  3537                           ;Multi_RX_testjig_v1.c: 787: if(RF1 == 1 && RF0 == 0)
  3538  0D12  0025               	movlb	5	; select bank5
  3539  0D13  188C               	btfsc	12,1	;volatile
  3540  0D14  180C               	btfsc	12,0	;volatile
  3541  0D15  2D47               	goto	l3732
  3542                           
  3543                           ;Multi_RX_testjig_v1.c: 788: {
  3544                           ;Multi_RX_testjig_v1.c: 789: TX_one(0x51);
  3545  0D16  3051               	movlw	81
  3546  0D17  2715  3188         	fcall	_TX_one
  3547                           
  3548                           ;Multi_RX_testjig_v1.c: 790: if(RX_one() == 0x5A)
  3549  0D19  2737  3188         	fcall	_RX_one
  3550  0D1B  3A5A               	xorlw	90
  3551  0D1C  1D03               	skipz
  3552  0D1D  2D3F               	goto	l3730
  3553                           
  3554                           ;Multi_RX_testjig_v1.c: 791: {
  3555                           ;Multi_RX_testjig_v1.c: 792: _delay((unsigned long)((10)*(16000000/4000.0)));
  3556  0D1E  3034               	movlw	52
  3557  0D1F  0020               	movlb	0	; select bank0
  3558  0D20  00D0               	movwf	??_main+1
  3559  0D21  30F1               	movlw	241
  3560  0D22  00CF               	movwf	??_main
  3561  0D23                     u4337:	
  3562  0D23  0BCF               	decfsz	??_main,f
  3563  0D24  2D23               	goto	u4337
  3564  0D25  0BD0               	decfsz	??_main+1,f
  3565  0D26  2D23               	goto	u4337
  3566  0D27  3200               	nop2
  3567                           
  3568                           ;Multi_RX_testjig_v1.c: 793: if(RF1 == 1 && RF0 == 1)
  3569  0D28  0025               	movlb	5	; select bank5
  3570  0D29  188C               	btfsc	12,1	;volatile
  3571  0D2A  1C0C               	btfss	12,0	;volatile
  3572  0D2B  2D37               	goto	l3728
  3573                           
  3574                           ;Multi_RX_testjig_v1.c: 794: {
  3575                           ;Multi_RX_testjig_v1.c: 795: print_screen("Test CH3", "ok");
  3576  0D2C  309D               	movlw	low (STR_87| (0+32768))
  3577  0D2D  00F4               	movwf	print_screen@top
  3578  0D2E  3092               	movlw	high (STR_87| (0+32768))
  3579  0D2F  00F5               	movwf	print_screen@top+1
  3580  0D30  3028               	movlw	low (STR_66| (0+32768))
  3581  0D31  00F6               	movwf	print_screen@bottom
  3582  0D32  3093               	movlw	high (STR_66| (0+32768))
  3583  0D33  00F7               	movwf	print_screen@bottom+1
  3584  0D34  2757  3188         	fcall	_print_screen
  3585                           
  3586                           ;Multi_RX_testjig_v1.c: 796: }
  3587  0D36  2D89               	goto	l407
  3588  0D37                     l3728:	
  3589                           
  3590                           ;Multi_RX_testjig_v1.c: 797: else
  3591                           ;Multi_RX_testjig_v1.c: 798: print_error("CH3 - OFF", " Error 2");
  3592  0D37  3064               	movlw	low (STR_91| (0+32768))
  3593  0D38  00F8               	movwf	print_error@top
  3594  0D39  3092               	movlw	high (STR_91| (0+32768))
  3595  0D3A  00F9               	movwf	print_error@top+1
  3596  0D3B  308B               	movlw	low (STR_48| (0+32768))
  3597  0D3C  00FA               	movwf	print_error@bottom
  3598  0D3D  3092               	movlw	high (STR_48| (0+32768))
  3599  0D3E  2D86               	goto	L5
  3600  0D3F                     l3730:	
  3601                           
  3602                           ;Multi_RX_testjig_v1.c: 800: else
  3603                           ;Multi_RX_testjig_v1.c: 801: print_error("Comms Error", " 8");
  3604  0D3F  300D               	movlw	low (STR_37| (0+32768))
  3605  0D40  00F8               	movwf	print_error@top
  3606  0D41  3092               	movlw	high (STR_37| (0+32768))
  3607  0D42  00F9               	movwf	print_error@top+1
  3608  0D43  3022               	movlw	low (STR_94| (0+32768))
  3609  0D44  00FA               	movwf	print_error@bottom
  3610  0D45  3093               	movlw	high (STR_94| (0+32768))
  3611  0D46  2D86               	goto	L5
  3612  0D47                     l3732:	
  3613                           
  3614                           ;Multi_RX_testjig_v1.c: 803: else
  3615                           ;Multi_RX_testjig_v1.c: 804: print_error("CH3 - ON", "PTC Error reset");
  3616  0D47  30B8               	movlw	low (STR_95| (0+32768))
  3617  0D48  00F8               	movwf	print_error@top
  3618  0D49  3092               	movlw	high (STR_95| (0+32768))
  3619  0D4A  00F9               	movwf	print_error@top+1
  3620  0D4B  30BB               	movlw	low (STR_72| (0+32768))
  3621  0D4C  00FA               	movwf	print_error@bottom
  3622  0D4D  3090               	movlw	high (STR_72| (0+32768))
  3623  0D4E  2D86               	goto	L5
  3624  0D4F                     l3734:	
  3625                           
  3626                           ;Multi_RX_testjig_v1.c: 806: else
  3627                           ;Multi_RX_testjig_v1.c: 807: print_error("CH3 - ON", "PTC Error trip");
  3628  0D4F  30B8               	movlw	low (STR_95| (0+32768))
  3629  0D50  00F8               	movwf	print_error@top
  3630  0D51  3092               	movlw	high (STR_95| (0+32768))
  3631  0D52  00F9               	movwf	print_error@top+1
  3632  0D53  30E9               	movlw	low (STR_74| (0+32768))
  3633  0D54  00FA               	movwf	print_error@bottom
  3634  0D55  3090               	movlw	high (STR_74| (0+32768))
  3635  0D56  2D86               	goto	L5
  3636  0D57                     l3736:	
  3637                           
  3638                           ;Multi_RX_testjig_v1.c: 809: else
  3639                           ;Multi_RX_testjig_v1.c: 810: print_error("Comms Error", " 8b");
  3640  0D57  300D               	movlw	low (STR_37| (0+32768))
  3641  0D58  00F8               	movwf	print_error@top
  3642  0D59  3092               	movlw	high (STR_37| (0+32768))
  3643  0D5A  00F9               	movwf	print_error@top+1
  3644  0D5B  300F               	movlw	low (STR_100| (0+32768))
  3645  0D5C  00FA               	movwf	print_error@bottom
  3646  0D5D  3093               	movlw	high (STR_100| (0+32768))
  3647  0D5E  2D86               	goto	L5
  3648  0D5F                     l3738:	
  3649                           
  3650                           ;Multi_RX_testjig_v1.c: 812: else
  3651                           ;Multi_RX_testjig_v1.c: 813: print_error("Comms Error", " 8a");
  3652  0D5F  300D               	movlw	low (STR_37| (0+32768))
  3653  0D60  00F8               	movwf	print_error@top
  3654  0D61  3092               	movlw	high (STR_37| (0+32768))
  3655  0D62  00F9               	movwf	print_error@top+1
  3656  0D63  3007               	movlw	low (STR_102| (0+32768))
  3657  0D64  00FA               	movwf	print_error@bottom
  3658  0D65  3093               	movlw	high (STR_102| (0+32768))
  3659  0D66  2D86               	goto	L5
  3660  0D67                     l3740:	
  3661                           
  3662                           ;Multi_RX_testjig_v1.c: 815: else
  3663                           ;Multi_RX_testjig_v1.c: 816: print_error("CH3 - ON", " Error");
  3664  0D67  30B8               	movlw	low (STR_95| (0+32768))
  3665  0D68  00F8               	movwf	print_error@top
  3666  0D69  3092               	movlw	high (STR_95| (0+32768))
  3667  0D6A  00F9               	movwf	print_error@top+1
  3668  0D6B  3029               	movlw	low ((STR_12+4)| (0+32768))
  3669  0D6C  00FA               	movwf	print_error@bottom
  3670  0D6D  3092               	movlw	high ((STR_12+4)| (0+32768))
  3671  0D6E  2D86               	goto	L5
  3672  0D6F                     l3742:	
  3673                           
  3674                           ;Multi_RX_testjig_v1.c: 818: else
  3675                           ;Multi_RX_testjig_v1.c: 819: print_error("Comms Error", " 9");
  3676  0D6F  300D               	movlw	low (STR_37| (0+32768))
  3677  0D70  00F8               	movwf	print_error@top
  3678  0D71  3092               	movlw	high (STR_37| (0+32768))
  3679  0D72  00F9               	movwf	print_error@top+1
  3680  0D73  3025               	movlw	low (STR_106| (0+32768))
  3681  0D74  00FA               	movwf	print_error@bottom
  3682  0D75  3093               	movlw	high (STR_106| (0+32768))
  3683  0D76  2D86               	goto	L5
  3684  0D77                     l3744:	
  3685                           
  3686                           ;Multi_RX_testjig_v1.c: 821: else
  3687                           ;Multi_RX_testjig_v1.c: 822: print_error("CH3 - OFF", " Error 1");
  3688  0D77  3064               	movlw	low (STR_91| (0+32768))
  3689  0D78  00F8               	movwf	print_error@top
  3690  0D79  3092               	movlw	high (STR_91| (0+32768))
  3691  0D7A  00F9               	movwf	print_error@top+1
  3692  0D7B  3082               	movlw	low (STR_46| (0+32768))
  3693  0D7C  00FA               	movwf	print_error@bottom
  3694  0D7D  3092               	movlw	high (STR_46| (0+32768))
  3695  0D7E  2D86               	goto	L5
  3696  0D7F                     l3746:	
  3697                           
  3698                           ;Multi_RX_testjig_v1.c: 824: else
  3699                           ;Multi_RX_testjig_v1.c: 825: print_error("Comms Error", " 10");
  3700  0D7F  300D               	movlw	low (STR_37| (0+32768))
  3701  0D80  00F8               	movwf	print_error@top
  3702  0D81  3092               	movlw	high (STR_37| (0+32768))
  3703  0D82  00F9               	movwf	print_error@top+1
  3704  0D83  30E3               	movlw	low (STR_110| (0+32768))
  3705  0D84  00FA               	movwf	print_error@bottom
  3706  0D85  3092               	movlw	high (STR_110| (0+32768))
  3707  0D86                     L5:	
  3708  0D86  00FB               	movwf	print_error@bottom+1
  3709  0D87  276D  3188         	fcall	_print_error
  3710  0D89                     l407:	
  3711                           
  3712                           ;Multi_RX_testjig_v1.c: 828: print_screen("Test RF", "3v3");
  3713  0D89  30DB               	movlw	low (STR_111| (0+32768))
  3714  0D8A  00F4               	movwf	print_screen@top
  3715  0D8B  3092               	movlw	high (STR_111| (0+32768))
  3716  0D8C  00F5               	movwf	print_screen@top+1
  3717  0D8D  30E5               	movlw	low ((STR_117+8)| (0+32768))
  3718  0D8E  00F6               	movwf	print_screen@bottom
  3719  0D8F  3091               	movlw	high ((STR_117+8)| (0+32768))
  3720  0D90  00F7               	movwf	print_screen@bottom+1
  3721  0D91  2757  3188         	fcall	_print_screen
  3722                           
  3723                           ;Multi_RX_testjig_v1.c: 829: TX_one(0x70);
  3724  0D93  3070               	movlw	112
  3725  0D94  2715  3188         	fcall	_TX_one
  3726                           
  3727                           ;Multi_RX_testjig_v1.c: 830: RX_data = RX_one();
  3728  0D96  2737  3188         	fcall	_RX_one
  3729  0D98  0020               	movlb	0	; select bank0
  3730  0D99  00D4               	movwf	main@RX_data
  3731                           
  3732                           ;Multi_RX_testjig_v1.c: 831: TX_one(0x70);
  3733  0D9A  3070               	movlw	112
  3734  0D9B  2715  3188         	fcall	_TX_one
  3735                           
  3736                           ;Multi_RX_testjig_v1.c: 832: RX_data = RX_one();
  3737  0D9D  2737  3188         	fcall	_RX_one
  3738  0D9F  0020               	movlb	0	; select bank0
  3739  0DA0  00D4               	movwf	main@RX_data
  3740                           
  3741                           ;Multi_RX_testjig_v1.c: 833: if(RX_data == 0)
  3742  0DA1  0854               	movf	main@RX_data,w
  3743  0DA2  1D03               	btfss	3,2
  3744  0DA3  2DAC               	goto	l3760
  3745                           
  3746                           ;Multi_RX_testjig_v1.c: 834: print_error("Comms Error", " 11");
  3747  0DA4  300D               	movlw	low (STR_37| (0+32768))
  3748  0DA5  00F8               	movwf	print_error@top
  3749  0DA6  3092               	movlw	high (STR_37| (0+32768))
  3750  0DA7  00F9               	movwf	print_error@top+1
  3751  0DA8  30E7               	movlw	low (STR_114| (0+32768))
  3752  0DA9  00FA               	movwf	print_error@bottom
  3753  0DAA  3092               	movlw	high (STR_114| (0+32768))
  3754  0DAB  2DDA               	goto	L9
  3755  0DAC                     l3760:	
  3756                           
  3757                           ;Multi_RX_testjig_v1.c: 835: else if(RX_data == 0xFF)
  3758  0DAC  0A54               	incf	main@RX_data,w
  3759  0DAD  1D03               	btfss	3,2
  3760  0DAE  2DB7               	goto	l3764
  3761                           
  3762                           ;Multi_RX_testjig_v1.c: 836: print_error("Comms Error", " 12");
  3763  0DAF  300D               	movlw	low (STR_37| (0+32768))
  3764  0DB0  00F8               	movwf	print_error@top
  3765  0DB1  3092               	movlw	high (STR_37| (0+32768))
  3766  0DB2  00F9               	movwf	print_error@top+1
  3767  0DB3  30EB               	movlw	low (STR_116| (0+32768))
  3768  0DB4  00FA               	movwf	print_error@bottom
  3769  0DB5  3092               	movlw	high (STR_116| (0+32768))
  3770  0DB6  2DDA               	goto	L9
  3771  0DB7                     l3764:	
  3772                           
  3773                           ;Multi_RX_testjig_v1.c: 837: else if(RX_data > 179)
  3774  0DB7  30B4               	movlw	180
  3775  0DB8  0254               	subwf	main@RX_data,w
  3776  0DB9  1C03               	skipc
  3777  0DBA  2DC3               	goto	l3768
  3778                           
  3779                           ;Multi_RX_testjig_v1.c: 838: print_error("Test RF 3v3", " Error - High");
  3780  0DBB  30DD               	movlw	low (STR_117| (0+32768))
  3781  0DBC  00F8               	movwf	print_error@top
  3782  0DBD  3091               	movlw	high (STR_117| (0+32768))
  3783  0DBE  00F9               	movwf	print_error@top+1
  3784  0DBF  3031               	movlw	low (STR_118| (0+32768))
  3785  0DC0  00FA               	movwf	print_error@bottom
  3786  0DC1  3091               	movlw	high (STR_118| (0+32768))
  3787  0DC2  2DDA               	goto	L9
  3788  0DC3                     l3768:	
  3789                           
  3790                           ;Multi_RX_testjig_v1.c: 839: else if(RX_data < 153)
  3791  0DC3  3099               	movlw	153
  3792  0DC4  0254               	subwf	main@RX_data,w
  3793  0DC5  1803               	skipnc
  3794  0DC6  2DCF               	goto	l3772
  3795                           
  3796                           ;Multi_RX_testjig_v1.c: 840: print_error("Test RF 3v3", " Error - Micrel");
  3797  0DC7  30DD               	movlw	low (STR_117| (0+32768))
  3798  0DC8  00F8               	movwf	print_error@top
  3799  0DC9  3091               	movlw	high (STR_117| (0+32768))
  3800  0DCA  00F9               	movwf	print_error@top+1
  3801  0DCB  30AB               	movlw	low (STR_120| (0+32768))
  3802  0DCC  00FA               	movwf	print_error@bottom
  3803  0DCD  3090               	movlw	high (STR_120| (0+32768))
  3804  0DCE  2DDA               	goto	L9
  3805  0DCF                     l3772:	
  3806                           
  3807                           ;Multi_RX_testjig_v1.c: 841: else if(RX_data < 158)
  3808  0DCF  309E               	movlw	158
  3809  0DD0  0254               	subwf	main@RX_data,w
  3810  0DD1  1803               	skipnc
  3811  0DD2  2DDD               	goto	l409
  3812                           
  3813                           ;Multi_RX_testjig_v1.c: 842: print_error("Test RF 3v3", " Error - Low");
  3814  0DD3  30DD               	movlw	low (STR_117| (0+32768))
  3815  0DD4  00F8               	movwf	print_error@top
  3816  0DD5  3091               	movlw	high (STR_117| (0+32768))
  3817  0DD6  00F9               	movwf	print_error@top+1
  3818  0DD7  30D0               	movlw	low (STR_122| (0+32768))
  3819  0DD8  00FA               	movwf	print_error@bottom
  3820  0DD9  3091               	movlw	high (STR_122| (0+32768))
  3821  0DDA                     L9:	
  3822  0DDA  00FB               	movwf	print_error@bottom+1
  3823  0DDB  276D  3188         	fcall	_print_error
  3824  0DDD                     l409:	
  3825                           
  3826                           ;Multi_RX_testjig_v1.c: 844: print_screen("Test RF", "3v3 - OK");
  3827  0DDD  30DB               	movlw	low (STR_111| (0+32768))
  3828  0DDE  00F4               	movwf	print_screen@top
  3829  0DDF  3092               	movlw	high (STR_111| (0+32768))
  3830  0DE0  00F5               	movwf	print_screen@top+1
  3831  0DE1  30A6               	movlw	low (STR_124| (0+32768))
  3832  0DE2  00F6               	movwf	print_screen@bottom
  3833  0DE3  3092               	movlw	high (STR_124| (0+32768))
  3834  0DE4  00F7               	movwf	print_screen@bottom+1
  3835  0DE5  2757  3188         	fcall	_print_screen
  3836                           
  3837                           ;Multi_RX_testjig_v1.c: 847: RE0 = 1;
  3838  0DE7  0020               	movlb	0	; select bank0
  3839  0DE8  1410               	bsf	16,0	;volatile
  3840                           
  3841                           ;Multi_RX_testjig_v1.c: 848: _delay((unsigned long)((150)*(16000000/4000.0)));
  3842  0DE9  3004               	movlw	4
  3843  0DEA  00D1               	movwf	??_main+2
  3844  0DEB  300C               	movlw	12
  3845  0DEC  00D0               	movwf	??_main+1
  3846  0DED  3035               	movlw	53
  3847  0DEE  00CF               	movwf	??_main
  3848  0DEF                     u4347:	
  3849  0DEF  0BCF               	decfsz	??_main,f
  3850  0DF0  2DEF               	goto	u4347
  3851  0DF1  0BD0               	decfsz	??_main+1,f
  3852  0DF2  2DEF               	goto	u4347
  3853  0DF3  0BD1               	decfsz	??_main+2,f
  3854  0DF4  2DEF               	goto	u4347
  3855  0DF5  3200               	nop2
  3856                           
  3857                           ;Multi_RX_testjig_v1.c: 849: print_screen("Test RF", "RSSI");
  3858  0DF6  30DB               	movlw	low (STR_111| (0+32768))
  3859  0DF7  00F4               	movwf	print_screen@top
  3860  0DF8  3092               	movlw	high (STR_111| (0+32768))
  3861  0DF9  00F5               	movwf	print_screen@top+1
  3862  0DFA  307D               	movlw	low ((STR_131+8)| (0+32768))
  3863  0DFB  00F6               	movwf	print_screen@bottom
  3864  0DFC  3091               	movlw	high ((STR_131+8)| (0+32768))
  3865  0DFD  00F7               	movwf	print_screen@bottom+1
  3866  0DFE  2757  3188         	fcall	_print_screen
  3867                           
  3868                           ;Multi_RX_testjig_v1.c: 850: TX_one(0x60);
  3869  0E00  3060               	movlw	96
  3870  0E01  2715  3188         	fcall	_TX_one
  3871                           
  3872                           ;Multi_RX_testjig_v1.c: 851: RX_data = RX_one();
  3873  0E03  2737  3188         	fcall	_RX_one
  3874  0E05  0020               	movlb	0	; select bank0
  3875  0E06  00D4               	movwf	main@RX_data
  3876                           
  3877                           ;Multi_RX_testjig_v1.c: 852: TX_one(0x60);
  3878  0E07  3060               	movlw	96
  3879  0E08  2715  3188         	fcall	_TX_one
  3880                           
  3881                           ;Multi_RX_testjig_v1.c: 853: RX_data = RX_one();
  3882  0E0A  2737  3188         	fcall	_RX_one
  3883  0E0C  0020               	movlb	0	; select bank0
  3884  0E0D  00D4               	movwf	main@RX_data
  3885                           
  3886                           ;Multi_RX_testjig_v1.c: 854: if(RX_data == 0)
  3887  0E0E  0854               	movf	main@RX_data,w
  3888  0E0F  1D03               	btfss	3,2
  3889  0E10  2E19               	goto	l3794
  3890                           
  3891                           ;Multi_RX_testjig_v1.c: 855: print_error("Comms Error", " 13");
  3892  0E11  300D               	movlw	low (STR_37| (0+32768))
  3893  0E12  00F8               	movwf	print_error@top
  3894  0E13  3092               	movlw	high (STR_37| (0+32768))
  3895  0E14  00F9               	movwf	print_error@top+1
  3896  0E15  30EF               	movlw	low (STR_128| (0+32768))
  3897  0E16  00FA               	movwf	print_error@bottom
  3898  0E17  3092               	movlw	high (STR_128| (0+32768))
  3899  0E18  2E3B               	goto	L6
  3900  0E19                     l3794:	
  3901                           
  3902                           ;Multi_RX_testjig_v1.c: 856: else if(RX_data == 0xFF)
  3903  0E19  0A54               	incf	main@RX_data,w
  3904  0E1A  1D03               	btfss	3,2
  3905  0E1B  2E24               	goto	l3798
  3906                           
  3907                           ;Multi_RX_testjig_v1.c: 857: print_error("Comms Error", " 14");
  3908  0E1C  300D               	movlw	low (STR_37| (0+32768))
  3909  0E1D  00F8               	movwf	print_error@top
  3910  0E1E  3092               	movlw	high (STR_37| (0+32768))
  3911  0E1F  00F9               	movwf	print_error@top+1
  3912  0E20  30F3               	movlw	low (STR_130| (0+32768))
  3913  0E21  00FA               	movwf	print_error@bottom
  3914  0E22  3092               	movlw	high (STR_130| (0+32768))
  3915  0E23  2E3B               	goto	L6
  3916  0E24                     l3798:	
  3917                           
  3918                           ;Multi_RX_testjig_v1.c: 858: else if(RX_data > 120)
  3919  0E24  3079               	movlw	121
  3920  0E25  0254               	subwf	main@RX_data,w
  3921  0E26  1C03               	skipc
  3922  0E27  2E30               	goto	l3802
  3923                           
  3924                           ;Multi_RX_testjig_v1.c: 859: print_error("Test RF RSSI", " Error - High");
  3925  0E28  3075               	movlw	low (STR_131| (0+32768))
  3926  0E29  00F8               	movwf	print_error@top
  3927  0E2A  3091               	movlw	high (STR_131| (0+32768))
  3928  0E2B  00F9               	movwf	print_error@top+1
  3929  0E2C  3031               	movlw	low (STR_118| (0+32768))
  3930  0E2D  00FA               	movwf	print_error@bottom
  3931  0E2E  3091               	movlw	high (STR_118| (0+32768))
  3932  0E2F  2E3B               	goto	L6
  3933  0E30                     l3802:	
  3934                           
  3935                           ;Multi_RX_testjig_v1.c: 860: else if(RX_data < 90)
  3936  0E30  305A               	movlw	90
  3937  0E31  0254               	subwf	main@RX_data,w
  3938  0E32  1803               	skipnc
  3939  0E33  2E3E               	goto	l418
  3940                           
  3941                           ;Multi_RX_testjig_v1.c: 861: print_error("Test RF RSSI", " Error - Low");
  3942  0E34  3075               	movlw	low (STR_131| (0+32768))
  3943  0E35  00F8               	movwf	print_error@top
  3944  0E36  3091               	movlw	high (STR_131| (0+32768))
  3945  0E37  00F9               	movwf	print_error@top+1
  3946  0E38  30D0               	movlw	low (STR_122| (0+32768))
  3947  0E39  00FA               	movwf	print_error@bottom
  3948  0E3A  3091               	movlw	high (STR_122| (0+32768))
  3949  0E3B                     L6:	
  3950  0E3B  00FB               	movwf	print_error@bottom+1
  3951  0E3C  276D  3188         	fcall	_print_error
  3952  0E3E                     l418:	
  3953                           
  3954                           ;Multi_RX_testjig_v1.c: 862: print_screen("Test RF", "RSSI - OK");
  3955  0E3E  30DB               	movlw	low (STR_111| (0+32768))
  3956  0E3F  00F4               	movwf	print_screen@top
  3957  0E40  3092               	movlw	high (STR_111| (0+32768))
  3958  0E41  00F5               	movwf	print_screen@top+1
  3959  0E42  306E               	movlw	low (STR_136| (0+32768))
  3960  0E43  00F6               	movwf	print_screen@bottom
  3961  0E44  3092               	movlw	high (STR_136| (0+32768))
  3962  0E45  00F7               	movwf	print_screen@bottom+1
  3963  0E46  2757  3188         	fcall	_print_screen
  3964                           
  3965                           ;Multi_RX_testjig_v1.c: 865: print_screen("Test RF", "Decode");
  3966  0E48  30DB               	movlw	low (STR_111| (0+32768))
  3967  0E49  00F4               	movwf	print_screen@top
  3968  0E4A  3092               	movlw	high (STR_111| (0+32768))
  3969  0E4B  00F5               	movwf	print_screen@top+1
  3970  0E4C  30E2               	movlw	low ((STR_144+8)| (0+32768))
  3971  0E4D  00F6               	movwf	print_screen@bottom
  3972  0E4E  3090               	movlw	high ((STR_144+8)| (0+32768))
  3973  0E4F  00F7               	movwf	print_screen@bottom+1
  3974  0E50  2757  3188         	fcall	_print_screen
  3975                           
  3976                           ;Multi_RX_testjig_v1.c: 866: for(i = 0; i < 10; i++)
  3977  0E52  0020               	movlb	0	; select bank0
  3978  0E53  01D2               	clrf	main@i
  3979  0E54  01D3               	clrf	main@i+1
  3980  0E55  2E66               	goto	l3808
  3981  0E56                     l3818:	
  3982                           
  3983                           ;Multi_RX_testjig_v1.c: 872: _delay((unsigned long)((200)*(16000000/4000.0)));
  3984  0E56  3005               	movlw	5
  3985  0E57  00D1               	movwf	??_main+2
  3986  0E58  300F               	movlw	15
  3987  0E59  00D0               	movwf	??_main+1
  3988  0E5A  30F4               	movlw	244
  3989  0E5B  00CF               	movwf	??_main
  3990  0E5C                     u4357:	
  3991  0E5C  0BCF               	decfsz	??_main,f
  3992  0E5D  2E5C               	goto	u4357
  3993  0E5E  0BD0               	decfsz	??_main+1,f
  3994  0E5F  2E5C               	goto	u4357
  3995  0E60  0BD1               	decfsz	??_main+2,f
  3996  0E61  2E5C               	goto	u4357
  3997  0E62  0020               	movlb	0	; select bank0
  3998  0E63  0AD2               	incf	main@i,f
  3999  0E64  1903               	skipnz
  4000  0E65  0AD3               	incf	main@i+1,f
  4001  0E66                     l3808:	
  4002  0E66  3000               	movlw	0
  4003  0E67  0253               	subwf	main@i+1,w
  4004  0E68  300A               	movlw	10
  4005  0E69  1903               	skipnz
  4006  0E6A  0252               	subwf	main@i,w
  4007  0E6B  1803               	btfsc	3,0
  4008  0E6C  2E76               	goto	l3824
  4009                           
  4010                           ;Multi_RX_testjig_v1.c: 867: {
  4011                           ;Multi_RX_testjig_v1.c: 868: TX_one(0x61);
  4012  0E6D  3061               	movlw	97
  4013  0E6E  2715  3188         	fcall	_TX_one
  4014                           
  4015                           ;Multi_RX_testjig_v1.c: 869: RX_data = RX_one();
  4016  0E70  2737  3188         	fcall	_RX_one
  4017  0E72  0020               	movlb	0	; select bank0
  4018  0E73  00D4               	movwf	main@RX_data
  4019                           
  4020                           ;Multi_RX_testjig_v1.c: 870: if(RX_data == 1)
  4021  0E74  0B54               	decfsz	main@RX_data,w
  4022  0E75  2E56               	goto	l3818
  4023  0E76                     l3824:	
  4024                           
  4025                           ;Multi_RX_testjig_v1.c: 873: }
  4026                           ;Multi_RX_testjig_v1.c: 875: if(RX_data == 1)
  4027  0E76  0354               	decf	main@RX_data,w
  4028  0E77  1D03               	btfss	3,2
  4029  0E78  2E84               	goto	l3828
  4030                           
  4031                           ;Multi_RX_testjig_v1.c: 876: print_screen("Test RF", "Decode New - OK");
  4032  0E79  30DB               	movlw	low (STR_111| (0+32768))
  4033  0E7A  00F4               	movwf	print_screen@top
  4034  0E7B  3092               	movlw	high (STR_111| (0+32768))
  4035  0E7C  00F5               	movwf	print_screen@top+1
  4036  0E7D  308B               	movlw	low (STR_140| (0+32768))
  4037  0E7E  00F6               	movwf	print_screen@bottom
  4038  0E7F  3090               	movlw	high (STR_140| (0+32768))
  4039  0E80  00F7               	movwf	print_screen@bottom+1
  4040  0E81  2757  3188         	fcall	_print_screen
  4041  0E83  2EA6               	goto	l3838
  4042  0E84                     l3828:	
  4043                           
  4044                           ;Multi_RX_testjig_v1.c: 877: else if(RX_data == 2)
  4045  0E84  3002               	movlw	2
  4046  0E85  0654               	xorwf	main@RX_data,w
  4047  0E86  1D03               	btfss	3,2
  4048  0E87  2E90               	goto	l3832
  4049                           
  4050                           ;Multi_RX_testjig_v1.c: 878: print_error("Test RF", "Decode Old -Fail");
  4051  0E88  30DB               	movlw	low (STR_111| (0+32768))
  4052  0E89  00F8               	movwf	print_error@top
  4053  0E8A  3092               	movlw	high (STR_111| (0+32768))
  4054  0E8B  00F9               	movwf	print_error@top+1
  4055  0E8C  3037               	movlw	low (STR_142| (0+32768))
  4056  0E8D  00FA               	movwf	print_error@bottom
  4057  0E8E  3090               	movlw	high (STR_142| (0+32768))
  4058  0E8F  2EA3               	goto	L7
  4059  0E90                     l3832:	
  4060                           
  4061                           ;Multi_RX_testjig_v1.c: 879: else if(RX_data == 3)
  4062  0E90  3003               	movlw	3
  4063  0E91  0654               	xorwf	main@RX_data,w
  4064  0E92  1D03               	btfss	3,2
  4065  0E93  2E9C               	goto	l3836
  4066                           
  4067                           ;Multi_RX_testjig_v1.c: 880: print_error("Test RF", "Error - Decode");
  4068  0E94  30DB               	movlw	low (STR_111| (0+32768))
  4069  0E95  00F8               	movwf	print_error@top
  4070  0E96  3092               	movlw	high (STR_111| (0+32768))
  4071  0E97  00F9               	movwf	print_error@top+1
  4072  0E98  30DA               	movlw	low (STR_144| (0+32768))
  4073  0E99  00FA               	movwf	print_error@bottom
  4074  0E9A  3090               	movlw	high (STR_144| (0+32768))
  4075  0E9B  2EA3               	goto	L7
  4076  0E9C                     l3836:	
  4077                           
  4078                           ;Multi_RX_testjig_v1.c: 881: else
  4079                           ;Multi_RX_testjig_v1.c: 882: print_error("Comms Error", " 15");
  4080  0E9C  300D               	movlw	low (STR_37| (0+32768))
  4081  0E9D  00F8               	movwf	print_error@top
  4082  0E9E  3092               	movlw	high (STR_37| (0+32768))
  4083  0E9F  00F9               	movwf	print_error@top+1
  4084  0EA0  30F7               	movlw	low (STR_146| (0+32768))
  4085  0EA1  00FA               	movwf	print_error@bottom
  4086  0EA2  3092               	movlw	high (STR_146| (0+32768))
  4087  0EA3                     L7:	
  4088  0EA3  00FB               	movwf	print_error@bottom+1
  4089  0EA4  276D  3188         	fcall	_print_error
  4090  0EA6                     l3838:	
  4091                           
  4092                           ;Multi_RX_testjig_v1.c: 884: RE0 = 0;
  4093  0EA6  0020               	movlb	0	; select bank0
  4094  0EA7  1010               	bcf	16,0	;volatile
  4095                           
  4096                           ;Multi_RX_testjig_v1.c: 887: print_screen("Master Erase ", " ");
  4097  0EA8  3007               	movlw	low (STR_147| (0+32768))
  4098  0EA9  00F4               	movwf	print_screen@top
  4099  0EAA  3091               	movlw	high (STR_147| (0+32768))
  4100  0EAB  00F5               	movwf	print_screen@top+1
  4101  0EAC  3089               	movlw	low ((STR_155+14)| (0+32768))
  4102  0EAD  00F6               	movwf	print_screen@bottom
  4103  0EAE  3090               	movlw	high ((STR_155+14)| (0+32768))
  4104  0EAF  00F7               	movwf	print_screen@bottom+1
  4105  0EB0  2757  3188         	fcall	_print_screen
  4106                           
  4107                           ;Multi_RX_testjig_v1.c: 888: TX_one(0x82);
  4108  0EB2  3082               	movlw	130
  4109  0EB3  2715  3188         	fcall	_TX_one
  4110                           
  4111                           ;Multi_RX_testjig_v1.c: 889: RX_data = RX_one();
  4112  0EB5  2737  3188         	fcall	_RX_one
  4113  0EB7  0020               	movlb	0	; select bank0
  4114  0EB8  00D4               	movwf	main@RX_data
  4115                           
  4116                           ;Multi_RX_testjig_v1.c: 890: if(RX_data != 0x8A)
  4117  0EB9  3A8A               	xorlw	138
  4118  0EBA  1903               	btfsc	3,2
  4119  0EBB  2EC6               	goto	l433
  4120                           
  4121                           ;Multi_RX_testjig_v1.c: 891: print_error("Comms Error", " 17");
  4122  0EBC  300D               	movlw	low (STR_37| (0+32768))
  4123  0EBD  00F8               	movwf	print_error@top
  4124  0EBE  3092               	movlw	high (STR_37| (0+32768))
  4125  0EBF  00F9               	movwf	print_error@top+1
  4126  0EC0  30FF               	movlw	low (STR_150| (0+32768))
  4127  0EC1  00FA               	movwf	print_error@bottom
  4128  0EC2  3092               	movlw	high (STR_150| (0+32768))
  4129  0EC3  00FB               	movwf	print_error@bottom+1
  4130  0EC4  276D  3188         	fcall	_print_error
  4131  0EC6                     l433:	
  4132                           
  4133                           ;Multi_RX_testjig_v1.c: 894: print_screen("Set # of ", " channels");
  4134  0EC6  3050               	movlw	low (STR_151| (0+32768))
  4135  0EC7  00F4               	movwf	print_screen@top
  4136  0EC8  3092               	movlw	high (STR_151| (0+32768))
  4137  0EC9  00F5               	movwf	print_screen@top+1
  4138  0ECA  3078               	movlw	low (STR_152| (0+32768))
  4139  0ECB  00F6               	movwf	print_screen@bottom
  4140  0ECC  3092               	movlw	high (STR_152| (0+32768))
  4141  0ECD  00F7               	movwf	print_screen@bottom+1
  4142  0ECE  2757  3188         	fcall	_print_screen
  4143                           
  4144                           ;Multi_RX_testjig_v1.c: 895: TX_one(0x81);
  4145  0ED0  3081               	movlw	129
  4146  0ED1  2715  3188         	fcall	_TX_one
  4147                           
  4148                           ;Multi_RX_testjig_v1.c: 896: RX_data = RX_one();
  4149  0ED3  2737  3188         	fcall	_RX_one
  4150  0ED5  0020               	movlb	0	; select bank0
  4151  0ED6  00D4               	movwf	main@RX_data
  4152                           
  4153                           ;Multi_RX_testjig_v1.c: 897: if(RX_data != 0x8A)
  4154  0ED7  3A8A               	xorlw	138
  4155  0ED8  1903               	btfsc	3,2
  4156  0ED9  2EE4               	goto	l434
  4157                           
  4158                           ;Multi_RX_testjig_v1.c: 898: print_error("Comms Error", " 16");
  4159  0EDA  300D               	movlw	low (STR_37| (0+32768))
  4160  0EDB  00F8               	movwf	print_error@top
  4161  0EDC  3092               	movlw	high (STR_37| (0+32768))
  4162  0EDD  00F9               	movwf	print_error@top+1
  4163  0EDE  30FB               	movlw	low (STR_154| (0+32768))
  4164  0EDF  00FA               	movwf	print_error@bottom
  4165  0EE0  3092               	movlw	high (STR_154| (0+32768))
  4166  0EE1  00FB               	movwf	print_error@bottom+1
  4167  0EE2  276D  3188         	fcall	_print_error
  4168  0EE4                     l434:	
  4169                           
  4170                           ;Multi_RX_testjig_v1.c: 901: print_screen("7seg, buzzer,  ", " button test");
  4171  0EE4  307B               	movlw	low (STR_155| (0+32768))
  4172  0EE5  00F4               	movwf	print_screen@top
  4173  0EE6  3090               	movlw	high (STR_155| (0+32768))
  4174  0EE7  00F5               	movwf	print_screen@top+1
  4175  0EE8  30C3               	movlw	low (STR_156| (0+32768))
  4176  0EE9  00F6               	movwf	print_screen@bottom
  4177  0EEA  3091               	movlw	high (STR_156| (0+32768))
  4178  0EEB  00F7               	movwf	print_screen@bottom+1
  4179  0EEC  2757  3188         	fcall	_print_screen
  4180                           
  4181                           ;Multi_RX_testjig_v1.c: 902: TX_one(0x90);
  4182  0EEE  3090               	movlw	144
  4183  0EEF  2715  3188         	fcall	_TX_one
  4184                           
  4185                           ;Multi_RX_testjig_v1.c: 903: TRISG0 = 1;
  4186  0EF1  0026               	movlb	6	; select bank6
  4187  0EF2  140D               	bsf	13,0	;volatile
  4188                           
  4189                           ;Multi_RX_testjig_v1.c: 904: _delay((unsigned long)((100)*(16000000/4000.0)));
  4190  0EF3  3003               	movlw	3
  4191  0EF4  0020               	movlb	0	; select bank0
  4192  0EF5  00D1               	movwf	??_main+2
  4193  0EF6  3008               	movlw	8
  4194  0EF7  00D0               	movwf	??_main+1
  4195  0EF8  3078               	movlw	120
  4196  0EF9  00CF               	movwf	??_main
  4197  0EFA                     u4367:	
  4198  0EFA  0BCF               	decfsz	??_main,f
  4199  0EFB  2EFA               	goto	u4367
  4200  0EFC  0BD0               	decfsz	??_main+1,f
  4201  0EFD  2EFA               	goto	u4367
  4202  0EFE  0BD1               	decfsz	??_main+2,f
  4203  0EFF  2EFA               	goto	u4367
  4204  0F00                     l435:	
  4205                           ;Multi_RX_testjig_v1.c: 905: while(RG1== 1);
  4206                           
  4207  0F00  0025               	movlb	5	; select bank5
  4208  0F01  188D               	btfsc	13,1	;volatile
  4209  0F02  2F00               	goto	l435
  4210                           
  4211                           ;Multi_RX_testjig_v1.c: 906: print_screen("waiting  ", " for comms");
  4212  0F03  3046               	movlw	low (STR_157| (0+32768))
  4213  0F04  00F4               	movwf	print_screen@top
  4214  0F05  3092               	movlw	high (STR_157| (0+32768))
  4215  0F06  00F5               	movwf	print_screen@top+1
  4216  0F07  3030               	movlw	low (STR_158| (0+32768))
  4217  0F08  00F6               	movwf	print_screen@bottom
  4218  0F09  3092               	movlw	high (STR_158| (0+32768))
  4219  0F0A  00F7               	movwf	print_screen@bottom+1
  4220  0F0B  2757               	fcall	_print_screen
  4221                           
  4222                           ;Multi_RX_testjig_v1.c: 913: testjig_done(1);
  4223  0F0C  3001               	movlw	1
  4224  0F0D  3185  2520  3188   	fcall	_testjig_done
  4225                           
  4226                           ;Multi_RX_testjig_v1.c: 923: testjig_done(1);
  4227  0F10  3001               	movlw	1
  4228  0F11  3185  2520         	fcall	_testjig_done
  4229  0F13  3180  2895         	ljmp	start
  4230  0F15                     __end_of_main:	
  4231  0F15                     __ptext33:	
  4232 ;; *************** function _TX_one *****************
  4233 ;; Defined at:
  4234 ;;		line 1998 in file "Multi_RX_testjig_v1.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  data            1    wreg     unsigned char 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  data            1    1[COMMON] unsigned char 
  4239 ;;  i               1    2[COMMON] unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  1    wreg      void 
  4242 ;; Registers used:
  4243 ;;		wreg, status,2, status,0
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4251 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4252 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4253 ;;Total ram usage:        3 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; Hardware stack levels required when called:    1
  4256 ;; This function calls:
  4257 ;;		Nothing
  4258 ;; This function is called by:
  4259 ;;		_main
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           
  4264                           ;psect for function _TX_one
  4265  0F15                     _TX_one:	
  4266                           
  4267                           ;incstack = 0
  4268                           ; Regs used in _TX_one: [wreg+status,2+status,0]
  4269                           ;TX_one@data stored from wreg
  4270  0F15  00F1               	movwf	TX_one@data
  4271                           
  4272                           ;Multi_RX_testjig_v1.c: 2000: TRISG0 = 0;
  4273  0F16  0026               	movlb	6	; select bank6
  4274  0F17  100D               	bcf	13,0	;volatile
  4275                           
  4276                           ;Multi_RX_testjig_v1.c: 2001: LATG0 = 0;
  4277  0F18  0027               	movlb	7	; select bank7
  4278  0F19  100D               	bcf	13,0	;volatile
  4279                           
  4280                           ;Multi_RX_testjig_v1.c: 2002: _delay((unsigned long)((100)*(16000000/4000000.0)));
  4281  0F1A  3085               	movlw	133
  4282  0F1B  00F0               	movwf	??_TX_one
  4283  0F1C                     u4517:	
  4284  0F1C  0BF0               	decfsz	??_TX_one,f
  4285  0F1D  2F1C               	goto	u4517
  4286                           
  4287                           ;Multi_RX_testjig_v1.c: 2004: unsigned char i;
  4288                           ;Multi_RX_testjig_v1.c: 2005: for(i = 0; i < 8; i++)
  4289  0F1E  01F2               	clrf	TX_one@i
  4290  0F1F                     l683:	
  4291                           
  4292                           ;Multi_RX_testjig_v1.c: 2006: {
  4293                           ;Multi_RX_testjig_v1.c: 2007: LATG0 = data & 0x01;
  4294  0F1F  1C71               	btfss	TX_one@data,0
  4295  0F20  2F24               	goto	u2980
  4296  0F21  0027               	movlb	7	; select bank7
  4297  0F22  140D               	bsf	13,0	;volatile
  4298  0F23  2F26               	goto	u2994
  4299  0F24                     u2980:	
  4300  0F24  0027               	movlb	7	; select bank7
  4301  0F25  100D               	bcf	13,0	;volatile
  4302  0F26                     u2994:	
  4303  0F26  3085               	movlw	133
  4304                           
  4305                           ;Multi_RX_testjig_v1.c: 2008: data = data >> 1;
  4306  0F27  36F1               	lsrf	TX_one@data,f
  4307                           
  4308                           ;Multi_RX_testjig_v1.c: 2009: _delay((unsigned long)((100)*(16000000/4000000.0)));
  4309  0F28  00F0               	movwf	??_TX_one
  4310  0F29                     u4527:	
  4311  0F29  0BF0               	decfsz	??_TX_one,f
  4312  0F2A  2F29               	goto	u4527
  4313  0F2B  3008               	movlw	8
  4314  0F2C  0AF2               	incf	TX_one@i,f
  4315  0F2D  0272               	subwf	TX_one@i,w
  4316  0F2E  1C03               	skipc
  4317  0F2F  2F1F               	goto	l683
  4318                           
  4319                           ;Multi_RX_testjig_v1.c: 2010: }
  4320                           ;Multi_RX_testjig_v1.c: 2011: LATG0 = 1;
  4321  0F30  0027               	movlb	7	; select bank7
  4322  0F31  140D               	bsf	13,0	;volatile
  4323                           
  4324                           ;Multi_RX_testjig_v1.c: 2012: _delay((unsigned long)((100)*(16000000/4000000.0)));
  4325  0F32  3085               	movlw	133
  4326  0F33  00F0               	movwf	??_TX_one
  4327  0F34                     u4537:	
  4328  0F34  0BF0               	decfsz	??_TX_one,f
  4329  0F35  2F34               	goto	u4537
  4330  0F36  0008               	return
  4331  0F37                     __end_of_TX_one:	
  4332  0F37                     __ptext34:	
  4333 ;; *************** function _RX_one *****************
  4334 ;; Defined at:
  4335 ;;		line 2015 in file "Multi_RX_testjig_v1.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;		None
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  data            1    2[COMMON] unsigned char 
  4340 ;;  i               1    1[COMMON] unsigned char 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      unsigned char 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2, status,0
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4351 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4353 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4354 ;;Total ram usage:        3 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    1
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_main
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           
  4365                           ;psect for function _RX_one
  4366  0F37                     _RX_one:	
  4367  0F37                     l688:	
  4368                           ;Multi_RX_testjig_v1.c: 2018: while(RG3 == 1);
  4369                           
  4370                           ;incstack = 0
  4371                           ; Regs used in _RX_one: [wreg+status,2+status,0]
  4372                           
  4373  0F37  0025               	movlb	5	; select bank5
  4374  0F38  198D               	btfsc	13,3	;volatile
  4375  0F39  2F37               	goto	l688
  4376                           
  4377                           ;Multi_RX_testjig_v1.c: 2019: _delay((unsigned long)((150)*(16000000/4000000.0)));
  4378  0F3A  30C7               	movlw	199
  4379  0F3B  00F0               	movwf	??_RX_one
  4380  0F3C                     u4547:	
  4381  0F3C  0BF0               	decfsz	??_RX_one,f
  4382  0F3D  2F3C               	goto	u4547
  4383  0F3E  3200               	nop2	;nop
  4384                           
  4385                           ;Multi_RX_testjig_v1.c: 2020: unsigned char i;
  4386                           ;Multi_RX_testjig_v1.c: 2021: unsigned char data = 0;
  4387  0F3F  01F2               	clrf	RX_one@data
  4388                           
  4389                           ;Multi_RX_testjig_v1.c: 2022: for(i = 0; i < 8; i++)
  4390  0F40  01F1               	clrf	RX_one@i
  4391  0F41                     l691:	
  4392                           
  4393                           ;Multi_RX_testjig_v1.c: 2023: {
  4394                           ;Multi_RX_testjig_v1.c: 2024: if (RG3 == 0)
  4395  0F41  0025               	movlb	5	; select bank5
  4396  0F42  198D               	btfsc	13,3	;volatile
  4397  0F43  2F46               	goto	l693
  4398                           
  4399                           ;Multi_RX_testjig_v1.c: 2025: data = data >> 1;
  4400  0F44  36F2               	lsrf	RX_one@data,f
  4401  0F45  2F48               	goto	l3240
  4402  0F46                     l693:	
  4403                           
  4404                           ;Multi_RX_testjig_v1.c: 2026: else
  4405                           ;Multi_RX_testjig_v1.c: 2027: data = (data >> 1) | 0x80 ;
  4406  0F46  1403               	setc
  4407  0F47  0CF2               	rrf	RX_one@data,f
  4408  0F48                     l3240:	
  4409                           
  4410                           ;Multi_RX_testjig_v1.c: 2028: _delay((unsigned long)((100)*(16000000/4000000.0)));
  4411  0F48  3085               	movlw	133
  4412  0F49  00F0               	movwf	??_RX_one
  4413  0F4A                     u4557:	
  4414  0F4A  0BF0               	decfsz	??_RX_one,f
  4415  0F4B  2F4A               	goto	u4557
  4416  0F4C  3008               	movlw	8
  4417  0F4D  0AF1               	incf	RX_one@i,f
  4418  0F4E  0271               	subwf	RX_one@i,w
  4419  0F4F  1C03               	skipc
  4420  0F50  2F41               	goto	l691
  4421                           
  4422                           ;Multi_RX_testjig_v1.c: 2029: }
  4423                           ;Multi_RX_testjig_v1.c: 2030: _delay((unsigned long)((100)*(16000000/4000000.0)));
  4424  0F51  3085               	movlw	133
  4425  0F52  00F0               	movwf	??_RX_one
  4426  0F53                     u4567:	
  4427  0F53  0BF0               	decfsz	??_RX_one,f
  4428  0F54  2F53               	goto	u4567
  4429                           
  4430                           ;Multi_RX_testjig_v1.c: 2032: return data;
  4431  0F55  0872               	movf	RX_one@data,w
  4432  0F56  0008               	return
  4433  0F57                     __end_of_RX_one:	
  4434  0F57                     __ptext3:	
  4435 ;; *************** function _print_screen *****************
  4436 ;; Defined at:
  4437 ;;		line 1463 in file "Multi_RX_testjig_v1.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  top             2    4[COMMON] PTR const unsigned char 
  4440 ;;		 -> STR_169(12), STR_167(17), STR_165(17), STR_163(17), 
  4441 ;;		 -> STR_161(9), STR_159(13), STR_157(10), STR_155(16), 
  4442 ;;		 -> STR_151(10), STR_147(14), STR_139(8), STR_137(8), 
  4443 ;;		 -> STR_135(8), STR_125(8), STR_123(8), STR_111(8), 
  4444 ;;		 -> STR_89(9), STR_87(9), STR_65(9), STR_63(9), 
  4445 ;;		 -> STR_51(11), STR_49(11), STR_43(13), STR_35(13), 
  4446 ;;		 -> STR_33(19), STR_29(12), STR_27(19), STR_5(15), 
  4447 ;;		 -> STR_1(9), 
  4448 ;;  bottom          2    6[COMMON] PTR const unsigned char 
  4449 ;;		 -> STR_170(17), STR_168(13), STR_166(14), STR_164(8), 
  4450 ;;		 -> STR_162(8), STR_160(14), STR_158(11), STR_156(13), 
  4451 ;;		 -> STR_152(10), STR_148(2), STR_140(16), STR_138(7), 
  4452 ;;		 -> STR_136(10), STR_126(5), STR_124(9), STR_112(4), 
  4453 ;;		 -> STR_90(3), STR_88(1), STR_66(3), STR_64(1), 
  4454 ;;		 -> STR_52(5), STR_50(1), STR_44(6), STR_36(6), 
  4455 ;;		 -> STR_34(9), STR_30(13), STR_28(1), STR_6(1), 
  4456 ;;		 -> STR_2(17), 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;		None
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/4
  4465 ;;		On exit  : 1F/4
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4468 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4471 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4472 ;;Total ram usage:        4 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    3
  4475 ;; This function calls:
  4476 ;;		_clear_lcd
  4477 ;;		_i2c_Write_string
  4478 ;;		_i2c_first_line
  4479 ;;		_i2c_second_line
  4480 ;; This function is called by:
  4481 ;;		_main
  4482 ;;		_testjig_done
  4483 ;;		_print_error
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           
  4488                           ;psect for function _print_screen
  4489  0F57                     _print_screen:	
  4490                           
  4491                           ;Multi_RX_testjig_v1.c: 1465: clear_lcd();
  4492                           
  4493                           ;incstack = 0
  4494                           ; Regs used in _print_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4495  0F57  3181  219A  3188   	fcall	_clear_lcd
  4496                           
  4497                           ;Multi_RX_testjig_v1.c: 1466: i2c_first_line();
  4498  0F5A  3181  2189  3188   	fcall	_i2c_first_line
  4499                           
  4500                           ;Multi_RX_testjig_v1.c: 1467: i2c_Write_string(top);
  4501  0F5D  0875               	movf	print_screen@top+1,w
  4502  0F5E  00F2               	movwf	i2c_Write_string@data+1
  4503  0F5F  0874               	movf	print_screen@top,w
  4504  0F60  00F1               	movwf	i2c_Write_string@data
  4505  0F61  3181  21C7  3188   	fcall	_i2c_Write_string
  4506                           
  4507                           ;Multi_RX_testjig_v1.c: 1468: i2c_second_line();
  4508  0F64  3181  2178  3188   	fcall	_i2c_second_line
  4509                           
  4510                           ;Multi_RX_testjig_v1.c: 1469: i2c_Write_string(bottom);
  4511  0F67  0877               	movf	print_screen@bottom+1,w
  4512  0F68  00F2               	movwf	i2c_Write_string@data+1
  4513  0F69  0876               	movf	print_screen@bottom,w
  4514  0F6A  00F1               	movwf	i2c_Write_string@data
  4515  0F6B  3181  29C7         	ljmp	l2528
  4516  0F6D                     __end_of_print_screen:	
  4517  0F6D                     __ptext2:	
  4518 ;; *************** function _print_error *****************
  4519 ;; Defined at:
  4520 ;;		line 1440 in file "Multi_RX_testjig_v1.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  top             2    8[COMMON] PTR const unsigned char 
  4523 ;;		 -> STR_153(12), STR_149(12), STR_145(12), STR_143(8), 
  4524 ;;		 -> STR_141(8), STR_133(13), STR_131(13), STR_129(12), 
  4525 ;;		 -> STR_127(12), STR_121(12), STR_119(12), STR_117(12), 
  4526 ;;		 -> STR_115(12), STR_113(12), STR_109(12), STR_107(10), 
  4527 ;;		 -> STR_105(12), STR_103(9), STR_101(12), STR_99(12), 
  4528 ;;		 -> STR_97(9), STR_95(9), STR_93(12), STR_91(10), 
  4529 ;;		 -> STR_85(12), STR_83(10), STR_81(12), STR_79(9), 
  4530 ;;		 -> STR_77(12), STR_75(12), STR_73(9), STR_71(9), 
  4531 ;;		 -> STR_69(12), STR_67(10), STR_61(19), STR_59(12), 
  4532 ;;		 -> STR_57(16), STR_55(12), STR_53(19), STR_47(12), 
  4533 ;;		 -> STR_45(12), STR_41(12), STR_39(13), STR_37(12), 
  4534 ;;		 -> STR_31(12), STR_25(14), STR_23(14), STR_21(15), 
  4535 ;;		 -> STR_19(15), STR_17(14), STR_15(14), STR_13(14), 
  4536 ;;		 -> STR_11(14), STR_9(14), STR_7(14), STR_3(9), 
  4537 ;;  bottom          2   10[COMMON] PTR const unsigned char 
  4538 ;;		 -> STR_154(4), STR_150(4), STR_146(4), STR_144(15), 
  4539 ;;		 -> STR_142(17), STR_134(13), STR_132(14), STR_130(4), 
  4540 ;;		 -> STR_128(4), STR_122(13), STR_120(16), STR_118(14), 
  4541 ;;		 -> STR_116(4), STR_114(4), STR_110(4), STR_108(9), 
  4542 ;;		 -> STR_106(3), STR_104(7), STR_102(4), STR_100(4), 
  4543 ;;		 -> STR_98(15), STR_96(16), STR_94(3), STR_92(9), 
  4544 ;;		 -> STR_86(3), STR_84(9), STR_82(3), STR_80(7), 
  4545 ;;		 -> STR_78(4), STR_76(4), STR_74(15), STR_72(16), 
  4546 ;;		 -> STR_70(3), STR_68(9), STR_62(9), STR_60(3), 
  4547 ;;		 -> STR_58(7), STR_56(3), STR_54(9), STR_48(9), 
  4548 ;;		 -> STR_46(9), STR_42(3), STR_40(12), STR_38(3), 
  4549 ;;		 -> STR_32(6), STR_26(12), STR_24(11), STR_22(13), 
  4550 ;;		 -> STR_20(13), STR_18(13), STR_16(13), STR_14(12), 
  4551 ;;		 -> STR_12(11), STR_10(13), STR_8(13), STR_4(14), 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      void 
  4556 ;; Registers used:
  4557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/5
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4565 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4566 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4567 ;;Total ram usage:        7 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    4
  4570 ;; This function calls:
  4571 ;;		_buzz_one
  4572 ;;		_clear_lcd
  4573 ;;		_debug_fast_tx
  4574 ;;		_i2c_Write_string
  4575 ;;		_i2c_first_line
  4576 ;;		_i2c_second_line
  4577 ;;		_power_supply_set
  4578 ;;		_print_screen
  4579 ;; This function is called by:
  4580 ;;		_main
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           
  4585                           ;psect for function _print_error
  4586  0F6D                     _print_error:	
  4587                           
  4588                           ;Multi_RX_testjig_v1.c: 1442: power_supply_set(3);
  4589                           
  4590                           ;incstack = 0
  4591                           ; Regs used in _print_error: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4592  0F6D  3003               	movlw	3
  4593  0F6E  27D0               	fcall	_power_supply_set
  4594                           
  4595                           ;Multi_RX_testjig_v1.c: 1443: LATA7 = 0;
  4596  0F6F  0022               	movlb	2	; select bank2
  4597  0F70  138C               	bcf	12,7	;volatile
  4598                           
  4599                           ;Multi_RX_testjig_v1.c: 1444: LATB5 = 0;
  4600  0F71  128D               	bcf	13,5	;volatile
  4601                           
  4602                           ;Multi_RX_testjig_v1.c: 1445: LATA6 = 0;
  4603  0F72  130C               	bcf	12,6	;volatile
  4604                           
  4605                           ;Multi_RX_testjig_v1.c: 1446: RE0 = 0;
  4606  0F73  0020               	movlb	0	; select bank0
  4607  0F74  1010               	bcf	16,0	;volatile
  4608                           
  4609                           ;Multi_RX_testjig_v1.c: 1447: debug_fast_tx(12345);
  4610  0F75  3039               	movlw	57
  4611  0F76  00F0               	movwf	debug_fast_tx@data
  4612  0F77  3030               	movlw	48
  4613  0F78  00F1               	movwf	debug_fast_tx@data+1
  4614  0F79  3185  25E6  3188   	fcall	_debug_fast_tx
  4615                           
  4616                           ;Multi_RX_testjig_v1.c: 1448: buzz_one(1000);
  4617  0F7C  30E8               	movlw	232
  4618  0F7D  00F0               	movwf	buzz_one@time
  4619  0F7E  3003               	movlw	3
  4620  0F7F  00F1               	movwf	buzz_one@time+1
  4621  0F80  27F1               	fcall	_buzz_one
  4622  0F81                     l3072:	
  4623                           
  4624                           ;Multi_RX_testjig_v1.c: 1450: {
  4625                           ;Multi_RX_testjig_v1.c: 1451: clear_lcd();
  4626  0F81  3181  219A  3188   	fcall	_clear_lcd
  4627                           
  4628                           ;Multi_RX_testjig_v1.c: 1452: i2c_first_line();
  4629  0F84  3181  2189  3188   	fcall	_i2c_first_line
  4630                           
  4631                           ;Multi_RX_testjig_v1.c: 1453: i2c_Write_string(top);
  4632  0F87  0879               	movf	print_error@top+1,w
  4633  0F88  00F2               	movwf	i2c_Write_string@data+1
  4634  0F89  0878               	movf	print_error@top,w
  4635  0F8A  00F1               	movwf	i2c_Write_string@data
  4636  0F8B  3181  21C7  3188   	fcall	_i2c_Write_string
  4637                           
  4638                           ;Multi_RX_testjig_v1.c: 1454: i2c_second_line();
  4639  0F8E  3181  2178  3188   	fcall	_i2c_second_line
  4640                           
  4641                           ;Multi_RX_testjig_v1.c: 1455: i2c_Write_string(bottom);
  4642  0F91  087B               	movf	print_error@bottom+1,w
  4643  0F92  00F2               	movwf	i2c_Write_string@data+1
  4644  0F93  087A               	movf	print_error@bottom,w
  4645  0F94  00F1               	movwf	i2c_Write_string@data
  4646  0F95  3181  21C7  3188   	fcall	_i2c_Write_string
  4647                           
  4648                           ;Multi_RX_testjig_v1.c: 1456: _delay((unsigned long)((2000)*(16000000/4000.0)));
  4649  0F98  3029               	movlw	41
  4650  0F99  0020               	movlb	0	; select bank0
  4651  0F9A  00A2               	movwf	??_print_error+2
  4652  0F9B  3096               	movlw	150
  4653  0F9C  00A1               	movwf	??_print_error+1
  4654  0F9D  30A6               	movlw	166
  4655  0F9E  00A0               	movwf	??_print_error
  4656  0F9F                     u4437:	
  4657  0F9F  0BA0               	decfsz	??_print_error,f
  4658  0FA0  2F9F               	goto	u4437
  4659  0FA1  0BA1               	decfsz	??_print_error+1,f
  4660  0FA2  2F9F               	goto	u4437
  4661  0FA3  0BA2               	decfsz	??_print_error+2,f
  4662  0FA4  2F9F               	goto	u4437
  4663                           
  4664                           ;Multi_RX_testjig_v1.c: 1457: print_screen("Press START", " to restart test");
  4665  0FA5  3090               	movlw	low ((STR_168+1)| (0+32768))
  4666  0FA6  00F4               	movwf	print_screen@top
  4667  0FA7  3091               	movlw	high ((STR_168+1)| (0+32768))
  4668  0FA8  00F5               	movwf	print_screen@top+1
  4669  0FA9  306A               	movlw	low (STR_170| (0+32768))
  4670  0FAA  00F6               	movwf	print_screen@bottom
  4671  0FAB  3090               	movlw	high (STR_170| (0+32768))
  4672  0FAC  00F7               	movwf	print_screen@bottom+1
  4673  0FAD  2757  3188         	fcall	_print_screen
  4674                           
  4675                           ;Multi_RX_testjig_v1.c: 1459: _delay((unsigned long)((1200)*(16000000/4000.0)));
  4676  0FAF  3019               	movlw	25
  4677  0FB0  0020               	movlb	0	; select bank0
  4678  0FB1  00A2               	movwf	??_print_error+2
  4679  0FB2  305A               	movlw	90
  4680  0FB3  00A1               	movwf	??_print_error+1
  4681  0FB4  30C8               	movlw	200
  4682  0FB5  00A0               	movwf	??_print_error
  4683  0FB6                     u4447:	
  4684  0FB6  0BA0               	decfsz	??_print_error,f
  4685  0FB7  2FB6               	goto	u4447
  4686  0FB8  0BA1               	decfsz	??_print_error+1,f
  4687  0FB9  2FB6               	goto	u4447
  4688  0FBA  0BA2               	decfsz	??_print_error+2,f
  4689  0FBB  2FB6               	goto	u4447
  4690  0FBC  3200               	nop2
  4691  0FBD  2F81               	goto	l3072
  4692  0FBE                     __end_of_print_error:	
  4693  0FBE                     __ptext27:	
  4694 ;; *************** function _ADC_get_val *****************
  4695 ;; Defined at:
  4696 ;;		line 1818 in file "Multi_RX_testjig_v1.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  channel         1    wreg     unsigned char 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  channel         1    3[COMMON] unsigned char 
  4701 ;;  return_val      2    4[COMMON] unsigned int 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  2    0[COMMON] unsigned int 
  4704 ;; Registers used:
  4705 ;;		wreg
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/5
  4708 ;;		On exit  : 1F/1
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4711 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4712 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4714 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4715 ;;Total ram usage:        6 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    1
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_main
  4722 ;;		_get_30v_current
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           
  4727                           ;psect for function _ADC_get_val
  4728  0FBE                     _ADC_get_val:	
  4729                           
  4730                           ;incstack = 0
  4731                           ; Regs used in _ADC_get_val: [wreg]
  4732                           ;ADC_get_val@channel stored from wreg
  4733  0FBE  00F3               	movwf	ADC_get_val@channel
  4734                           
  4735                           ;Multi_RX_testjig_v1.c: 1820: unsigned int return_val;
  4736                           ;Multi_RX_testjig_v1.c: 1821: GIE = 0;
  4737  0FBF  138B               	bcf	11,7	;volatile
  4738                           
  4739                           ;Multi_RX_testjig_v1.c: 1822: ADCON0 = channel;
  4740  0FC0  0873               	movf	ADC_get_val@channel,w
  4741  0FC1  0021               	movlb	1	; select bank1
  4742  0FC2  009D               	movwf	29	;volatile
  4743  0FC3                     l631:	
  4744                           ;Multi_RX_testjig_v1.c: 1823: while(ADCON0bits.GO_nDONE == 1);
  4745                           
  4746  0FC3  189D               	btfsc	29,1	;volatile
  4747  0FC4  2FC3               	goto	l631
  4748                           
  4749                           ;Multi_RX_testjig_v1.c: 1824: return_val = ADRESH << 8 | ADRESL;
  4750  0FC5  081C               	movf	28,w	;volatile
  4751  0FC6  00F5               	movwf	ADC_get_val@return_val+1
  4752  0FC7  01F4               	clrf	ADC_get_val@return_val
  4753  0FC8  081B               	movf	27,w	;volatile
  4754  0FC9  04F4               	iorwf	ADC_get_val@return_val,f
  4755                           
  4756                           ;Multi_RX_testjig_v1.c: 1825: GIE = 1;
  4757  0FCA  178B               	bsf	11,7	;volatile
  4758                           
  4759                           ;Multi_RX_testjig_v1.c: 1826: return return_val;
  4760  0FCB  0875               	movf	ADC_get_val@return_val+1,w
  4761  0FCC  00F1               	movwf	?_ADC_get_val+1
  4762  0FCD  0874               	movf	ADC_get_val@return_val,w
  4763  0FCE  00F0               	movwf	?_ADC_get_val
  4764  0FCF  0008               	return
  4765  0FD0                     __end_of_ADC_get_val:	
  4766  0FD0                     __ptext8:	
  4767 ;; *************** function _power_supply_set *****************
  4768 ;; Defined at:
  4769 ;;		line 1842 in file "Multi_RX_testjig_v1.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;  supply          1    wreg     unsigned char 
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;  supply          1    0[COMMON] unsigned char 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      void 
  4776 ;; Registers used:
  4777 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/4
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4786 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4787 ;;Total ram usage:        1 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:    1
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		_main
  4794 ;;		_testjig_done
  4795 ;;		_print_error
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           
  4800                           ;psect for function _power_supply_set
  4801  0FD0                     _power_supply_set:	
  4802                           
  4803                           ;incstack = 0
  4804                           ; Regs used in _power_supply_set: [wreg-fsr0h+status,2+status,0]
  4805                           ;power_supply_set@supply stored from wreg
  4806  0FD0  00F0               	movwf	power_supply_set@supply
  4807                           
  4808                           ;Multi_RX_testjig_v1.c: 1844: switch(supply)
  4809  0FD1  2FE6               	goto	l2690
  4810  0FD2                     l641:	
  4811                           ;Multi_RX_testjig_v1.c: 1845: {
  4812                           ;Multi_RX_testjig_v1.c: 1846: case 0:
  4813                           
  4814                           
  4815                           ;Multi_RX_testjig_v1.c: 1847: LATD4 = 1;
  4816  0FD2  0022               	movlb	2	; select bank2
  4817  0FD3  160F               	bsf	15,4	;volatile
  4818                           
  4819                           ;Multi_RX_testjig_v1.c: 1848: LATD5 = 1;
  4820  0FD4  168F               	bsf	15,5	;volatile
  4821                           
  4822                           ;Multi_RX_testjig_v1.c: 1849: LATD6 = 1;
  4823  0FD5  170F               	bsf	15,6	;volatile
  4824                           
  4825                           ;Multi_RX_testjig_v1.c: 1850: break;
  4826  0FD6  0008               	return
  4827  0FD7                     l643:	
  4828                           ;Multi_RX_testjig_v1.c: 1851: case 1:
  4829                           
  4830                           
  4831                           ;Multi_RX_testjig_v1.c: 1852: LATD4 = 1;
  4832  0FD7  0022               	movlb	2	; select bank2
  4833  0FD8  160F               	bsf	15,4	;volatile
  4834                           
  4835                           ;Multi_RX_testjig_v1.c: 1853: LATD5 = 0;
  4836  0FD9  128F               	bcf	15,5	;volatile
  4837                           
  4838                           ;Multi_RX_testjig_v1.c: 1854: LATD6 = 1;
  4839  0FDA  170F               	bsf	15,6	;volatile
  4840                           
  4841                           ;Multi_RX_testjig_v1.c: 1855: break;
  4842  0FDB  0008               	return
  4843  0FDC                     l644:	
  4844                           ;Multi_RX_testjig_v1.c: 1856: case 2:
  4845                           
  4846                           
  4847                           ;Multi_RX_testjig_v1.c: 1857: LATD4 = 0;
  4848  0FDC  0022               	movlb	2	; select bank2
  4849  0FDD  120F               	bcf	15,4	;volatile
  4850                           
  4851                           ;Multi_RX_testjig_v1.c: 1858: LATD5 = 0;
  4852  0FDE  128F               	bcf	15,5	;volatile
  4853                           
  4854                           ;Multi_RX_testjig_v1.c: 1859: LATD6 = 0;
  4855  0FDF  130F               	bcf	15,6	;volatile
  4856                           
  4857                           ;Multi_RX_testjig_v1.c: 1860: break;
  4858  0FE0  0008               	return
  4859  0FE1                     l645:	
  4860                           ;Multi_RX_testjig_v1.c: 1861: case 3:
  4861                           
  4862                           
  4863                           ;Multi_RX_testjig_v1.c: 1862: LATD4 = 0;
  4864  0FE1  0022               	movlb	2	; select bank2
  4865  0FE2  120F               	bcf	15,4	;volatile
  4866                           
  4867                           ;Multi_RX_testjig_v1.c: 1863: LATD5 = 0;
  4868  0FE3  128F               	bcf	15,5	;volatile
  4869                           
  4870                           ;Multi_RX_testjig_v1.c: 1864: LATD6 = 1;
  4871  0FE4  170F               	bsf	15,6	;volatile
  4872                           
  4873                           ;Multi_RX_testjig_v1.c: 1865: break;
  4874  0FE5  0008               	return
  4875  0FE6                     l2690:	
  4876  0FE6  0870               	movf	power_supply_set@supply,w
  4877                           
  4878                           ; Switch size 1, requested type "speed"
  4879                           ; Number of cases is 4, Range of values is 0 to 3
  4880                           ; switch strategies available:
  4881                           ; Name         Instructions Cycles
  4882                           ; direct_byte           14     6 (fixed)
  4883                           ; simple_byte           13     7 (average)
  4884                           ; jumptable            260     6 (fixed)
  4885                           ;	Chosen strategy is direct_byte
  4886  0FE7  0084               	movwf	4
  4887  0FE8  3004               	movlw	4
  4888  0FE9  0204               	subwf	4,w
  4889  0FEA  1803               	skipnc
  4890  0FEB  0008               	return
  4891  0FEC  3186               	movlp	high S3944
  4892  0FED  3504               	lslf	4,w
  4893  0FEE  3E73               	addlw	low S3944
  4894  0FEF  0082               	movwf	2
  4895  0FF0  0008               	return
  4896  0FF1                     __end_of_power_supply_set:	
  4897  0FF1                     __ptext10:	
  4898 ;; *************** function _buzz_one *****************
  4899 ;; Defined at:
  4900 ;;		line 967 in file "Multi_RX_testjig_v1.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  time            2    0[COMMON] unsigned int 
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 1F/2
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4918 ;;Total ram usage:        2 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    1
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_main
  4925 ;;		_testjig_done
  4926 ;;		_print_error
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           
  4931                           ;psect for function _buzz_one
  4932  0FF1                     _buzz_one:	
  4933                           
  4934                           ;Multi_RX_testjig_v1.c: 969: buzz_timer = time;
  4935                           
  4936                           ;incstack = 0
  4937                           ; Regs used in _buzz_one: [wreg]
  4938  0FF1  0871               	movf	buzz_one@time+1,w
  4939  0FF2  0021               	movlb	1	; select bank1
  4940  0FF3  00A1               	movwf	(_buzz_timer+1)^(0+128)	;volatile
  4941  0FF4  0870               	movf	buzz_one@time,w
  4942  0FF5  00A0               	movwf	_buzz_timer^(0+128)	;volatile
  4943                           
  4944                           ;Multi_RX_testjig_v1.c: 970: LATC5 = 1;
  4945  0FF6  0022               	movlb	2	; select bank2
  4946  0FF7  168E               	bsf	14,5	;volatile
  4947  0FF8  0008               	return
  4948  0FF9                     __end_of_buzz_one:	
  4949  0FF9                     __ptext20:	
  4950 ;; *************** function _init_ADC *****************
  4951 ;; Defined at:
  4952 ;;		line 1811 in file "Multi_RX_testjig_v1.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;		None
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;		None
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  1    wreg      void 
  4959 ;; Registers used:
  4960 ;;		wreg
  4961 ;; Tracked objects:
  4962 ;;		On entry : B1F/8
  4963 ;;		On exit  : B1F/1
  4964 ;;		Unchanged: B00/0
  4965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4970 ;;Total ram usage:        0 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; Hardware stack levels required when called:    1
  4973 ;; This function calls:
  4974 ;;		Nothing
  4975 ;; This function is called by:
  4976 ;;		_main
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           
  4981                           ;psect for function _init_ADC
  4982  0FF9                     _init_ADC:	
  4983                           
  4984                           ;Multi_RX_testjig_v1.c: 1813: FVRCON = 0b10000011;
  4985                           
  4986                           ;incstack = 0
  4987                           ; Regs used in _init_ADC: [wreg]
  4988  0FF9  3083               	movlw	131
  4989  0FFA  0022               	movlb	2	; select bank2
  4990  0FFB  0097               	movwf	23	;volatile
  4991                           
  4992                           ;Multi_RX_testjig_v1.c: 1815: ADCON1 = 0b10100011;
  4993  0FFC  30A3               	movlw	163
  4994  0FFD  0021               	movlb	1	; select bank1
  4995  0FFE  009E               	movwf	30	;volatile
  4996  0FFF  0008               	return
  4997  1000                     __end_of_init_ADC:	
  4998                           
  4999                           	psect	text1
  5000  0520                     __ptext1:	
  5001 ;; *************** function _testjig_done *****************
  5002 ;; Defined at:
  5003 ;;		line 926 in file "Multi_RX_testjig_v1.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  state           1    wreg     unsigned char 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  state           1   11[COMMON] unsigned char 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  1    wreg      void 
  5010 ;; Registers used:
  5011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/1
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5019 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5020 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5021 ;;Total ram usage:        4 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:    4
  5024 ;; This function calls:
  5025 ;;		_buzz_one
  5026 ;;		_debug_fast_tx
  5027 ;;		_power_supply_set
  5028 ;;		_print_screen
  5029 ;; This function is called by:
  5030 ;;		_main
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           
  5035                           ;psect for function _testjig_done
  5036  0520                     _testjig_done:	
  5037                           
  5038                           ;incstack = 0
  5039                           ; Regs used in _testjig_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5040                           ;testjig_done@state stored from wreg
  5041  0520  00FB               	movwf	testjig_done@state
  5042  0521                     l441:	
  5043                           ;Multi_RX_testjig_v1.c: 928: while(1)
  5044                           
  5045                           
  5046                           ;Multi_RX_testjig_v1.c: 929: {
  5047                           ;Multi_RX_testjig_v1.c: 930: power_supply_set(3);
  5048  0521  3003               	movlw	3
  5049  0522  318F  27D0  3185   	fcall	_power_supply_set
  5050                           
  5051                           ;Multi_RX_testjig_v1.c: 931: LATA7 = 0;
  5052  0525  0022               	movlb	2	; select bank2
  5053  0526  138C               	bcf	12,7	;volatile
  5054                           
  5055                           ;Multi_RX_testjig_v1.c: 932: LATB5 = 0;
  5056  0527  128D               	bcf	13,5	;volatile
  5057                           
  5058                           ;Multi_RX_testjig_v1.c: 933: LATA6 = 0;
  5059  0528  130C               	bcf	12,6	;volatile
  5060                           
  5061                           ;Multi_RX_testjig_v1.c: 934: debug_fast_tx(11110);
  5062  0529  3066               	movlw	102
  5063  052A  00F0               	movwf	debug_fast_tx@data
  5064  052B  302B               	movlw	43
  5065  052C  00F1               	movwf	debug_fast_tx@data+1
  5066  052D  25E6  3185         	fcall	_debug_fast_tx
  5067                           
  5068                           ;Multi_RX_testjig_v1.c: 935: debug_fast_tx(state);
  5069  052F  087B               	movf	testjig_done@state,w
  5070  0530  00F0               	movwf	debug_fast_tx@data
  5071  0531  01F1               	clrf	debug_fast_tx@data+1
  5072  0532  25E6  3185         	fcall	_debug_fast_tx
  5073                           
  5074                           ;Multi_RX_testjig_v1.c: 936: switch(state)
  5075  0534  2DA4               	goto	l3046
  5076  0535                     l3020:	
  5077                           
  5078                           ;Multi_RX_testjig_v1.c: 939: print_screen("Testjig Pass", " Remove board");
  5079  0535  30B6               	movlw	low (STR_159| (0+32768))
  5080  0536  00F4               	movwf	print_screen@top
  5081  0537  3091               	movlw	high (STR_159| (0+32768))
  5082  0538  00F5               	movwf	print_screen@top+1
  5083  0539  3023               	movlw	low (STR_160| (0+32768))
  5084  053A  00F6               	movwf	print_screen@bottom
  5085  053B  3091               	movlw	high (STR_160| (0+32768))
  5086  053C  00F7               	movwf	print_screen@bottom+1
  5087  053D  318F  2757  3185   	fcall	_print_screen
  5088                           
  5089                           ;Multi_RX_testjig_v1.c: 940: debug_fast_tx(11111);
  5090  0540  3067               	movlw	103
  5091  0541  00F0               	movwf	debug_fast_tx@data
  5092  0542  302B               	movlw	43
  5093  0543  00F1               	movwf	debug_fast_tx@data+1
  5094  0544  25E6               	fcall	_debug_fast_tx
  5095                           
  5096                           ;Multi_RX_testjig_v1.c: 941: buzz_one(100);
  5097  0545  3064               	movlw	100
  5098  0546  00F0               	movwf	buzz_one@time
  5099  0547  01F1               	clrf	buzz_one@time+1
  5100  0548  318F  27F1  3185   	fcall	_buzz_one
  5101                           
  5102                           ;Multi_RX_testjig_v1.c: 942: _delay((unsigned long)((200)*(16000000/4000.0)));
  5103  054B  3005               	movlw	5
  5104  054C  00FA               	movwf	??_testjig_done+2
  5105  054D  300F               	movlw	15
  5106  054E  00F9               	movwf	??_testjig_done+1
  5107  054F  30F4               	movlw	244
  5108  0550  00F8               	movwf	??_testjig_done
  5109  0551                     u4377:	
  5110  0551  0BF8               	decfsz	??_testjig_done,f
  5111  0552  2D51               	goto	u4377
  5112  0553  0BF9               	decfsz	??_testjig_done+1,f
  5113  0554  2D51               	goto	u4377
  5114  0555  0BFA               	decfsz	??_testjig_done+2,f
  5115  0556  2D51               	goto	u4377
  5116                           
  5117                           ;Multi_RX_testjig_v1.c: 943: buzz_one(100);
  5118  0557  3064               	movlw	100
  5119  0558  00F0               	movwf	buzz_one@time
  5120  0559  01F1               	clrf	buzz_one@time+1
  5121  055A  318F  27F1  3185   	fcall	_buzz_one
  5122  055D                     l444:	
  5123                           ;Multi_RX_testjig_v1.c: 944: while(RF3 == 0);
  5124                           
  5125  055D  0025               	movlb	5	; select bank5
  5126  055E  1D8C               	btfss	12,3	;volatile
  5127  055F  2D5D               	goto	l444
  5128                           
  5129                           ;Multi_RX_testjig_v1.c: 945: _delay((unsigned long)((100)*(16000000/4000.0)));
  5130  0560  3003               	movlw	3
  5131  0561  00FA               	movwf	??_testjig_done+2
  5132  0562  3008               	movlw	8
  5133  0563  00F9               	movwf	??_testjig_done+1
  5134  0564  3078               	movlw	120
  5135  0565  00F8               	movwf	??_testjig_done
  5136  0566                     u4387:	
  5137  0566  0BF8               	decfsz	??_testjig_done,f
  5138  0567  2D66               	goto	u4387
  5139  0568  0BF9               	decfsz	??_testjig_done+1,f
  5140  0569  2D66               	goto	u4387
  5141  056A  0BFA               	decfsz	??_testjig_done+2,f
  5142  056B  2D66               	goto	u4387
  5143  056C  2DA1               	goto	l3042
  5144  056D                     l3032:	
  5145                           ;Multi_RX_testjig_v1.c: 947: break;
  5146                           
  5147                           ;Multi_RX_testjig_v1.c: 946: state = 0xFF;
  5148                           
  5149                           
  5150                           ;Multi_RX_testjig_v1.c: 949: debug_fast_tx(11112);
  5151  056D  3068               	movlw	104
  5152  056E  00F0               	movwf	debug_fast_tx@data
  5153  056F  302B               	movlw	43
  5154  0570  00F1               	movwf	debug_fast_tx@data+1
  5155  0571  25E6               	fcall	_debug_fast_tx
  5156                           
  5157                           ;Multi_RX_testjig_v1.c: 950: print_screen("Multi_RX", "Testjig");
  5158  0572  30C1               	movlw	low (STR_1| (0+32768))
  5159  0573  00F4               	movwf	print_screen@top
  5160  0574  3092               	movlw	high (STR_1| (0+32768))
  5161  0575  00F5               	movwf	print_screen@top+1
  5162  0576  302F               	movlw	low ((STR_165+9)| (0+32768))
  5163  0577  00F6               	movwf	print_screen@bottom
  5164  0578  3090               	movlw	high ((STR_165+9)| (0+32768))
  5165  0579  00F7               	movwf	print_screen@bottom+1
  5166  057A  318F  2757  3185   	fcall	_print_screen
  5167                           
  5168                           ;Multi_RX_testjig_v1.c: 951: _delay((unsigned long)((2000)*(16000000/4000.0)));
  5169  057D  3029               	movlw	41
  5170  057E  00FA               	movwf	??_testjig_done+2
  5171  057F  3096               	movlw	150
  5172  0580  00F9               	movwf	??_testjig_done+1
  5173  0581  30A6               	movlw	166
  5174  0582  00F8               	movwf	??_testjig_done
  5175  0583                     u4397:	
  5176  0583  0BF8               	decfsz	??_testjig_done,f
  5177  0584  2D83               	goto	u4397
  5178  0585  0BF9               	decfsz	??_testjig_done+1,f
  5179  0586  2D83               	goto	u4397
  5180  0587  0BFA               	decfsz	??_testjig_done+2,f
  5181  0588  2D83               	goto	u4397
  5182                           
  5183                           ;Multi_RX_testjig_v1.c: 952: print_screen("Testjig Power-up", "wait...");
  5184  0589  3048               	movlw	low (STR_163| (0+32768))
  5185  058A  00F4               	movwf	print_screen@top
  5186  058B  3090               	movlw	high (STR_163| (0+32768))
  5187  058C  00F5               	movwf	print_screen@top+1
  5188  058D  30D3               	movlw	low (STR_164| (0+32768))
  5189  058E  00F6               	movwf	print_screen@bottom
  5190  058F  3092               	movlw	high (STR_164| (0+32768))
  5191  0590  00F7               	movwf	print_screen@bottom+1
  5192  0591  318F  2757  3185   	fcall	_print_screen
  5193                           
  5194                           ;Multi_RX_testjig_v1.c: 953: _delay((unsigned long)((3000)*(16000000/4000.0)));
  5195  0594  303D               	movlw	61
  5196  0595  00FA               	movwf	??_testjig_done+2
  5197  0596  30E1               	movlw	225
  5198  0597  00F9               	movwf	??_testjig_done+1
  5199  0598  307A               	movlw	122
  5200  0599  00F8               	movwf	??_testjig_done
  5201  059A                     u4407:	
  5202  059A  0BF8               	decfsz	??_testjig_done,f
  5203  059B  2D9A               	goto	u4407
  5204  059C  0BF9               	decfsz	??_testjig_done+1,f
  5205  059D  2D9A               	goto	u4407
  5206  059E  0BFA               	decfsz	??_testjig_done+2,f
  5207  059F  2D9A               	goto	u4407
  5208  05A0  3200               	nop2
  5209  05A1                     l3042:	
  5210                           
  5211                           ;Multi_RX_testjig_v1.c: 954: state = 0xFF;
  5212  05A1  30FF               	movlw	255
  5213  05A2  00FB               	movwf	testjig_done@state
  5214                           
  5215                           ;Multi_RX_testjig_v1.c: 955: break;
  5216  05A3  2DAC               	goto	l3048
  5217  05A4                     l3046:	
  5218  05A4  087B               	movf	testjig_done@state,w
  5219                           
  5220                           ; Switch size 1, requested type "speed"
  5221                           ; Number of cases is 2, Range of values is 1 to 2
  5222                           ; switch strategies available:
  5223                           ; Name         Instructions Cycles
  5224                           ; simple_byte            7     4 (average)
  5225                           ; direct_byte           13     9 (fixed)
  5226                           ; jumptable            263     9 (fixed)
  5227                           ;	Chosen strategy is simple_byte
  5228  05A5  3A01               	xorlw	1	; case 1
  5229  05A6  1903               	skipnz
  5230  05A7  2D35               	goto	l3020
  5231  05A8  3A03               	xorlw	3	; case 2
  5232  05A9  1903               	skipnz
  5233  05AA  2D6D               	goto	l3032
  5234  05AB  2DAC               	goto	l3048
  5235  05AC                     l3048:	
  5236                           
  5237                           ;Multi_RX_testjig_v1.c: 957: debug_fast_tx(11113);
  5238  05AC  3069               	movlw	105
  5239  05AD  00F0               	movwf	debug_fast_tx@data
  5240  05AE  302B               	movlw	43
  5241  05AF  00F1               	movwf	debug_fast_tx@data+1
  5242  05B0  25E6               	fcall	_debug_fast_tx
  5243                           
  5244                           ;Multi_RX_testjig_v1.c: 958: print_screen("Multi_RX Testjig", "-> Insert PCB");
  5245  05B1  3026               	movlw	low (STR_165| (0+32768))
  5246  05B2  00F4               	movwf	print_screen@top
  5247  05B3  3090               	movlw	high (STR_165| (0+32768))
  5248  05B4  00F5               	movwf	print_screen@top+1
  5249  05B5  3015               	movlw	low (STR_4| (0+32768))
  5250  05B6  00F6               	movwf	print_screen@bottom
  5251  05B7  3091               	movlw	high (STR_4| (0+32768))
  5252  05B8  00F7               	movwf	print_screen@bottom+1
  5253  05B9  318F  2757  3185   	fcall	_print_screen
  5254  05BC                     l449:	
  5255                           ;Multi_RX_testjig_v1.c: 959: while(RF3 == 1);
  5256                           
  5257  05BC  0025               	movlb	5	; select bank5
  5258  05BD  198C               	btfsc	12,3	;volatile
  5259  05BE  2DBC               	goto	l449
  5260                           
  5261                           ;Multi_RX_testjig_v1.c: 960: _delay((unsigned long)((100)*(16000000/4000.0)));
  5262  05BF  3003               	movlw	3
  5263  05C0  00FA               	movwf	??_testjig_done+2
  5264  05C1  3008               	movlw	8
  5265  05C2  00F9               	movwf	??_testjig_done+1
  5266  05C3  3078               	movlw	120
  5267  05C4  00F8               	movwf	??_testjig_done
  5268  05C5                     u4417:	
  5269  05C5  0BF8               	decfsz	??_testjig_done,f
  5270  05C6  2DC5               	goto	u4417
  5271  05C7  0BF9               	decfsz	??_testjig_done+1,f
  5272  05C8  2DC5               	goto	u4417
  5273  05C9  0BFA               	decfsz	??_testjig_done+2,f
  5274  05CA  2DC5               	goto	u4417
  5275                           
  5276                           ;Multi_RX_testjig_v1.c: 961: print_screen("Multi_RX Testjig", " Press START");
  5277  05CB  3026               	movlw	low (STR_165| (0+32768))
  5278  05CC  00F4               	movwf	print_screen@top
  5279  05CD  3090               	movlw	high (STR_165| (0+32768))
  5280  05CE  00F5               	movwf	print_screen@top+1
  5281  05CF  308F               	movlw	low (STR_168| (0+32768))
  5282  05D0  00F6               	movwf	print_screen@bottom
  5283  05D1  3091               	movlw	high (STR_168| (0+32768))
  5284  05D2  00F7               	movwf	print_screen@bottom+1
  5285  05D3  318F  2757  3185   	fcall	_print_screen
  5286  05D6                     l452:	
  5287                           ;Multi_RX_testjig_v1.c: 962: while(RF3 == 0);
  5288                           
  5289  05D6  0025               	movlb	5	; select bank5
  5290  05D7  1D8C               	btfss	12,3	;volatile
  5291  05D8  2DD6               	goto	l452
  5292                           
  5293                           ;Multi_RX_testjig_v1.c: 963: _delay((unsigned long)((100)*(16000000/4000.0)));
  5294  05D9  3003               	movlw	3
  5295  05DA  00FA               	movwf	??_testjig_done+2
  5296  05DB  3008               	movlw	8
  5297  05DC  00F9               	movwf	??_testjig_done+1
  5298  05DD  3078               	movlw	120
  5299  05DE  00F8               	movwf	??_testjig_done
  5300  05DF                     u4427:	
  5301  05DF  0BF8               	decfsz	??_testjig_done,f
  5302  05E0  2DDF               	goto	u4427
  5303  05E1  0BF9               	decfsz	??_testjig_done+1,f
  5304  05E2  2DDF               	goto	u4427
  5305  05E3  0BFA               	decfsz	??_testjig_done+2,f
  5306  05E4  2DDF               	goto	u4427
  5307  05E5  2D21               	goto	l441
  5308  05E6                     __end_of_testjig_done:	
  5309  05E6                     __ptext9:	
  5310 ;; *************** function _debug_fast_tx *****************
  5311 ;; Defined at:
  5312 ;;		line 1956 in file "Multi_RX_testjig_v1.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;  data            2    0[COMMON] unsigned int 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;  i               1    2[COMMON] unsigned char 
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  1    wreg      void 
  5319 ;; Registers used:
  5320 ;;		wreg, status,2, status,0
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/2
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5329 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5330 ;;Total ram usage:        3 bytes
  5331 ;; Hardware stack levels used:    1
  5332 ;; Hardware stack levels required when called:    1
  5333 ;; This function calls:
  5334 ;;		Nothing
  5335 ;; This function is called by:
  5336 ;;		_main
  5337 ;;		_testjig_done
  5338 ;;		_print_error
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           
  5343                           ;psect for function _debug_fast_tx
  5344  05E6                     _debug_fast_tx:	
  5345                           
  5346                           ;Multi_RX_testjig_v1.c: 1958: GIE = 0;
  5347                           
  5348                           ;incstack = 0
  5349                           ; Regs used in _debug_fast_tx: [wreg+status,2+status,0]
  5350  05E6  138B               	bcf	11,7	;volatile
  5351                           
  5352                           ;Multi_RX_testjig_v1.c: 1959: LATD2 = 0;
  5353  05E7  0022               	movlb	2	; select bank2
  5354  05E8  110F               	bcf	15,2	;volatile
  5355                           
  5356                           ;Multi_RX_testjig_v1.c: 1965: __nop();
  5357  05E9  0000               	nop
  5358                           
  5359                           ;Multi_RX_testjig_v1.c: 1966: __nop();
  5360  05EA  0000               	nop
  5361                           
  5362                           ;Multi_RX_testjig_v1.c: 1967: __nop();
  5363  05EB  0000               	nop
  5364                           
  5365                           ;Multi_RX_testjig_v1.c: 1968: __nop();
  5366  05EC  0000               	nop
  5367                           
  5368                           ;Multi_RX_testjig_v1.c: 1969: __nop();
  5369  05ED  0000               	nop
  5370                           
  5371                           ;Multi_RX_testjig_v1.c: 1970: __nop();
  5372  05EE  0000               	nop
  5373                           
  5374                           ;Multi_RX_testjig_v1.c: 1971: __nop();
  5375  05EF  0000               	nop
  5376                           
  5377                           ;Multi_RX_testjig_v1.c: 1972: __nop();
  5378  05F0  0000               	nop
  5379                           
  5380                           ;Multi_RX_testjig_v1.c: 1973: __nop();
  5381  05F1  0000               	nop
  5382                           
  5383                           ;Multi_RX_testjig_v1.c: 1974: unsigned char i;
  5384                           ;Multi_RX_testjig_v1.c: 1975: for(i = 0; i < 16; i++)
  5385  05F2  01F2               	clrf	debug_fast_tx@i
  5386  05F3                     l678:	
  5387                           
  5388                           ;Multi_RX_testjig_v1.c: 1976: {
  5389                           ;Multi_RX_testjig_v1.c: 1977: LATD2 = data & 0x01;
  5390  05F3  1C70               	btfss	debug_fast_tx@data,0
  5391  05F4  2DF8               	goto	u2290
  5392  05F5  0022               	movlb	2	; select bank2
  5393  05F6  150F               	bsf	15,2	;volatile
  5394  05F7  2DFA               	goto	l2682
  5395  05F8                     u2290:	
  5396  05F8  0022               	movlb	2	; select bank2
  5397  05F9  110F               	bcf	15,2	;volatile
  5398  05FA                     l2682:	
  5399  05FA  3010               	movlw	16
  5400                           
  5401                           ;Multi_RX_testjig_v1.c: 1978: data = data >> 1;
  5402  05FB  36F1               	lsrf	debug_fast_tx@data+1,f
  5403  05FC  0CF0               	rrf	debug_fast_tx@data,f
  5404  05FD  0AF2               	incf	debug_fast_tx@i,f
  5405  05FE  0272               	subwf	debug_fast_tx@i,w
  5406  05FF  1C03               	skipc
  5407  0600  2DF3               	goto	l678
  5408                           
  5409                           ;Multi_RX_testjig_v1.c: 1979: }
  5410                           ;Multi_RX_testjig_v1.c: 1980: __nop();
  5411  0601  0000               	nop
  5412                           
  5413                           ;Multi_RX_testjig_v1.c: 1981: __nop();
  5414  0602  0000               	nop
  5415                           
  5416                           ;Multi_RX_testjig_v1.c: 1982: __nop();
  5417  0603  0000               	nop
  5418                           
  5419                           ;Multi_RX_testjig_v1.c: 1983: __nop();
  5420  0604  0000               	nop
  5421                           
  5422                           ;Multi_RX_testjig_v1.c: 1984: __nop();
  5423  0605  0000               	nop
  5424                           
  5425                           ;Multi_RX_testjig_v1.c: 1985: __nop();
  5426  0606  0000               	nop
  5427                           
  5428                           ;Multi_RX_testjig_v1.c: 1986: LATD2 = 1;
  5429  0607  0022               	movlb	2	; select bank2
  5430  0608  150F               	bsf	15,2	;volatile
  5431                           
  5432                           ;Multi_RX_testjig_v1.c: 1987: __nop();
  5433  0609  0000               	nop
  5434                           
  5435                           ;Multi_RX_testjig_v1.c: 1988: __nop();
  5436  060A  0000               	nop
  5437                           
  5438                           ;Multi_RX_testjig_v1.c: 1989: __nop();
  5439  060B  0000               	nop
  5440                           
  5441                           ;Multi_RX_testjig_v1.c: 1990: __nop();
  5442  060C  0000               	nop
  5443                           
  5444                           ;Multi_RX_testjig_v1.c: 1991: __nop();
  5445  060D  0000               	nop
  5446                           
  5447                           ;Multi_RX_testjig_v1.c: 1992: __nop();
  5448  060E  0000               	nop
  5449                           
  5450                           ;Multi_RX_testjig_v1.c: 1993: __nop();
  5451  060F  0000               	nop
  5452                           
  5453                           ;Multi_RX_testjig_v1.c: 1994: __nop();
  5454  0610  0000               	nop
  5455                           
  5456                           ;Multi_RX_testjig_v1.c: 1995: GIE = 1;
  5457  0611  178B               	bsf	11,7	;volatile
  5458  0612  0008               	return
  5459  0613                     __end_of_debug_fast_tx:	
  5460                           
  5461                           	psect	swtext1
  5462  0673                     __pswtext1:	
  5463  0673                     S3944:	
  5464  0673  318F  2FD2         	ljmp	l641
  5465  0675  318F  2FD7         	ljmp	l643
  5466  0677  318F  2FDC         	ljmp	l644
  5467  0679  318F  2FE1         	ljmp	l645
  5468                           
  5469                           	psect	text18
  5470  063B                     __ptext18:	
  5471 ;; *************** function _init_i2c *****************
  5472 ;; Defined at:
  5473 ;;		line 1800 in file "Multi_RX_testjig_v1.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		wreg
  5482 ;; Tracked objects:
  5483 ;;		On entry : 1F/0
  5484 ;;		On exit  : 1F/4
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5489 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5490 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5491 ;;Total ram usage:        3 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    1
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_main
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           
  5502                           ;psect for function _init_i2c
  5503  063B                     _init_i2c:	
  5504                           
  5505                           ;Multi_RX_testjig_v1.c: 1802: RA5 = 1;
  5506                           
  5507                           ;incstack = 0
  5508                           ; Regs used in _init_i2c: [wreg]
  5509  063B  168C               	bsf	12,5	;volatile
  5510                           
  5511                           ;Multi_RX_testjig_v1.c: 1803: _delay((unsigned long)((200)*(16000000/4000.0)));
  5512  063C  3005               	movlw	5
  5513  063D  00F2               	movwf	??_init_i2c+2
  5514  063E  300F               	movlw	15
  5515  063F  00F1               	movwf	??_init_i2c+1
  5516  0640  30F4               	movlw	244
  5517  0641  00F0               	movwf	??_init_i2c
  5518  0642                     u4497:	
  5519  0642  0BF0               	decfsz	??_init_i2c,f
  5520  0643  2E42               	goto	u4497
  5521  0644  0BF1               	decfsz	??_init_i2c+1,f
  5522  0645  2E42               	goto	u4497
  5523  0646  0BF2               	decfsz	??_init_i2c+2,f
  5524  0647  2E42               	goto	u4497
  5525                           
  5526                           ;Multi_RX_testjig_v1.c: 1804: TRISC3 = 1;
  5527  0648  0021               	movlb	1	; select bank1
  5528  0649  158E               	bsf	14,3	;volatile
  5529                           
  5530                           ;Multi_RX_testjig_v1.c: 1805: TRISC4 = 1;
  5531  064A  160E               	bsf	14,4	;volatile
  5532                           
  5533                           ;Multi_RX_testjig_v1.c: 1806: SSP1STAT |= 0x80;
  5534  064B  0024               	movlb	4	; select bank4
  5535  064C  1794               	bsf	20,7	;volatile
  5536                           
  5537                           ;Multi_RX_testjig_v1.c: 1807: SSP1CON1 = 0x28;
  5538  064D  3028               	movlw	40
  5539  064E  0095               	movwf	21	;volatile
  5540                           
  5541                           ;Multi_RX_testjig_v1.c: 1808: SSP1ADD = 0x14;
  5542  064F  3014               	movlw	20
  5543  0650  0092               	movwf	18	;volatile
  5544  0651  0008               	return
  5545  0652                     __end_of_init_i2c:	
  5546                           
  5547                           	psect	text19
  5548  0652                     __ptext19:	
  5549 ;; *************** function _init_current_sink *****************
  5550 ;; Defined at:
  5551 ;;		line 1829 in file "Multi_RX_testjig_v1.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;		None
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;		None
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1    wreg      void 
  5558 ;; Registers used:
  5559 ;;		wreg, status,2
  5560 ;; Tracked objects:
  5561 ;;		On entry : B1F/1
  5562 ;;		On exit  : B1F/C
  5563 ;;		Unchanged: B00/0
  5564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5569 ;;Total ram usage:        0 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; Hardware stack levels required when called:    1
  5572 ;; This function calls:
  5573 ;;		Nothing
  5574 ;; This function is called by:
  5575 ;;		_main
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           
  5580                           ;psect for function _init_current_sink
  5581  0652                     _init_current_sink:	
  5582                           
  5583                           ;Multi_RX_testjig_v1.c: 1831: T2CON = 0b00000110;
  5584                           
  5585                           ;incstack = 0
  5586                           ; Regs used in _init_current_sink: [wreg+status,2]
  5587  0652  3006               	movlw	6
  5588  0653  0020               	movlb	0	; select bank0
  5589  0654  009C               	movwf	28	;volatile
  5590                           
  5591                           ;Multi_RX_testjig_v1.c: 1832: PR2 = 0xFA;
  5592  0655  30FA               	movlw	250
  5593  0656  009B               	movwf	27	;volatile
  5594                           
  5595                           ;Multi_RX_testjig_v1.c: 1833: PIE1bits.TMR2IE = 1;
  5596  0657  0021               	movlb	1	; select bank1
  5597  0658  1491               	bsf	17,1	;volatile
  5598                           
  5599                           ;Multi_RX_testjig_v1.c: 1835: T8CON = 0b00000100;
  5600  0659  3004               	movlw	4
  5601  065A  002B               	movlb	11	; select bank11
  5602  065B  0097               	movwf	23	;volatile
  5603                           
  5604                           ;Multi_RX_testjig_v1.c: 1836: PR8 = 0xFF;
  5605  065C  30FF               	movlw	255
  5606  065D  0096               	movwf	22	;volatile
  5607                           
  5608                           ;Multi_RX_testjig_v1.c: 1837: CCP9CON = 0b00001100;
  5609  065E  300C               	movlw	12
  5610  065F  002C               	movlb	12	; select bank12
  5611  0660  009C               	movwf	28	;volatile
  5612                           
  5613                           ;Multi_RX_testjig_v1.c: 1838: CCPTMRS2 = 0b00000001;
  5614  0661  3001               	movlw	1
  5615  0662  0025               	movlb	5	; select bank5
  5616  0663  009F               	movwf	31	;volatile
  5617                           
  5618                           ;Multi_RX_testjig_v1.c: 1839: CCPR9L = 0x00;
  5619  0664  002C               	movlb	12	; select bank12
  5620  0665  019A               	clrf	26	;volatile
  5621  0666  0008               	return
  5622  0667                     __end_of_init_current_sink:	
  5623                           
  5624                           	psect	text21
  5625  0317                     __ptext21:	
  5626 ;; *************** function _get_30v_current *****************
  5627 ;; Defined at:
  5628 ;;		line 1869 in file "Multi_RX_testjig_v1.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;		None
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  temp            2   39[BANK0 ] unsigned int 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  2   37[BANK0 ] unsigned int 
  5635 ;; Registers used:
  5636 ;;		wreg, status,2, status,0, pclath, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 1A/1
  5639 ;;		On exit  : 1F/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5642 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5643 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5645 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5646 ;;Total ram usage:        4 bytes
  5647 ;; Hardware stack levels used:    1
  5648 ;; Hardware stack levels required when called:    3
  5649 ;; This function calls:
  5650 ;;		_ADC_get_val
  5651 ;;		___ftadd
  5652 ;;		___ftmul
  5653 ;;		___fttol
  5654 ;;		___lwtoft
  5655 ;; This function is called by:
  5656 ;;		_main
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           
  5661                           ;psect for function _get_30v_current
  5662  0317                     _get_30v_current:	
  5663                           
  5664                           ;Multi_RX_testjig_v1.c: 1871: unsigned int temp;
  5665                           ;Multi_RX_testjig_v1.c: 1872: temp = ADC_get_val(0b01010011);
  5666                           
  5667                           ;incstack = 0
  5668                           ; Regs used in _get_30v_current: [wreg+status,2+status,0+pclath+cstack]
  5669  0317  3053               	movlw	83
  5670  0318  318F  27BE  3183   	fcall	_ADC_get_val
  5671  031B  0871               	movf	?_ADC_get_val+1,w
  5672  031C  0020               	movlb	0	; select bank0
  5673  031D  00C8               	movwf	get_30v_current@temp+1
  5674  031E  0870               	movf	?_ADC_get_val,w
  5675  031F  00C7               	movwf	get_30v_current@temp
  5676                           
  5677                           ;Multi_RX_testjig_v1.c: 1873: if(temp > 4)
  5678  0320  3000               	movlw	0
  5679  0321  0248               	subwf	get_30v_current@temp+1,w
  5680  0322  3005               	movlw	5
  5681  0323  1903               	skipnz
  5682  0324  0247               	subwf	get_30v_current@temp,w
  5683  0325  1C03               	skipc
  5684  0326  2B54               	goto	l3142
  5685                           
  5686                           ;Multi_RX_testjig_v1.c: 1874: return ( temp*3.4) - 16;
  5687  0327  0848               	movf	get_30v_current@temp+1,w
  5688  0328  00F9               	movwf	___lwtoft@c+1
  5689  0329  0847               	movf	get_30v_current@temp,w
  5690  032A  00F8               	movwf	___lwtoft@c
  5691  032B  24B3  3183         	fcall	___lwtoft
  5692  032D  0878               	movf	?___lwtoft,w
  5693  032E  00A3               	movwf	___ftmul@f2
  5694  032F  0879               	movf	?___lwtoft+1,w
  5695  0330  00A4               	movwf	___ftmul@f2+1
  5696  0331  087A               	movf	?___lwtoft+2,w
  5697  0332  00A5               	movwf	___ftmul@f2+2
  5698  0333  309A               	movlw	154
  5699  0334  00A0               	movwf	___ftmul@f1
  5700  0335  3059               	movlw	89
  5701  0336  00A1               	movwf	___ftmul@f1+1
  5702  0337  3040               	movlw	64
  5703  0338  00A2               	movwf	___ftmul@f1+2
  5704  0339  240B  3183         	fcall	___ftmul
  5705  033B  0820               	movf	?___ftmul,w
  5706  033C  00AF               	movwf	___ftadd@f2
  5707  033D  0821               	movf	?___ftmul+1,w
  5708  033E  00B0               	movwf	___ftadd@f2+1
  5709  033F  0822               	movf	?___ftmul+2,w
  5710  0340  00B1               	movwf	___ftadd@f2+2
  5711  0341  3080               	movlw	128
  5712  0342  01AC               	clrf	___ftadd@f1
  5713  0343  00AD               	movwf	___ftadd@f1+1
  5714  0344  30C1               	movlw	193
  5715  0345  00AE               	movwf	___ftadd@f1+2
  5716  0346  2357  3183         	fcall	___ftadd
  5717  0348  082C               	movf	?___ftadd,w
  5718  0349  00B8               	movwf	___fttol@f1
  5719  034A  082D               	movf	?___ftadd+1,w
  5720  034B  00B9               	movwf	___fttol@f1+1
  5721  034C  082E               	movf	?___ftadd+2,w
  5722  034D  00BA               	movwf	___fttol@f1+2
  5723  034E  24C3               	fcall	___fttol
  5724  034F  0839               	movf	?___fttol+1,w
  5725  0350  00C6               	movwf	?_get_30v_current+1
  5726  0351  0838               	movf	?___fttol,w
  5727  0352  00C5               	movwf	?_get_30v_current
  5728  0353  0008               	return
  5729  0354                     l3142:	
  5730                           
  5731                           ;Multi_RX_testjig_v1.c: 1875: else
  5732                           ;Multi_RX_testjig_v1.c: 1876: return 0;
  5733  0354  01C5               	clrf	?_get_30v_current
  5734  0355  01C6               	clrf	?_get_30v_current+1
  5735  0356  0008               	return
  5736  0357                     __end_of_get_30v_current:	
  5737  0357                     __ptext25:	
  5738 ;; *************** function ___ftadd *****************
  5739 ;; Defined at:
  5740 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  f1              3   12[BANK0 ] float 
  5743 ;;  f2              3   15[BANK0 ] float 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  exp1            1   23[BANK0 ] unsigned char 
  5746 ;;  exp2            1   22[BANK0 ] unsigned char 
  5747 ;;  sign            1   21[BANK0 ] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  3   12[BANK0 ] float 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0, pclath, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 1F/0
  5754 ;;		On exit  : 1F/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5757 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5758 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5759 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5760 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5761 ;;Total ram usage:       12 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:    2
  5764 ;; This function calls:
  5765 ;;		___ftpack
  5766 ;; This function is called by:
  5767 ;;		_get_30v_current
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           
  5772                           ;psect for function ___ftadd
  5773  0357                     ___ftadd:	
  5774                           
  5775                           ;incstack = 0
  5776                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5777  0357  082C               	movf	___ftadd@f1,w
  5778  0358  00B2               	movwf	??___ftadd
  5779  0359  082D               	movf	___ftadd@f1+1,w
  5780  035A  00B3               	movwf	??___ftadd+1
  5781  035B  082E               	movf	___ftadd@f1+2,w
  5782  035C  00B4               	movwf	??___ftadd+2
  5783  035D  1003               	clrc
  5784  035E  0D33               	rlf	??___ftadd+1,w
  5785  035F  0D34               	rlf	??___ftadd+2,w
  5786  0360  00B7               	movwf	___ftadd@exp1
  5787  0361  082F               	movf	___ftadd@f2,w
  5788  0362  00B2               	movwf	??___ftadd
  5789  0363  0830               	movf	___ftadd@f2+1,w
  5790  0364  00B3               	movwf	??___ftadd+1
  5791  0365  0831               	movf	___ftadd@f2+2,w
  5792  0366  00B4               	movwf	??___ftadd+2
  5793  0367  1003               	clrc
  5794  0368  0D33               	rlf	??___ftadd+1,w
  5795  0369  0D34               	rlf	??___ftadd+2,w
  5796  036A  00B6               	movwf	___ftadd@exp2
  5797  036B  0837               	movf	___ftadd@exp1,w
  5798  036C  1903               	btfsc	3,2
  5799  036D  2B7A               	goto	l2798
  5800  036E  0836               	movf	___ftadd@exp2,w
  5801  036F  0237               	subwf	___ftadd@exp1,w
  5802  0370  0836               	movf	___ftadd@exp2,w
  5803  0371  1803               	skipnc
  5804  0372  2B82               	goto	L16
  5805  0373  00B2               	movwf	??___ftadd
  5806  0374  0837               	movf	___ftadd@exp1,w
  5807  0375  02B2               	subwf	??___ftadd,f
  5808  0376  3019               	movlw	25
  5809  0377  0232               	subwf	??___ftadd,w
  5810  0378  1C03               	skipc
  5811  0379  2B81               	goto	l2802
  5812  037A                     l2798:	
  5813  037A  082F               	movf	___ftadd@f2,w
  5814  037B  00AC               	movwf	?___ftadd
  5815  037C  0830               	movf	___ftadd@f2+1,w
  5816  037D  00AD               	movwf	?___ftadd+1
  5817  037E  0831               	movf	___ftadd@f2+2,w
  5818  037F  00AE               	movwf	?___ftadd+2
  5819  0380  0008               	return
  5820  0381                     l2802:	
  5821  0381  0836               	movf	___ftadd@exp2,w
  5822  0382                     L16:	
  5823  0382  1903               	btfsc	3,2
  5824  0383  0008               	return
  5825  0384  0837               	movf	___ftadd@exp1,w
  5826  0385  0236               	subwf	___ftadd@exp2,w
  5827  0386  1803               	skipnc
  5828  0387  2B90               	goto	l2808
  5829  0388  0837               	movf	___ftadd@exp1,w
  5830  0389  00B2               	movwf	??___ftadd
  5831  038A  0836               	movf	___ftadd@exp2,w
  5832  038B  02B2               	subwf	??___ftadd,f
  5833  038C  3019               	movlw	25
  5834  038D  0232               	subwf	??___ftadd,w
  5835  038E  1803               	btfsc	3,0
  5836  038F  0008               	return
  5837  0390                     l2808:	
  5838  0390  3006               	movlw	6
  5839  0391  00B5               	movwf	___ftadd@sign
  5840  0392  1BAE               	btfsc	___ftadd@f1+2,7
  5841  0393  17B5               	bsf	___ftadd@sign,7
  5842  0394  1BB1               	btfsc	___ftadd@f2+2,7
  5843  0395  1735               	bsf	___ftadd@sign,6
  5844  0396  17AD               	bsf	___ftadd@f1+1,7
  5845  0397  01AE               	clrf	___ftadd@f1+2
  5846  0398  17B0               	bsf	___ftadd@f2+1,7
  5847  0399  01B1               	clrf	___ftadd@f2+2
  5848  039A  0836               	movf	___ftadd@exp2,w
  5849  039B  0237               	subwf	___ftadd@exp1,w
  5850  039C  1803               	skipnc
  5851  039D  2BB5               	goto	l2830
  5852  039E                     l2820:	
  5853  039E  35AF               	lslf	___ftadd@f2,f
  5854  039F  0DB0               	rlf	___ftadd@f2+1,f
  5855  03A0  0DB1               	rlf	___ftadd@f2+2,f
  5856  03A1  03B6               	decf	___ftadd@exp2,f
  5857  03A2  0836               	movf	___ftadd@exp2,w
  5858  03A3  0637               	xorwf	___ftadd@exp1,w
  5859  03A4  1903               	skipnz
  5860  03A5  2BB0               	goto	l2828
  5861  03A6  03B5               	decf	___ftadd@sign,f
  5862  03A7  0835               	movf	___ftadd@sign,w
  5863  03A8  3907               	andlw	7
  5864  03A9  1903               	btfsc	3,2
  5865  03AA  2BB0               	goto	l2828
  5866  03AB  2B9E               	goto	l2820
  5867  03AC                     l2826:	
  5868  03AC  36AE               	lsrf	___ftadd@f1+2,f
  5869  03AD  0CAD               	rrf	___ftadd@f1+1,f
  5870  03AE  0CAC               	rrf	___ftadd@f1,f
  5871  03AF  0AB7               	incf	___ftadd@exp1,f
  5872  03B0                     l2828:	
  5873  03B0  0837               	movf	___ftadd@exp1,w
  5874  03B1  0636               	xorwf	___ftadd@exp2,w
  5875  03B2  1903               	btfsc	3,2
  5876  03B3  2BCF               	goto	l896
  5877  03B4  2BAC               	goto	l2826
  5878  03B5                     l2830:	
  5879  03B5  0837               	movf	___ftadd@exp1,w
  5880  03B6  0236               	subwf	___ftadd@exp2,w
  5881  03B7  1803               	skipnc
  5882  03B8  2BCF               	goto	l896
  5883  03B9                     l2832:	
  5884  03B9  35AC               	lslf	___ftadd@f1,f
  5885  03BA  0DAD               	rlf	___ftadd@f1+1,f
  5886  03BB  0DAE               	rlf	___ftadd@f1+2,f
  5887  03BC  03B7               	decf	___ftadd@exp1,f
  5888  03BD  0836               	movf	___ftadd@exp2,w
  5889  03BE  0637               	xorwf	___ftadd@exp1,w
  5890  03BF  1903               	skipnz
  5891  03C0  2BCB               	goto	l2840
  5892  03C1  03B5               	decf	___ftadd@sign,f
  5893  03C2  0835               	movf	___ftadd@sign,w
  5894  03C3  3907               	andlw	7
  5895  03C4  1903               	btfsc	3,2
  5896  03C5  2BCB               	goto	l2840
  5897  03C6  2BB9               	goto	l2832
  5898  03C7                     l2838:	
  5899  03C7  36B1               	lsrf	___ftadd@f2+2,f
  5900  03C8  0CB0               	rrf	___ftadd@f2+1,f
  5901  03C9  0CAF               	rrf	___ftadd@f2,f
  5902  03CA  0AB6               	incf	___ftadd@exp2,f
  5903  03CB                     l2840:	
  5904  03CB  0837               	movf	___ftadd@exp1,w
  5905  03CC  0636               	xorwf	___ftadd@exp2,w
  5906  03CD  1D03               	skipz
  5907  03CE  2BC7               	goto	l2838
  5908  03CF                     l896:	
  5909  03CF  1FB5               	btfss	___ftadd@sign,7
  5910  03D0  2BDA               	goto	l2846
  5911  03D1  30FF               	movlw	255
  5912  03D2  06AC               	xorwf	___ftadd@f1,f
  5913  03D3  06AD               	xorwf	___ftadd@f1+1,f
  5914  03D4  06AE               	xorwf	___ftadd@f1+2,f
  5915  03D5  0AAC               	incf	___ftadd@f1,f
  5916  03D6  1903               	skipnz
  5917  03D7  0AAD               	incf	___ftadd@f1+1,f
  5918  03D8  1903               	skipnz
  5919  03D9  0AAE               	incf	___ftadd@f1+2,f
  5920  03DA                     l2846:	
  5921  03DA  1F35               	btfss	___ftadd@sign,6
  5922  03DB  2BE5               	goto	l2852
  5923  03DC  30FF               	movlw	255
  5924  03DD  06AF               	xorwf	___ftadd@f2,f
  5925  03DE  06B0               	xorwf	___ftadd@f2+1,f
  5926  03DF  06B1               	xorwf	___ftadd@f2+2,f
  5927  03E0  0AAF               	incf	___ftadd@f2,f
  5928  03E1  1903               	skipnz
  5929  03E2  0AB0               	incf	___ftadd@f2+1,f
  5930  03E3  1903               	skipnz
  5931  03E4  0AB1               	incf	___ftadd@f2+2,f
  5932  03E5                     l2852:	
  5933  03E5  01B5               	clrf	___ftadd@sign
  5934  03E6  082C               	movf	___ftadd@f1,w
  5935  03E7  07AF               	addwf	___ftadd@f2,f
  5936  03E8  082D               	movf	___ftadd@f1+1,w
  5937  03E9  3DB0               	addwfc	___ftadd@f2+1,f
  5938  03EA  082E               	movf	___ftadd@f1+2,w
  5939  03EB  3DB1               	addwfc	___ftadd@f2+2,f
  5940  03EC  1FB1               	btfss	___ftadd@f2+2,7
  5941  03ED  2BF9               	goto	l2864
  5942  03EE  30FF               	movlw	255
  5943  03EF  06AF               	xorwf	___ftadd@f2,f
  5944  03F0  06B0               	xorwf	___ftadd@f2+1,f
  5945  03F1  06B1               	xorwf	___ftadd@f2+2,f
  5946  03F2  0AAF               	incf	___ftadd@f2,f
  5947  03F3  1903               	skipnz
  5948  03F4  0AB0               	incf	___ftadd@f2+1,f
  5949  03F5  1903               	skipnz
  5950  03F6  0AB1               	incf	___ftadd@f2+2,f
  5951  03F7  01B5               	clrf	___ftadd@sign
  5952  03F8  0AB5               	incf	___ftadd@sign,f
  5953  03F9                     l2864:	
  5954  03F9  082F               	movf	___ftadd@f2,w
  5955  03FA  00F0               	movwf	___ftpack@arg
  5956  03FB  0830               	movf	___ftadd@f2+1,w
  5957  03FC  00F1               	movwf	___ftpack@arg+1
  5958  03FD  0831               	movf	___ftadd@f2+2,w
  5959  03FE  00F2               	movwf	___ftpack@arg+2
  5960  03FF  0837               	movf	___ftadd@exp1,w
  5961  0400  00F3               	movwf	___ftpack@exp
  5962  0401  0835               	movf	___ftadd@sign,w
  5963  0402  00F4               	movwf	___ftpack@sign
  5964  0403  2475               	fcall	___ftpack
  5965  0404  0870               	movf	?___ftpack,w
  5966  0405  00AC               	movwf	?___ftadd
  5967  0406  0871               	movf	?___ftpack+1,w
  5968  0407  00AD               	movwf	?___ftadd+1
  5969  0408  0872               	movf	?___ftpack+2,w
  5970  0409  00AE               	movwf	?___ftadd+2
  5971  040A  0008               	return
  5972  040B                     __end_of___ftadd:	
  5973  040B                     __ptext24:	
  5974 ;; *************** function ___ftmul *****************
  5975 ;; Defined at:
  5976 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  f1              3    0[BANK0 ] float 
  5979 ;;  f2              3    3[BANK0 ] float 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  5982 ;;  sign            1   11[BANK0 ] unsigned char 
  5983 ;;  cntr            1   10[BANK0 ] unsigned char 
  5984 ;;  exp             1    6[BANK0 ] unsigned char 
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  3    0[BANK0 ] float 
  5987 ;; Registers used:
  5988 ;;		wreg, status,2, status,0, pclath, cstack
  5989 ;; Tracked objects:
  5990 ;;		On entry : 1F/0
  5991 ;;		On exit  : 1F/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5994 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5995 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5996 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5997 ;;      Totals:         3      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5998 ;;Total ram usage:       15 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:    2
  6001 ;; This function calls:
  6002 ;;		___ftpack
  6003 ;; This function is called by:
  6004 ;;		_get_30v_current
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           
  6009                           ;psect for function ___ftmul
  6010  040B                     ___ftmul:	
  6011                           
  6012                           ;incstack = 0
  6013                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6014  040B  0820               	movf	___ftmul@f1,w
  6015  040C  00FB               	movwf	??___ftmul
  6016  040D  0821               	movf	___ftmul@f1+1,w
  6017  040E  00FC               	movwf	??___ftmul+1
  6018  040F  0822               	movf	___ftmul@f1+2,w
  6019  0410  00FD               	movwf	??___ftmul+2
  6020  0411  1003               	clrc
  6021  0412  0D7C               	rlf	??___ftmul+1,w
  6022  0413  0D7D               	rlf	??___ftmul+2,w
  6023  0414  00A6               	movwf	___ftmul@exp
  6024  0415  0826               	movf	___ftmul@exp,w
  6025  0416  1D03               	btfss	3,2
  6026  0417  2C1C               	goto	l2872
  6027  0418  01A0               	clrf	?___ftmul
  6028  0419  01A1               	clrf	?___ftmul+1
  6029  041A  01A2               	clrf	?___ftmul+2
  6030  041B  0008               	return
  6031  041C                     l2872:	
  6032  041C  0823               	movf	___ftmul@f2,w
  6033  041D  00FB               	movwf	??___ftmul
  6034  041E  0824               	movf	___ftmul@f2+1,w
  6035  041F  00FC               	movwf	??___ftmul+1
  6036  0420  0825               	movf	___ftmul@f2+2,w
  6037  0421  00FD               	movwf	??___ftmul+2
  6038  0422  1003               	clrc
  6039  0423  0D7C               	rlf	??___ftmul+1,w
  6040  0424  0D7D               	rlf	??___ftmul+2,w
  6041  0425  00AB               	movwf	___ftmul@sign
  6042  0426  082B               	movf	___ftmul@sign,w
  6043  0427  1D03               	btfss	3,2
  6044  0428  2C2D               	goto	l2876
  6045  0429  01A0               	clrf	?___ftmul
  6046  042A  01A1               	clrf	?___ftmul+1
  6047  042B  01A2               	clrf	?___ftmul+2
  6048  042C  0008               	return
  6049  042D                     l2876:	
  6050  042D  082B               	movf	___ftmul@sign,w
  6051  042E  3E7B               	addlw	123
  6052  042F  07A6               	addwf	___ftmul@exp,f
  6053  0430  0822               	movf	___ftmul@f1+2,w
  6054  0431  00AB               	movwf	___ftmul@sign
  6055  0432  0825               	movf	___ftmul@f2+2,w
  6056  0433  06AB               	xorwf	___ftmul@sign,f
  6057  0434  3080               	movlw	128
  6058  0435  05AB               	andwf	___ftmul@sign,f
  6059  0436  30FF               	movlw	255
  6060  0437  17A1               	bsf	___ftmul@f1+1,7
  6061  0438  17A4               	bsf	___ftmul@f2+1,7
  6062  0439  05A3               	andwf	___ftmul@f2,f
  6063  043A  05A4               	andwf	___ftmul@f2+1,f
  6064  043B  3007               	movlw	7
  6065  043C  01A5               	clrf	___ftmul@f2+2
  6066  043D  01A7               	clrf	___ftmul@f3_as_product
  6067  043E  01A8               	clrf	___ftmul@f3_as_product+1
  6068  043F  01A9               	clrf	___ftmul@f3_as_product+2
  6069  0440  00AA               	movwf	___ftmul@cntr
  6070  0441                     l2894:	
  6071  0441  1C20               	btfss	___ftmul@f1,0
  6072  0442  2C49               	goto	l2898
  6073  0443  0823               	movf	___ftmul@f2,w
  6074  0444  07A7               	addwf	___ftmul@f3_as_product,f
  6075  0445  0824               	movf	___ftmul@f2+1,w
  6076  0446  3DA8               	addwfc	___ftmul@f3_as_product+1,f
  6077  0447  0825               	movf	___ftmul@f2+2,w
  6078  0448  3DA9               	addwfc	___ftmul@f3_as_product+2,f
  6079  0449                     l2898:	
  6080  0449  36A2               	lsrf	___ftmul@f1+2,f
  6081  044A  0CA1               	rrf	___ftmul@f1+1,f
  6082  044B  0CA0               	rrf	___ftmul@f1,f
  6083  044C  35A3               	lslf	___ftmul@f2,f
  6084  044D  0DA4               	rlf	___ftmul@f2+1,f
  6085  044E  0DA5               	rlf	___ftmul@f2+2,f
  6086  044F  0BAA               	decfsz	___ftmul@cntr,f
  6087  0450  2C41               	goto	l2894
  6088  0451  3009               	movlw	9
  6089  0452  00AA               	movwf	___ftmul@cntr
  6090  0453                     l2906:	
  6091  0453  1C20               	btfss	___ftmul@f1,0
  6092  0454  2C5B               	goto	l2910
  6093  0455  0823               	movf	___ftmul@f2,w
  6094  0456  07A7               	addwf	___ftmul@f3_as_product,f
  6095  0457  0824               	movf	___ftmul@f2+1,w
  6096  0458  3DA8               	addwfc	___ftmul@f3_as_product+1,f
  6097  0459  0825               	movf	___ftmul@f2+2,w
  6098  045A  3DA9               	addwfc	___ftmul@f3_as_product+2,f
  6099  045B                     l2910:	
  6100  045B  36A2               	lsrf	___ftmul@f1+2,f
  6101  045C  0CA1               	rrf	___ftmul@f1+1,f
  6102  045D  0CA0               	rrf	___ftmul@f1,f
  6103  045E  36A9               	lsrf	___ftmul@f3_as_product+2,f
  6104  045F  0CA8               	rrf	___ftmul@f3_as_product+1,f
  6105  0460  0CA7               	rrf	___ftmul@f3_as_product,f
  6106  0461  0BAA               	decfsz	___ftmul@cntr,f
  6107  0462  2C53               	goto	l2906
  6108  0463  0827               	movf	___ftmul@f3_as_product,w
  6109  0464  00F0               	movwf	___ftpack@arg
  6110  0465  0828               	movf	___ftmul@f3_as_product+1,w
  6111  0466  00F1               	movwf	___ftpack@arg+1
  6112  0467  0829               	movf	___ftmul@f3_as_product+2,w
  6113  0468  00F2               	movwf	___ftpack@arg+2
  6114  0469  0826               	movf	___ftmul@exp,w
  6115  046A  00F3               	movwf	___ftpack@exp
  6116  046B  082B               	movf	___ftmul@sign,w
  6117  046C  00F4               	movwf	___ftpack@sign
  6118  046D  2475               	fcall	___ftpack
  6119  046E  0870               	movf	?___ftpack,w
  6120  046F  00A0               	movwf	?___ftmul
  6121  0470  0871               	movf	?___ftpack+1,w
  6122  0471  00A1               	movwf	?___ftmul+1
  6123  0472  0872               	movf	?___ftpack+2,w
  6124  0473  00A2               	movwf	?___ftmul+2
  6125  0474  0008               	return
  6126  0475                     __end_of___ftmul:	
  6127  0475                     __ptext26:	
  6128 ;; *************** function ___ftpack *****************
  6129 ;; Defined at:
  6130 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  arg             3    0[COMMON] unsigned um
  6133 ;;  exp             1    3[COMMON] unsigned char 
  6134 ;;  sign            1    4[COMMON] unsigned char 
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;		None
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  3    0[COMMON] float 
  6139 ;; Registers used:
  6140 ;;		wreg, status,2, status,0
  6141 ;; Tracked objects:
  6142 ;;		On entry : 1F/0
  6143 ;;		On exit  : 1F/0
  6144 ;;		Unchanged: 1F/0
  6145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6146 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6148 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6149 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6150 ;;Total ram usage:        8 bytes
  6151 ;; Hardware stack levels used:    1
  6152 ;; Hardware stack levels required when called:    1
  6153 ;; This function calls:
  6154 ;;		Nothing
  6155 ;; This function is called by:
  6156 ;;		___ftadd
  6157 ;;		___ftmul
  6158 ;;		___lwtoft
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           
  6163                           ;psect for function ___ftpack
  6164  0475                     ___ftpack:	
  6165                           
  6166                           ;incstack = 0
  6167                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6168  0475  0873               	movf	___ftpack@exp,w
  6169  0476  1903               	btfsc	3,2
  6170  0477  2C7D               	goto	l860
  6171  0478  0872               	movf	___ftpack@arg+2,w
  6172  0479  0471               	iorwf	___ftpack@arg+1,w
  6173  047A  0470               	iorwf	___ftpack@arg,w
  6174  047B  1D03               	skipz
  6175  047C  2C85               	goto	l2646
  6176  047D                     l860:	
  6177  047D  01F0               	clrf	?___ftpack
  6178  047E  01F1               	clrf	?___ftpack+1
  6179  047F  01F2               	clrf	?___ftpack+2
  6180  0480  0008               	return
  6181  0481                     l2644:	
  6182  0481  0AF3               	incf	___ftpack@exp,f
  6183  0482  36F2               	lsrf	___ftpack@arg+2,f
  6184  0483  0CF1               	rrf	___ftpack@arg+1,f
  6185  0484  0CF0               	rrf	___ftpack@arg,f
  6186  0485                     l2646:	
  6187  0485  30FE               	movlw	254
  6188  0486  0572               	andwf	___ftpack@arg+2,w
  6189  0487  1903               	btfsc	3,2
  6190  0488  2C93               	goto	l2650
  6191  0489  2C81               	goto	l2644
  6192  048A                     l2648:	
  6193  048A  0AF3               	incf	___ftpack@exp,f
  6194  048B  0AF0               	incf	___ftpack@arg,f
  6195  048C  1903               	skipnz
  6196  048D  0AF1               	incf	___ftpack@arg+1,f
  6197  048E  1903               	skipnz
  6198  048F  0AF2               	incf	___ftpack@arg+2,f
  6199  0490  36F2               	lsrf	___ftpack@arg+2,f
  6200  0491  0CF1               	rrf	___ftpack@arg+1,f
  6201  0492  0CF0               	rrf	___ftpack@arg,f
  6202  0493                     l2650:	
  6203  0493  30FF               	movlw	255
  6204  0494  0572               	andwf	___ftpack@arg+2,w
  6205  0495  1903               	btfsc	3,2
  6206  0496  2CA0               	goto	l2654
  6207  0497  2C8A               	goto	l2648
  6208  0498                     l2656:	
  6209  0498  3002               	movlw	2
  6210  0499  0273               	subwf	___ftpack@exp,w
  6211  049A  1C03               	btfss	3,0
  6212  049B  2CA2               	goto	l872
  6213  049C  03F3               	decf	___ftpack@exp,f
  6214  049D  35F0               	lslf	___ftpack@arg,f
  6215  049E  0DF1               	rlf	___ftpack@arg+1,f
  6216  049F  0DF2               	rlf	___ftpack@arg+2,f
  6217  04A0                     l2654:	
  6218  04A0  1FF1               	btfss	___ftpack@arg+1,7
  6219  04A1  2C98               	goto	l2656
  6220  04A2                     l872:	
  6221  04A2  1C73               	btfss	___ftpack@exp,0
  6222  04A3  13F1               	bcf	___ftpack@arg+1,7
  6223  04A4  36F3               	lsrf	___ftpack@exp,f
  6224  04A5  0873               	movf	___ftpack@exp,w
  6225  04A6  00F7               	movwf	??___ftpack+2
  6226  04A7  01F6               	clrf	??___ftpack+1
  6227  04A8  01F5               	clrf	??___ftpack
  6228  04A9  0875               	movf	??___ftpack,w
  6229  04AA  04F0               	iorwf	___ftpack@arg,f
  6230  04AB  0876               	movf	??___ftpack+1,w
  6231  04AC  04F1               	iorwf	___ftpack@arg+1,f
  6232  04AD  0877               	movf	??___ftpack+2,w
  6233  04AE  04F2               	iorwf	___ftpack@arg+2,f
  6234  04AF  0874               	movf	___ftpack@sign,w
  6235  04B0  1D03               	btfss	3,2
  6236  04B1  17F2               	bsf	___ftpack@arg+2,7
  6237  04B2  0008               	return
  6238  04B3                     __end_of___ftpack:	
  6239  04B3                     __ptext22:	
  6240 ;; *************** function ___lwtoft *****************
  6241 ;; Defined at:
  6242 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;  c               2    8[COMMON] unsigned int 
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;		None
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  3    8[COMMON] float 
  6249 ;; Registers used:
  6250 ;;		wreg, status,2, status,0, pclath, cstack
  6251 ;; Tracked objects:
  6252 ;;		On entry : 1F/0
  6253 ;;		On exit  : 1F/0
  6254 ;;		Unchanged: 1F/0
  6255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6256 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6259 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6260 ;;Total ram usage:        3 bytes
  6261 ;; Hardware stack levels used:    1
  6262 ;; Hardware stack levels required when called:    2
  6263 ;; This function calls:
  6264 ;;		___ftpack
  6265 ;; This function is called by:
  6266 ;;		_get_30v_current
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           
  6271                           ;psect for function ___lwtoft
  6272  04B3                     ___lwtoft:	
  6273                           
  6274                           ;incstack = 0
  6275                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6276  04B3  0878               	movf	___lwtoft@c,w
  6277  04B4  00F0               	movwf	___ftpack@arg
  6278  04B5  0879               	movf	___lwtoft@c+1,w
  6279  04B6  00F1               	movwf	___ftpack@arg+1
  6280  04B7  308E               	movlw	142
  6281  04B8  01F2               	clrf	___ftpack@arg+2
  6282  04B9  00F3               	movwf	___ftpack@exp
  6283  04BA  01F4               	clrf	___ftpack@sign
  6284  04BB  2475               	fcall	___ftpack
  6285  04BC  0870               	movf	?___ftpack,w
  6286  04BD  00F8               	movwf	?___lwtoft
  6287  04BE  0871               	movf	?___ftpack+1,w
  6288  04BF  00F9               	movwf	?___lwtoft+1
  6289  04C0  0872               	movf	?___ftpack+2,w
  6290  04C1  00FA               	movwf	?___lwtoft+2
  6291  04C2  0008               	return
  6292  04C3                     __end_of___lwtoft:	
  6293  04C3                     __ptext23:	
  6294 ;; *************** function ___fttol *****************
  6295 ;; Defined at:
  6296 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  f1              3   24[BANK0 ] float 
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;  lval            4   32[BANK0 ] unsigned long 
  6301 ;;  exp1            1   36[BANK0 ] unsigned char 
  6302 ;;  sign1           1   31[BANK0 ] unsigned char 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  4   24[BANK0 ] long 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2, status,0
  6307 ;; Tracked objects:
  6308 ;;		On entry : 1F/0
  6309 ;;		On exit  : 1F/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6312 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6313 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6314 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6315 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6316 ;;Total ram usage:       13 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    1
  6319 ;; This function calls:
  6320 ;;		Nothing
  6321 ;; This function is called by:
  6322 ;;		_get_30v_current
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           
  6327                           ;psect for function ___fttol
  6328  04C3                     ___fttol:	
  6329                           
  6330                           ;incstack = 0
  6331                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6332  04C3  0838               	movf	___fttol@f1,w
  6333  04C4  00BC               	movwf	??___fttol
  6334  04C5  0839               	movf	___fttol@f1+1,w
  6335  04C6  00BD               	movwf	??___fttol+1
  6336  04C7  083A               	movf	___fttol@f1+2,w
  6337  04C8  00BE               	movwf	??___fttol+2
  6338  04C9  1003               	clrc
  6339  04CA  0D3D               	rlf	??___fttol+1,w
  6340  04CB  0D3E               	rlf	??___fttol+2,w
  6341  04CC  00C4               	movwf	___fttol@exp1
  6342  04CD  0844               	movf	___fttol@exp1,w
  6343  04CE  1D03               	btfss	3,2
  6344  04CF  2CD5               	goto	l2924
  6345  04D0                     l2922:	
  6346  04D0  01B8               	clrf	?___fttol
  6347  04D1  01B9               	clrf	?___fttol+1
  6348  04D2  01BA               	clrf	?___fttol+2
  6349  04D3  01BB               	clrf	?___fttol+3
  6350  04D4  0008               	return
  6351  04D5                     l2924:	
  6352  04D5  0838               	movf	___fttol@f1,w
  6353  04D6  00BC               	movwf	??___fttol
  6354  04D7  0839               	movf	___fttol@f1+1,w
  6355  04D8  00BD               	movwf	??___fttol+1
  6356  04D9  083A               	movf	___fttol@f1+2,w
  6357  04DA  00BE               	movwf	??___fttol+2
  6358  04DB  3017               	movlw	23
  6359  04DC                     u2665:	
  6360  04DC  36BE               	lsrf	??___fttol+2,f
  6361  04DD  0CBD               	rrf	??___fttol+1,f
  6362  04DE  0CBC               	rrf	??___fttol,f
  6363  04DF  0B89               	decfsz	9,f
  6364  04E0  2CDC               	goto	u2665
  6365  04E1  083C               	movf	??___fttol,w
  6366  04E2  00BF               	movwf	___fttol@sign1
  6367  04E3  17B9               	bsf	___fttol@f1+1,7
  6368  04E4  01BA               	clrf	___fttol@f1+2
  6369  04E5  0838               	movf	___fttol@f1,w
  6370  04E6  00C0               	movwf	___fttol@lval
  6371  04E7  0839               	movf	___fttol@f1+1,w
  6372  04E8  00C1               	movwf	___fttol@lval+1
  6373  04E9  083A               	movf	___fttol@f1+2,w
  6374  04EA  00C2               	movwf	___fttol@lval+2
  6375  04EB  308E               	movlw	142
  6376  04EC  01C3               	clrf	___fttol@lval+3
  6377  04ED  02C4               	subwf	___fttol@exp1,f
  6378  04EE  1FC4               	btfss	___fttol@exp1,7
  6379  04EF  2CFC               	goto	l2944
  6380  04F0  0844               	movf	___fttol@exp1,w
  6381  04F1  3A80               	xorlw	128
  6382  04F2  3E8F               	addlw	143
  6383  04F3  1C03               	btfss	3,0
  6384  04F4  2CD0               	goto	l2922
  6385  04F5                     l2940:	
  6386  04F5  36C3               	lsrf	___fttol@lval+3,f
  6387  04F6  0CC2               	rrf	___fttol@lval+2,f
  6388  04F7  0CC1               	rrf	___fttol@lval+1,f
  6389  04F8  0CC0               	rrf	___fttol@lval,f
  6390  04F9  0FC4               	incfsz	___fttol@exp1,f
  6391  04FA  2CF5               	goto	l2940
  6392  04FB  2D09               	goto	l2952
  6393  04FC                     l2944:	
  6394  04FC  3018               	movlw	24
  6395  04FD  0244               	subwf	___fttol@exp1,w
  6396  04FE  1803               	btfsc	3,0
  6397  04FF  2CD0               	goto	l2922
  6398  0500                     l2950:	
  6399  0500  0844               	movf	___fttol@exp1,w
  6400  0501  1903               	btfsc	3,2
  6401  0502  2D09               	goto	l2952
  6402  0503  35C0               	lslf	___fttol@lval,f
  6403  0504  0DC1               	rlf	___fttol@lval+1,f
  6404  0505  0DC2               	rlf	___fttol@lval+2,f
  6405  0506  0DC3               	rlf	___fttol@lval+3,f
  6406  0507  03C4               	decf	___fttol@exp1,f
  6407  0508  2D00               	goto	l2950
  6408  0509                     l2952:	
  6409  0509  083F               	movf	___fttol@sign1,w
  6410  050A  1903               	btfsc	3,2
  6411  050B  2D17               	goto	l2956
  6412  050C  09C0               	comf	___fttol@lval,f
  6413  050D  09C1               	comf	___fttol@lval+1,f
  6414  050E  09C2               	comf	___fttol@lval+2,f
  6415  050F  09C3               	comf	___fttol@lval+3,f
  6416  0510  0AC0               	incf	___fttol@lval,f
  6417  0511  1903               	skipnz
  6418  0512  0AC1               	incf	___fttol@lval+1,f
  6419  0513  1903               	skipnz
  6420  0514  0AC2               	incf	___fttol@lval+2,f
  6421  0515  1903               	skipnz
  6422  0516  0AC3               	incf	___fttol@lval+3,f
  6423  0517                     l2956:	
  6424  0517  0843               	movf	___fttol@lval+3,w
  6425  0518  00BB               	movwf	?___fttol+3
  6426  0519  0842               	movf	___fttol@lval+2,w
  6427  051A  00BA               	movwf	?___fttol+2
  6428  051B  0841               	movf	___fttol@lval+1,w
  6429  051C  00B9               	movwf	?___fttol+1
  6430  051D  0840               	movf	___fttol@lval,w
  6431  051E  00B8               	movwf	?___fttol
  6432  051F  0008               	return
  6433  0520                     __end_of___fttol:	
  6434                           
  6435                           	psect	text28
  6436  00A6                     __ptext28:	
  6437 ;; *************** function _Vout_set *****************
  6438 ;; Defined at:
  6439 ;;		line 1879 in file "Multi_RX_testjig_v1.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;  Volts           2    4[COMMON] int 
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;  digi_step       4    6[COMMON] unsigned long 
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  1    wreg      void 
  6446 ;; Registers used:
  6447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/4
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6454 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6456 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6457 ;;Total ram usage:        6 bytes
  6458 ;; Hardware stack levels used:    1
  6459 ;; Hardware stack levels required when called:    3
  6460 ;; This function calls:
  6461 ;;		_digitalpot
  6462 ;; This function is called by:
  6463 ;;		_main
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           
  6468                           ;psect for function _Vout_set
  6469  00A6                     _Vout_set:	
  6470                           
  6471                           ;Multi_RX_testjig_v1.c: 1887: switch(Volts)
  6472                           
  6473                           ;incstack = 0
  6474                           ; Regs used in _Vout_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6475  00A6  28CB               	goto	l3120
  6476  00A7                     l3088:	
  6477                           
  6478                           ;Multi_RX_testjig_v1.c: 1890: digi_step = 20;
  6479  00A7  3014               	movlw	20
  6480  00A8  28C4               	goto	L30
  6481  00A9                     l3090:	
  6482                           ;Multi_RX_testjig_v1.c: 1891: break;
  6483                           
  6484                           
  6485                           ;Multi_RX_testjig_v1.c: 1893: digi_step = 39;
  6486  00A9  3027               	movlw	39
  6487  00AA  28C4               	goto	L30
  6488  00AB                     l3092:	
  6489                           ;Multi_RX_testjig_v1.c: 1894: break;
  6490                           
  6491                           
  6492                           ;Multi_RX_testjig_v1.c: 1896: digi_step = 52;
  6493  00AB  3034               	movlw	52
  6494  00AC  28C4               	goto	L30
  6495  00AD                     l3094:	
  6496                           ;Multi_RX_testjig_v1.c: 1897: break;
  6497                           
  6498                           
  6499                           ;Multi_RX_testjig_v1.c: 1899: digi_step = 62;
  6500  00AD  303E               	movlw	62
  6501  00AE  28C4               	goto	L30
  6502  00AF                     l3096:	
  6503                           ;Multi_RX_testjig_v1.c: 1900: break;
  6504                           
  6505                           
  6506                           ;Multi_RX_testjig_v1.c: 1902: digi_step = 70;
  6507  00AF  3046               	movlw	70
  6508  00B0  28C4               	goto	L30
  6509  00B1                     l3098:	
  6510                           ;Multi_RX_testjig_v1.c: 1903: break;
  6511                           
  6512                           
  6513                           ;Multi_RX_testjig_v1.c: 1905: digi_step = 76;
  6514  00B1  304C               	movlw	76
  6515  00B2  28C4               	goto	L30
  6516  00B3                     l3100:	
  6517                           ;Multi_RX_testjig_v1.c: 1906: break;
  6518                           
  6519                           
  6520                           ;Multi_RX_testjig_v1.c: 1908: digi_step = 81;
  6521  00B3  3051               	movlw	81
  6522  00B4  28C4               	goto	L30
  6523  00B5                     l3102:	
  6524                           ;Multi_RX_testjig_v1.c: 1909: break;
  6525                           
  6526                           
  6527                           ;Multi_RX_testjig_v1.c: 1911: digi_step = 85;
  6528  00B5  3055               	movlw	85
  6529  00B6  28C4               	goto	L30
  6530  00B7                     l3104:	
  6531                           ;Multi_RX_testjig_v1.c: 1912: break;
  6532                           
  6533                           
  6534                           ;Multi_RX_testjig_v1.c: 1914: digi_step = 88;
  6535  00B7  3058               	movlw	88
  6536  00B8  28C4               	goto	L30
  6537  00B9                     l3106:	
  6538                           ;Multi_RX_testjig_v1.c: 1915: break;
  6539                           
  6540                           
  6541                           ;Multi_RX_testjig_v1.c: 1917: digi_step = 91;
  6542  00B9  305B               	movlw	91
  6543  00BA  28C4               	goto	L30
  6544  00BB                     l3108:	
  6545                           ;Multi_RX_testjig_v1.c: 1918: break;
  6546                           
  6547                           
  6548                           ;Multi_RX_testjig_v1.c: 1920: digi_step = 94;
  6549  00BB  305E               	movlw	94
  6550  00BC  28C4               	goto	L30
  6551  00BD                     l3110:	
  6552                           ;Multi_RX_testjig_v1.c: 1921: break;
  6553                           
  6554                           
  6555                           ;Multi_RX_testjig_v1.c: 1923: digi_step = 96;
  6556  00BD  3060               	movlw	96
  6557  00BE  28C4               	goto	L30
  6558  00BF                     l3112:	
  6559                           ;Multi_RX_testjig_v1.c: 1924: break;
  6560                           
  6561                           
  6562                           ;Multi_RX_testjig_v1.c: 1926: digi_step = 98;
  6563  00BF  3062               	movlw	98
  6564  00C0  28C4               	goto	L30
  6565  00C1                     l3114:	
  6566                           ;Multi_RX_testjig_v1.c: 1927: break;
  6567                           
  6568                           
  6569                           ;Multi_RX_testjig_v1.c: 1929: digi_step = 102;
  6570  00C1  3066               	movlw	102
  6571  00C2  28C4               	goto	L30
  6572  00C3                     l3116:	
  6573                           ;Multi_RX_testjig_v1.c: 1930: break;
  6574                           
  6575                           
  6576                           ;Multi_RX_testjig_v1.c: 1932: digi_step = 112;
  6577  00C3  3070               	movlw	112
  6578  00C4                     L30:	
  6579  00C4  00F6               	movwf	Vout_set@digi_step
  6580  00C5  28C7               	goto	L31
  6581  00C6                     l671:	
  6582                           ;Multi_RX_testjig_v1.c: 1934: default:
  6583                           
  6584                           ;Multi_RX_testjig_v1.c: 1933: break;
  6585                           
  6586                           
  6587                           ;Multi_RX_testjig_v1.c: 1935: digi_step = 0;
  6588  00C6  01F6               	clrf	Vout_set@digi_step
  6589  00C7                     L31:	
  6590  00C7  01F7               	clrf	Vout_set@digi_step+1
  6591  00C8  01F8               	clrf	Vout_set@digi_step+2
  6592  00C9  01F9               	clrf	Vout_set@digi_step+3
  6593                           
  6594                           ;Multi_RX_testjig_v1.c: 1936: break;
  6595  00CA  28DD               	goto	l3122
  6596  00CB                     l3120:	
  6597                           
  6598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6599                           ; Switch size 1, requested type "speed"
  6600                           ; Number of cases is 1, Range of values is 0 to 0
  6601                           ; switch strategies available:
  6602                           ; Name         Instructions Cycles
  6603                           ; simple_byte            4     3 (average)
  6604                           ; direct_byte            8     6 (fixed)
  6605                           ; jumptable            260     6 (fixed)
  6606                           ;	Chosen strategy is simple_byte
  6607  00CB  0875               	movf	Vout_set@Volts+1,w
  6608  00CC  3A00               	xorlw	0	; case 0
  6609  00CD  1903               	skipnz
  6610  00CE  28D0               	goto	l3946
  6611  00CF  28C6               	goto	l671
  6612  00D0                     l3946:	
  6613                           
  6614                           ; Switch size 1, requested type "speed"
  6615                           ; Number of cases is 15, Range of values is 6 to 25
  6616                           ; switch strategies available:
  6617                           ; Name         Instructions Cycles
  6618                           ; direct_byte           49     9 (fixed)
  6619                           ; simple_byte           46    24 (average)
  6620                           ; jumptable            263     9 (fixed)
  6621                           ;	Chosen strategy is direct_byte
  6622  00D0  0874               	movf	Vout_set@Volts,w
  6623  00D1  3EFA               	addlw	-6
  6624  00D2  1C03               	skipc
  6625  00D3  28C6               	goto	l671
  6626  00D4  0084               	movwf	4
  6627  00D5  3014               	movlw	20
  6628  00D6  0204               	subwf	4,w
  6629  00D7  1803               	skipnc
  6630  00D8  28C6               	goto	l671
  6631  00D9  3186               	movlp	high S3948
  6632  00DA  3504               	lslf	4,w
  6633  00DB  3E13               	addlw	low S3948
  6634  00DC  0082               	movwf	2
  6635  00DD                     l3122:	
  6636                           
  6637                           ;Multi_RX_testjig_v1.c: 1943: digitalpot((unsigned char)digi_step);
  6638  00DD  0876               	movf	Vout_set@digi_step,w
  6639  00DE  29AF               	ljmp	_digitalpot
  6640  00DF                     __end_of_Vout_set:	
  6641  00DF                     __ptext15:	
  6642 ;; *************** function _lcd_set_cursor *****************
  6643 ;; Defined at:
  6644 ;;		line 1098 in file "Multi_RX_testjig_v1.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  row             1    wreg     unsigned char 
  6647 ;;  col             1    1[COMMON] unsigned char 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  row             1    2[COMMON] unsigned char 
  6650 ;;  LCD_position    1    3[COMMON] unsigned char 
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  1    wreg      void 
  6653 ;; Registers used:
  6654 ;;		wreg, status,2, status,0, pclath, cstack
  6655 ;; Tracked objects:
  6656 ;;		On entry : 1F/0
  6657 ;;		On exit  : 1F/4
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6660 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6663 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6664 ;;Total ram usage:        3 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:    2
  6667 ;; This function calls:
  6668 ;;		_i2c_Start
  6669 ;;		_i2c_Stop
  6670 ;;		_i2c_Write
  6671 ;; This function is called by:
  6672 ;;		_lcd_print_int
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           
  6677                           ;psect for function _lcd_set_cursor
  6678  00DF                     _lcd_set_cursor:	
  6679                           
  6680                           ;incstack = 0
  6681                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  6682                           ;lcd_set_cursor@row stored from wreg
  6683  00DF  00F2               	movwf	lcd_set_cursor@row
  6684                           
  6685                           ;Multi_RX_testjig_v1.c: 1101: col--;
  6686  00E0  03F1               	decf	lcd_set_cursor@col,f
  6687                           
  6688                           ;Multi_RX_testjig_v1.c: 1102: i2c_Start();
  6689  00E1  2226  3180         	fcall	_i2c_Start
  6690                           
  6691                           ;Multi_RX_testjig_v1.c: 1103: i2c_Write(0x7C);
  6692  00E3  307C               	movlw	124
  6693  00E4  221A  3180         	fcall	_i2c_Write
  6694                           
  6695                           ;Multi_RX_testjig_v1.c: 1104: i2c_Write(0x00);
  6696  00E6  3000               	movlw	0
  6697  00E7  221A  3180         	fcall	_i2c_Write
  6698                           
  6699                           ;Multi_RX_testjig_v1.c: 1105: LCD_position = col & 0b11001111;
  6700  00E9  0871               	movf	lcd_set_cursor@col,w
  6701  00EA  00F3               	movwf	lcd_set_cursor@LCD_position
  6702  00EB  30CF               	movlw	207
  6703  00EC  05F3               	andwf	lcd_set_cursor@LCD_position,f
  6704                           
  6705                           ;Multi_RX_testjig_v1.c: 1106: if(row == 1)
  6706  00ED  0B72               	decfsz	lcd_set_cursor@row,w
  6707  00EE  28F1               	goto	l2734
  6708                           
  6709                           ;Multi_RX_testjig_v1.c: 1107: LCD_position |= 0b10000000;
  6710  00EF  17F3               	bsf	lcd_set_cursor@LCD_position,7
  6711  00F0  28F3               	goto	l2736
  6712  00F1                     l2734:	
  6713                           
  6714                           ;Multi_RX_testjig_v1.c: 1108: else
  6715                           ;Multi_RX_testjig_v1.c: 1109: LCD_position |= 0b11000000;
  6716  00F1  30C0               	movlw	192
  6717  00F2  04F3               	iorwf	lcd_set_cursor@LCD_position,f
  6718  00F3                     l2736:	
  6719                           
  6720                           ;Multi_RX_testjig_v1.c: 1110: i2c_Write(LCD_position);
  6721  00F3  0873               	movf	lcd_set_cursor@LCD_position,w
  6722  00F4  221A  3180         	fcall	_i2c_Write
  6723                           
  6724                           ;Multi_RX_testjig_v1.c: 1111: i2c_Stop();
  6725  00F6  2A2B               	ljmp	l2526
  6726  00F7                     __end_of_lcd_set_cursor:	
  6727  00F7                     __ptext11:	
  6728 ;; *************** function _lcd_print_int *****************
  6729 ;; Defined at:
  6730 ;;		line 1673 in file "Multi_RX_testjig_v1.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  number          2   41[BANK0 ] unsigned int 
  6733 ;;  pos             2   43[BANK0 ] unsigned int 
  6734 ;;  decimal         1   45[BANK0 ] unsigned char 
  6735 ;;  ten_thou_dig    1   46[BANK0 ] unsigned char 
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;		None
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  1    wreg      void 
  6740 ;; Registers used:
  6741 ;;		wreg, status,2, status,0, pclath, cstack
  6742 ;; Tracked objects:
  6743 ;;		On entry : 1F/0
  6744 ;;		On exit  : 1F/4
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6747 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6750 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6751 ;;Total ram usage:        6 bytes
  6752 ;; Hardware stack levels used:    1
  6753 ;; Hardware stack levels required when called:    3
  6754 ;; This function calls:
  6755 ;;		_i2c_write_char
  6756 ;;		_lcd_set_cursor
  6757 ;;		_ten_thou_conv
  6758 ;; This function is called by:
  6759 ;;		_main
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           
  6764                           ;psect for function _lcd_print_int
  6765  00F7                     _lcd_print_int:	
  6766                           
  6767                           ;Multi_RX_testjig_v1.c: 1675: lcd_set_cursor(2, pos + 1 - ten_thou_digit);
  6768                           
  6769                           ;incstack = 0
  6770                           ; Regs used in _lcd_print_int: [wreg+status,2+status,0+pclath+cstack]
  6771  00F7  084E               	movf	lcd_print_int@ten_thou_digit,w
  6772  00F8  024B               	subwf	lcd_print_int@pos,w
  6773  00F9  3E01               	addlw	1
  6774  00FA  00F1               	movwf	lcd_set_cursor@col
  6775  00FB  3002               	movlw	2
  6776  00FC  20DF  3180         	fcall	_lcd_set_cursor
  6777                           
  6778                           ;Multi_RX_testjig_v1.c: 1676: ten_thou_conv(number);
  6779  00FE  0020               	movlb	0	; select bank0
  6780  00FF  084A               	movf	lcd_print_int@number+1,w
  6781  0100  00F7               	movwf	ten_thou_conv@n+1
  6782  0101  0849               	movf	lcd_print_int@number,w
  6783  0102  00F6               	movwf	ten_thou_conv@n
  6784  0103  2230  3180         	fcall	_ten_thou_conv
  6785                           
  6786                           ;Multi_RX_testjig_v1.c: 1677: if(ten_thou_digit)
  6787  0105  084E               	movf	lcd_print_int@ten_thou_digit,w
  6788  0106  1903               	btfsc	3,2
  6789  0107  2913               	goto	l3158
  6790                           
  6791                           ;Multi_RX_testjig_v1.c: 1678: {
  6792                           ;Multi_RX_testjig_v1.c: 1679: if(ten_thou != 0 || decimal & 0x10)
  6793  0108  086A               	movf	_ten_thou,w
  6794  0109  1D03               	btfss	3,2
  6795  010A  290D               	goto	l3154
  6796  010B  1E4D               	btfss	lcd_print_int@decimal,4
  6797  010C  2910               	goto	l3156
  6798  010D                     l3154:	
  6799                           
  6800                           ;Multi_RX_testjig_v1.c: 1680: i2c_write_char(ten_thou + 48);
  6801  010D  086A               	movf	_ten_thou,w
  6802  010E  3E30               	addlw	48
  6803  010F  2911               	goto	L12
  6804  0110                     l3156:	
  6805                           
  6806                           ;Multi_RX_testjig_v1.c: 1681: else i2c_write_char(' ');
  6807  0110  3020               	movlw	32
  6808  0111                     L12:	
  6809  0111  216B  3180         	fcall	_i2c_write_char
  6810  0113                     l3158:	
  6811                           
  6812                           ;Multi_RX_testjig_v1.c: 1682: }
  6813                           ;Multi_RX_testjig_v1.c: 1683: if(decimal & 0x10)i2c_write_char('.');
  6814  0113  0020               	movlb	0	; select bank0
  6815  0114  1E4D               	btfss	lcd_print_int@decimal,4
  6816  0115  2919               	goto	l3162
  6817  0116  302E               	movlw	46
  6818  0117  216B  3180         	fcall	_i2c_write_char
  6819  0119                     l3162:	
  6820                           
  6821                           ;Multi_RX_testjig_v1.c: 1684: if(thou != 0 || ten_thou != 0 || decimal & 0x18)
  6822  0119  0020               	movlb	0	; select bank0
  6823  011A  086C               	movf	_thou,w
  6824  011B  1D03               	btfss	3,2
  6825  011C  2924               	goto	l3168
  6826  011D  086A               	movf	_ten_thou,w
  6827  011E  1D03               	btfss	3,2
  6828  011F  2924               	goto	l3168
  6829  0120  084D               	movf	lcd_print_int@decimal,w
  6830  0121  3918               	andlw	24
  6831  0122  1903               	btfsc	3,2
  6832  0123  2927               	goto	l3170
  6833  0124                     l3168:	
  6834                           
  6835                           ;Multi_RX_testjig_v1.c: 1685: i2c_write_char(thou + 48);
  6836  0124  086C               	movf	_thou,w
  6837  0125  3E30               	addlw	48
  6838  0126  2928               	goto	L13
  6839  0127                     l3170:	
  6840                           
  6841                           ;Multi_RX_testjig_v1.c: 1686: else i2c_write_char(' ');
  6842  0127  3020               	movlw	32
  6843  0128                     L13:	
  6844  0128  216B  3180         	fcall	_i2c_write_char
  6845                           
  6846                           ;Multi_RX_testjig_v1.c: 1687: if(decimal & 0x08)i2c_write_char('.');
  6847  012A  0020               	movlb	0	; select bank0
  6848  012B  1DCD               	btfss	lcd_print_int@decimal,3
  6849  012C  2930               	goto	l3176
  6850  012D  302E               	movlw	46
  6851  012E  216B  3180         	fcall	_i2c_write_char
  6852  0130                     l3176:	
  6853                           
  6854                           ;Multi_RX_testjig_v1.c: 1688: if(hund != 0 || thou != 0 || ten_thou != 0 || decimal & 0x
      +                          1C)
  6855  0130  0020               	movlb	0	; select bank0
  6856  0131  0867               	movf	_hund,w
  6857  0132  1D03               	btfss	3,2
  6858  0133  293E               	goto	l3184
  6859  0134  086C               	movf	_thou,w
  6860  0135  1D03               	btfss	3,2
  6861  0136  293E               	goto	l3184
  6862  0137  086A               	movf	_ten_thou,w
  6863  0138  1D03               	btfss	3,2
  6864  0139  293E               	goto	l3184
  6865  013A  084D               	movf	lcd_print_int@decimal,w
  6866  013B  391C               	andlw	28
  6867  013C  1903               	btfsc	3,2
  6868  013D  2941               	goto	l3186
  6869  013E                     l3184:	
  6870                           
  6871                           ;Multi_RX_testjig_v1.c: 1689: i2c_write_char(hund + 48);
  6872  013E  0867               	movf	_hund,w
  6873  013F  3E30               	addlw	48
  6874  0140  2942               	goto	L14
  6875  0141                     l3186:	
  6876                           
  6877                           ;Multi_RX_testjig_v1.c: 1690: else i2c_write_char(' ');
  6878  0141  3020               	movlw	32
  6879  0142                     L14:	
  6880  0142  216B  3180         	fcall	_i2c_write_char
  6881                           
  6882                           ;Multi_RX_testjig_v1.c: 1691: if(decimal & 0x04)i2c_write_char('.');
  6883  0144  0020               	movlb	0	; select bank0
  6884  0145  1D4D               	btfss	lcd_print_int@decimal,2
  6885  0146  294A               	goto	l3192
  6886  0147  302E               	movlw	46
  6887  0148  216B  3180         	fcall	_i2c_write_char
  6888  014A                     l3192:	
  6889                           
  6890                           ;Multi_RX_testjig_v1.c: 1692: if(ten != 0 || hund != 0 || thou != 0 || ten_thou != 0 || 
      +                          decimal & 0x1E)
  6891  014A  0020               	movlb	0	; select bank0
  6892  014B  0869               	movf	_ten,w
  6893  014C  1D03               	btfss	3,2
  6894  014D  295B               	goto	l3202
  6895  014E  0867               	movf	_hund,w
  6896  014F  1D03               	btfss	3,2
  6897  0150  295B               	goto	l3202
  6898  0151  086C               	movf	_thou,w
  6899  0152  1D03               	btfss	3,2
  6900  0153  295B               	goto	l3202
  6901  0154  086A               	movf	_ten_thou,w
  6902  0155  1D03               	btfss	3,2
  6903  0156  295B               	goto	l3202
  6904  0157  084D               	movf	lcd_print_int@decimal,w
  6905  0158  391E               	andlw	30
  6906  0159  1903               	btfsc	3,2
  6907  015A  295E               	goto	l3204
  6908  015B                     l3202:	
  6909                           
  6910                           ;Multi_RX_testjig_v1.c: 1693: i2c_write_char(ten + 48);
  6911  015B  0869               	movf	_ten,w
  6912  015C  3E30               	addlw	48
  6913  015D  295F               	goto	L15
  6914  015E                     l3204:	
  6915                           
  6916                           ;Multi_RX_testjig_v1.c: 1694: else i2c_write_char(' ');
  6917  015E  3020               	movlw	32
  6918  015F                     L15:	
  6919  015F  216B  3180         	fcall	_i2c_write_char
  6920                           
  6921                           ;Multi_RX_testjig_v1.c: 1695: if(decimal & 0x02)i2c_write_char('.');
  6922  0161  0020               	movlb	0	; select bank0
  6923  0162  1CCD               	btfss	lcd_print_int@decimal,1
  6924  0163  2967               	goto	l590
  6925  0164  302E               	movlw	46
  6926  0165  216B  3180         	fcall	_i2c_write_char
  6927  0167                     l590:	
  6928                           
  6929                           ;Multi_RX_testjig_v1.c: 1696: i2c_write_char(unit + 48);
  6930  0167  0020               	movlb	0	; select bank0
  6931  0168  086B               	movf	_unit,w
  6932  0169  3E30               	addlw	48
  6933  016A  296B               	ljmp	_i2c_write_char
  6934  016B                     __end_of_lcd_print_int:	
  6935  016B                     __ptext16:	
  6936 ;; *************** function _i2c_write_char *****************
  6937 ;; Defined at:
  6938 ;;		line 1014 in file "Multi_RX_testjig_v1.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;  char_data       1    wreg     unsigned char 
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;  char_data       1    1[COMMON] unsigned char 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  1    wreg      void 
  6945 ;; Registers used:
  6946 ;;		wreg, status,2, status,0, pclath, cstack
  6947 ;; Tracked objects:
  6948 ;;		On entry : 1F/0
  6949 ;;		On exit  : 1F/4
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6956 ;;Total ram usage:        1 bytes
  6957 ;; Hardware stack levels used:    1
  6958 ;; Hardware stack levels required when called:    2
  6959 ;; This function calls:
  6960 ;;		_i2c_Start
  6961 ;;		_i2c_Stop
  6962 ;;		_i2c_Write
  6963 ;; This function is called by:
  6964 ;;		_lcd_print_int
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           
  6969                           ;psect for function _i2c_write_char
  6970  016B                     _i2c_write_char:	
  6971                           
  6972                           ;incstack = 0
  6973                           ; Regs used in _i2c_write_char: [wreg+status,2+status,0+pclath+cstack]
  6974                           ;i2c_write_char@char_data stored from wreg
  6975  016B  00F1               	movwf	i2c_write_char@char_data
  6976                           
  6977                           ;Multi_RX_testjig_v1.c: 1016: i2c_Start();
  6978  016C  2226  3180         	fcall	_i2c_Start
  6979                           
  6980                           ;Multi_RX_testjig_v1.c: 1017: i2c_Write(0x7C);
  6981  016E  307C               	movlw	124
  6982  016F  221A  3180         	fcall	_i2c_Write
  6983                           
  6984                           ;Multi_RX_testjig_v1.c: 1018: i2c_Write(0x40);
  6985  0171  3040               	movlw	64
  6986  0172  221A  3180         	fcall	_i2c_Write
  6987                           
  6988                           ;Multi_RX_testjig_v1.c: 1019: i2c_Write(char_data);
  6989  0174  0871               	movf	i2c_write_char@char_data,w
  6990  0175  221A  3180         	fcall	_i2c_Write
  6991                           
  6992                           ;Multi_RX_testjig_v1.c: 1020: i2c_Stop();
  6993  0177  2A2B               	ljmp	l2526
  6994  0178                     __end_of_i2c_write_char:	
  6995  0178                     __ptext4:	
  6996 ;; *************** function _i2c_second_line *****************
  6997 ;; Defined at:
  6998 ;;		line 1088 in file "Multi_RX_testjig_v1.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;		None
  7001 ;; Auto vars:     Size  Location     Type
  7002 ;;		None
  7003 ;; Return value:  Size  Location     Type
  7004 ;;                  1    wreg      void 
  7005 ;; Registers used:
  7006 ;;		wreg, status,2, status,0, pclath, cstack
  7007 ;; Tracked objects:
  7008 ;;		On entry : 1F/4
  7009 ;;		On exit  : 1F/4
  7010 ;;		Unchanged: 0/0
  7011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7015 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7016 ;;Total ram usage:        1 bytes
  7017 ;; Hardware stack levels used:    1
  7018 ;; Hardware stack levels required when called:    2
  7019 ;; This function calls:
  7020 ;;		_i2c_Start
  7021 ;;		_i2c_Stop
  7022 ;;		_i2c_Write
  7023 ;; This function is called by:
  7024 ;;		_print_error
  7025 ;;		_print_screen
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           
  7030                           ;psect for function _i2c_second_line
  7031  0178                     _i2c_second_line:	
  7032                           
  7033                           ;Multi_RX_testjig_v1.c: 1090: i2c_Start();
  7034                           
  7035                           ;incstack = 0
  7036                           ; Regs used in _i2c_second_line: [wreg+status,2+status,0+pclath+cstack]
  7037  0178  2226  3180         	fcall	_i2c_Start
  7038                           
  7039                           ;Multi_RX_testjig_v1.c: 1091: i2c_Write(0x7C);
  7040  017A  307C               	movlw	124
  7041  017B  221A  3180         	fcall	_i2c_Write
  7042                           
  7043                           ;Multi_RX_testjig_v1.c: 1092: i2c_Write(0x00);
  7044  017D  3000               	movlw	0
  7045  017E  221A  3180         	fcall	_i2c_Write
  7046                           
  7047                           ;Multi_RX_testjig_v1.c: 1093: i2c_Write(0xC0);
  7048  0180  30C0               	movlw	192
  7049  0181  221A  3180         	fcall	_i2c_Write
  7050                           
  7051                           ;Multi_RX_testjig_v1.c: 1094: _delay((unsigned long)((27)*(16000000/4000000.0)));
  7052  0183  3023               	movlw	35
  7053  0184  00F1               	movwf	??_i2c_second_line
  7054  0185                     u4457:	
  7055  0185  0BF1               	decfsz	??_i2c_second_line,f
  7056  0186  2985               	goto	u4457
  7057  0187  3200               	nop2	;nop
  7058                           
  7059                           ;Multi_RX_testjig_v1.c: 1095: i2c_Stop();
  7060  0188  2A2B               	ljmp	l2526
  7061  0189                     __end_of_i2c_second_line:	
  7062  0189                     __ptext5:	
  7063 ;; *************** function _i2c_first_line *****************
  7064 ;; Defined at:
  7065 ;;		line 1078 in file "Multi_RX_testjig_v1.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;		None
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      void 
  7072 ;; Registers used:
  7073 ;;		wreg, status,2, status,0, pclath, cstack
  7074 ;; Tracked objects:
  7075 ;;		On entry : 1F/4
  7076 ;;		On exit  : 1F/4
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7083 ;;Total ram usage:        1 bytes
  7084 ;; Hardware stack levels used:    1
  7085 ;; Hardware stack levels required when called:    2
  7086 ;; This function calls:
  7087 ;;		_i2c_Start
  7088 ;;		_i2c_Stop
  7089 ;;		_i2c_Write
  7090 ;; This function is called by:
  7091 ;;		_print_error
  7092 ;;		_print_screen
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096                           
  7097                           ;psect for function _i2c_first_line
  7098  0189                     _i2c_first_line:	
  7099                           
  7100                           ;Multi_RX_testjig_v1.c: 1080: i2c_Start();
  7101                           
  7102                           ;incstack = 0
  7103                           ; Regs used in _i2c_first_line: [wreg+status,2+status,0+pclath+cstack]
  7104  0189  2226  3180         	fcall	_i2c_Start
  7105                           
  7106                           ;Multi_RX_testjig_v1.c: 1081: i2c_Write(0x7C);
  7107  018B  307C               	movlw	124
  7108  018C  221A  3180         	fcall	_i2c_Write
  7109                           
  7110                           ;Multi_RX_testjig_v1.c: 1082: i2c_Write(0x00);
  7111  018E  3000               	movlw	0
  7112  018F  221A  3180         	fcall	_i2c_Write
  7113                           
  7114                           ;Multi_RX_testjig_v1.c: 1083: i2c_Write(0x80);
  7115  0191  3080               	movlw	128
  7116  0192  221A  3180         	fcall	_i2c_Write
  7117                           
  7118                           ;Multi_RX_testjig_v1.c: 1084: _delay((unsigned long)((27)*(16000000/4000000.0)));
  7119  0194  3023               	movlw	35
  7120  0195  00F1               	movwf	??_i2c_first_line
  7121  0196                     u4467:	
  7122  0196  0BF1               	decfsz	??_i2c_first_line,f
  7123  0197  2996               	goto	u4467
  7124  0198  3200               	nop2	;nop
  7125                           
  7126                           ;Multi_RX_testjig_v1.c: 1085: i2c_Stop();
  7127  0199  2A2B               	ljmp	l2526
  7128  019A                     __end_of_i2c_first_line:	
  7129  019A                     __ptext7:	
  7130 ;; *************** function _clear_lcd *****************
  7131 ;; Defined at:
  7132 ;;		line 1068 in file "Multi_RX_testjig_v1.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;		None
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;		None
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      void 
  7139 ;; Registers used:
  7140 ;;		wreg, status,2, status,0, pclath, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/2
  7143 ;;		On exit  : 1F/4
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7148 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7150 ;;Total ram usage:        2 bytes
  7151 ;; Hardware stack levels used:    1
  7152 ;; Hardware stack levels required when called:    2
  7153 ;; This function calls:
  7154 ;;		_i2c_Start
  7155 ;;		_i2c_Stop
  7156 ;;		_i2c_Write
  7157 ;; This function is called by:
  7158 ;;		_print_error
  7159 ;;		_print_screen
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           
  7164                           ;psect for function _clear_lcd
  7165  019A                     _clear_lcd:	
  7166                           
  7167                           ;Multi_RX_testjig_v1.c: 1070: i2c_Start();
  7168                           
  7169                           ;incstack = 0
  7170                           ; Regs used in _clear_lcd: [wreg+status,2+status,0+pclath+cstack]
  7171  019A  2226  3180         	fcall	_i2c_Start
  7172                           
  7173                           ;Multi_RX_testjig_v1.c: 1071: i2c_Write(0x7C);
  7174  019C  307C               	movlw	124
  7175  019D  221A  3180         	fcall	_i2c_Write
  7176                           
  7177                           ;Multi_RX_testjig_v1.c: 1072: i2c_Write(0x00);
  7178  019F  3000               	movlw	0
  7179  01A0  221A  3180         	fcall	_i2c_Write
  7180                           
  7181                           ;Multi_RX_testjig_v1.c: 1073: i2c_Write(0x01);
  7182  01A2  3001               	movlw	1
  7183  01A3  221A  3180         	fcall	_i2c_Write
  7184                           
  7185                           ;Multi_RX_testjig_v1.c: 1074: _delay((unsigned long)((2)*(16000000/4000.0)));
  7186  01A5  300B               	movlw	11
  7187  01A6  00F2               	movwf	??_clear_lcd+1
  7188  01A7  3062               	movlw	98
  7189  01A8  00F1               	movwf	??_clear_lcd
  7190  01A9                     u4477:	
  7191  01A9  0BF1               	decfsz	??_clear_lcd,f
  7192  01AA  29A9               	goto	u4477
  7193  01AB  0BF2               	decfsz	??_clear_lcd+1,f
  7194  01AC  29A9               	goto	u4477
  7195  01AD  0000               	nop
  7196                           
  7197                           ;Multi_RX_testjig_v1.c: 1075: i2c_Stop();
  7198  01AE  2A2B               	ljmp	l2526
  7199  01AF                     __end_of_clear_lcd:	
  7200  01AF                     __ptext29:	
  7201 ;; *************** function _digitalpot *****************
  7202 ;; Defined at:
  7203 ;;		line 1946 in file "Multi_RX_testjig_v1.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;  value           1    wreg     unsigned char 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;  value           1    3[COMMON] unsigned char 
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  1    wreg      void 
  7210 ;; Registers used:
  7211 ;;		wreg, status,2, status,0, pclath, cstack
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/4
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7219 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7220 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7221 ;;Total ram usage:        3 bytes
  7222 ;; Hardware stack levels used:    1
  7223 ;; Hardware stack levels required when called:    2
  7224 ;; This function calls:
  7225 ;;		_i2c_Start
  7226 ;;		_i2c_Stop
  7227 ;;		_i2c_Write
  7228 ;; This function is called by:
  7229 ;;		_Vout_set
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           
  7234                           ;psect for function _digitalpot
  7235  01AF                     _digitalpot:	
  7236                           
  7237                           ;incstack = 0
  7238                           ; Regs used in _digitalpot: [wreg+status,2+status,0+pclath+cstack]
  7239                           ;digitalpot@value stored from wreg
  7240  01AF  00F3               	movwf	digitalpot@value
  7241                           
  7242                           ;Multi_RX_testjig_v1.c: 1948: i2c_Start();
  7243  01B0  2226  3180         	fcall	_i2c_Start
  7244                           
  7245                           ;Multi_RX_testjig_v1.c: 1949: i2c_Write(0x5C);
  7246  01B2  305C               	movlw	92
  7247  01B3  221A  3180         	fcall	_i2c_Write
  7248                           
  7249                           ;Multi_RX_testjig_v1.c: 1950: i2c_Write(0b00000000);
  7250  01B5  3000               	movlw	0
  7251  01B6  221A  3180         	fcall	_i2c_Write
  7252                           
  7253                           ;Multi_RX_testjig_v1.c: 1951: i2c_Write(value);
  7254  01B8  0873               	movf	digitalpot@value,w
  7255  01B9  221A  3180         	fcall	_i2c_Write
  7256                           
  7257                           ;Multi_RX_testjig_v1.c: 1952: i2c_Stop();
  7258  01BB  222B  3180         	fcall	_i2c_Stop
  7259                           
  7260                           ;Multi_RX_testjig_v1.c: 1953: _delay((unsigned long)((20)*(16000000/4000.0)));
  7261  01BD  3068               	movlw	104
  7262  01BE  00F2               	movwf	??_digitalpot+1
  7263  01BF  30E4               	movlw	228
  7264  01C0  00F1               	movwf	??_digitalpot
  7265  01C1                     u4507:	
  7266  01C1  0BF1               	decfsz	??_digitalpot,f
  7267  01C2  29C1               	goto	u4507
  7268  01C3  0BF2               	decfsz	??_digitalpot+1,f
  7269  01C4  29C1               	goto	u4507
  7270  01C5  0000               	nop
  7271  01C6  0008               	return
  7272  01C7                     __end_of_digitalpot:	
  7273  01C7                     __ptext6:	
  7274 ;; *************** function _i2c_Write_string *****************
  7275 ;; Defined at:
  7276 ;;		line 1000 in file "Multi_RX_testjig_v1.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  data            2    1[COMMON] PTR const unsigned char 
  7279 ;;		 -> STR_170(17), STR_169(12), STR_168(13), STR_167(17), 
  7280 ;;		 -> STR_166(14), STR_165(17), STR_164(8), STR_163(17), 
  7281 ;;		 -> STR_162(8), STR_161(9), STR_160(14), STR_159(13), 
  7282 ;;		 -> STR_158(11), STR_157(10), STR_156(13), STR_155(16), 
  7283 ;;		 -> STR_154(4), STR_153(12), STR_152(10), STR_151(10), 
  7284 ;;		 -> STR_150(4), STR_149(12), STR_148(2), STR_147(14), 
  7285 ;;		 -> STR_146(4), STR_145(12), STR_144(15), STR_143(8), 
  7286 ;;		 -> STR_142(17), STR_141(8), STR_140(16), STR_139(8), 
  7287 ;;		 -> STR_138(7), STR_137(8), STR_136(10), STR_135(8), 
  7288 ;;		 -> STR_134(13), STR_133(13), STR_132(14), STR_131(13), 
  7289 ;;		 -> STR_130(4), STR_129(12), STR_128(4), STR_127(12), 
  7290 ;;		 -> STR_126(5), STR_125(8), STR_124(9), STR_123(8), 
  7291 ;;		 -> STR_122(13), STR_121(12), STR_120(16), STR_119(12), 
  7292 ;;		 -> STR_118(14), STR_117(12), STR_116(4), STR_115(12), 
  7293 ;;		 -> STR_114(4), STR_113(12), STR_112(4), STR_111(8), 
  7294 ;;		 -> STR_110(4), STR_109(12), STR_108(9), STR_107(10), 
  7295 ;;		 -> STR_106(3), STR_105(12), STR_104(7), STR_103(9), 
  7296 ;;		 -> STR_102(4), STR_101(12), STR_100(4), STR_99(12), 
  7297 ;;		 -> STR_98(15), STR_97(9), STR_96(16), STR_95(9), 
  7298 ;;		 -> STR_94(3), STR_93(12), STR_92(9), STR_91(10), 
  7299 ;;		 -> STR_90(3), STR_89(9), STR_88(1), STR_87(9), 
  7300 ;;		 -> STR_86(3), STR_85(12), STR_84(9), STR_83(10), 
  7301 ;;		 -> STR_82(3), STR_81(12), STR_80(7), STR_79(9), 
  7302 ;;		 -> STR_78(4), STR_77(12), STR_76(4), STR_75(12), 
  7303 ;;		 -> STR_74(15), STR_73(9), STR_72(16), STR_71(9), 
  7304 ;;		 -> STR_70(3), STR_69(12), STR_68(9), STR_67(10), 
  7305 ;;		 -> STR_66(3), STR_65(9), STR_64(1), STR_63(9), 
  7306 ;;		 -> STR_62(9), STR_61(19), STR_60(3), STR_59(12), 
  7307 ;;		 -> STR_58(7), STR_57(16), STR_56(3), STR_55(12), 
  7308 ;;		 -> STR_54(9), STR_53(19), STR_52(5), STR_51(11), 
  7309 ;;		 -> STR_50(1), STR_49(11), STR_48(9), STR_47(12), 
  7310 ;;		 -> STR_46(9), STR_45(12), STR_44(6), STR_43(13), 
  7311 ;;		 -> STR_42(3), STR_41(12), STR_40(12), STR_39(13), 
  7312 ;;		 -> STR_38(3), STR_37(12), STR_36(6), STR_35(13), 
  7313 ;;		 -> STR_34(9), STR_33(19), STR_32(6), STR_31(12), 
  7314 ;;		 -> STR_30(13), STR_29(12), STR_28(1), STR_27(19), 
  7315 ;;		 -> STR_26(12), STR_25(14), STR_24(11), STR_23(14), 
  7316 ;;		 -> STR_22(13), STR_21(15), STR_20(13), STR_19(15), 
  7317 ;;		 -> STR_18(13), STR_17(14), STR_16(13), STR_15(14), 
  7318 ;;		 -> STR_14(12), STR_13(14), STR_12(11), STR_11(14), 
  7319 ;;		 -> STR_10(13), STR_9(14), STR_8(13), STR_7(14), 
  7320 ;;		 -> STR_6(1), STR_5(15), STR_4(14), STR_3(9), 
  7321 ;;		 -> STR_2(17), STR_1(9), 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;		None
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : 1F/4
  7330 ;;		On exit  : 1F/4
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7336 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7337 ;;Total ram usage:        3 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; Hardware stack levels required when called:    2
  7340 ;; This function calls:
  7341 ;;		_i2c_Start
  7342 ;;		_i2c_Stop
  7343 ;;		_i2c_Write
  7344 ;; This function is called by:
  7345 ;;		_print_error
  7346 ;;		_print_screen
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           
  7351                           ;psect for function _i2c_Write_string
  7352  01C7                     _i2c_Write_string:	
  7353  01C7                     l2528:	
  7354                           ;incstack = 0
  7355                           ; Regs used in _i2c_Write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7356                           
  7357                           
  7358                           ;Multi_RX_testjig_v1.c: 1002: i2c_Start();
  7359  01C7  2226  3180         	fcall	_i2c_Start
  7360                           
  7361                           ;Multi_RX_testjig_v1.c: 1003: i2c_Write(0x7C);
  7362  01C9  307C               	movlw	124
  7363  01CA  221A  3180         	fcall	_i2c_Write
  7364                           
  7365                           ;Multi_RX_testjig_v1.c: 1004: i2c_Write(0x40);
  7366  01CC  3040               	movlw	64
  7367  01CD  221A  3180         	fcall	_i2c_Write
  7368  01CF                     l2538:	
  7369                           ;Multi_RX_testjig_v1.c: 1006: while(*data != (0))
  7370                           
  7371  01CF  0871               	movf	i2c_Write_string@data,w
  7372  01D0  0084               	movwf	4
  7373  01D1  0872               	movf	i2c_Write_string@data+1,w
  7374  01D2  0085               	movwf	5
  7375  01D3  0012               	moviw fsr0++
  7376  01D4  1903               	btfsc	3,2
  7377  01D5  29E1               	goto	l2540
  7378                           
  7379                           ;Multi_RX_testjig_v1.c: 1007: {
  7380                           ;Multi_RX_testjig_v1.c: 1008: i2c_Write(*data);
  7381  01D6  0871               	movf	i2c_Write_string@data,w
  7382  01D7  0084               	movwf	4
  7383  01D8  0872               	movf	i2c_Write_string@data+1,w
  7384  01D9  0085               	movwf	5
  7385  01DA  0800               	movf	0,w	;code access
  7386  01DB  221A  3180         	fcall	_i2c_Write
  7387                           
  7388                           ;Multi_RX_testjig_v1.c: 1009: data++;
  7389  01DD  0AF1               	incf	i2c_Write_string@data,f
  7390  01DE  1903               	skipnz
  7391  01DF  0AF2               	incf	i2c_Write_string@data+1,f
  7392  01E0  29CF               	goto	l2538
  7393  01E1                     l2540:	
  7394                           
  7395                           ;Multi_RX_testjig_v1.c: 1010: }
  7396                           ;Multi_RX_testjig_v1.c: 1011: i2c_Stop();
  7397  01E1  2A2B               	ljmp	l2526
  7398  01E2                     __end_of_i2c_Write_string:	
  7399  01E2                     __ptext17:	
  7400 ;; *************** function _init_i2c_lcd_5v *****************
  7401 ;; Defined at:
  7402 ;;		line 1024 in file "Multi_RX_testjig_v1.c"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;  contrast        1    wreg     unsigned char 
  7405 ;;  single1_doub    1    1[COMMON] unsigned char 
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;  contrast        1    4[COMMON] unsigned char 
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  1    wreg      void 
  7410 ;; Registers used:
  7411 ;;		wreg, status,2, status,0, pclath, cstack
  7412 ;; Tracked objects:
  7413 ;;		On entry : 1F/4
  7414 ;;		On exit  : 1F/4
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7417 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7419 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7420 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7421 ;;Total ram usage:        4 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    2
  7424 ;; This function calls:
  7425 ;;		_i2c_Start
  7426 ;;		_i2c_Stop
  7427 ;;		_i2c_Write
  7428 ;; This function is called by:
  7429 ;;		_main
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           
  7434                           ;psect for function _init_i2c_lcd_5v
  7435  01E2                     _init_i2c_lcd_5v:	
  7436                           
  7437                           ;incstack = 0
  7438                           ; Regs used in _init_i2c_lcd_5v: [wreg+status,2+status,0+pclath+cstack]
  7439                           ;init_i2c_lcd_5v@contrast stored from wreg
  7440  01E2  00F4               	movwf	init_i2c_lcd_5v@contrast
  7441                           
  7442                           ;Multi_RX_testjig_v1.c: 1026: i2c_Start();
  7443  01E3  2226  3180         	fcall	_i2c_Start
  7444                           
  7445                           ;Multi_RX_testjig_v1.c: 1027: i2c_Write(0x7C);
  7446  01E5  307C               	movlw	124
  7447  01E6  221A  3180         	fcall	_i2c_Write
  7448                           
  7449                           ;Multi_RX_testjig_v1.c: 1028: i2c_Write(0x00);
  7450  01E8  3000               	movlw	0
  7451  01E9  221A  3180         	fcall	_i2c_Write
  7452                           
  7453                           ;Multi_RX_testjig_v1.c: 1029: i2c_Write(0x39);
  7454  01EB  3039               	movlw	57
  7455  01EC  221A  3180         	fcall	_i2c_Write
  7456                           
  7457                           ;Multi_RX_testjig_v1.c: 1030: i2c_Write(0x1C);
  7458  01EE  301C               	movlw	28
  7459  01EF  221A  3180         	fcall	_i2c_Write
  7460                           
  7461                           ;Multi_RX_testjig_v1.c: 1031: i2c_Write(0x70 | contrast);
  7462  01F1  0874               	movf	init_i2c_lcd_5v@contrast,w
  7463  01F2  3870               	iorlw	112
  7464  01F3  221A  3180         	fcall	_i2c_Write
  7465                           
  7466                           ;Multi_RX_testjig_v1.c: 1032: i2c_Write(0x50);
  7467  01F5  3050               	movlw	80
  7468  01F6  221A  3180         	fcall	_i2c_Write
  7469                           
  7470                           ;Multi_RX_testjig_v1.c: 1033: i2c_Write(0x6C);
  7471  01F8  306C               	movlw	108
  7472  01F9  221A  3180         	fcall	_i2c_Write
  7473                           
  7474                           ;Multi_RX_testjig_v1.c: 1034: if(single1_double2 == 1)
  7475  01FB  0B71               	decfsz	init_i2c_lcd_5v@single1_double2,w
  7476  01FC  2A00               	goto	l3002
  7477                           
  7478                           ;Multi_RX_testjig_v1.c: 1035: i2c_Write(0x38);
  7479  01FD  3038               	movlw	56
  7480  01FE  221A  3180         	fcall	_i2c_Write
  7481  0200                     l3002:	
  7482                           
  7483                           ;Multi_RX_testjig_v1.c: 1036: if(single1_double2 == 2)
  7484  0200  3002               	movlw	2
  7485  0201  0671               	xorwf	init_i2c_lcd_5v@single1_double2,w
  7486  0202  1D03               	btfss	3,2
  7487  0203  2A07               	goto	l494
  7488                           
  7489                           ;Multi_RX_testjig_v1.c: 1037: i2c_Write(0x34);
  7490  0204  3034               	movlw	52
  7491  0205  221A  3180         	fcall	_i2c_Write
  7492  0207                     l494:	
  7493                           
  7494                           ;Multi_RX_testjig_v1.c: 1038: i2c_Write(0x0C);
  7495  0207  300C               	movlw	12
  7496  0208  221A  3180         	fcall	_i2c_Write
  7497                           
  7498                           ;Multi_RX_testjig_v1.c: 1039: i2c_Write(0x06);
  7499  020A  3006               	movlw	6
  7500  020B  221A  3180         	fcall	_i2c_Write
  7501                           
  7502                           ;Multi_RX_testjig_v1.c: 1040: i2c_Write(0x01);
  7503  020D  3001               	movlw	1
  7504  020E  221A  3180         	fcall	_i2c_Write
  7505                           
  7506                           ;Multi_RX_testjig_v1.c: 1041: _delay((unsigned long)((2)*(16000000/4000.0)));
  7507  0210  300B               	movlw	11
  7508  0211  00F3               	movwf	??_init_i2c_lcd_5v+1
  7509  0212  3062               	movlw	98
  7510  0213  00F2               	movwf	??_init_i2c_lcd_5v
  7511  0214                     u4487:	
  7512  0214  0BF2               	decfsz	??_init_i2c_lcd_5v,f
  7513  0215  2A14               	goto	u4487
  7514  0216  0BF3               	decfsz	??_init_i2c_lcd_5v+1,f
  7515  0217  2A14               	goto	u4487
  7516  0218  0000               	nop
  7517                           
  7518                           ;Multi_RX_testjig_v1.c: 1042: i2c_Stop();
  7519  0219  2A2B               	ljmp	l2526
  7520  021A                     __end_of_init_i2c_lcd_5v:	
  7521  021A                     __ptext30:	
  7522 ;; *************** function _i2c_Write *****************
  7523 ;; Defined at:
  7524 ;;		line 986 in file "Multi_RX_testjig_v1.c"
  7525 ;; Parameters:    Size  Location     Type
  7526 ;;  data            1    wreg     unsigned char 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;  data            1    0[COMMON] unsigned char 
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  1    wreg      void 
  7531 ;; Registers used:
  7532 ;;		wreg, status,2
  7533 ;; Tracked objects:
  7534 ;;		On entry : 1F/4
  7535 ;;		On exit  : 1F/4
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7542 ;;Total ram usage:        1 bytes
  7543 ;; Hardware stack levels used:    1
  7544 ;; Hardware stack levels required when called:    1
  7545 ;; This function calls:
  7546 ;;		Nothing
  7547 ;; This function is called by:
  7548 ;;		_i2c_Write_string
  7549 ;;		_i2c_write_char
  7550 ;;		_init_i2c_lcd_5v
  7551 ;;		_clear_lcd
  7552 ;;		_i2c_first_line
  7553 ;;		_i2c_second_line
  7554 ;;		_lcd_set_cursor
  7555 ;;		_digitalpot
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           
  7559                           
  7560                           ;psect for function _i2c_Write
  7561  021A                     _i2c_Write:	
  7562                           
  7563                           ;incstack = 0
  7564                           ; Regs used in _i2c_Write: [wreg+status,2]
  7565                           ;i2c_Write@data stored from wreg
  7566  021A  00F0               	movwf	i2c_Write@data
  7567                           
  7568                           ;Multi_RX_testjig_v1.c: 988: SSP1BUF = data;
  7569  021B  0870               	movf	i2c_Write@data,w
  7570  021C  0091               	movwf	17	;volatile
  7571  021D                     l469:	
  7572                           ;Multi_RX_testjig_v1.c: 989: while(SSP1STATbits.BF == 1);
  7573                           
  7574  021D  1814               	btfsc	20,0	;volatile
  7575  021E  2A1D               	goto	l469
  7576  021F                     l2522:	
  7577  021F  0816               	movf	22,w	;volatile
  7578  0220  391F               	andlw	31
  7579  0221  1D03               	btfss	3,2
  7580  0222  2A1F               	goto	l2522
  7581  0223  1D14               	btfss	20,2	;volatile
  7582  0224  0008               	return
  7583  0225  2A1F               	goto	l2522
  7584  0226                     __end_of_i2c_Write:	
  7585  0226                     __ptext32:	
  7586 ;; *************** function _i2c_Start *****************
  7587 ;; Defined at:
  7588 ;;		line 977 in file "Multi_RX_testjig_v1.c"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;		None
  7591 ;; Auto vars:     Size  Location     Type
  7592 ;;		None
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  1    wreg      void 
  7595 ;; Registers used:
  7596 ;;		None
  7597 ;; Tracked objects:
  7598 ;;		On entry : 0/4
  7599 ;;		On exit  : 1F/4
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7606 ;;Total ram usage:        0 bytes
  7607 ;; Hardware stack levels used:    1
  7608 ;; Hardware stack levels required when called:    1
  7609 ;; This function calls:
  7610 ;;		Nothing
  7611 ;; This function is called by:
  7612 ;;		_i2c_Write_string
  7613 ;;		_i2c_write_char
  7614 ;;		_init_i2c_lcd_5v
  7615 ;;		_clear_lcd
  7616 ;;		_i2c_first_line
  7617 ;;		_i2c_second_line
  7618 ;;		_lcd_set_cursor
  7619 ;;		_digitalpot
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           
  7624                           ;psect for function _i2c_Start
  7625  0226                     _i2c_Start:	
  7626                           
  7627                           ;Multi_RX_testjig_v1.c: 980: SSP1CON2bits.SEN = 1;
  7628                           
  7629                           ;incstack = 0
  7630                           ; Regs used in _i2c_Start: []
  7631  0226  0024               	movlb	4	; select bank4
  7632  0227  1416               	bsf	22,0	;volatile
  7633  0228                     l463:	
  7634                           ;Multi_RX_testjig_v1.c: 982: while(SSP1CON2bits.SEN == 1);
  7635                           
  7636  0228  1C16               	btfss	22,0	;volatile
  7637  0229  0008               	return
  7638  022A  2A28               	goto	l463
  7639  022B                     __end_of_i2c_Start:	
  7640  022B                     __ptext31:	
  7641 ;; *************** function _i2c_Stop *****************
  7642 ;; Defined at:
  7643 ;;		line 993 in file "Multi_RX_testjig_v1.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;		None
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  1    wreg      void 
  7650 ;; Registers used:
  7651 ;;		None
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/4
  7654 ;;		On exit  : 1F/4
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7661 ;;Total ram usage:        0 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; Hardware stack levels required when called:    1
  7664 ;; This function calls:
  7665 ;;		Nothing
  7666 ;; This function is called by:
  7667 ;;		_i2c_Write_string
  7668 ;;		_i2c_write_char
  7669 ;;		_init_i2c_lcd_5v
  7670 ;;		_clear_lcd
  7671 ;;		_i2c_first_line
  7672 ;;		_i2c_second_line
  7673 ;;		_lcd_set_cursor
  7674 ;;		_digitalpot
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           
  7679                           ;psect for function _i2c_Stop
  7680  022B                     _i2c_Stop:	
  7681  022B                     l2526:	
  7682                           ;incstack = 0
  7683                           ; Regs used in _i2c_Stop: []
  7684                           
  7685                           
  7686                           ;Multi_RX_testjig_v1.c: 995: SSP1CON2bits.PEN = 1;
  7687  022B  0024               	movlb	4	; select bank4
  7688  022C  1516               	bsf	22,2	;volatile
  7689  022D                     l478:	
  7690                           ;Multi_RX_testjig_v1.c: 996: while(SSP1CON2bits.PEN == 1);
  7691                           
  7692  022D  1D16               	btfss	22,2	;volatile
  7693  022E  0008               	return
  7694  022F  2A2D               	goto	l478
  7695  0230                     __end_of_i2c_Stop:	
  7696  0230                     __ptext12:	
  7697 ;; *************** function _ten_thou_conv *****************
  7698 ;; Defined at:
  7699 ;;		line 1353 in file "Multi_RX_testjig_v1.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;  n               2    6[COMMON] int 
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;		None
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  1    wreg      void 
  7706 ;; Registers used:
  7707 ;;		wreg, status,2, status,0, pclath, cstack
  7708 ;; Tracked objects:
  7709 ;;		On entry : 1F/0
  7710 ;;		On exit  : 1F/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7715 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7716 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7717 ;;Total ram usage:        5 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:    2
  7720 ;; This function calls:
  7721 ;;		___bmul
  7722 ;;		___wmul
  7723 ;; This function is called by:
  7724 ;;		_lcd_print_int
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           
  7729                           ;psect for function _ten_thou_conv
  7730  0230                     _ten_thou_conv:	
  7731                           
  7732                           ;Multi_RX_testjig_v1.c: 1355: unit = n & 0x1F;
  7733                           
  7734                           ;incstack = 0
  7735                           ; Regs used in _ten_thou_conv: [wreg+status,2+status,0+pclath+cstack]
  7736  0230  0876               	movf	ten_thou_conv@n,w
  7737  0231  00EB               	movwf	_unit
  7738  0232  301F               	movlw	31
  7739  0233  05EB               	andwf	_unit,f
  7740                           
  7741                           ;Multi_RX_testjig_v1.c: 1356: ten = (n >> 5) & 0xF;
  7742  0234  0877               	movf	ten_thou_conv@n+1,w
  7743  0235  00F9               	movwf	??_ten_thou_conv+1
  7744  0236  0876               	movf	ten_thou_conv@n,w
  7745  0237  00F8               	movwf	??_ten_thou_conv
  7746  0238  3005               	movlw	5
  7747  0239  00FA               	movwf	??_ten_thou_conv+2
  7748  023A                     u2345:	
  7749  023A  0D79               	rlf	??_ten_thou_conv+1,w
  7750  023B  0CF9               	rrf	??_ten_thou_conv+1,f
  7751  023C  0CF8               	rrf	??_ten_thou_conv,f
  7752  023D  0BFA               	decfsz	??_ten_thou_conv+2,f
  7753  023E  2A3A               	goto	u2345
  7754  023F  0878               	movf	??_ten_thou_conv,w
  7755  0240  00E9               	movwf	_ten
  7756  0241  300F               	movlw	15
  7757  0242  05E9               	andwf	_ten,f
  7758                           
  7759                           ;Multi_RX_testjig_v1.c: 1357: hund = (n >> 9) & 0xF;
  7760  0243  0877               	movf	ten_thou_conv@n+1,w
  7761  0244  00F9               	movwf	??_ten_thou_conv+1
  7762  0245  0876               	movf	ten_thou_conv@n,w
  7763  0246  00F8               	movwf	??_ten_thou_conv
  7764  0247  3009               	movlw	9
  7765  0248  00FA               	movwf	??_ten_thou_conv+2
  7766  0249                     u2355:	
  7767  0249  0D79               	rlf	??_ten_thou_conv+1,w
  7768  024A  0CF9               	rrf	??_ten_thou_conv+1,f
  7769  024B  0CF8               	rrf	??_ten_thou_conv,f
  7770  024C  0BFA               	decfsz	??_ten_thou_conv+2,f
  7771  024D  2A49               	goto	u2355
  7772  024E  0878               	movf	??_ten_thou_conv,w
  7773  024F  00E7               	movwf	_hund
  7774  0250  300F               	movlw	15
  7775  0251  05E7               	andwf	_hund,f
  7776                           
  7777                           ;Multi_RX_testjig_v1.c: 1358: thou = (n >> 13) & 0x7;
  7778  0252  0877               	movf	ten_thou_conv@n+1,w
  7779  0253  00F9               	movwf	??_ten_thou_conv+1
  7780  0254  0876               	movf	ten_thou_conv@n,w
  7781  0255  00F8               	movwf	??_ten_thou_conv
  7782  0256  300D               	movlw	13
  7783  0257  00FA               	movwf	??_ten_thou_conv+2
  7784  0258                     u2365:	
  7785  0258  0D79               	rlf	??_ten_thou_conv+1,w
  7786  0259  0CF9               	rrf	??_ten_thou_conv+1,f
  7787  025A  0CF8               	rrf	??_ten_thou_conv,f
  7788  025B  0BFA               	decfsz	??_ten_thou_conv+2,f
  7789  025C  2A58               	goto	u2365
  7790  025D  0878               	movf	??_ten_thou_conv,w
  7791  025E  00EC               	movwf	_thou
  7792  025F  3007               	movlw	7
  7793  0260  05EC               	andwf	_thou,f
  7794                           
  7795                           ;Multi_RX_testjig_v1.c: 1360: unit = 2 * (thou + hund + ten) + unit;
  7796  0261  086C               	movf	_thou,w
  7797  0262  0767               	addwf	_hund,w
  7798  0263  0769               	addwf	_ten,w
  7799  0264  0709               	addwf	9,w
  7800  0265  07EB               	addwf	_unit,f
  7801                           
  7802                           ;Multi_RX_testjig_v1.c: 1361: ten_thou = (unit * 0x67) >> 10;
  7803  0266  086B               	movf	_unit,w
  7804  0267  00F0               	movwf	___wmul@multiplier
  7805  0268  3067               	movlw	103
  7806  0269  01F1               	clrf	___wmul@multiplier+1
  7807  026A  00F2               	movwf	___wmul@multiplicand
  7808  026B  01F3               	clrf	___wmul@multiplicand+1
  7809  026C  2302  3180         	fcall	___wmul
  7810  026E  0870               	movf	?___wmul,w
  7811  026F  00F8               	movwf	??_ten_thou_conv
  7812  0270  0871               	movf	?___wmul+1,w
  7813  0271  00F9               	movwf	??_ten_thou_conv+1
  7814  0272  300A               	movlw	10
  7815  0273  00FA               	movwf	??_ten_thou_conv+2
  7816  0274                     u2375:	
  7817  0274  0D79               	rlf	??_ten_thou_conv+1,w
  7818  0275  0CF9               	rrf	??_ten_thou_conv+1,f
  7819  0276  0CF8               	rrf	??_ten_thou_conv,f
  7820  0277  0BFA               	decfsz	??_ten_thou_conv+2,f
  7821  0278  2A74               	goto	u2375
  7822  0279  0878               	movf	??_ten_thou_conv,w
  7823  027A  00EA               	movwf	_ten_thou
  7824                           
  7825                           ;Multi_RX_testjig_v1.c: 1362: unit = unit - 10 * ten_thou;
  7826  027B  30F6               	movlw	246
  7827  027C  00F0               	movwf	___bmul@multiplicand
  7828  027D  086A               	movf	_ten_thou,w
  7829  027E  22DF  3180         	fcall	___bmul
  7830  0280  07EB               	addwf	_unit,f
  7831                           
  7832                           ;Multi_RX_testjig_v1.c: 1364: ten = 9 * thou + hund + 3 * ten + ten_thou;
  7833  0281  3009               	movlw	9
  7834  0282  00F0               	movwf	___bmul@multiplicand
  7835  0283  086C               	movf	_thou,w
  7836  0284  22DF  3180         	fcall	___bmul
  7837  0286  00F8               	movwf	??_ten_thou_conv
  7838  0287  0869               	movf	_ten,w
  7839  0288  0769               	addwf	_ten,w
  7840  0289  0769               	addwf	_ten,w
  7841  028A  0778               	addwf	??_ten_thou_conv,w
  7842  028B  0767               	addwf	_hund,w
  7843  028C  076A               	addwf	_ten_thou,w
  7844  028D  00E9               	movwf	_ten
  7845                           
  7846                           ;Multi_RX_testjig_v1.c: 1365: ten_thou = (ten * 0x67) >> 10;
  7847  028E  00F0               	movwf	___wmul@multiplier
  7848  028F  3067               	movlw	103
  7849  0290  01F1               	clrf	___wmul@multiplier+1
  7850  0291  00F2               	movwf	___wmul@multiplicand
  7851  0292  01F3               	clrf	___wmul@multiplicand+1
  7852  0293  2302  3180         	fcall	___wmul
  7853  0295  0870               	movf	?___wmul,w
  7854  0296  00F8               	movwf	??_ten_thou_conv
  7855  0297  0871               	movf	?___wmul+1,w
  7856  0298  00F9               	movwf	??_ten_thou_conv+1
  7857  0299  300A               	movlw	10
  7858  029A  00FA               	movwf	??_ten_thou_conv+2
  7859  029B                     u2385:	
  7860  029B  0D79               	rlf	??_ten_thou_conv+1,w
  7861  029C  0CF9               	rrf	??_ten_thou_conv+1,f
  7862  029D  0CF8               	rrf	??_ten_thou_conv,f
  7863  029E  0BFA               	decfsz	??_ten_thou_conv+2,f
  7864  029F  2A9B               	goto	u2385
  7865  02A0  0878               	movf	??_ten_thou_conv,w
  7866  02A1  00EA               	movwf	_ten_thou
  7867                           
  7868                           ;Multi_RX_testjig_v1.c: 1366: ten = ten - 10 * ten_thou;
  7869  02A2  30F6               	movlw	246
  7870  02A3  00F0               	movwf	___bmul@multiplicand
  7871  02A4  086A               	movf	_ten_thou,w
  7872  02A5  22DF  3180         	fcall	___bmul
  7873  02A7  07E9               	addwf	_ten,f
  7874                           
  7875                           ;Multi_RX_testjig_v1.c: 1368: hund = thou + 5 * hund + ten_thou;
  7876  02A8  3005               	movlw	5
  7877  02A9  00F0               	movwf	___bmul@multiplicand
  7878  02AA  0867               	movf	_hund,w
  7879  02AB  22DF  3180         	fcall	___bmul
  7880  02AD  076C               	addwf	_thou,w
  7881  02AE  076A               	addwf	_ten_thou,w
  7882  02AF  00E7               	movwf	_hund
  7883                           
  7884                           ;Multi_RX_testjig_v1.c: 1369: ten_thou = (hund * 0x67) >> 10;
  7885  02B0  00F0               	movwf	___wmul@multiplier
  7886  02B1  3067               	movlw	103
  7887  02B2  01F1               	clrf	___wmul@multiplier+1
  7888  02B3  00F2               	movwf	___wmul@multiplicand
  7889  02B4  01F3               	clrf	___wmul@multiplicand+1
  7890  02B5  2302  3180         	fcall	___wmul
  7891  02B7  0870               	movf	?___wmul,w
  7892  02B8  00F8               	movwf	??_ten_thou_conv
  7893  02B9  0871               	movf	?___wmul+1,w
  7894  02BA  00F9               	movwf	??_ten_thou_conv+1
  7895  02BB  300A               	movlw	10
  7896  02BC  00FA               	movwf	??_ten_thou_conv+2
  7897  02BD                     u2395:	
  7898  02BD  0D79               	rlf	??_ten_thou_conv+1,w
  7899  02BE  0CF9               	rrf	??_ten_thou_conv+1,f
  7900  02BF  0CF8               	rrf	??_ten_thou_conv,f
  7901  02C0  0BFA               	decfsz	??_ten_thou_conv+2,f
  7902  02C1  2ABD               	goto	u2395
  7903  02C2  0878               	movf	??_ten_thou_conv,w
  7904  02C3  00EA               	movwf	_ten_thou
  7905                           
  7906                           ;Multi_RX_testjig_v1.c: 1370: hund = hund - 10 * ten_thou;
  7907  02C4  30F6               	movlw	246
  7908  02C5  00F0               	movwf	___bmul@multiplicand
  7909  02C6  086A               	movf	_ten_thou,w
  7910  02C7  22DF  3180         	fcall	___bmul
  7911  02C9  07E7               	addwf	_hund,f
  7912                           
  7913                           ;Multi_RX_testjig_v1.c: 1372: thou = 8 * thou + ten_thou;
  7914  02CA  086C               	movf	_thou,w
  7915  02CB  0709               	addwf	9,w
  7916  02CC  0709               	addwf	9,w
  7917  02CD  0709               	addwf	9,w
  7918  02CE  076A               	addwf	_ten_thou,w
  7919  02CF  00EC               	movwf	_thou
  7920                           
  7921                           ;Multi_RX_testjig_v1.c: 1373: ten_thou = (thou * 0x1A) >> 8;
  7922  02D0  00F0               	movwf	___wmul@multiplier
  7923  02D1  301A               	movlw	26
  7924  02D2  01F1               	clrf	___wmul@multiplier+1
  7925  02D3  00F2               	movwf	___wmul@multiplicand
  7926  02D4  01F3               	clrf	___wmul@multiplicand+1
  7927  02D5  2302  3180         	fcall	___wmul
  7928  02D7  0871               	movf	?___wmul+1,w
  7929  02D8  00EA               	movwf	_ten_thou
  7930                           
  7931                           ;Multi_RX_testjig_v1.c: 1374: thou = thou - 10 * ten_thou;
  7932  02D9  30F6               	movlw	246
  7933  02DA  00F0               	movwf	___bmul@multiplicand
  7934  02DB  086A               	movf	_ten_thou,w
  7935  02DC  22DF               	fcall	___bmul
  7936  02DD  07EC               	addwf	_thou,f
  7937  02DE  0008               	return
  7938  02DF                     __end_of_ten_thou_conv:	
  7939  02DF                     __ptext14:	
  7940 ;; *************** function ___bmul *****************
  7941 ;; Defined at:
  7942 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  multiplier      1    wreg     unsigned char 
  7945 ;;  multiplicand    1    0[COMMON] unsigned char 
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;  multiplier      1    2[COMMON] unsigned char 
  7948 ;;  product         1    1[COMMON] unsigned char 
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  1    wreg      unsigned char 
  7951 ;; Registers used:
  7952 ;;		wreg, status,2, status,0
  7953 ;; Tracked objects:
  7954 ;;		On entry : 1F/0
  7955 ;;		On exit  : 1F/0
  7956 ;;		Unchanged: 1F/0
  7957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7958 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7959 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7961 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7962 ;;Total ram usage:        3 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    1
  7965 ;; This function calls:
  7966 ;;		Nothing
  7967 ;; This function is called by:
  7968 ;;		_ten_thou_conv
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           
  7973                           ;psect for function ___bmul
  7974  02DF                     ___bmul:	
  7975                           
  7976                           ;incstack = 0
  7977                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7978                           ;___bmul@multiplier stored from wreg
  7979  02DF  00F2               	movwf	___bmul@multiplier
  7980  02E0  01F1               	clrf	___bmul@product
  7981  02E1  0870               	movf	___bmul@multiplicand,w
  7982  02E2  1872               	btfsc	___bmul@multiplier,0
  7983  02E3  07F1               	addwf	___bmul@product,f
  7984  02E4  35F0               	lslf	___bmul@multiplicand,f
  7985  02E5  0870               	movf	___bmul@multiplicand,w
  7986  02E6  18F2               	btfsc	___bmul@multiplier,1
  7987  02E7  07F1               	addwf	___bmul@product,f
  7988  02E8  35F0               	lslf	___bmul@multiplicand,f
  7989  02E9  0870               	movf	___bmul@multiplicand,w
  7990  02EA  1972               	btfsc	___bmul@multiplier,2
  7991  02EB  07F1               	addwf	___bmul@product,f
  7992  02EC  35F0               	lslf	___bmul@multiplicand,f
  7993  02ED  0870               	movf	___bmul@multiplicand,w
  7994  02EE  19F2               	btfsc	___bmul@multiplier,3
  7995  02EF  07F1               	addwf	___bmul@product,f
  7996  02F0  35F0               	lslf	___bmul@multiplicand,f
  7997  02F1  0870               	movf	___bmul@multiplicand,w
  7998  02F2  1A72               	btfsc	___bmul@multiplier,4
  7999  02F3  07F1               	addwf	___bmul@product,f
  8000  02F4  35F0               	lslf	___bmul@multiplicand,f
  8001  02F5  0870               	movf	___bmul@multiplicand,w
  8002  02F6  1AF2               	btfsc	___bmul@multiplier,5
  8003  02F7  07F1               	addwf	___bmul@product,f
  8004  02F8  35F0               	lslf	___bmul@multiplicand,f
  8005  02F9  0870               	movf	___bmul@multiplicand,w
  8006  02FA  1B72               	btfsc	___bmul@multiplier,6
  8007  02FB  07F1               	addwf	___bmul@product,f
  8008  02FC  35F0               	lslf	___bmul@multiplicand,f
  8009  02FD  0870               	movf	___bmul@multiplicand,w
  8010  02FE  1BF2               	btfsc	___bmul@multiplier,7
  8011  02FF  07F1               	addwf	___bmul@product,f
  8012  0300  0871               	movf	___bmul@product,w
  8013  0301  0008               	return
  8014  0302                     __end_of___bmul:	
  8015  0302                     __ptext13:	
  8016 ;; *************** function ___wmul *****************
  8017 ;; Defined at:
  8018 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;  multiplier      2    0[COMMON] unsigned int 
  8021 ;;  multiplicand    2    2[COMMON] unsigned int 
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;  product         2    4[COMMON] unsigned int 
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  2    0[COMMON] unsigned int 
  8026 ;; Registers used:
  8027 ;;		wreg, status,2, status,0
  8028 ;; Tracked objects:
  8029 ;;		On entry : 1F/0
  8030 ;;		On exit  : 1F/0
  8031 ;;		Unchanged: 1F/0
  8032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8033 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8034 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8036 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8037 ;;Total ram usage:        6 bytes
  8038 ;; Hardware stack levels used:    1
  8039 ;; Hardware stack levels required when called:    1
  8040 ;; This function calls:
  8041 ;;		Nothing
  8042 ;; This function is called by:
  8043 ;;		_ten_thou_conv
  8044 ;; This function uses a non-reentrant model
  8045 ;;
  8046                           
  8047                           
  8048                           ;psect for function ___wmul
  8049  0302                     ___wmul:	
  8050                           
  8051                           ;incstack = 0
  8052                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8053  0302  01F4               	clrf	___wmul@product
  8054  0303  01F5               	clrf	___wmul@product+1
  8055  0304                     l2574:	
  8056  0304  1C70               	btfss	___wmul@multiplier,0
  8057  0305  2B0A               	goto	l2578
  8058  0306  0872               	movf	___wmul@multiplicand,w
  8059  0307  07F4               	addwf	___wmul@product,f
  8060  0308  0873               	movf	___wmul@multiplicand+1,w
  8061  0309  3DF5               	addwfc	___wmul@product+1,f
  8062  030A                     l2578:	
  8063  030A  35F2               	lslf	___wmul@multiplicand,f
  8064  030B  0DF3               	rlf	___wmul@multiplicand+1,f
  8065  030C  36F1               	lsrf	___wmul@multiplier+1,f
  8066  030D  0CF0               	rrf	___wmul@multiplier,f
  8067  030E  0870               	movf	___wmul@multiplier,w
  8068  030F  0471               	iorwf	___wmul@multiplier+1,w
  8069  0310  1D03               	btfss	3,2
  8070  0311  2B04               	goto	l2574
  8071  0312  0875               	movf	___wmul@product+1,w
  8072  0313  00F1               	movwf	?___wmul+1
  8073  0314  0874               	movf	___wmul@product,w
  8074  0315  00F0               	movwf	?___wmul
  8075  0316  0008               	return
  8076  0317                     __end_of___wmul:	
  8077                           
  8078                           	psect	swtext2
  8079  0613                     __pswtext2:	
  8080  0613                     S3948:	
  8081  0613  3180  28A7         	ljmp	l3088
  8082  0615  3180  28A9         	ljmp	l3090
  8083  0617  3180  28AB         	ljmp	l3092
  8084  0619  3180  28AD         	ljmp	l3094
  8085  061B  3180  28AF         	ljmp	l3096
  8086  061D  3180  28B1         	ljmp	l3098
  8087  061F  3180  28B3         	ljmp	l3100
  8088  0621  3180  28B5         	ljmp	l3102
  8089  0623  3180  28B7         	ljmp	l3104
  8090  0625  3180  28B9         	ljmp	l3106
  8091  0627  3180  28BB         	ljmp	l3108
  8092  0629  3180  28BD         	ljmp	l3110
  8093  062B  3180  28BF         	ljmp	l3112
  8094  062D  3180  28C6         	ljmp	l671
  8095  062F  3180  28C1         	ljmp	l3114
  8096  0631  3180  28C6         	ljmp	l671
  8097  0633  3180  28C6         	ljmp	l671
  8098  0635  3180  28C6         	ljmp	l671
  8099  0637  3180  28C6         	ljmp	l671
  8100  0639  3180  28C3         	ljmp	l3116
  8101                           
  8102                           	psect	intentry
  8103  0004                     __pintentry:	
  8104 ;; *************** function _isr *****************
  8105 ;; Defined at:
  8106 ;;		line 308 in file "Multi_RX_testjig_v1.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;		None
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;		None
  8111 ;; Return value:  Size  Location     Type
  8112 ;;                  1    wreg      void 
  8113 ;; Registers used:
  8114 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 1F/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8124 ;;Total ram usage:        0 bytes
  8125 ;; Hardware stack levels used:    1
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		Interrupt level 1
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133  0004                     _isr:	
  8134                           
  8135                           ;incstack = 0
  8136  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8137                           
  8138                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  8139  0005  3180               	pagesel	$
  8140                           
  8141                           ;Multi_RX_testjig_v1.c: 310: if(INTCONbits.TMR0IF == 1)
  8142  0006  1D0B               	btfss	11,2	;volatile
  8143  0007  2822               	goto	i1l3264
  8144                           
  8145                           ;Multi_RX_testjig_v1.c: 311: {
  8146                           ;Multi_RX_testjig_v1.c: 313: if(testjig_timer)
  8147  0008  0020               	movlb	0	; select bank0
  8148  0009  0861               	movf	_testjig_timer,w	;volatile
  8149  000A  0462               	iorwf	_testjig_timer+1,w	;volatile
  8150  000B  1903               	btfsc	3,2
  8151  000C  2811               	goto	i1l3256
  8152                           
  8153                           ;Multi_RX_testjig_v1.c: 314: testjig_timer--;
  8154  000D  3001               	movlw	1
  8155  000E  02E1               	subwf	_testjig_timer,f	;volatile
  8156  000F  3000               	movlw	0
  8157  0010  3BE2               	subwfb	_testjig_timer+1,f	;volatile
  8158  0011                     i1l3256:	
  8159                           
  8160                           ;Multi_RX_testjig_v1.c: 315: if(uart_receive_timer)
  8161  0011  0865               	movf	_uart_receive_timer,w	;volatile
  8162  0012  0466               	iorwf	_uart_receive_timer+1,w	;volatile
  8163  0013  1903               	btfsc	3,2
  8164  0014  2819               	goto	i1l271
  8165                           
  8166                           ;Multi_RX_testjig_v1.c: 316: uart_receive_timer--;
  8167  0015  30FF               	movlw	-1
  8168  0016  07E5               	addwf	_uart_receive_timer,f	;volatile
  8169  0017  1C03               	skipc
  8170  0018  03E6               	decf	_uart_receive_timer+1,f	;volatile
  8171  0019                     i1l271:	
  8172                           
  8173                           ;Multi_RX_testjig_v1.c: 317: if(motor_direction_timer)
  8174  0019  085D               	movf	_motor_direction_timer,w	;volatile
  8175  001A  045E               	iorwf	_motor_direction_timer+1,w	;volatile
  8176  001B  1903               	btfsc	3,2
  8177  001C  2821               	goto	i1l3262
  8178                           
  8179                           ;Multi_RX_testjig_v1.c: 318: motor_direction_timer--;
  8180  001D  30FF               	movlw	-1
  8181  001E  07DD               	addwf	_motor_direction_timer,f	;volatile
  8182  001F  1C03               	skipc
  8183  0020  03DE               	decf	_motor_direction_timer+1,f	;volatile
  8184  0021                     i1l3262:	
  8185                           
  8186                           ;Multi_RX_testjig_v1.c: 320: INTCONbits.TMR0IF = 0;
  8187  0021  110B               	bcf	11,2	;volatile
  8188  0022                     i1l3264:	
  8189                           
  8190                           ;Multi_RX_testjig_v1.c: 322: }
  8191                           ;Multi_RX_testjig_v1.c: 323: if(PIR1bits.TMR2IF == 1)
  8192  0022  0020               	movlb	0	; select bank0
  8193  0023  1C91               	btfss	17,1	;volatile
  8194  0024  2893               	goto	i1l295
  8195                           
  8196                           ;Multi_RX_testjig_v1.c: 324: {
  8197                           ;Multi_RX_testjig_v1.c: 326: if(pickit_timer)
  8198  0025  085F               	movf	_pickit_timer,w	;volatile
  8199  0026  0460               	iorwf	_pickit_timer+1,w	;volatile
  8200  0027  1903               	btfsc	3,2
  8201  0028  2866               	goto	i1l3296
  8202                           
  8203                           ;Multi_RX_testjig_v1.c: 327: pickit_timer--;
  8204  0029  3001               	movlw	1
  8205  002A  02DF               	subwf	_pickit_timer,f	;volatile
  8206  002B  3000               	movlw	0
  8207  002C  3BE0               	subwfb	_pickit_timer+1,f	;volatile
  8208  002D  2870               	goto	i1l3298
  8209  002E                     i1l277:	
  8210                           ;Multi_RX_testjig_v1.c: 331: {
  8211                           ;Multi_RX_testjig_v1.c: 332: case pickit_start:
  8212                           
  8213                           
  8214                           ;Multi_RX_testjig_v1.c: 333: LATC2 = 1;
  8215  002E  0022               	movlb	2	; select bank2
  8216  002F  150E               	bsf	14,2	;volatile
  8217                           
  8218                           ;Multi_RX_testjig_v1.c: 334: LATC7 = 1;
  8219  0030  178E               	bsf	14,7	;volatile
  8220                           
  8221                           ;Multi_RX_testjig_v1.c: 335: pickit_timer = 10;
  8222  0031  300A               	movlw	10
  8223  0032  0020               	movlb	0	; select bank0
  8224  0033  00DF               	movwf	_pickit_timer	;volatile
  8225  0034  01E0               	clrf	_pickit_timer+1	;volatile
  8226                           
  8227                           ;Multi_RX_testjig_v1.c: 336: pickit_state = pickit_push_button;
  8228  0035  3002               	movlw	2
  8229  0036  2864               	goto	L33
  8230  0037                     i1l3272:	
  8231                           ;Multi_RX_testjig_v1.c: 337: break;
  8232                           
  8233                           
  8234                           ;Multi_RX_testjig_v1.c: 339: pickit_timer = 1000;
  8235  0037  30E8               	movlw	232
  8236  0038  00DF               	movwf	_pickit_timer	;volatile
  8237  0039  3003               	movlw	3
  8238  003A  00E0               	movwf	_pickit_timer+1	;volatile
  8239                           
  8240                           ;Multi_RX_testjig_v1.c: 340: LATC6 = 1;
  8241  003B  0022               	movlb	2	; select bank2
  8242  003C  170E               	bsf	14,6	;volatile
  8243                           
  8244                           ;Multi_RX_testjig_v1.c: 341: pickit_state = pickit_busy;
  8245  003D  2863               	goto	L34
  8246  003E                     i1l280:	
  8247                           ;Multi_RX_testjig_v1.c: 343: case pickit_busy:
  8248                           
  8249                           ;Multi_RX_testjig_v1.c: 342: break;
  8250                           
  8251                           
  8252                           ;Multi_RX_testjig_v1.c: 344: LATC6 = 0;
  8253  003E  0022               	movlb	2	; select bank2
  8254  003F  130E               	bcf	14,6	;volatile
  8255                           
  8256                           ;Multi_RX_testjig_v1.c: 345: if(RE6 == 0)
  8257  0040  0020               	movlb	0	; select bank0
  8258  0041  1B10               	btfsc	16,6	;volatile
  8259  0042  284A               	goto	i1l3282
  8260  0043  3065               	movlw	101
  8261                           
  8262                           ;Multi_RX_testjig_v1.c: 346: {
  8263                           ;Multi_RX_testjig_v1.c: 347: pickit_red_counter++;
  8264  0044  0AE8               	incf	_pickit_red_counter,f
  8265                           
  8266                           ;Multi_RX_testjig_v1.c: 348: if(pickit_red_counter > 100)
  8267  0045  0268               	subwf	_pickit_red_counter,w
  8268  0046  1C03               	skipc
  8269  0047  284B               	goto	i1l3284
  8270                           
  8271                           ;Multi_RX_testjig_v1.c: 349: pickit_state = pickit_finish;
  8272  0048  01EF               	clrf	_pickit_state
  8273  0049  284B               	goto	i1l3284
  8274  004A                     i1l3282:	
  8275                           
  8276                           ;Multi_RX_testjig_v1.c: 351: else
  8277                           ;Multi_RX_testjig_v1.c: 352: pickit_red_counter = 0;
  8278  004A  01E8               	clrf	_pickit_red_counter
  8279  004B                     i1l3284:	
  8280                           
  8281                           ;Multi_RX_testjig_v1.c: 353: if(RE5 == 0)
  8282  004B  1A90               	btfsc	16,5	;volatile
  8283  004C  2854               	goto	i1l284
  8284                           
  8285                           ;Multi_RX_testjig_v1.c: 354: {
  8286                           ;Multi_RX_testjig_v1.c: 355: pickit_state = pickit_error;
  8287  004D  3004               	movlw	4
  8288  004E  00EF               	movwf	_pickit_state
  8289                           
  8290                           ;Multi_RX_testjig_v1.c: 356: pickit_timer = 1000;
  8291  004F  30E8               	movlw	232
  8292  0050  00DF               	movwf	_pickit_timer	;volatile
  8293  0051  3003               	movlw	3
  8294  0052  00E0               	movwf	_pickit_timer+1	;volatile
  8295                           
  8296                           ;Multi_RX_testjig_v1.c: 357: }
  8297  0053  2857               	goto	i1l3290
  8298  0054                     i1l284:	
  8299                           
  8300                           ;Multi_RX_testjig_v1.c: 358: else if(RE4 == 0)
  8301  0054  1A10               	btfsc	16,4	;volatile
  8302  0055  2857               	goto	i1l3290
  8303                           
  8304                           ;Multi_RX_testjig_v1.c: 359: {
  8305                           ;Multi_RX_testjig_v1.c: 360: pickit_state = pickit_finish;
  8306  0056  01EF               	clrf	_pickit_state
  8307  0057                     i1l3290:	
  8308                           
  8309                           ;Multi_RX_testjig_v1.c: 361: }
  8310                           ;Multi_RX_testjig_v1.c: 362: pickit_timer = 1;
  8311  0057  3001               	movlw	1
  8312  0058  00DF               	movwf	_pickit_timer	;volatile
  8313  0059  01E0               	clrf	_pickit_timer+1	;volatile
  8314                           
  8315                           ;Multi_RX_testjig_v1.c: 363: break;
  8316  005A  2870               	goto	i1l3298
  8317  005B                     i1l287:	
  8318                           ;Multi_RX_testjig_v1.c: 364: case pickit_error:
  8319                           
  8320                           
  8321                           ;Multi_RX_testjig_v1.c: 365: LATC2 = 0;
  8322  005B  0022               	movlb	2	; select bank2
  8323  005C  110E               	bcf	14,2	;volatile
  8324                           
  8325                           ;Multi_RX_testjig_v1.c: 366: LATC7 = 0;
  8326  005D  138E               	bcf	14,7	;volatile
  8327                           
  8328                           ;Multi_RX_testjig_v1.c: 367: break;
  8329  005E  2870               	goto	i1l3298
  8330  005F                     i1l288:	
  8331                           ;Multi_RX_testjig_v1.c: 368: case pickit_finish:
  8332                           
  8333                           
  8334                           ;Multi_RX_testjig_v1.c: 369: LATC2 = 0;
  8335  005F  0022               	movlb	2	; select bank2
  8336  0060  110E               	bcf	14,2	;volatile
  8337                           
  8338                           ;Multi_RX_testjig_v1.c: 370: LATC7 = 0;
  8339  0061  138E               	bcf	14,7	;volatile
  8340                           
  8341                           ;Multi_RX_testjig_v1.c: 371: pickit_state = pickit_idle;
  8342  0062  3005               	movlw	5
  8343  0063                     L34:	
  8344  0063  0020               	movlb	0	; select bank0
  8345  0064                     L33:	
  8346  0064  00EF               	movwf	_pickit_state
  8347                           
  8348                           ;Multi_RX_testjig_v1.c: 372: break;
  8349  0065  2870               	goto	i1l3298
  8350  0066                     i1l3296:	
  8351  0066  086F               	movf	_pickit_state,w
  8352                           
  8353                           ; Switch size 1, requested type "speed"
  8354                           ; Number of cases is 6, Range of values is 0 to 5
  8355                           ; switch strategies available:
  8356                           ; Name         Instructions Cycles
  8357                           ; direct_byte           18     6 (fixed)
  8358                           ; simple_byte           19    10 (average)
  8359                           ; jumptable            260     6 (fixed)
  8360                           ;	Chosen strategy is direct_byte
  8361  0067  0084               	movwf	4
  8362  0068  3006               	movlw	6
  8363  0069  0204               	subwf	4,w
  8364  006A  1803               	skipnc
  8365  006B  2870               	goto	i1l3298
  8366  006C  3186               	movlp	high i1S3950
  8367  006D  3504               	lslf	4,w
  8368  006E  3E67               	addlw	low i1S3950
  8369  006F  0082               	movwf	2
  8370  0070                     i1l3298:	
  8371                           
  8372                           ;Multi_RX_testjig_v1.c: 376: }
  8373                           ;Multi_RX_testjig_v1.c: 438: if(buzz_timer)
  8374  0070  0021               	movlb	1	; select bank1
  8375  0071  0820               	movf	_buzz_timer^(0+128),w	;volatile
  8376  0072  0421               	iorwf	(_buzz_timer+1)^(0+128),w	;volatile
  8377  0073  1903               	btfsc	3,2
  8378  0074  287A               	goto	i1l290
  8379                           
  8380                           ;Multi_RX_testjig_v1.c: 439: buzz_timer--;
  8381  0075  3001               	movlw	1
  8382  0076  02A0               	subwf	_buzz_timer^(0+128),f	;volatile
  8383  0077  3000               	movlw	0
  8384  0078  3BA1               	subwfb	(_buzz_timer+1)^(0+128),f	;volatile
  8385  0079  287C               	goto	i1l3302
  8386  007A                     i1l290:	
  8387                           
  8388                           ;Multi_RX_testjig_v1.c: 440: else
  8389                           ;Multi_RX_testjig_v1.c: 441: LATC5 = 0;
  8390  007A  0022               	movlb	2	; select bank2
  8391  007B  128E               	bcf	14,5	;volatile
  8392  007C                     i1l3302:	
  8393                           
  8394                           ;Multi_RX_testjig_v1.c: 442: if(one_second_timer)
  8395  007C  0020               	movlb	0	; select bank0
  8396  007D  086D               	movf	_one_second_timer,w	;volatile
  8397  007E  046E               	iorwf	_one_second_timer+1,w	;volatile
  8398  007F  1903               	btfsc	3,2
  8399  0080  2886               	goto	i1l3306
  8400                           
  8401                           ;Multi_RX_testjig_v1.c: 443: one_second_timer--;
  8402  0081  3001               	movlw	1
  8403  0082  02ED               	subwf	_one_second_timer,f	;volatile
  8404  0083  3000               	movlw	0
  8405  0084  3BEE               	subwfb	_one_second_timer+1,f	;volatile
  8406  0085  288A               	goto	i1l3308
  8407  0086                     i1l3306:	
  8408                           
  8409                           ;Multi_RX_testjig_v1.c: 444: else
  8410                           ;Multi_RX_testjig_v1.c: 445: {
  8411                           ;Multi_RX_testjig_v1.c: 446: one_second_timer = 1000;
  8412  0086  30E8               	movlw	232
  8413  0087  00ED               	movwf	_one_second_timer	;volatile
  8414  0088  3003               	movlw	3
  8415  0089  00EE               	movwf	_one_second_timer+1	;volatile
  8416  008A                     i1l3308:	
  8417                           
  8418                           ;Multi_RX_testjig_v1.c: 447: }
  8419                           ;Multi_RX_testjig_v1.c: 448: if(tj_timer)
  8420  008A  0863               	movf	_tj_timer,w
  8421  008B  0464               	iorwf	_tj_timer+1,w
  8422  008C  1903               	btfsc	3,2
  8423  008D  2892               	goto	i1l3312
  8424                           
  8425                           ;Multi_RX_testjig_v1.c: 449: tj_timer--;
  8426  008E  3001               	movlw	1
  8427  008F  02E3               	subwf	_tj_timer,f
  8428  0090  3000               	movlw	0
  8429  0091  3BE4               	subwfb	_tj_timer+1,f
  8430  0092                     i1l3312:	
  8431                           
  8432                           ;Multi_RX_testjig_v1.c: 450: PIR1bits.TMR2IF = 0;
  8433  0092  1091               	bcf	17,1	;volatile
  8434  0093                     i1l295:	
  8435  0093  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8436  0094  0009               	retfie
  8437  0095                     __end_of_isr:	
  8438  007E                     btemp	set	126	;btemp
  8439  007E                     int$flags	set	126
  8440  007E                     wtemp	set	126
  8441  007E                     wtemp0	set	126
  8442  0080                     wtemp1	set	128
  8443  0082                     wtemp2	set	130
  8444  0084                     wtemp3	set	132
  8445  0086                     wtemp4	set	134
  8446  0088                     wtemp5	set	136
  8447  007F                     wtemp6	set	127
  8448  007E                     ttemp	set	126
  8449  007E                     ttemp0	set	126
  8450  0081                     ttemp1	set	129
  8451  0084                     ttemp2	set	132
  8452  0087                     ttemp3	set	135
  8453  007F                     ttemp4	set	127
  8454  007E                     ltemp	set	126
  8455  007E                     ltemp0	set	126
  8456  0082                     ltemp1	set	130
  8457  0086                     ltemp2	set	134
  8458  0080                     ltemp3	set	128
  8459                           
  8460                           	psect	swtext3
  8461  0667                     __pswtext3:	
  8462  0667                     i1S3950:	
  8463  0667  3180  285F         	ljmp	i1l288
  8464  0669  3180  282E         	ljmp	i1l277
  8465  066B  3180  2837         	ljmp	i1l3272
  8466  066D  3180  283E         	ljmp	i1l280
  8467  066F  3180  285B         	ljmp	i1l287
  8468  0671  3180  2870         	ljmp	i1l3298


Data Sizes:
    Strings     811
    Constant    0
    Data        2
    BSS         24
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      80
    BANK1            80      0       2
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0

Pointer List with Targets:

    print_screen@bottom	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_170(CODE[17]), STR_168(CODE[13]), STR_166(CODE[14]), STR_164(CODE[8]), 
		 -> STR_162(CODE[8]), STR_160(CODE[14]), STR_158(CODE[11]), STR_156(CODE[13]), 
		 -> STR_152(CODE[10]), STR_148(CODE[2]), STR_140(CODE[16]), STR_138(CODE[7]), 
		 -> STR_136(CODE[10]), STR_126(CODE[5]), STR_124(CODE[9]), STR_112(CODE[4]), 
		 -> STR_90(CODE[3]), STR_88(CODE[1]), STR_66(CODE[3]), STR_64(CODE[1]), 
		 -> STR_52(CODE[5]), STR_50(CODE[1]), STR_44(CODE[6]), STR_36(CODE[6]), 
		 -> STR_34(CODE[9]), STR_30(CODE[13]), STR_28(CODE[1]), STR_6(CODE[1]), 
		 -> STR_2(CODE[17]), 

    print_screen@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_169(CODE[12]), STR_167(CODE[17]), STR_165(CODE[17]), STR_163(CODE[17]), 
		 -> STR_161(CODE[9]), STR_159(CODE[13]), STR_157(CODE[10]), STR_155(CODE[16]), 
		 -> STR_151(CODE[10]), STR_147(CODE[14]), STR_139(CODE[8]), STR_137(CODE[8]), 
		 -> STR_135(CODE[8]), STR_125(CODE[8]), STR_123(CODE[8]), STR_111(CODE[8]), 
		 -> STR_89(CODE[9]), STR_87(CODE[9]), STR_65(CODE[9]), STR_63(CODE[9]), 
		 -> STR_51(CODE[11]), STR_49(CODE[11]), STR_43(CODE[13]), STR_35(CODE[13]), 
		 -> STR_33(CODE[19]), STR_29(CODE[12]), STR_27(CODE[19]), STR_5(CODE[15]), 
		 -> STR_1(CODE[9]), 

    print_error@bottom	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_154(CODE[4]), STR_150(CODE[4]), STR_146(CODE[4]), STR_144(CODE[15]), 
		 -> STR_142(CODE[17]), STR_134(CODE[13]), STR_132(CODE[14]), STR_130(CODE[4]), 
		 -> STR_128(CODE[4]), STR_122(CODE[13]), STR_120(CODE[16]), STR_118(CODE[14]), 
		 -> STR_116(CODE[4]), STR_114(CODE[4]), STR_110(CODE[4]), STR_108(CODE[9]), 
		 -> STR_106(CODE[3]), STR_104(CODE[7]), STR_102(CODE[4]), STR_100(CODE[4]), 
		 -> STR_98(CODE[15]), STR_96(CODE[16]), STR_94(CODE[3]), STR_92(CODE[9]), 
		 -> STR_86(CODE[3]), STR_84(CODE[9]), STR_82(CODE[3]), STR_80(CODE[7]), 
		 -> STR_78(CODE[4]), STR_76(CODE[4]), STR_74(CODE[15]), STR_72(CODE[16]), 
		 -> STR_70(CODE[3]), STR_68(CODE[9]), STR_62(CODE[9]), STR_60(CODE[3]), 
		 -> STR_58(CODE[7]), STR_56(CODE[3]), STR_54(CODE[9]), STR_48(CODE[9]), 
		 -> STR_46(CODE[9]), STR_42(CODE[3]), STR_40(CODE[12]), STR_38(CODE[3]), 
		 -> STR_32(CODE[6]), STR_26(CODE[12]), STR_24(CODE[11]), STR_22(CODE[13]), 
		 -> STR_20(CODE[13]), STR_18(CODE[13]), STR_16(CODE[13]), STR_14(CODE[12]), 
		 -> STR_12(CODE[11]), STR_10(CODE[13]), STR_8(CODE[13]), STR_4(CODE[14]), 

    print_error@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_153(CODE[12]), STR_149(CODE[12]), STR_145(CODE[12]), STR_143(CODE[8]), 
		 -> STR_141(CODE[8]), STR_133(CODE[13]), STR_131(CODE[13]), STR_129(CODE[12]), 
		 -> STR_127(CODE[12]), STR_121(CODE[12]), STR_119(CODE[12]), STR_117(CODE[12]), 
		 -> STR_115(CODE[12]), STR_113(CODE[12]), STR_109(CODE[12]), STR_107(CODE[10]), 
		 -> STR_105(CODE[12]), STR_103(CODE[9]), STR_101(CODE[12]), STR_99(CODE[12]), 
		 -> STR_97(CODE[9]), STR_95(CODE[9]), STR_93(CODE[12]), STR_91(CODE[10]), 
		 -> STR_85(CODE[12]), STR_83(CODE[10]), STR_81(CODE[12]), STR_79(CODE[9]), 
		 -> STR_77(CODE[12]), STR_75(CODE[12]), STR_73(CODE[9]), STR_71(CODE[9]), 
		 -> STR_69(CODE[12]), STR_67(CODE[10]), STR_61(CODE[19]), STR_59(CODE[12]), 
		 -> STR_57(CODE[16]), STR_55(CODE[12]), STR_53(CODE[19]), STR_47(CODE[12]), 
		 -> STR_45(CODE[12]), STR_41(CODE[12]), STR_39(CODE[13]), STR_37(CODE[12]), 
		 -> STR_31(CODE[12]), STR_25(CODE[14]), STR_23(CODE[14]), STR_21(CODE[15]), 
		 -> STR_19(CODE[15]), STR_17(CODE[14]), STR_15(CODE[14]), STR_13(CODE[14]), 
		 -> STR_11(CODE[14]), STR_9(CODE[14]), STR_7(CODE[14]), STR_3(CODE[9]), 

    i2c_Write_string@data	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_170(CODE[17]), STR_169(CODE[12]), STR_168(CODE[13]), STR_167(CODE[17]), 
		 -> STR_166(CODE[14]), STR_165(CODE[17]), STR_164(CODE[8]), STR_163(CODE[17]), 
		 -> STR_162(CODE[8]), STR_161(CODE[9]), STR_160(CODE[14]), STR_159(CODE[13]), 
		 -> STR_158(CODE[11]), STR_157(CODE[10]), STR_156(CODE[13]), STR_155(CODE[16]), 
		 -> STR_154(CODE[4]), STR_153(CODE[12]), STR_152(CODE[10]), STR_151(CODE[10]), 
		 -> STR_150(CODE[4]), STR_149(CODE[12]), STR_148(CODE[2]), STR_147(CODE[14]), 
		 -> STR_146(CODE[4]), STR_145(CODE[12]), STR_144(CODE[15]), STR_143(CODE[8]), 
		 -> STR_142(CODE[17]), STR_141(CODE[8]), STR_140(CODE[16]), STR_139(CODE[8]), 
		 -> STR_138(CODE[7]), STR_137(CODE[8]), STR_136(CODE[10]), STR_135(CODE[8]), 
		 -> STR_134(CODE[13]), STR_133(CODE[13]), STR_132(CODE[14]), STR_131(CODE[13]), 
		 -> STR_130(CODE[4]), STR_129(CODE[12]), STR_128(CODE[4]), STR_127(CODE[12]), 
		 -> STR_126(CODE[5]), STR_125(CODE[8]), STR_124(CODE[9]), STR_123(CODE[8]), 
		 -> STR_122(CODE[13]), STR_121(CODE[12]), STR_120(CODE[16]), STR_119(CODE[12]), 
		 -> STR_118(CODE[14]), STR_117(CODE[12]), STR_116(CODE[4]), STR_115(CODE[12]), 
		 -> STR_114(CODE[4]), STR_113(CODE[12]), STR_112(CODE[4]), STR_111(CODE[8]), 
		 -> STR_110(CODE[4]), STR_109(CODE[12]), STR_108(CODE[9]), STR_107(CODE[10]), 
		 -> STR_106(CODE[3]), STR_105(CODE[12]), STR_104(CODE[7]), STR_103(CODE[9]), 
		 -> STR_102(CODE[4]), STR_101(CODE[12]), STR_100(CODE[4]), STR_99(CODE[12]), 
		 -> STR_98(CODE[15]), STR_97(CODE[9]), STR_96(CODE[16]), STR_95(CODE[9]), 
		 -> STR_94(CODE[3]), STR_93(CODE[12]), STR_92(CODE[9]), STR_91(CODE[10]), 
		 -> STR_90(CODE[3]), STR_89(CODE[9]), STR_88(CODE[1]), STR_87(CODE[9]), 
		 -> STR_86(CODE[3]), STR_85(CODE[12]), STR_84(CODE[9]), STR_83(CODE[10]), 
		 -> STR_82(CODE[3]), STR_81(CODE[12]), STR_80(CODE[7]), STR_79(CODE[9]), 
		 -> STR_78(CODE[4]), STR_77(CODE[12]), STR_76(CODE[4]), STR_75(CODE[12]), 
		 -> STR_74(CODE[15]), STR_73(CODE[9]), STR_72(CODE[16]), STR_71(CODE[9]), 
		 -> STR_70(CODE[3]), STR_69(CODE[12]), STR_68(CODE[9]), STR_67(CODE[10]), 
		 -> STR_66(CODE[3]), STR_65(CODE[9]), STR_64(CODE[1]), STR_63(CODE[9]), 
		 -> STR_62(CODE[9]), STR_61(CODE[19]), STR_60(CODE[3]), STR_59(CODE[12]), 
		 -> STR_58(CODE[7]), STR_57(CODE[16]), STR_56(CODE[3]), STR_55(CODE[12]), 
		 -> STR_54(CODE[9]), STR_53(CODE[19]), STR_52(CODE[5]), STR_51(CODE[11]), 
		 -> STR_50(CODE[1]), STR_49(CODE[11]), STR_48(CODE[9]), STR_47(CODE[12]), 
		 -> STR_46(CODE[9]), STR_45(CODE[12]), STR_44(CODE[6]), STR_43(CODE[13]), 
		 -> STR_42(CODE[3]), STR_41(CODE[12]), STR_40(CODE[12]), STR_39(CODE[13]), 
		 -> STR_38(CODE[3]), STR_37(CODE[12]), STR_36(CODE[6]), STR_35(CODE[13]), 
		 -> STR_34(CODE[9]), STR_33(CODE[19]), STR_32(CODE[6]), STR_31(CODE[12]), 
		 -> STR_30(CODE[13]), STR_29(CODE[12]), STR_28(CODE[1]), STR_27(CODE[19]), 
		 -> STR_26(CODE[12]), STR_25(CODE[14]), STR_24(CODE[11]), STR_23(CODE[14]), 
		 -> STR_22(CODE[13]), STR_21(CODE[15]), STR_20(CODE[13]), STR_19(CODE[15]), 
		 -> STR_18(CODE[13]), STR_17(CODE[14]), STR_16(CODE[13]), STR_15(CODE[14]), 
		 -> STR_14(CODE[12]), STR_13(CODE[14]), STR_12(CODE[11]), STR_11(CODE[14]), 
		 -> STR_10(CODE[13]), STR_9(CODE[14]), STR_8(CODE[13]), STR_7(CODE[14]), 
		 -> STR_6(CODE[1]), STR_5(CODE[15]), STR_4(CODE[14]), STR_3(CODE[9]), 
		 -> STR_2(CODE[17]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _testjig_done->_print_screen
    _print_error->_print_screen
    _print_screen->_i2c_Write_string
    _i2c_second_line->_i2c_Write
    _i2c_first_line->_i2c_Write
    _i2c_Write_string->_i2c_Write
    _clear_lcd->_i2c_Write
    _ten_thou_conv->___wmul
    _lcd_set_cursor->_i2c_Write
    _i2c_write_char->_i2c_Write
    _init_i2c_lcd_5v->_i2c_Write
    _get_30v_current->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    ___ftadd->___ftmul
    _Vout_set->_digitalpot
    _digitalpot->_i2c_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_print_int
    _lcd_print_int->_get_30v_current
    _get_30v_current->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   29804
                                             47 BANK0      6     6      0
                        _ADC_get_val
                             _RX_one
                             _TX_one
                           _Vout_set
                           _buzz_one
                      _debug_fast_tx
                    _get_30v_current
                           _init_ADC
                  _init_current_sink
                           _init_i2c
                    _init_i2c_lcd_5v
                      _lcd_print_int
                   _power_supply_set
                        _print_error
                       _print_screen
                       _testjig_done
 ---------------------------------------------------------------------------------
 (1) _testjig_done                                         4     4      0    4258
                                              8 COMMON     4     4      0
                           _buzz_one
                      _debug_fast_tx
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (1) _print_error                                          7     3      4   10537
                                              8 COMMON     4     0      4
                                              0 BANK0      3     3      0
                           _buzz_one
                          _clear_lcd
                      _debug_fast_tx
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (2) _print_screen                                         4     0      4    3463
                                              4 COMMON     4     0      4
                          _clear_lcd
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
 ---------------------------------------------------------------------------------
 (3) _i2c_second_line                                      1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_first_line                                       1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write_string                                     3     1      2     279
                                              1 COMMON     3     1      2
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _clear_lcd                                            2     2      0      22
                                              1 COMMON     2     2      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _power_supply_set                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _debug_fast_tx                                        3     1      2     493
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _buzz_one                                             2     0      2     234
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd_print_int                                        6     0      6    2684
                                             41 BANK0      6     0      6
                    _get_30v_current (ARG)
                     _i2c_write_char
                     _lcd_set_cursor
                      _ten_thou_conv
 ---------------------------------------------------------------------------------
 (2) _ten_thou_conv                                        5     3      2    1805
                                              6 COMMON     5     3      2
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     756
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     908
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       3     2      1     147
                                              1 COMMON     3     2      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_write_char                                       1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c_lcd_5v                                      4     3      1     141
                                              1 COMMON     4     3      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init_current_sink                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_30v_current                                      4     2      2    6935
                                             37 BANK0      4     2      2
                        _ADC_get_val
                            ___ftadd
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    1743
                                              8 COMMON     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             13     9      4     305
                                             24 BANK0     13     9      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2102
                                             11 COMMON     3     3      0
                                              0 BANK0     12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    2694
                                             12 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _ADC_get_val                                          6     3      3      46
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Vout_set                                             6     4      2     264
                                              4 COMMON     6     4      2
                         _digitalpot
 ---------------------------------------------------------------------------------
 (2) _digitalpot                                           3     3      0      44
                                              1 COMMON     3     3      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (4) _i2c_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TX_one                                               3     3      0      69
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one                                               3     3      0      93
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_get_val
   _RX_one
   _TX_one
   _Vout_set
     _digitalpot
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _buzz_one
   _debug_fast_tx
   _get_30v_current
     _ADC_get_val
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _init_ADC
   _init_current_sink
   _init_i2c
   _init_i2c_lcd_5v
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _lcd_print_int
     _get_30v_current (ARG)
       _ADC_get_val
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
     _i2c_write_char (ARG)
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _lcd_set_cursor (ARG)
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _ten_thou_conv (ARG)
       ___bmul
       ___wmul
   _power_supply_set
   _print_error
     _buzz_one
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _debug_fast_tx
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
   _print_screen
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _testjig_done
     _buzz_one
     _debug_fast_tx
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     35      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       2       7        2.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0      60      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      60      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Oct 17 15:23:59 2016

         _motor_direction_timer 005D             ??_init_current_sink 0070                     main@RX_data 0054  
                             pc 0002                  ___bmul@product 0071                     __CFG_CP$OFF 0000  
              _power_supply_set 0FD0             ___wmul@multiplicand 0072                      TX_one@data 0071  
                  ___ftadd@exp1 0037                    ___ftadd@exp2 0036                    ___ftadd@sign 0035  
                           l306 0922                             l326 09CD                             l407 0D89  
                           l344 0AB6                             l441 0521                             l433 0EC6  
                           l409 0DDD                             l434 0EE4                             l418 0E3E  
                           l435 0F00                             l347 0AE7                             l452 05D6  
                           l444 055D                             l357 0B64                             l382 0C78  
                           l463 0228                             l631 0FC3                             l368 0BD6  
                           l641 0FD2                             l449 05BC                             l393 0CEA  
                           l643 0FD7                             l299 0893                             l644 0FDC  
                           l469 021D                             l645 0FE1                             l478 022D  
                           l494 0207                             l590 0167                             l671 00C6  
                           l691 0F41                             l683 0F1F                             l860 047D  
                           l693 0F46                             l678 05F3                             l688 0F37  
                           l872 04A2                             l896 03CF                             _GIE 005F  
                           _RA2 0062                             _RA4 0064                             _RA5 0065  
             ??_i2c_second_line 0071                             _RE0 0080                             _RF0 1460  
                           _RF1 1461                             _RF2 1462                             _RE4 0084  
                           _RG1 1469                             _RF3 1463                             _RE5 0085  
                           _RE6 0086                             _RG3 146B                             _RF5 1465  
                           _PR2 001B                             _PR8 0596                             _isr 0004  
                           _ten 0069                    __CFG_BORV$HI 0000                             wreg 0009  
                ?_lcd_print_int 0049                            S3944 0673                            S3948 0613  
       __size_of_i2c_write_char 000D                 ?_lcd_set_cursor 0071                    __CFG_LVP$OFF 0000  
     __end_of_init_current_sink 0667                            l3002 0200                            l3100 00B3  
                          l3020 0535                            l3110 00BD                            l3102 00B5  
                          l3112 00BF                            l3104 00B7                            l3120 00CB  
                          l3032 056D                            l3114 00C1                            l3106 00B9  
                          l3122 00DD                            l3202 015B                            l3042 05A1  
                          l3116 00C3                            l3108 00BB                            l3204 015E  
                          l3142 0354                            l3046 05A4                            l3240 0F48  
                          l3072 0F81                            l3048 05AC                            l2522 021F  
                          l3090 00A9                            l3170 0127                            l3162 0119  
                          l3154 010D                            l3092 00AB                            l3156 0110  
                          l2540 01E1                            l3500 0A53                            l2526 022B  
                          l3094 00AD                            l3158 0113                            l3422 0902  
                          l3414 08DE                            l3406 08D4                            l3096 00AF  
                          l3088 00A7                            l3192 014A                            l3184 013E  
                          l3176 0130                            l3168 0124                            l2528 01C7  
                          l3520 0A94                            l3408 08BC                            l3098 00B1  
                          l2650 0493                            l2802 0381                            l3186 0141  
                          l2538 01CF                            l3530 0AA8                            l3450 0982  
                          l3434 096A                            l3426 0914                            l3418 08F0  
                          l2644 0481                            l2820 039E                            l3612 0BD1  
                          l3516 0A82                            l3436 093E                            l2654 04A0  
                          l2646 0485                            l2830 03B5                            l2910 045B  
                          l2734 00F1                            l2574 0304                            l3614 0BCE  
                          l3542 0AD4                            l3462 09B4                            l3454 0990  
                          l3446 0974                            l2656 0498                            l2648 048A  
                          l2840 03CB                            l2832 03B9                            l2808 0390  
                          l2736 00F3                            l3472 09DC                            l2826 03AC  
                          l2906 0453                            l2922 04D0                            l2578 030A  
                          l2682 05FA                            l2690 0FE6                            l3802 0E30  
                          l3730 0D3F                            l3650 0C3B                            l3458 09A2  
                          l2852 03E5                            l2828 03B0                            l2940 04F5  
                          l2924 04D5                            l3732 0D47                            l3740 0D67  
                          l3644 0C23                            l3660 0C5E                            l3572 0B3A  
                          l3580 0B5A                            l3484 0A0D                            l3492 0A21  
                          l3468 09CE                            l3396 0886                            l2846 03DA  
                          l2838 03C7                            l2950 0500                            l3734 0D4F  
                          l3742 0D6F                            l3646 0C2B                            l3654 0C46  
                          l3662 0C66                            l3574 0B42                            l3486 0A09  
                          l2864 03F9                            l2872 041C                            l2952 0509  
                          l2944 04FC                            l3832 0E90                            l3824 0E76  
                          l3808 0E66                            l3760 0DAC                            l3728 0D37  
                          l3736 0D57                            l3744 0D77                            l3648 0C33  
                          l3656 0C4E                            l3664 0C6E                            l3576 0B4A  
                          l3496 0A39                            l3488 0A12                            l3818 0E56  
                          l3738 0D5F                            l3746 0D7F                            l3658 0C56  
                          l3578 0B52                            l2876 042D                            l2956 0517  
                          l3836 0E9C                            l3828 0E84                            l3772 0DCF  
                          l3764 0DB7                            l2798 037A                            l2894 0441  
                          l3838 0EA6                            l3768 0DC3                            l3696 0CE5  
                          l3946 00D0                            l2898 0449                            l3794 0E19  
                          l3698 0CE2                            l3798 0E24                            ?_isr 0070  
                          STR_1 12C1                            STR_2 1059                            STR_3 12C1  
                          STR_4 1115                            STR_5 10CB                            STR_6 108A  
                          STR_7 113F                            STR_8 1182                            STR_9 113F  
                          u2345 023A                            u2290 05F8                            u2355 0249  
                          u4107 0872                            u2365 0258                            u4117 087D  
                          u2375 0274                            u4207 0B7B                            u4127 08AC  
                          u2385 029B                            u4217 0B91                            u4137 0931  
                          u2395 02BD                            u4307 0CD5                            u4227 0BAB  
                          u4147 09F5                            u4317 0CFC                            u4237 0BC1  
                          u4157 0A32                            u4407 059A                            u4327 0D0D  
                          u4247 0BE8                            u4167 0A40                            u2665 04DC  
                          u4417 05C5                            u4337 0D23                            u4257 0BF9  
                          u4177 0A76                            u4097 0863                            u4507 01C1  
                          u4427 05DF                            u4347 0DEF                            u4267 0C0F  
                          u4187 0B0A                            u4517 0F1C                            u4437 0F9F  
                          u4357 0E5C                            u4277 0C8F                            u4197 0B24  
                          u4527 0F29                            u4447 0FB6                            u4367 0EFA  
                          u4287 0CA5                            u4537 0F34                            u4457 0185  
                          u4377 0551                            u4297 0CBF                            u4547 0F3C  
                          u4467 0196                            u4387 0566                            u2980 0F24  
                          u4557 0F4A                            u4477 01A9                            u4397 0583  
                          u4567 0F53                            u4487 0214                            u4497 0642  
                          u2994 0F26                            _TMR0 0015                            _WPUB 020D  
                          _WPUD 020F                            _WPUE 0210                    __CFG_WRT$OFF 0000  
                          _main 0804                    ___ftpack@arg 0070                            _hund 0067  
                  ___ftpack@exp 0073                            _thou 006C                            fsr0h 0005  
                          fsr0l 0004                            indf0 0000                            _unit 006B  
                          btemp 007E               ??_get_30v_current 007E                   __CFG_BOREN$ON 0000  
                          ltemp 007E                            start 0095                            ttemp 007E  
                          wtemp 007E                   __CFG_IESO$OFF 0000         i2c_write_char@char_data 0071  
             ___bmul@multiplier 0072                   __CFG_MCLRE$ON 0000                    ___ftmul@cntr 002A  
                  ___ftmul@sign 002B                 digitalpot@value 0073            __size_of_ADC_get_val 0012  
       __end_of_init_i2c_lcd_5v 021A                    ___fttol@exp1 0044                    ___fttol@lval 0040  
                         ??_isr 0070                  _i2c_first_line 0189                           ?_main 0070  
               __end_of___ftadd 040B                           STR_10 1168                           STR_11 113F  
                         STR_20 1182                           STR_12 1225                           STR_21 10F8  
                         STR_13 113F                           STR_22 1168                           STR_30 1019  
                         STR_14 1219                           STR_31 101A                           STR_15 114D  
                         STR_16 1182                           STR_32 122A                           STR_40 11E9  
                         STR_33 1013                           STR_41 120D                           STR_25 114D  
                         STR_17 114D                           STR_50 108A                           STR_42 1291  
                         STR_18 1168                           STR_26 1219                           STR_34 12CA  
                         STR_51 123B                           STR_35 119C                           STR_43 115B  
                         STR_19 10F8                           STR_27 1013                           STR_28 108A  
                         STR_44 11FB                           STR_36 1235                           STR_52 11BE  
                         STR_60 1316                           STR_61 1000                           STR_37 120D  
                         STR_29 1201                           STR_45 11F5                           STR_53 1000  
                         STR_38 1288                           STR_62 1282                           STR_54 128B  
                         STR_70 1319                           STR_46 1282                           STR_47 11F5  
                         STR_55 120D                           STR_71 12AF                           STR_63 1294  
                         STR_39 11A9                           STR_64 108A                           STR_80 1229  
                         STR_56 1313                           STR_48 128B                           STR_72 10BB  
                         STR_65 1294                           STR_73 12AF                           STR_81 120D  
                         STR_49 123B                           STR_57 109B                           STR_90 1328  
                         STR_58 1229                           STR_66 1328                           STR_82 131C  
                         STR_74 10E9                           STR_83 125A                           STR_75 120D  
                         STR_59 120D                           STR_91 1264                           STR_67 125A  
                         STR_84 1282                           STR_92 128B                           STR_68 128B  
                         STR_76 1303                           STR_93 120D                           STR_85 120D  
                         STR_77 120D                           STR_69 120D                           STR_94 1322  
                         STR_86 131F                           STR_78 130B                           STR_79 12AF  
                         STR_95 12B8                           STR_87 129D                           STR_88 108A  
                         STR_96 10BB                           STR_89 129D                           STR_97 12B8  
                         STR_98 10E9                           STR_99 120D                 __end_of___ftmul 0475  
               __end_of___fttol 0520                           _T2CON 001C                           _LATC2 0872  
                         _LATA6 0866                           _LATB5 086D                           _LATA7 0867  
                         _LATD2 087A                           _LATC5 0875                           _LATD4 087C  
                         _LATC6 0876                           _LATD5 087D                           _LATC7 0877  
                         _LATG0 1C68                           _LATD6 087E           __end_of_debug_fast_tx 0613  
                         _T8CON 0597                           i1l271 0019                           i1l280 003E  
                         i1l290 007A                           i1l284 0054                           i1l277 002E  
                         i1l287 005B                           i1l295 0093                           i1l288 005F  
                         _PORTA 000C                           _PORTB 000D                           _PORTC 000E  
                         _PORTD 000F                           _PORTE 0010                           _PORTF 028C  
                         _PORTG 028D                           _TRISA 008C                           _TRISB 008D  
                         _TRISC 008E                           _TRISD 008F                           _TRISE 0090  
                         _TRISF 030C                           _TRISG 030D                  __CFG_FCMEN$OFF 0000  
            _current_sink_timer 005B        __end_of_i2c_Write_string 01E2                   ___ftpack@sign 0074  
                         main@i 0052                           ltemp0 007E                           ltemp1 0082  
                         ltemp2 0086                           ltemp3 0080                           ttemp0 007E  
                         ttemp1 0081                           ttemp2 0084                           ttemp3 0087  
                         ttemp4 007F                           status 0003                           wtemp0 007E  
                         wtemp1 0080                           wtemp2 0082                           wtemp3 0084  
                         wtemp4 0086                           wtemp5 0088                           wtemp6 007F  
               __initialization 0097      lcd_set_cursor@LCD_position 0073                    __end_of_main 0F15  
        __end_of_i2c_first_line 019A                __end_of_i2c_Stop 0230                  __CFG_LPBOR$OFF 0000  
                        ??_main 004F                   ___fttol@sign1 003F                 ??_lcd_print_int 007E  
           lcd_print_int@number 0049                          _ADCON0 009D                          _ADCON1 009E  
                        i1S3950 0667                          STR_100 130F                          STR_101 120D  
                        STR_102 1307                          STR_110 12E3                          STR_103 12B8  
                        STR_111 12DB                          STR_112 11E5                          STR_104 1229  
                        STR_120 10AB                          STR_121 11DD                          STR_113 120D  
                        STR_105 120D                          STR_106 1325                          STR_130 12F3  
                        STR_114 12E7                          STR_122 11D0                          _ADRESH 009C  
                        STR_107 1264                          STR_123 12DB                          STR_115 120D  
                        STR_131 1175                          STR_108 1282                          STR_132 1131  
                        STR_116 12EB                          STR_124 12A6                          STR_140 108B  
                        STR_141 12DB                          STR_125 12DB                          STR_133 1175  
                        STR_109 120D                          STR_117 11DD                          STR_126 117D  
                        STR_134 11D0                          STR_150 12FF                          STR_118 1131  
                        STR_142 1037                          _ADRESL 009B                          STR_119 11DD  
                        STR_143 12DB                          STR_135 12DB                          STR_127 120D  
                        STR_151 1250                          STR_128 12EF                          STR_152 1278  
                        STR_136 126E                          STR_160 1123                          STR_144 10DA  
                        STR_137 12DB                          STR_161 12C1                          STR_153 120D  
                        STR_145 120D                          STR_129 120D                          STR_138 10E2  
                        STR_162 102F                          STR_154 12FB                          STR_146 12F7  
                        STR_170 106A                          STR_139 12DB                          STR_147 1107  
                        STR_155 107B                          STR_163 1048                          STR_148 1089  
                        STR_164 12D3                          STR_156 11C3                          STR_149 120D  
                        STR_157 1246                          STR_165 1026                          STR_166 1115  
                        STR_158 1230                          STR_167 1026                          STR_159 11B6  
                        STR_168 118F                          STR_169 1190      __size_of_init_current_sink 0015  
                        _CCPR9L 061A                          _ANSELA 018C                          _ANSELB 018D  
                        _ANSELD 018F                          _ANSELE 0190                          _ANSELF 040C  
              __end_of___ftpack 04B3                          _ANSELG 040D              __size_of_i2c_Start 0005  
                        i1l3302 007C                          i1l3312 0092                          i1l3306 0086  
                        i1l3308 008A                          i1l3262 0021                          i1l3272 0037  
                        i1l3256 0011                          i1l3264 0022                          i1l3290 0057  
                        i1l3282 004A                          i1l3284 004B                          i1l3296 0066  
                        i1l3298 0070              __size_of_i2c_Write 000C                          _FVRCON 0117  
              __end_of_Vout_set 00DF                __end_of___lwtoft 04C3                          _OSCCON 0099  
                        _TMR0IE 005D                          _TMR0IF 005A                          _TRISC3 0473  
                        _TRISC4 0474                          _TRISG0 1868               print_error@bottom 007A  
                        _RX_one 0F37                  __CFG_PWRTE$OFF 0000                          _TX_one 0F15  
           _current_sink_stable 0059                          ___bmul 02DF                 ?_i2c_first_line 0070  
                        ___wmul 0302                       ??___ftadd 0032                  __CFG_STVREN$ON 0000  
                     ??___ftmul 007B                       ??___fttol 003C                __end_of_init_ADC 1000  
              ?_init_i2c_lcd_5v 0071                __end_of_init_i2c 0652                __end_of_buzz_one 0FF9  
              _ADC_cur_sink_val 0055           ___ftmul@f3_as_product 0027                   i2c_Write@data 0070  
                _i2c_write_char 016B               debug_fast_tx@data 0070        __end_of_power_supply_set 0FF1  
                  ?_print_error 0078         __end_of__initialization 00A2                      ___ftadd@f1 002C  
                    ___ftadd@f2 002F             ___bmul@multiplicand 0070                      ___ftmul@f1 0020  
                    ___ftmul@f2 0023                 _i2c_second_line 0178                      ___fttol@f1 0038  
                __pcstackCOMMON 0070                    __pidataBANK0 0000                  print_error@top 0078  
         __end_of_ten_thou_conv 02DF               __end_of_i2c_Start 022B               __end_of_i2c_Write 0226  
            __size_of_clear_lcd 0015                      ___lwtoft@c 0078                ??_lcd_set_cursor 0072  
        __end_of_i2c_write_char 0178                 _get_30v_current 0317            i2c_Write_string@data 0071  
          lcd_print_int@decimal 004D                _one_second_timer 006D                      __pbssBANK0 0055  
                     ?_i2c_Stop 0070     lcd_print_int@ten_thou_digit 004E                         ?_RX_one 0070  
            ADC_get_val@channel 0073                         ?_TX_one 0070                      __pmaintext 0804  
                       ?___bmul 0070                         ?___wmul 0070                      __pintentry 0004  
                    _digitalpot 01AF                         _CCP9CON 061C                       ?___ftpack 0070  
                     ?_Vout_set 0074                       ?___lwtoft 0078                 ?_i2c_write_char 0070  
                       _SSP1ADD 0212                         _SSP1BUF 0211               ?_i2c_Write_string 0071  
                       RX_one@i 0071                         TX_one@i 0072              ??_i2c_Write_string 0073  
                    ??_i2c_Stop 0070                       ?_init_ADC 0070         __end_of_i2c_second_line 0189  
                     ?_init_i2c 0070               __end_of_clear_lcd 01AF                       ?_buzz_one 0070  
                 ??_ADC_get_val 0073                 __size_of_RX_one 0020                 __size_of_TX_one 0022  
               __size_of___bmul 0023                         ___ftadd 0357                 __size_of___wmul 0015  
                       ___ftmul 040B                         ___fttol 04C3                      ??___ftpack 0075  
       __end_of_get_30v_current 0357                         __ptext1 0520                         __ptext2 0F6D  
                       __ptext3 0F57                         __ptext4 0178                         __ptext5 0189  
                       __ptext6 01C7                         __ptext7 019A                         __ptext8 0FD0  
                       __ptext9 05E6                      ??_Vout_set 0076                      ??___lwtoft 007B  
                  __size_of_isr 0091                      _buzz_timer 00A0  init_i2c_lcd_5v@single1_double2 0071  
                       clrloop0 067C            end_of_initialization 00A2                      ??_init_ADC 0070  
                    ??_init_i2c 0070                      ??_buzz_one 0072                ??_i2c_first_line 0071  
          __size_of_print_error 0051          __size_of_debug_fast_tx 002D                    __pstringtext 1000  
                   ?_digitalpot 0070             __end_of_ADC_get_val 0FD0                __CFG_FOSC$INTOSC 0000  
         __end_of_lcd_print_int 016B                   ?_print_screen 0074                   ?_testjig_done 0070  
             ?_power_supply_set 0070                ?_i2c_second_line 0070              ??_power_supply_set 0070  
                ten_thou_conv@n 0076                     ___ftmul@exp 0026                  __end_of_RX_one 0F57  
                __end_of_TX_one 0F37                  __end_of___bmul 0302                  __end_of___wmul 0317  
                  buzz_one@time 0070                ?_get_30v_current 0045                   _debug_fast_tx 05E6  
                     _i2c_Start 0226                       _i2c_Write 021A             start_initialization 0097  
      __size_of_init_i2c_lcd_5v 0038                  ??_print_screen 0078                     __end_of_isr 0095  
                ??_testjig_done 0078             __size_of_digitalpot 0018               __size_of_i2c_Stop 0005  
               print_screen@top 0074                        ??_RX_one 0070                        ??_TX_one 0070  
                   _ADC_get_val 0FBE                        ??___bmul 0071                        ??___wmul 0074  
                   __pdataBANK0 006D                ??_i2c_write_char 0071                  ?_debug_fast_tx 0070  
             __size_of___ftpack 003E                      ?_i2c_Start 0070                      ?_i2c_Write 0070  
             __size_of_Vout_set 0039                       ___latbits 0003               __size_of___lwtoft 0010  
                 __pcstackBANK0 0020              _pickit_red_counter 0068                lcd_print_int@pos 004B  
        __size_of_ten_thou_conv 00AF                       __pnvBANK0 006F                       __pnvBANK1 00A0  
             __size_of_init_ADC 0007               __size_of_init_i2c 0017                       _clear_lcd 019A  
             __size_of_buzz_one 0008       __size_of_i2c_Write_string 001B                        ?___ftadd 002C  
                      ?___ftmul 0020                        ?___fttol 0038                       __pswtext1 0673  
                     __pswtext2 0613                       __pswtext3 0667                        _CCPTMRS2 029F  
              __CFG_WDTE$SWDTEN 0000               ??_init_i2c_lcd_5v 0072         __size_of_lcd_set_cursor 0018  
                ___wmul@product 0074                       clear_ram0 067B                        _PIE1bits 0091  
                      _PCONbits 0096                        _PIR1bits 0011                      ?_clear_lcd 0070  
          __end_of_print_screen 0F6D              print_screen@bottom 0076                        _SSP1CON1 0215  
                      _SSP1CON2 0216            __end_of_testjig_done 05E6                    ??_digitalpot 0071  
                      _SSP1STAT 0214                    _pickit_timer 005F                    _pickit_state 006F  
                 _ten_thou_conv 0230                 ??_debug_fast_tx 0072                      _ADCON0bits 009D  
             ___wmul@multiplier 0070                     ??_i2c_Start 0070                     ??_i2c_Write 0070  
                debug_fast_tx@i 0072               testjig_done@state 007B                        _i2c_Stop 022B  
                 ??_print_error 0020              __end_of_digitalpot 01C7           ADC_get_val@return_val 0074  
                 Vout_set@Volts 0074                  ?_ten_thou_conv 0076                __size_of___ftadd 00B4  
              __size_of___ftmul 006A                __size_of___fttol 005D       __size_of_power_supply_set 0021  
                      ___ftpack 0475                        _Vout_set 00A6                        ___lwtoft 04B3  
       init_i2c_lcd_5v@contrast 0074               Vout_set@digi_step 0076                        __ptext10 0FF1  
                      __ptext11 00F7                        __ptext20 0FF9                        __ptext12 0230  
                      __ptext21 0317                        __ptext13 0302                        __ptext30 021A  
                      __ptext22 04B3                        __ptext14 02DF                        __ptext31 022B  
                      __ptext23 04C3                        __ptext15 00DF                        __ptext32 0226  
                      __ptext24 040B                        __ptext16 016B                        __ptext33 0F15  
                      __ptext25 0357                        __ptext17 01E2                        __ptext34 0F37  
                      __ptext26 0475                        __ptext18 063B                        __ptext27 0FBE  
                      __ptext19 0652                        __ptext28 00A6                        __ptext29 01AF  
                  _SSP1CON2bits 0216                        _init_ADC 0FF9                        _init_i2c 063B  
                 __size_of_main 0711                        _buzz_one 0FF1                    ?_ADC_get_val 0070  
                   ??_clear_lcd 0071             __end_of_print_error 0FBE                _i2c_Write_string 01C7  
                      _ten_thou 006A                        _tj_timer 0063          __size_of_lcd_print_int 0074  
      __size_of_i2c_second_line 0011                        int$flags 007E                    _SSP1STATbits 0214  
       __size_of_i2c_first_line 0011              _uart_receive_timer 0065             get_30v_current@temp 0047  
                    _INTCONbits 000B        __size_of_get_30v_current 0040                        intlevel1 0000  
                _lcd_set_cursor 00DF               lcd_set_cursor@col 0071               lcd_set_cursor@row 0072  
         __size_of_print_screen 0016               __CFG_CLKOUTEN$OFF 0000           __size_of_testjig_done 00C6  
        power_supply_set@supply 0070                 ??_ten_thou_conv 0078                      _OPTION_REG 0095  
                 _testjig_timer 0061                 _init_i2c_lcd_5v 01E2                   _lcd_print_int 00F7  
               _curent_sink_val 0057                    _print_screen 0F57          __end_of_lcd_set_cursor 00F7  
                  _testjig_done 0520               _init_current_sink 0652                      RX_one@data 0072  
                   _print_error 0F6D              ?_init_current_sink 0070  
