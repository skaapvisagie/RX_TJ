

Microchip Technology PIC PRO Macro Assembler V1.38 build -256452561 
                                                                                               Wed Oct 26 08:40:17 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	text18,local,class=CODE,merge=1,delta=2
    17                           	psect	text19,local,class=CODE,merge=1,delta=2
    18                           	psect	text21,local,class=CODE,merge=1,delta=2
    19                           	psect	text28,local,class=CODE,merge=1,delta=2
    20                           	psect	swtext2,local,class=CONST,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	swtext3,local,class=CONST,delta=2
    23                           	psect	pa_nodes,global,class=CODE,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     	;# 
    26  0001                     	;# 
    27  0002                     	;# 
    28  0003                     	;# 
    29  0004                     	;# 
    30  0005                     	;# 
    31  0006                     	;# 
    32  0007                     	;# 
    33  0008                     	;# 
    34  0009                     	;# 
    35  000A                     	;# 
    36  000B                     	;# 
    37  000C                     	;# 
    38  000D                     	;# 
    39  000E                     	;# 
    40  000F                     	;# 
    41  0010                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0013                     	;# 
    45  0014                     	;# 
    46  0015                     	;# 
    47  0016                     	;# 
    48  0016                     	;# 
    49  0017                     	;# 
    50  0018                     	;# 
    51  0019                     	;# 
    52  001A                     	;# 
    53  001B                     	;# 
    54  001C                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  008F                     	;# 
    59  0090                     	;# 
    60  0091                     	;# 
    61  0092                     	;# 
    62  0093                     	;# 
    63  0094                     	;# 
    64  0095                     	;# 
    65  0096                     	;# 
    66  0097                     	;# 
    67  0099                     	;# 
    68  009A                     	;# 
    69  009B                     	;# 
    70  009B                     	;# 
    71  009C                     	;# 
    72  009D                     	;# 
    73  009E                     	;# 
    74  010C                     	;# 
    75  010D                     	;# 
    76  010E                     	;# 
    77  010F                     	;# 
    78  0110                     	;# 
    79  0116                     	;# 
    80  0117                     	;# 
    81  011D                     	;# 
    82  018C                     	;# 
    83  018D                     	;# 
    84  018F                     	;# 
    85  0190                     	;# 
    86  0191                     	;# 
    87  0191                     	;# 
    88  0192                     	;# 
    89  0193                     	;# 
    90  0193                     	;# 
    91  0194                     	;# 
    92  0195                     	;# 
    93  0196                     	;# 
    94  0197                     	;# 
    95  0199                     	;# 
    96  0199                     	;# 
    97  0199                     	;# 
    98  019A                     	;# 
    99  019A                     	;# 
   100  019A                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019C                     	;# 
   107  019C                     	;# 
   108  019C                     	;# 
   109  019D                     	;# 
   110  019D                     	;# 
   111  019D                     	;# 
   112  019E                     	;# 
   113  019E                     	;# 
   114  019E                     	;# 
   115  019F                     	;# 
   116  019F                     	;# 
   117  019F                     	;# 
   118  020D                     	;# 
   119  020F                     	;# 
   120  0210                     	;# 
   121  0211                     	;# 
   122  0211                     	;# 
   123  0212                     	;# 
   124  0212                     	;# 
   125  0213                     	;# 
   126  0213                     	;# 
   127  0214                     	;# 
   128  0214                     	;# 
   129  0215                     	;# 
   130  0215                     	;# 
   131  0215                     	;# 
   132  0216                     	;# 
   133  0216                     	;# 
   134  0217                     	;# 
   135  0217                     	;# 
   136  0219                     	;# 
   137  021A                     	;# 
   138  021B                     	;# 
   139  021C                     	;# 
   140  021D                     	;# 
   141  021E                     	;# 
   142  021F                     	;# 
   143  028C                     	;# 
   144  028D                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0298                     	;# 
   150  0298                     	;# 
   151  0299                     	;# 
   152  029A                     	;# 
   153  029D                     	;# 
   154  029E                     	;# 
   155  029F                     	;# 
   156  030C                     	;# 
   157  030D                     	;# 
   158  0311                     	;# 
   159  0311                     	;# 
   160  0312                     	;# 
   161  0313                     	;# 
   162  0318                     	;# 
   163  0318                     	;# 
   164  0319                     	;# 
   165  031A                     	;# 
   166  031C                     	;# 
   167  031C                     	;# 
   168  031D                     	;# 
   169  031E                     	;# 
   170  038C                     	;# 
   171  038D                     	;# 
   172  0394                     	;# 
   173  0395                     	;# 
   174  0396                     	;# 
   175  040C                     	;# 
   176  040D                     	;# 
   177  0411                     	;# 
   178  0411                     	;# 
   179  0412                     	;# 
   180  0413                     	;# 
   181  0414                     	;# 
   182  0415                     	;# 
   183  0416                     	;# 
   184  0417                     	;# 
   185  0418                     	;# 
   186  0418                     	;# 
   187  0419                     	;# 
   188  041A                     	;# 
   189  041B                     	;# 
   190  041C                     	;# 
   191  041D                     	;# 
   192  041E                     	;# 
   193  048D                     	;# 
   194  0491                     	;# 
   195  0491                     	;# 
   196  0492                     	;# 
   197  0492                     	;# 
   198  0493                     	;# 
   199  0493                     	;# 
   200  0493                     	;# 
   201  0494                     	;# 
   202  0494                     	;# 
   203  0495                     	;# 
   204  0495                     	;# 
   205  0496                     	;# 
   206  0496                     	;# 
   207  0497                     	;# 
   208  0497                     	;# 
   209  0595                     	;# 
   210  0596                     	;# 
   211  0597                     	;# 
   212  059C                     	;# 
   213  059D                     	;# 
   214  059E                     	;# 
   215  0611                     	;# 
   216  0611                     	;# 
   217  0612                     	;# 
   218  0613                     	;# 
   219  0614                     	;# 
   220  0614                     	;# 
   221  0615                     	;# 
   222  0616                     	;# 
   223  0617                     	;# 
   224  0617                     	;# 
   225  0618                     	;# 
   226  0619                     	;# 
   227  061A                     	;# 
   228  061A                     	;# 
   229  061B                     	;# 
   230  061C                     	;# 
   231  061D                     	;# 
   232  061D                     	;# 
   233  061E                     	;# 
   234  061F                     	;# 
   235  0FE4                     	;# 
   236  0FE5                     	;# 
   237  0FE6                     	;# 
   238  0FE7                     	;# 
   239  0FE8                     	;# 
   240  0FE9                     	;# 
   241  0FEA                     	;# 
   242  0FEB                     	;# 
   243  0FED                     	;# 
   244  0FEE                     	;# 
   245  0FEF                     	;# 
   246                           
   247                           	psect	idataBANK0
   248  0000                     __pidataBANK0:	
   249                           
   250                           	psect	nvBANK0
   251  0067                     __pnvBANK0:	
   252  0067                     _buzz_timer:	
   253  0067                     	ds	2
   254  0069                     _pickit_state:	
   255  0069                     	ds	1
   256  000B                     _INTCONbits	set	11
   257  0011                     _PIR1bits	set	17
   258  000C                     _PORTA	set	12
   259  000D                     _PORTB	set	13
   260  000E                     _PORTC	set	14
   261  000F                     _PORTD	set	15
   262  0010                     _PORTE	set	16
   263  001B                     _PR2	set	27
   264  001C                     _T2CON	set	28
   265  0015                     _TMR0	set	21
   266  005F                     _GIE	set	95
   267  0062                     _RA2	set	98
   268  0064                     _RA4	set	100
   269  0065                     _RA5	set	101
   270  0080                     _RE0	set	128
   271  0084                     _RE4	set	132
   272  0085                     _RE5	set	133
   273  0086                     _RE6	set	134
   274  005D                     _TMR0IE	set	93
   275  005A                     _TMR0IF	set	90
   276  009D                     _ADCON0	set	157
   277  009D                     _ADCON0bits	set	157
   278  009E                     _ADCON1	set	158
   279  009C                     _ADRESH	set	156
   280  009B                     _ADRESL	set	155
   281  0095                     _OPTION_REG	set	149
   282  0099                     _OSCCON	set	153
   283  0096                     _PCONbits	set	150
   284  0091                     _PIE1bits	set	145
   285  008C                     _TRISA	set	140
   286  008D                     _TRISB	set	141
   287  008E                     _TRISC	set	142
   288  008F                     _TRISD	set	143
   289  0090                     _TRISE	set	144
   290  0473                     _TRISC3	set	1139
   291  0474                     _TRISC4	set	1140
   292  0117                     _FVRCON	set	279
   293  0866                     _LATA6	set	2150
   294  0867                     _LATA7	set	2151
   295  086D                     _LATB5	set	2157
   296  0872                     _LATC2	set	2162
   297  0875                     _LATC5	set	2165
   298  0876                     _LATC6	set	2166
   299  0877                     _LATC7	set	2167
   300  087A                     _LATD2	set	2170
   301  087C                     _LATD4	set	2172
   302  087D                     _LATD5	set	2173
   303  087E                     _LATD6	set	2174
   304  018C                     _ANSELA	set	396
   305  018D                     _ANSELB	set	397
   306  018F                     _ANSELD	set	399
   307  0190                     _ANSELE	set	400
   308  0212                     _SSP1ADD	set	530
   309  0211                     _SSP1BUF	set	529
   310  0215                     _SSP1CON1	set	533
   311  0216                     _SSP1CON2	set	534
   312  0216                     _SSP1CON2bits	set	534
   313  0214                     _SSP1STAT	set	532
   314  0214                     _SSP1STATbits	set	532
   315  020D                     _WPUB	set	525
   316  020F                     _WPUD	set	527
   317  0210                     _WPUE	set	528
   318  029F                     _CCPTMRS2	set	671
   319  028C                     _PORTF	set	652
   320  028D                     _PORTG	set	653
   321  1460                     _RF0	set	5216
   322  1461                     _RF1	set	5217
   323  1462                     _RF2	set	5218
   324  1463                     _RF3	set	5219
   325  1465                     _RF5	set	5221
   326  1469                     _RG1	set	5225
   327  146B                     _RG3	set	5227
   328  030C                     _TRISF	set	780
   329  030D                     _TRISG	set	781
   330  1868                     _TRISG0	set	6248
   331  1C68                     _LATG0	set	7272
   332  040C                     _ANSELF	set	1036
   333  040D                     _ANSELG	set	1037
   334  0596                     _PR8	set	1430
   335  0597                     _T8CON	set	1431
   336  061C                     _CCP9CON	set	1564
   337  061A                     _CCPR9L	set	1562
   338                           
   339                           	psect	stringtext
   340  1000                     __pstringtext:	
   341  1000                     STR_53:	
   342  1000  3452               	retlw	82	;'R'
   343  1001  3465               	retlw	101	;'e'
   344  1002  346C               	retlw	108	;'l'
   345  1003  3461               	retlw	97	;'a'
   346  1004  3479               	retlw	121	;'y'
   347  1005  3420               	retlw	32	;' '
   348  1006  3464               	retlw	100	;'d'
   349  1007  3465               	retlw	101	;'e'
   350  1008  342D               	retlw	45	;'-'
   351  1009  3465               	retlw	101	;'e'
   352  100A  346E               	retlw	110	;'n'
   353  100B  3465               	retlw	101	;'e'
   354  100C  3472               	retlw	114	;'r'
   355  100D  3467               	retlw	103	;'g'
   356  100E  3469               	retlw	105	;'i'
   357  100F  347A               	retlw	122	;'z'
   358  1010  3465               	retlw	101	;'e'
   359  1011  3464               	retlw	100	;'d'
   360  1012  3400               	retlw	0
   361  1013                     STR_27:	
   362  1013  3450               	retlw	80	;'P'
   363  1014  3469               	retlw	105	;'i'
   364  1015  3463               	retlw	99	;'c'
   365  1016  346B               	retlw	107	;'k'
   366  1017  3469               	retlw	105	;'i'
   367  1018  3474               	retlw	116	;'t'
   368  1019  3420               	retlw	32	;' '
   369  101A  3450               	retlw	80	;'P'
   370  101B  3472               	retlw	114	;'r'
   371  101C  346F               	retlw	111	;'o'
   372  101D  3467               	retlw	103	;'g'
   373  101E  3472               	retlw	114	;'r'
   374  101F  3461               	retlw	97	;'a'
   375  1020  346D               	retlw	109	;'m'
   376  1021  346D               	retlw	109	;'m'
   377  1022  3469               	retlw	105	;'i'
   378  1023  346E               	retlw	110	;'n'
   379  1024  3467               	retlw	103	;'g'
   380  1025  3400               	retlw	0
   381  1026                     STR_165:	
   382  1026  344D               	retlw	77	;'M'
   383  1027  3475               	retlw	117	;'u'
   384  1028  346C               	retlw	108	;'l'
   385  1029  3474               	retlw	116	;'t'
   386  102A  3469               	retlw	105	;'i'
   387  102B  345F               	retlw	95	;'_'
   388  102C  3452               	retlw	82	;'R'
   389  102D  3458               	retlw	88	;'X'
   390  102E  3420               	retlw	32	;' '
   391  102F  3454               	retlw	84	;'T'
   392  1030  3465               	retlw	101	;'e'
   393  1031  3473               	retlw	115	;'s'
   394  1032  3474               	retlw	116	;'t'
   395  1033  346A               	retlw	106	;'j'
   396  1034  3469               	retlw	105	;'i'
   397  1035  3467               	retlw	103	;'g'
   398  1036  3400               	retlw	0
   399  1037                     STR_142:	
   400  1037  3444               	retlw	68	;'D'
   401  1038  3465               	retlw	101	;'e'
   402  1039  3463               	retlw	99	;'c'
   403  103A  346F               	retlw	111	;'o'
   404  103B  3464               	retlw	100	;'d'
   405  103C  3465               	retlw	101	;'e'
   406  103D  3420               	retlw	32	;' '
   407  103E  344F               	retlw	79	;'O'
   408  103F  346C               	retlw	108	;'l'
   409  1040  3464               	retlw	100	;'d'
   410  1041  3420               	retlw	32	;' '
   411  1042  342D               	retlw	45	;'-'
   412  1043  3446               	retlw	70	;'F'
   413  1044  3461               	retlw	97	;'a'
   414  1045  3469               	retlw	105	;'i'
   415  1046  346C               	retlw	108	;'l'
   416  1047  3400               	retlw	0
   417  1048                     STR_163:	
   418  1048  3454               	retlw	84	;'T'
   419  1049  3465               	retlw	101	;'e'
   420  104A  3473               	retlw	115	;'s'
   421  104B  3474               	retlw	116	;'t'
   422  104C  346A               	retlw	106	;'j'
   423  104D  3469               	retlw	105	;'i'
   424  104E  3467               	retlw	103	;'g'
   425  104F  3420               	retlw	32	;' '
   426  1050  3450               	retlw	80	;'P'
   427  1051  346F               	retlw	111	;'o'
   428  1052  3477               	retlw	119	;'w'
   429  1053  3465               	retlw	101	;'e'
   430  1054  3472               	retlw	114	;'r'
   431  1055  342D               	retlw	45	;'-'
   432  1056  3475               	retlw	117	;'u'
   433  1057  3470               	retlw	112	;'p'
   434  1058  3400               	retlw	0
   435  1059                     STR_2:	
   436  1059  3454               	retlw	84	;'T'
   437  105A  3465               	retlw	101	;'e'
   438  105B  3473               	retlw	115	;'s'
   439  105C  3474               	retlw	116	;'t'
   440  105D  342D               	retlw	45	;'-'
   441  105E  344A               	retlw	74	;'J'
   442  105F  3469               	retlw	105	;'i'
   443  1060  3467               	retlw	103	;'g'
   444  1061  347C               	retlw	124	;'|'
   445  1062  3453               	retlw	83	;'S'
   446  1063  3474               	retlw	116	;'t'
   447  1064  3461               	retlw	97	;'a'
   448  1065  3472               	retlw	114	;'r'
   449  1066  3474               	retlw	116	;'t'
   450  1067  3475               	retlw	117	;'u'
   451  1068  3470               	retlw	112	;'p'
   452  1069  3400               	retlw	0
   453  106A                     STR_170:	
   454  106A  3420               	retlw	32	;' '
   455  106B  3474               	retlw	116	;'t'
   456  106C  346F               	retlw	111	;'o'
   457  106D  3420               	retlw	32	;' '
   458  106E  3472               	retlw	114	;'r'
   459  106F  3465               	retlw	101	;'e'
   460  1070  3473               	retlw	115	;'s'
   461  1071  3474               	retlw	116	;'t'
   462  1072  3461               	retlw	97	;'a'
   463  1073  3472               	retlw	114	;'r'
   464  1074  3474               	retlw	116	;'t'
   465  1075  3420               	retlw	32	;' '
   466  1076  3474               	retlw	116	;'t'
   467  1077  3465               	retlw	101	;'e'
   468  1078  3473               	retlw	115	;'s'
   469  1079  3474               	retlw	116	;'t'
   470  107A  3400               	retlw	0
   471  107B                     STR_155:	
   472  107B  3437               	retlw	55	;'7'
   473  107C  3473               	retlw	115	;'s'
   474  107D  3465               	retlw	101	;'e'
   475  107E  3467               	retlw	103	;'g'
   476  107F  342C               	retlw	44	;','
   477  1080  3420               	retlw	32	;' '
   478  1081  3462               	retlw	98	;'b'
   479  1082  3475               	retlw	117	;'u'
   480  1083  347A               	retlw	122	;'z'
   481  1084  347A               	retlw	122	;'z'
   482  1085  3465               	retlw	101	;'e'
   483  1086  3472               	retlw	114	;'r'
   484  1087  342C               	retlw	44	;','
   485  1088  3420               	retlw	32	;' '
   486  1089  3420               	retlw	32	;' '
   487  108A  3400               	retlw	0
   488  108B                     STR_140:	
   489  108B  3444               	retlw	68	;'D'
   490  108C  3465               	retlw	101	;'e'
   491  108D  3463               	retlw	99	;'c'
   492  108E  346F               	retlw	111	;'o'
   493  108F  3464               	retlw	100	;'d'
   494  1090  3465               	retlw	101	;'e'
   495  1091  3420               	retlw	32	;' '
   496  1092  344E               	retlw	78	;'N'
   497  1093  3465               	retlw	101	;'e'
   498  1094  3477               	retlw	119	;'w'
   499  1095  3420               	retlw	32	;' '
   500  1096  342D               	retlw	45	;'-'
   501  1097  3420               	retlw	32	;' '
   502  1098  344F               	retlw	79	;'O'
   503  1099  344B               	retlw	75	;'K'
   504  109A  3400               	retlw	0
   505  109B                     STR_57:	
   506  109B  3452               	retlw	82	;'R'
   507  109C  3465               	retlw	101	;'e'
   508  109D  346C               	retlw	108	;'l'
   509  109E  3461               	retlw	97	;'a'
   510  109F  3479               	retlw	121	;'y'
   511  10A0  3420               	retlw	32	;' '
   512  10A1  3465               	retlw	101	;'e'
   513  10A2  346E               	retlw	110	;'n'
   514  10A3  3465               	retlw	101	;'e'
   515  10A4  3472               	retlw	114	;'r'
   516  10A5  3467               	retlw	103	;'g'
   517  10A6  3469               	retlw	105	;'i'
   518  10A7  347A               	retlw	122	;'z'
   519  10A8  3465               	retlw	101	;'e'
   520  10A9  3464               	retlw	100	;'d'
   521  10AA  3400               	retlw	0
   522  10AB                     STR_120:	
   523  10AB  3420               	retlw	32	;' '
   524  10AC  3445               	retlw	69	;'E'
   525  10AD  3472               	retlw	114	;'r'
   526  10AE  3472               	retlw	114	;'r'
   527  10AF  346F               	retlw	111	;'o'
   528  10B0  3472               	retlw	114	;'r'
   529  10B1  3420               	retlw	32	;' '
   530  10B2  342D               	retlw	45	;'-'
   531  10B3  3420               	retlw	32	;' '
   532  10B4  344D               	retlw	77	;'M'
   533  10B5  3469               	retlw	105	;'i'
   534  10B6  3463               	retlw	99	;'c'
   535  10B7  3472               	retlw	114	;'r'
   536  10B8  3465               	retlw	101	;'e'
   537  10B9  346C               	retlw	108	;'l'
   538  10BA  3400               	retlw	0
   539  10BB                     STR_72:	
   540  10BB  3450               	retlw	80	;'P'
   541  10BC  3454               	retlw	84	;'T'
   542  10BD  3443               	retlw	67	;'C'
   543  10BE  3420               	retlw	32	;' '
   544  10BF  3445               	retlw	69	;'E'
   545  10C0  3472               	retlw	114	;'r'
   546  10C1  3472               	retlw	114	;'r'
   547  10C2  346F               	retlw	111	;'o'
   548  10C3  3472               	retlw	114	;'r'
   549  10C4  3420               	retlw	32	;' '
   550  10C5  3472               	retlw	114	;'r'
   551  10C6  3465               	retlw	101	;'e'
   552  10C7  3473               	retlw	115	;'s'
   553  10C8  3465               	retlw	101	;'e'
   554  10C9  3474               	retlw	116	;'t'
   555  10CA  3400               	retlw	0
   556  10CB                     STR_5:	
   557  10CB  3450               	retlw	80	;'P'
   558  10CC  346F               	retlw	111	;'o'
   559  10CD  3477               	retlw	119	;'w'
   560  10CE  3465               	retlw	101	;'e'
   561  10CF  3472               	retlw	114	;'r'
   562  10D0  3469               	retlw	105	;'i'
   563  10D1  346E               	retlw	110	;'n'
   564  10D2  3467               	retlw	103	;'g'
   565  10D3  3420               	retlw	32	;' '
   566  10D4  3462               	retlw	98	;'b'
   567  10D5  346F               	retlw	111	;'o'
   568  10D6  3461               	retlw	97	;'a'
   569  10D7  3472               	retlw	114	;'r'
   570  10D8  3464               	retlw	100	;'d'
   571  10D9  3400               	retlw	0
   572  10DA                     STR_144:	
   573  10DA  3445               	retlw	69	;'E'
   574  10DB  3472               	retlw	114	;'r'
   575  10DC  3472               	retlw	114	;'r'
   576  10DD  346F               	retlw	111	;'o'
   577  10DE  3472               	retlw	114	;'r'
   578  10DF  3420               	retlw	32	;' '
   579  10E0  342D               	retlw	45	;'-'
   580  10E1  3420               	retlw	32	;' '
   581  10E2  3444               	retlw	68	;'D'
   582  10E3  3465               	retlw	101	;'e'
   583  10E4  3463               	retlw	99	;'c'
   584  10E5  346F               	retlw	111	;'o'
   585  10E6  3464               	retlw	100	;'d'
   586  10E7  3465               	retlw	101	;'e'
   587  10E8  3400               	retlw	0
   588  10E9                     STR_74:	
   589  10E9  3450               	retlw	80	;'P'
   590  10EA  3454               	retlw	84	;'T'
   591  10EB  3443               	retlw	67	;'C'
   592  10EC  3420               	retlw	32	;' '
   593  10ED  3445               	retlw	69	;'E'
   594  10EE  3472               	retlw	114	;'r'
   595  10EF  3472               	retlw	114	;'r'
   596  10F0  346F               	retlw	111	;'o'
   597  10F1  3472               	retlw	114	;'r'
   598  10F2  3420               	retlw	32	;' '
   599  10F3  3474               	retlw	116	;'t'
   600  10F4  3472               	retlw	114	;'r'
   601  10F5  3469               	retlw	105	;'i'
   602  10F6  3470               	retlw	112	;'p'
   603  10F7  3400               	retlw	0
   604  10F8                     STR_19:	
   605  10F8  3431               	retlw	49	;'1'
   606  10F9  3436               	retlw	54	;'6'
   607  10FA  3476               	retlw	118	;'v'
   608  10FB  342D               	retlw	45	;'-'
   609  10FC  3431               	retlw	49	;'1'
   610  10FD  3432               	retlw	50	;'2'
   611  10FE  3476               	retlw	118	;'v'
   612  10FF  3420               	retlw	32	;' '
   613  1100  3473               	retlw	115	;'s'
   614  1101  3475               	retlw	117	;'u'
   615  1102  3470               	retlw	112	;'p'
   616  1103  3470               	retlw	112	;'p'
   617  1104  346C               	retlw	108	;'l'
   618  1105  3479               	retlw	121	;'y'
   619  1106  3400               	retlw	0
   620  1107                     STR_147:	
   621  1107  344D               	retlw	77	;'M'
   622  1108  3461               	retlw	97	;'a'
   623  1109  3473               	retlw	115	;'s'
   624  110A  3474               	retlw	116	;'t'
   625  110B  3465               	retlw	101	;'e'
   626  110C  3472               	retlw	114	;'r'
   627  110D  3420               	retlw	32	;' '
   628  110E  3445               	retlw	69	;'E'
   629  110F  3472               	retlw	114	;'r'
   630  1110  3461               	retlw	97	;'a'
   631  1111  3473               	retlw	115	;'s'
   632  1112  3465               	retlw	101	;'e'
   633  1113  3420               	retlw	32	;' '
   634  1114  3400               	retlw	0
   635  1115                     STR_4:	
   636  1115  342D               	retlw	45	;'-'
   637  1116  343E               	retlw	62	;'>'
   638  1117  3420               	retlw	32	;' '
   639  1118  3449               	retlw	73	;'I'
   640  1119  346E               	retlw	110	;'n'
   641  111A  3473               	retlw	115	;'s'
   642  111B  3465               	retlw	101	;'e'
   643  111C  3472               	retlw	114	;'r'
   644  111D  3474               	retlw	116	;'t'
   645  111E  3420               	retlw	32	;' '
   646  111F  3450               	retlw	80	;'P'
   647  1120  3443               	retlw	67	;'C'
   648  1121  3442               	retlw	66	;'B'
   649  1122  3400               	retlw	0
   650  1123                     STR_160:	
   651  1123  3420               	retlw	32	;' '
   652  1124  3452               	retlw	82	;'R'
   653  1125  3465               	retlw	101	;'e'
   654  1126  346D               	retlw	109	;'m'
   655  1127  346F               	retlw	111	;'o'
   656  1128  3476               	retlw	118	;'v'
   657  1129  3465               	retlw	101	;'e'
   658  112A  3420               	retlw	32	;' '
   659  112B  3462               	retlw	98	;'b'
   660  112C  346F               	retlw	111	;'o'
   661  112D  3461               	retlw	97	;'a'
   662  112E  3472               	retlw	114	;'r'
   663  112F  3464               	retlw	100	;'d'
   664  1130  3400               	retlw	0
   665  1131                     STR_118:	
   666  1131  3420               	retlw	32	;' '
   667  1132  3445               	retlw	69	;'E'
   668  1133  3472               	retlw	114	;'r'
   669  1134  3472               	retlw	114	;'r'
   670  1135  346F               	retlw	111	;'o'
   671  1136  3472               	retlw	114	;'r'
   672  1137  3420               	retlw	32	;' '
   673  1138  342D               	retlw	45	;'-'
   674  1139  3420               	retlw	32	;' '
   675  113A  3448               	retlw	72	;'H'
   676  113B  3469               	retlw	105	;'i'
   677  113C  3467               	retlw	103	;'g'
   678  113D  3468               	retlw	104	;'h'
   679  113E  3400               	retlw	0
   680  113F                     STR_7:	
   681  113F  3431               	retlw	49	;'1'
   682  1140  3432               	retlw	50	;'2'
   683  1141  3476               	retlw	118	;'v'
   684  1142  342D               	retlw	45	;'-'
   685  1143  3435               	retlw	53	;'5'
   686  1144  3476               	retlw	118	;'v'
   687  1145  3420               	retlw	32	;' '
   688  1146  3473               	retlw	115	;'s'
   689  1147  3475               	retlw	117	;'u'
   690  1148  3470               	retlw	112	;'p'
   691  1149  3470               	retlw	112	;'p'
   692  114A  346C               	retlw	108	;'l'
   693  114B  3479               	retlw	121	;'y'
   694  114C  3400               	retlw	0
   695  114D                     STR_15:	
   696  114D  3431               	retlw	49	;'1'
   697  114E  3436               	retlw	54	;'6'
   698  114F  3476               	retlw	118	;'v'
   699  1150  342D               	retlw	45	;'-'
   700  1151  3435               	retlw	53	;'5'
   701  1152  3476               	retlw	118	;'v'
   702  1153  3420               	retlw	32	;' '
   703  1154  3473               	retlw	115	;'s'
   704  1155  3475               	retlw	117	;'u'
   705  1156  3470               	retlw	112	;'p'
   706  1157  3470               	retlw	112	;'p'
   707  1158  346C               	retlw	108	;'l'
   708  1159  3479               	retlw	121	;'y'
   709  115A  3400               	retlw	0
   710  115B                     STR_43:	
   711  115B  3454               	retlw	84	;'T'
   712  115C  3465               	retlw	101	;'e'
   713  115D  3473               	retlw	115	;'s'
   714  115E  3474               	retlw	116	;'t'
   715  115F  3420               	retlw	32	;' '
   716  1160  3445               	retlw	69	;'E'
   717  1161  3445               	retlw	69	;'E'
   718  1162  3450               	retlw	80	;'P'
   719  1163  3452               	retlw	82	;'R'
   720  1164  344F               	retlw	79	;'O'
   721  1165  344D               	retlw	77	;'M'
   722  1166  3420               	retlw	32	;' '
   723  1167  3400               	retlw	0
   724  1168                     STR_10:	
   725  1168  3456               	retlw	86	;'V'
   726  1169  346F               	retlw	111	;'o'
   727  116A  346C               	retlw	108	;'l'
   728  116B  3474               	retlw	116	;'t'
   729  116C  3420               	retlw	32	;' '
   730  116D  3445               	retlw	69	;'E'
   731  116E  3472               	retlw	114	;'r'
   732  116F  3472               	retlw	114	;'r'
   733  1170  346F               	retlw	111	;'o'
   734  1171  3472               	retlw	114	;'r'
   735  1172  3420               	retlw	32	;' '
   736  1173  3448               	retlw	72	;'H'
   737  1174  3400               	retlw	0
   738  1175                     STR_131:	
   739  1175  3454               	retlw	84	;'T'
   740  1176  3465               	retlw	101	;'e'
   741  1177  3473               	retlw	115	;'s'
   742  1178  3474               	retlw	116	;'t'
   743  1179  3420               	retlw	32	;' '
   744  117A  3452               	retlw	82	;'R'
   745  117B  3446               	retlw	70	;'F'
   746  117C  3420               	retlw	32	;' '
   747  117D  3452               	retlw	82	;'R'
   748  117E  3453               	retlw	83	;'S'
   749  117F  3453               	retlw	83	;'S'
   750  1180  3449               	retlw	73	;'I'
   751  1181  3400               	retlw	0
   752  1182                     STR_8:	
   753  1182  3456               	retlw	86	;'V'
   754  1183  346F               	retlw	111	;'o'
   755  1184  346C               	retlw	108	;'l'
   756  1185  3474               	retlw	116	;'t'
   757  1186  3420               	retlw	32	;' '
   758  1187  3445               	retlw	69	;'E'
   759  1188  3472               	retlw	114	;'r'
   760  1189  3472               	retlw	114	;'r'
   761  118A  346F               	retlw	111	;'o'
   762  118B  3472               	retlw	114	;'r'
   763  118C  3420               	retlw	32	;' '
   764  118D  344C               	retlw	76	;'L'
   765  118E  3400               	retlw	0
   766  118F                     STR_168:	
   767  118F  3420               	retlw	32	;' '
   768  1190  3450               	retlw	80	;'P'
   769  1191  3472               	retlw	114	;'r'
   770  1192  3465               	retlw	101	;'e'
   771  1193  3473               	retlw	115	;'s'
   772  1194  3473               	retlw	115	;'s'
   773  1195  3420               	retlw	32	;' '
   774  1196  3453               	retlw	83	;'S'
   775  1197  3454               	retlw	84	;'T'
   776  1198  3441               	retlw	65	;'A'
   777  1199  3452               	retlw	82	;'R'
   778  119A  3454               	retlw	84	;'T'
   779  119B  3400               	retlw	0
   780  119C                     STR_35:	
   781  119C  3445               	retlw	69	;'E'
   782  119D  3473               	retlw	115	;'s'
   783  119E  3474               	retlw	116	;'t'
   784  119F  3461               	retlw	97	;'a'
   785  11A0  3462               	retlw	98	;'b'
   786  11A1  346C               	retlw	108	;'l'
   787  11A2  3469               	retlw	105	;'i'
   788  11A3  3473               	retlw	115	;'s'
   789  11A4  3468               	retlw	104	;'h'
   790  11A5  3469               	retlw	105	;'i'
   791  11A6  346E               	retlw	110	;'n'
   792  11A7  3467               	retlw	103	;'g'
   793  11A8  3400               	retlw	0
   794  11A9                     STR_39:	
   795  11A9  3445               	retlw	69	;'E'
   796  11AA  3445               	retlw	69	;'E'
   797  11AB  3450               	retlw	80	;'P'
   798  11AC  3452               	retlw	82	;'R'
   799  11AD  344F               	retlw	79	;'O'
   800  11AE  344D               	retlw	77	;'M'
   801  11AF  3420               	retlw	32	;' '
   802  11B0  3465               	retlw	101	;'e'
   803  11B1  3472               	retlw	114	;'r'
   804  11B2  3472               	retlw	114	;'r'
   805  11B3  346F               	retlw	111	;'o'
   806  11B4  3472               	retlw	114	;'r'
   807  11B5  3400               	retlw	0
   808  11B6                     STR_159:	
   809  11B6  3454               	retlw	84	;'T'
   810  11B7  3465               	retlw	101	;'e'
   811  11B8  3473               	retlw	115	;'s'
   812  11B9  3474               	retlw	116	;'t'
   813  11BA  346A               	retlw	106	;'j'
   814  11BB  3469               	retlw	105	;'i'
   815  11BC  3467               	retlw	103	;'g'
   816  11BD  3420               	retlw	32	;' '
   817  11BE  3450               	retlw	80	;'P'
   818  11BF  3461               	retlw	97	;'a'
   819  11C0  3473               	retlw	115	;'s'
   820  11C1  3473               	retlw	115	;'s'
   821  11C2  3400               	retlw	0
   822  11C3                     STR_156:	
   823  11C3  3420               	retlw	32	;' '
   824  11C4  3462               	retlw	98	;'b'
   825  11C5  3475               	retlw	117	;'u'
   826  11C6  3474               	retlw	116	;'t'
   827  11C7  3474               	retlw	116	;'t'
   828  11C8  346F               	retlw	111	;'o'
   829  11C9  346E               	retlw	110	;'n'
   830  11CA  3420               	retlw	32	;' '
   831  11CB  3474               	retlw	116	;'t'
   832  11CC  3465               	retlw	101	;'e'
   833  11CD  3473               	retlw	115	;'s'
   834  11CE  3474               	retlw	116	;'t'
   835  11CF  3400               	retlw	0
   836  11D0                     STR_122:	
   837  11D0  3420               	retlw	32	;' '
   838  11D1  3445               	retlw	69	;'E'
   839  11D2  3472               	retlw	114	;'r'
   840  11D3  3472               	retlw	114	;'r'
   841  11D4  346F               	retlw	111	;'o'
   842  11D5  3472               	retlw	114	;'r'
   843  11D6  3420               	retlw	32	;' '
   844  11D7  342D               	retlw	45	;'-'
   845  11D8  3420               	retlw	32	;' '
   846  11D9  344C               	retlw	76	;'L'
   847  11DA  346F               	retlw	111	;'o'
   848  11DB  3477               	retlw	119	;'w'
   849  11DC  3400               	retlw	0
   850  11DD                     STR_117:	
   851  11DD  3454               	retlw	84	;'T'
   852  11DE  3465               	retlw	101	;'e'
   853  11DF  3473               	retlw	115	;'s'
   854  11E0  3474               	retlw	116	;'t'
   855  11E1  3420               	retlw	32	;' '
   856  11E2  3452               	retlw	82	;'R'
   857  11E3  3446               	retlw	70	;'F'
   858  11E4  3420               	retlw	32	;' '
   859  11E5  3433               	retlw	51	;'3'
   860  11E6  3476               	retlw	118	;'v'
   861  11E7  3433               	retlw	51	;'3'
   862  11E8  3400               	retlw	0
   863  11E9                     STR_40:	
   864  11E9  3420               	retlw	32	;' '
   865  11EA  3452               	retlw	82	;'R'
   866  11EB  3465               	retlw	101	;'e'
   867  11EC  3461               	retlw	97	;'a'
   868  11ED  3464               	retlw	100	;'d'
   869  11EE  342F               	retlw	47	;'/'
   870  11EF  3457               	retlw	87	;'W'
   871  11F0  3472               	retlw	114	;'r'
   872  11F1  3469               	retlw	105	;'i'
   873  11F2  3474               	retlw	116	;'t'
   874  11F3  3465               	retlw	101	;'e'
   875  11F4  3400               	retlw	0
   876  11F5                     STR_45:	
   877  11F5  3445               	retlw	69	;'E'
   878  11F6  3445               	retlw	69	;'E'
   879  11F7  3450               	retlw	80	;'P'
   880  11F8  3452               	retlw	82	;'R'
   881  11F9  344F               	retlw	79	;'O'
   882  11FA  344D               	retlw	77	;'M'
   883  11FB  3420               	retlw	32	;' '
   884  11FC  3473               	retlw	115	;'s'
   885  11FD  3469               	retlw	105	;'i'
   886  11FE  347A               	retlw	122	;'z'
   887  11FF  3465               	retlw	101	;'e'
   888  1200  3400               	retlw	0
   889  1201                     STR_29:	
   890  1201  3457               	retlw	87	;'W'
   891  1202  3461               	retlw	97	;'a'
   892  1203  3469               	retlw	105	;'i'
   893  1204  3474               	retlw	116	;'t'
   894  1205  3469               	retlw	105	;'i'
   895  1206  346E               	retlw	110	;'n'
   896  1207  3467               	retlw	103	;'g'
   897  1208  3420               	retlw	32	;' '
   898  1209  3466               	retlw	102	;'f'
   899  120A  346F               	retlw	111	;'o'
   900  120B  3472               	retlw	114	;'r'
   901  120C  3400               	retlw	0
   902  120D                     STR_37:	
   903  120D  3443               	retlw	67	;'C'
   904  120E  346F               	retlw	111	;'o'
   905  120F  346D               	retlw	109	;'m'
   906  1210  346D               	retlw	109	;'m'
   907  1211  3473               	retlw	115	;'s'
   908  1212  3420               	retlw	32	;' '
   909  1213  3445               	retlw	69	;'E'
   910  1214  3472               	retlw	114	;'r'
   911  1215  3472               	retlw	114	;'r'
   912  1216  346F               	retlw	111	;'o'
   913  1217  3472               	retlw	114	;'r'
   914  1218  3400               	retlw	0
   915  1219                     STR_14:	
   916  1219  3454               	retlw	84	;'T'
   917  121A  342D               	retlw	45	;'-'
   918  121B  346F               	retlw	111	;'o'
   919  121C  3475               	retlw	117	;'u'
   920  121D  3474               	retlw	116	;'t'
   921  121E  3420               	retlw	32	;' '
   922  121F  3445               	retlw	69	;'E'
   923  1220  3472               	retlw	114	;'r'
   924  1221  3472               	retlw	114	;'r'
   925  1222  346F               	retlw	111	;'o'
   926  1223  3472               	retlw	114	;'r'
   927  1224  3400               	retlw	0
   928  1225                     STR_12:	
   929  1225  3443               	retlw	67	;'C'
   930  1226  3475               	retlw	117	;'u'
   931  1227  3472               	retlw	114	;'r'
   932  1228  3472               	retlw	114	;'r'
   933  1229  3420               	retlw	32	;' '
   934  122A  3445               	retlw	69	;'E'
   935  122B  3472               	retlw	114	;'r'
   936  122C  3472               	retlw	114	;'r'
   937  122D  346F               	retlw	111	;'o'
   938  122E  3472               	retlw	114	;'r'
   939  122F  3400               	retlw	0
   940  1230                     STR_158:	
   941  1230  3420               	retlw	32	;' '
   942  1231  3466               	retlw	102	;'f'
   943  1232  346F               	retlw	111	;'o'
   944  1233  3472               	retlw	114	;'r'
   945  1234  3420               	retlw	32	;' '
   946  1235  3463               	retlw	99	;'c'
   947  1236  346F               	retlw	111	;'o'
   948  1237  346D               	retlw	109	;'m'
   949  1238  346D               	retlw	109	;'m'
   950  1239  3473               	retlw	115	;'s'
   951  123A  3400               	retlw	0
   952  123B                     STR_49:	
   953  123B  3454               	retlw	84	;'T'
   954  123C  3465               	retlw	101	;'e'
   955  123D  3473               	retlw	115	;'s'
   956  123E  3474               	retlw	116	;'t'
   957  123F  3420               	retlw	32	;' '
   958  1240  3452               	retlw	82	;'R'
   959  1241  3465               	retlw	101	;'e'
   960  1242  346C               	retlw	108	;'l'
   961  1243  3461               	retlw	97	;'a'
   962  1244  3479               	retlw	121	;'y'
   963  1245  3400               	retlw	0
   964  1246                     STR_23:	
   965  1246  3431               	retlw	49	;'1'
   966  1247  3436               	retlw	54	;'6'
   967  1248  3476               	retlw	118	;'v'
   968  1249  3420               	retlw	32	;' '
   969  124A  3473               	retlw	115	;'s'
   970  124B  3475               	retlw	117	;'u'
   971  124C  3470               	retlw	112	;'p'
   972  124D  3470               	retlw	112	;'p'
   973  124E  346C               	retlw	108	;'l'
   974  124F  3479               	retlw	121	;'y'
   975  1250  3400               	retlw	0
   976  1251                     STR_157:	
   977  1251  3477               	retlw	119	;'w'
   978  1252  3461               	retlw	97	;'a'
   979  1253  3469               	retlw	105	;'i'
   980  1254  3474               	retlw	116	;'t'
   981  1255  3469               	retlw	105	;'i'
   982  1256  346E               	retlw	110	;'n'
   983  1257  3467               	retlw	103	;'g'
   984  1258  3420               	retlw	32	;' '
   985  1259  3420               	retlw	32	;' '
   986  125A  3400               	retlw	0
   987  125B                     STR_151:	
   988  125B  3453               	retlw	83	;'S'
   989  125C  3465               	retlw	101	;'e'
   990  125D  3474               	retlw	116	;'t'
   991  125E  3420               	retlw	32	;' '
   992  125F  3423               	retlw	35	;'#'
   993  1260  3420               	retlw	32	;' '
   994  1261  346F               	retlw	111	;'o'
   995  1262  3466               	retlw	102	;'f'
   996  1263  3420               	retlw	32	;' '
   997  1264  3400               	retlw	0
   998  1265                     STR_67:	
   999  1265  3443               	retlw	67	;'C'
  1000  1266  3448               	retlw	72	;'H'
  1001  1267  3432               	retlw	50	;'2'
  1002  1268  3420               	retlw	32	;' '
  1003  1269  342D               	retlw	45	;'-'
  1004  126A  3420               	retlw	32	;' '
  1005  126B  344F               	retlw	79	;'O'
  1006  126C  3446               	retlw	70	;'F'
  1007  126D  3446               	retlw	70	;'F'
  1008  126E  3400               	retlw	0
  1009  126F                     STR_91:	
  1010  126F  3443               	retlw	67	;'C'
  1011  1270  3448               	retlw	72	;'H'
  1012  1271  3433               	retlw	51	;'3'
  1013  1272  3420               	retlw	32	;' '
  1014  1273  342D               	retlw	45	;'-'
  1015  1274  3420               	retlw	32	;' '
  1016  1275  344F               	retlw	79	;'O'
  1017  1276  3446               	retlw	70	;'F'
  1018  1277  3446               	retlw	70	;'F'
  1019  1278  3400               	retlw	0
  1020  1279                     STR_136:	
  1021  1279  3452               	retlw	82	;'R'
  1022  127A  3453               	retlw	83	;'S'
  1023  127B  3453               	retlw	83	;'S'
  1024  127C  3449               	retlw	73	;'I'
  1025  127D  3420               	retlw	32	;' '
  1026  127E  342D               	retlw	45	;'-'
  1027  127F  3420               	retlw	32	;' '
  1028  1280  344F               	retlw	79	;'O'
  1029  1281  344B               	retlw	75	;'K'
  1030  1282  3400               	retlw	0
  1031  1283                     STR_152:	
  1032  1283  3420               	retlw	32	;' '
  1033  1284  3463               	retlw	99	;'c'
  1034  1285  3468               	retlw	104	;'h'
  1035  1286  3461               	retlw	97	;'a'
  1036  1287  346E               	retlw	110	;'n'
  1037  1288  346E               	retlw	110	;'n'
  1038  1289  3465               	retlw	101	;'e'
  1039  128A  346C               	retlw	108	;'l'
  1040  128B  3473               	retlw	115	;'s'
  1041  128C  3400               	retlw	0
  1042  128D                     STR_46:	
  1043  128D  3420               	retlw	32	;' '
  1044  128E  3445               	retlw	69	;'E'
  1045  128F  3472               	retlw	114	;'r'
  1046  1290  3472               	retlw	114	;'r'
  1047  1291  346F               	retlw	111	;'o'
  1048  1292  3472               	retlw	114	;'r'
  1049  1293  3420               	retlw	32	;' '
  1050  1294  3431               	retlw	49	;'1'
  1051  1295  3400               	retlw	0
  1052  1296                     STR_48:	
  1053  1296  3420               	retlw	32	;' '
  1054  1297  3445               	retlw	69	;'E'
  1055  1298  3472               	retlw	114	;'r'
  1056  1299  3472               	retlw	114	;'r'
  1057  129A  346F               	retlw	111	;'o'
  1058  129B  3472               	retlw	114	;'r'
  1059  129C  3420               	retlw	32	;' '
  1060  129D  3432               	retlw	50	;'2'
  1061  129E  3400               	retlw	0
  1062  129F                     STR_63:	
  1063  129F  3454               	retlw	84	;'T'
  1064  12A0  3465               	retlw	101	;'e'
  1065  12A1  3473               	retlw	115	;'s'
  1066  12A2  3474               	retlw	116	;'t'
  1067  12A3  3420               	retlw	32	;' '
  1068  12A4  3443               	retlw	67	;'C'
  1069  12A5  3448               	retlw	72	;'H'
  1070  12A6  3432               	retlw	50	;'2'
  1071  12A7  3400               	retlw	0
  1072  12A8                     STR_87:	
  1073  12A8  3454               	retlw	84	;'T'
  1074  12A9  3465               	retlw	101	;'e'
  1075  12AA  3473               	retlw	115	;'s'
  1076  12AB  3474               	retlw	116	;'t'
  1077  12AC  3420               	retlw	32	;' '
  1078  12AD  3443               	retlw	67	;'C'
  1079  12AE  3448               	retlw	72	;'H'
  1080  12AF  3433               	retlw	51	;'3'
  1081  12B0  3400               	retlw	0
  1082  12B1                     STR_124:	
  1083  12B1  3433               	retlw	51	;'3'
  1084  12B2  3476               	retlw	118	;'v'
  1085  12B3  3433               	retlw	51	;'3'
  1086  12B4  3420               	retlw	32	;' '
  1087  12B5  342D               	retlw	45	;'-'
  1088  12B6  3420               	retlw	32	;' '
  1089  12B7  344F               	retlw	79	;'O'
  1090  12B8  344B               	retlw	75	;'K'
  1091  12B9  3400               	retlw	0
  1092  12BA                     STR_71:	
  1093  12BA  3443               	retlw	67	;'C'
  1094  12BB  3448               	retlw	72	;'H'
  1095  12BC  3432               	retlw	50	;'2'
  1096  12BD  3420               	retlw	32	;' '
  1097  12BE  342D               	retlw	45	;'-'
  1098  12BF  3420               	retlw	32	;' '
  1099  12C0  344F               	retlw	79	;'O'
  1100  12C1  344E               	retlw	78	;'N'
  1101  12C2  3400               	retlw	0
  1102  12C3                     STR_95:	
  1103  12C3  3443               	retlw	67	;'C'
  1104  12C4  3448               	retlw	72	;'H'
  1105  12C5  3433               	retlw	51	;'3'
  1106  12C6  3420               	retlw	32	;' '
  1107  12C7  342D               	retlw	45	;'-'
  1108  12C8  3420               	retlw	32	;' '
  1109  12C9  344F               	retlw	79	;'O'
  1110  12CA  344E               	retlw	78	;'N'
  1111  12CB  3400               	retlw	0
  1112  12CC                     STR_1:	
  1113  12CC  344D               	retlw	77	;'M'
  1114  12CD  3475               	retlw	117	;'u'
  1115  12CE  346C               	retlw	108	;'l'
  1116  12CF  3474               	retlw	116	;'t'
  1117  12D0  3469               	retlw	105	;'i'
  1118  12D1  345F               	retlw	95	;'_'
  1119  12D2  3452               	retlw	82	;'R'
  1120  12D3  3458               	retlw	88	;'X'
  1121  12D4  3400               	retlw	0
  1122  12D5                     STR_34:	
  1123  12D5  3420               	retlw	32	;' '
  1124  12D6  3473               	retlw	115	;'s'
  1125  12D7  346B               	retlw	107	;'k'
  1126  12D8  3469               	retlw	105	;'i'
  1127  12D9  3470               	retlw	112	;'p'
  1128  12DA  3470               	retlw	112	;'p'
  1129  12DB  3465               	retlw	101	;'e'
  1130  12DC  3464               	retlw	100	;'d'
  1131  12DD  3400               	retlw	0
  1132  12DE                     STR_164:	
  1133  12DE  3477               	retlw	119	;'w'
  1134  12DF  3461               	retlw	97	;'a'
  1135  12E0  3469               	retlw	105	;'i'
  1136  12E1  3474               	retlw	116	;'t'
  1137  12E2  342E               	retlw	46	;'.'
  1138  12E3  342E               	retlw	46	;'.'
  1139  12E4  342E               	retlw	46	;'.'
  1140  12E5  3400               	retlw	0
  1141  12E6                     STR_111:	
  1142  12E6  3454               	retlw	84	;'T'
  1143  12E7  3465               	retlw	101	;'e'
  1144  12E8  3473               	retlw	115	;'s'
  1145  12E9  3474               	retlw	116	;'t'
  1146  12EA  3420               	retlw	32	;' '
  1147  12EB  3452               	retlw	82	;'R'
  1148  12EC  3446               	retlw	70	;'F'
  1149  12ED  3400               	retlw	0
  1150  12EE                     STR_110:	
  1151  12EE  3420               	retlw	32	;' '
  1152  12EF  3431               	retlw	49	;'1'
  1153  12F0  3430               	retlw	48	;'0'
  1154  12F1  3400               	retlw	0
  1155  12F2                     STR_114:	
  1156  12F2  3420               	retlw	32	;' '
  1157  12F3  3431               	retlw	49	;'1'
  1158  12F4  3431               	retlw	49	;'1'
  1159  12F5  3400               	retlw	0
  1160  12F6                     STR_116:	
  1161  12F6  3420               	retlw	32	;' '
  1162  12F7  3431               	retlw	49	;'1'
  1163  12F8  3432               	retlw	50	;'2'
  1164  12F9  3400               	retlw	0
  1165  12FA                     STR_128:	
  1166  12FA  3420               	retlw	32	;' '
  1167  12FB  3431               	retlw	49	;'1'
  1168  12FC  3433               	retlw	51	;'3'
  1169  12FD  3400               	retlw	0
  1170  12FE                     STR_130:	
  1171  12FE  3420               	retlw	32	;' '
  1172  12FF  3431               	retlw	49	;'1'
  1173  1300  3434               	retlw	52	;'4'
  1174  1301  3400               	retlw	0
  1175  1302                     STR_146:	
  1176  1302  3420               	retlw	32	;' '
  1177  1303  3431               	retlw	49	;'1'
  1178  1304  3435               	retlw	53	;'5'
  1179  1305  3400               	retlw	0
  1180  1306                     STR_154:	
  1181  1306  3420               	retlw	32	;' '
  1182  1307  3431               	retlw	49	;'1'
  1183  1308  3436               	retlw	54	;'6'
  1184  1309  3400               	retlw	0
  1185  130A                     STR_150:	
  1186  130A  3420               	retlw	32	;' '
  1187  130B  3431               	retlw	49	;'1'
  1188  130C  3437               	retlw	55	;'7'
  1189  130D  3400               	retlw	0
  1190  130E                     STR_76:	
  1191  130E  3420               	retlw	32	;' '
  1192  130F  3436               	retlw	54	;'6'
  1193  1310  3461               	retlw	97	;'a'
  1194  1311  3400               	retlw	0
  1195  1312                     STR_102:	
  1196  1312  3420               	retlw	32	;' '
  1197  1313  3438               	retlw	56	;'8'
  1198  1314  3461               	retlw	97	;'a'
  1199  1315  3400               	retlw	0
  1200  1316                     STR_78:	
  1201  1316  3420               	retlw	32	;' '
  1202  1317  3436               	retlw	54	;'6'
  1203  1318  3462               	retlw	98	;'b'
  1204  1319  3400               	retlw	0
  1205  131A                     STR_100:	
  1206  131A  3420               	retlw	32	;' '
  1207  131B  3438               	retlw	56	;'8'
  1208  131C  3462               	retlw	98	;'b'
  1209  131D  3400               	retlw	0
  1210  131E                     STR_56:	
  1211  131E  3420               	retlw	32	;' '
  1212  131F  3433               	retlw	51	;'3'
  1213  1320  3400               	retlw	0
  1214  1321                     STR_60:	
  1215  1321  3420               	retlw	32	;' '
  1216  1322  3434               	retlw	52	;'4'
  1217  1323  3400               	retlw	0
  1218  1324                     STR_70:	
  1219  1324  3420               	retlw	32	;' '
  1220  1325  3435               	retlw	53	;'5'
  1221  1326  3400               	retlw	0
  1222  1327                     STR_82:	
  1223  1327  3420               	retlw	32	;' '
  1224  1328  3436               	retlw	54	;'6'
  1225  1329  3400               	retlw	0
  1226  132A                     STR_86:	
  1227  132A  3420               	retlw	32	;' '
  1228  132B  3437               	retlw	55	;'7'
  1229  132C  3400               	retlw	0
  1230  132D                     STR_94:	
  1231  132D  3420               	retlw	32	;' '
  1232  132E  3438               	retlw	56	;'8'
  1233  132F  3400               	retlw	0
  1234  1330                     STR_106:	
  1235  1330  3420               	retlw	32	;' '
  1236  1331  3439               	retlw	57	;'9'
  1237  1332  3400               	retlw	0
  1238  1333                     STR_66:	
  1239  1333  346F               	retlw	111	;'o'
  1240  1334  346B               	retlw	107	;'k'
  1241  1335  3400               	retlw	0
  1242  108A                     
  1243                           ; #config settings
  1244  0000                     
  1245                           	psect	cinit
  1246  0097                     start_initialization:	
  1247  0097                     __initialization:	
  1248                           
  1249                           ;initializer for _one_second_timer
  1250  0097  30E8               	movlw	232
  1251  0098  00EA               	movwf	__pdataBANK0& (0+127)
  1252  0099  3003               	movlw	3
  1253  009A  00EB               	movwf	(__pdataBANK0+1)& (0+127)
  1254                           
  1255                           ; Clear objects allocated to BANK0
  1256  009B  304F               	movlw	low __pbssBANK0
  1257  009C  0084               	movwf	4
  1258  009D  3000               	movlw	high __pbssBANK0
  1259  009E  0085               	movwf	5
  1260  009F  3018               	movlw	24
  1261  00A0  3186  2682         	fcall	clear_ram0
  1262  00A2                     end_of_initialization:	
  1263                           ;End of C runtime variable initialization code
  1264                           
  1265  00A2                     __end_of__initialization:	
  1266  00A2  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1267  00A3  0020               	movlb	0
  1268  00A4  3188  280B         	ljmp	_main	;jump to C main() function
  1269                           
  1270                           	psect	bssBANK0
  1271  004F                     __pbssBANK0:	
  1272  004F                     _ADC_cur_sink_val:	
  1273  004F                     	ds	2
  1274  0051                     _curent_sink_val:	
  1275  0051                     	ds	2
  1276  0053                     _current_sink_stable:	
  1277  0053                     	ds	2
  1278  0055                     _current_sink_timer:	
  1279  0055                     	ds	2
  1280  0057                     _motor_direction_timer:	
  1281  0057                     	ds	2
  1282  0059                     _pickit_timer:	
  1283  0059                     	ds	2
  1284  005B                     _testjig_timer:	
  1285  005B                     	ds	2
  1286  005D                     _tj_timer:	
  1287  005D                     	ds	2
  1288  005F                     _uart_receive_timer:	
  1289  005F                     	ds	2
  1290  0061                     _hund:	
  1291  0061                     	ds	1
  1292  0062                     _pickit_red_counter:	
  1293  0062                     	ds	1
  1294  0063                     _ten:	
  1295  0063                     	ds	1
  1296  0064                     _ten_thou:	
  1297  0064                     	ds	1
  1298  0065                     _unit:	
  1299  0065                     	ds	1
  1300  0066                     _thou:	
  1301  0066                     	ds	1
  1302                           
  1303                           	psect	dataBANK0
  1304  006A                     __pdataBANK0:	
  1305  006A                     _one_second_timer:	
  1306  006A                     	ds	2
  1307                           
  1308                           	psect	clrtext
  1309  0682                     clear_ram0:	
  1310                           ;	Called with FSR0 containing the base address, and
  1311                           ;	WREG with the size to clear
  1312                           
  1313  0682  0064               	clrwdt	;clear the watchdog before getting into this loop
  1314  0683                     clrloop0:	
  1315  0683  0180               	clrf	0	;clear RAM location pointed to by FSR
  1316  0684  3101               	addfsr 0,1
  1317  0685  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1318  0686  2E83               	goto	clrloop0	;have we reached the end yet?
  1319  0687  3400               	retlw	0	;all done for this memory range, return
  1320                           
  1321                           	psect	cstackCOMMON
  1322  0070                     __pcstackCOMMON:	
  1323  0070                     ?_init_ADC:	
  1324  0070                     ??_init_ADC:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0070                     ?_init_current_sink:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0070                     ??_init_current_sink:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333  0070                     ?_buzz_one:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336  0070                     ?_init_i2c:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0070                     ??_init_i2c:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0070                     ?_debug_fast_tx:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0070                     ?_testjig_done:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0070                     ?_power_supply_set:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ??_power_supply_set:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ?_TX_one:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ??_TX_one:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ?_RX_one:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ??_RX_one:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ?_digitalpot:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     ?_isr:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0070                     ??_isr:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0070                     ?_main:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0070                     ?_i2c_Start:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0070                     ??_i2c_Start:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0070                     ?_i2c_Write:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0070                     ??_i2c_Write:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0070                     ?_i2c_Stop:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0070                     ??_i2c_Stop:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0070                     ?_i2c_write_char:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0070                     ?_clear_lcd:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0070                     ?_i2c_first_line:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405  0070                     ?_i2c_second_line:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0070                     ?___bmul:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0070                     ?_ADC_get_val:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0070                     ?___wmul:	
  1415                           ; 2 bytes @ 0x0
  1416                           
  1417  0070                     ?___ftpack:	
  1418                           ; 2 bytes @ 0x0
  1419                           
  1420  0070                     i2c_Write@data:	
  1421                           ; 3 bytes @ 0x0
  1422                           
  1423  0070                     power_supply_set@supply:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0070                     ___bmul@multiplicand:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0070                     buzz_one@time:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0070                     debug_fast_tx@data:	
  1433                           ; 2 bytes @ 0x0
  1434                           
  1435  0070                     ___wmul@multiplier:	
  1436                           ; 2 bytes @ 0x0
  1437                           
  1438  0070                     ___ftpack@arg:	
  1439                           ; 2 bytes @ 0x0
  1440                           
  1441                           
  1442                           ; 3 bytes @ 0x0
  1443  0070                     	ds	1
  1444  0071                     ?_init_i2c_lcd_5v:	
  1445  0071                     ??_digitalpot:	
  1446                           ; 1 bytes @ 0x1
  1447                           
  1448  0071                     ?_i2c_Write_string:	
  1449                           ; 1 bytes @ 0x1
  1450                           
  1451  0071                     ??_i2c_write_char:	
  1452                           ; 1 bytes @ 0x1
  1453                           
  1454  0071                     ??_clear_lcd:	
  1455                           ; 1 bytes @ 0x1
  1456                           
  1457  0071                     ??_i2c_first_line:	
  1458                           ; 1 bytes @ 0x1
  1459                           
  1460  0071                     ??_i2c_second_line:	
  1461                           ; 1 bytes @ 0x1
  1462                           
  1463  0071                     ?_lcd_set_cursor:	
  1464                           ; 1 bytes @ 0x1
  1465                           
  1466  0071                     ??___bmul:	
  1467                           ; 1 bytes @ 0x1
  1468                           
  1469  0071                     i2c_write_char@char_data:	
  1470                           ; 1 bytes @ 0x1
  1471                           
  1472  0071                     init_i2c_lcd_5v@single1_double2:	
  1473                           ; 1 bytes @ 0x1
  1474                           
  1475  0071                     lcd_set_cursor@col:	
  1476                           ; 1 bytes @ 0x1
  1477                           
  1478  0071                     TX_one@data:	
  1479                           ; 1 bytes @ 0x1
  1480                           
  1481  0071                     RX_one@i:	
  1482                           ; 1 bytes @ 0x1
  1483                           
  1484  0071                     ___bmul@product:	
  1485                           ; 1 bytes @ 0x1
  1486                           
  1487  0071                     i2c_Write_string@data:	
  1488                           ; 1 bytes @ 0x1
  1489                           
  1490                           
  1491                           ; 2 bytes @ 0x1
  1492  0071                     	ds	1
  1493  0072                     ??_buzz_one:	
  1494  0072                     ??_init_i2c_lcd_5v:	
  1495                           ; 1 bytes @ 0x2
  1496                           
  1497  0072                     ??_debug_fast_tx:	
  1498                           ; 1 bytes @ 0x2
  1499                           
  1500  0072                     ??_lcd_set_cursor:	
  1501                           ; 1 bytes @ 0x2
  1502                           
  1503  0072                     lcd_set_cursor@row:	
  1504                           ; 1 bytes @ 0x2
  1505                           
  1506  0072                     debug_fast_tx@i:	
  1507                           ; 1 bytes @ 0x2
  1508                           
  1509  0072                     TX_one@i:	
  1510                           ; 1 bytes @ 0x2
  1511                           
  1512  0072                     RX_one@data:	
  1513                           ; 1 bytes @ 0x2
  1514                           
  1515  0072                     ___bmul@multiplier:	
  1516                           ; 1 bytes @ 0x2
  1517                           
  1518  0072                     ___wmul@multiplicand:	
  1519                           ; 1 bytes @ 0x2
  1520                           
  1521                           
  1522                           ; 2 bytes @ 0x2
  1523  0072                     	ds	1
  1524  0073                     ??_ADC_get_val:	
  1525  0073                     ??_i2c_Write_string:	
  1526                           ; 1 bytes @ 0x3
  1527                           
  1528  0073                     lcd_set_cursor@LCD_position:	
  1529                           ; 1 bytes @ 0x3
  1530                           
  1531  0073                     ADC_get_val@channel:	
  1532                           ; 1 bytes @ 0x3
  1533                           
  1534  0073                     digitalpot@value:	
  1535                           ; 1 bytes @ 0x3
  1536                           
  1537  0073                     ___ftpack@exp:	
  1538                           ; 1 bytes @ 0x3
  1539                           
  1540                           
  1541                           ; 1 bytes @ 0x3
  1542  0073                     	ds	1
  1543  0074                     ?_print_screen:	
  1544  0074                     ?_Vout_set:	
  1545                           ; 1 bytes @ 0x4
  1546                           
  1547  0074                     ??___wmul:	
  1548                           ; 1 bytes @ 0x4
  1549                           
  1550  0074                     init_i2c_lcd_5v@contrast:	
  1551                           ; 1 bytes @ 0x4
  1552                           
  1553  0074                     ___ftpack@sign:	
  1554                           ; 1 bytes @ 0x4
  1555                           
  1556  0074                     print_screen@top:	
  1557                           ; 1 bytes @ 0x4
  1558                           
  1559  0074                     ADC_get_val@return_val:	
  1560                           ; 2 bytes @ 0x4
  1561                           
  1562  0074                     Vout_set@Volts:	
  1563                           ; 2 bytes @ 0x4
  1564                           
  1565  0074                     ___wmul@product:	
  1566                           ; 2 bytes @ 0x4
  1567                           
  1568                           
  1569                           ; 2 bytes @ 0x4
  1570  0074                     	ds	1
  1571  0075                     ??___ftpack:	
  1572                           
  1573                           ; 1 bytes @ 0x5
  1574  0075                     	ds	1
  1575  0076                     ??_Vout_set:	
  1576  0076                     ?_ten_thou_conv:	
  1577                           ; 1 bytes @ 0x6
  1578                           
  1579  0076                     ten_thou_conv@n:	
  1580                           ; 1 bytes @ 0x6
  1581                           
  1582  0076                     print_screen@bottom:	
  1583                           ; 2 bytes @ 0x6
  1584                           
  1585  0076                     Vout_set@digi_step:	
  1586                           ; 2 bytes @ 0x6
  1587                           
  1588                           
  1589                           ; 4 bytes @ 0x6
  1590  0076                     	ds	2
  1591  0078                     ??_print_screen:	
  1592  0078                     ??_testjig_done:	
  1593                           ; 1 bytes @ 0x8
  1594                           
  1595  0078                     ?_print_error:	
  1596                           ; 1 bytes @ 0x8
  1597                           
  1598  0078                     ??_ten_thou_conv:	
  1599                           ; 1 bytes @ 0x8
  1600                           
  1601  0078                     ?___lwtoft:	
  1602                           ; 1 bytes @ 0x8
  1603                           
  1604  0078                     print_error@top:	
  1605                           ; 3 bytes @ 0x8
  1606                           
  1607  0078                     ___lwtoft@c:	
  1608                           ; 2 bytes @ 0x8
  1609                           
  1610                           
  1611                           ; 2 bytes @ 0x8
  1612  0078                     	ds	2
  1613  007A                     print_error@bottom:	
  1614                           
  1615                           ; 2 bytes @ 0xA
  1616  007A                     	ds	1
  1617  007B                     ??_lcd_print_int:	
  1618  007B                     ??___ftmul:	
  1619                           ; 1 bytes @ 0xB
  1620                           
  1621  007B                     ??___lwtoft:	
  1622                           ; 1 bytes @ 0xB
  1623                           
  1624  007B                     testjig_done@state:	
  1625                           ; 1 bytes @ 0xB
  1626                           
  1627                           
  1628                           ; 1 bytes @ 0xB
  1629  007B                     	ds	3
  1630  007E                     ??_get_30v_current:	
  1631                           
  1632                           	psect	cstackBANK0
  1633  0020                     __pcstackBANK0:	
  1634                           ; 1 bytes @ 0xE
  1635                           
  1636  0020                     ??_print_error:	
  1637  0020                     ?_lcd_print_int:	
  1638                           ; 1 bytes @ 0x0
  1639                           
  1640  0020                     ?___ftmul:	
  1641                           ; 1 bytes @ 0x0
  1642                           
  1643  0020                     lcd_print_int@number:	
  1644                           ; 3 bytes @ 0x0
  1645                           
  1646  0020                     ___ftmul@f1:	
  1647                           ; 2 bytes @ 0x0
  1648                           
  1649                           
  1650                           ; 3 bytes @ 0x0
  1651  0020                     	ds	2
  1652  0022                     lcd_print_int@pos:	
  1653                           
  1654                           ; 2 bytes @ 0x2
  1655  0022                     	ds	1
  1656  0023                     ___ftmul@f2:	
  1657                           
  1658                           ; 3 bytes @ 0x3
  1659  0023                     	ds	1
  1660  0024                     lcd_print_int@decimal:	
  1661                           
  1662                           ; 1 bytes @ 0x4
  1663  0024                     	ds	1
  1664  0025                     lcd_print_int@ten_thou_digit:	
  1665                           
  1666                           ; 1 bytes @ 0x5
  1667  0025                     	ds	1
  1668  0026                     ___ftmul@exp:	
  1669                           
  1670                           ; 1 bytes @ 0x6
  1671  0026                     	ds	1
  1672  0027                     ___ftmul@f3_as_product:	
  1673                           
  1674                           ; 3 bytes @ 0x7
  1675  0027                     	ds	3
  1676  002A                     ___ftmul@cntr:	
  1677                           
  1678                           ; 1 bytes @ 0xA
  1679  002A                     	ds	1
  1680  002B                     ___ftmul@sign:	
  1681                           
  1682                           ; 1 bytes @ 0xB
  1683  002B                     	ds	1
  1684  002C                     ?___ftadd:	
  1685  002C                     ___ftadd@f1:	
  1686                           ; 3 bytes @ 0xC
  1687                           
  1688                           
  1689                           ; 3 bytes @ 0xC
  1690  002C                     	ds	3
  1691  002F                     ___ftadd@f2:	
  1692                           
  1693                           ; 3 bytes @ 0xF
  1694  002F                     	ds	3
  1695  0032                     ??___ftadd:	
  1696                           
  1697                           ; 1 bytes @ 0x12
  1698  0032                     	ds	3
  1699  0035                     ___ftadd@sign:	
  1700                           
  1701                           ; 1 bytes @ 0x15
  1702  0035                     	ds	1
  1703  0036                     ___ftadd@exp2:	
  1704                           
  1705                           ; 1 bytes @ 0x16
  1706  0036                     	ds	1
  1707  0037                     ___ftadd@exp1:	
  1708                           
  1709                           ; 1 bytes @ 0x17
  1710  0037                     	ds	1
  1711  0038                     ?___fttol:	
  1712  0038                     ___fttol@f1:	
  1713                           ; 4 bytes @ 0x18
  1714                           
  1715                           
  1716                           ; 3 bytes @ 0x18
  1717  0038                     	ds	4
  1718  003C                     ??___fttol:	
  1719                           
  1720                           ; 1 bytes @ 0x1C
  1721  003C                     	ds	3
  1722  003F                     ___fttol@sign1:	
  1723                           
  1724                           ; 1 bytes @ 0x1F
  1725  003F                     	ds	1
  1726  0040                     ___fttol@lval:	
  1727                           
  1728                           ; 4 bytes @ 0x20
  1729  0040                     	ds	4
  1730  0044                     ___fttol@exp1:	
  1731                           
  1732                           ; 1 bytes @ 0x24
  1733  0044                     	ds	1
  1734  0045                     ?_get_30v_current:	
  1735                           
  1736                           ; 2 bytes @ 0x25
  1737  0045                     	ds	2
  1738  0047                     get_30v_current@temp:	
  1739                           
  1740                           ; 2 bytes @ 0x27
  1741  0047                     	ds	2
  1742  0049                     ??_main:	
  1743                           
  1744                           ; 1 bytes @ 0x29
  1745  0049                     	ds	3
  1746  004C                     main@i:	
  1747                           
  1748                           ; 2 bytes @ 0x2C
  1749  004C                     	ds	2
  1750  004E                     main@RX_data:	
  1751                           
  1752                           ; 1 bytes @ 0x2E
  1753  004E                     	ds	1
  1754                           
  1755                           	psect	maintext
  1756  080B                     __pmaintext:	
  1757 ;;
  1758 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1759 ;;
  1760 ;; *************** function _main *****************
  1761 ;; Defined at:
  1762 ;;		line 455 in file "Multi_RX_testjig_v1.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  i               2   44[BANK0 ] unsigned int 
  1767 ;;  RX_data         1   46[BANK0 ] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : B1F/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  1777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1778 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1779 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1780 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1781 ;;Total ram usage:        6 bytes
  1782 ;; Hardware stack levels required when called:    5
  1783 ;; This function calls:
  1784 ;;		_ADC_get_val
  1785 ;;		_RX_one
  1786 ;;		_TX_one
  1787 ;;		_Vout_set
  1788 ;;		_buzz_one
  1789 ;;		_debug_fast_tx
  1790 ;;		_get_30v_current
  1791 ;;		_init_ADC
  1792 ;;		_init_current_sink
  1793 ;;		_init_i2c
  1794 ;;		_init_i2c_lcd_5v
  1795 ;;		_lcd_print_int
  1796 ;;		_power_supply_set
  1797 ;;		_print_error
  1798 ;;		_print_screen
  1799 ;;		_testjig_done
  1800 ;; This function is called by:
  1801 ;;		Startup code after reset
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           
  1806                           ;psect for function _main
  1807  080B                     _main:	
  1808                           
  1809                           ;Multi_RX_testjig_v1.c: 458: OSCCON = 0x7A;
  1810                           
  1811                           ;incstack = 0
  1812                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1813  080B  307A               	movlw	122
  1814  080C  0021               	movlb	1	; select bank1
  1815  080D  0099               	movwf	25	;volatile
  1816                           
  1817                           ;Multi_RX_testjig_v1.c: 460: OPTION_REG = 0b11010000;
  1818  080E  30D0               	movlw	208
  1819  080F  0095               	movwf	21	;volatile
  1820                           
  1821                           ;Multi_RX_testjig_v1.c: 461: TMR0 = 0x00;
  1822  0810  0020               	movlb	0	; select bank0
  1823  0811  0195               	clrf	21	;volatile
  1824                           
  1825                           ;Multi_RX_testjig_v1.c: 462: TMR0IF = 0;
  1826  0812  110B               	bcf	11,2	;volatile
  1827                           
  1828                           ;Multi_RX_testjig_v1.c: 463: TMR0IE = 1;
  1829  0813  168B               	bsf	11,5	;volatile
  1830                           
  1831                           ;Multi_RX_testjig_v1.c: 466: TRISA = 0b00001111;
  1832  0814  300F               	movlw	15
  1833  0815  0021               	movlb	1	; select bank1
  1834  0816  008C               	movwf	12	;volatile
  1835                           
  1836                           ;Multi_RX_testjig_v1.c: 467: TRISB = 0b11001111;
  1837  0817  30CF               	movlw	207
  1838  0818  008D               	movwf	13	;volatile
  1839                           
  1840                           ;Multi_RX_testjig_v1.c: 468: TRISC = 0b00011010;
  1841  0819  301A               	movlw	26
  1842  081A  008E               	movwf	14	;volatile
  1843                           
  1844                           ;Multi_RX_testjig_v1.c: 469: TRISD = 0b10001011;
  1845  081B  308B               	movlw	139
  1846  081C  008F               	movwf	15	;volatile
  1847                           
  1848                           ;Multi_RX_testjig_v1.c: 470: TRISE = 0b11110110;
  1849  081D  30F6               	movlw	246
  1850  081E  0090               	movwf	16	;volatile
  1851                           
  1852                           ;Multi_RX_testjig_v1.c: 471: TRISF = 0b00101111;
  1853  081F  302F               	movlw	47
  1854  0820  0026               	movlb	6	; select bank6
  1855  0821  008C               	movwf	12	;volatile
  1856                           
  1857                           ;Multi_RX_testjig_v1.c: 472: TRISG = 0b11101111;
  1858  0822  30EF               	movlw	239
  1859  0823  008D               	movwf	13	;volatile
  1860                           
  1861                           ;Multi_RX_testjig_v1.c: 474: PORTA = 0b00000000;
  1862  0824  0020               	movlb	0	; select bank0
  1863  0825  018C               	clrf	12	;volatile
  1864                           
  1865                           ;Multi_RX_testjig_v1.c: 475: PORTB = 0b00000000;
  1866  0826  018D               	clrf	13	;volatile
  1867                           
  1868                           ;Multi_RX_testjig_v1.c: 476: PORTC = 0b00000000;
  1869  0827  018E               	clrf	14	;volatile
  1870                           
  1871                           ;Multi_RX_testjig_v1.c: 477: PORTD = 0b01000000;
  1872  0828  3040               	movlw	64
  1873  0829  008F               	movwf	15	;volatile
  1874                           
  1875                           ;Multi_RX_testjig_v1.c: 478: PORTE = 0b00000000;
  1876  082A  0190               	clrf	16	;volatile
  1877                           
  1878                           ;Multi_RX_testjig_v1.c: 479: PORTF = 0b00000000;
  1879  082B  0025               	movlb	5	; select bank5
  1880  082C  018C               	clrf	12	;volatile
  1881                           
  1882                           ;Multi_RX_testjig_v1.c: 480: PORTG = 0b00000000;
  1883  082D  018D               	clrf	13	;volatile
  1884                           
  1885                           ;Multi_RX_testjig_v1.c: 482: WPUB = 0b00000000;
  1886  082E  0024               	movlb	4	; select bank4
  1887  082F  018D               	clrf	13	;volatile
  1888                           
  1889                           ;Multi_RX_testjig_v1.c: 483: WPUD = 0b00000000;
  1890  0830  018F               	clrf	15	;volatile
  1891                           
  1892                           ;Multi_RX_testjig_v1.c: 484: WPUE = 0b00000000;
  1893  0831  0190               	clrf	16	;volatile
  1894                           
  1895                           ;Multi_RX_testjig_v1.c: 486: ANSELA = 0b00000000;
  1896  0832  0023               	movlb	3	; select bank3
  1897  0833  018C               	clrf	12	;volatile
  1898                           
  1899                           ;Multi_RX_testjig_v1.c: 487: ANSELB = 0b00001100;
  1900  0834  300C               	movlw	12
  1901  0835  008D               	movwf	13	;volatile
  1902                           
  1903                           ;Multi_RX_testjig_v1.c: 488: ANSELD = 0b00001111;
  1904  0836  300F               	movlw	15
  1905  0837  008F               	movwf	15	;volatile
  1906                           
  1907                           ;Multi_RX_testjig_v1.c: 489: ANSELE = 0b00000100;
  1908  0838  3004               	movlw	4
  1909  0839  0090               	movwf	16	;volatile
  1910                           
  1911                           ;Multi_RX_testjig_v1.c: 490: ANSELF = 0b00000000;
  1912  083A  0028               	movlb	8	; select bank8
  1913  083B  018C               	clrf	12	;volatile
  1914                           
  1915                           ;Multi_RX_testjig_v1.c: 491: ANSELG = 0b00000000;
  1916  083C  018D               	clrf	13	;volatile
  1917                           
  1918                           ;Multi_RX_testjig_v1.c: 494: init_ADC();
  1919  083D  27F9               	fcall	_init_ADC
  1920                           
  1921                           ;Multi_RX_testjig_v1.c: 495: init_current_sink();
  1922  083E  3186  2659  3188   	fcall	_init_current_sink
  1923                           
  1924                           ;Multi_RX_testjig_v1.c: 496: pickit_state = pickit_idle;
  1925  0841  3005               	movlw	5
  1926  0842  0020               	movlb	0	; select bank0
  1927  0843  00E9               	movwf	_pickit_state
  1928                           
  1929                           ;Multi_RX_testjig_v1.c: 498: RA5 = 0;
  1930  0844  128C               	bcf	12,5	;volatile
  1931                           
  1932                           ;Multi_RX_testjig_v1.c: 499: buzz_one(200);
  1933  0845  30C8               	movlw	200
  1934  0846  00F0               	movwf	buzz_one@time
  1935  0847  01F1               	clrf	buzz_one@time+1
  1936  0848  3186  2612  3188   	fcall	_buzz_one
  1937                           
  1938                           ;Multi_RX_testjig_v1.c: 500: RA5 = 1;
  1939  084B  0020               	movlb	0	; select bank0
  1940  084C  168C               	bsf	12,5	;volatile
  1941                           
  1942                           ;Multi_RX_testjig_v1.c: 501: init_i2c();
  1943  084D  3186  2642  3188   	fcall	_init_i2c
  1944                           
  1945                           ;Multi_RX_testjig_v1.c: 508: init_i2c_lcd_5v(8, 0x38);
  1946  0850  3038               	movlw	56
  1947  0851  00F1               	movwf	init_i2c_lcd_5v@single1_double2
  1948  0852  3008               	movlw	8
  1949  0853  3181  21E2  3188   	fcall	_init_i2c_lcd_5v
  1950                           
  1951                           ;Multi_RX_testjig_v1.c: 509: print_screen("Multi_RX", "Test-Jig|Startup");
  1952  0856  30CC               	movlw	low (STR_1| (0+32768))
  1953  0857  00F4               	movwf	print_screen@top
  1954  0858  3092               	movlw	high (STR_1| (0+32768))
  1955  0859  00F5               	movwf	print_screen@top+1
  1956  085A  3059               	movlw	low (STR_2| (0+32768))
  1957  085B  00F6               	movwf	print_screen@bottom
  1958  085C  3090               	movlw	high (STR_2| (0+32768))
  1959  085D  00F7               	movwf	print_screen@bottom+1
  1960  085E  275D  3188         	fcall	_print_screen
  1961                           
  1962                           ;Multi_RX_testjig_v1.c: 510: RA4 = 1;
  1963  0860  0020               	movlb	0	; select bank0
  1964  0861  160C               	bsf	12,4	;volatile
  1965                           
  1966                           ;Multi_RX_testjig_v1.c: 511: GIE = 1;
  1967  0862  178B               	bsf	11,7	;volatile
  1968                           
  1969                           ;Multi_RX_testjig_v1.c: 512: LATC7 = 1;
  1970  0863  0022               	movlb	2	; select bank2
  1971  0864  178E               	bsf	14,7	;volatile
  1972                           
  1973                           ;Multi_RX_testjig_v1.c: 513: _delay((unsigned long)((100)*(16000000/4000.0)));
  1974  0865  3003               	movlw	3
  1975  0866  0020               	movlb	0	; select bank0
  1976  0867  00CB               	movwf	??_main+2
  1977  0868  3008               	movlw	8
  1978  0869  00CA               	movwf	??_main+1
  1979  086A  3078               	movlw	120
  1980  086B  00C9               	movwf	??_main
  1981  086C                     u4097:	
  1982  086C  0BC9               	decfsz	??_main,f
  1983  086D  286C               	goto	u4097
  1984  086E  0BCA               	decfsz	??_main+1,f
  1985  086F  286C               	goto	u4097
  1986  0870  0BCB               	decfsz	??_main+2,f
  1987  0871  286C               	goto	u4097
  1988                           
  1989                           ;Multi_RX_testjig_v1.c: 514: debug_fast_tx(0xAAAA);
  1990  0872  30AA               	movlw	170
  1991  0873  00F0               	movwf	debug_fast_tx@data
  1992  0874  00F1               	movwf	debug_fast_tx@data+1
  1993  0875  3185  25E5  3188   	fcall	_debug_fast_tx
  1994                           
  1995                           ;Multi_RX_testjig_v1.c: 515: _delay((unsigned long)((100)*(16000000/4000000.0)));
  1996  0878  3085               	movlw	133
  1997  0879  0020               	movlb	0	; select bank0
  1998  087A  00C9               	movwf	??_main
  1999  087B                     u4107:	
  2000  087B  0BC9               	decfsz	??_main,f
  2001  087C  287B               	goto	u4107
  2002                           
  2003                           ;Multi_RX_testjig_v1.c: 516: debug_fast_tx(0x5555);
  2004  087D  3055               	movlw	85
  2005  087E  00F0               	movwf	debug_fast_tx@data
  2006  087F  00F1               	movwf	debug_fast_tx@data+1
  2007  0880  3185  25E5  3188   	fcall	_debug_fast_tx
  2008                           
  2009                           ;Multi_RX_testjig_v1.c: 517: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2010  0883  3085               	movlw	133
  2011  0884  0020               	movlb	0	; select bank0
  2012  0885  00C9               	movwf	??_main
  2013  0886                     u4117:	
  2014  0886  0BC9               	decfsz	??_main,f
  2015  0887  2886               	goto	u4117
  2016                           
  2017                           ;Multi_RX_testjig_v1.c: 519: if(PCONbits.nRMCLR == 1)
  2018  0888  0021               	movlb	1	; select bank1
  2019  0889  1D96               	btfss	22,3	;volatile
  2020  088A  288F               	goto	l3391
  2021                           
  2022                           ;Multi_RX_testjig_v1.c: 520: testjig_done(2);
  2023  088B  3002               	movlw	2
  2024  088C  3185  2520  3188   	fcall	_testjig_done
  2025  088F                     l3391:	
  2026                           
  2027                           ;Multi_RX_testjig_v1.c: 523: if(RF3 == 1)
  2028  088F  0025               	movlb	5	; select bank5
  2029  0890  1D8C               	btfss	12,3	;volatile
  2030  0891  289C               	goto	l299
  2031                           
  2032                           ;Multi_RX_testjig_v1.c: 524: print_error("Multi_RX", "-> Insert PCB");
  2033  0892  30CC               	movlw	low (STR_1| (0+32768))
  2034  0893  00F8               	movwf	print_error@top
  2035  0894  3092               	movlw	high (STR_1| (0+32768))
  2036  0895  00F9               	movwf	print_error@top+1
  2037  0896  3015               	movlw	low (STR_4| (0+32768))
  2038  0897  00FA               	movwf	print_error@bottom
  2039  0898  3091               	movlw	high (STR_4| (0+32768))
  2040  0899  00FB               	movwf	print_error@bottom+1
  2041  089A  2773  3188         	fcall	_print_error
  2042  089C                     l299:	
  2043                           
  2044                           ;Multi_RX_testjig_v1.c: 527: print_screen("Powering board", "");
  2045  089C  30CB               	movlw	low (STR_5| (0+32768))
  2046  089D  00F4               	movwf	print_screen@top
  2047  089E  3090               	movlw	high (STR_5| (0+32768))
  2048  089F  00F5               	movwf	print_screen@top+1
  2049  08A0  308A               	movlw	low ((STR_155+15)| (0+32768))
  2050  08A1  00F6               	movwf	print_screen@bottom
  2051  08A2  3090               	movlw	high ((STR_155+15)| (0+32768))
  2052  08A3  00F7               	movwf	print_screen@bottom+1
  2053  08A4  275D               	fcall	_print_screen
  2054                           
  2055                           ;Multi_RX_testjig_v1.c: 530: Vout_set(12);
  2056  08A5  300C               	movlw	12
  2057  08A6  00F4               	movwf	Vout_set@Volts
  2058  08A7  01F5               	clrf	Vout_set@Volts+1
  2059  08A8  3180  20A6  3188   	fcall	_Vout_set
  2060                           
  2061                           ;Multi_RX_testjig_v1.c: 531: power_supply_set(0);
  2062  08AB  3000               	movlw	0
  2063  08AC  27D8  3188         	fcall	_power_supply_set
  2064                           
  2065                           ;Multi_RX_testjig_v1.c: 532: _delay((unsigned long)((50)*(16000000/4000.0)));
  2066  08AE  3002               	movlw	2
  2067  08AF  0020               	movlb	0	; select bank0
  2068  08B0  00CB               	movwf	??_main+2
  2069  08B1  3004               	movlw	4
  2070  08B2  00CA               	movwf	??_main+1
  2071  08B3  30BA               	movlw	186
  2072  08B4  00C9               	movwf	??_main
  2073  08B5                     u4127:	
  2074  08B5  0BC9               	decfsz	??_main,f
  2075  08B6  28B5               	goto	u4127
  2076  08B7  0BCA               	decfsz	??_main+1,f
  2077  08B8  28B5               	goto	u4127
  2078  08B9  0BCB               	decfsz	??_main+2,f
  2079  08BA  28B5               	goto	u4127
  2080  08BB  0000               	nop
  2081                           
  2082                           ;Multi_RX_testjig_v1.c: 533: ADC_val = ADC_get_val(0b01011111);
  2083  08BC  305F               	movlw	95
  2084  08BD  27C6  3188         	fcall	_ADC_get_val
  2085                           
  2086                           ;Multi_RX_testjig_v1.c: 534: testjig_timer = (unsigned int)(7518.8/2);
  2087  08BF  30AF               	movlw	175
  2088  08C0  0020               	movlb	0	; select bank0
  2089  08C1  00DB               	movwf	_testjig_timer	;volatile
  2090  08C2  300E               	movlw	14
  2091  08C3  00DC               	movwf	_testjig_timer+1	;volatile
  2092  08C4  28DD               	goto	l3401
  2093  08C5                     l3403:	
  2094  08C5  305F               	movlw	95
  2095  08C6  27C6  3188         	fcall	_ADC_get_val
  2096  08C8  3000               	movlw	0
  2097  08C9  0271               	subwf	?_ADC_get_val+1,w
  2098  08CA  307B               	movlw	123
  2099  08CB  1903               	skipnz
  2100  08CC  0270               	subwf	?_ADC_get_val,w
  2101  08CD  1C03               	skipc
  2102  08CE  28E7               	goto	l3409
  2103  08CF  3183  2317  3188   	fcall	_get_30v_current
  2104  08D2  3000               	movlw	0
  2105  08D3  0246               	subwf	?_get_30v_current+1,w
  2106  08D4  301E               	movlw	30
  2107  08D5  1903               	skipnz
  2108  08D6  0245               	subwf	?_get_30v_current,w
  2109  08D7  1803               	skipnc
  2110  08D8  28E7               	goto	l3409
  2111  08D9  085B               	movf	_testjig_timer,w	;volatile
  2112  08DA  045C               	iorwf	_testjig_timer+1,w	;volatile
  2113  08DB  1903               	btfsc	3,2
  2114  08DC  28E7               	goto	l3409
  2115  08DD                     l3401:	
  2116                           ;Multi_RX_testjig_v1.c: 535: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08)) && (get_30v_current() < 30) && testjig_timer);
  2117                           
  2118  08DD  305F               	movlw	95
  2119  08DE  27C6  3188         	fcall	_ADC_get_val
  2120  08E0  3000               	movlw	0
  2121  08E1  0271               	subwf	?_ADC_get_val+1,w
  2122  08E2  3068               	movlw	104
  2123  08E3  1903               	skipnz
  2124  08E4  0270               	subwf	?_ADC_get_val,w
  2125  08E5  1C03               	btfss	3,0
  2126  08E6  28C5               	goto	l3403
  2127  08E7                     l3409:	
  2128                           
  2129                           ;Multi_RX_testjig_v1.c: 536: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  2130  08E7  305F               	movlw	95
  2131  08E8  27C6  3188         	fcall	_ADC_get_val
  2132  08EA  3000               	movlw	0
  2133  08EB  0271               	subwf	?_ADC_get_val+1,w
  2134  08EC  3068               	movlw	104
  2135  08ED  1903               	skipnz
  2136  08EE  0270               	subwf	?_ADC_get_val,w
  2137  08EF  1803               	skipnc
  2138  08F0  28F9               	goto	l3413
  2139                           
  2140                           ;Multi_RX_testjig_v1.c: 537: print_error("12v-5v supply", "Volt Error L");
  2141  08F1  303F               	movlw	low (STR_7| (0+32768))
  2142  08F2  00F8               	movwf	print_error@top
  2143  08F3  3091               	movlw	high (STR_7| (0+32768))
  2144  08F4  00F9               	movwf	print_error@top+1
  2145  08F5  3082               	movlw	low (STR_8| (0+32768))
  2146  08F6  00FA               	movwf	print_error@bottom
  2147  08F7  3091               	movlw	high (STR_8| (0+32768))
  2148  08F8  2928               	goto	L1
  2149  08F9                     l3413:	
  2150                           
  2151                           ;Multi_RX_testjig_v1.c: 538: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  2152  08F9  305F               	movlw	95
  2153  08FA  27C6  3188         	fcall	_ADC_get_val
  2154  08FC  3000               	movlw	0
  2155  08FD  0271               	subwf	?_ADC_get_val+1,w
  2156  08FE  307B               	movlw	123
  2157  08FF  1903               	skipnz
  2158  0900  0270               	subwf	?_ADC_get_val,w
  2159  0901  1C03               	skipc
  2160  0902  290B               	goto	l3417
  2161                           
  2162                           ;Multi_RX_testjig_v1.c: 539: print_error("12v-5v supply", "Volt Error H");
  2163  0903  303F               	movlw	low (STR_7| (0+32768))
  2164  0904  00F8               	movwf	print_error@top
  2165  0905  3091               	movlw	high (STR_7| (0+32768))
  2166  0906  00F9               	movwf	print_error@top+1
  2167  0907  3068               	movlw	low (STR_10| (0+32768))
  2168  0908  00FA               	movwf	print_error@bottom
  2169  0909  3091               	movlw	high (STR_10| (0+32768))
  2170  090A  2928               	goto	L1
  2171  090B                     l3417:	
  2172                           
  2173                           ;Multi_RX_testjig_v1.c: 540: else if((get_30v_current() >= 30))
  2174  090B  3183  2317  3188   	fcall	_get_30v_current
  2175  090E  3000               	movlw	0
  2176  090F  0246               	subwf	?_get_30v_current+1,w
  2177  0910  301E               	movlw	30
  2178  0911  1903               	skipnz
  2179  0912  0245               	subwf	?_get_30v_current,w
  2180  0913  1C03               	skipc
  2181  0914  291D               	goto	l3421
  2182                           
  2183                           ;Multi_RX_testjig_v1.c: 541: print_error("12v supply", "Curr Error");
  2184  0915  30FC               	movlw	low ((STR_19+4)| (0+32768))
  2185  0916  00F8               	movwf	print_error@top
  2186  0917  3090               	movlw	high ((STR_19+4)| (0+32768))
  2187  0918  00F9               	movwf	print_error@top+1
  2188  0919  3025               	movlw	low (STR_12| (0+32768))
  2189  091A  00FA               	movwf	print_error@bottom
  2190  091B  3092               	movlw	high (STR_12| (0+32768))
  2191  091C  2928               	goto	L1
  2192  091D                     l3421:	
  2193                           
  2194                           ;Multi_RX_testjig_v1.c: 542: else if(testjig_timer == 0)
  2195  091D  085B               	movf	_testjig_timer,w	;volatile
  2196  091E  045C               	iorwf	_testjig_timer+1,w	;volatile
  2197  091F  1D03               	btfss	3,2
  2198  0920  292B               	goto	l306
  2199                           
  2200                           ;Multi_RX_testjig_v1.c: 543: print_error("12v-5v supply", "T-out Error");
  2201  0921  303F               	movlw	low (STR_7| (0+32768))
  2202  0922  00F8               	movwf	print_error@top
  2203  0923  3091               	movlw	high (STR_7| (0+32768))
  2204  0924  00F9               	movwf	print_error@top+1
  2205  0925  3019               	movlw	low (STR_14| (0+32768))
  2206  0926  00FA               	movwf	print_error@bottom
  2207  0927  3092               	movlw	high (STR_14| (0+32768))
  2208  0928                     L1:	
  2209  0928  00FB               	movwf	print_error@bottom+1
  2210  0929  2773  3188         	fcall	_print_error
  2211  092B                     l306:	
  2212                           
  2213                           ;Multi_RX_testjig_v1.c: 548: power_supply_set(1);
  2214  092B  3001               	movlw	1
  2215  092C  27D8               	fcall	_power_supply_set
  2216                           
  2217                           ;Multi_RX_testjig_v1.c: 549: Vout_set(16);
  2218  092D  3010               	movlw	16
  2219  092E  00F4               	movwf	Vout_set@Volts
  2220  092F  01F5               	clrf	Vout_set@Volts+1
  2221  0930  3180  20A6  3188   	fcall	_Vout_set
  2222                           
  2223                           ;Multi_RX_testjig_v1.c: 550: _delay((unsigned long)((150)*(16000000/4000.0)));
  2224  0933  3004               	movlw	4
  2225  0934  0020               	movlb	0	; select bank0
  2226  0935  00CB               	movwf	??_main+2
  2227  0936  300C               	movlw	12
  2228  0937  00CA               	movwf	??_main+1
  2229  0938  3035               	movlw	53
  2230  0939  00C9               	movwf	??_main
  2231  093A                     u4137:	
  2232  093A  0BC9               	decfsz	??_main,f
  2233  093B  293A               	goto	u4137
  2234  093C  0BCA               	decfsz	??_main+1,f
  2235  093D  293A               	goto	u4137
  2236  093E  0BCB               	decfsz	??_main+2,f
  2237  093F  293A               	goto	u4137
  2238  0940  3200               	nop2
  2239                           
  2240                           ;Multi_RX_testjig_v1.c: 551: testjig_timer = (unsigned int)(7518.8/2);
  2241  0941  30AF               	movlw	175
  2242  0942  0020               	movlb	0	; select bank0
  2243  0943  00DB               	movwf	_testjig_timer	;volatile
  2244  0944  300E               	movlw	14
  2245  0945  00DC               	movwf	_testjig_timer+1	;volatile
  2246  0946  2973               	goto	l3429
  2247  0947                     l3431:	
  2248  0947  305F               	movlw	95
  2249  0948  27C6  3188         	fcall	_ADC_get_val
  2250  094A  3000               	movlw	0
  2251  094B  0271               	subwf	?_ADC_get_val+1,w
  2252  094C  307B               	movlw	123
  2253  094D  1903               	skipnz
  2254  094E  0270               	subwf	?_ADC_get_val,w
  2255  094F  1C03               	skipc
  2256  0950  297D               	goto	l3441
  2257  0951  3063               	movlw	99
  2258  0952  27C6  3188         	fcall	_ADC_get_val
  2259  0954  3000               	movlw	0
  2260  0955  0271               	subwf	?_ADC_get_val+1,w
  2261  0956  30F5               	movlw	245
  2262  0957  1903               	skipnz
  2263  0958  0270               	subwf	?_ADC_get_val,w
  2264  0959  1803               	skipnc
  2265  095A  297D               	goto	l3441
  2266  095B  3063               	movlw	99
  2267  095C  27C6  3188         	fcall	_ADC_get_val
  2268  095E  3001               	movlw	1
  2269  095F  0271               	subwf	?_ADC_get_val+1,w
  2270  0960  3048               	movlw	72
  2271  0961  1903               	skipnz
  2272  0962  0270               	subwf	?_ADC_get_val,w
  2273  0963  1C03               	skipc
  2274  0964  297D               	goto	l3441
  2275  0965  3183  2317  3188   	fcall	_get_30v_current
  2276  0968  3000               	movlw	0
  2277  0969  0246               	subwf	?_get_30v_current+1,w
  2278  096A  3032               	movlw	50
  2279  096B  1903               	skipnz
  2280  096C  0245               	subwf	?_get_30v_current,w
  2281  096D  1803               	skipnc
  2282  096E  297D               	goto	l3441
  2283  096F  085B               	movf	_testjig_timer,w	;volatile
  2284  0970  045C               	iorwf	_testjig_timer+1,w	;volatile
  2285  0971  1903               	btfsc	3,2
  2286  0972  297D               	goto	l3441
  2287  0973                     l3429:	
  2288                           ;Multi_RX_testjig_v1.c: 552: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08))&&(ADC_get_val(0b01100011) < (unsigned int)((((12/11.0)*1024)/4.096)*0.9)) && (AD
      +                          C_get_val(0b011
  2289                           
  2290  0973  305F               	movlw	95
  2291  0974  27C6  3188         	fcall	_ADC_get_val
  2292  0976  3000               	movlw	0
  2293  0977  0271               	subwf	?_ADC_get_val+1,w
  2294  0978  3068               	movlw	104
  2295  0979  1903               	skipnz
  2296  097A  0270               	subwf	?_ADC_get_val,w
  2297  097B  1C03               	btfss	3,0
  2298  097C  2947               	goto	l3431
  2299  097D                     l3441:	
  2300                           
  2301                           ;Multi_RX_testjig_v1.c: 553: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  2302  097D  305F               	movlw	95
  2303  097E  27C6  3188         	fcall	_ADC_get_val
  2304  0980  3000               	movlw	0
  2305  0981  0271               	subwf	?_ADC_get_val+1,w
  2306  0982  3068               	movlw	104
  2307  0983  1903               	skipnz
  2308  0984  0270               	subwf	?_ADC_get_val,w
  2309  0985  1803               	skipnc
  2310  0986  298B               	goto	l3445
  2311                           
  2312                           ;Multi_RX_testjig_v1.c: 554: print_error("16v-5v supply", "Volt Error L");
  2313  0987  304D               	movlw	low (STR_15| (0+32768))
  2314  0988  00F8               	movwf	print_error@top
  2315  0989  3091               	movlw	high (STR_15| (0+32768))
  2316  098A  29A6               	goto	L10
  2317  098B                     l3445:	
  2318                           
  2319                           ;Multi_RX_testjig_v1.c: 555: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  2320  098B  305F               	movlw	95
  2321  098C  27C6  3188         	fcall	_ADC_get_val
  2322  098E  3000               	movlw	0
  2323  098F  0271               	subwf	?_ADC_get_val+1,w
  2324  0990  307B               	movlw	123
  2325  0991  1903               	skipnz
  2326  0992  0270               	subwf	?_ADC_get_val,w
  2327  0993  1C03               	skipc
  2328  0994  2999               	goto	l3449
  2329                           
  2330                           ;Multi_RX_testjig_v1.c: 556: print_error("16v-5v supply", "Volt Error H");
  2331  0995  304D               	movlw	low (STR_15| (0+32768))
  2332  0996  00F8               	movwf	print_error@top
  2333  0997  3091               	movlw	high (STR_15| (0+32768))
  2334  0998  29B8               	goto	L11
  2335  0999                     l3449:	
  2336                           
  2337                           ;Multi_RX_testjig_v1.c: 557: else if((ADC_get_val(0b01100011) < (unsigned int)((((12/11.
      +                          0)*1024)/4.096)*0.9)))
  2338  0999  3063               	movlw	99
  2339  099A  27C6  3188         	fcall	_ADC_get_val
  2340  099C  3000               	movlw	0
  2341  099D  0271               	subwf	?_ADC_get_val+1,w
  2342  099E  30F5               	movlw	245
  2343  099F  1903               	skipnz
  2344  09A0  0270               	subwf	?_ADC_get_val,w
  2345  09A1  1803               	skipnc
  2346  09A2  29AB               	goto	l3453
  2347                           
  2348                           ;Multi_RX_testjig_v1.c: 558: print_error("16v-12v supply", "Volt Error L");
  2349  09A3  30F8               	movlw	low (STR_19| (0+32768))
  2350  09A4  00F8               	movwf	print_error@top
  2351  09A5  3090               	movlw	high (STR_19| (0+32768))
  2352  09A6                     L10:	
  2353  09A6  00F9               	movwf	print_error@top+1
  2354  09A7  3082               	movlw	low (STR_8| (0+32768))
  2355  09A8  00FA               	movwf	print_error@bottom
  2356  09A9  3091               	movlw	high (STR_8| (0+32768))
  2357  09AA  29DA               	goto	L8
  2358  09AB                     l3453:	
  2359                           
  2360                           ;Multi_RX_testjig_v1.c: 559: else if((ADC_get_val(0b01100011) > (unsigned int)((((12/11.
      +                          0)*1024)/4.096)*1.2)))
  2361  09AB  3063               	movlw	99
  2362  09AC  27C6  3188         	fcall	_ADC_get_val
  2363  09AE  3001               	movlw	1
  2364  09AF  0271               	subwf	?_ADC_get_val+1,w
  2365  09B0  3048               	movlw	72
  2366  09B1  1903               	skipnz
  2367  09B2  0270               	subwf	?_ADC_get_val,w
  2368  09B3  1C03               	skipc
  2369  09B4  29BD               	goto	l3457
  2370                           
  2371                           ;Multi_RX_testjig_v1.c: 560: print_error("16v-12v supply", "Volt Error H");
  2372  09B5  30F8               	movlw	low (STR_19| (0+32768))
  2373  09B6  00F8               	movwf	print_error@top
  2374  09B7  3090               	movlw	high (STR_19| (0+32768))
  2375  09B8                     L11:	
  2376  09B8  00F9               	movwf	print_error@top+1
  2377  09B9  3068               	movlw	low (STR_10| (0+32768))
  2378  09BA  00FA               	movwf	print_error@bottom
  2379  09BB  3091               	movlw	high (STR_10| (0+32768))
  2380  09BC  29DA               	goto	L8
  2381  09BD                     l3457:	
  2382                           
  2383                           ;Multi_RX_testjig_v1.c: 561: else if((get_30v_current() >= 60))
  2384  09BD  3183  2317  3188   	fcall	_get_30v_current
  2385  09C0  3000               	movlw	0
  2386  09C1  0246               	subwf	?_get_30v_current+1,w
  2387  09C2  303C               	movlw	60
  2388  09C3  1903               	skipnz
  2389  09C4  0245               	subwf	?_get_30v_current,w
  2390  09C5  1C03               	skipc
  2391  09C6  29CF               	goto	l3461
  2392                           
  2393                           ;Multi_RX_testjig_v1.c: 562: print_error("16v supply", "Curr Error");
  2394  09C7  3046               	movlw	low (STR_23| (0+32768))
  2395  09C8  00F8               	movwf	print_error@top
  2396  09C9  3092               	movlw	high (STR_23| (0+32768))
  2397  09CA  00F9               	movwf	print_error@top+1
  2398  09CB  3025               	movlw	low (STR_12| (0+32768))
  2399  09CC  00FA               	movwf	print_error@bottom
  2400  09CD  3092               	movlw	high (STR_12| (0+32768))
  2401  09CE  29DA               	goto	L8
  2402  09CF                     l3461:	
  2403                           
  2404                           ;Multi_RX_testjig_v1.c: 563: else if(testjig_timer == 0)
  2405  09CF  085B               	movf	_testjig_timer,w	;volatile
  2406  09D0  045C               	iorwf	_testjig_timer+1,w	;volatile
  2407  09D1  1D03               	btfss	3,2
  2408  09D2  29DD               	goto	l3465
  2409                           
  2410                           ;Multi_RX_testjig_v1.c: 564: print_error("16v-5v supply", "T-out Error");
  2411  09D3  304D               	movlw	low (STR_15| (0+32768))
  2412  09D4  00F8               	movwf	print_error@top
  2413  09D5  3091               	movlw	high (STR_15| (0+32768))
  2414  09D6  00F9               	movwf	print_error@top+1
  2415  09D7  3019               	movlw	low (STR_14| (0+32768))
  2416  09D8  00FA               	movwf	print_error@bottom
  2417  09D9  3092               	movlw	high (STR_14| (0+32768))
  2418  09DA                     L8:	
  2419  09DA  00FB               	movwf	print_error@bottom+1
  2420  09DB  2773  3188         	fcall	_print_error
  2421  09DD                     l3465:	
  2422                           
  2423                           ;Multi_RX_testjig_v1.c: 570: if(RA2 == 1)
  2424  09DD  0020               	movlb	0	; select bank0
  2425  09DE  1D0C               	btfss	12,2	;volatile
  2426  09DF  2A22               	goto	l3485
  2427                           
  2428                           ;Multi_RX_testjig_v1.c: 571: {
  2429                           ;Multi_RX_testjig_v1.c: 572: power_supply_set(0);
  2430  09E0  3000               	movlw	0
  2431  09E1  27D8  3188         	fcall	_power_supply_set
  2432                           
  2433                           ;Multi_RX_testjig_v1.c: 574: print_screen("Pickit Programming", "");
  2434  09E3  3013               	movlw	low (STR_27| (0+32768))
  2435  09E4  00F4               	movwf	print_screen@top
  2436  09E5  3090               	movlw	high (STR_27| (0+32768))
  2437  09E6  00F5               	movwf	print_screen@top+1
  2438  09E7  308A               	movlw	low ((STR_155+15)| (0+32768))
  2439  09E8  00F6               	movwf	print_screen@bottom
  2440  09E9  3090               	movlw	high ((STR_155+15)| (0+32768))
  2441  09EA  00F7               	movwf	print_screen@bottom+1
  2442  09EB  275D  3188         	fcall	_print_screen
  2443                           
  2444                           ;Multi_RX_testjig_v1.c: 575: LATA7 = 1;
  2445  09ED  0022               	movlb	2	; select bank2
  2446  09EE  178C               	bsf	12,7	;volatile
  2447                           
  2448                           ;Multi_RX_testjig_v1.c: 576: _delay((unsigned long)((100)*(16000000/4000.0)));
  2449  09EF  3003               	movlw	3
  2450  09F0  0020               	movlb	0	; select bank0
  2451  09F1  00CB               	movwf	??_main+2
  2452  09F2  3008               	movlw	8
  2453  09F3  00CA               	movwf	??_main+1
  2454  09F4  3078               	movlw	120
  2455  09F5  00C9               	movwf	??_main
  2456  09F6                     u4147:	
  2457  09F6  0BC9               	decfsz	??_main,f
  2458  09F7  29F6               	goto	u4147
  2459  09F8  0BCA               	decfsz	??_main+1,f
  2460  09F9  29F6               	goto	u4147
  2461  09FA  0BCB               	decfsz	??_main+2,f
  2462  09FB  29F6               	goto	u4147
  2463                           
  2464                           ;Multi_RX_testjig_v1.c: 577: pickit_state = pickit_start;
  2465  09FC  0020               	movlb	0	; select bank0
  2466  09FD  3001               	movlw	low (STR_29| (0+32768))
  2467  09FE  01E9               	clrf	_pickit_state
  2468  09FF  0AE9               	incf	_pickit_state,f
  2469                           
  2470                           ;Multi_RX_testjig_v1.c: 579: print_screen("Waiting for", " Programming");
  2471  0A00  00F4               	movwf	print_screen@top
  2472  0A01  3092               	movlw	high (STR_29| (0+32768))
  2473  0A02  00F5               	movwf	print_screen@top+1
  2474  0A03  3019               	movlw	low ((STR_27+6)| (0+32768))
  2475  0A04  00F6               	movwf	print_screen@bottom
  2476  0A05  3090               	movlw	high ((STR_27+6)| (0+32768))
  2477  0A06  00F7               	movwf	print_screen@bottom+1
  2478  0A07  275D  3188         	fcall	_print_screen
  2479  0A09  2A0E               	goto	l3477
  2480  0A0A                     l3479:	
  2481  0A0A  3004               	movlw	4
  2482  0A0B  0669               	xorwf	_pickit_state,w
  2483  0A0C  1903               	btfsc	3,2
  2484  0A0D  2A13               	goto	l3481
  2485  0A0E                     l3477:	
  2486                           ;Multi_RX_testjig_v1.c: 580: while((pickit_state != pickit_idle) && (pickit_state != pic
      +                          kit_error));
  2487                           
  2488  0A0E  3005               	movlw	5
  2489  0A0F  0020               	movlb	0	; select bank0
  2490  0A10  0669               	xorwf	_pickit_state,w
  2491  0A11  1D03               	btfss	3,2
  2492  0A12  2A0A               	goto	l3479
  2493  0A13                     l3481:	
  2494                           
  2495                           ;Multi_RX_testjig_v1.c: 581: if(pickit_state == pickit_error)
  2496  0A13  3004               	movlw	4
  2497  0A14  0669               	xorwf	_pickit_state,w
  2498  0A15  1D03               	btfss	3,2
  2499  0A16  2A3A               	goto	l3489
  2500                           
  2501                           ;Multi_RX_testjig_v1.c: 582: print_error("Programming", "Error");
  2502  0A17  301A               	movlw	low ((STR_27+7)| (0+32768))
  2503  0A18  00F8               	movwf	print_error@top
  2504  0A19  3090               	movlw	high ((STR_27+7)| (0+32768))
  2505  0A1A  00F9               	movwf	print_error@top+1
  2506  0A1B  302A               	movlw	low ((STR_12+5)| (0+32768))
  2507  0A1C  00FA               	movwf	print_error@bottom
  2508  0A1D  3092               	movlw	high ((STR_12+5)| (0+32768))
  2509  0A1E  00FB               	movwf	print_error@bottom+1
  2510  0A1F  2773  3188         	fcall	_print_error
  2511  0A21  2A3A               	goto	l3489
  2512  0A22                     l3485:	
  2513                           
  2514                           ;Multi_RX_testjig_v1.c: 584: else
  2515                           ;Multi_RX_testjig_v1.c: 585: {
  2516                           ;Multi_RX_testjig_v1.c: 586: print_screen("Pickit Programming", " skipped");
  2517  0A22  3013               	movlw	low (STR_27| (0+32768))
  2518  0A23  00F4               	movwf	print_screen@top
  2519  0A24  3090               	movlw	high (STR_27| (0+32768))
  2520  0A25  00F5               	movwf	print_screen@top+1
  2521  0A26  30D5               	movlw	low (STR_34| (0+32768))
  2522  0A27  00F6               	movwf	print_screen@bottom
  2523  0A28  3092               	movlw	high (STR_34| (0+32768))
  2524  0A29  00F7               	movwf	print_screen@bottom+1
  2525  0A2A  275D  3188         	fcall	_print_screen
  2526                           
  2527                           ;Multi_RX_testjig_v1.c: 587: _delay((unsigned long)((300)*(16000000/4000.0)));
  2528  0A2C  3007               	movlw	7
  2529  0A2D  0020               	movlb	0	; select bank0
  2530  0A2E  00CB               	movwf	??_main+2
  2531  0A2F  3017               	movlw	23
  2532  0A30  00CA               	movwf	??_main+1
  2533  0A31  306F               	movlw	111
  2534  0A32  00C9               	movwf	??_main
  2535  0A33                     u4157:	
  2536  0A33  0BC9               	decfsz	??_main,f
  2537  0A34  2A33               	goto	u4157
  2538  0A35  0BCA               	decfsz	??_main+1,f
  2539  0A36  2A33               	goto	u4157
  2540  0A37  0BCB               	decfsz	??_main+2,f
  2541  0A38  2A33               	goto	u4157
  2542  0A39  0000               	nop
  2543  0A3A                     l3489:	
  2544                           
  2545                           ;Multi_RX_testjig_v1.c: 588: }
  2546                           ;Multi_RX_testjig_v1.c: 603: _delay((unsigned long)((100)*(16000000/4000.0)));
  2547  0A3A  3003               	movlw	3
  2548  0A3B  0020               	movlb	0	; select bank0
  2549  0A3C  00CB               	movwf	??_main+2
  2550  0A3D  3008               	movlw	8
  2551  0A3E  00CA               	movwf	??_main+1
  2552  0A3F  3078               	movlw	120
  2553  0A40  00C9               	movwf	??_main
  2554  0A41                     u4167:	
  2555  0A41  0BC9               	decfsz	??_main,f
  2556  0A42  2A41               	goto	u4167
  2557  0A43  0BCA               	decfsz	??_main+1,f
  2558  0A44  2A41               	goto	u4167
  2559  0A45  0BCB               	decfsz	??_main+2,f
  2560  0A46  2A41               	goto	u4167
  2561                           
  2562                           ;Multi_RX_testjig_v1.c: 604: print_screen("Establishing", "comms");
  2563  0A47  309C               	movlw	low (STR_35| (0+32768))
  2564  0A48  00F4               	movwf	print_screen@top
  2565  0A49  3091               	movlw	high (STR_35| (0+32768))
  2566  0A4A  00F5               	movwf	print_screen@top+1
  2567  0A4B  3035               	movlw	low ((STR_158+5)| (0+32768))
  2568  0A4C  00F6               	movwf	print_screen@bottom
  2569  0A4D  3092               	movlw	high ((STR_158+5)| (0+32768))
  2570  0A4E  00F7               	movwf	print_screen@bottom+1
  2571  0A4F  275D  3188         	fcall	_print_screen
  2572                           
  2573                           ;Multi_RX_testjig_v1.c: 605: unsigned int i;
  2574                           ;Multi_RX_testjig_v1.c: 606: for(i = 0; i < 10; i++)
  2575  0A51  0020               	movlb	0	; select bank0
  2576  0A52  01CC               	clrf	main@i
  2577  0A53  01CD               	clrf	main@i+1
  2578  0A54                     l3493:	
  2579  0A54  3000               	movlw	0
  2580  0A55  024D               	subwf	main@i+1,w
  2581  0A56  300A               	movlw	10
  2582  0A57  1903               	skipnz
  2583  0A58  024C               	subwf	main@i,w
  2584  0A59  1803               	btfsc	3,0
  2585  0A5A  2A83               	goto	l3509
  2586                           
  2587                           ;Multi_RX_testjig_v1.c: 607: {
  2588                           ;Multi_RX_testjig_v1.c: 608: TX_one(0x01);
  2589  0A5B  3001               	movlw	1
  2590  0A5C  271B  3188         	fcall	_TX_one
  2591                           
  2592                           ;Multi_RX_testjig_v1.c: 609: if(RX_one() == 0xAA)
  2593  0A5E  273D  3188         	fcall	_RX_one
  2594  0A60  3AAA               	xorlw	170
  2595  0A61  1903               	btfsc	3,2
  2596  0A62  2A83               	goto	l3509
  2597                           
  2598                           ;Multi_RX_testjig_v1.c: 611: lcd_print_int(i, 11, 0, 0);
  2599  0A63  0020               	movlb	0	; select bank0
  2600  0A64  084D               	movf	main@i+1,w
  2601  0A65  00A1               	movwf	lcd_print_int@number+1
  2602  0A66  084C               	movf	main@i,w
  2603  0A67  00A0               	movwf	lcd_print_int@number
  2604  0A68  300B               	movlw	11
  2605  0A69  00A2               	movwf	lcd_print_int@pos
  2606  0A6A  01A3               	clrf	lcd_print_int@pos+1
  2607  0A6B  01A4               	clrf	lcd_print_int@decimal
  2608  0A6C  01A5               	clrf	lcd_print_int@ten_thou_digit
  2609  0A6D  3180  20F7  3188   	fcall	_lcd_print_int
  2610                           
  2611                           ;Multi_RX_testjig_v1.c: 612: _delay((unsigned long)((50)*(16000000/4000.0)));
  2612  0A70  3002               	movlw	2
  2613  0A71  0020               	movlb	0	; select bank0
  2614  0A72  00CB               	movwf	??_main+2
  2615  0A73  3004               	movlw	4
  2616  0A74  00CA               	movwf	??_main+1
  2617  0A75  30BA               	movlw	186
  2618  0A76  00C9               	movwf	??_main
  2619  0A77                     u4177:	
  2620  0A77  0BC9               	decfsz	??_main,f
  2621  0A78  2A77               	goto	u4177
  2622  0A79  0BCA               	decfsz	??_main+1,f
  2623  0A7A  2A77               	goto	u4177
  2624  0A7B  0BCB               	decfsz	??_main+2,f
  2625  0A7C  2A77               	goto	u4177
  2626  0A7D  0000               	nop
  2627  0A7E  0020               	movlb	0	; select bank0
  2628  0A7F  0ACC               	incf	main@i,f
  2629  0A80  1903               	skipnz
  2630  0A81  0ACD               	incf	main@i+1,f
  2631  0A82  2A54               	goto	l3493
  2632  0A83                     l3509:	
  2633                           
  2634                           ;Multi_RX_testjig_v1.c: 613: }
  2635                           ;Multi_RX_testjig_v1.c: 614: if(i >= 10)
  2636  0A83  3000               	movlw	0
  2637  0A84  0020               	movlb	0	; select bank0
  2638  0A85  024D               	subwf	main@i+1,w
  2639  0A86  300A               	movlw	10
  2640  0A87  1903               	skipnz
  2641  0A88  024C               	subwf	main@i,w
  2642  0A89  1C03               	skipc
  2643  0A8A  2A95               	goto	l3513
  2644                           
  2645                           ;Multi_RX_testjig_v1.c: 615: print_error("Comms Error", " 1");
  2646  0A8B  300D               	movlw	low (STR_37| (0+32768))
  2647  0A8C  00F8               	movwf	print_error@top
  2648  0A8D  3092               	movlw	high (STR_37| (0+32768))
  2649  0A8E  00F9               	movwf	print_error@top+1
  2650  0A8F  3093               	movlw	low ((STR_46+6)| (0+32768))
  2651  0A90  00FA               	movwf	print_error@bottom
  2652  0A91  3092               	movlw	high ((STR_46+6)| (0+32768))
  2653  0A92  00FB               	movwf	print_error@bottom+1
  2654  0A93  2773  3188         	fcall	_print_error
  2655  0A95                     l3513:	
  2656                           
  2657                           ;Multi_RX_testjig_v1.c: 618: unsigned char RX_data = 0;
  2658  0A95  0020               	movlb	0	; select bank0
  2659  0A96  3010               	movlw	16
  2660  0A97  01CE               	clrf	main@RX_data
  2661                           
  2662                           ;Multi_RX_testjig_v1.c: 619: TX_one(0x10);
  2663  0A98  271B  3188         	fcall	_TX_one
  2664                           
  2665                           ;Multi_RX_testjig_v1.c: 620: RX_data = RX_one();
  2666  0A9A  273D  3188         	fcall	_RX_one
  2667  0A9C  0020               	movlb	0	; select bank0
  2668  0A9D  00CE               	movwf	main@RX_data
  2669                           
  2670                           ;Multi_RX_testjig_v1.c: 621: if(RX_data == 0xEE)
  2671  0A9E  3AEE               	xorlw	238
  2672  0A9F  1D03               	btfss	3,2
  2673  0AA0  2AA9               	goto	l3523
  2674                           
  2675                           ;Multi_RX_testjig_v1.c: 622: print_error("EEPROM error", " Read/Write");
  2676  0AA1  30A9               	movlw	low (STR_39| (0+32768))
  2677  0AA2  00F8               	movwf	print_error@top
  2678  0AA3  3091               	movlw	high (STR_39| (0+32768))
  2679  0AA4  00F9               	movwf	print_error@top+1
  2680  0AA5  30E9               	movlw	low (STR_40| (0+32768))
  2681  0AA6  00FA               	movwf	print_error@bottom
  2682  0AA7  3091               	movlw	high (STR_40| (0+32768))
  2683  0AA8  2AB4               	goto	L2
  2684  0AA9                     l3523:	
  2685                           
  2686                           ;Multi_RX_testjig_v1.c: 623: else if(RX_data != 0x1A)
  2687  0AA9  301A               	movlw	26
  2688  0AAA  064E               	xorwf	main@RX_data,w
  2689  0AAB  1903               	btfsc	3,2
  2690  0AAC  2AB7               	goto	l341
  2691                           
  2692                           ;Multi_RX_testjig_v1.c: 624: print_error("Comms Error", " 2");
  2693  0AAD  300D               	movlw	low (STR_37| (0+32768))
  2694  0AAE  00F8               	movwf	print_error@top
  2695  0AAF  3092               	movlw	high (STR_37| (0+32768))
  2696  0AB0  00F9               	movwf	print_error@top+1
  2697  0AB1  309C               	movlw	low ((STR_48+6)| (0+32768))
  2698  0AB2  00FA               	movwf	print_error@bottom
  2699  0AB3  3092               	movlw	high ((STR_48+6)| (0+32768))
  2700  0AB4                     L2:	
  2701  0AB4  00FB               	movwf	print_error@bottom+1
  2702  0AB5  2773  3188         	fcall	_print_error
  2703  0AB7                     l341:	
  2704                           
  2705                           ;Multi_RX_testjig_v1.c: 627: print_screen("Test EEPROM ", " size");
  2706  0AB7  305B               	movlw	low (STR_43| (0+32768))
  2707  0AB8  00F4               	movwf	print_screen@top
  2708  0AB9  3091               	movlw	high (STR_43| (0+32768))
  2709  0ABA  00F5               	movwf	print_screen@top+1
  2710  0ABB  30FB               	movlw	low ((STR_45+6)| (0+32768))
  2711  0ABC  00F6               	movwf	print_screen@bottom
  2712  0ABD  3091               	movlw	high ((STR_45+6)| (0+32768))
  2713  0ABE  00F7               	movwf	print_screen@bottom+1
  2714  0ABF  275D  3188         	fcall	_print_screen
  2715                           
  2716                           ;Multi_RX_testjig_v1.c: 628: TX_one(0x20);
  2717  0AC1  3020               	movlw	32
  2718  0AC2  271B  3188         	fcall	_TX_one
  2719                           
  2720                           ;Multi_RX_testjig_v1.c: 629: RX_data = RX_one();
  2721  0AC4  273D  3188         	fcall	_RX_one
  2722  0AC6  0020               	movlb	0	; select bank0
  2723  0AC7  00CE               	movwf	main@RX_data
  2724                           
  2725                           ;Multi_RX_testjig_v1.c: 630: if(RX_data != 0x20)
  2726  0AC8  3A20               	xorlw	32
  2727  0AC9  1903               	btfsc	3,2
  2728  0ACA  2AD5               	goto	l3535
  2729                           
  2730                           ;Multi_RX_testjig_v1.c: 631: print_error("EEPROM size", " Error 1");
  2731  0ACB  30F5               	movlw	low (STR_45| (0+32768))
  2732  0ACC  00F8               	movwf	print_error@top
  2733  0ACD  3091               	movlw	high (STR_45| (0+32768))
  2734  0ACE  00F9               	movwf	print_error@top+1
  2735  0ACF  308D               	movlw	low (STR_46| (0+32768))
  2736  0AD0  00FA               	movwf	print_error@bottom
  2737  0AD1  3092               	movlw	high (STR_46| (0+32768))
  2738  0AD2  00FB               	movwf	print_error@bottom+1
  2739  0AD3  2773  3188         	fcall	_print_error
  2740  0AD5                     l3535:	
  2741                           
  2742                           ;Multi_RX_testjig_v1.c: 632: TX_one(0x21);
  2743  0AD5  3021               	movlw	33
  2744  0AD6  271B  3188         	fcall	_TX_one
  2745                           
  2746                           ;Multi_RX_testjig_v1.c: 633: RX_data = RX_one();
  2747  0AD8  273D  3188         	fcall	_RX_one
  2748  0ADA  0020               	movlb	0	; select bank0
  2749  0ADB  00CE               	movwf	main@RX_data
  2750                           
  2751                           ;Multi_RX_testjig_v1.c: 634: if(RX_data != 0x00)
  2752  0ADC  084E               	movf	main@RX_data,w
  2753  0ADD  1903               	btfsc	3,2
  2754  0ADE  2AE8               	goto	l344
  2755                           
  2756                           ;Multi_RX_testjig_v1.c: 635: print_error("EEPROM size", " Error 2");
  2757  0ADF  30F5               	movlw	low (STR_45| (0+32768))
  2758  0AE0  00F8               	movwf	print_error@top
  2759  0AE1  3091               	movlw	high (STR_45| (0+32768))
  2760  0AE2  00F9               	movwf	print_error@top+1
  2761  0AE3  3096               	movlw	low (STR_48| (0+32768))
  2762  0AE4  00FA               	movwf	print_error@bottom
  2763  0AE5  3092               	movlw	high (STR_48| (0+32768))
  2764  0AE6  00FB               	movwf	print_error@bottom+1
  2765  0AE7  2773               	fcall	_print_error
  2766  0AE8                     l344:	
  2767                           
  2768                           ;Multi_RX_testjig_v1.c: 638: Vout_set(12);
  2769  0AE8  300C               	movlw	12
  2770  0AE9  00F4               	movwf	Vout_set@Volts
  2771  0AEA  01F5               	clrf	Vout_set@Volts+1
  2772  0AEB  3180  20A6  3188   	fcall	_Vout_set
  2773                           
  2774                           ;Multi_RX_testjig_v1.c: 639: print_screen("Test Relay", "");
  2775  0AEE  303B               	movlw	low (STR_49| (0+32768))
  2776  0AEF  00F4               	movwf	print_screen@top
  2777  0AF0  3092               	movlw	high (STR_49| (0+32768))
  2778  0AF1  00F5               	movwf	print_screen@top+1
  2779  0AF2  308A               	movlw	low ((STR_155+15)| (0+32768))
  2780  0AF3  00F6               	movwf	print_screen@bottom
  2781  0AF4  3090               	movlw	high ((STR_155+15)| (0+32768))
  2782  0AF5  00F7               	movwf	print_screen@bottom+1
  2783  0AF6  275D  3188         	fcall	_print_screen
  2784                           
  2785                           ;Multi_RX_testjig_v1.c: 640: if(RF5 == 0 && RF2 == 1)
  2786  0AF8  0025               	movlb	5	; select bank5
  2787  0AF9  1E8C               	btfss	12,5	;volatile
  2788  0AFA  1D0C               	btfss	12,2	;volatile
  2789  0AFB  2B5B               	goto	l3573
  2790                           
  2791                           ;Multi_RX_testjig_v1.c: 641: {
  2792                           ;Multi_RX_testjig_v1.c: 642: TX_one(0x30);
  2793  0AFC  3030               	movlw	48
  2794  0AFD  271B  3188         	fcall	_TX_one
  2795                           
  2796                           ;Multi_RX_testjig_v1.c: 643: if(RX_one() == 0x3A)
  2797  0AFF  273D  3188         	fcall	_RX_one
  2798  0B01  3A3A               	xorlw	58
  2799  0B02  1D03               	skipz
  2800  0B03  2B53               	goto	l3571
  2801                           
  2802                           ;Multi_RX_testjig_v1.c: 644: {
  2803                           ;Multi_RX_testjig_v1.c: 645: _delay((unsigned long)((50)*(16000000/4000.0)));
  2804  0B04  3002               	movlw	2
  2805  0B05  0020               	movlb	0	; select bank0
  2806  0B06  00CB               	movwf	??_main+2
  2807  0B07  3004               	movlw	4
  2808  0B08  00CA               	movwf	??_main+1
  2809  0B09  30BA               	movlw	186
  2810  0B0A  00C9               	movwf	??_main
  2811  0B0B                     u4187:	
  2812  0B0B  0BC9               	decfsz	??_main,f
  2813  0B0C  2B0B               	goto	u4187
  2814  0B0D  0BCA               	decfsz	??_main+1,f
  2815  0B0E  2B0B               	goto	u4187
  2816  0B0F  0BCB               	decfsz	??_main+2,f
  2817  0B10  2B0B               	goto	u4187
  2818  0B11  0000               	nop
  2819                           
  2820                           ;Multi_RX_testjig_v1.c: 646: if(RF5 == 1 && RF2 == 0)
  2821  0B12  0025               	movlb	5	; select bank5
  2822  0B13  1A8C               	btfsc	12,5	;volatile
  2823  0B14  190C               	btfsc	12,2	;volatile
  2824  0B15  2B4B               	goto	l3569
  2825                           
  2826                           ;Multi_RX_testjig_v1.c: 647: {
  2827                           ;Multi_RX_testjig_v1.c: 648: TX_one(0x31);
  2828  0B16  3031               	movlw	49
  2829  0B17  271B  3188         	fcall	_TX_one
  2830                           
  2831                           ;Multi_RX_testjig_v1.c: 649: if(RX_one() == 0x3A)
  2832  0B19  273D  3188         	fcall	_RX_one
  2833  0B1B  3A3A               	xorlw	58
  2834  0B1C  1D03               	skipz
  2835  0B1D  2B43               	goto	l3567
  2836                           
  2837                           ;Multi_RX_testjig_v1.c: 650: {
  2838                           ;Multi_RX_testjig_v1.c: 651: _delay((unsigned long)((50)*(16000000/4000.0)));
  2839  0B1E  3002               	movlw	2
  2840  0B1F  0020               	movlb	0	; select bank0
  2841  0B20  00CB               	movwf	??_main+2
  2842  0B21  3004               	movlw	4
  2843  0B22  00CA               	movwf	??_main+1
  2844  0B23  30BA               	movlw	186
  2845  0B24  00C9               	movwf	??_main
  2846  0B25                     u4197:	
  2847  0B25  0BC9               	decfsz	??_main,f
  2848  0B26  2B25               	goto	u4197
  2849  0B27  0BCA               	decfsz	??_main+1,f
  2850  0B28  2B25               	goto	u4197
  2851  0B29  0BCB               	decfsz	??_main+2,f
  2852  0B2A  2B25               	goto	u4197
  2853  0B2B  0000               	nop
  2854                           
  2855                           ;Multi_RX_testjig_v1.c: 652: if(RF5 == 0 && RF2 == 1)
  2856  0B2C  0025               	movlb	5	; select bank5
  2857  0B2D  1E8C               	btfss	12,5	;volatile
  2858  0B2E  1D0C               	btfss	12,2	;volatile
  2859  0B2F  2B3B               	goto	l3565
  2860                           
  2861                           ;Multi_RX_testjig_v1.c: 653: {
  2862                           ;Multi_RX_testjig_v1.c: 654: print_screen("Test Relay", "Pass");
  2863  0B30  303B               	movlw	low (STR_49| (0+32768))
  2864  0B31  00F4               	movwf	print_screen@top
  2865  0B32  3092               	movlw	high (STR_49| (0+32768))
  2866  0B33  00F5               	movwf	print_screen@top+1
  2867  0B34  30BE               	movlw	low ((STR_159+8)| (0+32768))
  2868  0B35  00F6               	movwf	print_screen@bottom
  2869  0B36  3091               	movlw	high ((STR_159+8)| (0+32768))
  2870  0B37  00F7               	movwf	print_screen@bottom+1
  2871  0B38  275D  3188         	fcall	_print_screen
  2872                           
  2873                           ;Multi_RX_testjig_v1.c: 655: }
  2874  0B3A  2B64               	goto	l354
  2875  0B3B                     l3565:	
  2876                           
  2877                           ;Multi_RX_testjig_v1.c: 656: else
  2878                           ;Multi_RX_testjig_v1.c: 657: print_error("Relay de-energized", " Error 2");
  2879  0B3B  3000               	movlw	low (STR_53| (0+32768))
  2880  0B3C  00F8               	movwf	print_error@top
  2881  0B3D  3090               	movlw	high (STR_53| (0+32768))
  2882  0B3E  00F9               	movwf	print_error@top+1
  2883  0B3F  3096               	movlw	low (STR_48| (0+32768))
  2884  0B40  00FA               	movwf	print_error@bottom
  2885  0B41  3092               	movlw	high (STR_48| (0+32768))
  2886  0B42  2B62               	goto	L3
  2887  0B43                     l3567:	
  2888                           
  2889                           ;Multi_RX_testjig_v1.c: 659: else
  2890                           ;Multi_RX_testjig_v1.c: 660: print_error("Comms Error", " 3");
  2891  0B43  300D               	movlw	low (STR_37| (0+32768))
  2892  0B44  00F8               	movwf	print_error@top
  2893  0B45  3092               	movlw	high (STR_37| (0+32768))
  2894  0B46  00F9               	movwf	print_error@top+1
  2895  0B47  301E               	movlw	low (STR_56| (0+32768))
  2896  0B48  00FA               	movwf	print_error@bottom
  2897  0B49  3093               	movlw	high (STR_56| (0+32768))
  2898  0B4A  2B62               	goto	L3
  2899  0B4B                     l3569:	
  2900                           
  2901                           ;Multi_RX_testjig_v1.c: 662: else
  2902                           ;Multi_RX_testjig_v1.c: 663: print_error("Relay energized", " Error");
  2903  0B4B  309B               	movlw	low (STR_57| (0+32768))
  2904  0B4C  00F8               	movwf	print_error@top
  2905  0B4D  3090               	movlw	high (STR_57| (0+32768))
  2906  0B4E  00F9               	movwf	print_error@top+1
  2907  0B4F  3029               	movlw	low ((STR_12+4)| (0+32768))
  2908  0B50  00FA               	movwf	print_error@bottom
  2909  0B51  3092               	movlw	high ((STR_12+4)| (0+32768))
  2910  0B52  2B62               	goto	L3
  2911  0B53                     l3571:	
  2912                           
  2913                           ;Multi_RX_testjig_v1.c: 665: else
  2914                           ;Multi_RX_testjig_v1.c: 666: print_error("Comms Error", " 4");
  2915  0B53  300D               	movlw	low (STR_37| (0+32768))
  2916  0B54  00F8               	movwf	print_error@top
  2917  0B55  3092               	movlw	high (STR_37| (0+32768))
  2918  0B56  00F9               	movwf	print_error@top+1
  2919  0B57  3021               	movlw	low (STR_60| (0+32768))
  2920  0B58  00FA               	movwf	print_error@bottom
  2921  0B59  3093               	movlw	high (STR_60| (0+32768))
  2922  0B5A  2B62               	goto	L3
  2923  0B5B                     l3573:	
  2924                           
  2925                           ;Multi_RX_testjig_v1.c: 668: else
  2926                           ;Multi_RX_testjig_v1.c: 669: print_error("Relay de-energized", " Error 1");
  2927  0B5B  3000               	movlw	low (STR_53| (0+32768))
  2928  0B5C  00F8               	movwf	print_error@top
  2929  0B5D  3090               	movlw	high (STR_53| (0+32768))
  2930  0B5E  00F9               	movwf	print_error@top+1
  2931  0B5F  308D               	movlw	low (STR_46| (0+32768))
  2932  0B60  00FA               	movwf	print_error@bottom
  2933  0B61  3092               	movlw	high (STR_46| (0+32768))
  2934  0B62                     L3:	
  2935  0B62  00FB               	movwf	print_error@bottom+1
  2936  0B63  2773               	fcall	_print_error
  2937  0B64                     l354:	
  2938                           
  2939                           ;Multi_RX_testjig_v1.c: 672: Vout_set(15);
  2940  0B64  300F               	movlw	15
  2941  0B65  00F4               	movwf	Vout_set@Volts
  2942  0B66  01F5               	clrf	Vout_set@Volts+1
  2943  0B67  3180  20A6  3188   	fcall	_Vout_set
  2944                           
  2945                           ;Multi_RX_testjig_v1.c: 673: print_screen("Test CH2", "");
  2946  0B6A  309F               	movlw	low (STR_63| (0+32768))
  2947  0B6B  00F4               	movwf	print_screen@top
  2948  0B6C  3092               	movlw	high (STR_63| (0+32768))
  2949  0B6D  00F5               	movwf	print_screen@top+1
  2950  0B6E  308A               	movlw	low ((STR_155+15)| (0+32768))
  2951  0B6F  00F6               	movwf	print_screen@bottom
  2952  0B70  3090               	movlw	high ((STR_155+15)| (0+32768))
  2953  0B71  00F7               	movwf	print_screen@bottom+1
  2954  0B72  275D  3188         	fcall	_print_screen
  2955                           
  2956                           ;Multi_RX_testjig_v1.c: 674: TX_one(0x41);
  2957  0B74  3041               	movlw	65
  2958  0B75  271B  3188         	fcall	_TX_one
  2959                           
  2960                           ;Multi_RX_testjig_v1.c: 675: if(RX_one() == 0x4A)
  2961  0B77  273D  3188         	fcall	_RX_one
  2962  0B79  3A4A               	xorlw	74
  2963  0B7A  1D03               	skipz
  2964  0B7B  2C74               	goto	l3657
  2965                           
  2966                           ;Multi_RX_testjig_v1.c: 676: {
  2967                           ;Multi_RX_testjig_v1.c: 677: _delay((unsigned long)((10)*(16000000/4000.0)));
  2968  0B7C  3034               	movlw	52
  2969  0B7D  0020               	movlb	0	; select bank0
  2970  0B7E  00CA               	movwf	??_main+1
  2971  0B7F  30F1               	movlw	241
  2972  0B80  00C9               	movwf	??_main
  2973  0B81                     u4207:	
  2974  0B81  0BC9               	decfsz	??_main,f
  2975  0B82  2B81               	goto	u4207
  2976  0B83  0BCA               	decfsz	??_main+1,f
  2977  0B84  2B81               	goto	u4207
  2978  0B85  3200               	nop2
  2979                           
  2980                           ;Multi_RX_testjig_v1.c: 678: if(RF1 == 1 && RF0 == 1)
  2981  0B86  0025               	movlb	5	; select bank5
  2982  0B87  188C               	btfsc	12,1	;volatile
  2983  0B88  1C0C               	btfss	12,0	;volatile
  2984  0B89  2C6C               	goto	l3655
  2985                           
  2986                           ;Multi_RX_testjig_v1.c: 679: {
  2987                           ;Multi_RX_testjig_v1.c: 680: TX_one(0x40);
  2988  0B8A  3040               	movlw	64
  2989  0B8B  271B  3188         	fcall	_TX_one
  2990                           
  2991                           ;Multi_RX_testjig_v1.c: 681: if(RX_one() == 0x4A)
  2992  0B8D  273D  3188         	fcall	_RX_one
  2993  0B8F  3A4A               	xorlw	74
  2994  0B90  1D03               	skipz
  2995  0B91  2C64               	goto	l3653
  2996                           
  2997                           ;Multi_RX_testjig_v1.c: 682: {
  2998                           ;Multi_RX_testjig_v1.c: 683: _delay((unsigned long)((10)*(16000000/4000.0)));
  2999  0B92  3034               	movlw	52
  3000  0B93  0020               	movlb	0	; select bank0
  3001  0B94  00CA               	movwf	??_main+1
  3002  0B95  30F1               	movlw	241
  3003  0B96  00C9               	movwf	??_main
  3004  0B97                     u4217:	
  3005  0B97  0BC9               	decfsz	??_main,f
  3006  0B98  2B97               	goto	u4217
  3007  0B99  0BCA               	decfsz	??_main+1,f
  3008  0B9A  2B97               	goto	u4217
  3009  0B9B  3200               	nop2
  3010                           
  3011                           ;Multi_RX_testjig_v1.c: 684: if(RF1 == 0 && RF0 == 1)
  3012  0B9C  0025               	movlb	5	; select bank5
  3013  0B9D  1C8C               	btfss	12,1	;volatile
  3014  0B9E  1C0C               	btfss	12,0	;volatile
  3015  0B9F  2C5C               	goto	l3651
  3016                           
  3017                           ;Multi_RX_testjig_v1.c: 685: {
  3018                           ;Multi_RX_testjig_v1.c: 686: TX_one(0x41);
  3019  0BA0  3041               	movlw	65
  3020  0BA1  271B  3188         	fcall	_TX_one
  3021                           
  3022                           ;Multi_RX_testjig_v1.c: 687: if(RX_one() == 0x4A)
  3023  0BA3  273D  3188         	fcall	_RX_one
  3024  0BA5  3A4A               	xorlw	74
  3025  0BA6  1D03               	skipz
  3026  0BA7  2C54               	goto	l3649
  3027                           
  3028                           ;Multi_RX_testjig_v1.c: 688: {
  3029                           ;Multi_RX_testjig_v1.c: 689: LATB5 = 1;
  3030  0BA8  0022               	movlb	2	; select bank2
  3031  0BA9  168D               	bsf	13,5	;volatile
  3032                           
  3033                           ;Multi_RX_testjig_v1.c: 690: _delay((unsigned long)((50)*(16000000/4000.0)));
  3034  0BAA  3002               	movlw	2
  3035  0BAB  0020               	movlb	0	; select bank0
  3036  0BAC  00CB               	movwf	??_main+2
  3037  0BAD  3004               	movlw	4
  3038  0BAE  00CA               	movwf	??_main+1
  3039  0BAF  30BA               	movlw	186
  3040  0BB0  00C9               	movwf	??_main
  3041  0BB1                     u4227:	
  3042  0BB1  0BC9               	decfsz	??_main,f
  3043  0BB2  2BB1               	goto	u4227
  3044  0BB3  0BCA               	decfsz	??_main+1,f
  3045  0BB4  2BB1               	goto	u4227
  3046  0BB5  0BCB               	decfsz	??_main+2,f
  3047  0BB6  2BB1               	goto	u4227
  3048  0BB7  0000               	nop
  3049                           
  3050                           ;Multi_RX_testjig_v1.c: 691: TX_one(0x40);
  3051  0BB8  3040               	movlw	64
  3052  0BB9  271B  3188         	fcall	_TX_one
  3053                           
  3054                           ;Multi_RX_testjig_v1.c: 692: if(RX_one() == 0x4A)
  3055  0BBB  273D  3188         	fcall	_RX_one
  3056  0BBD  3A4A               	xorlw	74
  3057  0BBE  1D03               	skipz
  3058  0BBF  2C4C               	goto	l3647
  3059                           
  3060                           ;Multi_RX_testjig_v1.c: 693: {
  3061                           ;Multi_RX_testjig_v1.c: 694: _delay((unsigned long)((50)*(16000000/4000.0)));
  3062  0BC0  3002               	movlw	2
  3063  0BC1  0020               	movlb	0	; select bank0
  3064  0BC2  00CB               	movwf	??_main+2
  3065  0BC3  3004               	movlw	4
  3066  0BC4  00CA               	movwf	??_main+1
  3067  0BC5  30BA               	movlw	186
  3068  0BC6  00C9               	movwf	??_main
  3069  0BC7                     u4237:	
  3070  0BC7  0BC9               	decfsz	??_main,f
  3071  0BC8  2BC7               	goto	u4237
  3072  0BC9  0BCA               	decfsz	??_main+1,f
  3073  0BCA  2BC7               	goto	u4237
  3074  0BCB  0BCB               	decfsz	??_main+2,f
  3075  0BCC  2BC7               	goto	u4237
  3076  0BCD  0000               	nop
  3077                           
  3078                           ;Multi_RX_testjig_v1.c: 695: tj_timer = 1500;
  3079  0BCE  30DC               	movlw	220
  3080  0BCF  0020               	movlb	0	; select bank0
  3081  0BD0  00DD               	movwf	_tj_timer
  3082  0BD1  3005               	movlw	5
  3083  0BD2  00DE               	movwf	_tj_timer+1
  3084  0BD3  2BD7               	goto	l3605
  3085  0BD4                     l3607:	
  3086  0BD4  0025               	movlb	5	; select bank5
  3087  0BD5  188C               	btfsc	12,1	;volatile
  3088  0BD6  2BDC               	goto	l365
  3089  0BD7                     l3605:	
  3090                           ;Multi_RX_testjig_v1.c: 696: while(tj_timer && RF1 == 0);
  3091                           
  3092  0BD7  0020               	movlb	0	; select bank0
  3093  0BD8  085D               	movf	_tj_timer,w
  3094  0BD9  045E               	iorwf	_tj_timer+1,w
  3095  0BDA  1D03               	btfss	3,2
  3096  0BDB  2BD4               	goto	l3607
  3097  0BDC                     l365:	
  3098                           
  3099                           ;Multi_RX_testjig_v1.c: 697: if(RF1 == 1 && RF0 == 1)
  3100  0BDC  0025               	movlb	5	; select bank5
  3101  0BDD  188C               	btfsc	12,1	;volatile
  3102  0BDE  1C0C               	btfss	12,0	;volatile
  3103  0BDF  2C41               	goto	l3643
  3104                           
  3105                           ;Multi_RX_testjig_v1.c: 698: {
  3106                           ;Multi_RX_testjig_v1.c: 699: LATB5 = 0;
  3107  0BE0  0022               	movlb	2	; select bank2
  3108  0BE1  128D               	bcf	13,5	;volatile
  3109                           
  3110                           ;Multi_RX_testjig_v1.c: 700: TX_one(0x41);
  3111  0BE2  3041               	movlw	65
  3112  0BE3  271B  3188         	fcall	_TX_one
  3113                           
  3114                           ;Multi_RX_testjig_v1.c: 701: RX_one();
  3115  0BE5  273D  3188         	fcall	_RX_one
  3116                           
  3117                           ;Multi_RX_testjig_v1.c: 702: _delay((unsigned long)((150)*(16000000/4000.0)));
  3118  0BE7  3004               	movlw	4
  3119  0BE8  0020               	movlb	0	; select bank0
  3120  0BE9  00CB               	movwf	??_main+2
  3121  0BEA  300C               	movlw	12
  3122  0BEB  00CA               	movwf	??_main+1
  3123  0BEC  3035               	movlw	53
  3124  0BED  00C9               	movwf	??_main
  3125  0BEE                     u4247:	
  3126  0BEE  0BC9               	decfsz	??_main,f
  3127  0BEF  2BEE               	goto	u4247
  3128  0BF0  0BCA               	decfsz	??_main+1,f
  3129  0BF1  2BEE               	goto	u4247
  3130  0BF2  0BCB               	decfsz	??_main+2,f
  3131  0BF3  2BEE               	goto	u4247
  3132  0BF4  3200               	nop2
  3133                           
  3134                           ;Multi_RX_testjig_v1.c: 703: TX_one(0x40);
  3135  0BF5  3040               	movlw	64
  3136  0BF6  271B  3188         	fcall	_TX_one
  3137                           
  3138                           ;Multi_RX_testjig_v1.c: 704: RX_one();
  3139  0BF8  273D  3188         	fcall	_RX_one
  3140                           
  3141                           ;Multi_RX_testjig_v1.c: 705: _delay((unsigned long)((20)*(16000000/4000.0)));
  3142  0BFA  3068               	movlw	104
  3143  0BFB  0020               	movlb	0	; select bank0
  3144  0BFC  00CA               	movwf	??_main+1
  3145  0BFD  30E4               	movlw	228
  3146  0BFE  00C9               	movwf	??_main
  3147  0BFF                     u4257:	
  3148  0BFF  0BC9               	decfsz	??_main,f
  3149  0C00  2BFF               	goto	u4257
  3150  0C01  0BCA               	decfsz	??_main+1,f
  3151  0C02  2BFF               	goto	u4257
  3152  0C03  0000               	nop
  3153                           
  3154                           ;Multi_RX_testjig_v1.c: 706: if(RF1 == 0 && RF0 == 1)
  3155  0C04  0025               	movlb	5	; select bank5
  3156  0C05  1C8C               	btfss	12,1	;volatile
  3157  0C06  1C0C               	btfss	12,0	;volatile
  3158  0C07  2C39               	goto	l3641
  3159                           
  3160                           ;Multi_RX_testjig_v1.c: 707: {
  3161                           ;Multi_RX_testjig_v1.c: 708: TX_one(0x41);
  3162  0C08  3041               	movlw	65
  3163  0C09  271B  3188         	fcall	_TX_one
  3164                           
  3165                           ;Multi_RX_testjig_v1.c: 709: if(RX_one() == 0x4A)
  3166  0C0B  273D  3188         	fcall	_RX_one
  3167  0C0D  3A4A               	xorlw	74
  3168  0C0E  1D03               	skipz
  3169  0C0F  2C31               	goto	l3639
  3170                           
  3171                           ;Multi_RX_testjig_v1.c: 710: {
  3172                           ;Multi_RX_testjig_v1.c: 711: _delay((unsigned long)((10)*(16000000/4000.0)));
  3173  0C10  3034               	movlw	52
  3174  0C11  0020               	movlb	0	; select bank0
  3175  0C12  00CA               	movwf	??_main+1
  3176  0C13  30F1               	movlw	241
  3177  0C14  00C9               	movwf	??_main
  3178  0C15                     u4267:	
  3179  0C15  0BC9               	decfsz	??_main,f
  3180  0C16  2C15               	goto	u4267
  3181  0C17  0BCA               	decfsz	??_main+1,f
  3182  0C18  2C15               	goto	u4267
  3183  0C19  3200               	nop2
  3184                           
  3185                           ;Multi_RX_testjig_v1.c: 712: if(RF1 == 1 && RF0 == 1)
  3186  0C1A  0025               	movlb	5	; select bank5
  3187  0C1B  188C               	btfsc	12,1	;volatile
  3188  0C1C  1C0C               	btfss	12,0	;volatile
  3189  0C1D  2C29               	goto	l3637
  3190                           
  3191                           ;Multi_RX_testjig_v1.c: 713: {
  3192                           ;Multi_RX_testjig_v1.c: 714: print_screen("Test CH2", "ok");
  3193  0C1E  309F               	movlw	low (STR_63| (0+32768))
  3194  0C1F  00F4               	movwf	print_screen@top
  3195  0C20  3092               	movlw	high (STR_63| (0+32768))
  3196  0C21  00F5               	movwf	print_screen@top+1
  3197  0C22  3033               	movlw	low (STR_66| (0+32768))
  3198  0C23  00F6               	movwf	print_screen@bottom
  3199  0C24  3093               	movlw	high (STR_66| (0+32768))
  3200  0C25  00F7               	movwf	print_screen@bottom+1
  3201  0C26  275D  3188         	fcall	_print_screen
  3202                           
  3203                           ;Multi_RX_testjig_v1.c: 715: }
  3204  0C28  2C7E               	goto	l379
  3205  0C29                     l3637:	
  3206                           
  3207                           ;Multi_RX_testjig_v1.c: 716: else
  3208                           ;Multi_RX_testjig_v1.c: 717: print_error("CH2 - OFF", " Error 2");
  3209  0C29  3065               	movlw	low (STR_67| (0+32768))
  3210  0C2A  00F8               	movwf	print_error@top
  3211  0C2B  3092               	movlw	high (STR_67| (0+32768))
  3212  0C2C  00F9               	movwf	print_error@top+1
  3213  0C2D  3096               	movlw	low (STR_48| (0+32768))
  3214  0C2E  00FA               	movwf	print_error@bottom
  3215  0C2F  3092               	movlw	high (STR_48| (0+32768))
  3216  0C30  2C7B               	goto	L4
  3217  0C31                     l3639:	
  3218                           
  3219                           ;Multi_RX_testjig_v1.c: 719: else
  3220                           ;Multi_RX_testjig_v1.c: 720: print_error("Comms Error", " 5");
  3221  0C31  300D               	movlw	low (STR_37| (0+32768))
  3222  0C32  00F8               	movwf	print_error@top
  3223  0C33  3092               	movlw	high (STR_37| (0+32768))
  3224  0C34  00F9               	movwf	print_error@top+1
  3225  0C35  3024               	movlw	low (STR_70| (0+32768))
  3226  0C36  00FA               	movwf	print_error@bottom
  3227  0C37  3093               	movlw	high (STR_70| (0+32768))
  3228  0C38  2C7B               	goto	L4
  3229  0C39                     l3641:	
  3230                           
  3231                           ;Multi_RX_testjig_v1.c: 722: else
  3232                           ;Multi_RX_testjig_v1.c: 723: print_error("CH2 - ON", "PTC Error reset");
  3233  0C39  30BA               	movlw	low (STR_71| (0+32768))
  3234  0C3A  00F8               	movwf	print_error@top
  3235  0C3B  3092               	movlw	high (STR_71| (0+32768))
  3236  0C3C  00F9               	movwf	print_error@top+1
  3237  0C3D  30BB               	movlw	low (STR_72| (0+32768))
  3238  0C3E  00FA               	movwf	print_error@bottom
  3239  0C3F  3090               	movlw	high (STR_72| (0+32768))
  3240  0C40  2C7B               	goto	L4
  3241  0C41                     l3643:	
  3242                           
  3243                           ;Multi_RX_testjig_v1.c: 725: else
  3244                           ;Multi_RX_testjig_v1.c: 726: {
  3245                           ;Multi_RX_testjig_v1.c: 727: trip_current = get_30v_current();
  3246  0C41  3183  2317  3188   	fcall	_get_30v_current
  3247                           
  3248                           ;Multi_RX_testjig_v1.c: 728: print_error("CH2 - ON", "PTC Error trip");
  3249  0C44  30BA               	movlw	low (STR_71| (0+32768))
  3250  0C45  00F8               	movwf	print_error@top
  3251  0C46  3092               	movlw	high (STR_71| (0+32768))
  3252  0C47  00F9               	movwf	print_error@top+1
  3253  0C48  30E9               	movlw	low (STR_74| (0+32768))
  3254  0C49  00FA               	movwf	print_error@bottom
  3255  0C4A  3090               	movlw	high (STR_74| (0+32768))
  3256  0C4B  2C7B               	goto	L4
  3257  0C4C                     l3647:	
  3258                           
  3259                           ;Multi_RX_testjig_v1.c: 731: else
  3260                           ;Multi_RX_testjig_v1.c: 732: print_error("Comms Error", " 6a");
  3261  0C4C  300D               	movlw	low (STR_37| (0+32768))
  3262  0C4D  00F8               	movwf	print_error@top
  3263  0C4E  3092               	movlw	high (STR_37| (0+32768))
  3264  0C4F  00F9               	movwf	print_error@top+1
  3265  0C50  300E               	movlw	low (STR_76| (0+32768))
  3266  0C51  00FA               	movwf	print_error@bottom
  3267  0C52  3093               	movlw	high (STR_76| (0+32768))
  3268  0C53  2C7B               	goto	L4
  3269  0C54                     l3649:	
  3270                           
  3271                           ;Multi_RX_testjig_v1.c: 734: else
  3272                           ;Multi_RX_testjig_v1.c: 735: print_error("Comms Error", " 6b");
  3273  0C54  300D               	movlw	low (STR_37| (0+32768))
  3274  0C55  00F8               	movwf	print_error@top
  3275  0C56  3092               	movlw	high (STR_37| (0+32768))
  3276  0C57  00F9               	movwf	print_error@top+1
  3277  0C58  3016               	movlw	low (STR_78| (0+32768))
  3278  0C59  00FA               	movwf	print_error@bottom
  3279  0C5A  3093               	movlw	high (STR_78| (0+32768))
  3280  0C5B  2C7B               	goto	L4
  3281  0C5C                     l3651:	
  3282                           
  3283                           ;Multi_RX_testjig_v1.c: 737: else
  3284                           ;Multi_RX_testjig_v1.c: 738: print_error("CH2 - ON", " Error");
  3285  0C5C  30BA               	movlw	low (STR_71| (0+32768))
  3286  0C5D  00F8               	movwf	print_error@top
  3287  0C5E  3092               	movlw	high (STR_71| (0+32768))
  3288  0C5F  00F9               	movwf	print_error@top+1
  3289  0C60  3029               	movlw	low ((STR_12+4)| (0+32768))
  3290  0C61  00FA               	movwf	print_error@bottom
  3291  0C62  3092               	movlw	high ((STR_12+4)| (0+32768))
  3292  0C63  2C7B               	goto	L4
  3293  0C64                     l3653:	
  3294                           
  3295                           ;Multi_RX_testjig_v1.c: 740: else
  3296                           ;Multi_RX_testjig_v1.c: 741: print_error("Comms Error", " 6");
  3297  0C64  300D               	movlw	low (STR_37| (0+32768))
  3298  0C65  00F8               	movwf	print_error@top
  3299  0C66  3092               	movlw	high (STR_37| (0+32768))
  3300  0C67  00F9               	movwf	print_error@top+1
  3301  0C68  3027               	movlw	low (STR_82| (0+32768))
  3302  0C69  00FA               	movwf	print_error@bottom
  3303  0C6A  3093               	movlw	high (STR_82| (0+32768))
  3304  0C6B  2C7B               	goto	L4
  3305  0C6C                     l3655:	
  3306                           
  3307                           ;Multi_RX_testjig_v1.c: 743: else
  3308                           ;Multi_RX_testjig_v1.c: 744: print_error("CH2 - OFF", " Error 1");
  3309  0C6C  3065               	movlw	low (STR_67| (0+32768))
  3310  0C6D  00F8               	movwf	print_error@top
  3311  0C6E  3092               	movlw	high (STR_67| (0+32768))
  3312  0C6F  00F9               	movwf	print_error@top+1
  3313  0C70  308D               	movlw	low (STR_46| (0+32768))
  3314  0C71  00FA               	movwf	print_error@bottom
  3315  0C72  3092               	movlw	high (STR_46| (0+32768))
  3316  0C73  2C7B               	goto	L4
  3317  0C74                     l3657:	
  3318                           
  3319                           ;Multi_RX_testjig_v1.c: 746: else
  3320                           ;Multi_RX_testjig_v1.c: 747: print_error("Comms Error", " 7");
  3321  0C74  300D               	movlw	low (STR_37| (0+32768))
  3322  0C75  00F8               	movwf	print_error@top
  3323  0C76  3092               	movlw	high (STR_37| (0+32768))
  3324  0C77  00F9               	movwf	print_error@top+1
  3325  0C78  302A               	movlw	low (STR_86| (0+32768))
  3326  0C79  00FA               	movwf	print_error@bottom
  3327  0C7A  3093               	movlw	high (STR_86| (0+32768))
  3328  0C7B                     L4:	
  3329  0C7B  00FB               	movwf	print_error@bottom+1
  3330  0C7C  2773  3188         	fcall	_print_error
  3331  0C7E                     l379:	
  3332                           
  3333                           ;Multi_RX_testjig_v1.c: 751: print_screen("Test CH3", "");
  3334  0C7E  30A8               	movlw	low (STR_87| (0+32768))
  3335  0C7F  00F4               	movwf	print_screen@top
  3336  0C80  3092               	movlw	high (STR_87| (0+32768))
  3337  0C81  00F5               	movwf	print_screen@top+1
  3338  0C82  308A               	movlw	low ((STR_155+15)| (0+32768))
  3339  0C83  00F6               	movwf	print_screen@bottom
  3340  0C84  3090               	movlw	high ((STR_155+15)| (0+32768))
  3341  0C85  00F7               	movwf	print_screen@bottom+1
  3342  0C86  275D  3188         	fcall	_print_screen
  3343                           
  3344                           ;Multi_RX_testjig_v1.c: 752: TX_one(0x51);
  3345  0C88  3051               	movlw	81
  3346  0C89  271B  3188         	fcall	_TX_one
  3347                           
  3348                           ;Multi_RX_testjig_v1.c: 753: if(RX_one() == 0x5A)
  3349  0C8B  273D  3188         	fcall	_RX_one
  3350  0C8D  3A5A               	xorlw	90
  3351  0C8E  1D03               	skipz
  3352  0C8F  2D85               	goto	l3739
  3353                           
  3354                           ;Multi_RX_testjig_v1.c: 754: {
  3355                           ;Multi_RX_testjig_v1.c: 755: _delay((unsigned long)((10)*(16000000/4000.0)));
  3356  0C90  3034               	movlw	52
  3357  0C91  0020               	movlb	0	; select bank0
  3358  0C92  00CA               	movwf	??_main+1
  3359  0C93  30F1               	movlw	241
  3360  0C94  00C9               	movwf	??_main
  3361  0C95                     u4277:	
  3362  0C95  0BC9               	decfsz	??_main,f
  3363  0C96  2C95               	goto	u4277
  3364  0C97  0BCA               	decfsz	??_main+1,f
  3365  0C98  2C95               	goto	u4277
  3366  0C99  3200               	nop2
  3367                           
  3368                           ;Multi_RX_testjig_v1.c: 756: if(RF1 == 1 && RF0 == 1)
  3369  0C9A  0025               	movlb	5	; select bank5
  3370  0C9B  188C               	btfsc	12,1	;volatile
  3371  0C9C  1C0C               	btfss	12,0	;volatile
  3372  0C9D  2D7D               	goto	l3737
  3373                           
  3374                           ;Multi_RX_testjig_v1.c: 757: {
  3375                           ;Multi_RX_testjig_v1.c: 758: TX_one(0x50);
  3376  0C9E  3050               	movlw	80
  3377  0C9F  271B  3188         	fcall	_TX_one
  3378                           
  3379                           ;Multi_RX_testjig_v1.c: 759: if(RX_one() == 0x5A)
  3380  0CA1  273D  3188         	fcall	_RX_one
  3381  0CA3  3A5A               	xorlw	90
  3382  0CA4  1D03               	skipz
  3383  0CA5  2D75               	goto	l3735
  3384                           
  3385                           ;Multi_RX_testjig_v1.c: 760: {
  3386                           ;Multi_RX_testjig_v1.c: 761: _delay((unsigned long)((10)*(16000000/4000.0)));
  3387  0CA6  3034               	movlw	52
  3388  0CA7  0020               	movlb	0	; select bank0
  3389  0CA8  00CA               	movwf	??_main+1
  3390  0CA9  30F1               	movlw	241
  3391  0CAA  00C9               	movwf	??_main
  3392  0CAB                     u4287:	
  3393  0CAB  0BC9               	decfsz	??_main,f
  3394  0CAC  2CAB               	goto	u4287
  3395  0CAD  0BCA               	decfsz	??_main+1,f
  3396  0CAE  2CAB               	goto	u4287
  3397  0CAF  3200               	nop2
  3398                           
  3399                           ;Multi_RX_testjig_v1.c: 762: if(RF1 == 1 && RF0 == 0)
  3400  0CB0  0025               	movlb	5	; select bank5
  3401  0CB1  188C               	btfsc	12,1	;volatile
  3402  0CB2  180C               	btfsc	12,0	;volatile
  3403  0CB3  2D6D               	goto	l3733
  3404                           
  3405                           ;Multi_RX_testjig_v1.c: 763: {
  3406                           ;Multi_RX_testjig_v1.c: 764: TX_one(0x51);
  3407  0CB4  3051               	movlw	81
  3408  0CB5  271B  3188         	fcall	_TX_one
  3409                           
  3410                           ;Multi_RX_testjig_v1.c: 765: if(RX_one() == 0x5A)
  3411  0CB7  273D  3188         	fcall	_RX_one
  3412  0CB9  3A5A               	xorlw	90
  3413  0CBA  1D03               	skipz
  3414  0CBB  2D65               	goto	l3731
  3415                           
  3416                           ;Multi_RX_testjig_v1.c: 766: {
  3417                           ;Multi_RX_testjig_v1.c: 767: LATA6 = 1;
  3418  0CBC  0022               	movlb	2	; select bank2
  3419  0CBD  170C               	bsf	12,6	;volatile
  3420                           
  3421                           ;Multi_RX_testjig_v1.c: 768: _delay((unsigned long)((50)*(16000000/4000.0)));
  3422  0CBE  3002               	movlw	2
  3423  0CBF  0020               	movlb	0	; select bank0
  3424  0CC0  00CB               	movwf	??_main+2
  3425  0CC1  3004               	movlw	4
  3426  0CC2  00CA               	movwf	??_main+1
  3427  0CC3  30BA               	movlw	186
  3428  0CC4  00C9               	movwf	??_main
  3429  0CC5                     u4297:	
  3430  0CC5  0BC9               	decfsz	??_main,f
  3431  0CC6  2CC5               	goto	u4297
  3432  0CC7  0BCA               	decfsz	??_main+1,f
  3433  0CC8  2CC5               	goto	u4297
  3434  0CC9  0BCB               	decfsz	??_main+2,f
  3435  0CCA  2CC5               	goto	u4297
  3436  0CCB  0000               	nop
  3437                           
  3438                           ;Multi_RX_testjig_v1.c: 769: TX_one(0x50);
  3439  0CCC  3050               	movlw	80
  3440  0CCD  271B  3188         	fcall	_TX_one
  3441                           
  3442                           ;Multi_RX_testjig_v1.c: 770: if(RX_one() == 0x5A)
  3443  0CCF  273D  3188         	fcall	_RX_one
  3444  0CD1  3A5A               	xorlw	90
  3445  0CD2  1D03               	skipz
  3446  0CD3  2D5D               	goto	l3729
  3447                           
  3448                           ;Multi_RX_testjig_v1.c: 771: {
  3449                           ;Multi_RX_testjig_v1.c: 772: _delay((unsigned long)((50)*(16000000/4000.0)));
  3450  0CD4  3002               	movlw	2
  3451  0CD5  0020               	movlb	0	; select bank0
  3452  0CD6  00CB               	movwf	??_main+2
  3453  0CD7  3004               	movlw	4
  3454  0CD8  00CA               	movwf	??_main+1
  3455  0CD9  30BA               	movlw	186
  3456  0CDA  00C9               	movwf	??_main
  3457  0CDB                     u4307:	
  3458  0CDB  0BC9               	decfsz	??_main,f
  3459  0CDC  2CDB               	goto	u4307
  3460  0CDD  0BCA               	decfsz	??_main+1,f
  3461  0CDE  2CDB               	goto	u4307
  3462  0CDF  0BCB               	decfsz	??_main+2,f
  3463  0CE0  2CDB               	goto	u4307
  3464  0CE1  0000               	nop
  3465                           
  3466                           ;Multi_RX_testjig_v1.c: 773: tj_timer = 1500;
  3467  0CE2  30DC               	movlw	220
  3468  0CE3  0020               	movlb	0	; select bank0
  3469  0CE4  00DD               	movwf	_tj_timer
  3470  0CE5  3005               	movlw	5
  3471  0CE6  00DE               	movwf	_tj_timer+1
  3472  0CE7  2CEB               	goto	l3689
  3473  0CE8                     l3691:	
  3474  0CE8  0025               	movlb	5	; select bank5
  3475  0CE9  180C               	btfsc	12,0	;volatile
  3476  0CEA  2CF0               	goto	l390
  3477  0CEB                     l3689:	
  3478                           ;Multi_RX_testjig_v1.c: 774: while(tj_timer && RF0 == 0);
  3479                           
  3480  0CEB  0020               	movlb	0	; select bank0
  3481  0CEC  085D               	movf	_tj_timer,w
  3482  0CED  045E               	iorwf	_tj_timer+1,w
  3483  0CEE  1D03               	btfss	3,2
  3484  0CEF  2CE8               	goto	l3691
  3485  0CF0                     l390:	
  3486                           
  3487                           ;Multi_RX_testjig_v1.c: 775: if(RF1 == 1 && RF0 == 1)
  3488  0CF0  0025               	movlb	5	; select bank5
  3489  0CF1  188C               	btfsc	12,1	;volatile
  3490  0CF2  1C0C               	btfss	12,0	;volatile
  3491  0CF3  2D55               	goto	l3727
  3492                           
  3493                           ;Multi_RX_testjig_v1.c: 776: {
  3494                           ;Multi_RX_testjig_v1.c: 777: LATA6 = 0;
  3495  0CF4  0022               	movlb	2	; select bank2
  3496  0CF5  130C               	bcf	12,6	;volatile
  3497                           
  3498                           ;Multi_RX_testjig_v1.c: 778: TX_one(0x51);
  3499  0CF6  3051               	movlw	81
  3500  0CF7  271B  3188         	fcall	_TX_one
  3501                           
  3502                           ;Multi_RX_testjig_v1.c: 779: RX_one();
  3503  0CF9  273D  3188         	fcall	_RX_one
  3504                           
  3505                           ;Multi_RX_testjig_v1.c: 780: _delay((unsigned long)((150)*(16000000/4000.0)));
  3506  0CFB  3004               	movlw	4
  3507  0CFC  0020               	movlb	0	; select bank0
  3508  0CFD  00CB               	movwf	??_main+2
  3509  0CFE  300C               	movlw	12
  3510  0CFF  00CA               	movwf	??_main+1
  3511  0D00  3035               	movlw	53
  3512  0D01  00C9               	movwf	??_main
  3513  0D02                     u4317:	
  3514  0D02  0BC9               	decfsz	??_main,f
  3515  0D03  2D02               	goto	u4317
  3516  0D04  0BCA               	decfsz	??_main+1,f
  3517  0D05  2D02               	goto	u4317
  3518  0D06  0BCB               	decfsz	??_main+2,f
  3519  0D07  2D02               	goto	u4317
  3520  0D08  3200               	nop2
  3521                           
  3522                           ;Multi_RX_testjig_v1.c: 781: TX_one(0x50);
  3523  0D09  3050               	movlw	80
  3524  0D0A  271B  3188         	fcall	_TX_one
  3525                           
  3526                           ;Multi_RX_testjig_v1.c: 782: RX_one();
  3527  0D0C  273D  3188         	fcall	_RX_one
  3528                           
  3529                           ;Multi_RX_testjig_v1.c: 783: _delay((unsigned long)((20)*(16000000/4000.0)));
  3530  0D0E  3068               	movlw	104
  3531  0D0F  0020               	movlb	0	; select bank0
  3532  0D10  00CA               	movwf	??_main+1
  3533  0D11  30E4               	movlw	228
  3534  0D12  00C9               	movwf	??_main
  3535  0D13                     u4327:	
  3536  0D13  0BC9               	decfsz	??_main,f
  3537  0D14  2D13               	goto	u4327
  3538  0D15  0BCA               	decfsz	??_main+1,f
  3539  0D16  2D13               	goto	u4327
  3540  0D17  0000               	nop
  3541                           
  3542                           ;Multi_RX_testjig_v1.c: 784: if(RF1 == 1 && RF0 == 0)
  3543  0D18  0025               	movlb	5	; select bank5
  3544  0D19  188C               	btfsc	12,1	;volatile
  3545  0D1A  180C               	btfsc	12,0	;volatile
  3546  0D1B  2D4D               	goto	l3725
  3547                           
  3548                           ;Multi_RX_testjig_v1.c: 785: {
  3549                           ;Multi_RX_testjig_v1.c: 786: TX_one(0x51);
  3550  0D1C  3051               	movlw	81
  3551  0D1D  271B  3188         	fcall	_TX_one
  3552                           
  3553                           ;Multi_RX_testjig_v1.c: 787: if(RX_one() == 0x5A)
  3554  0D1F  273D  3188         	fcall	_RX_one
  3555  0D21  3A5A               	xorlw	90
  3556  0D22  1D03               	skipz
  3557  0D23  2D45               	goto	l3723
  3558                           
  3559                           ;Multi_RX_testjig_v1.c: 788: {
  3560                           ;Multi_RX_testjig_v1.c: 789: _delay((unsigned long)((10)*(16000000/4000.0)));
  3561  0D24  3034               	movlw	52
  3562  0D25  0020               	movlb	0	; select bank0
  3563  0D26  00CA               	movwf	??_main+1
  3564  0D27  30F1               	movlw	241
  3565  0D28  00C9               	movwf	??_main
  3566  0D29                     u4337:	
  3567  0D29  0BC9               	decfsz	??_main,f
  3568  0D2A  2D29               	goto	u4337
  3569  0D2B  0BCA               	decfsz	??_main+1,f
  3570  0D2C  2D29               	goto	u4337
  3571  0D2D  3200               	nop2
  3572                           
  3573                           ;Multi_RX_testjig_v1.c: 790: if(RF1 == 1 && RF0 == 1)
  3574  0D2E  0025               	movlb	5	; select bank5
  3575  0D2F  188C               	btfsc	12,1	;volatile
  3576  0D30  1C0C               	btfss	12,0	;volatile
  3577  0D31  2D3D               	goto	l3721
  3578                           
  3579                           ;Multi_RX_testjig_v1.c: 791: {
  3580                           ;Multi_RX_testjig_v1.c: 792: print_screen("Test CH3", "ok");
  3581  0D32  30A8               	movlw	low (STR_87| (0+32768))
  3582  0D33  00F4               	movwf	print_screen@top
  3583  0D34  3092               	movlw	high (STR_87| (0+32768))
  3584  0D35  00F5               	movwf	print_screen@top+1
  3585  0D36  3033               	movlw	low (STR_66| (0+32768))
  3586  0D37  00F6               	movwf	print_screen@bottom
  3587  0D38  3093               	movlw	high (STR_66| (0+32768))
  3588  0D39  00F7               	movwf	print_screen@bottom+1
  3589  0D3A  275D  3188         	fcall	_print_screen
  3590                           
  3591                           ;Multi_RX_testjig_v1.c: 793: }
  3592  0D3C  2D8F               	goto	l404
  3593  0D3D                     l3721:	
  3594                           
  3595                           ;Multi_RX_testjig_v1.c: 794: else
  3596                           ;Multi_RX_testjig_v1.c: 795: print_error("CH3 - OFF", " Error 2");
  3597  0D3D  306F               	movlw	low (STR_91| (0+32768))
  3598  0D3E  00F8               	movwf	print_error@top
  3599  0D3F  3092               	movlw	high (STR_91| (0+32768))
  3600  0D40  00F9               	movwf	print_error@top+1
  3601  0D41  3096               	movlw	low (STR_48| (0+32768))
  3602  0D42  00FA               	movwf	print_error@bottom
  3603  0D43  3092               	movlw	high (STR_48| (0+32768))
  3604  0D44  2D8C               	goto	L5
  3605  0D45                     l3723:	
  3606                           
  3607                           ;Multi_RX_testjig_v1.c: 797: else
  3608                           ;Multi_RX_testjig_v1.c: 798: print_error("Comms Error", " 8");
  3609  0D45  300D               	movlw	low (STR_37| (0+32768))
  3610  0D46  00F8               	movwf	print_error@top
  3611  0D47  3092               	movlw	high (STR_37| (0+32768))
  3612  0D48  00F9               	movwf	print_error@top+1
  3613  0D49  302D               	movlw	low (STR_94| (0+32768))
  3614  0D4A  00FA               	movwf	print_error@bottom
  3615  0D4B  3093               	movlw	high (STR_94| (0+32768))
  3616  0D4C  2D8C               	goto	L5
  3617  0D4D                     l3725:	
  3618                           
  3619                           ;Multi_RX_testjig_v1.c: 800: else
  3620                           ;Multi_RX_testjig_v1.c: 801: print_error("CH3 - ON", "PTC Error reset");
  3621  0D4D  30C3               	movlw	low (STR_95| (0+32768))
  3622  0D4E  00F8               	movwf	print_error@top
  3623  0D4F  3092               	movlw	high (STR_95| (0+32768))
  3624  0D50  00F9               	movwf	print_error@top+1
  3625  0D51  30BB               	movlw	low (STR_72| (0+32768))
  3626  0D52  00FA               	movwf	print_error@bottom
  3627  0D53  3090               	movlw	high (STR_72| (0+32768))
  3628  0D54  2D8C               	goto	L5
  3629  0D55                     l3727:	
  3630                           
  3631                           ;Multi_RX_testjig_v1.c: 803: else
  3632                           ;Multi_RX_testjig_v1.c: 804: print_error("CH3 - ON", "PTC Error trip");
  3633  0D55  30C3               	movlw	low (STR_95| (0+32768))
  3634  0D56  00F8               	movwf	print_error@top
  3635  0D57  3092               	movlw	high (STR_95| (0+32768))
  3636  0D58  00F9               	movwf	print_error@top+1
  3637  0D59  30E9               	movlw	low (STR_74| (0+32768))
  3638  0D5A  00FA               	movwf	print_error@bottom
  3639  0D5B  3090               	movlw	high (STR_74| (0+32768))
  3640  0D5C  2D8C               	goto	L5
  3641  0D5D                     l3729:	
  3642                           
  3643                           ;Multi_RX_testjig_v1.c: 806: else
  3644                           ;Multi_RX_testjig_v1.c: 807: print_error("Comms Error", " 8b");
  3645  0D5D  300D               	movlw	low (STR_37| (0+32768))
  3646  0D5E  00F8               	movwf	print_error@top
  3647  0D5F  3092               	movlw	high (STR_37| (0+32768))
  3648  0D60  00F9               	movwf	print_error@top+1
  3649  0D61  301A               	movlw	low (STR_100| (0+32768))
  3650  0D62  00FA               	movwf	print_error@bottom
  3651  0D63  3093               	movlw	high (STR_100| (0+32768))
  3652  0D64  2D8C               	goto	L5
  3653  0D65                     l3731:	
  3654                           
  3655                           ;Multi_RX_testjig_v1.c: 809: else
  3656                           ;Multi_RX_testjig_v1.c: 810: print_error("Comms Error", " 8a");
  3657  0D65  300D               	movlw	low (STR_37| (0+32768))
  3658  0D66  00F8               	movwf	print_error@top
  3659  0D67  3092               	movlw	high (STR_37| (0+32768))
  3660  0D68  00F9               	movwf	print_error@top+1
  3661  0D69  3012               	movlw	low (STR_102| (0+32768))
  3662  0D6A  00FA               	movwf	print_error@bottom
  3663  0D6B  3093               	movlw	high (STR_102| (0+32768))
  3664  0D6C  2D8C               	goto	L5
  3665  0D6D                     l3733:	
  3666                           
  3667                           ;Multi_RX_testjig_v1.c: 812: else
  3668                           ;Multi_RX_testjig_v1.c: 813: print_error("CH3 - ON", " Error");
  3669  0D6D  30C3               	movlw	low (STR_95| (0+32768))
  3670  0D6E  00F8               	movwf	print_error@top
  3671  0D6F  3092               	movlw	high (STR_95| (0+32768))
  3672  0D70  00F9               	movwf	print_error@top+1
  3673  0D71  3029               	movlw	low ((STR_12+4)| (0+32768))
  3674  0D72  00FA               	movwf	print_error@bottom
  3675  0D73  3092               	movlw	high ((STR_12+4)| (0+32768))
  3676  0D74  2D8C               	goto	L5
  3677  0D75                     l3735:	
  3678                           
  3679                           ;Multi_RX_testjig_v1.c: 815: else
  3680                           ;Multi_RX_testjig_v1.c: 816: print_error("Comms Error", " 9");
  3681  0D75  300D               	movlw	low (STR_37| (0+32768))
  3682  0D76  00F8               	movwf	print_error@top
  3683  0D77  3092               	movlw	high (STR_37| (0+32768))
  3684  0D78  00F9               	movwf	print_error@top+1
  3685  0D79  3030               	movlw	low (STR_106| (0+32768))
  3686  0D7A  00FA               	movwf	print_error@bottom
  3687  0D7B  3093               	movlw	high (STR_106| (0+32768))
  3688  0D7C  2D8C               	goto	L5
  3689  0D7D                     l3737:	
  3690                           
  3691                           ;Multi_RX_testjig_v1.c: 818: else
  3692                           ;Multi_RX_testjig_v1.c: 819: print_error("CH3 - OFF", " Error 1");
  3693  0D7D  306F               	movlw	low (STR_91| (0+32768))
  3694  0D7E  00F8               	movwf	print_error@top
  3695  0D7F  3092               	movlw	high (STR_91| (0+32768))
  3696  0D80  00F9               	movwf	print_error@top+1
  3697  0D81  308D               	movlw	low (STR_46| (0+32768))
  3698  0D82  00FA               	movwf	print_error@bottom
  3699  0D83  3092               	movlw	high (STR_46| (0+32768))
  3700  0D84  2D8C               	goto	L5
  3701  0D85                     l3739:	
  3702                           
  3703                           ;Multi_RX_testjig_v1.c: 821: else
  3704                           ;Multi_RX_testjig_v1.c: 822: print_error("Comms Error", " 10");
  3705  0D85  300D               	movlw	low (STR_37| (0+32768))
  3706  0D86  00F8               	movwf	print_error@top
  3707  0D87  3092               	movlw	high (STR_37| (0+32768))
  3708  0D88  00F9               	movwf	print_error@top+1
  3709  0D89  30EE               	movlw	low (STR_110| (0+32768))
  3710  0D8A  00FA               	movwf	print_error@bottom
  3711  0D8B  3092               	movlw	high (STR_110| (0+32768))
  3712  0D8C                     L5:	
  3713  0D8C  00FB               	movwf	print_error@bottom+1
  3714  0D8D  2773  3188         	fcall	_print_error
  3715  0D8F                     l404:	
  3716                           
  3717                           ;Multi_RX_testjig_v1.c: 825: print_screen("Test RF", "3v3");
  3718  0D8F  30E6               	movlw	low (STR_111| (0+32768))
  3719  0D90  00F4               	movwf	print_screen@top
  3720  0D91  3092               	movlw	high (STR_111| (0+32768))
  3721  0D92  00F5               	movwf	print_screen@top+1
  3722  0D93  30E5               	movlw	low ((STR_117+8)| (0+32768))
  3723  0D94  00F6               	movwf	print_screen@bottom
  3724  0D95  3091               	movlw	high ((STR_117+8)| (0+32768))
  3725  0D96  00F7               	movwf	print_screen@bottom+1
  3726  0D97  275D  3188         	fcall	_print_screen
  3727                           
  3728                           ;Multi_RX_testjig_v1.c: 826: TX_one(0x70);
  3729  0D99  3070               	movlw	112
  3730  0D9A  271B  3188         	fcall	_TX_one
  3731                           
  3732                           ;Multi_RX_testjig_v1.c: 827: RX_data = RX_one();
  3733  0D9C  273D  3188         	fcall	_RX_one
  3734  0D9E  0020               	movlb	0	; select bank0
  3735  0D9F  00CE               	movwf	main@RX_data
  3736                           
  3737                           ;Multi_RX_testjig_v1.c: 828: TX_one(0x70);
  3738  0DA0  3070               	movlw	112
  3739  0DA1  271B  3188         	fcall	_TX_one
  3740                           
  3741                           ;Multi_RX_testjig_v1.c: 829: RX_data = RX_one();
  3742  0DA3  273D  3188         	fcall	_RX_one
  3743  0DA5  0020               	movlb	0	; select bank0
  3744  0DA6  00CE               	movwf	main@RX_data
  3745                           
  3746                           ;Multi_RX_testjig_v1.c: 830: if(RX_data == 0)
  3747  0DA7  084E               	movf	main@RX_data,w
  3748  0DA8  1D03               	btfss	3,2
  3749  0DA9  2DB2               	goto	l3753
  3750                           
  3751                           ;Multi_RX_testjig_v1.c: 831: print_error("Comms Error", " 11");
  3752  0DAA  300D               	movlw	low (STR_37| (0+32768))
  3753  0DAB  00F8               	movwf	print_error@top
  3754  0DAC  3092               	movlw	high (STR_37| (0+32768))
  3755  0DAD  00F9               	movwf	print_error@top+1
  3756  0DAE  30F2               	movlw	low (STR_114| (0+32768))
  3757  0DAF  00FA               	movwf	print_error@bottom
  3758  0DB0  3092               	movlw	high (STR_114| (0+32768))
  3759  0DB1  2DE0               	goto	L9
  3760  0DB2                     l3753:	
  3761                           
  3762                           ;Multi_RX_testjig_v1.c: 832: else if(RX_data == 0xFF)
  3763  0DB2  0A4E               	incf	main@RX_data,w
  3764  0DB3  1D03               	btfss	3,2
  3765  0DB4  2DBD               	goto	l3757
  3766                           
  3767                           ;Multi_RX_testjig_v1.c: 833: print_error("Comms Error", " 12");
  3768  0DB5  300D               	movlw	low (STR_37| (0+32768))
  3769  0DB6  00F8               	movwf	print_error@top
  3770  0DB7  3092               	movlw	high (STR_37| (0+32768))
  3771  0DB8  00F9               	movwf	print_error@top+1
  3772  0DB9  30F6               	movlw	low (STR_116| (0+32768))
  3773  0DBA  00FA               	movwf	print_error@bottom
  3774  0DBB  3092               	movlw	high (STR_116| (0+32768))
  3775  0DBC  2DE0               	goto	L9
  3776  0DBD                     l3757:	
  3777                           
  3778                           ;Multi_RX_testjig_v1.c: 834: else if(RX_data > 179)
  3779  0DBD  30B4               	movlw	180
  3780  0DBE  024E               	subwf	main@RX_data,w
  3781  0DBF  1C03               	skipc
  3782  0DC0  2DC9               	goto	l3761
  3783                           
  3784                           ;Multi_RX_testjig_v1.c: 835: print_error("Test RF 3v3", " Error - High");
  3785  0DC1  30DD               	movlw	low (STR_117| (0+32768))
  3786  0DC2  00F8               	movwf	print_error@top
  3787  0DC3  3091               	movlw	high (STR_117| (0+32768))
  3788  0DC4  00F9               	movwf	print_error@top+1
  3789  0DC5  3031               	movlw	low (STR_118| (0+32768))
  3790  0DC6  00FA               	movwf	print_error@bottom
  3791  0DC7  3091               	movlw	high (STR_118| (0+32768))
  3792  0DC8  2DE0               	goto	L9
  3793  0DC9                     l3761:	
  3794                           
  3795                           ;Multi_RX_testjig_v1.c: 836: else if(RX_data < 153)
  3796  0DC9  3099               	movlw	153
  3797  0DCA  024E               	subwf	main@RX_data,w
  3798  0DCB  1803               	skipnc
  3799  0DCC  2DD5               	goto	l3765
  3800                           
  3801                           ;Multi_RX_testjig_v1.c: 837: print_error("Test RF 3v3", " Error - Micrel");
  3802  0DCD  30DD               	movlw	low (STR_117| (0+32768))
  3803  0DCE  00F8               	movwf	print_error@top
  3804  0DCF  3091               	movlw	high (STR_117| (0+32768))
  3805  0DD0  00F9               	movwf	print_error@top+1
  3806  0DD1  30AB               	movlw	low (STR_120| (0+32768))
  3807  0DD2  00FA               	movwf	print_error@bottom
  3808  0DD3  3090               	movlw	high (STR_120| (0+32768))
  3809  0DD4  2DE0               	goto	L9
  3810  0DD5                     l3765:	
  3811                           
  3812                           ;Multi_RX_testjig_v1.c: 838: else if(RX_data < 158)
  3813  0DD5  309E               	movlw	158
  3814  0DD6  024E               	subwf	main@RX_data,w
  3815  0DD7  1803               	skipnc
  3816  0DD8  2DE3               	goto	l406
  3817                           
  3818                           ;Multi_RX_testjig_v1.c: 839: print_error("Test RF 3v3", " Error - Low");
  3819  0DD9  30DD               	movlw	low (STR_117| (0+32768))
  3820  0DDA  00F8               	movwf	print_error@top
  3821  0DDB  3091               	movlw	high (STR_117| (0+32768))
  3822  0DDC  00F9               	movwf	print_error@top+1
  3823  0DDD  30D0               	movlw	low (STR_122| (0+32768))
  3824  0DDE  00FA               	movwf	print_error@bottom
  3825  0DDF  3091               	movlw	high (STR_122| (0+32768))
  3826  0DE0                     L9:	
  3827  0DE0  00FB               	movwf	print_error@bottom+1
  3828  0DE1  2773  3188         	fcall	_print_error
  3829  0DE3                     l406:	
  3830                           
  3831                           ;Multi_RX_testjig_v1.c: 841: print_screen("Test RF", "3v3 - OK");
  3832  0DE3  30E6               	movlw	low (STR_111| (0+32768))
  3833  0DE4  00F4               	movwf	print_screen@top
  3834  0DE5  3092               	movlw	high (STR_111| (0+32768))
  3835  0DE6  00F5               	movwf	print_screen@top+1
  3836  0DE7  30B1               	movlw	low (STR_124| (0+32768))
  3837  0DE8  00F6               	movwf	print_screen@bottom
  3838  0DE9  3092               	movlw	high (STR_124| (0+32768))
  3839  0DEA  00F7               	movwf	print_screen@bottom+1
  3840  0DEB  275D  3188         	fcall	_print_screen
  3841                           
  3842                           ;Multi_RX_testjig_v1.c: 844: RE0 = 1;
  3843  0DED  0020               	movlb	0	; select bank0
  3844  0DEE  1410               	bsf	16,0	;volatile
  3845                           
  3846                           ;Multi_RX_testjig_v1.c: 845: _delay((unsigned long)((150)*(16000000/4000.0)));
  3847  0DEF  3004               	movlw	4
  3848  0DF0  00CB               	movwf	??_main+2
  3849  0DF1  300C               	movlw	12
  3850  0DF2  00CA               	movwf	??_main+1
  3851  0DF3  3035               	movlw	53
  3852  0DF4  00C9               	movwf	??_main
  3853  0DF5                     u4347:	
  3854  0DF5  0BC9               	decfsz	??_main,f
  3855  0DF6  2DF5               	goto	u4347
  3856  0DF7  0BCA               	decfsz	??_main+1,f
  3857  0DF8  2DF5               	goto	u4347
  3858  0DF9  0BCB               	decfsz	??_main+2,f
  3859  0DFA  2DF5               	goto	u4347
  3860  0DFB  3200               	nop2
  3861                           
  3862                           ;Multi_RX_testjig_v1.c: 846: print_screen("Test RF", "RSSI");
  3863  0DFC  30E6               	movlw	low (STR_111| (0+32768))
  3864  0DFD  00F4               	movwf	print_screen@top
  3865  0DFE  3092               	movlw	high (STR_111| (0+32768))
  3866  0DFF  00F5               	movwf	print_screen@top+1
  3867  0E00  307D               	movlw	low ((STR_131+8)| (0+32768))
  3868  0E01  00F6               	movwf	print_screen@bottom
  3869  0E02  3091               	movlw	high ((STR_131+8)| (0+32768))
  3870  0E03  00F7               	movwf	print_screen@bottom+1
  3871  0E04  275D  3188         	fcall	_print_screen
  3872                           
  3873                           ;Multi_RX_testjig_v1.c: 847: TX_one(0x60);
  3874  0E06  3060               	movlw	96
  3875  0E07  271B  3188         	fcall	_TX_one
  3876                           
  3877                           ;Multi_RX_testjig_v1.c: 848: RX_data = RX_one();
  3878  0E09  273D  3188         	fcall	_RX_one
  3879  0E0B  0020               	movlb	0	; select bank0
  3880  0E0C  00CE               	movwf	main@RX_data
  3881                           
  3882                           ;Multi_RX_testjig_v1.c: 849: TX_one(0x60);
  3883  0E0D  3060               	movlw	96
  3884  0E0E  271B  3188         	fcall	_TX_one
  3885                           
  3886                           ;Multi_RX_testjig_v1.c: 850: RX_data = RX_one();
  3887  0E10  273D  3188         	fcall	_RX_one
  3888  0E12  0020               	movlb	0	; select bank0
  3889  0E13  00CE               	movwf	main@RX_data
  3890                           
  3891                           ;Multi_RX_testjig_v1.c: 851: if(RX_data == 0)
  3892  0E14  084E               	movf	main@RX_data,w
  3893  0E15  1D03               	btfss	3,2
  3894  0E16  2E1F               	goto	l3787
  3895                           
  3896                           ;Multi_RX_testjig_v1.c: 852: print_error("Comms Error", " 13");
  3897  0E17  300D               	movlw	low (STR_37| (0+32768))
  3898  0E18  00F8               	movwf	print_error@top
  3899  0E19  3092               	movlw	high (STR_37| (0+32768))
  3900  0E1A  00F9               	movwf	print_error@top+1
  3901  0E1B  30FA               	movlw	low (STR_128| (0+32768))
  3902  0E1C  00FA               	movwf	print_error@bottom
  3903  0E1D  3092               	movlw	high (STR_128| (0+32768))
  3904  0E1E  2E41               	goto	L6
  3905  0E1F                     l3787:	
  3906                           
  3907                           ;Multi_RX_testjig_v1.c: 853: else if(RX_data == 0xFF)
  3908  0E1F  0A4E               	incf	main@RX_data,w
  3909  0E20  1D03               	btfss	3,2
  3910  0E21  2E2A               	goto	l3791
  3911                           
  3912                           ;Multi_RX_testjig_v1.c: 854: print_error("Comms Error", " 14");
  3913  0E22  300D               	movlw	low (STR_37| (0+32768))
  3914  0E23  00F8               	movwf	print_error@top
  3915  0E24  3092               	movlw	high (STR_37| (0+32768))
  3916  0E25  00F9               	movwf	print_error@top+1
  3917  0E26  30FE               	movlw	low (STR_130| (0+32768))
  3918  0E27  00FA               	movwf	print_error@bottom
  3919  0E28  3092               	movlw	high (STR_130| (0+32768))
  3920  0E29  2E41               	goto	L6
  3921  0E2A                     l3791:	
  3922                           
  3923                           ;Multi_RX_testjig_v1.c: 855: else if(RX_data > 120)
  3924  0E2A  3079               	movlw	121
  3925  0E2B  024E               	subwf	main@RX_data,w
  3926  0E2C  1C03               	skipc
  3927  0E2D  2E36               	goto	l3795
  3928                           
  3929                           ;Multi_RX_testjig_v1.c: 856: print_error("Test RF RSSI", " Error - High");
  3930  0E2E  3075               	movlw	low (STR_131| (0+32768))
  3931  0E2F  00F8               	movwf	print_error@top
  3932  0E30  3091               	movlw	high (STR_131| (0+32768))
  3933  0E31  00F9               	movwf	print_error@top+1
  3934  0E32  3031               	movlw	low (STR_118| (0+32768))
  3935  0E33  00FA               	movwf	print_error@bottom
  3936  0E34  3091               	movlw	high (STR_118| (0+32768))
  3937  0E35  2E41               	goto	L6
  3938  0E36                     l3795:	
  3939                           
  3940                           ;Multi_RX_testjig_v1.c: 857: else if(RX_data < 90)
  3941  0E36  305A               	movlw	90
  3942  0E37  024E               	subwf	main@RX_data,w
  3943  0E38  1803               	skipnc
  3944  0E39  2E44               	goto	l415
  3945                           
  3946                           ;Multi_RX_testjig_v1.c: 858: print_error("Test RF RSSI", " Error - Low");
  3947  0E3A  3075               	movlw	low (STR_131| (0+32768))
  3948  0E3B  00F8               	movwf	print_error@top
  3949  0E3C  3091               	movlw	high (STR_131| (0+32768))
  3950  0E3D  00F9               	movwf	print_error@top+1
  3951  0E3E  30D0               	movlw	low (STR_122| (0+32768))
  3952  0E3F  00FA               	movwf	print_error@bottom
  3953  0E40  3091               	movlw	high (STR_122| (0+32768))
  3954  0E41                     L6:	
  3955  0E41  00FB               	movwf	print_error@bottom+1
  3956  0E42  2773  3188         	fcall	_print_error
  3957  0E44                     l415:	
  3958                           
  3959                           ;Multi_RX_testjig_v1.c: 859: print_screen("Test RF", "RSSI - OK");
  3960  0E44  30E6               	movlw	low (STR_111| (0+32768))
  3961  0E45  00F4               	movwf	print_screen@top
  3962  0E46  3092               	movlw	high (STR_111| (0+32768))
  3963  0E47  00F5               	movwf	print_screen@top+1
  3964  0E48  3079               	movlw	low (STR_136| (0+32768))
  3965  0E49  00F6               	movwf	print_screen@bottom
  3966  0E4A  3092               	movlw	high (STR_136| (0+32768))
  3967  0E4B  00F7               	movwf	print_screen@bottom+1
  3968  0E4C  275D  3188         	fcall	_print_screen
  3969                           
  3970                           ;Multi_RX_testjig_v1.c: 862: print_screen("Test RF", "Decode");
  3971  0E4E  30E6               	movlw	low (STR_111| (0+32768))
  3972  0E4F  00F4               	movwf	print_screen@top
  3973  0E50  3092               	movlw	high (STR_111| (0+32768))
  3974  0E51  00F5               	movwf	print_screen@top+1
  3975  0E52  30E2               	movlw	low ((STR_144+8)| (0+32768))
  3976  0E53  00F6               	movwf	print_screen@bottom
  3977  0E54  3090               	movlw	high ((STR_144+8)| (0+32768))
  3978  0E55  00F7               	movwf	print_screen@bottom+1
  3979  0E56  275D  3188         	fcall	_print_screen
  3980                           
  3981                           ;Multi_RX_testjig_v1.c: 863: for(i = 0; i < 10; i++)
  3982  0E58  0020               	movlb	0	; select bank0
  3983  0E59  01CC               	clrf	main@i
  3984  0E5A  01CD               	clrf	main@i+1
  3985  0E5B  2E6C               	goto	l3801
  3986  0E5C                     l3811:	
  3987                           
  3988                           ;Multi_RX_testjig_v1.c: 869: _delay((unsigned long)((200)*(16000000/4000.0)));
  3989  0E5C  3005               	movlw	5
  3990  0E5D  00CB               	movwf	??_main+2
  3991  0E5E  300F               	movlw	15
  3992  0E5F  00CA               	movwf	??_main+1
  3993  0E60  30F4               	movlw	244
  3994  0E61  00C9               	movwf	??_main
  3995  0E62                     u4357:	
  3996  0E62  0BC9               	decfsz	??_main,f
  3997  0E63  2E62               	goto	u4357
  3998  0E64  0BCA               	decfsz	??_main+1,f
  3999  0E65  2E62               	goto	u4357
  4000  0E66  0BCB               	decfsz	??_main+2,f
  4001  0E67  2E62               	goto	u4357
  4002  0E68  0020               	movlb	0	; select bank0
  4003  0E69  0ACC               	incf	main@i,f
  4004  0E6A  1903               	skipnz
  4005  0E6B  0ACD               	incf	main@i+1,f
  4006  0E6C                     l3801:	
  4007  0E6C  3000               	movlw	0
  4008  0E6D  024D               	subwf	main@i+1,w
  4009  0E6E  300A               	movlw	10
  4010  0E6F  1903               	skipnz
  4011  0E70  024C               	subwf	main@i,w
  4012  0E71  1803               	btfsc	3,0
  4013  0E72  2E7C               	goto	l3817
  4014                           
  4015                           ;Multi_RX_testjig_v1.c: 864: {
  4016                           ;Multi_RX_testjig_v1.c: 865: TX_one(0x61);
  4017  0E73  3061               	movlw	97
  4018  0E74  271B  3188         	fcall	_TX_one
  4019                           
  4020                           ;Multi_RX_testjig_v1.c: 866: RX_data = RX_one();
  4021  0E76  273D  3188         	fcall	_RX_one
  4022  0E78  0020               	movlb	0	; select bank0
  4023  0E79  00CE               	movwf	main@RX_data
  4024                           
  4025                           ;Multi_RX_testjig_v1.c: 867: if(RX_data == 1)
  4026  0E7A  0B4E               	decfsz	main@RX_data,w
  4027  0E7B  2E5C               	goto	l3811
  4028  0E7C                     l3817:	
  4029                           
  4030                           ;Multi_RX_testjig_v1.c: 870: }
  4031                           ;Multi_RX_testjig_v1.c: 872: if(RX_data == 1)
  4032  0E7C  034E               	decf	main@RX_data,w
  4033  0E7D  1D03               	btfss	3,2
  4034  0E7E  2E8A               	goto	l3821
  4035                           
  4036                           ;Multi_RX_testjig_v1.c: 873: print_screen("Test RF", "Decode New - OK");
  4037  0E7F  30E6               	movlw	low (STR_111| (0+32768))
  4038  0E80  00F4               	movwf	print_screen@top
  4039  0E81  3092               	movlw	high (STR_111| (0+32768))
  4040  0E82  00F5               	movwf	print_screen@top+1
  4041  0E83  308B               	movlw	low (STR_140| (0+32768))
  4042  0E84  00F6               	movwf	print_screen@bottom
  4043  0E85  3090               	movlw	high (STR_140| (0+32768))
  4044  0E86  00F7               	movwf	print_screen@bottom+1
  4045  0E87  275D  3188         	fcall	_print_screen
  4046  0E89  2EAC               	goto	l3831
  4047  0E8A                     l3821:	
  4048                           
  4049                           ;Multi_RX_testjig_v1.c: 874: else if(RX_data == 2)
  4050  0E8A  3002               	movlw	2
  4051  0E8B  064E               	xorwf	main@RX_data,w
  4052  0E8C  1D03               	btfss	3,2
  4053  0E8D  2E96               	goto	l3825
  4054                           
  4055                           ;Multi_RX_testjig_v1.c: 875: print_error("Test RF", "Decode Old -Fail");
  4056  0E8E  30E6               	movlw	low (STR_111| (0+32768))
  4057  0E8F  00F8               	movwf	print_error@top
  4058  0E90  3092               	movlw	high (STR_111| (0+32768))
  4059  0E91  00F9               	movwf	print_error@top+1
  4060  0E92  3037               	movlw	low (STR_142| (0+32768))
  4061  0E93  00FA               	movwf	print_error@bottom
  4062  0E94  3090               	movlw	high (STR_142| (0+32768))
  4063  0E95  2EA9               	goto	L7
  4064  0E96                     l3825:	
  4065                           
  4066                           ;Multi_RX_testjig_v1.c: 876: else if(RX_data == 3)
  4067  0E96  3003               	movlw	3
  4068  0E97  064E               	xorwf	main@RX_data,w
  4069  0E98  1D03               	btfss	3,2
  4070  0E99  2EA2               	goto	l3829
  4071                           
  4072                           ;Multi_RX_testjig_v1.c: 877: print_error("Test RF", "Error - Decode");
  4073  0E9A  30E6               	movlw	low (STR_111| (0+32768))
  4074  0E9B  00F8               	movwf	print_error@top
  4075  0E9C  3092               	movlw	high (STR_111| (0+32768))
  4076  0E9D  00F9               	movwf	print_error@top+1
  4077  0E9E  30DA               	movlw	low (STR_144| (0+32768))
  4078  0E9F  00FA               	movwf	print_error@bottom
  4079  0EA0  3090               	movlw	high (STR_144| (0+32768))
  4080  0EA1  2EA9               	goto	L7
  4081  0EA2                     l3829:	
  4082                           
  4083                           ;Multi_RX_testjig_v1.c: 878: else
  4084                           ;Multi_RX_testjig_v1.c: 879: print_error("Comms Error", " 15");
  4085  0EA2  300D               	movlw	low (STR_37| (0+32768))
  4086  0EA3  00F8               	movwf	print_error@top
  4087  0EA4  3092               	movlw	high (STR_37| (0+32768))
  4088  0EA5  00F9               	movwf	print_error@top+1
  4089  0EA6  3002               	movlw	low (STR_146| (0+32768))
  4090  0EA7  00FA               	movwf	print_error@bottom
  4091  0EA8  3093               	movlw	high (STR_146| (0+32768))
  4092  0EA9                     L7:	
  4093  0EA9  00FB               	movwf	print_error@bottom+1
  4094  0EAA  2773  3188         	fcall	_print_error
  4095  0EAC                     l3831:	
  4096                           
  4097                           ;Multi_RX_testjig_v1.c: 881: RE0 = 0;
  4098  0EAC  0020               	movlb	0	; select bank0
  4099  0EAD  1010               	bcf	16,0	;volatile
  4100                           
  4101                           ;Multi_RX_testjig_v1.c: 884: print_screen("Master Erase ", " ");
  4102  0EAE  3007               	movlw	low (STR_147| (0+32768))
  4103  0EAF  00F4               	movwf	print_screen@top
  4104  0EB0  3091               	movlw	high (STR_147| (0+32768))
  4105  0EB1  00F5               	movwf	print_screen@top+1
  4106  0EB2  3089               	movlw	low ((STR_155+14)| (0+32768))
  4107  0EB3  00F6               	movwf	print_screen@bottom
  4108  0EB4  3090               	movlw	high ((STR_155+14)| (0+32768))
  4109  0EB5  00F7               	movwf	print_screen@bottom+1
  4110  0EB6  275D  3188         	fcall	_print_screen
  4111                           
  4112                           ;Multi_RX_testjig_v1.c: 885: TX_one(0x82);
  4113  0EB8  3082               	movlw	130
  4114  0EB9  271B  3188         	fcall	_TX_one
  4115                           
  4116                           ;Multi_RX_testjig_v1.c: 886: RX_data = RX_one();
  4117  0EBB  273D  3188         	fcall	_RX_one
  4118  0EBD  0020               	movlb	0	; select bank0
  4119  0EBE  00CE               	movwf	main@RX_data
  4120                           
  4121                           ;Multi_RX_testjig_v1.c: 887: if(RX_data != 0x8A)
  4122  0EBF  3A8A               	xorlw	138
  4123  0EC0  1903               	btfsc	3,2
  4124  0EC1  2ECC               	goto	l430
  4125                           
  4126                           ;Multi_RX_testjig_v1.c: 888: print_error("Comms Error", " 17");
  4127  0EC2  300D               	movlw	low (STR_37| (0+32768))
  4128  0EC3  00F8               	movwf	print_error@top
  4129  0EC4  3092               	movlw	high (STR_37| (0+32768))
  4130  0EC5  00F9               	movwf	print_error@top+1
  4131  0EC6  300A               	movlw	low (STR_150| (0+32768))
  4132  0EC7  00FA               	movwf	print_error@bottom
  4133  0EC8  3093               	movlw	high (STR_150| (0+32768))
  4134  0EC9  00FB               	movwf	print_error@bottom+1
  4135  0ECA  2773  3188         	fcall	_print_error
  4136  0ECC                     l430:	
  4137                           
  4138                           ;Multi_RX_testjig_v1.c: 891: print_screen("Set # of ", " channels");
  4139  0ECC  305B               	movlw	low (STR_151| (0+32768))
  4140  0ECD  00F4               	movwf	print_screen@top
  4141  0ECE  3092               	movlw	high (STR_151| (0+32768))
  4142  0ECF  00F5               	movwf	print_screen@top+1
  4143  0ED0  3083               	movlw	low (STR_152| (0+32768))
  4144  0ED1  00F6               	movwf	print_screen@bottom
  4145  0ED2  3092               	movlw	high (STR_152| (0+32768))
  4146  0ED3  00F7               	movwf	print_screen@bottom+1
  4147  0ED4  275D  3188         	fcall	_print_screen
  4148                           
  4149                           ;Multi_RX_testjig_v1.c: 892: TX_one(0x81);
  4150  0ED6  3081               	movlw	129
  4151  0ED7  271B  3188         	fcall	_TX_one
  4152                           
  4153                           ;Multi_RX_testjig_v1.c: 893: RX_data = RX_one();
  4154  0ED9  273D  3188         	fcall	_RX_one
  4155  0EDB  0020               	movlb	0	; select bank0
  4156  0EDC  00CE               	movwf	main@RX_data
  4157                           
  4158                           ;Multi_RX_testjig_v1.c: 894: if(RX_data != 0x8A)
  4159  0EDD  3A8A               	xorlw	138
  4160  0EDE  1903               	btfsc	3,2
  4161  0EDF  2EEA               	goto	l431
  4162                           
  4163                           ;Multi_RX_testjig_v1.c: 895: print_error("Comms Error", " 16");
  4164  0EE0  300D               	movlw	low (STR_37| (0+32768))
  4165  0EE1  00F8               	movwf	print_error@top
  4166  0EE2  3092               	movlw	high (STR_37| (0+32768))
  4167  0EE3  00F9               	movwf	print_error@top+1
  4168  0EE4  3006               	movlw	low (STR_154| (0+32768))
  4169  0EE5  00FA               	movwf	print_error@bottom
  4170  0EE6  3093               	movlw	high (STR_154| (0+32768))
  4171  0EE7  00FB               	movwf	print_error@bottom+1
  4172  0EE8  2773  3188         	fcall	_print_error
  4173  0EEA                     l431:	
  4174                           
  4175                           ;Multi_RX_testjig_v1.c: 898: print_screen("7seg, buzzer,  ", " button test");
  4176  0EEA  307B               	movlw	low (STR_155| (0+32768))
  4177  0EEB  00F4               	movwf	print_screen@top
  4178  0EEC  3090               	movlw	high (STR_155| (0+32768))
  4179  0EED  00F5               	movwf	print_screen@top+1
  4180  0EEE  30C3               	movlw	low (STR_156| (0+32768))
  4181  0EEF  00F6               	movwf	print_screen@bottom
  4182  0EF0  3091               	movlw	high (STR_156| (0+32768))
  4183  0EF1  00F7               	movwf	print_screen@bottom+1
  4184  0EF2  275D  3188         	fcall	_print_screen
  4185                           
  4186                           ;Multi_RX_testjig_v1.c: 899: TX_one(0x90);
  4187  0EF4  3090               	movlw	144
  4188  0EF5  271B  3188         	fcall	_TX_one
  4189                           
  4190                           ;Multi_RX_testjig_v1.c: 900: TRISG0 = 1;
  4191  0EF7  0026               	movlb	6	; select bank6
  4192  0EF8  140D               	bsf	13,0	;volatile
  4193                           
  4194                           ;Multi_RX_testjig_v1.c: 901: _delay((unsigned long)((100)*(16000000/4000.0)));
  4195  0EF9  3003               	movlw	3
  4196  0EFA  0020               	movlb	0	; select bank0
  4197  0EFB  00CB               	movwf	??_main+2
  4198  0EFC  3008               	movlw	8
  4199  0EFD  00CA               	movwf	??_main+1
  4200  0EFE  3078               	movlw	120
  4201  0EFF  00C9               	movwf	??_main
  4202  0F00                     u4367:	
  4203  0F00  0BC9               	decfsz	??_main,f
  4204  0F01  2F00               	goto	u4367
  4205  0F02  0BCA               	decfsz	??_main+1,f
  4206  0F03  2F00               	goto	u4367
  4207  0F04  0BCB               	decfsz	??_main+2,f
  4208  0F05  2F00               	goto	u4367
  4209  0F06                     l432:	
  4210                           ;Multi_RX_testjig_v1.c: 902: while(RG1== 1);
  4211                           
  4212  0F06  0025               	movlb	5	; select bank5
  4213  0F07  188D               	btfsc	13,1	;volatile
  4214  0F08  2F06               	goto	l432
  4215                           
  4216                           ;Multi_RX_testjig_v1.c: 903: print_screen("waiting  ", " for comms");
  4217  0F09  3051               	movlw	low (STR_157| (0+32768))
  4218  0F0A  00F4               	movwf	print_screen@top
  4219  0F0B  3092               	movlw	high (STR_157| (0+32768))
  4220  0F0C  00F5               	movwf	print_screen@top+1
  4221  0F0D  3030               	movlw	low (STR_158| (0+32768))
  4222  0F0E  00F6               	movwf	print_screen@bottom
  4223  0F0F  3092               	movlw	high (STR_158| (0+32768))
  4224  0F10  00F7               	movwf	print_screen@bottom+1
  4225  0F11  275D               	fcall	_print_screen
  4226                           
  4227                           ;Multi_RX_testjig_v1.c: 910: testjig_done(1);
  4228  0F12  3001               	movlw	1
  4229  0F13  3185  2520  3188   	fcall	_testjig_done
  4230                           
  4231                           ;Multi_RX_testjig_v1.c: 920: testjig_done(1);
  4232  0F16  3001               	movlw	1
  4233  0F17  3185  2520         	fcall	_testjig_done
  4234  0F19  3180  2895         	ljmp	start
  4235  0F1B                     __end_of_main:	
  4236  0F1B                     __ptext33:	
  4237 ;; *************** function _TX_one *****************
  4238 ;; Defined at:
  4239 ;;		line 1995 in file "Multi_RX_testjig_v1.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  data            1    wreg     unsigned char 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  data            1    1[COMMON] unsigned char 
  4244 ;;  i               1    2[COMMON] unsigned char 
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg, status,2, status,0
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4257 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4258 ;;Total ram usage:        3 bytes
  4259 ;; Hardware stack levels used:    1
  4260 ;; Hardware stack levels required when called:    1
  4261 ;; This function calls:
  4262 ;;		Nothing
  4263 ;; This function is called by:
  4264 ;;		_main
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           
  4269                           ;psect for function _TX_one
  4270  0F1B                     _TX_one:	
  4271                           
  4272                           ;incstack = 0
  4273                           ; Regs used in _TX_one: [wreg+status,2+status,0]
  4274                           ;TX_one@data stored from wreg
  4275  0F1B  00F1               	movwf	TX_one@data
  4276                           
  4277                           ;Multi_RX_testjig_v1.c: 1997: TRISG0 = 0;
  4278  0F1C  0026               	movlb	6	; select bank6
  4279  0F1D  100D               	bcf	13,0	;volatile
  4280                           
  4281                           ;Multi_RX_testjig_v1.c: 1998: LATG0 = 0;
  4282  0F1E  0027               	movlb	7	; select bank7
  4283  0F1F  100D               	bcf	13,0	;volatile
  4284                           
  4285                           ;Multi_RX_testjig_v1.c: 1999: _delay((unsigned long)((100)*(16000000/4000000.0)));
  4286  0F20  3085               	movlw	133
  4287  0F21  00F0               	movwf	??_TX_one
  4288  0F22                     u4517:	
  4289  0F22  0BF0               	decfsz	??_TX_one,f
  4290  0F23  2F22               	goto	u4517
  4291                           
  4292                           ;Multi_RX_testjig_v1.c: 2001: unsigned char i;
  4293                           ;Multi_RX_testjig_v1.c: 2002: for(i = 0; i < 8; i++)
  4294  0F24  01F2               	clrf	TX_one@i
  4295  0F25                     l680:	
  4296                           
  4297                           ;Multi_RX_testjig_v1.c: 2003: {
  4298                           ;Multi_RX_testjig_v1.c: 2004: LATG0 = data & 0x01;
  4299  0F25  1C71               	btfss	TX_one@data,0
  4300  0F26  2F2A               	goto	u2790
  4301  0F27  0027               	movlb	7	; select bank7
  4302  0F28  140D               	bsf	13,0	;volatile
  4303  0F29  2F2C               	goto	u2804
  4304  0F2A                     u2790:	
  4305  0F2A  0027               	movlb	7	; select bank7
  4306  0F2B  100D               	bcf	13,0	;volatile
  4307  0F2C                     u2804:	
  4308  0F2C  3085               	movlw	133
  4309                           
  4310                           ;Multi_RX_testjig_v1.c: 2005: data = data >> 1;
  4311  0F2D  36F1               	lsrf	TX_one@data,f
  4312                           
  4313                           ;Multi_RX_testjig_v1.c: 2006: _delay((unsigned long)((100)*(16000000/4000000.0)));
  4314  0F2E  00F0               	movwf	??_TX_one
  4315  0F2F                     u4527:	
  4316  0F2F  0BF0               	decfsz	??_TX_one,f
  4317  0F30  2F2F               	goto	u4527
  4318  0F31  3008               	movlw	8
  4319  0F32  0AF2               	incf	TX_one@i,f
  4320  0F33  0272               	subwf	TX_one@i,w
  4321  0F34  1C03               	skipc
  4322  0F35  2F25               	goto	l680
  4323                           
  4324                           ;Multi_RX_testjig_v1.c: 2007: }
  4325                           ;Multi_RX_testjig_v1.c: 2008: LATG0 = 1;
  4326  0F36  0027               	movlb	7	; select bank7
  4327  0F37  140D               	bsf	13,0	;volatile
  4328                           
  4329                           ;Multi_RX_testjig_v1.c: 2009: _delay((unsigned long)((100)*(16000000/4000000.0)));
  4330  0F38  3085               	movlw	133
  4331  0F39  00F0               	movwf	??_TX_one
  4332  0F3A                     u4537:	
  4333  0F3A  0BF0               	decfsz	??_TX_one,f
  4334  0F3B  2F3A               	goto	u4537
  4335  0F3C  0008               	return
  4336  0F3D                     __end_of_TX_one:	
  4337  0F3D                     __ptext34:	
  4338 ;; *************** function _RX_one *****************
  4339 ;; Defined at:
  4340 ;;		line 2012 in file "Multi_RX_testjig_v1.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;		None
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  data            1    2[COMMON] unsigned char 
  4345 ;;  i               1    1[COMMON] unsigned char 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      unsigned char 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2, status,0
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4356 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4358 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4359 ;;Total ram usage:        3 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    1
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_main
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           
  4370                           ;psect for function _RX_one
  4371  0F3D                     _RX_one:	
  4372  0F3D                     l685:	
  4373                           ;Multi_RX_testjig_v1.c: 2015: while(RG3 == 1);
  4374                           
  4375                           ;incstack = 0
  4376                           ; Regs used in _RX_one: [wreg+status,2+status,0]
  4377                           
  4378  0F3D  0025               	movlb	5	; select bank5
  4379  0F3E  198D               	btfsc	13,3	;volatile
  4380  0F3F  2F3D               	goto	l685
  4381                           
  4382                           ;Multi_RX_testjig_v1.c: 2016: _delay((unsigned long)((150)*(16000000/4000000.0)));
  4383  0F40  30C7               	movlw	199
  4384  0F41  00F0               	movwf	??_RX_one
  4385  0F42                     u4547:	
  4386  0F42  0BF0               	decfsz	??_RX_one,f
  4387  0F43  2F42               	goto	u4547
  4388  0F44  3200               	nop2	;nop
  4389                           
  4390                           ;Multi_RX_testjig_v1.c: 2017: unsigned char i;
  4391                           ;Multi_RX_testjig_v1.c: 2018: unsigned char data = 0;
  4392  0F45  01F2               	clrf	RX_one@data
  4393                           
  4394                           ;Multi_RX_testjig_v1.c: 2019: for(i = 0; i < 8; i++)
  4395  0F46  01F1               	clrf	RX_one@i
  4396  0F47                     l688:	
  4397                           
  4398                           ;Multi_RX_testjig_v1.c: 2020: {
  4399                           ;Multi_RX_testjig_v1.c: 2021: if (RG3 == 0)
  4400  0F47  0025               	movlb	5	; select bank5
  4401  0F48  198D               	btfsc	13,3	;volatile
  4402  0F49  2F4C               	goto	l690
  4403                           
  4404                           ;Multi_RX_testjig_v1.c: 2022: data = data >> 1;
  4405  0F4A  36F2               	lsrf	RX_one@data,f
  4406  0F4B  2F4E               	goto	l3171
  4407  0F4C                     l690:	
  4408                           
  4409                           ;Multi_RX_testjig_v1.c: 2023: else
  4410                           ;Multi_RX_testjig_v1.c: 2024: data = (data >> 1) | 0x80 ;
  4411  0F4C  1403               	setc
  4412  0F4D  0CF2               	rrf	RX_one@data,f
  4413  0F4E                     l3171:	
  4414                           
  4415                           ;Multi_RX_testjig_v1.c: 2025: _delay((unsigned long)((100)*(16000000/4000000.0)));
  4416  0F4E  3085               	movlw	133
  4417  0F4F  00F0               	movwf	??_RX_one
  4418  0F50                     u4557:	
  4419  0F50  0BF0               	decfsz	??_RX_one,f
  4420  0F51  2F50               	goto	u4557
  4421  0F52  3008               	movlw	8
  4422  0F53  0AF1               	incf	RX_one@i,f
  4423  0F54  0271               	subwf	RX_one@i,w
  4424  0F55  1C03               	skipc
  4425  0F56  2F47               	goto	l688
  4426                           
  4427                           ;Multi_RX_testjig_v1.c: 2026: }
  4428                           ;Multi_RX_testjig_v1.c: 2027: _delay((unsigned long)((100)*(16000000/4000000.0)));
  4429  0F57  3085               	movlw	133
  4430  0F58  00F0               	movwf	??_RX_one
  4431  0F59                     u4567:	
  4432  0F59  0BF0               	decfsz	??_RX_one,f
  4433  0F5A  2F59               	goto	u4567
  4434                           
  4435                           ;Multi_RX_testjig_v1.c: 2029: return data;
  4436  0F5B  0872               	movf	RX_one@data,w
  4437  0F5C  0008               	return
  4438  0F5D                     __end_of_RX_one:	
  4439  0F5D                     __ptext3:	
  4440 ;; *************** function _print_screen *****************
  4441 ;; Defined at:
  4442 ;;		line 1460 in file "Multi_RX_testjig_v1.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  top             2    4[COMMON] PTR const unsigned char 
  4445 ;;		 -> STR_169(12), STR_167(17), STR_165(17), STR_163(17), 
  4446 ;;		 -> STR_161(9), STR_159(13), STR_157(10), STR_155(16), 
  4447 ;;		 -> STR_151(10), STR_147(14), STR_139(8), STR_137(8), 
  4448 ;;		 -> STR_135(8), STR_125(8), STR_123(8), STR_111(8), 
  4449 ;;		 -> STR_89(9), STR_87(9), STR_65(9), STR_63(9), 
  4450 ;;		 -> STR_51(11), STR_49(11), STR_43(13), STR_35(13), 
  4451 ;;		 -> STR_33(19), STR_29(12), STR_27(19), STR_5(15), 
  4452 ;;		 -> STR_1(9), 
  4453 ;;  bottom          2    6[COMMON] PTR const unsigned char 
  4454 ;;		 -> STR_170(17), STR_168(13), STR_166(14), STR_164(8), 
  4455 ;;		 -> STR_162(8), STR_160(14), STR_158(11), STR_156(13), 
  4456 ;;		 -> STR_152(10), STR_148(2), STR_140(16), STR_138(7), 
  4457 ;;		 -> STR_136(10), STR_126(5), STR_124(9), STR_112(4), 
  4458 ;;		 -> STR_90(3), STR_88(1), STR_66(3), STR_64(1), 
  4459 ;;		 -> STR_52(5), STR_50(1), STR_44(6), STR_36(6), 
  4460 ;;		 -> STR_34(9), STR_30(13), STR_28(1), STR_6(1), 
  4461 ;;		 -> STR_2(17), 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      void 
  4466 ;; Registers used:
  4467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/4
  4470 ;;		On exit  : 1F/4
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4476 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4477 ;;Total ram usage:        4 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:    3
  4480 ;; This function calls:
  4481 ;;		_clear_lcd
  4482 ;;		_i2c_Write_string
  4483 ;;		_i2c_first_line
  4484 ;;		_i2c_second_line
  4485 ;; This function is called by:
  4486 ;;		_main
  4487 ;;		_testjig_done
  4488 ;;		_print_error
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           
  4493                           ;psect for function _print_screen
  4494  0F5D                     _print_screen:	
  4495                           
  4496                           ;Multi_RX_testjig_v1.c: 1462: clear_lcd();
  4497                           
  4498                           ;incstack = 0
  4499                           ; Regs used in _print_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4500  0F5D  3181  219A  3188   	fcall	_clear_lcd
  4501                           
  4502                           ;Multi_RX_testjig_v1.c: 1463: i2c_first_line();
  4503  0F60  3181  2189  3188   	fcall	_i2c_first_line
  4504                           
  4505                           ;Multi_RX_testjig_v1.c: 1464: i2c_Write_string(top);
  4506  0F63  0875               	movf	print_screen@top+1,w
  4507  0F64  00F2               	movwf	i2c_Write_string@data+1
  4508  0F65  0874               	movf	print_screen@top,w
  4509  0F66  00F1               	movwf	i2c_Write_string@data
  4510  0F67  3181  21C7  3188   	fcall	_i2c_Write_string
  4511                           
  4512                           ;Multi_RX_testjig_v1.c: 1465: i2c_second_line();
  4513  0F6A  3181  2178  3188   	fcall	_i2c_second_line
  4514                           
  4515                           ;Multi_RX_testjig_v1.c: 1466: i2c_Write_string(bottom);
  4516  0F6D  0877               	movf	print_screen@bottom+1,w
  4517  0F6E  00F2               	movwf	i2c_Write_string@data+1
  4518  0F6F  0876               	movf	print_screen@bottom,w
  4519  0F70  00F1               	movwf	i2c_Write_string@data
  4520  0F71  3181  29C7         	ljmp	l2523
  4521  0F73                     __end_of_print_screen:	
  4522  0F73                     __ptext2:	
  4523 ;; *************** function _print_error *****************
  4524 ;; Defined at:
  4525 ;;		line 1437 in file "Multi_RX_testjig_v1.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;  top             2    8[COMMON] PTR const unsigned char 
  4528 ;;		 -> STR_153(12), STR_149(12), STR_145(12), STR_143(8), 
  4529 ;;		 -> STR_141(8), STR_133(13), STR_131(13), STR_129(12), 
  4530 ;;		 -> STR_127(12), STR_121(12), STR_119(12), STR_117(12), 
  4531 ;;		 -> STR_115(12), STR_113(12), STR_109(12), STR_107(10), 
  4532 ;;		 -> STR_105(12), STR_103(9), STR_101(12), STR_99(12), 
  4533 ;;		 -> STR_97(9), STR_95(9), STR_93(12), STR_91(10), 
  4534 ;;		 -> STR_85(12), STR_83(10), STR_81(12), STR_79(9), 
  4535 ;;		 -> STR_77(12), STR_75(12), STR_73(9), STR_71(9), 
  4536 ;;		 -> STR_69(12), STR_67(10), STR_61(19), STR_59(12), 
  4537 ;;		 -> STR_57(16), STR_55(12), STR_53(19), STR_47(12), 
  4538 ;;		 -> STR_45(12), STR_41(12), STR_39(13), STR_37(12), 
  4539 ;;		 -> STR_31(12), STR_25(14), STR_23(11), STR_21(15), 
  4540 ;;		 -> STR_19(15), STR_17(14), STR_15(14), STR_13(14), 
  4541 ;;		 -> STR_11(11), STR_9(14), STR_7(14), STR_3(9), 
  4542 ;;  bottom          2   10[COMMON] PTR const unsigned char 
  4543 ;;		 -> STR_154(4), STR_150(4), STR_146(4), STR_144(15), 
  4544 ;;		 -> STR_142(17), STR_134(13), STR_132(14), STR_130(4), 
  4545 ;;		 -> STR_128(4), STR_122(13), STR_120(16), STR_118(14), 
  4546 ;;		 -> STR_116(4), STR_114(4), STR_110(4), STR_108(9), 
  4547 ;;		 -> STR_106(3), STR_104(7), STR_102(4), STR_100(4), 
  4548 ;;		 -> STR_98(15), STR_96(16), STR_94(3), STR_92(9), 
  4549 ;;		 -> STR_86(3), STR_84(9), STR_82(3), STR_80(7), 
  4550 ;;		 -> STR_78(4), STR_76(4), STR_74(15), STR_72(16), 
  4551 ;;		 -> STR_70(3), STR_68(9), STR_62(9), STR_60(3), 
  4552 ;;		 -> STR_58(7), STR_56(3), STR_54(9), STR_48(9), 
  4553 ;;		 -> STR_46(9), STR_42(3), STR_40(12), STR_38(3), 
  4554 ;;		 -> STR_32(6), STR_26(12), STR_24(11), STR_22(13), 
  4555 ;;		 -> STR_20(13), STR_18(13), STR_16(13), STR_14(12), 
  4556 ;;		 -> STR_12(11), STR_10(13), STR_8(13), STR_4(14), 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/5
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4568 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4570 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4571 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4572 ;;Total ram usage:        7 bytes
  4573 ;; Hardware stack levels used:    1
  4574 ;; Hardware stack levels required when called:    4
  4575 ;; This function calls:
  4576 ;;		_buzz_one
  4577 ;;		_clear_lcd
  4578 ;;		_debug_fast_tx
  4579 ;;		_i2c_Write_string
  4580 ;;		_i2c_first_line
  4581 ;;		_i2c_second_line
  4582 ;;		_power_supply_set
  4583 ;;		_print_screen
  4584 ;; This function is called by:
  4585 ;;		_main
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           
  4590                           ;psect for function _print_error
  4591  0F73                     _print_error:	
  4592                           
  4593                           ;Multi_RX_testjig_v1.c: 1439: power_supply_set(3);
  4594                           
  4595                           ;incstack = 0
  4596                           ; Regs used in _print_error: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4597  0F73  3003               	movlw	3
  4598  0F74  27D8               	fcall	_power_supply_set
  4599                           
  4600                           ;Multi_RX_testjig_v1.c: 1440: LATA7 = 0;
  4601  0F75  0022               	movlb	2	; select bank2
  4602  0F76  138C               	bcf	12,7	;volatile
  4603                           
  4604                           ;Multi_RX_testjig_v1.c: 1441: LATB5 = 0;
  4605  0F77  128D               	bcf	13,5	;volatile
  4606                           
  4607                           ;Multi_RX_testjig_v1.c: 1442: LATA6 = 0;
  4608  0F78  130C               	bcf	12,6	;volatile
  4609                           
  4610                           ;Multi_RX_testjig_v1.c: 1443: RE0 = 0;
  4611  0F79  0020               	movlb	0	; select bank0
  4612  0F7A  1010               	bcf	16,0	;volatile
  4613                           
  4614                           ;Multi_RX_testjig_v1.c: 1444: debug_fast_tx(12345);
  4615  0F7B  3039               	movlw	57
  4616  0F7C  00F0               	movwf	debug_fast_tx@data
  4617  0F7D  3030               	movlw	48
  4618  0F7E  00F1               	movwf	debug_fast_tx@data+1
  4619  0F7F  3185  25E5  3188   	fcall	_debug_fast_tx
  4620                           
  4621                           ;Multi_RX_testjig_v1.c: 1445: buzz_one(1000);
  4622  0F82  30E8               	movlw	232
  4623  0F83  00F0               	movwf	buzz_one@time
  4624  0F84  3003               	movlw	3
  4625  0F85  00F1               	movwf	buzz_one@time+1
  4626  0F86  3186  2612  3188   	fcall	_buzz_one
  4627  0F89                     l3067:	
  4628                           
  4629                           ;Multi_RX_testjig_v1.c: 1447: {
  4630                           ;Multi_RX_testjig_v1.c: 1448: clear_lcd();
  4631  0F89  3181  219A  3188   	fcall	_clear_lcd
  4632                           
  4633                           ;Multi_RX_testjig_v1.c: 1449: i2c_first_line();
  4634  0F8C  3181  2189  3188   	fcall	_i2c_first_line
  4635                           
  4636                           ;Multi_RX_testjig_v1.c: 1450: i2c_Write_string(top);
  4637  0F8F  0879               	movf	print_error@top+1,w
  4638  0F90  00F2               	movwf	i2c_Write_string@data+1
  4639  0F91  0878               	movf	print_error@top,w
  4640  0F92  00F1               	movwf	i2c_Write_string@data
  4641  0F93  3181  21C7  3188   	fcall	_i2c_Write_string
  4642                           
  4643                           ;Multi_RX_testjig_v1.c: 1451: i2c_second_line();
  4644  0F96  3181  2178  3188   	fcall	_i2c_second_line
  4645                           
  4646                           ;Multi_RX_testjig_v1.c: 1452: i2c_Write_string(bottom);
  4647  0F99  087B               	movf	print_error@bottom+1,w
  4648  0F9A  00F2               	movwf	i2c_Write_string@data+1
  4649  0F9B  087A               	movf	print_error@bottom,w
  4650  0F9C  00F1               	movwf	i2c_Write_string@data
  4651  0F9D  3181  21C7  3188   	fcall	_i2c_Write_string
  4652                           
  4653                           ;Multi_RX_testjig_v1.c: 1453: _delay((unsigned long)((2000)*(16000000/4000.0)));
  4654  0FA0  3029               	movlw	41
  4655  0FA1  0020               	movlb	0	; select bank0
  4656  0FA2  00A2               	movwf	??_print_error+2
  4657  0FA3  3096               	movlw	150
  4658  0FA4  00A1               	movwf	??_print_error+1
  4659  0FA5  30A6               	movlw	166
  4660  0FA6  00A0               	movwf	??_print_error
  4661  0FA7                     u4437:	
  4662  0FA7  0BA0               	decfsz	??_print_error,f
  4663  0FA8  2FA7               	goto	u4437
  4664  0FA9  0BA1               	decfsz	??_print_error+1,f
  4665  0FAA  2FA7               	goto	u4437
  4666  0FAB  0BA2               	decfsz	??_print_error+2,f
  4667  0FAC  2FA7               	goto	u4437
  4668                           
  4669                           ;Multi_RX_testjig_v1.c: 1454: print_screen("Press START", " to restart test");
  4670  0FAD  3090               	movlw	low ((STR_168+1)| (0+32768))
  4671  0FAE  00F4               	movwf	print_screen@top
  4672  0FAF  3091               	movlw	high ((STR_168+1)| (0+32768))
  4673  0FB0  00F5               	movwf	print_screen@top+1
  4674  0FB1  306A               	movlw	low (STR_170| (0+32768))
  4675  0FB2  00F6               	movwf	print_screen@bottom
  4676  0FB3  3090               	movlw	high (STR_170| (0+32768))
  4677  0FB4  00F7               	movwf	print_screen@bottom+1
  4678  0FB5  275D  3188         	fcall	_print_screen
  4679                           
  4680                           ;Multi_RX_testjig_v1.c: 1456: _delay((unsigned long)((1200)*(16000000/4000.0)));
  4681  0FB7  3019               	movlw	25
  4682  0FB8  0020               	movlb	0	; select bank0
  4683  0FB9  00A2               	movwf	??_print_error+2
  4684  0FBA  305A               	movlw	90
  4685  0FBB  00A1               	movwf	??_print_error+1
  4686  0FBC  30C8               	movlw	200
  4687  0FBD  00A0               	movwf	??_print_error
  4688  0FBE                     u4447:	
  4689  0FBE  0BA0               	decfsz	??_print_error,f
  4690  0FBF  2FBE               	goto	u4447
  4691  0FC0  0BA1               	decfsz	??_print_error+1,f
  4692  0FC1  2FBE               	goto	u4447
  4693  0FC2  0BA2               	decfsz	??_print_error+2,f
  4694  0FC3  2FBE               	goto	u4447
  4695  0FC4  3200               	nop2
  4696  0FC5  2F89               	goto	l3067
  4697  0FC6                     __end_of_print_error:	
  4698  0FC6                     __ptext27:	
  4699 ;; *************** function _ADC_get_val *****************
  4700 ;; Defined at:
  4701 ;;		line 1815 in file "Multi_RX_testjig_v1.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  channel         1    wreg     unsigned char 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  channel         1    3[COMMON] unsigned char 
  4706 ;;  return_val      2    4[COMMON] unsigned int 
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  2    0[COMMON] unsigned int 
  4709 ;; Registers used:
  4710 ;;		wreg
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/5
  4713 ;;		On exit  : 1F/1
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4716 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4717 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4719 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4720 ;;Total ram usage:        6 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    1
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_main
  4727 ;;		_get_30v_current
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           
  4732                           ;psect for function _ADC_get_val
  4733  0FC6                     _ADC_get_val:	
  4734                           
  4735                           ;incstack = 0
  4736                           ; Regs used in _ADC_get_val: [wreg]
  4737                           ;ADC_get_val@channel stored from wreg
  4738  0FC6  00F3               	movwf	ADC_get_val@channel
  4739                           
  4740                           ;Multi_RX_testjig_v1.c: 1817: unsigned int return_val;
  4741                           ;Multi_RX_testjig_v1.c: 1818: GIE = 0;
  4742  0FC7  138B               	bcf	11,7	;volatile
  4743                           
  4744                           ;Multi_RX_testjig_v1.c: 1819: ADCON0 = channel;
  4745  0FC8  0873               	movf	ADC_get_val@channel,w
  4746  0FC9  0021               	movlb	1	; select bank1
  4747  0FCA  009D               	movwf	29	;volatile
  4748  0FCB                     l628:	
  4749                           ;Multi_RX_testjig_v1.c: 1820: while(ADCON0bits.GO_nDONE == 1);
  4750                           
  4751  0FCB  189D               	btfsc	29,1	;volatile
  4752  0FCC  2FCB               	goto	l628
  4753                           
  4754                           ;Multi_RX_testjig_v1.c: 1821: return_val = ADRESH << 8 | ADRESL;
  4755  0FCD  081C               	movf	28,w	;volatile
  4756  0FCE  00F5               	movwf	ADC_get_val@return_val+1
  4757  0FCF  01F4               	clrf	ADC_get_val@return_val
  4758  0FD0  081B               	movf	27,w	;volatile
  4759  0FD1  04F4               	iorwf	ADC_get_val@return_val,f
  4760                           
  4761                           ;Multi_RX_testjig_v1.c: 1822: GIE = 1;
  4762  0FD2  178B               	bsf	11,7	;volatile
  4763                           
  4764                           ;Multi_RX_testjig_v1.c: 1823: return return_val;
  4765  0FD3  0875               	movf	ADC_get_val@return_val+1,w
  4766  0FD4  00F1               	movwf	?_ADC_get_val+1
  4767  0FD5  0874               	movf	ADC_get_val@return_val,w
  4768  0FD6  00F0               	movwf	?_ADC_get_val
  4769  0FD7  0008               	return
  4770  0FD8                     __end_of_ADC_get_val:	
  4771  0FD8                     __ptext8:	
  4772 ;; *************** function _power_supply_set *****************
  4773 ;; Defined at:
  4774 ;;		line 1839 in file "Multi_RX_testjig_v1.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  supply          1    wreg     unsigned char 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  supply          1    0[COMMON] unsigned char 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      void 
  4781 ;; Registers used:
  4782 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/4
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4792 ;;Total ram usage:        1 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    1
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_main
  4799 ;;		_testjig_done
  4800 ;;		_print_error
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           
  4805                           ;psect for function _power_supply_set
  4806  0FD8                     _power_supply_set:	
  4807                           
  4808                           ;incstack = 0
  4809                           ; Regs used in _power_supply_set: [wreg-fsr0h+status,2+status,0]
  4810                           ;power_supply_set@supply stored from wreg
  4811  0FD8  00F0               	movwf	power_supply_set@supply
  4812                           
  4813                           ;Multi_RX_testjig_v1.c: 1841: switch(supply)
  4814  0FD9  2FEE               	goto	l2685
  4815  0FDA                     l638:	
  4816                           ;Multi_RX_testjig_v1.c: 1842: {
  4817                           ;Multi_RX_testjig_v1.c: 1843: case 0:
  4818                           
  4819                           
  4820                           ;Multi_RX_testjig_v1.c: 1844: LATD4 = 1;
  4821  0FDA  0022               	movlb	2	; select bank2
  4822  0FDB  160F               	bsf	15,4	;volatile
  4823                           
  4824                           ;Multi_RX_testjig_v1.c: 1845: LATD5 = 1;
  4825  0FDC  168F               	bsf	15,5	;volatile
  4826                           
  4827                           ;Multi_RX_testjig_v1.c: 1846: LATD6 = 1;
  4828  0FDD  170F               	bsf	15,6	;volatile
  4829                           
  4830                           ;Multi_RX_testjig_v1.c: 1847: break;
  4831  0FDE  0008               	return
  4832  0FDF                     l640:	
  4833                           ;Multi_RX_testjig_v1.c: 1848: case 1:
  4834                           
  4835                           
  4836                           ;Multi_RX_testjig_v1.c: 1849: LATD4 = 1;
  4837  0FDF  0022               	movlb	2	; select bank2
  4838  0FE0  160F               	bsf	15,4	;volatile
  4839                           
  4840                           ;Multi_RX_testjig_v1.c: 1850: LATD5 = 0;
  4841  0FE1  128F               	bcf	15,5	;volatile
  4842                           
  4843                           ;Multi_RX_testjig_v1.c: 1851: LATD6 = 1;
  4844  0FE2  170F               	bsf	15,6	;volatile
  4845                           
  4846                           ;Multi_RX_testjig_v1.c: 1852: break;
  4847  0FE3  0008               	return
  4848  0FE4                     l641:	
  4849                           ;Multi_RX_testjig_v1.c: 1853: case 2:
  4850                           
  4851                           
  4852                           ;Multi_RX_testjig_v1.c: 1854: LATD4 = 0;
  4853  0FE4  0022               	movlb	2	; select bank2
  4854  0FE5  120F               	bcf	15,4	;volatile
  4855                           
  4856                           ;Multi_RX_testjig_v1.c: 1855: LATD5 = 0;
  4857  0FE6  128F               	bcf	15,5	;volatile
  4858                           
  4859                           ;Multi_RX_testjig_v1.c: 1856: LATD6 = 0;
  4860  0FE7  130F               	bcf	15,6	;volatile
  4861                           
  4862                           ;Multi_RX_testjig_v1.c: 1857: break;
  4863  0FE8  0008               	return
  4864  0FE9                     l642:	
  4865                           ;Multi_RX_testjig_v1.c: 1858: case 3:
  4866                           
  4867                           
  4868                           ;Multi_RX_testjig_v1.c: 1859: LATD4 = 0;
  4869  0FE9  0022               	movlb	2	; select bank2
  4870  0FEA  120F               	bcf	15,4	;volatile
  4871                           
  4872                           ;Multi_RX_testjig_v1.c: 1860: LATD5 = 0;
  4873  0FEB  128F               	bcf	15,5	;volatile
  4874                           
  4875                           ;Multi_RX_testjig_v1.c: 1861: LATD6 = 1;
  4876  0FEC  170F               	bsf	15,6	;volatile
  4877                           
  4878                           ;Multi_RX_testjig_v1.c: 1862: break;
  4879  0FED  0008               	return
  4880  0FEE                     l2685:	
  4881  0FEE  0870               	movf	power_supply_set@supply,w
  4882                           
  4883                           ; Switch size 1, requested type "speed"
  4884                           ; Number of cases is 4, Range of values is 0 to 3
  4885                           ; switch strategies available:
  4886                           ; Name         Instructions Cycles
  4887                           ; direct_byte           14     6 (fixed)
  4888                           ; simple_byte           13     7 (average)
  4889                           ; jumptable            260     6 (fixed)
  4890                           ;	Chosen strategy is direct_byte
  4891  0FEF  0084               	movwf	4
  4892  0FF0  3004               	movlw	4
  4893  0FF1  0204               	subwf	4,w
  4894  0FF2  1803               	skipnc
  4895  0FF3  0008               	return
  4896  0FF4  3186               	movlp	high S3937
  4897  0FF5  3504               	lslf	4,w
  4898  0FF6  3E7A               	addlw	low S3937
  4899  0FF7  0082               	movwf	2
  4900  0FF8  0008               	return
  4901  0FF9                     __end_of_power_supply_set:	
  4902  0FF9                     __ptext20:	
  4903 ;; *************** function _init_ADC *****************
  4904 ;; Defined at:
  4905 ;;		line 1808 in file "Multi_RX_testjig_v1.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;		None
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;		None
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		wreg
  4914 ;; Tracked objects:
  4915 ;;		On entry : B1F/8
  4916 ;;		On exit  : B1F/1
  4917 ;;		Unchanged: B00/0
  4918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4923 ;;Total ram usage:        0 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:    1
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_main
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           
  4934                           ;psect for function _init_ADC
  4935  0FF9                     _init_ADC:	
  4936                           
  4937                           ;Multi_RX_testjig_v1.c: 1810: FVRCON = 0b10000011;
  4938                           
  4939                           ;incstack = 0
  4940                           ; Regs used in _init_ADC: [wreg]
  4941  0FF9  3083               	movlw	131
  4942  0FFA  0022               	movlb	2	; select bank2
  4943  0FFB  0097               	movwf	23	;volatile
  4944                           
  4945                           ;Multi_RX_testjig_v1.c: 1812: ADCON1 = 0b10100011;
  4946  0FFC  30A3               	movlw	163
  4947  0FFD  0021               	movlb	1	; select bank1
  4948  0FFE  009E               	movwf	30	;volatile
  4949  0FFF  0008               	return
  4950  1000                     __end_of_init_ADC:	
  4951                           
  4952                           	psect	text1
  4953  0520                     __ptext1:	
  4954 ;; *************** function _testjig_done *****************
  4955 ;; Defined at:
  4956 ;;		line 923 in file "Multi_RX_testjig_v1.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  state           1    wreg     unsigned char 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;  state           1   11[COMMON] unsigned char 
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  1    wreg      void 
  4963 ;; Registers used:
  4964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/1
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4972 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4973 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4974 ;;Total ram usage:        4 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; Hardware stack levels required when called:    4
  4977 ;; This function calls:
  4978 ;;		_buzz_one
  4979 ;;		_debug_fast_tx
  4980 ;;		_power_supply_set
  4981 ;;		_print_screen
  4982 ;; This function is called by:
  4983 ;;		_main
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           
  4988                           ;psect for function _testjig_done
  4989  0520                     _testjig_done:	
  4990                           
  4991                           ;incstack = 0
  4992                           ; Regs used in _testjig_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4993                           ;testjig_done@state stored from wreg
  4994  0520  00FB               	movwf	testjig_done@state
  4995  0521                     l438:	
  4996                           ;Multi_RX_testjig_v1.c: 925: while(1)
  4997                           
  4998                           
  4999                           ;Multi_RX_testjig_v1.c: 926: {
  5000                           ;Multi_RX_testjig_v1.c: 927: power_supply_set(3);
  5001  0521  3003               	movlw	3
  5002  0522  318F  27D8  3185   	fcall	_power_supply_set
  5003                           
  5004                           ;Multi_RX_testjig_v1.c: 928: LATA7 = 0;
  5005  0525  0022               	movlb	2	; select bank2
  5006  0526  138C               	bcf	12,7	;volatile
  5007                           
  5008                           ;Multi_RX_testjig_v1.c: 929: LATB5 = 0;
  5009  0527  128D               	bcf	13,5	;volatile
  5010                           
  5011                           ;Multi_RX_testjig_v1.c: 930: LATA6 = 0;
  5012  0528  130C               	bcf	12,6	;volatile
  5013                           
  5014                           ;Multi_RX_testjig_v1.c: 931: debug_fast_tx(11110);
  5015  0529  3066               	movlw	102
  5016  052A  00F0               	movwf	debug_fast_tx@data
  5017  052B  302B               	movlw	43
  5018  052C  00F1               	movwf	debug_fast_tx@data+1
  5019  052D  25E5  3185         	fcall	_debug_fast_tx
  5020                           
  5021                           ;Multi_RX_testjig_v1.c: 932: debug_fast_tx(state);
  5022  052F  087B               	movf	testjig_done@state,w
  5023  0530  00F0               	movwf	debug_fast_tx@data
  5024  0531  01F1               	clrf	debug_fast_tx@data+1
  5025  0532  25E5  3185         	fcall	_debug_fast_tx
  5026                           
  5027                           ;Multi_RX_testjig_v1.c: 933: switch(state)
  5028  0534  2DA3               	goto	l3041
  5029  0535                     l3015:	
  5030                           
  5031                           ;Multi_RX_testjig_v1.c: 936: print_screen("Testjig Pass", " Remove board");
  5032  0535  30B6               	movlw	low (STR_159| (0+32768))
  5033  0536  00F4               	movwf	print_screen@top
  5034  0537  3091               	movlw	high (STR_159| (0+32768))
  5035  0538  00F5               	movwf	print_screen@top+1
  5036  0539  3023               	movlw	low (STR_160| (0+32768))
  5037  053A  00F6               	movwf	print_screen@bottom
  5038  053B  3091               	movlw	high (STR_160| (0+32768))
  5039  053C  00F7               	movwf	print_screen@bottom+1
  5040  053D  318F  275D  3185   	fcall	_print_screen
  5041                           
  5042                           ;Multi_RX_testjig_v1.c: 937: debug_fast_tx(11111);
  5043  0540  3067               	movlw	103
  5044  0541  00F0               	movwf	debug_fast_tx@data
  5045  0542  302B               	movlw	43
  5046  0543  00F1               	movwf	debug_fast_tx@data+1
  5047  0544  25E5  3185         	fcall	_debug_fast_tx
  5048                           
  5049                           ;Multi_RX_testjig_v1.c: 938: buzz_one(100);
  5050  0546  3064               	movlw	100
  5051  0547  00F0               	movwf	buzz_one@time
  5052  0548  01F1               	clrf	buzz_one@time+1
  5053  0549  2612  3185         	fcall	_buzz_one
  5054                           
  5055                           ;Multi_RX_testjig_v1.c: 939: _delay((unsigned long)((200)*(16000000/4000.0)));
  5056  054B  3005               	movlw	5
  5057  054C  00FA               	movwf	??_testjig_done+2
  5058  054D  300F               	movlw	15
  5059  054E  00F9               	movwf	??_testjig_done+1
  5060  054F  30F4               	movlw	244
  5061  0550  00F8               	movwf	??_testjig_done
  5062  0551                     u4377:	
  5063  0551  0BF8               	decfsz	??_testjig_done,f
  5064  0552  2D51               	goto	u4377
  5065  0553  0BF9               	decfsz	??_testjig_done+1,f
  5066  0554  2D51               	goto	u4377
  5067  0555  0BFA               	decfsz	??_testjig_done+2,f
  5068  0556  2D51               	goto	u4377
  5069                           
  5070                           ;Multi_RX_testjig_v1.c: 940: buzz_one(100);
  5071  0557  3064               	movlw	100
  5072  0558  00F0               	movwf	buzz_one@time
  5073  0559  01F1               	clrf	buzz_one@time+1
  5074  055A  2612  3185         	fcall	_buzz_one
  5075  055C                     l441:	
  5076                           ;Multi_RX_testjig_v1.c: 941: while(RF3 == 0);
  5077                           
  5078  055C  0025               	movlb	5	; select bank5
  5079  055D  1D8C               	btfss	12,3	;volatile
  5080  055E  2D5C               	goto	l441
  5081                           
  5082                           ;Multi_RX_testjig_v1.c: 942: _delay((unsigned long)((100)*(16000000/4000.0)));
  5083  055F  3003               	movlw	3
  5084  0560  00FA               	movwf	??_testjig_done+2
  5085  0561  3008               	movlw	8
  5086  0562  00F9               	movwf	??_testjig_done+1
  5087  0563  3078               	movlw	120
  5088  0564  00F8               	movwf	??_testjig_done
  5089  0565                     u4387:	
  5090  0565  0BF8               	decfsz	??_testjig_done,f
  5091  0566  2D65               	goto	u4387
  5092  0567  0BF9               	decfsz	??_testjig_done+1,f
  5093  0568  2D65               	goto	u4387
  5094  0569  0BFA               	decfsz	??_testjig_done+2,f
  5095  056A  2D65               	goto	u4387
  5096  056B  2DA0               	goto	l3037
  5097  056C                     l3027:	
  5098                           ;Multi_RX_testjig_v1.c: 944: break;
  5099                           
  5100                           ;Multi_RX_testjig_v1.c: 943: state = 0xFF;
  5101                           
  5102                           
  5103                           ;Multi_RX_testjig_v1.c: 946: debug_fast_tx(11112);
  5104  056C  3068               	movlw	104
  5105  056D  00F0               	movwf	debug_fast_tx@data
  5106  056E  302B               	movlw	43
  5107  056F  00F1               	movwf	debug_fast_tx@data+1
  5108  0570  25E5               	fcall	_debug_fast_tx
  5109                           
  5110                           ;Multi_RX_testjig_v1.c: 947: print_screen("Multi_RX", "Testjig");
  5111  0571  30CC               	movlw	low (STR_1| (0+32768))
  5112  0572  00F4               	movwf	print_screen@top
  5113  0573  3092               	movlw	high (STR_1| (0+32768))
  5114  0574  00F5               	movwf	print_screen@top+1
  5115  0575  302F               	movlw	low ((STR_165+9)| (0+32768))
  5116  0576  00F6               	movwf	print_screen@bottom
  5117  0577  3090               	movlw	high ((STR_165+9)| (0+32768))
  5118  0578  00F7               	movwf	print_screen@bottom+1
  5119  0579  318F  275D  3185   	fcall	_print_screen
  5120                           
  5121                           ;Multi_RX_testjig_v1.c: 948: _delay((unsigned long)((2000)*(16000000/4000.0)));
  5122  057C  3029               	movlw	41
  5123  057D  00FA               	movwf	??_testjig_done+2
  5124  057E  3096               	movlw	150
  5125  057F  00F9               	movwf	??_testjig_done+1
  5126  0580  30A6               	movlw	166
  5127  0581  00F8               	movwf	??_testjig_done
  5128  0582                     u4397:	
  5129  0582  0BF8               	decfsz	??_testjig_done,f
  5130  0583  2D82               	goto	u4397
  5131  0584  0BF9               	decfsz	??_testjig_done+1,f
  5132  0585  2D82               	goto	u4397
  5133  0586  0BFA               	decfsz	??_testjig_done+2,f
  5134  0587  2D82               	goto	u4397
  5135                           
  5136                           ;Multi_RX_testjig_v1.c: 949: print_screen("Testjig Power-up", "wait...");
  5137  0588  3048               	movlw	low (STR_163| (0+32768))
  5138  0589  00F4               	movwf	print_screen@top
  5139  058A  3090               	movlw	high (STR_163| (0+32768))
  5140  058B  00F5               	movwf	print_screen@top+1
  5141  058C  30DE               	movlw	low (STR_164| (0+32768))
  5142  058D  00F6               	movwf	print_screen@bottom
  5143  058E  3092               	movlw	high (STR_164| (0+32768))
  5144  058F  00F7               	movwf	print_screen@bottom+1
  5145  0590  318F  275D  3185   	fcall	_print_screen
  5146                           
  5147                           ;Multi_RX_testjig_v1.c: 950: _delay((unsigned long)((3000)*(16000000/4000.0)));
  5148  0593  303D               	movlw	61
  5149  0594  00FA               	movwf	??_testjig_done+2
  5150  0595  30E1               	movlw	225
  5151  0596  00F9               	movwf	??_testjig_done+1
  5152  0597  307A               	movlw	122
  5153  0598  00F8               	movwf	??_testjig_done
  5154  0599                     u4407:	
  5155  0599  0BF8               	decfsz	??_testjig_done,f
  5156  059A  2D99               	goto	u4407
  5157  059B  0BF9               	decfsz	??_testjig_done+1,f
  5158  059C  2D99               	goto	u4407
  5159  059D  0BFA               	decfsz	??_testjig_done+2,f
  5160  059E  2D99               	goto	u4407
  5161  059F  3200               	nop2
  5162  05A0                     l3037:	
  5163                           
  5164                           ;Multi_RX_testjig_v1.c: 951: state = 0xFF;
  5165  05A0  30FF               	movlw	255
  5166  05A1  00FB               	movwf	testjig_done@state
  5167                           
  5168                           ;Multi_RX_testjig_v1.c: 952: break;
  5169  05A2  2DAB               	goto	l3043
  5170  05A3                     l3041:	
  5171  05A3  087B               	movf	testjig_done@state,w
  5172                           
  5173                           ; Switch size 1, requested type "speed"
  5174                           ; Number of cases is 2, Range of values is 1 to 2
  5175                           ; switch strategies available:
  5176                           ; Name         Instructions Cycles
  5177                           ; simple_byte            7     4 (average)
  5178                           ; direct_byte           13     9 (fixed)
  5179                           ; jumptable            263     9 (fixed)
  5180                           ;	Chosen strategy is simple_byte
  5181  05A4  3A01               	xorlw	1	; case 1
  5182  05A5  1903               	skipnz
  5183  05A6  2D35               	goto	l3015
  5184  05A7  3A03               	xorlw	3	; case 2
  5185  05A8  1903               	skipnz
  5186  05A9  2D6C               	goto	l3027
  5187  05AA  2DAB               	goto	l3043
  5188  05AB                     l3043:	
  5189                           
  5190                           ;Multi_RX_testjig_v1.c: 954: debug_fast_tx(11113);
  5191  05AB  3069               	movlw	105
  5192  05AC  00F0               	movwf	debug_fast_tx@data
  5193  05AD  302B               	movlw	43
  5194  05AE  00F1               	movwf	debug_fast_tx@data+1
  5195  05AF  25E5               	fcall	_debug_fast_tx
  5196                           
  5197                           ;Multi_RX_testjig_v1.c: 955: print_screen("Multi_RX Testjig", "-> Insert PCB");
  5198  05B0  3026               	movlw	low (STR_165| (0+32768))
  5199  05B1  00F4               	movwf	print_screen@top
  5200  05B2  3090               	movlw	high (STR_165| (0+32768))
  5201  05B3  00F5               	movwf	print_screen@top+1
  5202  05B4  3015               	movlw	low (STR_4| (0+32768))
  5203  05B5  00F6               	movwf	print_screen@bottom
  5204  05B6  3091               	movlw	high (STR_4| (0+32768))
  5205  05B7  00F7               	movwf	print_screen@bottom+1
  5206  05B8  318F  275D  3185   	fcall	_print_screen
  5207  05BB                     l446:	
  5208                           ;Multi_RX_testjig_v1.c: 956: while(RF3 == 1);
  5209                           
  5210  05BB  0025               	movlb	5	; select bank5
  5211  05BC  198C               	btfsc	12,3	;volatile
  5212  05BD  2DBB               	goto	l446
  5213                           
  5214                           ;Multi_RX_testjig_v1.c: 957: _delay((unsigned long)((100)*(16000000/4000.0)));
  5215  05BE  3003               	movlw	3
  5216  05BF  00FA               	movwf	??_testjig_done+2
  5217  05C0  3008               	movlw	8
  5218  05C1  00F9               	movwf	??_testjig_done+1
  5219  05C2  3078               	movlw	120
  5220  05C3  00F8               	movwf	??_testjig_done
  5221  05C4                     u4417:	
  5222  05C4  0BF8               	decfsz	??_testjig_done,f
  5223  05C5  2DC4               	goto	u4417
  5224  05C6  0BF9               	decfsz	??_testjig_done+1,f
  5225  05C7  2DC4               	goto	u4417
  5226  05C8  0BFA               	decfsz	??_testjig_done+2,f
  5227  05C9  2DC4               	goto	u4417
  5228                           
  5229                           ;Multi_RX_testjig_v1.c: 958: print_screen("Multi_RX Testjig", " Press START");
  5230  05CA  3026               	movlw	low (STR_165| (0+32768))
  5231  05CB  00F4               	movwf	print_screen@top
  5232  05CC  3090               	movlw	high (STR_165| (0+32768))
  5233  05CD  00F5               	movwf	print_screen@top+1
  5234  05CE  308F               	movlw	low (STR_168| (0+32768))
  5235  05CF  00F6               	movwf	print_screen@bottom
  5236  05D0  3091               	movlw	high (STR_168| (0+32768))
  5237  05D1  00F7               	movwf	print_screen@bottom+1
  5238  05D2  318F  275D  3185   	fcall	_print_screen
  5239  05D5                     l449:	
  5240                           ;Multi_RX_testjig_v1.c: 959: while(RF3 == 0);
  5241                           
  5242  05D5  0025               	movlb	5	; select bank5
  5243  05D6  1D8C               	btfss	12,3	;volatile
  5244  05D7  2DD5               	goto	l449
  5245                           
  5246                           ;Multi_RX_testjig_v1.c: 960: _delay((unsigned long)((100)*(16000000/4000.0)));
  5247  05D8  3003               	movlw	3
  5248  05D9  00FA               	movwf	??_testjig_done+2
  5249  05DA  3008               	movlw	8
  5250  05DB  00F9               	movwf	??_testjig_done+1
  5251  05DC  3078               	movlw	120
  5252  05DD  00F8               	movwf	??_testjig_done
  5253  05DE                     u4427:	
  5254  05DE  0BF8               	decfsz	??_testjig_done,f
  5255  05DF  2DDE               	goto	u4427
  5256  05E0  0BF9               	decfsz	??_testjig_done+1,f
  5257  05E1  2DDE               	goto	u4427
  5258  05E2  0BFA               	decfsz	??_testjig_done+2,f
  5259  05E3  2DDE               	goto	u4427
  5260  05E4  2D21               	goto	l438
  5261  05E5                     __end_of_testjig_done:	
  5262  05E5                     __ptext9:	
  5263 ;; *************** function _debug_fast_tx *****************
  5264 ;; Defined at:
  5265 ;;		line 1953 in file "Multi_RX_testjig_v1.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  data            2    0[COMMON] unsigned int 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  i               1    2[COMMON] unsigned char 
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      void 
  5272 ;; Registers used:
  5273 ;;		wreg, status,2, status,0
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/2
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5280 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5282 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5283 ;;Total ram usage:        3 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    1
  5286 ;; This function calls:
  5287 ;;		Nothing
  5288 ;; This function is called by:
  5289 ;;		_main
  5290 ;;		_testjig_done
  5291 ;;		_print_error
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           
  5296                           ;psect for function _debug_fast_tx
  5297  05E5                     _debug_fast_tx:	
  5298                           
  5299                           ;Multi_RX_testjig_v1.c: 1955: GIE = 0;
  5300                           
  5301                           ;incstack = 0
  5302                           ; Regs used in _debug_fast_tx: [wreg+status,2+status,0]
  5303  05E5  138B               	bcf	11,7	;volatile
  5304                           
  5305                           ;Multi_RX_testjig_v1.c: 1956: LATD2 = 0;
  5306  05E6  0022               	movlb	2	; select bank2
  5307  05E7  110F               	bcf	15,2	;volatile
  5308                           
  5309                           ;Multi_RX_testjig_v1.c: 1962: __nop();
  5310  05E8  0000               	nop
  5311                           
  5312                           ;Multi_RX_testjig_v1.c: 1963: __nop();
  5313  05E9  0000               	nop
  5314                           
  5315                           ;Multi_RX_testjig_v1.c: 1964: __nop();
  5316  05EA  0000               	nop
  5317                           
  5318                           ;Multi_RX_testjig_v1.c: 1965: __nop();
  5319  05EB  0000               	nop
  5320                           
  5321                           ;Multi_RX_testjig_v1.c: 1966: __nop();
  5322  05EC  0000               	nop
  5323                           
  5324                           ;Multi_RX_testjig_v1.c: 1967: __nop();
  5325  05ED  0000               	nop
  5326                           
  5327                           ;Multi_RX_testjig_v1.c: 1968: __nop();
  5328  05EE  0000               	nop
  5329                           
  5330                           ;Multi_RX_testjig_v1.c: 1969: __nop();
  5331  05EF  0000               	nop
  5332                           
  5333                           ;Multi_RX_testjig_v1.c: 1970: __nop();
  5334  05F0  0000               	nop
  5335                           
  5336                           ;Multi_RX_testjig_v1.c: 1971: unsigned char i;
  5337                           ;Multi_RX_testjig_v1.c: 1972: for(i = 0; i < 16; i++)
  5338  05F1  01F2               	clrf	debug_fast_tx@i
  5339  05F2                     l675:	
  5340                           
  5341                           ;Multi_RX_testjig_v1.c: 1973: {
  5342                           ;Multi_RX_testjig_v1.c: 1974: LATD2 = data & 0x01;
  5343  05F2  1C70               	btfss	debug_fast_tx@data,0
  5344  05F3  2DF7               	goto	u2290
  5345  05F4  0022               	movlb	2	; select bank2
  5346  05F5  150F               	bsf	15,2	;volatile
  5347  05F6  2DF9               	goto	l2677
  5348  05F7                     u2290:	
  5349  05F7  0022               	movlb	2	; select bank2
  5350  05F8  110F               	bcf	15,2	;volatile
  5351  05F9                     l2677:	
  5352  05F9  3010               	movlw	16
  5353                           
  5354                           ;Multi_RX_testjig_v1.c: 1975: data = data >> 1;
  5355  05FA  36F1               	lsrf	debug_fast_tx@data+1,f
  5356  05FB  0CF0               	rrf	debug_fast_tx@data,f
  5357  05FC  0AF2               	incf	debug_fast_tx@i,f
  5358  05FD  0272               	subwf	debug_fast_tx@i,w
  5359  05FE  1C03               	skipc
  5360  05FF  2DF2               	goto	l675
  5361                           
  5362                           ;Multi_RX_testjig_v1.c: 1976: }
  5363                           ;Multi_RX_testjig_v1.c: 1977: __nop();
  5364  0600  0000               	nop
  5365                           
  5366                           ;Multi_RX_testjig_v1.c: 1978: __nop();
  5367  0601  0000               	nop
  5368                           
  5369                           ;Multi_RX_testjig_v1.c: 1979: __nop();
  5370  0602  0000               	nop
  5371                           
  5372                           ;Multi_RX_testjig_v1.c: 1980: __nop();
  5373  0603  0000               	nop
  5374                           
  5375                           ;Multi_RX_testjig_v1.c: 1981: __nop();
  5376  0604  0000               	nop
  5377                           
  5378                           ;Multi_RX_testjig_v1.c: 1982: __nop();
  5379  0605  0000               	nop
  5380                           
  5381                           ;Multi_RX_testjig_v1.c: 1983: LATD2 = 1;
  5382  0606  0022               	movlb	2	; select bank2
  5383  0607  150F               	bsf	15,2	;volatile
  5384                           
  5385                           ;Multi_RX_testjig_v1.c: 1984: __nop();
  5386  0608  0000               	nop
  5387                           
  5388                           ;Multi_RX_testjig_v1.c: 1985: __nop();
  5389  0609  0000               	nop
  5390                           
  5391                           ;Multi_RX_testjig_v1.c: 1986: __nop();
  5392  060A  0000               	nop
  5393                           
  5394                           ;Multi_RX_testjig_v1.c: 1987: __nop();
  5395  060B  0000               	nop
  5396                           
  5397                           ;Multi_RX_testjig_v1.c: 1988: __nop();
  5398  060C  0000               	nop
  5399                           
  5400                           ;Multi_RX_testjig_v1.c: 1989: __nop();
  5401  060D  0000               	nop
  5402                           
  5403                           ;Multi_RX_testjig_v1.c: 1990: __nop();
  5404  060E  0000               	nop
  5405                           
  5406                           ;Multi_RX_testjig_v1.c: 1991: __nop();
  5407  060F  0000               	nop
  5408                           
  5409                           ;Multi_RX_testjig_v1.c: 1992: GIE = 1;
  5410  0610  178B               	bsf	11,7	;volatile
  5411  0611  0008               	return
  5412  0612                     __end_of_debug_fast_tx:	
  5413  0612                     __ptext10:	
  5414 ;; *************** function _buzz_one *****************
  5415 ;; Defined at:
  5416 ;;		line 964 in file "Multi_RX_testjig_v1.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;  time            2    0[COMMON] unsigned int 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;		None
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  1    wreg      void 
  5423 ;; Registers used:
  5424 ;;		wreg
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 1F/2
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5433 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5434 ;;Total ram usage:        2 bytes
  5435 ;; Hardware stack levels used:    1
  5436 ;; Hardware stack levels required when called:    1
  5437 ;; This function calls:
  5438 ;;		Nothing
  5439 ;; This function is called by:
  5440 ;;		_main
  5441 ;;		_testjig_done
  5442 ;;		_print_error
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           
  5447                           ;psect for function _buzz_one
  5448  0612                     _buzz_one:	
  5449                           
  5450                           ;Multi_RX_testjig_v1.c: 966: buzz_timer = time;
  5451                           
  5452                           ;incstack = 0
  5453                           ; Regs used in _buzz_one: [wreg]
  5454  0612  0871               	movf	buzz_one@time+1,w
  5455  0613  0020               	movlb	0	; select bank0
  5456  0614  00E8               	movwf	_buzz_timer+1	;volatile
  5457  0615  0870               	movf	buzz_one@time,w
  5458  0616  00E7               	movwf	_buzz_timer	;volatile
  5459                           
  5460                           ;Multi_RX_testjig_v1.c: 967: LATC5 = 1;
  5461  0617  0022               	movlb	2	; select bank2
  5462  0618  168E               	bsf	14,5	;volatile
  5463  0619  0008               	return
  5464  061A                     __end_of_buzz_one:	
  5465                           
  5466                           	psect	swtext1
  5467  067A                     __pswtext1:	
  5468  067A                     S3937:	
  5469  067A  318F  2FDA         	ljmp	l638
  5470  067C  318F  2FDF         	ljmp	l640
  5471  067E  318F  2FE4         	ljmp	l641
  5472  0680  318F  2FE9         	ljmp	l642
  5473                           
  5474                           	psect	text18
  5475  0642                     __ptext18:	
  5476 ;; *************** function _init_i2c *****************
  5477 ;; Defined at:
  5478 ;;		line 1797 in file "Multi_RX_testjig_v1.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;		None
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;		None
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  1    wreg      void 
  5485 ;; Registers used:
  5486 ;;		wreg
  5487 ;; Tracked objects:
  5488 ;;		On entry : 1F/0
  5489 ;;		On exit  : 1F/4
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5494 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5495 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5496 ;;Total ram usage:        3 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:    1
  5499 ;; This function calls:
  5500 ;;		Nothing
  5501 ;; This function is called by:
  5502 ;;		_main
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           
  5507                           ;psect for function _init_i2c
  5508  0642                     _init_i2c:	
  5509                           
  5510                           ;Multi_RX_testjig_v1.c: 1799: RA5 = 1;
  5511                           
  5512                           ;incstack = 0
  5513                           ; Regs used in _init_i2c: [wreg]
  5514  0642  168C               	bsf	12,5	;volatile
  5515                           
  5516                           ;Multi_RX_testjig_v1.c: 1800: _delay((unsigned long)((200)*(16000000/4000.0)));
  5517  0643  3005               	movlw	5
  5518  0644  00F2               	movwf	??_init_i2c+2
  5519  0645  300F               	movlw	15
  5520  0646  00F1               	movwf	??_init_i2c+1
  5521  0647  30F4               	movlw	244
  5522  0648  00F0               	movwf	??_init_i2c
  5523  0649                     u4497:	
  5524  0649  0BF0               	decfsz	??_init_i2c,f
  5525  064A  2E49               	goto	u4497
  5526  064B  0BF1               	decfsz	??_init_i2c+1,f
  5527  064C  2E49               	goto	u4497
  5528  064D  0BF2               	decfsz	??_init_i2c+2,f
  5529  064E  2E49               	goto	u4497
  5530                           
  5531                           ;Multi_RX_testjig_v1.c: 1801: TRISC3 = 1;
  5532  064F  0021               	movlb	1	; select bank1
  5533  0650  158E               	bsf	14,3	;volatile
  5534                           
  5535                           ;Multi_RX_testjig_v1.c: 1802: TRISC4 = 1;
  5536  0651  160E               	bsf	14,4	;volatile
  5537                           
  5538                           ;Multi_RX_testjig_v1.c: 1803: SSP1STAT |= 0x80;
  5539  0652  0024               	movlb	4	; select bank4
  5540  0653  1794               	bsf	20,7	;volatile
  5541                           
  5542                           ;Multi_RX_testjig_v1.c: 1804: SSP1CON1 = 0x28;
  5543  0654  3028               	movlw	40
  5544  0655  0095               	movwf	21	;volatile
  5545                           
  5546                           ;Multi_RX_testjig_v1.c: 1805: SSP1ADD = 0x14;
  5547  0656  3014               	movlw	20
  5548  0657  0092               	movwf	18	;volatile
  5549  0658  0008               	return
  5550  0659                     __end_of_init_i2c:	
  5551                           
  5552                           	psect	text19
  5553  0659                     __ptext19:	
  5554 ;; *************** function _init_current_sink *****************
  5555 ;; Defined at:
  5556 ;;		line 1826 in file "Multi_RX_testjig_v1.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;		None
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      void 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2
  5565 ;; Tracked objects:
  5566 ;;		On entry : B1F/1
  5567 ;;		On exit  : B1F/C
  5568 ;;		Unchanged: B00/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5574 ;;Total ram usage:        0 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    1
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_main
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           
  5585                           ;psect for function _init_current_sink
  5586  0659                     _init_current_sink:	
  5587                           
  5588                           ;Multi_RX_testjig_v1.c: 1828: T2CON = 0b00000110;
  5589                           
  5590                           ;incstack = 0
  5591                           ; Regs used in _init_current_sink: [wreg+status,2]
  5592  0659  3006               	movlw	6
  5593  065A  0020               	movlb	0	; select bank0
  5594  065B  009C               	movwf	28	;volatile
  5595                           
  5596                           ;Multi_RX_testjig_v1.c: 1829: PR2 = 0xFA;
  5597  065C  30FA               	movlw	250
  5598  065D  009B               	movwf	27	;volatile
  5599                           
  5600                           ;Multi_RX_testjig_v1.c: 1830: PIE1bits.TMR2IE = 1;
  5601  065E  0021               	movlb	1	; select bank1
  5602  065F  1491               	bsf	17,1	;volatile
  5603                           
  5604                           ;Multi_RX_testjig_v1.c: 1832: T8CON = 0b00000100;
  5605  0660  3004               	movlw	4
  5606  0661  002B               	movlb	11	; select bank11
  5607  0662  0097               	movwf	23	;volatile
  5608                           
  5609                           ;Multi_RX_testjig_v1.c: 1833: PR8 = 0xFF;
  5610  0663  30FF               	movlw	255
  5611  0664  0096               	movwf	22	;volatile
  5612                           
  5613                           ;Multi_RX_testjig_v1.c: 1834: CCP9CON = 0b00001100;
  5614  0665  300C               	movlw	12
  5615  0666  002C               	movlb	12	; select bank12
  5616  0667  009C               	movwf	28	;volatile
  5617                           
  5618                           ;Multi_RX_testjig_v1.c: 1835: CCPTMRS2 = 0b00000001;
  5619  0668  3001               	movlw	1
  5620  0669  0025               	movlb	5	; select bank5
  5621  066A  009F               	movwf	31	;volatile
  5622                           
  5623                           ;Multi_RX_testjig_v1.c: 1836: CCPR9L = 0x00;
  5624  066B  002C               	movlb	12	; select bank12
  5625  066C  019A               	clrf	26	;volatile
  5626  066D  0008               	return
  5627  066E                     __end_of_init_current_sink:	
  5628                           
  5629                           	psect	text21
  5630  0317                     __ptext21:	
  5631 ;; *************** function _get_30v_current *****************
  5632 ;; Defined at:
  5633 ;;		line 1866 in file "Multi_RX_testjig_v1.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;		None
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;  temp            2   39[BANK0 ] unsigned int 
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  2   37[BANK0 ] unsigned int 
  5640 ;; Registers used:
  5641 ;;		wreg, status,2, status,0, pclath, cstack
  5642 ;; Tracked objects:
  5643 ;;		On entry : 1B/1
  5644 ;;		On exit  : 1F/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5647 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5648 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5650 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5651 ;;Total ram usage:        4 bytes
  5652 ;; Hardware stack levels used:    1
  5653 ;; Hardware stack levels required when called:    3
  5654 ;; This function calls:
  5655 ;;		_ADC_get_val
  5656 ;;		___ftadd
  5657 ;;		___ftmul
  5658 ;;		___fttol
  5659 ;;		___lwtoft
  5660 ;; This function is called by:
  5661 ;;		_main
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           
  5666                           ;psect for function _get_30v_current
  5667  0317                     _get_30v_current:	
  5668                           
  5669                           ;Multi_RX_testjig_v1.c: 1868: unsigned int temp;
  5670                           ;Multi_RX_testjig_v1.c: 1869: temp = ADC_get_val(0b01010011);
  5671                           
  5672                           ;incstack = 0
  5673                           ; Regs used in _get_30v_current: [wreg+status,2+status,0+pclath+cstack]
  5674  0317  3053               	movlw	83
  5675  0318  318F  27C6  3183   	fcall	_ADC_get_val
  5676  031B  0871               	movf	?_ADC_get_val+1,w
  5677  031C  0020               	movlb	0	; select bank0
  5678  031D  00C8               	movwf	get_30v_current@temp+1
  5679  031E  0870               	movf	?_ADC_get_val,w
  5680  031F  00C7               	movwf	get_30v_current@temp
  5681                           
  5682                           ;Multi_RX_testjig_v1.c: 1870: if(temp > 4)
  5683  0320  3000               	movlw	0
  5684  0321  0248               	subwf	get_30v_current@temp+1,w
  5685  0322  3005               	movlw	5
  5686  0323  1903               	skipnz
  5687  0324  0247               	subwf	get_30v_current@temp,w
  5688  0325  1C03               	skipc
  5689  0326  2B54               	goto	l3137
  5690                           
  5691                           ;Multi_RX_testjig_v1.c: 1871: return ( temp*3.4) - 16;
  5692  0327  0848               	movf	get_30v_current@temp+1,w
  5693  0328  00F9               	movwf	___lwtoft@c+1
  5694  0329  0847               	movf	get_30v_current@temp,w
  5695  032A  00F8               	movwf	___lwtoft@c
  5696  032B  24B3  3183         	fcall	___lwtoft
  5697  032D  0878               	movf	?___lwtoft,w
  5698  032E  00A3               	movwf	___ftmul@f2
  5699  032F  0879               	movf	?___lwtoft+1,w
  5700  0330  00A4               	movwf	___ftmul@f2+1
  5701  0331  087A               	movf	?___lwtoft+2,w
  5702  0332  00A5               	movwf	___ftmul@f2+2
  5703  0333  309A               	movlw	154
  5704  0334  00A0               	movwf	___ftmul@f1
  5705  0335  3059               	movlw	89
  5706  0336  00A1               	movwf	___ftmul@f1+1
  5707  0337  3040               	movlw	64
  5708  0338  00A2               	movwf	___ftmul@f1+2
  5709  0339  240B  3183         	fcall	___ftmul
  5710  033B  0820               	movf	?___ftmul,w
  5711  033C  00AF               	movwf	___ftadd@f2
  5712  033D  0821               	movf	?___ftmul+1,w
  5713  033E  00B0               	movwf	___ftadd@f2+1
  5714  033F  0822               	movf	?___ftmul+2,w
  5715  0340  00B1               	movwf	___ftadd@f2+2
  5716  0341  3080               	movlw	128
  5717  0342  01AC               	clrf	___ftadd@f1
  5718  0343  00AD               	movwf	___ftadd@f1+1
  5719  0344  30C1               	movlw	193
  5720  0345  00AE               	movwf	___ftadd@f1+2
  5721  0346  2357  3183         	fcall	___ftadd
  5722  0348  082C               	movf	?___ftadd,w
  5723  0349  00B8               	movwf	___fttol@f1
  5724  034A  082D               	movf	?___ftadd+1,w
  5725  034B  00B9               	movwf	___fttol@f1+1
  5726  034C  082E               	movf	?___ftadd+2,w
  5727  034D  00BA               	movwf	___fttol@f1+2
  5728  034E  24C3               	fcall	___fttol
  5729  034F  0839               	movf	?___fttol+1,w
  5730  0350  00C6               	movwf	?_get_30v_current+1
  5731  0351  0838               	movf	?___fttol,w
  5732  0352  00C5               	movwf	?_get_30v_current
  5733  0353  0008               	return
  5734  0354                     l3137:	
  5735                           
  5736                           ;Multi_RX_testjig_v1.c: 1872: else
  5737                           ;Multi_RX_testjig_v1.c: 1873: return 0;
  5738  0354  01C5               	clrf	?_get_30v_current
  5739  0355  01C6               	clrf	?_get_30v_current+1
  5740  0356  0008               	return
  5741  0357                     __end_of_get_30v_current:	
  5742  0357                     __ptext25:	
  5743 ;; *************** function ___ftadd *****************
  5744 ;; Defined at:
  5745 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;  f1              3   12[BANK0 ] float 
  5748 ;;  f2              3   15[BANK0 ] float 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;  exp1            1   23[BANK0 ] unsigned char 
  5751 ;;  exp2            1   22[BANK0 ] unsigned char 
  5752 ;;  sign            1   21[BANK0 ] unsigned char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  3   12[BANK0 ] float 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, status,0, pclath, cstack
  5757 ;; Tracked objects:
  5758 ;;		On entry : 1F/0
  5759 ;;		On exit  : 1F/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5762 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5763 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5764 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5765 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5766 ;;Total ram usage:       12 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; Hardware stack levels required when called:    2
  5769 ;; This function calls:
  5770 ;;		___ftpack
  5771 ;; This function is called by:
  5772 ;;		_get_30v_current
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           
  5777                           ;psect for function ___ftadd
  5778  0357                     ___ftadd:	
  5779                           
  5780                           ;incstack = 0
  5781                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5782  0357  082C               	movf	___ftadd@f1,w
  5783  0358  00B2               	movwf	??___ftadd
  5784  0359  082D               	movf	___ftadd@f1+1,w
  5785  035A  00B3               	movwf	??___ftadd+1
  5786  035B  082E               	movf	___ftadd@f1+2,w
  5787  035C  00B4               	movwf	??___ftadd+2
  5788  035D  1003               	clrc
  5789  035E  0D33               	rlf	??___ftadd+1,w
  5790  035F  0D34               	rlf	??___ftadd+2,w
  5791  0360  00B7               	movwf	___ftadd@exp1
  5792  0361  082F               	movf	___ftadd@f2,w
  5793  0362  00B2               	movwf	??___ftadd
  5794  0363  0830               	movf	___ftadd@f2+1,w
  5795  0364  00B3               	movwf	??___ftadd+1
  5796  0365  0831               	movf	___ftadd@f2+2,w
  5797  0366  00B4               	movwf	??___ftadd+2
  5798  0367  1003               	clrc
  5799  0368  0D33               	rlf	??___ftadd+1,w
  5800  0369  0D34               	rlf	??___ftadd+2,w
  5801  036A  00B6               	movwf	___ftadd@exp2
  5802  036B  0837               	movf	___ftadd@exp1,w
  5803  036C  1903               	btfsc	3,2
  5804  036D  2B7A               	goto	l2793
  5805  036E  0836               	movf	___ftadd@exp2,w
  5806  036F  0237               	subwf	___ftadd@exp1,w
  5807  0370  0836               	movf	___ftadd@exp2,w
  5808  0371  1803               	skipnc
  5809  0372  2B82               	goto	L16
  5810  0373  00B2               	movwf	??___ftadd
  5811  0374  0837               	movf	___ftadd@exp1,w
  5812  0375  02B2               	subwf	??___ftadd,f
  5813  0376  3019               	movlw	25
  5814  0377  0232               	subwf	??___ftadd,w
  5815  0378  1C03               	skipc
  5816  0379  2B81               	goto	l2797
  5817  037A                     l2793:	
  5818  037A  082F               	movf	___ftadd@f2,w
  5819  037B  00AC               	movwf	?___ftadd
  5820  037C  0830               	movf	___ftadd@f2+1,w
  5821  037D  00AD               	movwf	?___ftadd+1
  5822  037E  0831               	movf	___ftadd@f2+2,w
  5823  037F  00AE               	movwf	?___ftadd+2
  5824  0380  0008               	return
  5825  0381                     l2797:	
  5826  0381  0836               	movf	___ftadd@exp2,w
  5827  0382                     L16:	
  5828  0382  1903               	btfsc	3,2
  5829  0383  0008               	return
  5830  0384  0837               	movf	___ftadd@exp1,w
  5831  0385  0236               	subwf	___ftadd@exp2,w
  5832  0386  1803               	skipnc
  5833  0387  2B90               	goto	l2803
  5834  0388  0837               	movf	___ftadd@exp1,w
  5835  0389  00B2               	movwf	??___ftadd
  5836  038A  0836               	movf	___ftadd@exp2,w
  5837  038B  02B2               	subwf	??___ftadd,f
  5838  038C  3019               	movlw	25
  5839  038D  0232               	subwf	??___ftadd,w
  5840  038E  1803               	btfsc	3,0
  5841  038F  0008               	return
  5842  0390                     l2803:	
  5843  0390  3006               	movlw	6
  5844  0391  00B5               	movwf	___ftadd@sign
  5845  0392  1BAE               	btfsc	___ftadd@f1+2,7
  5846  0393  17B5               	bsf	___ftadd@sign,7
  5847  0394  1BB1               	btfsc	___ftadd@f2+2,7
  5848  0395  1735               	bsf	___ftadd@sign,6
  5849  0396  17AD               	bsf	___ftadd@f1+1,7
  5850  0397  01AE               	clrf	___ftadd@f1+2
  5851  0398  17B0               	bsf	___ftadd@f2+1,7
  5852  0399  01B1               	clrf	___ftadd@f2+2
  5853  039A  0836               	movf	___ftadd@exp2,w
  5854  039B  0237               	subwf	___ftadd@exp1,w
  5855  039C  1803               	skipnc
  5856  039D  2BB5               	goto	l2825
  5857  039E                     l2815:	
  5858  039E  35AF               	lslf	___ftadd@f2,f
  5859  039F  0DB0               	rlf	___ftadd@f2+1,f
  5860  03A0  0DB1               	rlf	___ftadd@f2+2,f
  5861  03A1  03B6               	decf	___ftadd@exp2,f
  5862  03A2  0836               	movf	___ftadd@exp2,w
  5863  03A3  0637               	xorwf	___ftadd@exp1,w
  5864  03A4  1903               	skipnz
  5865  03A5  2BB0               	goto	l2823
  5866  03A6  03B5               	decf	___ftadd@sign,f
  5867  03A7  0835               	movf	___ftadd@sign,w
  5868  03A8  3907               	andlw	7
  5869  03A9  1903               	btfsc	3,2
  5870  03AA  2BB0               	goto	l2823
  5871  03AB  2B9E               	goto	l2815
  5872  03AC                     l2821:	
  5873  03AC  36AE               	lsrf	___ftadd@f1+2,f
  5874  03AD  0CAD               	rrf	___ftadd@f1+1,f
  5875  03AE  0CAC               	rrf	___ftadd@f1,f
  5876  03AF  0AB7               	incf	___ftadd@exp1,f
  5877  03B0                     l2823:	
  5878  03B0  0837               	movf	___ftadd@exp1,w
  5879  03B1  0636               	xorwf	___ftadd@exp2,w
  5880  03B2  1903               	btfsc	3,2
  5881  03B3  2BCF               	goto	l893
  5882  03B4  2BAC               	goto	l2821
  5883  03B5                     l2825:	
  5884  03B5  0837               	movf	___ftadd@exp1,w
  5885  03B6  0236               	subwf	___ftadd@exp2,w
  5886  03B7  1803               	skipnc
  5887  03B8  2BCF               	goto	l893
  5888  03B9                     l2827:	
  5889  03B9  35AC               	lslf	___ftadd@f1,f
  5890  03BA  0DAD               	rlf	___ftadd@f1+1,f
  5891  03BB  0DAE               	rlf	___ftadd@f1+2,f
  5892  03BC  03B7               	decf	___ftadd@exp1,f
  5893  03BD  0836               	movf	___ftadd@exp2,w
  5894  03BE  0637               	xorwf	___ftadd@exp1,w
  5895  03BF  1903               	skipnz
  5896  03C0  2BCB               	goto	l2835
  5897  03C1  03B5               	decf	___ftadd@sign,f
  5898  03C2  0835               	movf	___ftadd@sign,w
  5899  03C3  3907               	andlw	7
  5900  03C4  1903               	btfsc	3,2
  5901  03C5  2BCB               	goto	l2835
  5902  03C6  2BB9               	goto	l2827
  5903  03C7                     l2833:	
  5904  03C7  36B1               	lsrf	___ftadd@f2+2,f
  5905  03C8  0CB0               	rrf	___ftadd@f2+1,f
  5906  03C9  0CAF               	rrf	___ftadd@f2,f
  5907  03CA  0AB6               	incf	___ftadd@exp2,f
  5908  03CB                     l2835:	
  5909  03CB  0837               	movf	___ftadd@exp1,w
  5910  03CC  0636               	xorwf	___ftadd@exp2,w
  5911  03CD  1D03               	skipz
  5912  03CE  2BC7               	goto	l2833
  5913  03CF                     l893:	
  5914  03CF  1FB5               	btfss	___ftadd@sign,7
  5915  03D0  2BDA               	goto	l2841
  5916  03D1  30FF               	movlw	255
  5917  03D2  06AC               	xorwf	___ftadd@f1,f
  5918  03D3  06AD               	xorwf	___ftadd@f1+1,f
  5919  03D4  06AE               	xorwf	___ftadd@f1+2,f
  5920  03D5  0AAC               	incf	___ftadd@f1,f
  5921  03D6  1903               	skipnz
  5922  03D7  0AAD               	incf	___ftadd@f1+1,f
  5923  03D8  1903               	skipnz
  5924  03D9  0AAE               	incf	___ftadd@f1+2,f
  5925  03DA                     l2841:	
  5926  03DA  1F35               	btfss	___ftadd@sign,6
  5927  03DB  2BE5               	goto	l2847
  5928  03DC  30FF               	movlw	255
  5929  03DD  06AF               	xorwf	___ftadd@f2,f
  5930  03DE  06B0               	xorwf	___ftadd@f2+1,f
  5931  03DF  06B1               	xorwf	___ftadd@f2+2,f
  5932  03E0  0AAF               	incf	___ftadd@f2,f
  5933  03E1  1903               	skipnz
  5934  03E2  0AB0               	incf	___ftadd@f2+1,f
  5935  03E3  1903               	skipnz
  5936  03E4  0AB1               	incf	___ftadd@f2+2,f
  5937  03E5                     l2847:	
  5938  03E5  01B5               	clrf	___ftadd@sign
  5939  03E6  082C               	movf	___ftadd@f1,w
  5940  03E7  07AF               	addwf	___ftadd@f2,f
  5941  03E8  082D               	movf	___ftadd@f1+1,w
  5942  03E9  3DB0               	addwfc	___ftadd@f2+1,f
  5943  03EA  082E               	movf	___ftadd@f1+2,w
  5944  03EB  3DB1               	addwfc	___ftadd@f2+2,f
  5945  03EC  1FB1               	btfss	___ftadd@f2+2,7
  5946  03ED  2BF9               	goto	l2859
  5947  03EE  30FF               	movlw	255
  5948  03EF  06AF               	xorwf	___ftadd@f2,f
  5949  03F0  06B0               	xorwf	___ftadd@f2+1,f
  5950  03F1  06B1               	xorwf	___ftadd@f2+2,f
  5951  03F2  0AAF               	incf	___ftadd@f2,f
  5952  03F3  1903               	skipnz
  5953  03F4  0AB0               	incf	___ftadd@f2+1,f
  5954  03F5  1903               	skipnz
  5955  03F6  0AB1               	incf	___ftadd@f2+2,f
  5956  03F7  01B5               	clrf	___ftadd@sign
  5957  03F8  0AB5               	incf	___ftadd@sign,f
  5958  03F9                     l2859:	
  5959  03F9  082F               	movf	___ftadd@f2,w
  5960  03FA  00F0               	movwf	___ftpack@arg
  5961  03FB  0830               	movf	___ftadd@f2+1,w
  5962  03FC  00F1               	movwf	___ftpack@arg+1
  5963  03FD  0831               	movf	___ftadd@f2+2,w
  5964  03FE  00F2               	movwf	___ftpack@arg+2
  5965  03FF  0837               	movf	___ftadd@exp1,w
  5966  0400  00F3               	movwf	___ftpack@exp
  5967  0401  0835               	movf	___ftadd@sign,w
  5968  0402  00F4               	movwf	___ftpack@sign
  5969  0403  2475               	fcall	___ftpack
  5970  0404  0870               	movf	?___ftpack,w
  5971  0405  00AC               	movwf	?___ftadd
  5972  0406  0871               	movf	?___ftpack+1,w
  5973  0407  00AD               	movwf	?___ftadd+1
  5974  0408  0872               	movf	?___ftpack+2,w
  5975  0409  00AE               	movwf	?___ftadd+2
  5976  040A  0008               	return
  5977  040B                     __end_of___ftadd:	
  5978  040B                     __ptext24:	
  5979 ;; *************** function ___ftmul *****************
  5980 ;; Defined at:
  5981 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  f1              3    0[BANK0 ] float 
  5984 ;;  f2              3    3[BANK0 ] float 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  5987 ;;  sign            1   11[BANK0 ] unsigned char 
  5988 ;;  cntr            1   10[BANK0 ] unsigned char 
  5989 ;;  exp             1    6[BANK0 ] unsigned char 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  3    0[BANK0 ] float 
  5992 ;; Registers used:
  5993 ;;		wreg, status,2, status,0, pclath, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 1F/0
  5996 ;;		On exit  : 1F/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5999 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6000 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6001 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6002 ;;      Totals:         3      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6003 ;;Total ram usage:       15 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:    2
  6006 ;; This function calls:
  6007 ;;		___ftpack
  6008 ;; This function is called by:
  6009 ;;		_get_30v_current
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           
  6014                           ;psect for function ___ftmul
  6015  040B                     ___ftmul:	
  6016                           
  6017                           ;incstack = 0
  6018                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6019  040B  0820               	movf	___ftmul@f1,w
  6020  040C  00FB               	movwf	??___ftmul
  6021  040D  0821               	movf	___ftmul@f1+1,w
  6022  040E  00FC               	movwf	??___ftmul+1
  6023  040F  0822               	movf	___ftmul@f1+2,w
  6024  0410  00FD               	movwf	??___ftmul+2
  6025  0411  1003               	clrc
  6026  0412  0D7C               	rlf	??___ftmul+1,w
  6027  0413  0D7D               	rlf	??___ftmul+2,w
  6028  0414  00A6               	movwf	___ftmul@exp
  6029  0415  0826               	movf	___ftmul@exp,w
  6030  0416  1D03               	btfss	3,2
  6031  0417  2C1C               	goto	l2867
  6032  0418  01A0               	clrf	?___ftmul
  6033  0419  01A1               	clrf	?___ftmul+1
  6034  041A  01A2               	clrf	?___ftmul+2
  6035  041B  0008               	return
  6036  041C                     l2867:	
  6037  041C  0823               	movf	___ftmul@f2,w
  6038  041D  00FB               	movwf	??___ftmul
  6039  041E  0824               	movf	___ftmul@f2+1,w
  6040  041F  00FC               	movwf	??___ftmul+1
  6041  0420  0825               	movf	___ftmul@f2+2,w
  6042  0421  00FD               	movwf	??___ftmul+2
  6043  0422  1003               	clrc
  6044  0423  0D7C               	rlf	??___ftmul+1,w
  6045  0424  0D7D               	rlf	??___ftmul+2,w
  6046  0425  00AB               	movwf	___ftmul@sign
  6047  0426  082B               	movf	___ftmul@sign,w
  6048  0427  1D03               	btfss	3,2
  6049  0428  2C2D               	goto	l2871
  6050  0429  01A0               	clrf	?___ftmul
  6051  042A  01A1               	clrf	?___ftmul+1
  6052  042B  01A2               	clrf	?___ftmul+2
  6053  042C  0008               	return
  6054  042D                     l2871:	
  6055  042D  082B               	movf	___ftmul@sign,w
  6056  042E  3E7B               	addlw	123
  6057  042F  07A6               	addwf	___ftmul@exp,f
  6058  0430  0822               	movf	___ftmul@f1+2,w
  6059  0431  00AB               	movwf	___ftmul@sign
  6060  0432  0825               	movf	___ftmul@f2+2,w
  6061  0433  06AB               	xorwf	___ftmul@sign,f
  6062  0434  3080               	movlw	128
  6063  0435  05AB               	andwf	___ftmul@sign,f
  6064  0436  30FF               	movlw	255
  6065  0437  17A1               	bsf	___ftmul@f1+1,7
  6066  0438  17A4               	bsf	___ftmul@f2+1,7
  6067  0439  05A3               	andwf	___ftmul@f2,f
  6068  043A  05A4               	andwf	___ftmul@f2+1,f
  6069  043B  3007               	movlw	7
  6070  043C  01A5               	clrf	___ftmul@f2+2
  6071  043D  01A7               	clrf	___ftmul@f3_as_product
  6072  043E  01A8               	clrf	___ftmul@f3_as_product+1
  6073  043F  01A9               	clrf	___ftmul@f3_as_product+2
  6074  0440  00AA               	movwf	___ftmul@cntr
  6075  0441                     l2889:	
  6076  0441  1C20               	btfss	___ftmul@f1,0
  6077  0442  2C49               	goto	l2893
  6078  0443  0823               	movf	___ftmul@f2,w
  6079  0444  07A7               	addwf	___ftmul@f3_as_product,f
  6080  0445  0824               	movf	___ftmul@f2+1,w
  6081  0446  3DA8               	addwfc	___ftmul@f3_as_product+1,f
  6082  0447  0825               	movf	___ftmul@f2+2,w
  6083  0448  3DA9               	addwfc	___ftmul@f3_as_product+2,f
  6084  0449                     l2893:	
  6085  0449  36A2               	lsrf	___ftmul@f1+2,f
  6086  044A  0CA1               	rrf	___ftmul@f1+1,f
  6087  044B  0CA0               	rrf	___ftmul@f1,f
  6088  044C  35A3               	lslf	___ftmul@f2,f
  6089  044D  0DA4               	rlf	___ftmul@f2+1,f
  6090  044E  0DA5               	rlf	___ftmul@f2+2,f
  6091  044F  0BAA               	decfsz	___ftmul@cntr,f
  6092  0450  2C41               	goto	l2889
  6093  0451  3009               	movlw	9
  6094  0452  00AA               	movwf	___ftmul@cntr
  6095  0453                     l2901:	
  6096  0453  1C20               	btfss	___ftmul@f1,0
  6097  0454  2C5B               	goto	l2905
  6098  0455  0823               	movf	___ftmul@f2,w
  6099  0456  07A7               	addwf	___ftmul@f3_as_product,f
  6100  0457  0824               	movf	___ftmul@f2+1,w
  6101  0458  3DA8               	addwfc	___ftmul@f3_as_product+1,f
  6102  0459  0825               	movf	___ftmul@f2+2,w
  6103  045A  3DA9               	addwfc	___ftmul@f3_as_product+2,f
  6104  045B                     l2905:	
  6105  045B  36A2               	lsrf	___ftmul@f1+2,f
  6106  045C  0CA1               	rrf	___ftmul@f1+1,f
  6107  045D  0CA0               	rrf	___ftmul@f1,f
  6108  045E  36A9               	lsrf	___ftmul@f3_as_product+2,f
  6109  045F  0CA8               	rrf	___ftmul@f3_as_product+1,f
  6110  0460  0CA7               	rrf	___ftmul@f3_as_product,f
  6111  0461  0BAA               	decfsz	___ftmul@cntr,f
  6112  0462  2C53               	goto	l2901
  6113  0463  0827               	movf	___ftmul@f3_as_product,w
  6114  0464  00F0               	movwf	___ftpack@arg
  6115  0465  0828               	movf	___ftmul@f3_as_product+1,w
  6116  0466  00F1               	movwf	___ftpack@arg+1
  6117  0467  0829               	movf	___ftmul@f3_as_product+2,w
  6118  0468  00F2               	movwf	___ftpack@arg+2
  6119  0469  0826               	movf	___ftmul@exp,w
  6120  046A  00F3               	movwf	___ftpack@exp
  6121  046B  082B               	movf	___ftmul@sign,w
  6122  046C  00F4               	movwf	___ftpack@sign
  6123  046D  2475               	fcall	___ftpack
  6124  046E  0870               	movf	?___ftpack,w
  6125  046F  00A0               	movwf	?___ftmul
  6126  0470  0871               	movf	?___ftpack+1,w
  6127  0471  00A1               	movwf	?___ftmul+1
  6128  0472  0872               	movf	?___ftpack+2,w
  6129  0473  00A2               	movwf	?___ftmul+2
  6130  0474  0008               	return
  6131  0475                     __end_of___ftmul:	
  6132  0475                     __ptext26:	
  6133 ;; *************** function ___ftpack *****************
  6134 ;; Defined at:
  6135 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  arg             3    0[COMMON] unsigned um
  6138 ;;  exp             1    3[COMMON] unsigned char 
  6139 ;;  sign            1    4[COMMON] unsigned char 
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;		None
  6142 ;; Return value:  Size  Location     Type
  6143 ;;                  3    0[COMMON] float 
  6144 ;; Registers used:
  6145 ;;		wreg, status,2, status,0
  6146 ;; Tracked objects:
  6147 ;;		On entry : 1F/0
  6148 ;;		On exit  : 1F/0
  6149 ;;		Unchanged: 1F/0
  6150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6151 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6153 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6154 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6155 ;;Total ram usage:        8 bytes
  6156 ;; Hardware stack levels used:    1
  6157 ;; Hardware stack levels required when called:    1
  6158 ;; This function calls:
  6159 ;;		Nothing
  6160 ;; This function is called by:
  6161 ;;		___ftadd
  6162 ;;		___ftmul
  6163 ;;		___lwtoft
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           
  6168                           ;psect for function ___ftpack
  6169  0475                     ___ftpack:	
  6170                           
  6171                           ;incstack = 0
  6172                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6173  0475  0873               	movf	___ftpack@exp,w
  6174  0476  1903               	btfsc	3,2
  6175  0477  2C7D               	goto	l857
  6176  0478  0872               	movf	___ftpack@arg+2,w
  6177  0479  0471               	iorwf	___ftpack@arg+1,w
  6178  047A  0470               	iorwf	___ftpack@arg,w
  6179  047B  1D03               	skipz
  6180  047C  2C85               	goto	l2641
  6181  047D                     l857:	
  6182  047D  01F0               	clrf	?___ftpack
  6183  047E  01F1               	clrf	?___ftpack+1
  6184  047F  01F2               	clrf	?___ftpack+2
  6185  0480  0008               	return
  6186  0481                     l2639:	
  6187  0481  0AF3               	incf	___ftpack@exp,f
  6188  0482  36F2               	lsrf	___ftpack@arg+2,f
  6189  0483  0CF1               	rrf	___ftpack@arg+1,f
  6190  0484  0CF0               	rrf	___ftpack@arg,f
  6191  0485                     l2641:	
  6192  0485  30FE               	movlw	254
  6193  0486  0572               	andwf	___ftpack@arg+2,w
  6194  0487  1903               	btfsc	3,2
  6195  0488  2C93               	goto	l2645
  6196  0489  2C81               	goto	l2639
  6197  048A                     l2643:	
  6198  048A  0AF3               	incf	___ftpack@exp,f
  6199  048B  0AF0               	incf	___ftpack@arg,f
  6200  048C  1903               	skipnz
  6201  048D  0AF1               	incf	___ftpack@arg+1,f
  6202  048E  1903               	skipnz
  6203  048F  0AF2               	incf	___ftpack@arg+2,f
  6204  0490  36F2               	lsrf	___ftpack@arg+2,f
  6205  0491  0CF1               	rrf	___ftpack@arg+1,f
  6206  0492  0CF0               	rrf	___ftpack@arg,f
  6207  0493                     l2645:	
  6208  0493  30FF               	movlw	255
  6209  0494  0572               	andwf	___ftpack@arg+2,w
  6210  0495  1903               	btfsc	3,2
  6211  0496  2CA0               	goto	l2649
  6212  0497  2C8A               	goto	l2643
  6213  0498                     l2651:	
  6214  0498  3002               	movlw	2
  6215  0499  0273               	subwf	___ftpack@exp,w
  6216  049A  1C03               	btfss	3,0
  6217  049B  2CA2               	goto	l869
  6218  049C  03F3               	decf	___ftpack@exp,f
  6219  049D  35F0               	lslf	___ftpack@arg,f
  6220  049E  0DF1               	rlf	___ftpack@arg+1,f
  6221  049F  0DF2               	rlf	___ftpack@arg+2,f
  6222  04A0                     l2649:	
  6223  04A0  1FF1               	btfss	___ftpack@arg+1,7
  6224  04A1  2C98               	goto	l2651
  6225  04A2                     l869:	
  6226  04A2  1C73               	btfss	___ftpack@exp,0
  6227  04A3  13F1               	bcf	___ftpack@arg+1,7
  6228  04A4  36F3               	lsrf	___ftpack@exp,f
  6229  04A5  0873               	movf	___ftpack@exp,w
  6230  04A6  00F7               	movwf	??___ftpack+2
  6231  04A7  01F6               	clrf	??___ftpack+1
  6232  04A8  01F5               	clrf	??___ftpack
  6233  04A9  0875               	movf	??___ftpack,w
  6234  04AA  04F0               	iorwf	___ftpack@arg,f
  6235  04AB  0876               	movf	??___ftpack+1,w
  6236  04AC  04F1               	iorwf	___ftpack@arg+1,f
  6237  04AD  0877               	movf	??___ftpack+2,w
  6238  04AE  04F2               	iorwf	___ftpack@arg+2,f
  6239  04AF  0874               	movf	___ftpack@sign,w
  6240  04B0  1D03               	btfss	3,2
  6241  04B1  17F2               	bsf	___ftpack@arg+2,7
  6242  04B2  0008               	return
  6243  04B3                     __end_of___ftpack:	
  6244  04B3                     __ptext22:	
  6245 ;; *************** function ___lwtoft *****************
  6246 ;; Defined at:
  6247 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  c               2    8[COMMON] unsigned int 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;		None
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  3    8[COMMON] float 
  6254 ;; Registers used:
  6255 ;;		wreg, status,2, status,0, pclath, cstack
  6256 ;; Tracked objects:
  6257 ;;		On entry : 1F/0
  6258 ;;		On exit  : 1F/0
  6259 ;;		Unchanged: 1F/0
  6260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6261 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6264 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6265 ;;Total ram usage:        3 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; Hardware stack levels required when called:    2
  6268 ;; This function calls:
  6269 ;;		___ftpack
  6270 ;; This function is called by:
  6271 ;;		_get_30v_current
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           
  6276                           ;psect for function ___lwtoft
  6277  04B3                     ___lwtoft:	
  6278                           
  6279                           ;incstack = 0
  6280                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6281  04B3  0878               	movf	___lwtoft@c,w
  6282  04B4  00F0               	movwf	___ftpack@arg
  6283  04B5  0879               	movf	___lwtoft@c+1,w
  6284  04B6  00F1               	movwf	___ftpack@arg+1
  6285  04B7  308E               	movlw	142
  6286  04B8  01F2               	clrf	___ftpack@arg+2
  6287  04B9  00F3               	movwf	___ftpack@exp
  6288  04BA  01F4               	clrf	___ftpack@sign
  6289  04BB  2475               	fcall	___ftpack
  6290  04BC  0870               	movf	?___ftpack,w
  6291  04BD  00F8               	movwf	?___lwtoft
  6292  04BE  0871               	movf	?___ftpack+1,w
  6293  04BF  00F9               	movwf	?___lwtoft+1
  6294  04C0  0872               	movf	?___ftpack+2,w
  6295  04C1  00FA               	movwf	?___lwtoft+2
  6296  04C2  0008               	return
  6297  04C3                     __end_of___lwtoft:	
  6298  04C3                     __ptext23:	
  6299 ;; *************** function ___fttol *****************
  6300 ;; Defined at:
  6301 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;  f1              3   24[BANK0 ] float 
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;  lval            4   32[BANK0 ] unsigned long 
  6306 ;;  exp1            1   36[BANK0 ] unsigned char 
  6307 ;;  sign1           1   31[BANK0 ] unsigned char 
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  4   24[BANK0 ] long 
  6310 ;; Registers used:
  6311 ;;		wreg, status,2, status,0
  6312 ;; Tracked objects:
  6313 ;;		On entry : 1F/0
  6314 ;;		On exit  : 1F/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6317 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6318 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6319 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6320 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6321 ;;Total ram usage:       13 bytes
  6322 ;; Hardware stack levels used:    1
  6323 ;; Hardware stack levels required when called:    1
  6324 ;; This function calls:
  6325 ;;		Nothing
  6326 ;; This function is called by:
  6327 ;;		_get_30v_current
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           
  6332                           ;psect for function ___fttol
  6333  04C3                     ___fttol:	
  6334                           
  6335                           ;incstack = 0
  6336                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6337  04C3  0838               	movf	___fttol@f1,w
  6338  04C4  00BC               	movwf	??___fttol
  6339  04C5  0839               	movf	___fttol@f1+1,w
  6340  04C6  00BD               	movwf	??___fttol+1
  6341  04C7  083A               	movf	___fttol@f1+2,w
  6342  04C8  00BE               	movwf	??___fttol+2
  6343  04C9  1003               	clrc
  6344  04CA  0D3D               	rlf	??___fttol+1,w
  6345  04CB  0D3E               	rlf	??___fttol+2,w
  6346  04CC  00C4               	movwf	___fttol@exp1
  6347  04CD  0844               	movf	___fttol@exp1,w
  6348  04CE  1D03               	btfss	3,2
  6349  04CF  2CD5               	goto	l2919
  6350  04D0                     l2917:	
  6351  04D0  01B8               	clrf	?___fttol
  6352  04D1  01B9               	clrf	?___fttol+1
  6353  04D2  01BA               	clrf	?___fttol+2
  6354  04D3  01BB               	clrf	?___fttol+3
  6355  04D4  0008               	return
  6356  04D5                     l2919:	
  6357  04D5  0838               	movf	___fttol@f1,w
  6358  04D6  00BC               	movwf	??___fttol
  6359  04D7  0839               	movf	___fttol@f1+1,w
  6360  04D8  00BD               	movwf	??___fttol+1
  6361  04D9  083A               	movf	___fttol@f1+2,w
  6362  04DA  00BE               	movwf	??___fttol+2
  6363  04DB  3017               	movlw	23
  6364  04DC                     u2665:	
  6365  04DC  36BE               	lsrf	??___fttol+2,f
  6366  04DD  0CBD               	rrf	??___fttol+1,f
  6367  04DE  0CBC               	rrf	??___fttol,f
  6368  04DF  0B89               	decfsz	9,f
  6369  04E0  2CDC               	goto	u2665
  6370  04E1  083C               	movf	??___fttol,w
  6371  04E2  00BF               	movwf	___fttol@sign1
  6372  04E3  17B9               	bsf	___fttol@f1+1,7
  6373  04E4  01BA               	clrf	___fttol@f1+2
  6374  04E5  0838               	movf	___fttol@f1,w
  6375  04E6  00C0               	movwf	___fttol@lval
  6376  04E7  0839               	movf	___fttol@f1+1,w
  6377  04E8  00C1               	movwf	___fttol@lval+1
  6378  04E9  083A               	movf	___fttol@f1+2,w
  6379  04EA  00C2               	movwf	___fttol@lval+2
  6380  04EB  308E               	movlw	142
  6381  04EC  01C3               	clrf	___fttol@lval+3
  6382  04ED  02C4               	subwf	___fttol@exp1,f
  6383  04EE  1FC4               	btfss	___fttol@exp1,7
  6384  04EF  2CFC               	goto	l2939
  6385  04F0  0844               	movf	___fttol@exp1,w
  6386  04F1  3A80               	xorlw	128
  6387  04F2  3E8F               	addlw	143
  6388  04F3  1C03               	btfss	3,0
  6389  04F4  2CD0               	goto	l2917
  6390  04F5                     l2935:	
  6391  04F5  36C3               	lsrf	___fttol@lval+3,f
  6392  04F6  0CC2               	rrf	___fttol@lval+2,f
  6393  04F7  0CC1               	rrf	___fttol@lval+1,f
  6394  04F8  0CC0               	rrf	___fttol@lval,f
  6395  04F9  0FC4               	incfsz	___fttol@exp1,f
  6396  04FA  2CF5               	goto	l2935
  6397  04FB  2D09               	goto	l2947
  6398  04FC                     l2939:	
  6399  04FC  3018               	movlw	24
  6400  04FD  0244               	subwf	___fttol@exp1,w
  6401  04FE  1803               	btfsc	3,0
  6402  04FF  2CD0               	goto	l2917
  6403  0500                     l2945:	
  6404  0500  0844               	movf	___fttol@exp1,w
  6405  0501  1903               	btfsc	3,2
  6406  0502  2D09               	goto	l2947
  6407  0503  35C0               	lslf	___fttol@lval,f
  6408  0504  0DC1               	rlf	___fttol@lval+1,f
  6409  0505  0DC2               	rlf	___fttol@lval+2,f
  6410  0506  0DC3               	rlf	___fttol@lval+3,f
  6411  0507  03C4               	decf	___fttol@exp1,f
  6412  0508  2D00               	goto	l2945
  6413  0509                     l2947:	
  6414  0509  083F               	movf	___fttol@sign1,w
  6415  050A  1903               	btfsc	3,2
  6416  050B  2D17               	goto	l2951
  6417  050C  09C0               	comf	___fttol@lval,f
  6418  050D  09C1               	comf	___fttol@lval+1,f
  6419  050E  09C2               	comf	___fttol@lval+2,f
  6420  050F  09C3               	comf	___fttol@lval+3,f
  6421  0510  0AC0               	incf	___fttol@lval,f
  6422  0511  1903               	skipnz
  6423  0512  0AC1               	incf	___fttol@lval+1,f
  6424  0513  1903               	skipnz
  6425  0514  0AC2               	incf	___fttol@lval+2,f
  6426  0515  1903               	skipnz
  6427  0516  0AC3               	incf	___fttol@lval+3,f
  6428  0517                     l2951:	
  6429  0517  0843               	movf	___fttol@lval+3,w
  6430  0518  00BB               	movwf	?___fttol+3
  6431  0519  0842               	movf	___fttol@lval+2,w
  6432  051A  00BA               	movwf	?___fttol+2
  6433  051B  0841               	movf	___fttol@lval+1,w
  6434  051C  00B9               	movwf	?___fttol+1
  6435  051D  0840               	movf	___fttol@lval,w
  6436  051E  00B8               	movwf	?___fttol
  6437  051F  0008               	return
  6438  0520                     __end_of___fttol:	
  6439                           
  6440                           	psect	text28
  6441  00A6                     __ptext28:	
  6442 ;; *************** function _Vout_set *****************
  6443 ;; Defined at:
  6444 ;;		line 1876 in file "Multi_RX_testjig_v1.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  Volts           2    4[COMMON] int 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  digi_step       4    6[COMMON] unsigned long 
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  1    wreg      void 
  6451 ;; Registers used:
  6452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/4
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6459 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6461 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6462 ;;Total ram usage:        6 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:    3
  6465 ;; This function calls:
  6466 ;;		_digitalpot
  6467 ;; This function is called by:
  6468 ;;		_main
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           
  6473                           ;psect for function _Vout_set
  6474  00A6                     _Vout_set:	
  6475                           
  6476                           ;Multi_RX_testjig_v1.c: 1884: switch(Volts)
  6477                           
  6478                           ;incstack = 0
  6479                           ; Regs used in _Vout_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6480  00A6  28CB               	goto	l3115
  6481  00A7                     l3083:	
  6482                           
  6483                           ;Multi_RX_testjig_v1.c: 1887: digi_step = 20;
  6484  00A7  3014               	movlw	20
  6485  00A8  28C4               	goto	L30
  6486  00A9                     l3085:	
  6487                           ;Multi_RX_testjig_v1.c: 1888: break;
  6488                           
  6489                           
  6490                           ;Multi_RX_testjig_v1.c: 1890: digi_step = 39;
  6491  00A9  3027               	movlw	39
  6492  00AA  28C4               	goto	L30
  6493  00AB                     l3087:	
  6494                           ;Multi_RX_testjig_v1.c: 1891: break;
  6495                           
  6496                           
  6497                           ;Multi_RX_testjig_v1.c: 1893: digi_step = 52;
  6498  00AB  3034               	movlw	52
  6499  00AC  28C4               	goto	L30
  6500  00AD                     l3089:	
  6501                           ;Multi_RX_testjig_v1.c: 1894: break;
  6502                           
  6503                           
  6504                           ;Multi_RX_testjig_v1.c: 1896: digi_step = 62;
  6505  00AD  303E               	movlw	62
  6506  00AE  28C4               	goto	L30
  6507  00AF                     l3091:	
  6508                           ;Multi_RX_testjig_v1.c: 1897: break;
  6509                           
  6510                           
  6511                           ;Multi_RX_testjig_v1.c: 1899: digi_step = 70;
  6512  00AF  3046               	movlw	70
  6513  00B0  28C4               	goto	L30
  6514  00B1                     l3093:	
  6515                           ;Multi_RX_testjig_v1.c: 1900: break;
  6516                           
  6517                           
  6518                           ;Multi_RX_testjig_v1.c: 1902: digi_step = 76;
  6519  00B1  304C               	movlw	76
  6520  00B2  28C4               	goto	L30
  6521  00B3                     l3095:	
  6522                           ;Multi_RX_testjig_v1.c: 1903: break;
  6523                           
  6524                           
  6525                           ;Multi_RX_testjig_v1.c: 1905: digi_step = 81;
  6526  00B3  3051               	movlw	81
  6527  00B4  28C4               	goto	L30
  6528  00B5                     l3097:	
  6529                           ;Multi_RX_testjig_v1.c: 1906: break;
  6530                           
  6531                           
  6532                           ;Multi_RX_testjig_v1.c: 1908: digi_step = 85;
  6533  00B5  3055               	movlw	85
  6534  00B6  28C4               	goto	L30
  6535  00B7                     l3099:	
  6536                           ;Multi_RX_testjig_v1.c: 1909: break;
  6537                           
  6538                           
  6539                           ;Multi_RX_testjig_v1.c: 1911: digi_step = 88;
  6540  00B7  3058               	movlw	88
  6541  00B8  28C4               	goto	L30
  6542  00B9                     l3101:	
  6543                           ;Multi_RX_testjig_v1.c: 1912: break;
  6544                           
  6545                           
  6546                           ;Multi_RX_testjig_v1.c: 1914: digi_step = 91;
  6547  00B9  305B               	movlw	91
  6548  00BA  28C4               	goto	L30
  6549  00BB                     l3103:	
  6550                           ;Multi_RX_testjig_v1.c: 1915: break;
  6551                           
  6552                           
  6553                           ;Multi_RX_testjig_v1.c: 1917: digi_step = 94;
  6554  00BB  305E               	movlw	94
  6555  00BC  28C4               	goto	L30
  6556  00BD                     l3105:	
  6557                           ;Multi_RX_testjig_v1.c: 1918: break;
  6558                           
  6559                           
  6560                           ;Multi_RX_testjig_v1.c: 1920: digi_step = 96;
  6561  00BD  3060               	movlw	96
  6562  00BE  28C4               	goto	L30
  6563  00BF                     l3107:	
  6564                           ;Multi_RX_testjig_v1.c: 1921: break;
  6565                           
  6566                           
  6567                           ;Multi_RX_testjig_v1.c: 1923: digi_step = 98;
  6568  00BF  3062               	movlw	98
  6569  00C0  28C4               	goto	L30
  6570  00C1                     l3109:	
  6571                           ;Multi_RX_testjig_v1.c: 1924: break;
  6572                           
  6573                           
  6574                           ;Multi_RX_testjig_v1.c: 1926: digi_step = 102;
  6575  00C1  3066               	movlw	102
  6576  00C2  28C4               	goto	L30
  6577  00C3                     l3111:	
  6578                           ;Multi_RX_testjig_v1.c: 1927: break;
  6579                           
  6580                           
  6581                           ;Multi_RX_testjig_v1.c: 1929: digi_step = 112;
  6582  00C3  3070               	movlw	112
  6583  00C4                     L30:	
  6584  00C4  00F6               	movwf	Vout_set@digi_step
  6585  00C5  28C7               	goto	L31
  6586  00C6                     l668:	
  6587                           ;Multi_RX_testjig_v1.c: 1931: default:
  6588                           
  6589                           ;Multi_RX_testjig_v1.c: 1930: break;
  6590                           
  6591                           
  6592                           ;Multi_RX_testjig_v1.c: 1932: digi_step = 0;
  6593  00C6  01F6               	clrf	Vout_set@digi_step
  6594  00C7                     L31:	
  6595  00C7  01F7               	clrf	Vout_set@digi_step+1
  6596  00C8  01F8               	clrf	Vout_set@digi_step+2
  6597  00C9  01F9               	clrf	Vout_set@digi_step+3
  6598                           
  6599                           ;Multi_RX_testjig_v1.c: 1933: break;
  6600  00CA  28DD               	goto	l3117
  6601  00CB                     l3115:	
  6602                           
  6603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6604                           ; Switch size 1, requested type "speed"
  6605                           ; Number of cases is 1, Range of values is 0 to 0
  6606                           ; switch strategies available:
  6607                           ; Name         Instructions Cycles
  6608                           ; simple_byte            4     3 (average)
  6609                           ; direct_byte            8     6 (fixed)
  6610                           ; jumptable            260     6 (fixed)
  6611                           ;	Chosen strategy is simple_byte
  6612  00CB  0875               	movf	Vout_set@Volts+1,w
  6613  00CC  3A00               	xorlw	0	; case 0
  6614  00CD  1903               	skipnz
  6615  00CE  28D0               	goto	l3939
  6616  00CF  28C6               	goto	l668
  6617  00D0                     l3939:	
  6618                           
  6619                           ; Switch size 1, requested type "speed"
  6620                           ; Number of cases is 15, Range of values is 6 to 25
  6621                           ; switch strategies available:
  6622                           ; Name         Instructions Cycles
  6623                           ; direct_byte           49     9 (fixed)
  6624                           ; simple_byte           46    24 (average)
  6625                           ; jumptable            263     9 (fixed)
  6626                           ;	Chosen strategy is direct_byte
  6627  00D0  0874               	movf	Vout_set@Volts,w
  6628  00D1  3EFA               	addlw	-6
  6629  00D2  1C03               	skipc
  6630  00D3  28C6               	goto	l668
  6631  00D4  0084               	movwf	4
  6632  00D5  3014               	movlw	20
  6633  00D6  0204               	subwf	4,w
  6634  00D7  1803               	skipnc
  6635  00D8  28C6               	goto	l668
  6636  00D9  3186               	movlp	high S3941
  6637  00DA  3504               	lslf	4,w
  6638  00DB  3E1A               	addlw	low S3941
  6639  00DC  0082               	movwf	2
  6640  00DD                     l3117:	
  6641                           
  6642                           ;Multi_RX_testjig_v1.c: 1940: digitalpot((unsigned char)digi_step);
  6643  00DD  0876               	movf	Vout_set@digi_step,w
  6644  00DE  29AF               	ljmp	_digitalpot
  6645  00DF                     __end_of_Vout_set:	
  6646  00DF                     __ptext15:	
  6647 ;; *************** function _lcd_set_cursor *****************
  6648 ;; Defined at:
  6649 ;;		line 1095 in file "Multi_RX_testjig_v1.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  row             1    wreg     unsigned char 
  6652 ;;  col             1    1[COMMON] unsigned char 
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;  row             1    2[COMMON] unsigned char 
  6655 ;;  LCD_position    1    3[COMMON] unsigned char 
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  1    wreg      void 
  6658 ;; Registers used:
  6659 ;;		wreg, status,2, status,0, pclath, cstack
  6660 ;; Tracked objects:
  6661 ;;		On entry : 1F/0
  6662 ;;		On exit  : 1F/4
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6665 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6668 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6669 ;;Total ram usage:        3 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; Hardware stack levels required when called:    2
  6672 ;; This function calls:
  6673 ;;		_i2c_Start
  6674 ;;		_i2c_Stop
  6675 ;;		_i2c_Write
  6676 ;; This function is called by:
  6677 ;;		_lcd_print_int
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           
  6682                           ;psect for function _lcd_set_cursor
  6683  00DF                     _lcd_set_cursor:	
  6684                           
  6685                           ;incstack = 0
  6686                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  6687                           ;lcd_set_cursor@row stored from wreg
  6688  00DF  00F2               	movwf	lcd_set_cursor@row
  6689                           
  6690                           ;Multi_RX_testjig_v1.c: 1098: col--;
  6691  00E0  03F1               	decf	lcd_set_cursor@col,f
  6692                           
  6693                           ;Multi_RX_testjig_v1.c: 1099: i2c_Start();
  6694  00E1  2226  3180         	fcall	_i2c_Start
  6695                           
  6696                           ;Multi_RX_testjig_v1.c: 1100: i2c_Write(0x7C);
  6697  00E3  307C               	movlw	124
  6698  00E4  221A  3180         	fcall	_i2c_Write
  6699                           
  6700                           ;Multi_RX_testjig_v1.c: 1101: i2c_Write(0x00);
  6701  00E6  3000               	movlw	0
  6702  00E7  221A  3180         	fcall	_i2c_Write
  6703                           
  6704                           ;Multi_RX_testjig_v1.c: 1102: LCD_position = col & 0b11001111;
  6705  00E9  0871               	movf	lcd_set_cursor@col,w
  6706  00EA  00F3               	movwf	lcd_set_cursor@LCD_position
  6707  00EB  30CF               	movlw	207
  6708  00EC  05F3               	andwf	lcd_set_cursor@LCD_position,f
  6709                           
  6710                           ;Multi_RX_testjig_v1.c: 1103: if(row == 1)
  6711  00ED  0B72               	decfsz	lcd_set_cursor@row,w
  6712  00EE  28F1               	goto	l2729
  6713                           
  6714                           ;Multi_RX_testjig_v1.c: 1104: LCD_position |= 0b10000000;
  6715  00EF  17F3               	bsf	lcd_set_cursor@LCD_position,7
  6716  00F0  28F3               	goto	l2731
  6717  00F1                     l2729:	
  6718                           
  6719                           ;Multi_RX_testjig_v1.c: 1105: else
  6720                           ;Multi_RX_testjig_v1.c: 1106: LCD_position |= 0b11000000;
  6721  00F1  30C0               	movlw	192
  6722  00F2  04F3               	iorwf	lcd_set_cursor@LCD_position,f
  6723  00F3                     l2731:	
  6724                           
  6725                           ;Multi_RX_testjig_v1.c: 1107: i2c_Write(LCD_position);
  6726  00F3  0873               	movf	lcd_set_cursor@LCD_position,w
  6727  00F4  221A  3180         	fcall	_i2c_Write
  6728                           
  6729                           ;Multi_RX_testjig_v1.c: 1108: i2c_Stop();
  6730  00F6  2A2B               	ljmp	l2521
  6731  00F7                     __end_of_lcd_set_cursor:	
  6732  00F7                     __ptext11:	
  6733 ;; *************** function _lcd_print_int *****************
  6734 ;; Defined at:
  6735 ;;		line 1670 in file "Multi_RX_testjig_v1.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  number          2    0[BANK0 ] unsigned int 
  6738 ;;  pos             2    2[BANK0 ] unsigned int 
  6739 ;;  decimal         1    4[BANK0 ] unsigned char 
  6740 ;;  ten_thou_dig    1    5[BANK0 ] unsigned char 
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;		None
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  1    wreg      void 
  6745 ;; Registers used:
  6746 ;;		wreg, status,2, status,0, pclath, cstack
  6747 ;; Tracked objects:
  6748 ;;		On entry : 1F/0
  6749 ;;		On exit  : 1F/4
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6752 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6755 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6756 ;;Total ram usage:        6 bytes
  6757 ;; Hardware stack levels used:    1
  6758 ;; Hardware stack levels required when called:    3
  6759 ;; This function calls:
  6760 ;;		_i2c_write_char
  6761 ;;		_lcd_set_cursor
  6762 ;;		_ten_thou_conv
  6763 ;; This function is called by:
  6764 ;;		_main
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           
  6769                           ;psect for function _lcd_print_int
  6770  00F7                     _lcd_print_int:	
  6771                           
  6772                           ;Multi_RX_testjig_v1.c: 1672: lcd_set_cursor(2, pos + 1 - ten_thou_digit);
  6773                           
  6774                           ;incstack = 0
  6775                           ; Regs used in _lcd_print_int: [wreg+status,2+status,0+pclath+cstack]
  6776  00F7  0825               	movf	lcd_print_int@ten_thou_digit,w
  6777  00F8  0222               	subwf	lcd_print_int@pos,w
  6778  00F9  3E01               	addlw	1
  6779  00FA  00F1               	movwf	lcd_set_cursor@col
  6780  00FB  3002               	movlw	2
  6781  00FC  20DF  3180         	fcall	_lcd_set_cursor
  6782                           
  6783                           ;Multi_RX_testjig_v1.c: 1673: ten_thou_conv(number);
  6784  00FE  0020               	movlb	0	; select bank0
  6785  00FF  0821               	movf	lcd_print_int@number+1,w
  6786  0100  00F7               	movwf	ten_thou_conv@n+1
  6787  0101  0820               	movf	lcd_print_int@number,w
  6788  0102  00F6               	movwf	ten_thou_conv@n
  6789  0103  2230  3180         	fcall	_ten_thou_conv
  6790                           
  6791                           ;Multi_RX_testjig_v1.c: 1674: if(ten_thou_digit)
  6792  0105  0825               	movf	lcd_print_int@ten_thou_digit,w
  6793  0106  1903               	btfsc	3,2
  6794  0107  2913               	goto	l3193
  6795                           
  6796                           ;Multi_RX_testjig_v1.c: 1675: {
  6797                           ;Multi_RX_testjig_v1.c: 1676: if(ten_thou != 0 || decimal & 0x10)
  6798  0108  0864               	movf	_ten_thou,w
  6799  0109  1D03               	btfss	3,2
  6800  010A  290D               	goto	l3189
  6801  010B  1E24               	btfss	lcd_print_int@decimal,4
  6802  010C  2910               	goto	l3191
  6803  010D                     l3189:	
  6804                           
  6805                           ;Multi_RX_testjig_v1.c: 1677: i2c_write_char(ten_thou + 48);
  6806  010D  0864               	movf	_ten_thou,w
  6807  010E  3E30               	addlw	48
  6808  010F  2911               	goto	L12
  6809  0110                     l3191:	
  6810                           
  6811                           ;Multi_RX_testjig_v1.c: 1678: else i2c_write_char(' ');
  6812  0110  3020               	movlw	32
  6813  0111                     L12:	
  6814  0111  216B  3180         	fcall	_i2c_write_char
  6815  0113                     l3193:	
  6816                           
  6817                           ;Multi_RX_testjig_v1.c: 1679: }
  6818                           ;Multi_RX_testjig_v1.c: 1680: if(decimal & 0x10)i2c_write_char('.');
  6819  0113  0020               	movlb	0	; select bank0
  6820  0114  1E24               	btfss	lcd_print_int@decimal,4
  6821  0115  2919               	goto	l3197
  6822  0116  302E               	movlw	46
  6823  0117  216B  3180         	fcall	_i2c_write_char
  6824  0119                     l3197:	
  6825                           
  6826                           ;Multi_RX_testjig_v1.c: 1681: if(thou != 0 || ten_thou != 0 || decimal & 0x18)
  6827  0119  0020               	movlb	0	; select bank0
  6828  011A  0866               	movf	_thou,w
  6829  011B  1D03               	btfss	3,2
  6830  011C  2924               	goto	l3203
  6831  011D  0864               	movf	_ten_thou,w
  6832  011E  1D03               	btfss	3,2
  6833  011F  2924               	goto	l3203
  6834  0120  0824               	movf	lcd_print_int@decimal,w
  6835  0121  3918               	andlw	24
  6836  0122  1903               	btfsc	3,2
  6837  0123  2927               	goto	l3205
  6838  0124                     l3203:	
  6839                           
  6840                           ;Multi_RX_testjig_v1.c: 1682: i2c_write_char(thou + 48);
  6841  0124  0866               	movf	_thou,w
  6842  0125  3E30               	addlw	48
  6843  0126  2928               	goto	L13
  6844  0127                     l3205:	
  6845                           
  6846                           ;Multi_RX_testjig_v1.c: 1683: else i2c_write_char(' ');
  6847  0127  3020               	movlw	32
  6848  0128                     L13:	
  6849  0128  216B  3180         	fcall	_i2c_write_char
  6850                           
  6851                           ;Multi_RX_testjig_v1.c: 1684: if(decimal & 0x08)i2c_write_char('.');
  6852  012A  0020               	movlb	0	; select bank0
  6853  012B  1DA4               	btfss	lcd_print_int@decimal,3
  6854  012C  2930               	goto	l3211
  6855  012D  302E               	movlw	46
  6856  012E  216B  3180         	fcall	_i2c_write_char
  6857  0130                     l3211:	
  6858                           
  6859                           ;Multi_RX_testjig_v1.c: 1685: if(hund != 0 || thou != 0 || ten_thou != 0 || decimal & 0x
      +                          1C)
  6860  0130  0020               	movlb	0	; select bank0
  6861  0131  0861               	movf	_hund,w
  6862  0132  1D03               	btfss	3,2
  6863  0133  293E               	goto	l3219
  6864  0134  0866               	movf	_thou,w
  6865  0135  1D03               	btfss	3,2
  6866  0136  293E               	goto	l3219
  6867  0137  0864               	movf	_ten_thou,w
  6868  0138  1D03               	btfss	3,2
  6869  0139  293E               	goto	l3219
  6870  013A  0824               	movf	lcd_print_int@decimal,w
  6871  013B  391C               	andlw	28
  6872  013C  1903               	btfsc	3,2
  6873  013D  2941               	goto	l3221
  6874  013E                     l3219:	
  6875                           
  6876                           ;Multi_RX_testjig_v1.c: 1686: i2c_write_char(hund + 48);
  6877  013E  0861               	movf	_hund,w
  6878  013F  3E30               	addlw	48
  6879  0140  2942               	goto	L14
  6880  0141                     l3221:	
  6881                           
  6882                           ;Multi_RX_testjig_v1.c: 1687: else i2c_write_char(' ');
  6883  0141  3020               	movlw	32
  6884  0142                     L14:	
  6885  0142  216B  3180         	fcall	_i2c_write_char
  6886                           
  6887                           ;Multi_RX_testjig_v1.c: 1688: if(decimal & 0x04)i2c_write_char('.');
  6888  0144  0020               	movlb	0	; select bank0
  6889  0145  1D24               	btfss	lcd_print_int@decimal,2
  6890  0146  294A               	goto	l3227
  6891  0147  302E               	movlw	46
  6892  0148  216B  3180         	fcall	_i2c_write_char
  6893  014A                     l3227:	
  6894                           
  6895                           ;Multi_RX_testjig_v1.c: 1689: if(ten != 0 || hund != 0 || thou != 0 || ten_thou != 0 || 
      +                          decimal & 0x1E)
  6896  014A  0020               	movlb	0	; select bank0
  6897  014B  0863               	movf	_ten,w
  6898  014C  1D03               	btfss	3,2
  6899  014D  295B               	goto	l3237
  6900  014E  0861               	movf	_hund,w
  6901  014F  1D03               	btfss	3,2
  6902  0150  295B               	goto	l3237
  6903  0151  0866               	movf	_thou,w
  6904  0152  1D03               	btfss	3,2
  6905  0153  295B               	goto	l3237
  6906  0154  0864               	movf	_ten_thou,w
  6907  0155  1D03               	btfss	3,2
  6908  0156  295B               	goto	l3237
  6909  0157  0824               	movf	lcd_print_int@decimal,w
  6910  0158  391E               	andlw	30
  6911  0159  1903               	btfsc	3,2
  6912  015A  295E               	goto	l3239
  6913  015B                     l3237:	
  6914                           
  6915                           ;Multi_RX_testjig_v1.c: 1690: i2c_write_char(ten + 48);
  6916  015B  0863               	movf	_ten,w
  6917  015C  3E30               	addlw	48
  6918  015D  295F               	goto	L15
  6919  015E                     l3239:	
  6920                           
  6921                           ;Multi_RX_testjig_v1.c: 1691: else i2c_write_char(' ');
  6922  015E  3020               	movlw	32
  6923  015F                     L15:	
  6924  015F  216B  3180         	fcall	_i2c_write_char
  6925                           
  6926                           ;Multi_RX_testjig_v1.c: 1692: if(decimal & 0x02)i2c_write_char('.');
  6927  0161  0020               	movlb	0	; select bank0
  6928  0162  1CA4               	btfss	lcd_print_int@decimal,1
  6929  0163  2967               	goto	l587
  6930  0164  302E               	movlw	46
  6931  0165  216B  3180         	fcall	_i2c_write_char
  6932  0167                     l587:	
  6933                           
  6934                           ;Multi_RX_testjig_v1.c: 1693: i2c_write_char(unit + 48);
  6935  0167  0020               	movlb	0	; select bank0
  6936  0168  0865               	movf	_unit,w
  6937  0169  3E30               	addlw	48
  6938  016A  296B               	ljmp	_i2c_write_char
  6939  016B                     __end_of_lcd_print_int:	
  6940  016B                     __ptext16:	
  6941 ;; *************** function _i2c_write_char *****************
  6942 ;; Defined at:
  6943 ;;		line 1011 in file "Multi_RX_testjig_v1.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;  char_data       1    wreg     unsigned char 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;  char_data       1    1[COMMON] unsigned char 
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1    wreg      void 
  6950 ;; Registers used:
  6951 ;;		wreg, status,2, status,0, pclath, cstack
  6952 ;; Tracked objects:
  6953 ;;		On entry : 1F/0
  6954 ;;		On exit  : 1F/4
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6961 ;;Total ram usage:        1 bytes
  6962 ;; Hardware stack levels used:    1
  6963 ;; Hardware stack levels required when called:    2
  6964 ;; This function calls:
  6965 ;;		_i2c_Start
  6966 ;;		_i2c_Stop
  6967 ;;		_i2c_Write
  6968 ;; This function is called by:
  6969 ;;		_lcd_print_int
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           
  6974                           ;psect for function _i2c_write_char
  6975  016B                     _i2c_write_char:	
  6976                           
  6977                           ;incstack = 0
  6978                           ; Regs used in _i2c_write_char: [wreg+status,2+status,0+pclath+cstack]
  6979                           ;i2c_write_char@char_data stored from wreg
  6980  016B  00F1               	movwf	i2c_write_char@char_data
  6981                           
  6982                           ;Multi_RX_testjig_v1.c: 1013: i2c_Start();
  6983  016C  2226  3180         	fcall	_i2c_Start
  6984                           
  6985                           ;Multi_RX_testjig_v1.c: 1014: i2c_Write(0x7C);
  6986  016E  307C               	movlw	124
  6987  016F  221A  3180         	fcall	_i2c_Write
  6988                           
  6989                           ;Multi_RX_testjig_v1.c: 1015: i2c_Write(0x40);
  6990  0171  3040               	movlw	64
  6991  0172  221A  3180         	fcall	_i2c_Write
  6992                           
  6993                           ;Multi_RX_testjig_v1.c: 1016: i2c_Write(char_data);
  6994  0174  0871               	movf	i2c_write_char@char_data,w
  6995  0175  221A  3180         	fcall	_i2c_Write
  6996                           
  6997                           ;Multi_RX_testjig_v1.c: 1017: i2c_Stop();
  6998  0177  2A2B               	ljmp	l2521
  6999  0178                     __end_of_i2c_write_char:	
  7000  0178                     __ptext4:	
  7001 ;; *************** function _i2c_second_line *****************
  7002 ;; Defined at:
  7003 ;;		line 1085 in file "Multi_RX_testjig_v1.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;		None
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;		None
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  1    wreg      void 
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0, pclath, cstack
  7012 ;; Tracked objects:
  7013 ;;		On entry : 1F/4
  7014 ;;		On exit  : 1F/4
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7019 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7020 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7021 ;;Total ram usage:        1 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; Hardware stack levels required when called:    2
  7024 ;; This function calls:
  7025 ;;		_i2c_Start
  7026 ;;		_i2c_Stop
  7027 ;;		_i2c_Write
  7028 ;; This function is called by:
  7029 ;;		_print_error
  7030 ;;		_print_screen
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           
  7035                           ;psect for function _i2c_second_line
  7036  0178                     _i2c_second_line:	
  7037                           
  7038                           ;Multi_RX_testjig_v1.c: 1087: i2c_Start();
  7039                           
  7040                           ;incstack = 0
  7041                           ; Regs used in _i2c_second_line: [wreg+status,2+status,0+pclath+cstack]
  7042  0178  2226  3180         	fcall	_i2c_Start
  7043                           
  7044                           ;Multi_RX_testjig_v1.c: 1088: i2c_Write(0x7C);
  7045  017A  307C               	movlw	124
  7046  017B  221A  3180         	fcall	_i2c_Write
  7047                           
  7048                           ;Multi_RX_testjig_v1.c: 1089: i2c_Write(0x00);
  7049  017D  3000               	movlw	0
  7050  017E  221A  3180         	fcall	_i2c_Write
  7051                           
  7052                           ;Multi_RX_testjig_v1.c: 1090: i2c_Write(0xC0);
  7053  0180  30C0               	movlw	192
  7054  0181  221A  3180         	fcall	_i2c_Write
  7055                           
  7056                           ;Multi_RX_testjig_v1.c: 1091: _delay((unsigned long)((27)*(16000000/4000000.0)));
  7057  0183  3023               	movlw	35
  7058  0184  00F1               	movwf	??_i2c_second_line
  7059  0185                     u4457:	
  7060  0185  0BF1               	decfsz	??_i2c_second_line,f
  7061  0186  2985               	goto	u4457
  7062  0187  3200               	nop2	;nop
  7063                           
  7064                           ;Multi_RX_testjig_v1.c: 1092: i2c_Stop();
  7065  0188  2A2B               	ljmp	l2521
  7066  0189                     __end_of_i2c_second_line:	
  7067  0189                     __ptext5:	
  7068 ;; *************** function _i2c_first_line *****************
  7069 ;; Defined at:
  7070 ;;		line 1075 in file "Multi_RX_testjig_v1.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;		None
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;		None
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  1    wreg      void 
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0, pclath, cstack
  7079 ;; Tracked objects:
  7080 ;;		On entry : 1F/4
  7081 ;;		On exit  : 1F/4
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7086 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7087 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7088 ;;Total ram usage:        1 bytes
  7089 ;; Hardware stack levels used:    1
  7090 ;; Hardware stack levels required when called:    2
  7091 ;; This function calls:
  7092 ;;		_i2c_Start
  7093 ;;		_i2c_Stop
  7094 ;;		_i2c_Write
  7095 ;; This function is called by:
  7096 ;;		_print_error
  7097 ;;		_print_screen
  7098 ;; This function uses a non-reentrant model
  7099 ;;
  7100                           
  7101                           
  7102                           ;psect for function _i2c_first_line
  7103  0189                     _i2c_first_line:	
  7104                           
  7105                           ;Multi_RX_testjig_v1.c: 1077: i2c_Start();
  7106                           
  7107                           ;incstack = 0
  7108                           ; Regs used in _i2c_first_line: [wreg+status,2+status,0+pclath+cstack]
  7109  0189  2226  3180         	fcall	_i2c_Start
  7110                           
  7111                           ;Multi_RX_testjig_v1.c: 1078: i2c_Write(0x7C);
  7112  018B  307C               	movlw	124
  7113  018C  221A  3180         	fcall	_i2c_Write
  7114                           
  7115                           ;Multi_RX_testjig_v1.c: 1079: i2c_Write(0x00);
  7116  018E  3000               	movlw	0
  7117  018F  221A  3180         	fcall	_i2c_Write
  7118                           
  7119                           ;Multi_RX_testjig_v1.c: 1080: i2c_Write(0x80);
  7120  0191  3080               	movlw	128
  7121  0192  221A  3180         	fcall	_i2c_Write
  7122                           
  7123                           ;Multi_RX_testjig_v1.c: 1081: _delay((unsigned long)((27)*(16000000/4000000.0)));
  7124  0194  3023               	movlw	35
  7125  0195  00F1               	movwf	??_i2c_first_line
  7126  0196                     u4467:	
  7127  0196  0BF1               	decfsz	??_i2c_first_line,f
  7128  0197  2996               	goto	u4467
  7129  0198  3200               	nop2	;nop
  7130                           
  7131                           ;Multi_RX_testjig_v1.c: 1082: i2c_Stop();
  7132  0199  2A2B               	ljmp	l2521
  7133  019A                     __end_of_i2c_first_line:	
  7134  019A                     __ptext7:	
  7135 ;; *************** function _clear_lcd *****************
  7136 ;; Defined at:
  7137 ;;		line 1065 in file "Multi_RX_testjig_v1.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;		None
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;		None
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  1    wreg      void 
  7144 ;; Registers used:
  7145 ;;		wreg, status,2, status,0, pclath, cstack
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/2
  7148 ;;		On exit  : 1F/4
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7153 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7154 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7155 ;;Total ram usage:        2 bytes
  7156 ;; Hardware stack levels used:    1
  7157 ;; Hardware stack levels required when called:    2
  7158 ;; This function calls:
  7159 ;;		_i2c_Start
  7160 ;;		_i2c_Stop
  7161 ;;		_i2c_Write
  7162 ;; This function is called by:
  7163 ;;		_print_error
  7164 ;;		_print_screen
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           
  7169                           ;psect for function _clear_lcd
  7170  019A                     _clear_lcd:	
  7171                           
  7172                           ;Multi_RX_testjig_v1.c: 1067: i2c_Start();
  7173                           
  7174                           ;incstack = 0
  7175                           ; Regs used in _clear_lcd: [wreg+status,2+status,0+pclath+cstack]
  7176  019A  2226  3180         	fcall	_i2c_Start
  7177                           
  7178                           ;Multi_RX_testjig_v1.c: 1068: i2c_Write(0x7C);
  7179  019C  307C               	movlw	124
  7180  019D  221A  3180         	fcall	_i2c_Write
  7181                           
  7182                           ;Multi_RX_testjig_v1.c: 1069: i2c_Write(0x00);
  7183  019F  3000               	movlw	0
  7184  01A0  221A  3180         	fcall	_i2c_Write
  7185                           
  7186                           ;Multi_RX_testjig_v1.c: 1070: i2c_Write(0x01);
  7187  01A2  3001               	movlw	1
  7188  01A3  221A  3180         	fcall	_i2c_Write
  7189                           
  7190                           ;Multi_RX_testjig_v1.c: 1071: _delay((unsigned long)((2)*(16000000/4000.0)));
  7191  01A5  300B               	movlw	11
  7192  01A6  00F2               	movwf	??_clear_lcd+1
  7193  01A7  3062               	movlw	98
  7194  01A8  00F1               	movwf	??_clear_lcd
  7195  01A9                     u4477:	
  7196  01A9  0BF1               	decfsz	??_clear_lcd,f
  7197  01AA  29A9               	goto	u4477
  7198  01AB  0BF2               	decfsz	??_clear_lcd+1,f
  7199  01AC  29A9               	goto	u4477
  7200  01AD  0000               	nop
  7201                           
  7202                           ;Multi_RX_testjig_v1.c: 1072: i2c_Stop();
  7203  01AE  2A2B               	ljmp	l2521
  7204  01AF                     __end_of_clear_lcd:	
  7205  01AF                     __ptext29:	
  7206 ;; *************** function _digitalpot *****************
  7207 ;; Defined at:
  7208 ;;		line 1943 in file "Multi_RX_testjig_v1.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;  value           1    wreg     unsigned char 
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;  value           1    3[COMMON] unsigned char 
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  1    wreg      void 
  7215 ;; Registers used:
  7216 ;;		wreg, status,2, status,0, pclath, cstack
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/4
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7224 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7225 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7226 ;;Total ram usage:        3 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:    2
  7229 ;; This function calls:
  7230 ;;		_i2c_Start
  7231 ;;		_i2c_Stop
  7232 ;;		_i2c_Write
  7233 ;; This function is called by:
  7234 ;;		_Vout_set
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           
  7239                           ;psect for function _digitalpot
  7240  01AF                     _digitalpot:	
  7241                           
  7242                           ;incstack = 0
  7243                           ; Regs used in _digitalpot: [wreg+status,2+status,0+pclath+cstack]
  7244                           ;digitalpot@value stored from wreg
  7245  01AF  00F3               	movwf	digitalpot@value
  7246                           
  7247                           ;Multi_RX_testjig_v1.c: 1945: i2c_Start();
  7248  01B0  2226  3180         	fcall	_i2c_Start
  7249                           
  7250                           ;Multi_RX_testjig_v1.c: 1946: i2c_Write(0x5C);
  7251  01B2  305C               	movlw	92
  7252  01B3  221A  3180         	fcall	_i2c_Write
  7253                           
  7254                           ;Multi_RX_testjig_v1.c: 1947: i2c_Write(0b00000000);
  7255  01B5  3000               	movlw	0
  7256  01B6  221A  3180         	fcall	_i2c_Write
  7257                           
  7258                           ;Multi_RX_testjig_v1.c: 1948: i2c_Write(value);
  7259  01B8  0873               	movf	digitalpot@value,w
  7260  01B9  221A  3180         	fcall	_i2c_Write
  7261                           
  7262                           ;Multi_RX_testjig_v1.c: 1949: i2c_Stop();
  7263  01BB  222B  3180         	fcall	_i2c_Stop
  7264                           
  7265                           ;Multi_RX_testjig_v1.c: 1950: _delay((unsigned long)((20)*(16000000/4000.0)));
  7266  01BD  3068               	movlw	104
  7267  01BE  00F2               	movwf	??_digitalpot+1
  7268  01BF  30E4               	movlw	228
  7269  01C0  00F1               	movwf	??_digitalpot
  7270  01C1                     u4507:	
  7271  01C1  0BF1               	decfsz	??_digitalpot,f
  7272  01C2  29C1               	goto	u4507
  7273  01C3  0BF2               	decfsz	??_digitalpot+1,f
  7274  01C4  29C1               	goto	u4507
  7275  01C5  0000               	nop
  7276  01C6  0008               	return
  7277  01C7                     __end_of_digitalpot:	
  7278  01C7                     __ptext6:	
  7279 ;; *************** function _i2c_Write_string *****************
  7280 ;; Defined at:
  7281 ;;		line 997 in file "Multi_RX_testjig_v1.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;  data            2    1[COMMON] PTR const unsigned char 
  7284 ;;		 -> STR_170(17), STR_169(12), STR_168(13), STR_167(17), 
  7285 ;;		 -> STR_166(14), STR_165(17), STR_164(8), STR_163(17), 
  7286 ;;		 -> STR_162(8), STR_161(9), STR_160(14), STR_159(13), 
  7287 ;;		 -> STR_158(11), STR_157(10), STR_156(13), STR_155(16), 
  7288 ;;		 -> STR_154(4), STR_153(12), STR_152(10), STR_151(10), 
  7289 ;;		 -> STR_150(4), STR_149(12), STR_148(2), STR_147(14), 
  7290 ;;		 -> STR_146(4), STR_145(12), STR_144(15), STR_143(8), 
  7291 ;;		 -> STR_142(17), STR_141(8), STR_140(16), STR_139(8), 
  7292 ;;		 -> STR_138(7), STR_137(8), STR_136(10), STR_135(8), 
  7293 ;;		 -> STR_134(13), STR_133(13), STR_132(14), STR_131(13), 
  7294 ;;		 -> STR_130(4), STR_129(12), STR_128(4), STR_127(12), 
  7295 ;;		 -> STR_126(5), STR_125(8), STR_124(9), STR_123(8), 
  7296 ;;		 -> STR_122(13), STR_121(12), STR_120(16), STR_119(12), 
  7297 ;;		 -> STR_118(14), STR_117(12), STR_116(4), STR_115(12), 
  7298 ;;		 -> STR_114(4), STR_113(12), STR_112(4), STR_111(8), 
  7299 ;;		 -> STR_110(4), STR_109(12), STR_108(9), STR_107(10), 
  7300 ;;		 -> STR_106(3), STR_105(12), STR_104(7), STR_103(9), 
  7301 ;;		 -> STR_102(4), STR_101(12), STR_100(4), STR_99(12), 
  7302 ;;		 -> STR_98(15), STR_97(9), STR_96(16), STR_95(9), 
  7303 ;;		 -> STR_94(3), STR_93(12), STR_92(9), STR_91(10), 
  7304 ;;		 -> STR_90(3), STR_89(9), STR_88(1), STR_87(9), 
  7305 ;;		 -> STR_86(3), STR_85(12), STR_84(9), STR_83(10), 
  7306 ;;		 -> STR_82(3), STR_81(12), STR_80(7), STR_79(9), 
  7307 ;;		 -> STR_78(4), STR_77(12), STR_76(4), STR_75(12), 
  7308 ;;		 -> STR_74(15), STR_73(9), STR_72(16), STR_71(9), 
  7309 ;;		 -> STR_70(3), STR_69(12), STR_68(9), STR_67(10), 
  7310 ;;		 -> STR_66(3), STR_65(9), STR_64(1), STR_63(9), 
  7311 ;;		 -> STR_62(9), STR_61(19), STR_60(3), STR_59(12), 
  7312 ;;		 -> STR_58(7), STR_57(16), STR_56(3), STR_55(12), 
  7313 ;;		 -> STR_54(9), STR_53(19), STR_52(5), STR_51(11), 
  7314 ;;		 -> STR_50(1), STR_49(11), STR_48(9), STR_47(12), 
  7315 ;;		 -> STR_46(9), STR_45(12), STR_44(6), STR_43(13), 
  7316 ;;		 -> STR_42(3), STR_41(12), STR_40(12), STR_39(13), 
  7317 ;;		 -> STR_38(3), STR_37(12), STR_36(6), STR_35(13), 
  7318 ;;		 -> STR_34(9), STR_33(19), STR_32(6), STR_31(12), 
  7319 ;;		 -> STR_30(13), STR_29(12), STR_28(1), STR_27(19), 
  7320 ;;		 -> STR_26(12), STR_25(14), STR_24(11), STR_23(11), 
  7321 ;;		 -> STR_22(13), STR_21(15), STR_20(13), STR_19(15), 
  7322 ;;		 -> STR_18(13), STR_17(14), STR_16(13), STR_15(14), 
  7323 ;;		 -> STR_14(12), STR_13(14), STR_12(11), STR_11(11), 
  7324 ;;		 -> STR_10(13), STR_9(14), STR_8(13), STR_7(14), 
  7325 ;;		 -> STR_6(1), STR_5(15), STR_4(14), STR_3(9), 
  7326 ;;		 -> STR_2(17), STR_1(9), 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;		None
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1    wreg      void 
  7331 ;; Registers used:
  7332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 1F/4
  7335 ;;		On exit  : 1F/4
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7341 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7342 ;;Total ram usage:        3 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    2
  7345 ;; This function calls:
  7346 ;;		_i2c_Start
  7347 ;;		_i2c_Stop
  7348 ;;		_i2c_Write
  7349 ;; This function is called by:
  7350 ;;		_print_error
  7351 ;;		_print_screen
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           
  7356                           ;psect for function _i2c_Write_string
  7357  01C7                     _i2c_Write_string:	
  7358  01C7                     l2523:	
  7359                           ;incstack = 0
  7360                           ; Regs used in _i2c_Write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7361                           
  7362                           
  7363                           ;Multi_RX_testjig_v1.c: 999: i2c_Start();
  7364  01C7  2226  3180         	fcall	_i2c_Start
  7365                           
  7366                           ;Multi_RX_testjig_v1.c: 1000: i2c_Write(0x7C);
  7367  01C9  307C               	movlw	124
  7368  01CA  221A  3180         	fcall	_i2c_Write
  7369                           
  7370                           ;Multi_RX_testjig_v1.c: 1001: i2c_Write(0x40);
  7371  01CC  3040               	movlw	64
  7372  01CD  221A  3180         	fcall	_i2c_Write
  7373  01CF                     l2533:	
  7374                           ;Multi_RX_testjig_v1.c: 1003: while(*data != (0))
  7375                           
  7376  01CF  0871               	movf	i2c_Write_string@data,w
  7377  01D0  0084               	movwf	4
  7378  01D1  0872               	movf	i2c_Write_string@data+1,w
  7379  01D2  0085               	movwf	5
  7380  01D3  0012               	moviw fsr0++
  7381  01D4  1903               	btfsc	3,2
  7382  01D5  29E1               	goto	l2535
  7383                           
  7384                           ;Multi_RX_testjig_v1.c: 1004: {
  7385                           ;Multi_RX_testjig_v1.c: 1005: i2c_Write(*data);
  7386  01D6  0871               	movf	i2c_Write_string@data,w
  7387  01D7  0084               	movwf	4
  7388  01D8  0872               	movf	i2c_Write_string@data+1,w
  7389  01D9  0085               	movwf	5
  7390  01DA  0800               	movf	0,w	;code access
  7391  01DB  221A  3180         	fcall	_i2c_Write
  7392                           
  7393                           ;Multi_RX_testjig_v1.c: 1006: data++;
  7394  01DD  0AF1               	incf	i2c_Write_string@data,f
  7395  01DE  1903               	skipnz
  7396  01DF  0AF2               	incf	i2c_Write_string@data+1,f
  7397  01E0  29CF               	goto	l2533
  7398  01E1                     l2535:	
  7399                           
  7400                           ;Multi_RX_testjig_v1.c: 1007: }
  7401                           ;Multi_RX_testjig_v1.c: 1008: i2c_Stop();
  7402  01E1  2A2B               	ljmp	l2521
  7403  01E2                     __end_of_i2c_Write_string:	
  7404  01E2                     __ptext17:	
  7405 ;; *************** function _init_i2c_lcd_5v *****************
  7406 ;; Defined at:
  7407 ;;		line 1021 in file "Multi_RX_testjig_v1.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;  contrast        1    wreg     unsigned char 
  7410 ;;  single1_doub    1    1[COMMON] unsigned char 
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;  contrast        1    4[COMMON] unsigned char 
  7413 ;; Return value:  Size  Location     Type
  7414 ;;                  1    wreg      void 
  7415 ;; Registers used:
  7416 ;;		wreg, status,2, status,0, pclath, cstack
  7417 ;; Tracked objects:
  7418 ;;		On entry : 1F/4
  7419 ;;		On exit  : 1F/4
  7420 ;;		Unchanged: 0/0
  7421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7422 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7423 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7424 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7425 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7426 ;;Total ram usage:        4 bytes
  7427 ;; Hardware stack levels used:    1
  7428 ;; Hardware stack levels required when called:    2
  7429 ;; This function calls:
  7430 ;;		_i2c_Start
  7431 ;;		_i2c_Stop
  7432 ;;		_i2c_Write
  7433 ;; This function is called by:
  7434 ;;		_main
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           
  7439                           ;psect for function _init_i2c_lcd_5v
  7440  01E2                     _init_i2c_lcd_5v:	
  7441                           
  7442                           ;incstack = 0
  7443                           ; Regs used in _init_i2c_lcd_5v: [wreg+status,2+status,0+pclath+cstack]
  7444                           ;init_i2c_lcd_5v@contrast stored from wreg
  7445  01E2  00F4               	movwf	init_i2c_lcd_5v@contrast
  7446                           
  7447                           ;Multi_RX_testjig_v1.c: 1023: i2c_Start();
  7448  01E3  2226  3180         	fcall	_i2c_Start
  7449                           
  7450                           ;Multi_RX_testjig_v1.c: 1024: i2c_Write(0x7C);
  7451  01E5  307C               	movlw	124
  7452  01E6  221A  3180         	fcall	_i2c_Write
  7453                           
  7454                           ;Multi_RX_testjig_v1.c: 1025: i2c_Write(0x00);
  7455  01E8  3000               	movlw	0
  7456  01E9  221A  3180         	fcall	_i2c_Write
  7457                           
  7458                           ;Multi_RX_testjig_v1.c: 1026: i2c_Write(0x39);
  7459  01EB  3039               	movlw	57
  7460  01EC  221A  3180         	fcall	_i2c_Write
  7461                           
  7462                           ;Multi_RX_testjig_v1.c: 1027: i2c_Write(0x1C);
  7463  01EE  301C               	movlw	28
  7464  01EF  221A  3180         	fcall	_i2c_Write
  7465                           
  7466                           ;Multi_RX_testjig_v1.c: 1028: i2c_Write(0x70 | contrast);
  7467  01F1  0874               	movf	init_i2c_lcd_5v@contrast,w
  7468  01F2  3870               	iorlw	112
  7469  01F3  221A  3180         	fcall	_i2c_Write
  7470                           
  7471                           ;Multi_RX_testjig_v1.c: 1029: i2c_Write(0x50);
  7472  01F5  3050               	movlw	80
  7473  01F6  221A  3180         	fcall	_i2c_Write
  7474                           
  7475                           ;Multi_RX_testjig_v1.c: 1030: i2c_Write(0x6C);
  7476  01F8  306C               	movlw	108
  7477  01F9  221A  3180         	fcall	_i2c_Write
  7478                           
  7479                           ;Multi_RX_testjig_v1.c: 1031: if(single1_double2 == 1)
  7480  01FB  0B71               	decfsz	init_i2c_lcd_5v@single1_double2,w
  7481  01FC  2A00               	goto	l2997
  7482                           
  7483                           ;Multi_RX_testjig_v1.c: 1032: i2c_Write(0x38);
  7484  01FD  3038               	movlw	56
  7485  01FE  221A  3180         	fcall	_i2c_Write
  7486  0200                     l2997:	
  7487                           
  7488                           ;Multi_RX_testjig_v1.c: 1033: if(single1_double2 == 2)
  7489  0200  3002               	movlw	2
  7490  0201  0671               	xorwf	init_i2c_lcd_5v@single1_double2,w
  7491  0202  1D03               	btfss	3,2
  7492  0203  2A07               	goto	l491
  7493                           
  7494                           ;Multi_RX_testjig_v1.c: 1034: i2c_Write(0x34);
  7495  0204  3034               	movlw	52
  7496  0205  221A  3180         	fcall	_i2c_Write
  7497  0207                     l491:	
  7498                           
  7499                           ;Multi_RX_testjig_v1.c: 1035: i2c_Write(0x0C);
  7500  0207  300C               	movlw	12
  7501  0208  221A  3180         	fcall	_i2c_Write
  7502                           
  7503                           ;Multi_RX_testjig_v1.c: 1036: i2c_Write(0x06);
  7504  020A  3006               	movlw	6
  7505  020B  221A  3180         	fcall	_i2c_Write
  7506                           
  7507                           ;Multi_RX_testjig_v1.c: 1037: i2c_Write(0x01);
  7508  020D  3001               	movlw	1
  7509  020E  221A  3180         	fcall	_i2c_Write
  7510                           
  7511                           ;Multi_RX_testjig_v1.c: 1038: _delay((unsigned long)((2)*(16000000/4000.0)));
  7512  0210  300B               	movlw	11
  7513  0211  00F3               	movwf	??_init_i2c_lcd_5v+1
  7514  0212  3062               	movlw	98
  7515  0213  00F2               	movwf	??_init_i2c_lcd_5v
  7516  0214                     u4487:	
  7517  0214  0BF2               	decfsz	??_init_i2c_lcd_5v,f
  7518  0215  2A14               	goto	u4487
  7519  0216  0BF3               	decfsz	??_init_i2c_lcd_5v+1,f
  7520  0217  2A14               	goto	u4487
  7521  0218  0000               	nop
  7522                           
  7523                           ;Multi_RX_testjig_v1.c: 1039: i2c_Stop();
  7524  0219  2A2B               	ljmp	l2521
  7525  021A                     __end_of_init_i2c_lcd_5v:	
  7526  021A                     __ptext30:	
  7527 ;; *************** function _i2c_Write *****************
  7528 ;; Defined at:
  7529 ;;		line 983 in file "Multi_RX_testjig_v1.c"
  7530 ;; Parameters:    Size  Location     Type
  7531 ;;  data            1    wreg     unsigned char 
  7532 ;; Auto vars:     Size  Location     Type
  7533 ;;  data            1    0[COMMON] unsigned char 
  7534 ;; Return value:  Size  Location     Type
  7535 ;;                  1    wreg      void 
  7536 ;; Registers used:
  7537 ;;		wreg, status,2
  7538 ;; Tracked objects:
  7539 ;;		On entry : 1F/4
  7540 ;;		On exit  : 1F/4
  7541 ;;		Unchanged: 0/0
  7542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7546 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7547 ;;Total ram usage:        1 bytes
  7548 ;; Hardware stack levels used:    1
  7549 ;; Hardware stack levels required when called:    1
  7550 ;; This function calls:
  7551 ;;		Nothing
  7552 ;; This function is called by:
  7553 ;;		_i2c_Write_string
  7554 ;;		_i2c_write_char
  7555 ;;		_init_i2c_lcd_5v
  7556 ;;		_clear_lcd
  7557 ;;		_i2c_first_line
  7558 ;;		_i2c_second_line
  7559 ;;		_lcd_set_cursor
  7560 ;;		_digitalpot
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           
  7565                           ;psect for function _i2c_Write
  7566  021A                     _i2c_Write:	
  7567                           
  7568                           ;incstack = 0
  7569                           ; Regs used in _i2c_Write: [wreg+status,2]
  7570                           ;i2c_Write@data stored from wreg
  7571  021A  00F0               	movwf	i2c_Write@data
  7572                           
  7573                           ;Multi_RX_testjig_v1.c: 985: SSP1BUF = data;
  7574  021B  0870               	movf	i2c_Write@data,w
  7575  021C  0091               	movwf	17	;volatile
  7576  021D                     l466:	
  7577                           ;Multi_RX_testjig_v1.c: 986: while(SSP1STATbits.BF == 1);
  7578                           
  7579  021D  1814               	btfsc	20,0	;volatile
  7580  021E  2A1D               	goto	l466
  7581  021F                     l2517:	
  7582  021F  0816               	movf	22,w	;volatile
  7583  0220  391F               	andlw	31
  7584  0221  1D03               	btfss	3,2
  7585  0222  2A1F               	goto	l2517
  7586  0223  1D14               	btfss	20,2	;volatile
  7587  0224  0008               	return
  7588  0225  2A1F               	goto	l2517
  7589  0226                     __end_of_i2c_Write:	
  7590  0226                     __ptext32:	
  7591 ;; *************** function _i2c_Start *****************
  7592 ;; Defined at:
  7593 ;;		line 974 in file "Multi_RX_testjig_v1.c"
  7594 ;; Parameters:    Size  Location     Type
  7595 ;;		None
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;		None
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  1    wreg      void 
  7600 ;; Registers used:
  7601 ;;		None
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/4
  7604 ;;		On exit  : 1F/4
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7611 ;;Total ram usage:        0 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    1
  7614 ;; This function calls:
  7615 ;;		Nothing
  7616 ;; This function is called by:
  7617 ;;		_i2c_Write_string
  7618 ;;		_i2c_write_char
  7619 ;;		_init_i2c_lcd_5v
  7620 ;;		_clear_lcd
  7621 ;;		_i2c_first_line
  7622 ;;		_i2c_second_line
  7623 ;;		_lcd_set_cursor
  7624 ;;		_digitalpot
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           
  7629                           ;psect for function _i2c_Start
  7630  0226                     _i2c_Start:	
  7631                           
  7632                           ;Multi_RX_testjig_v1.c: 977: SSP1CON2bits.SEN = 1;
  7633                           
  7634                           ;incstack = 0
  7635                           ; Regs used in _i2c_Start: []
  7636  0226  0024               	movlb	4	; select bank4
  7637  0227  1416               	bsf	22,0	;volatile
  7638  0228                     l460:	
  7639                           ;Multi_RX_testjig_v1.c: 979: while(SSP1CON2bits.SEN == 1);
  7640                           
  7641  0228  1C16               	btfss	22,0	;volatile
  7642  0229  0008               	return
  7643  022A  2A28               	goto	l460
  7644  022B                     __end_of_i2c_Start:	
  7645  022B                     __ptext31:	
  7646 ;; *************** function _i2c_Stop *****************
  7647 ;; Defined at:
  7648 ;;		line 990 in file "Multi_RX_testjig_v1.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;		None
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;		None
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  1    wreg      void 
  7655 ;; Registers used:
  7656 ;;		None
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/4
  7659 ;;		On exit  : 1F/4
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7666 ;;Total ram usage:        0 bytes
  7667 ;; Hardware stack levels used:    1
  7668 ;; Hardware stack levels required when called:    1
  7669 ;; This function calls:
  7670 ;;		Nothing
  7671 ;; This function is called by:
  7672 ;;		_i2c_Write_string
  7673 ;;		_i2c_write_char
  7674 ;;		_init_i2c_lcd_5v
  7675 ;;		_clear_lcd
  7676 ;;		_i2c_first_line
  7677 ;;		_i2c_second_line
  7678 ;;		_lcd_set_cursor
  7679 ;;		_digitalpot
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           
  7684                           ;psect for function _i2c_Stop
  7685  022B                     _i2c_Stop:	
  7686  022B                     l2521:	
  7687                           ;incstack = 0
  7688                           ; Regs used in _i2c_Stop: []
  7689                           
  7690                           
  7691                           ;Multi_RX_testjig_v1.c: 992: SSP1CON2bits.PEN = 1;
  7692  022B  0024               	movlb	4	; select bank4
  7693  022C  1516               	bsf	22,2	;volatile
  7694  022D                     l475:	
  7695                           ;Multi_RX_testjig_v1.c: 993: while(SSP1CON2bits.PEN == 1);
  7696                           
  7697  022D  1D16               	btfss	22,2	;volatile
  7698  022E  0008               	return
  7699  022F  2A2D               	goto	l475
  7700  0230                     __end_of_i2c_Stop:	
  7701  0230                     __ptext12:	
  7702 ;; *************** function _ten_thou_conv *****************
  7703 ;; Defined at:
  7704 ;;		line 1350 in file "Multi_RX_testjig_v1.c"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;  n               2    6[COMMON] int 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;		None
  7709 ;; Return value:  Size  Location     Type
  7710 ;;                  1    wreg      void 
  7711 ;; Registers used:
  7712 ;;		wreg, status,2, status,0, pclath, cstack
  7713 ;; Tracked objects:
  7714 ;;		On entry : 1F/0
  7715 ;;		On exit  : 1F/0
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7720 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7721 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7722 ;;Total ram usage:        5 bytes
  7723 ;; Hardware stack levels used:    1
  7724 ;; Hardware stack levels required when called:    2
  7725 ;; This function calls:
  7726 ;;		___bmul
  7727 ;;		___wmul
  7728 ;; This function is called by:
  7729 ;;		_lcd_print_int
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           
  7734                           ;psect for function _ten_thou_conv
  7735  0230                     _ten_thou_conv:	
  7736                           
  7737                           ;Multi_RX_testjig_v1.c: 1352: unit = n & 0x1F;
  7738                           
  7739                           ;incstack = 0
  7740                           ; Regs used in _ten_thou_conv: [wreg+status,2+status,0+pclath+cstack]
  7741  0230  0876               	movf	ten_thou_conv@n,w
  7742  0231  00E5               	movwf	_unit
  7743  0232  301F               	movlw	31
  7744  0233  05E5               	andwf	_unit,f
  7745                           
  7746                           ;Multi_RX_testjig_v1.c: 1353: ten = (n >> 5) & 0xF;
  7747  0234  0877               	movf	ten_thou_conv@n+1,w
  7748  0235  00F9               	movwf	??_ten_thou_conv+1
  7749  0236  0876               	movf	ten_thou_conv@n,w
  7750  0237  00F8               	movwf	??_ten_thou_conv
  7751  0238  3005               	movlw	5
  7752  0239  00FA               	movwf	??_ten_thou_conv+2
  7753  023A                     u2345:	
  7754  023A  0D79               	rlf	??_ten_thou_conv+1,w
  7755  023B  0CF9               	rrf	??_ten_thou_conv+1,f
  7756  023C  0CF8               	rrf	??_ten_thou_conv,f
  7757  023D  0BFA               	decfsz	??_ten_thou_conv+2,f
  7758  023E  2A3A               	goto	u2345
  7759  023F  0878               	movf	??_ten_thou_conv,w
  7760  0240  00E3               	movwf	_ten
  7761  0241  300F               	movlw	15
  7762  0242  05E3               	andwf	_ten,f
  7763                           
  7764                           ;Multi_RX_testjig_v1.c: 1354: hund = (n >> 9) & 0xF;
  7765  0243  0877               	movf	ten_thou_conv@n+1,w
  7766  0244  00F9               	movwf	??_ten_thou_conv+1
  7767  0245  0876               	movf	ten_thou_conv@n,w
  7768  0246  00F8               	movwf	??_ten_thou_conv
  7769  0247  3009               	movlw	9
  7770  0248  00FA               	movwf	??_ten_thou_conv+2
  7771  0249                     u2355:	
  7772  0249  0D79               	rlf	??_ten_thou_conv+1,w
  7773  024A  0CF9               	rrf	??_ten_thou_conv+1,f
  7774  024B  0CF8               	rrf	??_ten_thou_conv,f
  7775  024C  0BFA               	decfsz	??_ten_thou_conv+2,f
  7776  024D  2A49               	goto	u2355
  7777  024E  0878               	movf	??_ten_thou_conv,w
  7778  024F  00E1               	movwf	_hund
  7779  0250  300F               	movlw	15
  7780  0251  05E1               	andwf	_hund,f
  7781                           
  7782                           ;Multi_RX_testjig_v1.c: 1355: thou = (n >> 13) & 0x7;
  7783  0252  0877               	movf	ten_thou_conv@n+1,w
  7784  0253  00F9               	movwf	??_ten_thou_conv+1
  7785  0254  0876               	movf	ten_thou_conv@n,w
  7786  0255  00F8               	movwf	??_ten_thou_conv
  7787  0256  300D               	movlw	13
  7788  0257  00FA               	movwf	??_ten_thou_conv+2
  7789  0258                     u2365:	
  7790  0258  0D79               	rlf	??_ten_thou_conv+1,w
  7791  0259  0CF9               	rrf	??_ten_thou_conv+1,f
  7792  025A  0CF8               	rrf	??_ten_thou_conv,f
  7793  025B  0BFA               	decfsz	??_ten_thou_conv+2,f
  7794  025C  2A58               	goto	u2365
  7795  025D  0878               	movf	??_ten_thou_conv,w
  7796  025E  00E6               	movwf	_thou
  7797  025F  3007               	movlw	7
  7798  0260  05E6               	andwf	_thou,f
  7799                           
  7800                           ;Multi_RX_testjig_v1.c: 1357: unit = 2 * (thou + hund + ten) + unit;
  7801  0261  0866               	movf	_thou,w
  7802  0262  0761               	addwf	_hund,w
  7803  0263  0763               	addwf	_ten,w
  7804  0264  0709               	addwf	9,w
  7805  0265  07E5               	addwf	_unit,f
  7806                           
  7807                           ;Multi_RX_testjig_v1.c: 1358: ten_thou = (unit * 0x67) >> 10;
  7808  0266  0865               	movf	_unit,w
  7809  0267  00F0               	movwf	___wmul@multiplier
  7810  0268  3067               	movlw	103
  7811  0269  01F1               	clrf	___wmul@multiplier+1
  7812  026A  00F2               	movwf	___wmul@multiplicand
  7813  026B  01F3               	clrf	___wmul@multiplicand+1
  7814  026C  2302  3180         	fcall	___wmul
  7815  026E  0870               	movf	?___wmul,w
  7816  026F  00F8               	movwf	??_ten_thou_conv
  7817  0270  0871               	movf	?___wmul+1,w
  7818  0271  00F9               	movwf	??_ten_thou_conv+1
  7819  0272  300A               	movlw	10
  7820  0273  00FA               	movwf	??_ten_thou_conv+2
  7821  0274                     u2375:	
  7822  0274  0D79               	rlf	??_ten_thou_conv+1,w
  7823  0275  0CF9               	rrf	??_ten_thou_conv+1,f
  7824  0276  0CF8               	rrf	??_ten_thou_conv,f
  7825  0277  0BFA               	decfsz	??_ten_thou_conv+2,f
  7826  0278  2A74               	goto	u2375
  7827  0279  0878               	movf	??_ten_thou_conv,w
  7828  027A  00E4               	movwf	_ten_thou
  7829                           
  7830                           ;Multi_RX_testjig_v1.c: 1359: unit = unit - 10 * ten_thou;
  7831  027B  30F6               	movlw	246
  7832  027C  00F0               	movwf	___bmul@multiplicand
  7833  027D  0864               	movf	_ten_thou,w
  7834  027E  22DF  3180         	fcall	___bmul
  7835  0280  07E5               	addwf	_unit,f
  7836                           
  7837                           ;Multi_RX_testjig_v1.c: 1361: ten = 9 * thou + hund + 3 * ten + ten_thou;
  7838  0281  3009               	movlw	9
  7839  0282  00F0               	movwf	___bmul@multiplicand
  7840  0283  0866               	movf	_thou,w
  7841  0284  22DF  3180         	fcall	___bmul
  7842  0286  00F8               	movwf	??_ten_thou_conv
  7843  0287  0863               	movf	_ten,w
  7844  0288  0763               	addwf	_ten,w
  7845  0289  0763               	addwf	_ten,w
  7846  028A  0778               	addwf	??_ten_thou_conv,w
  7847  028B  0761               	addwf	_hund,w
  7848  028C  0764               	addwf	_ten_thou,w
  7849  028D  00E3               	movwf	_ten
  7850                           
  7851                           ;Multi_RX_testjig_v1.c: 1362: ten_thou = (ten * 0x67) >> 10;
  7852  028E  00F0               	movwf	___wmul@multiplier
  7853  028F  3067               	movlw	103
  7854  0290  01F1               	clrf	___wmul@multiplier+1
  7855  0291  00F2               	movwf	___wmul@multiplicand
  7856  0292  01F3               	clrf	___wmul@multiplicand+1
  7857  0293  2302  3180         	fcall	___wmul
  7858  0295  0870               	movf	?___wmul,w
  7859  0296  00F8               	movwf	??_ten_thou_conv
  7860  0297  0871               	movf	?___wmul+1,w
  7861  0298  00F9               	movwf	??_ten_thou_conv+1
  7862  0299  300A               	movlw	10
  7863  029A  00FA               	movwf	??_ten_thou_conv+2
  7864  029B                     u2385:	
  7865  029B  0D79               	rlf	??_ten_thou_conv+1,w
  7866  029C  0CF9               	rrf	??_ten_thou_conv+1,f
  7867  029D  0CF8               	rrf	??_ten_thou_conv,f
  7868  029E  0BFA               	decfsz	??_ten_thou_conv+2,f
  7869  029F  2A9B               	goto	u2385
  7870  02A0  0878               	movf	??_ten_thou_conv,w
  7871  02A1  00E4               	movwf	_ten_thou
  7872                           
  7873                           ;Multi_RX_testjig_v1.c: 1363: ten = ten - 10 * ten_thou;
  7874  02A2  30F6               	movlw	246
  7875  02A3  00F0               	movwf	___bmul@multiplicand
  7876  02A4  0864               	movf	_ten_thou,w
  7877  02A5  22DF  3180         	fcall	___bmul
  7878  02A7  07E3               	addwf	_ten,f
  7879                           
  7880                           ;Multi_RX_testjig_v1.c: 1365: hund = thou + 5 * hund + ten_thou;
  7881  02A8  3005               	movlw	5
  7882  02A9  00F0               	movwf	___bmul@multiplicand
  7883  02AA  0861               	movf	_hund,w
  7884  02AB  22DF  3180         	fcall	___bmul
  7885  02AD  0766               	addwf	_thou,w
  7886  02AE  0764               	addwf	_ten_thou,w
  7887  02AF  00E1               	movwf	_hund
  7888                           
  7889                           ;Multi_RX_testjig_v1.c: 1366: ten_thou = (hund * 0x67) >> 10;
  7890  02B0  00F0               	movwf	___wmul@multiplier
  7891  02B1  3067               	movlw	103
  7892  02B2  01F1               	clrf	___wmul@multiplier+1
  7893  02B3  00F2               	movwf	___wmul@multiplicand
  7894  02B4  01F3               	clrf	___wmul@multiplicand+1
  7895  02B5  2302  3180         	fcall	___wmul
  7896  02B7  0870               	movf	?___wmul,w
  7897  02B8  00F8               	movwf	??_ten_thou_conv
  7898  02B9  0871               	movf	?___wmul+1,w
  7899  02BA  00F9               	movwf	??_ten_thou_conv+1
  7900  02BB  300A               	movlw	10
  7901  02BC  00FA               	movwf	??_ten_thou_conv+2
  7902  02BD                     u2395:	
  7903  02BD  0D79               	rlf	??_ten_thou_conv+1,w
  7904  02BE  0CF9               	rrf	??_ten_thou_conv+1,f
  7905  02BF  0CF8               	rrf	??_ten_thou_conv,f
  7906  02C0  0BFA               	decfsz	??_ten_thou_conv+2,f
  7907  02C1  2ABD               	goto	u2395
  7908  02C2  0878               	movf	??_ten_thou_conv,w
  7909  02C3  00E4               	movwf	_ten_thou
  7910                           
  7911                           ;Multi_RX_testjig_v1.c: 1367: hund = hund - 10 * ten_thou;
  7912  02C4  30F6               	movlw	246
  7913  02C5  00F0               	movwf	___bmul@multiplicand
  7914  02C6  0864               	movf	_ten_thou,w
  7915  02C7  22DF  3180         	fcall	___bmul
  7916  02C9  07E1               	addwf	_hund,f
  7917                           
  7918                           ;Multi_RX_testjig_v1.c: 1369: thou = 8 * thou + ten_thou;
  7919  02CA  0866               	movf	_thou,w
  7920  02CB  0709               	addwf	9,w
  7921  02CC  0709               	addwf	9,w
  7922  02CD  0709               	addwf	9,w
  7923  02CE  0764               	addwf	_ten_thou,w
  7924  02CF  00E6               	movwf	_thou
  7925                           
  7926                           ;Multi_RX_testjig_v1.c: 1370: ten_thou = (thou * 0x1A) >> 8;
  7927  02D0  00F0               	movwf	___wmul@multiplier
  7928  02D1  301A               	movlw	26
  7929  02D2  01F1               	clrf	___wmul@multiplier+1
  7930  02D3  00F2               	movwf	___wmul@multiplicand
  7931  02D4  01F3               	clrf	___wmul@multiplicand+1
  7932  02D5  2302  3180         	fcall	___wmul
  7933  02D7  0871               	movf	?___wmul+1,w
  7934  02D8  00E4               	movwf	_ten_thou
  7935                           
  7936                           ;Multi_RX_testjig_v1.c: 1371: thou = thou - 10 * ten_thou;
  7937  02D9  30F6               	movlw	246
  7938  02DA  00F0               	movwf	___bmul@multiplicand
  7939  02DB  0864               	movf	_ten_thou,w
  7940  02DC  22DF               	fcall	___bmul
  7941  02DD  07E6               	addwf	_thou,f
  7942  02DE  0008               	return
  7943  02DF                     __end_of_ten_thou_conv:	
  7944  02DF                     __ptext14:	
  7945 ;; *************** function ___bmul *****************
  7946 ;; Defined at:
  7947 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;  multiplier      1    wreg     unsigned char 
  7950 ;;  multiplicand    1    0[COMMON] unsigned char 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;  multiplier      1    2[COMMON] unsigned char 
  7953 ;;  product         1    1[COMMON] unsigned char 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      unsigned char 
  7956 ;; Registers used:
  7957 ;;		wreg, status,2, status,0
  7958 ;; Tracked objects:
  7959 ;;		On entry : 1F/0
  7960 ;;		On exit  : 1F/0
  7961 ;;		Unchanged: 1F/0
  7962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7963 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7964 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7966 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7967 ;;Total ram usage:        3 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    1
  7970 ;; This function calls:
  7971 ;;		Nothing
  7972 ;; This function is called by:
  7973 ;;		_ten_thou_conv
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           
  7978                           ;psect for function ___bmul
  7979  02DF                     ___bmul:	
  7980                           
  7981                           ;incstack = 0
  7982                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7983                           ;___bmul@multiplier stored from wreg
  7984  02DF  00F2               	movwf	___bmul@multiplier
  7985  02E0  01F1               	clrf	___bmul@product
  7986  02E1  0870               	movf	___bmul@multiplicand,w
  7987  02E2  1872               	btfsc	___bmul@multiplier,0
  7988  02E3  07F1               	addwf	___bmul@product,f
  7989  02E4  35F0               	lslf	___bmul@multiplicand,f
  7990  02E5  0870               	movf	___bmul@multiplicand,w
  7991  02E6  18F2               	btfsc	___bmul@multiplier,1
  7992  02E7  07F1               	addwf	___bmul@product,f
  7993  02E8  35F0               	lslf	___bmul@multiplicand,f
  7994  02E9  0870               	movf	___bmul@multiplicand,w
  7995  02EA  1972               	btfsc	___bmul@multiplier,2
  7996  02EB  07F1               	addwf	___bmul@product,f
  7997  02EC  35F0               	lslf	___bmul@multiplicand,f
  7998  02ED  0870               	movf	___bmul@multiplicand,w
  7999  02EE  19F2               	btfsc	___bmul@multiplier,3
  8000  02EF  07F1               	addwf	___bmul@product,f
  8001  02F0  35F0               	lslf	___bmul@multiplicand,f
  8002  02F1  0870               	movf	___bmul@multiplicand,w
  8003  02F2  1A72               	btfsc	___bmul@multiplier,4
  8004  02F3  07F1               	addwf	___bmul@product,f
  8005  02F4  35F0               	lslf	___bmul@multiplicand,f
  8006  02F5  0870               	movf	___bmul@multiplicand,w
  8007  02F6  1AF2               	btfsc	___bmul@multiplier,5
  8008  02F7  07F1               	addwf	___bmul@product,f
  8009  02F8  35F0               	lslf	___bmul@multiplicand,f
  8010  02F9  0870               	movf	___bmul@multiplicand,w
  8011  02FA  1B72               	btfsc	___bmul@multiplier,6
  8012  02FB  07F1               	addwf	___bmul@product,f
  8013  02FC  35F0               	lslf	___bmul@multiplicand,f
  8014  02FD  0870               	movf	___bmul@multiplicand,w
  8015  02FE  1BF2               	btfsc	___bmul@multiplier,7
  8016  02FF  07F1               	addwf	___bmul@product,f
  8017  0300  0871               	movf	___bmul@product,w
  8018  0301  0008               	return
  8019  0302                     __end_of___bmul:	
  8020  0302                     __ptext13:	
  8021 ;; *************** function ___wmul *****************
  8022 ;; Defined at:
  8023 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  8024 ;; Parameters:    Size  Location     Type
  8025 ;;  multiplier      2    0[COMMON] unsigned int 
  8026 ;;  multiplicand    2    2[COMMON] unsigned int 
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;  product         2    4[COMMON] unsigned int 
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  2    0[COMMON] unsigned int 
  8031 ;; Registers used:
  8032 ;;		wreg, status,2, status,0
  8033 ;; Tracked objects:
  8034 ;;		On entry : 1F/0
  8035 ;;		On exit  : 1F/0
  8036 ;;		Unchanged: 1F/0
  8037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8038 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8041 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8042 ;;Total ram usage:        6 bytes
  8043 ;; Hardware stack levels used:    1
  8044 ;; Hardware stack levels required when called:    1
  8045 ;; This function calls:
  8046 ;;		Nothing
  8047 ;; This function is called by:
  8048 ;;		_ten_thou_conv
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           
  8053                           ;psect for function ___wmul
  8054  0302                     ___wmul:	
  8055                           
  8056                           ;incstack = 0
  8057                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8058  0302  01F4               	clrf	___wmul@product
  8059  0303  01F5               	clrf	___wmul@product+1
  8060  0304                     l2569:	
  8061  0304  1C70               	btfss	___wmul@multiplier,0
  8062  0305  2B0A               	goto	l2573
  8063  0306  0872               	movf	___wmul@multiplicand,w
  8064  0307  07F4               	addwf	___wmul@product,f
  8065  0308  0873               	movf	___wmul@multiplicand+1,w
  8066  0309  3DF5               	addwfc	___wmul@product+1,f
  8067  030A                     l2573:	
  8068  030A  35F2               	lslf	___wmul@multiplicand,f
  8069  030B  0DF3               	rlf	___wmul@multiplicand+1,f
  8070  030C  36F1               	lsrf	___wmul@multiplier+1,f
  8071  030D  0CF0               	rrf	___wmul@multiplier,f
  8072  030E  0870               	movf	___wmul@multiplier,w
  8073  030F  0471               	iorwf	___wmul@multiplier+1,w
  8074  0310  1D03               	btfss	3,2
  8075  0311  2B04               	goto	l2569
  8076  0312  0875               	movf	___wmul@product+1,w
  8077  0313  00F1               	movwf	?___wmul+1
  8078  0314  0874               	movf	___wmul@product,w
  8079  0315  00F0               	movwf	?___wmul
  8080  0316  0008               	return
  8081  0317                     __end_of___wmul:	
  8082                           
  8083                           	psect	swtext2
  8084  061A                     __pswtext2:	
  8085  061A                     S3941:	
  8086  061A  3180  28A7         	ljmp	l3083
  8087  061C  3180  28A9         	ljmp	l3085
  8088  061E  3180  28AB         	ljmp	l3087
  8089  0620  3180  28AD         	ljmp	l3089
  8090  0622  3180  28AF         	ljmp	l3091
  8091  0624  3180  28B1         	ljmp	l3093
  8092  0626  3180  28B3         	ljmp	l3095
  8093  0628  3180  28B5         	ljmp	l3097
  8094  062A  3180  28B7         	ljmp	l3099
  8095  062C  3180  28B9         	ljmp	l3101
  8096  062E  3180  28BB         	ljmp	l3103
  8097  0630  3180  28BD         	ljmp	l3105
  8098  0632  3180  28BF         	ljmp	l3107
  8099  0634  3180  28C6         	ljmp	l668
  8100  0636  3180  28C1         	ljmp	l3109
  8101  0638  3180  28C6         	ljmp	l668
  8102  063A  3180  28C6         	ljmp	l668
  8103  063C  3180  28C6         	ljmp	l668
  8104  063E  3180  28C6         	ljmp	l668
  8105  0640  3180  28C3         	ljmp	l3111
  8106                           
  8107                           	psect	intentry
  8108  0004                     __pintentry:	
  8109 ;; *************** function _isr *****************
  8110 ;; Defined at:
  8111 ;;		line 308 in file "Multi_RX_testjig_v1.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;		None
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;		None
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  1    wreg      void 
  8118 ;; Registers used:
  8119 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 1F/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8129 ;;Total ram usage:        0 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; This function calls:
  8132 ;;		Nothing
  8133 ;; This function is called by:
  8134 ;;		Interrupt level 1
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138  0004                     _isr:	
  8139                           
  8140                           ;incstack = 0
  8141  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8142                           
  8143                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  8144  0005  3180               	pagesel	$
  8145                           
  8146                           ;Multi_RX_testjig_v1.c: 310: if(INTCONbits.TMR0IF == 1)
  8147  0006  1D0B               	btfss	11,2	;volatile
  8148  0007  2822               	goto	i1l3259
  8149                           
  8150                           ;Multi_RX_testjig_v1.c: 311: {
  8151                           ;Multi_RX_testjig_v1.c: 313: if(testjig_timer)
  8152  0008  0020               	movlb	0	; select bank0
  8153  0009  085B               	movf	_testjig_timer,w	;volatile
  8154  000A  045C               	iorwf	_testjig_timer+1,w	;volatile
  8155  000B  1903               	btfsc	3,2
  8156  000C  2811               	goto	i1l3251
  8157                           
  8158                           ;Multi_RX_testjig_v1.c: 314: testjig_timer--;
  8159  000D  3001               	movlw	1
  8160  000E  02DB               	subwf	_testjig_timer,f	;volatile
  8161  000F  3000               	movlw	0
  8162  0010  3BDC               	subwfb	_testjig_timer+1,f	;volatile
  8163  0011                     i1l3251:	
  8164                           
  8165                           ;Multi_RX_testjig_v1.c: 315: if(uart_receive_timer)
  8166  0011  085F               	movf	_uart_receive_timer,w	;volatile
  8167  0012  0460               	iorwf	_uart_receive_timer+1,w	;volatile
  8168  0013  1903               	btfsc	3,2
  8169  0014  2819               	goto	i1l271
  8170                           
  8171                           ;Multi_RX_testjig_v1.c: 316: uart_receive_timer--;
  8172  0015  30FF               	movlw	-1
  8173  0016  07DF               	addwf	_uart_receive_timer,f	;volatile
  8174  0017  1C03               	skipc
  8175  0018  03E0               	decf	_uart_receive_timer+1,f	;volatile
  8176  0019                     i1l271:	
  8177                           
  8178                           ;Multi_RX_testjig_v1.c: 317: if(motor_direction_timer)
  8179  0019  0857               	movf	_motor_direction_timer,w	;volatile
  8180  001A  0458               	iorwf	_motor_direction_timer+1,w	;volatile
  8181  001B  1903               	btfsc	3,2
  8182  001C  2821               	goto	i1l3257
  8183                           
  8184                           ;Multi_RX_testjig_v1.c: 318: motor_direction_timer--;
  8185  001D  30FF               	movlw	-1
  8186  001E  07D7               	addwf	_motor_direction_timer,f	;volatile
  8187  001F  1C03               	skipc
  8188  0020  03D8               	decf	_motor_direction_timer+1,f	;volatile
  8189  0021                     i1l3257:	
  8190                           
  8191                           ;Multi_RX_testjig_v1.c: 320: INTCONbits.TMR0IF = 0;
  8192  0021  110B               	bcf	11,2	;volatile
  8193  0022                     i1l3259:	
  8194                           
  8195                           ;Multi_RX_testjig_v1.c: 322: }
  8196                           ;Multi_RX_testjig_v1.c: 323: if(PIR1bits.TMR2IF == 1)
  8197  0022  0020               	movlb	0	; select bank0
  8198  0023  1C91               	btfss	17,1	;volatile
  8199  0024  2893               	goto	i1l295
  8200                           
  8201                           ;Multi_RX_testjig_v1.c: 324: {
  8202                           ;Multi_RX_testjig_v1.c: 326: if(pickit_timer)
  8203  0025  0859               	movf	_pickit_timer,w	;volatile
  8204  0026  045A               	iorwf	_pickit_timer+1,w	;volatile
  8205  0027  1903               	btfsc	3,2
  8206  0028  2866               	goto	i1l3291
  8207                           
  8208                           ;Multi_RX_testjig_v1.c: 327: pickit_timer--;
  8209  0029  3001               	movlw	1
  8210  002A  02D9               	subwf	_pickit_timer,f	;volatile
  8211  002B  3000               	movlw	0
  8212  002C  3BDA               	subwfb	_pickit_timer+1,f	;volatile
  8213  002D  2870               	goto	i1l3293
  8214  002E                     i1l277:	
  8215                           ;Multi_RX_testjig_v1.c: 331: {
  8216                           ;Multi_RX_testjig_v1.c: 332: case pickit_start:
  8217                           
  8218                           
  8219                           ;Multi_RX_testjig_v1.c: 333: LATC2 = 1;
  8220  002E  0022               	movlb	2	; select bank2
  8221  002F  150E               	bsf	14,2	;volatile
  8222                           
  8223                           ;Multi_RX_testjig_v1.c: 334: LATC7 = 1;
  8224  0030  178E               	bsf	14,7	;volatile
  8225                           
  8226                           ;Multi_RX_testjig_v1.c: 335: pickit_timer = 10;
  8227  0031  300A               	movlw	10
  8228  0032  0020               	movlb	0	; select bank0
  8229  0033  00D9               	movwf	_pickit_timer	;volatile
  8230  0034  01DA               	clrf	_pickit_timer+1	;volatile
  8231                           
  8232                           ;Multi_RX_testjig_v1.c: 336: pickit_state = pickit_push_button;
  8233  0035  3002               	movlw	2
  8234  0036  2864               	goto	L33
  8235  0037                     i1l3267:	
  8236                           ;Multi_RX_testjig_v1.c: 337: break;
  8237                           
  8238                           
  8239                           ;Multi_RX_testjig_v1.c: 339: pickit_timer = 1000;
  8240  0037  30E8               	movlw	232
  8241  0038  00D9               	movwf	_pickit_timer	;volatile
  8242  0039  3003               	movlw	3
  8243  003A  00DA               	movwf	_pickit_timer+1	;volatile
  8244                           
  8245                           ;Multi_RX_testjig_v1.c: 340: LATC6 = 1;
  8246  003B  0022               	movlb	2	; select bank2
  8247  003C  170E               	bsf	14,6	;volatile
  8248                           
  8249                           ;Multi_RX_testjig_v1.c: 341: pickit_state = pickit_busy;
  8250  003D  2863               	goto	L34
  8251  003E                     i1l280:	
  8252                           ;Multi_RX_testjig_v1.c: 343: case pickit_busy:
  8253                           
  8254                           ;Multi_RX_testjig_v1.c: 342: break;
  8255                           
  8256                           
  8257                           ;Multi_RX_testjig_v1.c: 344: LATC6 = 0;
  8258  003E  0022               	movlb	2	; select bank2
  8259  003F  130E               	bcf	14,6	;volatile
  8260                           
  8261                           ;Multi_RX_testjig_v1.c: 345: if(RE6 == 0)
  8262  0040  0020               	movlb	0	; select bank0
  8263  0041  1B10               	btfsc	16,6	;volatile
  8264  0042  284A               	goto	i1l3277
  8265  0043  3065               	movlw	101
  8266                           
  8267                           ;Multi_RX_testjig_v1.c: 346: {
  8268                           ;Multi_RX_testjig_v1.c: 347: pickit_red_counter++;
  8269  0044  0AE2               	incf	_pickit_red_counter,f
  8270                           
  8271                           ;Multi_RX_testjig_v1.c: 348: if(pickit_red_counter > 100)
  8272  0045  0262               	subwf	_pickit_red_counter,w
  8273  0046  1C03               	skipc
  8274  0047  284B               	goto	i1l3279
  8275                           
  8276                           ;Multi_RX_testjig_v1.c: 349: pickit_state = pickit_finish;
  8277  0048  01E9               	clrf	_pickit_state
  8278  0049  284B               	goto	i1l3279
  8279  004A                     i1l3277:	
  8280                           
  8281                           ;Multi_RX_testjig_v1.c: 351: else
  8282                           ;Multi_RX_testjig_v1.c: 352: pickit_red_counter = 0;
  8283  004A  01E2               	clrf	_pickit_red_counter
  8284  004B                     i1l3279:	
  8285                           
  8286                           ;Multi_RX_testjig_v1.c: 353: if(RE5 == 0)
  8287  004B  1A90               	btfsc	16,5	;volatile
  8288  004C  2854               	goto	i1l284
  8289                           
  8290                           ;Multi_RX_testjig_v1.c: 354: {
  8291                           ;Multi_RX_testjig_v1.c: 355: pickit_state = pickit_error;
  8292  004D  3004               	movlw	4
  8293  004E  00E9               	movwf	_pickit_state
  8294                           
  8295                           ;Multi_RX_testjig_v1.c: 356: pickit_timer = 1000;
  8296  004F  30E8               	movlw	232
  8297  0050  00D9               	movwf	_pickit_timer	;volatile
  8298  0051  3003               	movlw	3
  8299  0052  00DA               	movwf	_pickit_timer+1	;volatile
  8300                           
  8301                           ;Multi_RX_testjig_v1.c: 357: }
  8302  0053  2857               	goto	i1l3285
  8303  0054                     i1l284:	
  8304                           
  8305                           ;Multi_RX_testjig_v1.c: 358: else if(RE4 == 0)
  8306  0054  1A10               	btfsc	16,4	;volatile
  8307  0055  2857               	goto	i1l3285
  8308                           
  8309                           ;Multi_RX_testjig_v1.c: 359: {
  8310                           ;Multi_RX_testjig_v1.c: 360: pickit_state = pickit_finish;
  8311  0056  01E9               	clrf	_pickit_state
  8312  0057                     i1l3285:	
  8313                           
  8314                           ;Multi_RX_testjig_v1.c: 361: }
  8315                           ;Multi_RX_testjig_v1.c: 362: pickit_timer = 1;
  8316  0057  3001               	movlw	1
  8317  0058  00D9               	movwf	_pickit_timer	;volatile
  8318  0059  01DA               	clrf	_pickit_timer+1	;volatile
  8319                           
  8320                           ;Multi_RX_testjig_v1.c: 363: break;
  8321  005A  2870               	goto	i1l3293
  8322  005B                     i1l287:	
  8323                           ;Multi_RX_testjig_v1.c: 364: case pickit_error:
  8324                           
  8325                           
  8326                           ;Multi_RX_testjig_v1.c: 365: LATC2 = 0;
  8327  005B  0022               	movlb	2	; select bank2
  8328  005C  110E               	bcf	14,2	;volatile
  8329                           
  8330                           ;Multi_RX_testjig_v1.c: 366: LATC7 = 0;
  8331  005D  138E               	bcf	14,7	;volatile
  8332                           
  8333                           ;Multi_RX_testjig_v1.c: 367: break;
  8334  005E  2870               	goto	i1l3293
  8335  005F                     i1l288:	
  8336                           ;Multi_RX_testjig_v1.c: 368: case pickit_finish:
  8337                           
  8338                           
  8339                           ;Multi_RX_testjig_v1.c: 369: LATC2 = 0;
  8340  005F  0022               	movlb	2	; select bank2
  8341  0060  110E               	bcf	14,2	;volatile
  8342                           
  8343                           ;Multi_RX_testjig_v1.c: 370: LATC7 = 0;
  8344  0061  138E               	bcf	14,7	;volatile
  8345                           
  8346                           ;Multi_RX_testjig_v1.c: 371: pickit_state = pickit_idle;
  8347  0062  3005               	movlw	5
  8348  0063                     L34:	
  8349  0063  0020               	movlb	0	; select bank0
  8350  0064                     L33:	
  8351  0064  00E9               	movwf	_pickit_state
  8352                           
  8353                           ;Multi_RX_testjig_v1.c: 372: break;
  8354  0065  2870               	goto	i1l3293
  8355  0066                     i1l3291:	
  8356  0066  0869               	movf	_pickit_state,w
  8357                           
  8358                           ; Switch size 1, requested type "speed"
  8359                           ; Number of cases is 6, Range of values is 0 to 5
  8360                           ; switch strategies available:
  8361                           ; Name         Instructions Cycles
  8362                           ; direct_byte           18     6 (fixed)
  8363                           ; simple_byte           19    10 (average)
  8364                           ; jumptable            260     6 (fixed)
  8365                           ;	Chosen strategy is direct_byte
  8366  0067  0084               	movwf	4
  8367  0068  3006               	movlw	6
  8368  0069  0204               	subwf	4,w
  8369  006A  1803               	skipnc
  8370  006B  2870               	goto	i1l3293
  8371  006C  3186               	movlp	high i1S3943
  8372  006D  3504               	lslf	4,w
  8373  006E  3E6E               	addlw	low i1S3943
  8374  006F  0082               	movwf	2
  8375  0070                     i1l3293:	
  8376                           
  8377                           ;Multi_RX_testjig_v1.c: 376: }
  8378                           ;Multi_RX_testjig_v1.c: 438: if(buzz_timer)
  8379  0070  0020               	movlb	0	; select bank0
  8380  0071  0867               	movf	_buzz_timer,w	;volatile
  8381  0072  0468               	iorwf	_buzz_timer+1,w	;volatile
  8382  0073  1903               	btfsc	3,2
  8383  0074  287A               	goto	i1l290
  8384                           
  8385                           ;Multi_RX_testjig_v1.c: 439: buzz_timer--;
  8386  0075  3001               	movlw	1
  8387  0076  02E7               	subwf	_buzz_timer,f	;volatile
  8388  0077  3000               	movlw	0
  8389  0078  3BE8               	subwfb	_buzz_timer+1,f	;volatile
  8390  0079  287C               	goto	i1l3297
  8391  007A                     i1l290:	
  8392                           
  8393                           ;Multi_RX_testjig_v1.c: 440: else
  8394                           ;Multi_RX_testjig_v1.c: 441: LATC5 = 0;
  8395  007A  0022               	movlb	2	; select bank2
  8396  007B  128E               	bcf	14,5	;volatile
  8397  007C                     i1l3297:	
  8398                           
  8399                           ;Multi_RX_testjig_v1.c: 442: if(one_second_timer)
  8400  007C  0020               	movlb	0	; select bank0
  8401  007D  086A               	movf	_one_second_timer,w	;volatile
  8402  007E  046B               	iorwf	_one_second_timer+1,w	;volatile
  8403  007F  1903               	btfsc	3,2
  8404  0080  2886               	goto	i1l3301
  8405                           
  8406                           ;Multi_RX_testjig_v1.c: 443: one_second_timer--;
  8407  0081  3001               	movlw	1
  8408  0082  02EA               	subwf	_one_second_timer,f	;volatile
  8409  0083  3000               	movlw	0
  8410  0084  3BEB               	subwfb	_one_second_timer+1,f	;volatile
  8411  0085  288A               	goto	i1l3303
  8412  0086                     i1l3301:	
  8413                           
  8414                           ;Multi_RX_testjig_v1.c: 444: else
  8415                           ;Multi_RX_testjig_v1.c: 445: {
  8416                           ;Multi_RX_testjig_v1.c: 446: one_second_timer = 1000;
  8417  0086  30E8               	movlw	232
  8418  0087  00EA               	movwf	_one_second_timer	;volatile
  8419  0088  3003               	movlw	3
  8420  0089  00EB               	movwf	_one_second_timer+1	;volatile
  8421  008A                     i1l3303:	
  8422                           
  8423                           ;Multi_RX_testjig_v1.c: 447: }
  8424                           ;Multi_RX_testjig_v1.c: 448: if(tj_timer)
  8425  008A  085D               	movf	_tj_timer,w
  8426  008B  045E               	iorwf	_tj_timer+1,w
  8427  008C  1903               	btfsc	3,2
  8428  008D  2892               	goto	i1l3307
  8429                           
  8430                           ;Multi_RX_testjig_v1.c: 449: tj_timer--;
  8431  008E  3001               	movlw	1
  8432  008F  02DD               	subwf	_tj_timer,f
  8433  0090  3000               	movlw	0
  8434  0091  3BDE               	subwfb	_tj_timer+1,f
  8435  0092                     i1l3307:	
  8436                           
  8437                           ;Multi_RX_testjig_v1.c: 450: PIR1bits.TMR2IF = 0;
  8438  0092  1091               	bcf	17,1	;volatile
  8439  0093                     i1l295:	
  8440  0093  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8441  0094  0009               	retfie
  8442  0095                     __end_of_isr:	
  8443  007E                     btemp	set	126	;btemp
  8444  007E                     int$flags	set	126
  8445  007E                     wtemp	set	126
  8446  007E                     wtemp0	set	126
  8447  0080                     wtemp1	set	128
  8448  0082                     wtemp2	set	130
  8449  0084                     wtemp3	set	132
  8450  0086                     wtemp4	set	134
  8451  0088                     wtemp5	set	136
  8452  007F                     wtemp6	set	127
  8453  007E                     ttemp	set	126
  8454  007E                     ttemp0	set	126
  8455  0081                     ttemp1	set	129
  8456  0084                     ttemp2	set	132
  8457  0087                     ttemp3	set	135
  8458  007F                     ttemp4	set	127
  8459  007E                     ltemp	set	126
  8460  007E                     ltemp0	set	126
  8461  0082                     ltemp1	set	130
  8462  0086                     ltemp2	set	134
  8463  0080                     ltemp3	set	128
  8464                           
  8465                           	psect	swtext3
  8466  066E                     __pswtext3:	
  8467  066E                     i1S3943:	
  8468  066E  3180  285F         	ljmp	i1l288
  8469  0670  3180  282E         	ljmp	i1l277
  8470  0672  3180  2837         	ljmp	i1l3267
  8471  0674  3180  283E         	ljmp	i1l280
  8472  0676  3180  285B         	ljmp	i1l287
  8473  0678  3180  2870         	ljmp	i1l3293


Data Sizes:
    Strings     822
    Constant    0
    Data        2
    BSS         24
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     47      76
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0

Pointer List with Targets:

    print_screen@bottom	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_170(CODE[17]), STR_168(CODE[13]), STR_166(CODE[14]), STR_164(CODE[8]), 
		 -> STR_162(CODE[8]), STR_160(CODE[14]), STR_158(CODE[11]), STR_156(CODE[13]), 
		 -> STR_152(CODE[10]), STR_148(CODE[2]), STR_140(CODE[16]), STR_138(CODE[7]), 
		 -> STR_136(CODE[10]), STR_126(CODE[5]), STR_124(CODE[9]), STR_112(CODE[4]), 
		 -> STR_90(CODE[3]), STR_88(CODE[1]), STR_66(CODE[3]), STR_64(CODE[1]), 
		 -> STR_52(CODE[5]), STR_50(CODE[1]), STR_44(CODE[6]), STR_36(CODE[6]), 
		 -> STR_34(CODE[9]), STR_30(CODE[13]), STR_28(CODE[1]), STR_6(CODE[1]), 
		 -> STR_2(CODE[17]), 

    print_screen@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_169(CODE[12]), STR_167(CODE[17]), STR_165(CODE[17]), STR_163(CODE[17]), 
		 -> STR_161(CODE[9]), STR_159(CODE[13]), STR_157(CODE[10]), STR_155(CODE[16]), 
		 -> STR_151(CODE[10]), STR_147(CODE[14]), STR_139(CODE[8]), STR_137(CODE[8]), 
		 -> STR_135(CODE[8]), STR_125(CODE[8]), STR_123(CODE[8]), STR_111(CODE[8]), 
		 -> STR_89(CODE[9]), STR_87(CODE[9]), STR_65(CODE[9]), STR_63(CODE[9]), 
		 -> STR_51(CODE[11]), STR_49(CODE[11]), STR_43(CODE[13]), STR_35(CODE[13]), 
		 -> STR_33(CODE[19]), STR_29(CODE[12]), STR_27(CODE[19]), STR_5(CODE[15]), 
		 -> STR_1(CODE[9]), 

    print_error@bottom	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_154(CODE[4]), STR_150(CODE[4]), STR_146(CODE[4]), STR_144(CODE[15]), 
		 -> STR_142(CODE[17]), STR_134(CODE[13]), STR_132(CODE[14]), STR_130(CODE[4]), 
		 -> STR_128(CODE[4]), STR_122(CODE[13]), STR_120(CODE[16]), STR_118(CODE[14]), 
		 -> STR_116(CODE[4]), STR_114(CODE[4]), STR_110(CODE[4]), STR_108(CODE[9]), 
		 -> STR_106(CODE[3]), STR_104(CODE[7]), STR_102(CODE[4]), STR_100(CODE[4]), 
		 -> STR_98(CODE[15]), STR_96(CODE[16]), STR_94(CODE[3]), STR_92(CODE[9]), 
		 -> STR_86(CODE[3]), STR_84(CODE[9]), STR_82(CODE[3]), STR_80(CODE[7]), 
		 -> STR_78(CODE[4]), STR_76(CODE[4]), STR_74(CODE[15]), STR_72(CODE[16]), 
		 -> STR_70(CODE[3]), STR_68(CODE[9]), STR_62(CODE[9]), STR_60(CODE[3]), 
		 -> STR_58(CODE[7]), STR_56(CODE[3]), STR_54(CODE[9]), STR_48(CODE[9]), 
		 -> STR_46(CODE[9]), STR_42(CODE[3]), STR_40(CODE[12]), STR_38(CODE[3]), 
		 -> STR_32(CODE[6]), STR_26(CODE[12]), STR_24(CODE[11]), STR_22(CODE[13]), 
		 -> STR_20(CODE[13]), STR_18(CODE[13]), STR_16(CODE[13]), STR_14(CODE[12]), 
		 -> STR_12(CODE[11]), STR_10(CODE[13]), STR_8(CODE[13]), STR_4(CODE[14]), 

    print_error@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_153(CODE[12]), STR_149(CODE[12]), STR_145(CODE[12]), STR_143(CODE[8]), 
		 -> STR_141(CODE[8]), STR_133(CODE[13]), STR_131(CODE[13]), STR_129(CODE[12]), 
		 -> STR_127(CODE[12]), STR_121(CODE[12]), STR_119(CODE[12]), STR_117(CODE[12]), 
		 -> STR_115(CODE[12]), STR_113(CODE[12]), STR_109(CODE[12]), STR_107(CODE[10]), 
		 -> STR_105(CODE[12]), STR_103(CODE[9]), STR_101(CODE[12]), STR_99(CODE[12]), 
		 -> STR_97(CODE[9]), STR_95(CODE[9]), STR_93(CODE[12]), STR_91(CODE[10]), 
		 -> STR_85(CODE[12]), STR_83(CODE[10]), STR_81(CODE[12]), STR_79(CODE[9]), 
		 -> STR_77(CODE[12]), STR_75(CODE[12]), STR_73(CODE[9]), STR_71(CODE[9]), 
		 -> STR_69(CODE[12]), STR_67(CODE[10]), STR_61(CODE[19]), STR_59(CODE[12]), 
		 -> STR_57(CODE[16]), STR_55(CODE[12]), STR_53(CODE[19]), STR_47(CODE[12]), 
		 -> STR_45(CODE[12]), STR_41(CODE[12]), STR_39(CODE[13]), STR_37(CODE[12]), 
		 -> STR_31(CODE[12]), STR_25(CODE[14]), STR_23(CODE[11]), STR_21(CODE[15]), 
		 -> STR_19(CODE[15]), STR_17(CODE[14]), STR_15(CODE[14]), STR_13(CODE[14]), 
		 -> STR_11(CODE[11]), STR_9(CODE[14]), STR_7(CODE[14]), STR_3(CODE[9]), 

    i2c_Write_string@data	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_170(CODE[17]), STR_169(CODE[12]), STR_168(CODE[13]), STR_167(CODE[17]), 
		 -> STR_166(CODE[14]), STR_165(CODE[17]), STR_164(CODE[8]), STR_163(CODE[17]), 
		 -> STR_162(CODE[8]), STR_161(CODE[9]), STR_160(CODE[14]), STR_159(CODE[13]), 
		 -> STR_158(CODE[11]), STR_157(CODE[10]), STR_156(CODE[13]), STR_155(CODE[16]), 
		 -> STR_154(CODE[4]), STR_153(CODE[12]), STR_152(CODE[10]), STR_151(CODE[10]), 
		 -> STR_150(CODE[4]), STR_149(CODE[12]), STR_148(CODE[2]), STR_147(CODE[14]), 
		 -> STR_146(CODE[4]), STR_145(CODE[12]), STR_144(CODE[15]), STR_143(CODE[8]), 
		 -> STR_142(CODE[17]), STR_141(CODE[8]), STR_140(CODE[16]), STR_139(CODE[8]), 
		 -> STR_138(CODE[7]), STR_137(CODE[8]), STR_136(CODE[10]), STR_135(CODE[8]), 
		 -> STR_134(CODE[13]), STR_133(CODE[13]), STR_132(CODE[14]), STR_131(CODE[13]), 
		 -> STR_130(CODE[4]), STR_129(CODE[12]), STR_128(CODE[4]), STR_127(CODE[12]), 
		 -> STR_126(CODE[5]), STR_125(CODE[8]), STR_124(CODE[9]), STR_123(CODE[8]), 
		 -> STR_122(CODE[13]), STR_121(CODE[12]), STR_120(CODE[16]), STR_119(CODE[12]), 
		 -> STR_118(CODE[14]), STR_117(CODE[12]), STR_116(CODE[4]), STR_115(CODE[12]), 
		 -> STR_114(CODE[4]), STR_113(CODE[12]), STR_112(CODE[4]), STR_111(CODE[8]), 
		 -> STR_110(CODE[4]), STR_109(CODE[12]), STR_108(CODE[9]), STR_107(CODE[10]), 
		 -> STR_106(CODE[3]), STR_105(CODE[12]), STR_104(CODE[7]), STR_103(CODE[9]), 
		 -> STR_102(CODE[4]), STR_101(CODE[12]), STR_100(CODE[4]), STR_99(CODE[12]), 
		 -> STR_98(CODE[15]), STR_97(CODE[9]), STR_96(CODE[16]), STR_95(CODE[9]), 
		 -> STR_94(CODE[3]), STR_93(CODE[12]), STR_92(CODE[9]), STR_91(CODE[10]), 
		 -> STR_90(CODE[3]), STR_89(CODE[9]), STR_88(CODE[1]), STR_87(CODE[9]), 
		 -> STR_86(CODE[3]), STR_85(CODE[12]), STR_84(CODE[9]), STR_83(CODE[10]), 
		 -> STR_82(CODE[3]), STR_81(CODE[12]), STR_80(CODE[7]), STR_79(CODE[9]), 
		 -> STR_78(CODE[4]), STR_77(CODE[12]), STR_76(CODE[4]), STR_75(CODE[12]), 
		 -> STR_74(CODE[15]), STR_73(CODE[9]), STR_72(CODE[16]), STR_71(CODE[9]), 
		 -> STR_70(CODE[3]), STR_69(CODE[12]), STR_68(CODE[9]), STR_67(CODE[10]), 
		 -> STR_66(CODE[3]), STR_65(CODE[9]), STR_64(CODE[1]), STR_63(CODE[9]), 
		 -> STR_62(CODE[9]), STR_61(CODE[19]), STR_60(CODE[3]), STR_59(CODE[12]), 
		 -> STR_58(CODE[7]), STR_57(CODE[16]), STR_56(CODE[3]), STR_55(CODE[12]), 
		 -> STR_54(CODE[9]), STR_53(CODE[19]), STR_52(CODE[5]), STR_51(CODE[11]), 
		 -> STR_50(CODE[1]), STR_49(CODE[11]), STR_48(CODE[9]), STR_47(CODE[12]), 
		 -> STR_46(CODE[9]), STR_45(CODE[12]), STR_44(CODE[6]), STR_43(CODE[13]), 
		 -> STR_42(CODE[3]), STR_41(CODE[12]), STR_40(CODE[12]), STR_39(CODE[13]), 
		 -> STR_38(CODE[3]), STR_37(CODE[12]), STR_36(CODE[6]), STR_35(CODE[13]), 
		 -> STR_34(CODE[9]), STR_33(CODE[19]), STR_32(CODE[6]), STR_31(CODE[12]), 
		 -> STR_30(CODE[13]), STR_29(CODE[12]), STR_28(CODE[1]), STR_27(CODE[19]), 
		 -> STR_26(CODE[12]), STR_25(CODE[14]), STR_24(CODE[11]), STR_23(CODE[11]), 
		 -> STR_22(CODE[13]), STR_21(CODE[15]), STR_20(CODE[13]), STR_19(CODE[15]), 
		 -> STR_18(CODE[13]), STR_17(CODE[14]), STR_16(CODE[13]), STR_15(CODE[14]), 
		 -> STR_14(CODE[12]), STR_13(CODE[14]), STR_12(CODE[11]), STR_11(CODE[11]), 
		 -> STR_10(CODE[13]), STR_9(CODE[14]), STR_8(CODE[13]), STR_7(CODE[14]), 
		 -> STR_6(CODE[1]), STR_5(CODE[15]), STR_4(CODE[14]), STR_3(CODE[9]), 
		 -> STR_2(CODE[17]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _testjig_done->_print_screen
    _print_error->_print_screen
    _print_screen->_i2c_Write_string
    _i2c_second_line->_i2c_Write
    _i2c_first_line->_i2c_Write
    _i2c_Write_string->_i2c_Write
    _clear_lcd->_i2c_Write
    _lcd_print_int->_ten_thou_conv
    _ten_thou_conv->___wmul
    _lcd_set_cursor->_i2c_Write
    _i2c_write_char->_i2c_Write
    _init_i2c_lcd_5v->_i2c_Write
    _get_30v_current->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    ___ftadd->___ftmul
    _Vout_set->_digitalpot
    _digitalpot->_i2c_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_get_30v_current
    _get_30v_current->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   29645
                                             41 BANK0      6     6      0
                        _ADC_get_val
                             _RX_one
                             _TX_one
                           _Vout_set
                           _buzz_one
                      _debug_fast_tx
                    _get_30v_current
                           _init_ADC
                  _init_current_sink
                           _init_i2c
                    _init_i2c_lcd_5v
                      _lcd_print_int
                   _power_supply_set
                        _print_error
                       _print_screen
                       _testjig_done
 ---------------------------------------------------------------------------------
 (1) _testjig_done                                         4     4      0    4258
                                              8 COMMON     4     4      0
                           _buzz_one
                      _debug_fast_tx
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (1) _print_error                                          7     3      4   10537
                                              8 COMMON     4     0      4
                                              0 BANK0      3     3      0
                           _buzz_one
                          _clear_lcd
                      _debug_fast_tx
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (2) _print_screen                                         4     0      4    3463
                                              4 COMMON     4     0      4
                          _clear_lcd
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
 ---------------------------------------------------------------------------------
 (3) _i2c_second_line                                      1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_first_line                                       1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write_string                                     3     1      2     279
                                              1 COMMON     3     1      2
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _clear_lcd                                            2     2      0      22
                                              1 COMMON     2     2      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _power_supply_set                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _debug_fast_tx                                        3     1      2     493
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _buzz_one                                             2     0      2     234
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd_print_int                                        6     0      6    2472
                                              0 BANK0      6     0      6
                     _i2c_write_char
                     _lcd_set_cursor
                      _ten_thou_conv
 ---------------------------------------------------------------------------------
 (2) _ten_thou_conv                                        5     3      2    1805
                                              6 COMMON     5     3      2
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     756
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     908
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       3     2      1     147
                                              1 COMMON     3     2      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_write_char                                       1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c_lcd_5v                                      4     3      1     141
                                              1 COMMON     4     3      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init_current_sink                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_30v_current                                      4     2      2    6935
                                             37 BANK0      4     2      2
                        _ADC_get_val
                            ___ftadd
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    1743
                                              8 COMMON     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             13     9      4     305
                                             24 BANK0     13     9      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2102
                                             11 COMMON     3     3      0
                                              0 BANK0     12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    2694
                                             12 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _ADC_get_val                                          6     3      3      46
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Vout_set                                             6     4      2     317
                                              4 COMMON     6     4      2
                         _digitalpot
 ---------------------------------------------------------------------------------
 (2) _digitalpot                                           3     3      0      44
                                              1 COMMON     3     3      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (4) _i2c_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TX_one                                               3     3      0      69
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one                                               3     3      0      93
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_get_val
   _RX_one
   _TX_one
   _Vout_set
     _digitalpot
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _buzz_one
   _debug_fast_tx
   _get_30v_current
     _ADC_get_val
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _init_ADC
   _init_current_sink
   _init_i2c
   _init_i2c_lcd_5v
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _lcd_print_int
     _i2c_write_char
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _lcd_set_cursor
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _ten_thou_conv
       ___bmul
       ___wmul
   _power_supply_set
   _print_error
     _buzz_one
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _debug_fast_tx
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
   _print_screen
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _testjig_done
     _buzz_one
     _debug_fast_tx
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2F      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0      5A      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      5A      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Oct 26 08:40:17 2016

         _motor_direction_timer 0057                      __CFG_CP$ON 0000             ??_init_current_sink 0070  
                   main@RX_data 004E                               pc 0002                  ___bmul@product 0071  
              _power_supply_set 0FD8             ___wmul@multiplicand 0072                      TX_one@data 0071  
                  ___ftadd@exp1 0037                    ___ftadd@exp2 0036                    ___ftadd@sign 0035  
                           l306 092B                             l404 0D8F                             l341 0AB7  
                           l430 0ECC                             l406 0DE3                             l431 0EEA  
                           l415 0E44                             l432 0F06                             l344 0AE8  
                           l441 055C                             l354 0B64                             l460 0228  
                           l365 0BDC                             l446 05BB                             l438 0521  
                           l390 0CF0                             l640 0FDF                             l641 0FE4  
                           l449 05D5                             l466 021D                             l642 0FE9  
                           l475 022D                             l491 0207                             l379 0C7E  
                           l299 089C                             l628 0FCB                             l638 0FDA  
                           l680 0F25                             l690 0F4C                             l587 0167  
                           l675 05F2                             l668 00C6                             l685 0F3D  
                           l688 0F47                             l857 047D                             l869 04A2  
                           l893 03CF                             _GIE 005F                             _RA2 0062  
                           _RA4 0064                             _RA5 0065               ??_i2c_second_line 0071  
                           _RE0 0080                             _RF0 1460                             _RF1 1461  
                           _RF2 1462                             _RE4 0084                             _RG1 1469  
                           _RF3 1463                             _RE5 0085                             _RE6 0086  
                           _RG3 146B                             _RF5 1465                             _PR2 001B  
                           _PR8 0596                             _isr 0004                             _ten 0063  
                  __CFG_BORV$HI 0000                             wreg 0009                  ?_lcd_print_int 0020  
                          S3941 061A                            S3937 067A         __size_of_i2c_write_char 000D  
               ?_lcd_set_cursor 0071                    __CFG_LVP$OFF 0000       __end_of_init_current_sink 066E  
                          l3101 00B9                            l3111 00C3                            l3103 00BB  
                          l3015 0535                            l3105 00BD                            l3041 05A3  
                          l3107 00BF                            l3115 00CB                            l3211 0130  
                          l3203 0124                            l3027 056C                            l3043 05AB  
                          l3109 00C1                            l3117 00DD                            l3221 0141  
                          l3205 0127                            l3037 05A0                            l2521 022B  
                          l3137 0354                            l3401 08DD                            l3171 0F4E  
                          l3091 00AF                            l3083 00A7                            l3227 014A  
                          l3219 013E                            l2523 01C7                            l3067 0F89  
                          l3403 08C5                            l2517 021F                            l3093 00B1  
                          l3085 00A9                            l3237 015B                            l2533 01CF  
                          l3421 091D                            l3413 08F9                            l3095 00B3  
                          l3087 00AB                            l3239 015E                            l3191 0110  
                          l2535 01E1                            l3431 0947                            l3097 00B5  
                          l3089 00AD                            l2641 0485                            l3193 0113  
                          l3513 0A95                            l3441 097D                            l3417 090B  
                          l3409 08E7                            l3099 00B7                            l2651 0498  
                          l2643 048A                            l2803 0390                            l2731 00F3  
                          l3523 0AA9                            l2645 0493                            l2821 03AC  
                          l2901 0453                            l2573 030A                            l3197 0119  
                          l3189 010D                            l3605 0BD7                            l3509 0A83  
                          l3461 09CF                            l3453 09AB                            l3445 098B  
                          l3429 0973                            l2639 0481                            l2823 03B0  
                          l2815 039E                            l3607 0BD4                            l3535 0AD5  
                          l3391 088F                            l2649 04A0                            l2841 03DA  
                          l2833 03C7                            l2825 03B5                            l2905 045B  
                          l2729 00F1                            l2569 0304                            l3801 0E6C  
                          l3721 0D3D                            l3641 0C39                            l3481 0A13  
                          l3457 09BD                            l3449 0999                            l3465 09DD  
                          l2835 03CB                            l2827 03B9                            l3811 0E5C  
                          l3723 0D45                            l3731 0D65                            l3643 0C41  
                          l3651 0C5C                            l3571 0B53                            l2917 04D0  
                          l2677 05F9                            l2685 0FEE                            l3821 0E8A  
                          l3725 0D4D                            l3733 0D6D                            l3637 0C29  
                          l3653 0C64                            l3565 0B3B                            l3573 0B5B  
                          l3493 0A54                            l3477 0A0E                            l3485 0A22  
                          l2847 03E5                            l2871 042D                            l2951 0517  
                          l2935 04F5                            l2919 04D5                            l3831 0EAC  
                          l3727 0D55                            l3735 0D75                            l3639 0C31  
                          l3647 0C4C                            l3655 0C6C                            l3567 0B43  
                          l3479 0A0A                            l2793 037A                            l2945 0500  
                          l3825 0E96                            l3817 0E7C                            l3761 0DC9  
                          l3753 0DB2                            l3729 0D5D                            l3737 0D7D  
                          l3649 0C54                            l3657 0C74                            l3569 0B4B  
                          l3489 0A3A                            l2859 03F9                            l2867 041C  
                          l2947 0509                            l2939 04FC                            l3691 0CE8  
                          l3739 0D85                            l2797 0381                            l2893 0449  
                          l3829 0EA2                            l3765 0DD5                            l3757 0DBD  
                          l3791 0E2A                            l2889 0441                            l3689 0CEB  
                          l3939 00D0                            l3795 0E36                            l3787 0E1F  
                          l2997 0200                            ?_isr 0070                            STR_1 12CC  
                          STR_2 1059                            STR_3 12CC                            STR_4 1115  
                          STR_5 10CB                            STR_6 108A                            STR_7 113F  
                          STR_8 1182                            STR_9 113F                            u2345 023A  
                          u2290 05F7                            u2355 0249                            u4107 087B  
                          u2365 0258                            u4117 0886                            u2375 0274  
                          u4207 0B81                            u4127 08B5                            u2385 029B  
                          u4217 0B97                            u4137 093A                            u2395 02BD  
                          u4307 0CDB                            u4227 0BB1                            u4147 09F6  
                          u2804 0F2C                            u4317 0D02                            u4237 0BC7  
                          u4157 0A33                            u4407 0599                            u4327 0D13  
                          u4247 0BEE                            u4167 0A41                            u2665 04DC  
                          u4417 05C4                            u4337 0D29                            u4257 0BFF  
                          u4177 0A77                            u4097 086C                            u4507 01C1  
                          u4427 05DE                            u4347 0DF5                            u4267 0C15  
                          u4187 0B0B                            u4517 0F22                            u4437 0FA7  
                          u4357 0E62                            u4277 0C95                            u4197 0B25  
                          u2790 0F2A                            u4527 0F2F                            u4447 0FBE  
                          u4367 0F00                            u4287 0CAB                            u4537 0F3A  
                          u4457 0185                            u4377 0551                            u4297 0CC5  
                          u4547 0F42                            u4467 0196                            u4387 0565  
                          u4557 0F50                            u4477 01A9                            u4397 0582  
                          u4567 0F59                            u4487 0214                            u4497 0649  
                          _TMR0 0015                            _WPUB 020D                            _WPUD 020F  
                          _WPUE 0210                    __CFG_WRT$OFF 0000                            _main 080B  
                  ___ftpack@arg 0070                            _hund 0061                    ___ftpack@exp 0073  
                          _thou 0066                            fsr0h 0005                            fsr0l 0004  
                          indf0 0000                            _unit 0065                            btemp 007E  
             ??_get_30v_current 007E                   __CFG_BOREN$ON 0000                            ltemp 007E  
                          start 0095                            ttemp 007E                            wtemp 007E  
                 __CFG_IESO$OFF 0000         i2c_write_char@char_data 0071               ___bmul@multiplier 0072  
                 __CFG_MCLRE$ON 0000                    ___ftmul@cntr 002A                    ___ftmul@sign 002B  
               digitalpot@value 0073            __size_of_ADC_get_val 0012         __end_of_init_i2c_lcd_5v 021A  
                  ___fttol@exp1 0044                    ___fttol@lval 0040                           ??_isr 0070  
                _i2c_first_line 0189                           ?_main 0070                 __end_of___ftadd 040B  
                         STR_10 1168                           STR_11 10FC                           STR_20 1182  
                         STR_12 1225                           STR_21 10F8                           STR_13 113F  
                         STR_22 1168                           STR_30 1019                           STR_14 1219  
                         STR_31 101A                           STR_23 1246                           STR_15 114D  
                         STR_16 1182                           STR_32 122A                           STR_24 1225  
                         STR_40 11E9                           STR_33 1013                           STR_41 120D  
                         STR_25 114D                           STR_17 114D                           STR_50 108A  
                         STR_42 129C                           STR_18 1168                           STR_26 1219  
                         STR_34 12D5                           STR_51 123B                           STR_35 119C  
                         STR_43 115B                           STR_19 10F8                           STR_27 1013  
                         STR_28 108A                           STR_44 11FB                           STR_36 1235  
                         STR_52 11BE                           STR_60 1321                           STR_61 1000  
                         STR_37 120D                           STR_29 1201                           STR_45 11F5  
                         STR_53 1000                           STR_38 1293                           STR_62 128D  
                         STR_54 1296                           STR_70 1324                           STR_46 128D  
                         STR_47 11F5                           STR_55 120D                           STR_71 12BA  
                         STR_63 129F                           STR_39 11A9                           STR_64 108A  
                         STR_80 1229                           STR_56 131E                           STR_48 1296  
                         STR_72 10BB                           STR_65 129F                           STR_73 12BA  
                         STR_81 120D                           STR_49 123B                           STR_57 109B  
                         STR_90 1333                           STR_58 1229                           STR_66 1333  
                         STR_82 1327                           STR_74 10E9                           STR_83 1265  
                         STR_75 120D                           STR_59 120D                           STR_91 126F  
                         STR_67 1265                           STR_84 128D                           STR_92 1296  
                         STR_68 1296                           STR_76 130E                           STR_93 120D  
                         STR_85 120D                           STR_77 120D                           STR_69 120D  
                         STR_94 132D                           STR_86 132A                           STR_78 1316  
                         STR_79 12BA                           STR_95 12C3                           STR_87 12A8  
                         STR_88 108A                           STR_96 10BB                           STR_89 12A8  
                         STR_97 12C3                           STR_98 10E9                           STR_99 120D  
               __end_of___ftmul 0475                 __end_of___fttol 0520                           _T2CON 001C  
                         _LATC2 0872                           _LATA6 0866                           _LATB5 086D  
                         _LATA7 0867                           _LATD2 087A                           _LATC5 0875  
                         _LATD4 087C                           _LATC6 0876                           _LATD5 087D  
                         _LATC7 0877                           _LATG0 1C68                           _LATD6 087E  
         __end_of_debug_fast_tx 0612                           _T8CON 0597                           i1l271 0019  
                         i1l280 003E                           i1l290 007A                           i1l284 0054  
                         i1l277 002E                           i1l287 005B                           i1l295 0093  
                         i1l288 005F                           _PORTA 000C                           _PORTB 000D  
                         _PORTC 000E                           _PORTD 000F                           _PORTE 0010  
                         _PORTF 028C                           _PORTG 028D                           _TRISA 008C  
                         _TRISB 008D                           _TRISC 008E                           _TRISD 008F  
                         _TRISE 0090                           _TRISF 030C                           _TRISG 030D  
                 __CFG_PWRTE$ON 0000                  __CFG_FCMEN$OFF 0000              _current_sink_timer 0055  
      __end_of_i2c_Write_string 01E2                   ___ftpack@sign 0074                           main@i 004C  
                         ltemp0 007E                           ltemp1 0082                           ltemp2 0086  
                         ltemp3 0080                           ttemp0 007E                           ttemp1 0081  
                         ttemp2 0084                           ttemp3 0087                           ttemp4 007F  
                         status 0003                           wtemp0 007E                           wtemp1 0080  
                         wtemp2 0082                           wtemp3 0084                           wtemp4 0086  
                         wtemp5 0088                           wtemp6 007F                 __initialization 0097  
    lcd_set_cursor@LCD_position 0073                    __end_of_main 0F1B          __end_of_i2c_first_line 019A  
              __end_of_i2c_Stop 0230                  __CFG_LPBOR$OFF 0000                          ??_main 0049  
                 ___fttol@sign1 003F                 ??_lcd_print_int 007B             lcd_print_int@number 0020  
                        _ADCON0 009D                          _ADCON1 009E                          i1S3943 066E  
                        STR_100 131A                          STR_101 120D                          STR_102 1312  
                        STR_110 12EE                          STR_103 12C3                          STR_111 12E6  
                        STR_112 11E5                          STR_104 1229                          STR_120 10AB  
                        STR_121 11DD                          STR_113 120D                          STR_105 120D  
                        STR_106 1330                          STR_130 12FE                          STR_114 12F2  
                        STR_122 11D0                          _ADRESH 009C                          STR_107 126F  
                        STR_123 12E6                          STR_115 120D                          STR_131 1175  
                        STR_108 128D                          STR_132 1131                          STR_116 12F6  
                        STR_124 12B1                          STR_140 108B                          STR_141 12E6  
                        STR_125 12E6                          STR_133 1175                          STR_109 120D  
                        STR_117 11DD                          STR_126 117D                          STR_134 11D0  
                        STR_150 130A                          STR_118 1131                          STR_142 1037  
                        _ADRESL 009B                          STR_119 11DD                          STR_143 12E6  
                        STR_135 12E6                          STR_127 120D                          STR_151 125B  
                        STR_128 12FA                          STR_152 1283                          STR_136 1279  
                        STR_160 1123                          STR_144 10DA                          STR_137 12E6  
                        STR_161 12CC                          STR_153 120D                          STR_145 120D  
                        STR_129 120D                          STR_138 10E2                          STR_162 102F  
                        STR_154 1306                          STR_146 1302                          STR_170 106A  
                        STR_139 12E6                          STR_147 1107                          STR_155 107B  
                        STR_163 1048                          STR_148 1089                          STR_164 12DE  
                        STR_156 11C3                          STR_149 120D                          STR_157 1251  
                        STR_165 1026                          STR_166 1115                          STR_158 1230  
                        STR_167 1026                          STR_159 11B6                          STR_168 118F  
                        STR_169 1190      __size_of_init_current_sink 0015                          _CCPR9L 061A  
                        _ANSELA 018C                          _ANSELB 018D                          _ANSELD 018F  
                        _ANSELE 0190                          _ANSELF 040C                __end_of___ftpack 04B3  
                        _ANSELG 040D              __size_of_i2c_Start 0005                          i1l3301 0086  
                        i1l3303 008A                          i1l3307 0092                          i1l3251 0011  
                        i1l3257 0021                          i1l3267 0037                          i1l3291 0066  
                        i1l3259 0022                          i1l3285 0057                          i1l3277 004A  
                        i1l3293 0070                          i1l3279 004B                          i1l3297 007C  
            __size_of_i2c_Write 000C                          _FVRCON 0117                __end_of_Vout_set 00DF  
              __end_of___lwtoft 04C3                          _OSCCON 0099                          _TMR0IE 005D  
                        _TMR0IF 005A                          _TRISC3 0473                          _TRISC4 0474  
                        _TRISG0 1868               print_error@bottom 007A                          _RX_one 0F3D  
                        _TX_one 0F1B             _current_sink_stable 0053                          ___bmul 02DF  
               ?_i2c_first_line 0070                          ___wmul 0302                       ??___ftadd 0032  
                __CFG_STVREN$ON 0000                       ??___ftmul 007B                       ??___fttol 003C  
              __end_of_init_ADC 1000                ?_init_i2c_lcd_5v 0071                __end_of_init_i2c 0659  
              __end_of_buzz_one 061A                _ADC_cur_sink_val 004F           ___ftmul@f3_as_product 0027  
                 i2c_Write@data 0070                  _i2c_write_char 016B               debug_fast_tx@data 0070  
      __end_of_power_supply_set 0FF9                    ?_print_error 0078         __end_of__initialization 00A2  
                    ___ftadd@f1 002C                      ___ftadd@f2 002F             ___bmul@multiplicand 0070  
                    ___ftmul@f1 0020                      ___ftmul@f2 0023                 _i2c_second_line 0178  
                    ___fttol@f1 0038                  __pcstackCOMMON 0070                    __pidataBANK0 0000  
                print_error@top 0078           __end_of_ten_thou_conv 02DF               __end_of_i2c_Start 022B  
             __end_of_i2c_Write 0226              __size_of_clear_lcd 0015                      ___lwtoft@c 0078  
              ??_lcd_set_cursor 0072          __end_of_i2c_write_char 0178                 _get_30v_current 0317  
          i2c_Write_string@data 0071            lcd_print_int@decimal 0024                _one_second_timer 006A  
                    __pbssBANK0 004F                       ?_i2c_Stop 0070     lcd_print_int@ten_thou_digit 0025  
                       ?_RX_one 0070              ADC_get_val@channel 0073                         ?_TX_one 0070  
                    __pmaintext 080B                         ?___bmul 0070                         ?___wmul 0070  
                    __pintentry 0004                      _digitalpot 01AF                         _CCP9CON 061C  
                     ?___ftpack 0070                       ?_Vout_set 0074                       ?___lwtoft 0078  
               ?_i2c_write_char 0070                         _SSP1ADD 0212                         _SSP1BUF 0211  
             ?_i2c_Write_string 0071                         RX_one@i 0071                         TX_one@i 0072  
            ??_i2c_Write_string 0073                      ??_i2c_Stop 0070                       ?_init_ADC 0070  
       __end_of_i2c_second_line 0189                       ?_init_i2c 0070               __end_of_clear_lcd 01AF  
                     ?_buzz_one 0070                   ??_ADC_get_val 0073                 __size_of_RX_one 0020  
               __size_of_TX_one 0022                 __size_of___bmul 0023                         ___ftadd 0357  
               __size_of___wmul 0015                         ___ftmul 040B                         ___fttol 04C3  
                    ??___ftpack 0075         __end_of_get_30v_current 0357                         __ptext1 0520  
                       __ptext2 0F73                         __ptext3 0F5D                         __ptext4 0178  
                       __ptext5 0189                         __ptext6 01C7                         __ptext7 019A  
                       __ptext8 0FD8                         __ptext9 05E5                      ??_Vout_set 0076  
                    ??___lwtoft 007B                    __size_of_isr 0091                      _buzz_timer 0067  
init_i2c_lcd_5v@single1_double2 0071                         clrloop0 0683            end_of_initialization 00A2  
                    ??_init_ADC 0070                      ??_init_i2c 0070                      ??_buzz_one 0072  
              ??_i2c_first_line 0071            __size_of_print_error 0053          __size_of_debug_fast_tx 002D  
                  __pstringtext 1000                     ?_digitalpot 0070             __end_of_ADC_get_val 0FD8  
              __CFG_FOSC$INTOSC 0000           __end_of_lcd_print_int 016B                   ?_print_screen 0074  
                 ?_testjig_done 0070               ?_power_supply_set 0070                ?_i2c_second_line 0070  
            ??_power_supply_set 0070                  ten_thou_conv@n 0076                     ___ftmul@exp 0026  
                __end_of_RX_one 0F5D                  __end_of_TX_one 0F3D                  __end_of___bmul 0302  
                __end_of___wmul 0317                    buzz_one@time 0070                ?_get_30v_current 0045  
                 _debug_fast_tx 05E5                       _i2c_Start 0226                       _i2c_Write 021A  
           start_initialization 0097        __size_of_init_i2c_lcd_5v 0038                  ??_print_screen 0078  
                   __end_of_isr 0095                  ??_testjig_done 0078             __size_of_digitalpot 0018  
             __size_of_i2c_Stop 0005                 print_screen@top 0074                        ??_RX_one 0070  
                      ??_TX_one 0070                     _ADC_get_val 0FC6                        ??___bmul 0071  
                      ??___wmul 0074                     __pdataBANK0 006A                ??_i2c_write_char 0071  
                ?_debug_fast_tx 0070               __size_of___ftpack 003E                      ?_i2c_Start 0070  
                    ?_i2c_Write 0070               __size_of_Vout_set 0039                       ___latbits 0003  
             __size_of___lwtoft 0010                   __pcstackBANK0 0020              _pickit_red_counter 0062  
              lcd_print_int@pos 0022          __size_of_ten_thou_conv 00AF                       __pnvBANK0 0067  
             __size_of_init_ADC 0007               __size_of_init_i2c 0017                       _clear_lcd 019A  
             __size_of_buzz_one 0008       __size_of_i2c_Write_string 001B                        ?___ftadd 002C  
                      ?___ftmul 0020                        ?___fttol 0038                       __pswtext1 067A  
                     __pswtext2 061A                       __pswtext3 066E                        _CCPTMRS2 029F  
              __CFG_WDTE$SWDTEN 0000               ??_init_i2c_lcd_5v 0072         __size_of_lcd_set_cursor 0018  
                ___wmul@product 0074                       clear_ram0 0682                        _PIE1bits 0091  
                      _PCONbits 0096                        _PIR1bits 0011                      ?_clear_lcd 0070  
          __end_of_print_screen 0F73              print_screen@bottom 0076                        _SSP1CON1 0215  
                      _SSP1CON2 0216            __end_of_testjig_done 05E5                    ??_digitalpot 0071  
                      _SSP1STAT 0214                    _pickit_timer 0059                    _pickit_state 0069  
                 _ten_thou_conv 0230                 ??_debug_fast_tx 0072                      _ADCON0bits 009D  
             ___wmul@multiplier 0070                     ??_i2c_Start 0070                     ??_i2c_Write 0070  
                debug_fast_tx@i 0072               testjig_done@state 007B                        _i2c_Stop 022B  
                 ??_print_error 0020              __end_of_digitalpot 01C7           ADC_get_val@return_val 0074  
                 Vout_set@Volts 0074                  ?_ten_thou_conv 0076                __size_of___ftadd 00B4  
              __size_of___ftmul 006A                __size_of___fttol 005D       __size_of_power_supply_set 0021  
                      ___ftpack 0475                        _Vout_set 00A6                        ___lwtoft 04B3  
       init_i2c_lcd_5v@contrast 0074               Vout_set@digi_step 0076                        __ptext10 0612  
                      __ptext11 00F7                        __ptext20 0FF9                        __ptext12 0230  
                      __ptext21 0317                        __ptext13 0302                        __ptext30 021A  
                      __ptext22 04B3                        __ptext14 02DF                        __ptext31 022B  
                      __ptext23 04C3                        __ptext15 00DF                        __ptext32 0226  
                      __ptext24 040B                        __ptext16 016B                        __ptext33 0F1B  
                      __ptext25 0357                        __ptext17 01E2                        __ptext34 0F3D  
                      __ptext26 0475                        __ptext18 0642                        __ptext27 0FC6  
                      __ptext19 0659                        __ptext28 00A6                        __ptext29 01AF  
                  _SSP1CON2bits 0216                        _init_ADC 0FF9                        _init_i2c 0642  
                 __size_of_main 0710                        _buzz_one 0612                    ?_ADC_get_val 0070  
                   ??_clear_lcd 0071             __end_of_print_error 0FC6                _i2c_Write_string 01C7  
                      _ten_thou 0064                        _tj_timer 005D          __size_of_lcd_print_int 0074  
      __size_of_i2c_second_line 0011                        int$flags 007E                    _SSP1STATbits 0214  
       __size_of_i2c_first_line 0011              _uart_receive_timer 005F             get_30v_current@temp 0047  
                    _INTCONbits 000B        __size_of_get_30v_current 0040                        intlevel1 0000  
                _lcd_set_cursor 00DF               lcd_set_cursor@col 0071               lcd_set_cursor@row 0072  
         __size_of_print_screen 0016               __CFG_CLKOUTEN$OFF 0000           __size_of_testjig_done 00C5  
        power_supply_set@supply 0070                 ??_ten_thou_conv 0078                      _OPTION_REG 0095  
                 _testjig_timer 005B                 _init_i2c_lcd_5v 01E2                   _lcd_print_int 00F7  
               _curent_sink_val 0051                    _print_screen 0F5D          __end_of_lcd_set_cursor 00F7  
                  _testjig_done 0520               _init_current_sink 0659                      RX_one@data 0072  
                   _print_error 0F73              ?_init_current_sink 0070  
