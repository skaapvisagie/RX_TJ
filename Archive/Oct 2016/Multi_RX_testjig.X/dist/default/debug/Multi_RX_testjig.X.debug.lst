

Microchip Technology PIC PRO Macro Assembler V1.38 build -256452561 
                                                                                               Thu Oct 06 12:22:48 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	swtext1,local,class=CONST,delta=2
    14                           	psect	swtext2,local,class=CONST,delta=2
    15                           	psect	swtext3,local,class=CONST,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	swtext4,local,class=CONST,delta=2
    18                           	psect	pa_nodes,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  0008                     	;# 
    29  0009                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  000E                     	;# 
    35  000F                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001C                     	;# 
    50  008C                     	;# 
    51  008D                     	;# 
    52  008E                     	;# 
    53  008F                     	;# 
    54  0090                     	;# 
    55  0091                     	;# 
    56  0092                     	;# 
    57  0093                     	;# 
    58  0094                     	;# 
    59  0095                     	;# 
    60  0096                     	;# 
    61  0097                     	;# 
    62  0099                     	;# 
    63  009A                     	;# 
    64  009B                     	;# 
    65  009B                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009E                     	;# 
    69  010C                     	;# 
    70  010D                     	;# 
    71  010E                     	;# 
    72  010F                     	;# 
    73  0110                     	;# 
    74  0116                     	;# 
    75  0117                     	;# 
    76  011D                     	;# 
    77  018C                     	;# 
    78  018D                     	;# 
    79  018F                     	;# 
    80  0190                     	;# 
    81  0191                     	;# 
    82  0191                     	;# 
    83  0192                     	;# 
    84  0193                     	;# 
    85  0193                     	;# 
    86  0194                     	;# 
    87  0195                     	;# 
    88  0196                     	;# 
    89  0197                     	;# 
    90  0199                     	;# 
    91  0199                     	;# 
    92  0199                     	;# 
    93  019A                     	;# 
    94  019A                     	;# 
    95  019A                     	;# 
    96  019B                     	;# 
    97  019B                     	;# 
    98  019B                     	;# 
    99  019B                     	;# 
   100  019B                     	;# 
   101  019C                     	;# 
   102  019C                     	;# 
   103  019C                     	;# 
   104  019D                     	;# 
   105  019D                     	;# 
   106  019D                     	;# 
   107  019E                     	;# 
   108  019E                     	;# 
   109  019E                     	;# 
   110  019F                     	;# 
   111  019F                     	;# 
   112  019F                     	;# 
   113  020D                     	;# 
   114  020F                     	;# 
   115  0210                     	;# 
   116  0211                     	;# 
   117  0211                     	;# 
   118  0212                     	;# 
   119  0212                     	;# 
   120  0213                     	;# 
   121  0213                     	;# 
   122  0214                     	;# 
   123  0214                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0215                     	;# 
   127  0216                     	;# 
   128  0216                     	;# 
   129  0217                     	;# 
   130  0217                     	;# 
   131  0219                     	;# 
   132  021A                     	;# 
   133  021B                     	;# 
   134  021C                     	;# 
   135  021D                     	;# 
   136  021E                     	;# 
   137  021F                     	;# 
   138  028C                     	;# 
   139  028D                     	;# 
   140  0291                     	;# 
   141  0291                     	;# 
   142  0292                     	;# 
   143  0293                     	;# 
   144  0298                     	;# 
   145  0298                     	;# 
   146  0299                     	;# 
   147  029A                     	;# 
   148  029D                     	;# 
   149  029E                     	;# 
   150  029F                     	;# 
   151  030C                     	;# 
   152  030D                     	;# 
   153  0311                     	;# 
   154  0311                     	;# 
   155  0312                     	;# 
   156  0313                     	;# 
   157  0318                     	;# 
   158  0318                     	;# 
   159  0319                     	;# 
   160  031A                     	;# 
   161  031C                     	;# 
   162  031C                     	;# 
   163  031D                     	;# 
   164  031E                     	;# 
   165  038C                     	;# 
   166  038D                     	;# 
   167  0394                     	;# 
   168  0395                     	;# 
   169  0396                     	;# 
   170  040C                     	;# 
   171  040D                     	;# 
   172  0411                     	;# 
   173  0411                     	;# 
   174  0412                     	;# 
   175  0413                     	;# 
   176  0414                     	;# 
   177  0415                     	;# 
   178  0416                     	;# 
   179  0417                     	;# 
   180  0418                     	;# 
   181  0418                     	;# 
   182  0419                     	;# 
   183  041A                     	;# 
   184  041B                     	;# 
   185  041C                     	;# 
   186  041D                     	;# 
   187  041E                     	;# 
   188  048D                     	;# 
   189  0491                     	;# 
   190  0491                     	;# 
   191  0492                     	;# 
   192  0492                     	;# 
   193  0493                     	;# 
   194  0493                     	;# 
   195  0493                     	;# 
   196  0494                     	;# 
   197  0494                     	;# 
   198  0495                     	;# 
   199  0495                     	;# 
   200  0496                     	;# 
   201  0496                     	;# 
   202  0497                     	;# 
   203  0497                     	;# 
   204  0595                     	;# 
   205  0596                     	;# 
   206  0597                     	;# 
   207  059C                     	;# 
   208  059D                     	;# 
   209  059E                     	;# 
   210  0611                     	;# 
   211  0611                     	;# 
   212  0612                     	;# 
   213  0613                     	;# 
   214  0614                     	;# 
   215  0614                     	;# 
   216  0615                     	;# 
   217  0616                     	;# 
   218  0617                     	;# 
   219  0617                     	;# 
   220  0618                     	;# 
   221  0619                     	;# 
   222  061A                     	;# 
   223  061A                     	;# 
   224  061B                     	;# 
   225  061C                     	;# 
   226  061D                     	;# 
   227  061D                     	;# 
   228  061E                     	;# 
   229  061F                     	;# 
   230  0FE4                     	;# 
   231  0FE5                     	;# 
   232  0FE6                     	;# 
   233  0FE7                     	;# 
   234  0FE8                     	;# 
   235  0FE9                     	;# 
   236  0FEA                     	;# 
   237  0FEB                     	;# 
   238  0FED                     	;# 
   239  0FEE                     	;# 
   240  0FEF                     	;# 
   241                           
   242                           	psect	idataBANK0
   243  0000                     __pidataBANK0:	
   244                           
   245                           	psect	nvBANK0
   246  0066                     __pnvBANK0:	
   247  0066                     _buzz_timer:	
   248  0066                     	ds	2
   249  0068                     _pickit_state:	
   250  0068                     	ds	1
   251  000B                     _INTCONbits	set	11
   252  0011                     _PIR1bits	set	17
   253  000C                     _PORTA	set	12
   254  000D                     _PORTB	set	13
   255  000E                     _PORTC	set	14
   256  000F                     _PORTD	set	15
   257  0010                     _PORTE	set	16
   258  001B                     _PR2	set	27
   259  001C                     _T2CON	set	28
   260  0015                     _TMR0	set	21
   261  005F                     _GIE	set	95
   262  0062                     _RA2	set	98
   263  0064                     _RA4	set	100
   264  0065                     _RA5	set	101
   265  00A5                     _RC2IF	set	165
   266  0084                     _RE4	set	132
   267  0085                     _RE5	set	133
   268  005D                     _TMR0IE	set	93
   269  005A                     _TMR0IF	set	90
   270  009D                     _ADCON0	set	157
   271  009D                     _ADCON0bits	set	157
   272  009E                     _ADCON1	set	158
   273  009C                     _ADRESH	set	156
   274  009B                     _ADRESL	set	155
   275  0095                     _OPTION_REG	set	149
   276  0099                     _OSCCON	set	153
   277  0091                     _PIE1bits	set	145
   278  008C                     _TRISA	set	140
   279  008D                     _TRISB	set	141
   280  008E                     _TRISC	set	142
   281  008F                     _TRISD	set	143
   282  0090                     _TRISE	set	144
   283  0473                     _TRISC3	set	1139
   284  0474                     _TRISC4	set	1140
   285  0117                     _FVRCON	set	279
   286  0867                     _LATA7	set	2151
   287  086C                     _LATB4	set	2156
   288  086D                     _LATB5	set	2157
   289  0872                     _LATC2	set	2162
   290  0875                     _LATC5	set	2165
   291  0876                     _LATC6	set	2166
   292  0877                     _LATC7	set	2167
   293  087A                     _LATD2	set	2170
   294  087C                     _LATD4	set	2172
   295  087D                     _LATD5	set	2173
   296  087E                     _LATD6	set	2174
   297  018C                     _ANSELA	set	396
   298  018D                     _ANSELB	set	397
   299  018F                     _ANSELD	set	399
   300  0190                     _ANSELE	set	400
   301  0212                     _SSP1ADD	set	530
   302  0211                     _SSP1BUF	set	529
   303  0215                     _SSP1CON1	set	533
   304  0216                     _SSP1CON2	set	534
   305  0216                     _SSP1CON2bits	set	534
   306  0214                     _SSP1STAT	set	532
   307  0214                     _SSP1STATbits	set	532
   308  020D                     _WPUB	set	525
   309  020F                     _WPUD	set	527
   310  0210                     _WPUE	set	528
   311  029F                     _CCPTMRS2	set	671
   312  028C                     _PORTF	set	652
   313  028D                     _PORTG	set	653
   314  1463                     _RF3	set	5219
   315  030C                     _TRISF	set	780
   316  030D                     _TRISG	set	781
   317  1868                     _TRISG0	set	6248
   318  1C68                     _LATG0	set	7272
   319  040C                     _ANSELF	set	1036
   320  040D                     _ANSELG	set	1037
   321  0497                     _BAUD2CON	set	1175
   322  0491                     _RC2REG	set	1169
   323  0495                     _RC2STA	set	1173
   324  0495                     _RC2STAbits	set	1173
   325  0494                     _SP2BRGH	set	1172
   326  0493                     _SP2BRGL	set	1171
   327  0496                     _TX2STA	set	1174
   328  0496                     _TX2STAbits	set	1174
   329  0596                     _PR8	set	1430
   330  0597                     _T8CON	set	1431
   331  061C                     _CCP9CON	set	1564
   332  061A                     _CCPR9L	set	1562
   333                           
   334                           	psect	stringtext
   335  1000                     __pstringtext:	
   336  1000                     STR_27:	
   337  1000  3450               	retlw	80	;'P'
   338  1001  3469               	retlw	105	;'i'
   339  1002  3463               	retlw	99	;'c'
   340  1003  346B               	retlw	107	;'k'
   341  1004  3469               	retlw	105	;'i'
   342  1005  3474               	retlw	116	;'t'
   343  1006  3420               	retlw	32	;' '
   344  1007  3450               	retlw	80	;'P'
   345  1008  3472               	retlw	114	;'r'
   346  1009  346F               	retlw	111	;'o'
   347  100A  3467               	retlw	103	;'g'
   348  100B  3472               	retlw	114	;'r'
   349  100C  3461               	retlw	97	;'a'
   350  100D  346D               	retlw	109	;'m'
   351  100E  346D               	retlw	109	;'m'
   352  100F  3469               	retlw	105	;'i'
   353  1010  346E               	retlw	110	;'n'
   354  1011  3467               	retlw	103	;'g'
   355  1012  3400               	retlw	0
   356  1013                     STR_43:	
   357  1013  344D               	retlw	77	;'M'
   358  1014  3475               	retlw	117	;'u'
   359  1015  346C               	retlw	108	;'l'
   360  1016  3474               	retlw	116	;'t'
   361  1017  3469               	retlw	105	;'i'
   362  1018  345F               	retlw	95	;'_'
   363  1019  3452               	retlw	82	;'R'
   364  101A  3458               	retlw	88	;'X'
   365  101B  3420               	retlw	32	;' '
   366  101C  3454               	retlw	84	;'T'
   367  101D  3465               	retlw	101	;'e'
   368  101E  3473               	retlw	115	;'s'
   369  101F  3474               	retlw	116	;'t'
   370  1020  346A               	retlw	106	;'j'
   371  1021  3469               	retlw	105	;'i'
   372  1022  3467               	retlw	103	;'g'
   373  1023  3400               	retlw	0
   374  1024                     STR_41:	
   375  1024  3454               	retlw	84	;'T'
   376  1025  3465               	retlw	101	;'e'
   377  1026  3473               	retlw	115	;'s'
   378  1027  3474               	retlw	116	;'t'
   379  1028  346A               	retlw	106	;'j'
   380  1029  3469               	retlw	105	;'i'
   381  102A  3467               	retlw	103	;'g'
   382  102B  3420               	retlw	32	;' '
   383  102C  3450               	retlw	80	;'P'
   384  102D  346F               	retlw	111	;'o'
   385  102E  3477               	retlw	119	;'w'
   386  102F  3465               	retlw	101	;'e'
   387  1030  3472               	retlw	114	;'r'
   388  1031  342D               	retlw	45	;'-'
   389  1032  3475               	retlw	117	;'u'
   390  1033  3470               	retlw	112	;'p'
   391  1034  3400               	retlw	0
   392  1035                     STR_2:	
   393  1035  3454               	retlw	84	;'T'
   394  1036  3465               	retlw	101	;'e'
   395  1037  3473               	retlw	115	;'s'
   396  1038  3474               	retlw	116	;'t'
   397  1039  342D               	retlw	45	;'-'
   398  103A  344A               	retlw	74	;'J'
   399  103B  3469               	retlw	105	;'i'
   400  103C  3467               	retlw	103	;'g'
   401  103D  347C               	retlw	124	;'|'
   402  103E  3453               	retlw	83	;'S'
   403  103F  3474               	retlw	116	;'t'
   404  1040  3461               	retlw	97	;'a'
   405  1041  3472               	retlw	114	;'r'
   406  1042  3474               	retlw	116	;'t'
   407  1043  3475               	retlw	117	;'u'
   408  1044  3470               	retlw	112	;'p'
   409  1045  3400               	retlw	0
   410  1046                     STR_48:	
   411  1046  3420               	retlw	32	;' '
   412  1047  3474               	retlw	116	;'t'
   413  1048  346F               	retlw	111	;'o'
   414  1049  3420               	retlw	32	;' '
   415  104A  3472               	retlw	114	;'r'
   416  104B  3465               	retlw	101	;'e'
   417  104C  3473               	retlw	115	;'s'
   418  104D  3474               	retlw	116	;'t'
   419  104E  3461               	retlw	97	;'a'
   420  104F  3472               	retlw	114	;'r'
   421  1050  3474               	retlw	116	;'t'
   422  1051  3420               	retlw	32	;' '
   423  1052  3474               	retlw	116	;'t'
   424  1053  3465               	retlw	101	;'e'
   425  1054  3473               	retlw	115	;'s'
   426  1055  3474               	retlw	116	;'t'
   427  1056  3400               	retlw	0
   428  1057                     STR_5:	
   429  1057  3450               	retlw	80	;'P'
   430  1058  346F               	retlw	111	;'o'
   431  1059  3477               	retlw	119	;'w'
   432  105A  3465               	retlw	101	;'e'
   433  105B  3472               	retlw	114	;'r'
   434  105C  3469               	retlw	105	;'i'
   435  105D  346E               	retlw	110	;'n'
   436  105E  3467               	retlw	103	;'g'
   437  105F  3420               	retlw	32	;' '
   438  1060  3462               	retlw	98	;'b'
   439  1061  346F               	retlw	111	;'o'
   440  1062  3461               	retlw	97	;'a'
   441  1063  3472               	retlw	114	;'r'
   442  1064  3464               	retlw	100	;'d'
   443  1065  3400               	retlw	0
   444  1066                     STR_19:	
   445  1066  3431               	retlw	49	;'1'
   446  1067  3436               	retlw	54	;'6'
   447  1068  3476               	retlw	118	;'v'
   448  1069  342D               	retlw	45	;'-'
   449  106A  3431               	retlw	49	;'1'
   450  106B  3432               	retlw	50	;'2'
   451  106C  3476               	retlw	118	;'v'
   452  106D  3420               	retlw	32	;' '
   453  106E  3473               	retlw	115	;'s'
   454  106F  3475               	retlw	117	;'u'
   455  1070  3470               	retlw	112	;'p'
   456  1071  3470               	retlw	112	;'p'
   457  1072  346C               	retlw	108	;'l'
   458  1073  3479               	retlw	121	;'y'
   459  1074  3400               	retlw	0
   460  1075                     STR_4:	
   461  1075  342D               	retlw	45	;'-'
   462  1076  343E               	retlw	62	;'>'
   463  1077  3420               	retlw	32	;' '
   464  1078  3449               	retlw	73	;'I'
   465  1079  346E               	retlw	110	;'n'
   466  107A  3473               	retlw	115	;'s'
   467  107B  3465               	retlw	101	;'e'
   468  107C  3472               	retlw	114	;'r'
   469  107D  3474               	retlw	116	;'t'
   470  107E  3420               	retlw	32	;' '
   471  107F  3450               	retlw	80	;'P'
   472  1080  3443               	retlw	67	;'C'
   473  1081  3442               	retlw	66	;'B'
   474  1082  3400               	retlw	0
   475  1083                     STR_38:	
   476  1083  3420               	retlw	32	;' '
   477  1084  3452               	retlw	82	;'R'
   478  1085  3465               	retlw	101	;'e'
   479  1086  346D               	retlw	109	;'m'
   480  1087  346F               	retlw	111	;'o'
   481  1088  3476               	retlw	118	;'v'
   482  1089  3465               	retlw	101	;'e'
   483  108A  3420               	retlw	32	;' '
   484  108B  3462               	retlw	98	;'b'
   485  108C  346F               	retlw	111	;'o'
   486  108D  3461               	retlw	97	;'a'
   487  108E  3472               	retlw	114	;'r'
   488  108F  3464               	retlw	100	;'d'
   489  1090  3400               	retlw	0
   490  1091                     STR_7:	
   491  1091  3431               	retlw	49	;'1'
   492  1092  3432               	retlw	50	;'2'
   493  1093  3476               	retlw	118	;'v'
   494  1094  342D               	retlw	45	;'-'
   495  1095  3435               	retlw	53	;'5'
   496  1096  3476               	retlw	118	;'v'
   497  1097  3420               	retlw	32	;' '
   498  1098  3473               	retlw	115	;'s'
   499  1099  3475               	retlw	117	;'u'
   500  109A  3470               	retlw	112	;'p'
   501  109B  3470               	retlw	112	;'p'
   502  109C  346C               	retlw	108	;'l'
   503  109D  3479               	retlw	121	;'y'
   504  109E  3400               	retlw	0
   505  109F                     STR_15:	
   506  109F  3431               	retlw	49	;'1'
   507  10A0  3436               	retlw	54	;'6'
   508  10A1  3476               	retlw	118	;'v'
   509  10A2  342D               	retlw	45	;'-'
   510  10A3  3435               	retlw	53	;'5'
   511  10A4  3476               	retlw	118	;'v'
   512  10A5  3420               	retlw	32	;' '
   513  10A6  3473               	retlw	115	;'s'
   514  10A7  3475               	retlw	117	;'u'
   515  10A8  3470               	retlw	112	;'p'
   516  10A9  3470               	retlw	112	;'p'
   517  10AA  346C               	retlw	108	;'l'
   518  10AB  3479               	retlw	121	;'y'
   519  10AC  3400               	retlw	0
   520  10AD                     STR_10:	
   521  10AD  3456               	retlw	86	;'V'
   522  10AE  346F               	retlw	111	;'o'
   523  10AF  346C               	retlw	108	;'l'
   524  10B0  3474               	retlw	116	;'t'
   525  10B1  3420               	retlw	32	;' '
   526  10B2  3445               	retlw	69	;'E'
   527  10B3  3472               	retlw	114	;'r'
   528  10B4  3472               	retlw	114	;'r'
   529  10B5  346F               	retlw	111	;'o'
   530  10B6  3472               	retlw	114	;'r'
   531  10B7  3420               	retlw	32	;' '
   532  10B8  3448               	retlw	72	;'H'
   533  10B9  3400               	retlw	0
   534  10BA                     STR_8:	
   535  10BA  3456               	retlw	86	;'V'
   536  10BB  346F               	retlw	111	;'o'
   537  10BC  346C               	retlw	108	;'l'
   538  10BD  3474               	retlw	116	;'t'
   539  10BE  3420               	retlw	32	;' '
   540  10BF  3445               	retlw	69	;'E'
   541  10C0  3472               	retlw	114	;'r'
   542  10C1  3472               	retlw	114	;'r'
   543  10C2  346F               	retlw	111	;'o'
   544  10C3  3472               	retlw	114	;'r'
   545  10C4  3420               	retlw	32	;' '
   546  10C5  344C               	retlw	76	;'L'
   547  10C6  3400               	retlw	0
   548  10C7                     STR_46:	
   549  10C7  3420               	retlw	32	;' '
   550  10C8  3450               	retlw	80	;'P'
   551  10C9  3472               	retlw	114	;'r'
   552  10CA  3465               	retlw	101	;'e'
   553  10CB  3473               	retlw	115	;'s'
   554  10CC  3473               	retlw	115	;'s'
   555  10CD  3420               	retlw	32	;' '
   556  10CE  3453               	retlw	83	;'S'
   557  10CF  3454               	retlw	84	;'T'
   558  10D0  3441               	retlw	65	;'A'
   559  10D1  3452               	retlw	82	;'R'
   560  10D2  3454               	retlw	84	;'T'
   561  10D3  3400               	retlw	0
   562  10D4                     STR_37:	
   563  10D4  3454               	retlw	84	;'T'
   564  10D5  3465               	retlw	101	;'e'
   565  10D6  3473               	retlw	115	;'s'
   566  10D7  3474               	retlw	116	;'t'
   567  10D8  346A               	retlw	106	;'j'
   568  10D9  3469               	retlw	105	;'i'
   569  10DA  3467               	retlw	103	;'g'
   570  10DB  3420               	retlw	32	;' '
   571  10DC  3450               	retlw	80	;'P'
   572  10DD  3461               	retlw	97	;'a'
   573  10DE  3473               	retlw	115	;'s'
   574  10DF  3473               	retlw	115	;'s'
   575  10E0  3400               	retlw	0
   576  10E1                     STR_29:	
   577  10E1  3457               	retlw	87	;'W'
   578  10E2  3461               	retlw	97	;'a'
   579  10E3  3469               	retlw	105	;'i'
   580  10E4  3474               	retlw	116	;'t'
   581  10E5  3469               	retlw	105	;'i'
   582  10E6  346E               	retlw	110	;'n'
   583  10E7  3467               	retlw	103	;'g'
   584  10E8  3420               	retlw	32	;' '
   585  10E9  3466               	retlw	102	;'f'
   586  10EA  346F               	retlw	111	;'o'
   587  10EB  3472               	retlw	114	;'r'
   588  10EC  3400               	retlw	0
   589  10ED                     STR_14:	
   590  10ED  3454               	retlw	84	;'T'
   591  10EE  342D               	retlw	45	;'-'
   592  10EF  346F               	retlw	111	;'o'
   593  10F0  3475               	retlw	117	;'u'
   594  10F1  3474               	retlw	116	;'t'
   595  10F2  3420               	retlw	32	;' '
   596  10F3  3445               	retlw	69	;'E'
   597  10F4  3472               	retlw	114	;'r'
   598  10F5  3472               	retlw	114	;'r'
   599  10F6  346F               	retlw	111	;'o'
   600  10F7  3472               	retlw	114	;'r'
   601  10F8  3400               	retlw	0
   602  10F9                     STR_12:	
   603  10F9  3443               	retlw	67	;'C'
   604  10FA  3475               	retlw	117	;'u'
   605  10FB  3472               	retlw	114	;'r'
   606  10FC  3472               	retlw	114	;'r'
   607  10FD  3420               	retlw	32	;' '
   608  10FE  3445               	retlw	69	;'E'
   609  10FF  3472               	retlw	114	;'r'
   610  1100  3472               	retlw	114	;'r'
   611  1101  346F               	retlw	111	;'o'
   612  1102  3472               	retlw	114	;'r'
   613  1103  3400               	retlw	0
   614  1104                     STR_1:	
   615  1104  344D               	retlw	77	;'M'
   616  1105  3475               	retlw	117	;'u'
   617  1106  346C               	retlw	108	;'l'
   618  1107  3474               	retlw	116	;'t'
   619  1108  3469               	retlw	105	;'i'
   620  1109  345F               	retlw	95	;'_'
   621  110A  3452               	retlw	82	;'R'
   622  110B  3458               	retlw	88	;'X'
   623  110C  3400               	retlw	0
   624  110D                     STR_34:	
   625  110D  3420               	retlw	32	;' '
   626  110E  3473               	retlw	115	;'s'
   627  110F  346B               	retlw	107	;'k'
   628  1110  3469               	retlw	105	;'i'
   629  1111  3470               	retlw	112	;'p'
   630  1112  3470               	retlw	112	;'p'
   631  1113  3465               	retlw	101	;'e'
   632  1114  3464               	retlw	100	;'d'
   633  1115  3400               	retlw	0
   634  1116                     STR_42:	
   635  1116  3477               	retlw	119	;'w'
   636  1117  3461               	retlw	97	;'a'
   637  1118  3469               	retlw	105	;'i'
   638  1119  3474               	retlw	116	;'t'
   639  111A  342E               	retlw	46	;'.'
   640  111B  342E               	retlw	46	;'.'
   641  111C  342E               	retlw	46	;'.'
   642  111D  3400               	retlw	0
   643  111E                     STR_35:	
   644  111E  3454               	retlw	84	;'T'
   645  111F  346F               	retlw	111	;'o'
   646  1120  3467               	retlw	103	;'g'
   647  1121  3467               	retlw	103	;'g'
   648  1122  346C               	retlw	108	;'l'
   649  1123  3465               	retlw	101	;'e'
   650  1124  3400               	retlw	0
   651  111D                     
   652                           ; #config settings
   653  0000                     
   654                           	psect	cinit
   655  081A                     start_initialization:	
   656  081A                     __initialization:	
   657                           
   658                           ;initializer for _one_second_timer
   659  081A  30E8               	movlw	232
   660  081B  00E9               	movwf	__pdataBANK0& (0+127)
   661  081C  3003               	movlw	3
   662  081D  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   663                           
   664                           ; Clear objects allocated to BANK0
   665  081E  3054               	movlw	low __pbssBANK0
   666  081F  0084               	movwf	4
   667  0820  3000               	movlw	high __pbssBANK0
   668  0821  0085               	movwf	5
   669  0822  3012               	movlw	18
   670  0823  3180  20BB  3188   	fcall	clear_ram0
   671  0826                     end_of_initialization:	
   672                           ;End of C runtime variable initialization code
   673                           
   674  0826                     __end_of__initialization:	
   675  0826  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   676  0827  0020               	movlb	0
   677  0828  2985               	ljmp	_main	;jump to C main() function
   678  0829                     __ptext5:	
   679 ;; *************** function _i2c_second_line *****************
   680 ;; Defined at:
   681 ;;		line 795 in file "Multi_RX_testjig_v1.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, status,2, status,0, pclath, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 1F/4
   692 ;;		On exit  : 1F/4
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
   695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   697 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   699 ;;Total ram usage:        1 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; Hardware stack levels required when called:    2
   702 ;; This function calls:
   703 ;;		_i2c_Start
   704 ;;		_i2c_Stop
   705 ;;		_i2c_Write
   706 ;; This function is called by:
   707 ;;		_print_error
   708 ;;		_print_screen
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           
   713                           ;psect for function _i2c_second_line
   714  0829                     _i2c_second_line:	
   715                           
   716                           ;Multi_RX_testjig_v1.c: 797: i2c_Start();
   717                           
   718                           ;incstack = 0
   719                           ; Regs used in _i2c_second_line: [wreg+status,2+status,0+pclath+cstack]
   720  0829  2520  3188         	fcall	_i2c_Start
   721                           
   722                           ;Multi_RX_testjig_v1.c: 798: i2c_Write(0x7C);
   723  082B  307C               	movlw	124
   724  082C  2513  3188         	fcall	_i2c_Write
   725                           
   726                           ;Multi_RX_testjig_v1.c: 799: i2c_Write(0x00);
   727  082E  3000               	movlw	0
   728  082F  2513  3188         	fcall	_i2c_Write
   729                           
   730                           ;Multi_RX_testjig_v1.c: 800: i2c_Write(0xC0);
   731  0831  30C0               	movlw	192
   732  0832  2513  3188         	fcall	_i2c_Write
   733                           
   734                           ;Multi_RX_testjig_v1.c: 801: _delay((unsigned long)((27)*(16000000/4000000.0)));
   735  0834  3023               	movlw	35
   736  0835  00F1               	movwf	??_i2c_second_line
   737  0836                     u2107:	
   738  0836  0BF1               	decfsz	??_i2c_second_line,f
   739  0837  2836               	goto	u2107
   740  0838  3200               	nop2	;nop
   741                           
   742                           ;Multi_RX_testjig_v1.c: 802: i2c_Stop();
   743  0839  2E73               	ljmp	l1870
   744  083A                     __end_of_i2c_second_line:	
   745  083A                     __ptext6:	
   746 ;; *************** function _i2c_first_line *****************
   747 ;; Defined at:
   748 ;;		line 785 in file "Multi_RX_testjig_v1.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0, pclath, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 1F/4
   759 ;;		On exit  : 1F/4
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
   762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   764 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   766 ;;Total ram usage:        1 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    2
   769 ;; This function calls:
   770 ;;		_i2c_Start
   771 ;;		_i2c_Stop
   772 ;;		_i2c_Write
   773 ;; This function is called by:
   774 ;;		_print_error
   775 ;;		_print_screen
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           
   780                           ;psect for function _i2c_first_line
   781  083A                     _i2c_first_line:	
   782                           
   783                           ;Multi_RX_testjig_v1.c: 787: i2c_Start();
   784                           
   785                           ;incstack = 0
   786                           ; Regs used in _i2c_first_line: [wreg+status,2+status,0+pclath+cstack]
   787  083A  2520  3188         	fcall	_i2c_Start
   788                           
   789                           ;Multi_RX_testjig_v1.c: 788: i2c_Write(0x7C);
   790  083C  307C               	movlw	124
   791  083D  2513  3188         	fcall	_i2c_Write
   792                           
   793                           ;Multi_RX_testjig_v1.c: 789: i2c_Write(0x00);
   794  083F  3000               	movlw	0
   795  0840  2513  3188         	fcall	_i2c_Write
   796                           
   797                           ;Multi_RX_testjig_v1.c: 790: i2c_Write(0x80);
   798  0842  3080               	movlw	128
   799  0843  2513  3188         	fcall	_i2c_Write
   800                           
   801                           ;Multi_RX_testjig_v1.c: 791: _delay((unsigned long)((27)*(16000000/4000000.0)));
   802  0845  3023               	movlw	35
   803  0846  00F1               	movwf	??_i2c_first_line
   804  0847                     u2117:	
   805  0847  0BF1               	decfsz	??_i2c_first_line,f
   806  0848  2847               	goto	u2117
   807  0849  3200               	nop2	;nop
   808                           
   809                           ;Multi_RX_testjig_v1.c: 792: i2c_Stop();
   810  084A  2E73               	ljmp	l1870
   811  084B                     __end_of_i2c_first_line:	
   812  084B                     __ptext8:	
   813 ;; *************** function _clear_lcd *****************
   814 ;; Defined at:
   815 ;;		line 775 in file "Multi_RX_testjig_v1.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0, pclath, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/2
   826 ;;		On exit  : 1F/4
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
   829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   832 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   833 ;;Total ram usage:        2 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    2
   836 ;; This function calls:
   837 ;;		_i2c_Start
   838 ;;		_i2c_Stop
   839 ;;		_i2c_Write
   840 ;; This function is called by:
   841 ;;		_print_error
   842 ;;		_print_screen
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           
   847                           ;psect for function _clear_lcd
   848  084B                     _clear_lcd:	
   849                           
   850                           ;Multi_RX_testjig_v1.c: 777: i2c_Start();
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in _clear_lcd: [wreg+status,2+status,0+pclath+cstack]
   854  084B  2520  3188         	fcall	_i2c_Start
   855                           
   856                           ;Multi_RX_testjig_v1.c: 778: i2c_Write(0x7C);
   857  084D  307C               	movlw	124
   858  084E  2513  3188         	fcall	_i2c_Write
   859                           
   860                           ;Multi_RX_testjig_v1.c: 779: i2c_Write(0x00);
   861  0850  3000               	movlw	0
   862  0851  2513  3188         	fcall	_i2c_Write
   863                           
   864                           ;Multi_RX_testjig_v1.c: 780: i2c_Write(0x01);
   865  0853  3001               	movlw	1
   866  0854  2513  3188         	fcall	_i2c_Write
   867                           
   868                           ;Multi_RX_testjig_v1.c: 781: _delay((unsigned long)((2)*(16000000/4000.0)));
   869  0856  300B               	movlw	11
   870  0857  00F2               	movwf	??_clear_lcd+1
   871  0858  3062               	movlw	98
   872  0859  00F1               	movwf	??_clear_lcd
   873  085A                     u2127:	
   874  085A  0BF1               	decfsz	??_clear_lcd,f
   875  085B  285A               	goto	u2127
   876  085C  0BF2               	decfsz	??_clear_lcd+1,f
   877  085D  285A               	goto	u2127
   878  085E  0000               	nop
   879                           
   880                           ;Multi_RX_testjig_v1.c: 782: i2c_Stop();
   881  085F  2E73               	ljmp	l1870
   882  0860                     __end_of_clear_lcd:	
   883  0860                     __ptext28:	
   884 ;; *************** function _digitalpot *****************
   885 ;; Defined at:
   886 ;;		line 1689 in file "Multi_RX_testjig_v1.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  value           1    wreg     unsigned char 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  value           1    3[COMMON] unsigned char 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0, pclath, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/4
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
   900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   903 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   904 ;;Total ram usage:        3 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    2
   907 ;; This function calls:
   908 ;;		_i2c_Start
   909 ;;		_i2c_Stop
   910 ;;		_i2c_Write
   911 ;; This function is called by:
   912 ;;		_Vout_set
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           
   917                           ;psect for function _digitalpot
   918  0860                     _digitalpot:	
   919                           
   920                           ;incstack = 0
   921                           ; Regs used in _digitalpot: [wreg+status,2+status,0+pclath+cstack]
   922                           ;digitalpot@value stored from wreg
   923  0860  00F3               	movwf	digitalpot@value
   924                           
   925                           ;Multi_RX_testjig_v1.c: 1691: i2c_Start();
   926  0861  2520  3188         	fcall	_i2c_Start
   927                           
   928                           ;Multi_RX_testjig_v1.c: 1692: i2c_Write(0x5C);
   929  0863  305C               	movlw	92
   930  0864  2513  3188         	fcall	_i2c_Write
   931                           
   932                           ;Multi_RX_testjig_v1.c: 1693: i2c_Write(0b00000000);
   933  0866  3000               	movlw	0
   934  0867  2513  3188         	fcall	_i2c_Write
   935                           
   936                           ;Multi_RX_testjig_v1.c: 1694: i2c_Write(value);
   937  0869  0873               	movf	digitalpot@value,w
   938  086A  2513  3188         	fcall	_i2c_Write
   939                           
   940                           ;Multi_RX_testjig_v1.c: 1695: i2c_Stop();
   941  086C  2673  3188         	fcall	_i2c_Stop
   942                           
   943                           ;Multi_RX_testjig_v1.c: 1696: _delay((unsigned long)((20)*(16000000/4000.0)));
   944  086E  3068               	movlw	104
   945  086F  00F2               	movwf	??_digitalpot+1
   946  0870  30E4               	movlw	228
   947  0871  00F1               	movwf	??_digitalpot
   948  0872                     u2157:	
   949  0872  0BF1               	decfsz	??_digitalpot,f
   950  0873  2872               	goto	u2157
   951  0874  0BF2               	decfsz	??_digitalpot+1,f
   952  0875  2872               	goto	u2157
   953  0876  0000               	nop
   954  0877  0008               	return
   955  0878                     __end_of_digitalpot:	
   956  0878                     __ptext1:	
   957 ;; *************** function _testjig_done *****************
   958 ;; Defined at:
   959 ;;		line 632 in file "Multi_RX_testjig_v1.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  state           1    wreg     unsigned char 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  state           1   45[BANK0 ] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
   973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   975 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   976 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
   977 ;;Total ram usage:        4 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    4
   980 ;; This function calls:
   981 ;;		_buzz_one
   982 ;;		_debug_fast_tx
   983 ;;		_power_supply_set
   984 ;;		_print_screen
   985 ;;		_set_current_sink
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           
   992                           ;psect for function _testjig_done
   993  0878                     _testjig_done:	
   994                           
   995                           ;incstack = 0
   996                           ; Regs used in _testjig_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   997                           ;testjig_done@state stored from wreg
   998  0878  0020               	movlb	0	; select bank0
   999  0879  00CD               	movwf	testjig_done@state
  1000  087A                     l327:	
  1001                           ;Multi_RX_testjig_v1.c: 634: while(1)
  1002                           
  1003                           
  1004                           ;Multi_RX_testjig_v1.c: 635: {
  1005                           ;Multi_RX_testjig_v1.c: 636: debug_fast_tx(11110);
  1006  087A  3066               	movlw	102
  1007  087B  00F0               	movwf	debug_fast_tx@data
  1008  087C  302B               	movlw	43
  1009  087D  00F1               	movwf	debug_fast_tx@data+1
  1010  087E  2158  3188         	fcall	_debug_fast_tx
  1011                           
  1012                           ;Multi_RX_testjig_v1.c: 637: power_supply_set(3);
  1013  0880  3003               	movlw	3
  1014  0881  2435  3188         	fcall	_power_supply_set
  1015                           
  1016                           ;Multi_RX_testjig_v1.c: 638: LATA7 = 0;
  1017  0883  0022               	movlb	2	; select bank2
  1018  0884  138C               	bcf	12,7	;volatile
  1019                           
  1020                           ;Multi_RX_testjig_v1.c: 639: set_current_sink(100, 2);
  1021  0885  3064               	movlw	100
  1022  0886  0020               	movlb	0	; select bank0
  1023  0887  00C5               	movwf	set_current_sink@value
  1024  0888  3002               	movlw	2
  1025  0889  01C6               	clrf	set_current_sink@value+1
  1026  088A  00C7               	movwf	set_current_sink@source
  1027  088B  2525  3188         	fcall	_set_current_sink
  1028                           
  1029                           ;Multi_RX_testjig_v1.c: 640: _delay((unsigned long)((10)*(16000000/4000.0)));
  1030  088D  3034               	movlw	52
  1031  088E  00CB               	movwf	??_testjig_done+1
  1032  088F  30F1               	movlw	241
  1033  0890  00CA               	movwf	??_testjig_done
  1034  0891                     u1997:	
  1035  0891  0BCA               	decfsz	??_testjig_done,f
  1036  0892  2891               	goto	u1997
  1037  0893  0BCB               	decfsz	??_testjig_done+1,f
  1038  0894  2891               	goto	u1997
  1039  0895  3200               	nop2
  1040                           
  1041                           ;Multi_RX_testjig_v1.c: 641: set_current_sink(0, 0);
  1042  0896  0020               	movlb	0	; select bank0
  1043  0897  01C5               	clrf	set_current_sink@value
  1044  0898  01C6               	clrf	set_current_sink@value+1
  1045  0899  01C7               	clrf	set_current_sink@source
  1046  089A  2525  3188         	fcall	_set_current_sink
  1047                           
  1048                           ;Multi_RX_testjig_v1.c: 642: debug_fast_tx(state);
  1049  089C  084D               	movf	testjig_done@state,w
  1050  089D  00F0               	movwf	debug_fast_tx@data
  1051  089E  01F1               	clrf	debug_fast_tx@data+1
  1052  089F  2158  3188         	fcall	_debug_fast_tx
  1053                           
  1054                           ;Multi_RX_testjig_v1.c: 643: switch(state)
  1055  08A1  2913               	goto	l2386
  1056  08A2                     l2360:	
  1057                           
  1058                           ;Multi_RX_testjig_v1.c: 646: print_screen("Testjig Pass", " Remove board");
  1059  08A2  30D4               	movlw	low (STR_37| (0+32768))
  1060  08A3  00F4               	movwf	print_screen@top
  1061  08A4  3090               	movlw	high (STR_37| (0+32768))
  1062  08A5  00F5               	movwf	print_screen@top+1
  1063  08A6  3083               	movlw	low (STR_38| (0+32768))
  1064  08A7  00F6               	movwf	print_screen@bottom
  1065  08A8  3090               	movlw	high (STR_38| (0+32768))
  1066  08A9  00F7               	movwf	print_screen@bottom+1
  1067  08AA  23E5  3188         	fcall	_print_screen
  1068                           
  1069                           ;Multi_RX_testjig_v1.c: 647: debug_fast_tx(11111);
  1070  08AC  3067               	movlw	103
  1071  08AD  00F0               	movwf	debug_fast_tx@data
  1072  08AE  302B               	movlw	43
  1073  08AF  00F1               	movwf	debug_fast_tx@data+1
  1074  08B0  2158  3188         	fcall	_debug_fast_tx
  1075                           
  1076                           ;Multi_RX_testjig_v1.c: 648: buzz_one(100);
  1077  08B2  3064               	movlw	100
  1078  08B3  00F0               	movwf	buzz_one@time
  1079  08B4  01F1               	clrf	buzz_one@time+1
  1080  08B5  2456  3188         	fcall	_buzz_one
  1081                           
  1082                           ;Multi_RX_testjig_v1.c: 649: _delay((unsigned long)((200)*(16000000/4000.0)));
  1083  08B7  3005               	movlw	5
  1084  08B8  0020               	movlb	0	; select bank0
  1085  08B9  00CC               	movwf	??_testjig_done+2
  1086  08BA  300F               	movlw	15
  1087  08BB  00CB               	movwf	??_testjig_done+1
  1088  08BC  30F4               	movlw	244
  1089  08BD  00CA               	movwf	??_testjig_done
  1090  08BE                     u2007:	
  1091  08BE  0BCA               	decfsz	??_testjig_done,f
  1092  08BF  28BE               	goto	u2007
  1093  08C0  0BCB               	decfsz	??_testjig_done+1,f
  1094  08C1  28BE               	goto	u2007
  1095  08C2  0BCC               	decfsz	??_testjig_done+2,f
  1096  08C3  28BE               	goto	u2007
  1097                           
  1098                           ;Multi_RX_testjig_v1.c: 650: buzz_one(100);
  1099  08C4  3064               	movlw	100
  1100  08C5  00F0               	movwf	buzz_one@time
  1101  08C6  01F1               	clrf	buzz_one@time+1
  1102  08C7  2456  3188         	fcall	_buzz_one
  1103  08C9                     l330:	
  1104                           ;Multi_RX_testjig_v1.c: 651: while(RF3 == 0);
  1105                           
  1106  08C9  0025               	movlb	5	; select bank5
  1107  08CA  1D8C               	btfss	12,3	;volatile
  1108  08CB  28C9               	goto	l330
  1109                           
  1110                           ;Multi_RX_testjig_v1.c: 652: _delay((unsigned long)((100)*(16000000/4000.0)));
  1111  08CC  3003               	movlw	3
  1112  08CD  0020               	movlb	0	; select bank0
  1113  08CE  00CC               	movwf	??_testjig_done+2
  1114  08CF  3008               	movlw	8
  1115  08D0  00CB               	movwf	??_testjig_done+1
  1116  08D1  3078               	movlw	120
  1117  08D2  00CA               	movwf	??_testjig_done
  1118  08D3                     u2017:	
  1119  08D3  0BCA               	decfsz	??_testjig_done,f
  1120  08D4  28D3               	goto	u2017
  1121  08D5  0BCB               	decfsz	??_testjig_done+1,f
  1122  08D6  28D3               	goto	u2017
  1123  08D7  0BCC               	decfsz	??_testjig_done+2,f
  1124  08D8  28D3               	goto	u2017
  1125  08D9  290F               	goto	l2382
  1126  08DA                     l2372:	
  1127                           ;Multi_RX_testjig_v1.c: 654: break;
  1128                           
  1129                           ;Multi_RX_testjig_v1.c: 653: state = 0xFF;
  1130                           
  1131                           
  1132                           ;Multi_RX_testjig_v1.c: 656: debug_fast_tx(11112);
  1133  08DA  3068               	movlw	104
  1134  08DB  00F0               	movwf	debug_fast_tx@data
  1135  08DC  302B               	movlw	43
  1136  08DD  00F1               	movwf	debug_fast_tx@data+1
  1137  08DE  2158  3188         	fcall	_debug_fast_tx
  1138                           
  1139                           ;Multi_RX_testjig_v1.c: 657: print_screen("Multi_RX", "Testjig");
  1140  08E0  3004               	movlw	low (STR_1| (0+32768))
  1141  08E1  00F4               	movwf	print_screen@top
  1142  08E2  3091               	movlw	high (STR_1| (0+32768))
  1143  08E3  00F5               	movwf	print_screen@top+1
  1144  08E4  301C               	movlw	low ((STR_43+9)| (0+32768))
  1145  08E5  00F6               	movwf	print_screen@bottom
  1146  08E6  3090               	movlw	high ((STR_43+9)| (0+32768))
  1147  08E7  00F7               	movwf	print_screen@bottom+1
  1148  08E8  23E5  3188         	fcall	_print_screen
  1149                           
  1150                           ;Multi_RX_testjig_v1.c: 658: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1151  08EA  3029               	movlw	41
  1152  08EB  0020               	movlb	0	; select bank0
  1153  08EC  00CC               	movwf	??_testjig_done+2
  1154  08ED  3096               	movlw	150
  1155  08EE  00CB               	movwf	??_testjig_done+1
  1156  08EF  30A6               	movlw	166
  1157  08F0  00CA               	movwf	??_testjig_done
  1158  08F1                     u2027:	
  1159  08F1  0BCA               	decfsz	??_testjig_done,f
  1160  08F2  28F1               	goto	u2027
  1161  08F3  0BCB               	decfsz	??_testjig_done+1,f
  1162  08F4  28F1               	goto	u2027
  1163  08F5  0BCC               	decfsz	??_testjig_done+2,f
  1164  08F6  28F1               	goto	u2027
  1165                           
  1166                           ;Multi_RX_testjig_v1.c: 659: print_screen("Testjig Power-up", "wait...");
  1167  08F7  3024               	movlw	low (STR_41| (0+32768))
  1168  08F8  00F4               	movwf	print_screen@top
  1169  08F9  3090               	movlw	high (STR_41| (0+32768))
  1170  08FA  00F5               	movwf	print_screen@top+1
  1171  08FB  3016               	movlw	low (STR_42| (0+32768))
  1172  08FC  00F6               	movwf	print_screen@bottom
  1173  08FD  3091               	movlw	high (STR_42| (0+32768))
  1174  08FE  00F7               	movwf	print_screen@bottom+1
  1175  08FF  23E5  3188         	fcall	_print_screen
  1176                           
  1177                           ;Multi_RX_testjig_v1.c: 660: _delay((unsigned long)((3000)*(16000000/4000.0)));
  1178  0901  303D               	movlw	61
  1179  0902  0020               	movlb	0	; select bank0
  1180  0903  00CC               	movwf	??_testjig_done+2
  1181  0904  30E1               	movlw	225
  1182  0905  00CB               	movwf	??_testjig_done+1
  1183  0906  307A               	movlw	122
  1184  0907  00CA               	movwf	??_testjig_done
  1185  0908                     u2037:	
  1186  0908  0BCA               	decfsz	??_testjig_done,f
  1187  0909  2908               	goto	u2037
  1188  090A  0BCB               	decfsz	??_testjig_done+1,f
  1189  090B  2908               	goto	u2037
  1190  090C  0BCC               	decfsz	??_testjig_done+2,f
  1191  090D  2908               	goto	u2037
  1192  090E  3200               	nop2
  1193  090F                     l2382:	
  1194                           
  1195                           ;Multi_RX_testjig_v1.c: 661: state = 0xFF;
  1196  090F  30FF               	movlw	255
  1197  0910  0020               	movlb	0	; select bank0
  1198  0911  00CD               	movwf	testjig_done@state
  1199                           
  1200                           ;Multi_RX_testjig_v1.c: 662: break;
  1201  0912  291C               	goto	l2388
  1202  0913                     l2386:	
  1203  0913  0020               	movlb	0	; select bank0
  1204  0914  084D               	movf	testjig_done@state,w
  1205                           
  1206                           ; Switch size 1, requested type "speed"
  1207                           ; Number of cases is 2, Range of values is 1 to 2
  1208                           ; switch strategies available:
  1209                           ; Name         Instructions Cycles
  1210                           ; simple_byte            7     4 (average)
  1211                           ; direct_byte           13     9 (fixed)
  1212                           ; jumptable            263     9 (fixed)
  1213                           ;	Chosen strategy is simple_byte
  1214  0915  3A01               	xorlw	1	; case 1
  1215  0916  1903               	skipnz
  1216  0917  28A2               	goto	l2360
  1217  0918  3A03               	xorlw	3	; case 2
  1218  0919  1903               	skipnz
  1219  091A  28DA               	goto	l2372
  1220  091B  291C               	goto	l2388
  1221  091C                     l2388:	
  1222                           
  1223                           ;Multi_RX_testjig_v1.c: 664: debug_fast_tx(11113);
  1224  091C  3069               	movlw	105
  1225  091D  00F0               	movwf	debug_fast_tx@data
  1226  091E  302B               	movlw	43
  1227  091F  00F1               	movwf	debug_fast_tx@data+1
  1228  0920  2158  3188         	fcall	_debug_fast_tx
  1229                           
  1230                           ;Multi_RX_testjig_v1.c: 665: print_screen("Multi_RX Testjig", "-> Insert PCB");
  1231  0922  3013               	movlw	low (STR_43| (0+32768))
  1232  0923  00F4               	movwf	print_screen@top
  1233  0924  3090               	movlw	high (STR_43| (0+32768))
  1234  0925  00F5               	movwf	print_screen@top+1
  1235  0926  3075               	movlw	low (STR_4| (0+32768))
  1236  0927  00F6               	movwf	print_screen@bottom
  1237  0928  3090               	movlw	high (STR_4| (0+32768))
  1238  0929  00F7               	movwf	print_screen@bottom+1
  1239  092A  23E5  3188         	fcall	_print_screen
  1240  092C                     l335:	
  1241                           ;Multi_RX_testjig_v1.c: 666: while(RF3 == 1);
  1242                           
  1243  092C  0025               	movlb	5	; select bank5
  1244  092D  198C               	btfsc	12,3	;volatile
  1245  092E  292C               	goto	l335
  1246                           
  1247                           ;Multi_RX_testjig_v1.c: 667: _delay((unsigned long)((100)*(16000000/4000.0)));
  1248  092F  3003               	movlw	3
  1249  0930  0020               	movlb	0	; select bank0
  1250  0931  00CC               	movwf	??_testjig_done+2
  1251  0932  3008               	movlw	8
  1252  0933  00CB               	movwf	??_testjig_done+1
  1253  0934  3078               	movlw	120
  1254  0935  00CA               	movwf	??_testjig_done
  1255  0936                     u2047:	
  1256  0936  0BCA               	decfsz	??_testjig_done,f
  1257  0937  2936               	goto	u2047
  1258  0938  0BCB               	decfsz	??_testjig_done+1,f
  1259  0939  2936               	goto	u2047
  1260  093A  0BCC               	decfsz	??_testjig_done+2,f
  1261  093B  2936               	goto	u2047
  1262                           
  1263                           ;Multi_RX_testjig_v1.c: 668: print_screen("Multi_RX Testjig", " Press START");
  1264  093C  3013               	movlw	low (STR_43| (0+32768))
  1265  093D  00F4               	movwf	print_screen@top
  1266  093E  3090               	movlw	high (STR_43| (0+32768))
  1267  093F  00F5               	movwf	print_screen@top+1
  1268  0940  30C7               	movlw	low (STR_46| (0+32768))
  1269  0941  00F6               	movwf	print_screen@bottom
  1270  0942  3090               	movlw	high (STR_46| (0+32768))
  1271  0943  00F7               	movwf	print_screen@bottom+1
  1272  0944  23E5  3188         	fcall	_print_screen
  1273  0946                     l338:	
  1274                           ;Multi_RX_testjig_v1.c: 669: while(RF3 == 0);
  1275                           
  1276  0946  0025               	movlb	5	; select bank5
  1277  0947  1D8C               	btfss	12,3	;volatile
  1278  0948  2946               	goto	l338
  1279                           
  1280                           ;Multi_RX_testjig_v1.c: 670: _delay((unsigned long)((100)*(16000000/4000.0)));
  1281  0949  3003               	movlw	3
  1282  094A  0020               	movlb	0	; select bank0
  1283  094B  00CC               	movwf	??_testjig_done+2
  1284  094C  3008               	movlw	8
  1285  094D  00CB               	movwf	??_testjig_done+1
  1286  094E  3078               	movlw	120
  1287  094F  00CA               	movwf	??_testjig_done
  1288  0950                     u2057:	
  1289  0950  0BCA               	decfsz	??_testjig_done,f
  1290  0951  2950               	goto	u2057
  1291  0952  0BCB               	decfsz	??_testjig_done+1,f
  1292  0953  2950               	goto	u2057
  1293  0954  0BCC               	decfsz	??_testjig_done+2,f
  1294  0955  2950               	goto	u2057
  1295  0956  0020               	movlb	0	; select bank0
  1296  0957  287A               	goto	l327
  1297  0958                     __end_of_testjig_done:	
  1298  0958                     __ptext10:	
  1299 ;; *************** function _debug_fast_tx *****************
  1300 ;; Defined at:
  1301 ;;		line 1699 in file "Multi_RX_testjig_v1.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  data            2    0[COMMON] unsigned int 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  i               1    2[COMMON] unsigned char 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/2
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  1315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1318 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1319 ;;Total ram usage:        3 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;;		_testjig_done
  1327 ;;		_print_error
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           
  1332                           ;psect for function _debug_fast_tx
  1333  0958                     _debug_fast_tx:	
  1334                           
  1335                           ;Multi_RX_testjig_v1.c: 1701: GIE = 0;
  1336                           
  1337                           ;incstack = 0
  1338                           ; Regs used in _debug_fast_tx: [wreg+status,2+status,0]
  1339  0958  138B               	bcf	11,7	;volatile
  1340                           
  1341                           ;Multi_RX_testjig_v1.c: 1702: LATD2 = 0;
  1342  0959  0022               	movlb	2	; select bank2
  1343  095A  110F               	bcf	15,2	;volatile
  1344                           
  1345                           ;Multi_RX_testjig_v1.c: 1708: __nop();
  1346  095B  0000               	nop
  1347                           
  1348                           ;Multi_RX_testjig_v1.c: 1709: __nop();
  1349  095C  0000               	nop
  1350                           
  1351                           ;Multi_RX_testjig_v1.c: 1710: __nop();
  1352  095D  0000               	nop
  1353                           
  1354                           ;Multi_RX_testjig_v1.c: 1711: __nop();
  1355  095E  0000               	nop
  1356                           
  1357                           ;Multi_RX_testjig_v1.c: 1712: __nop();
  1358  095F  0000               	nop
  1359                           
  1360                           ;Multi_RX_testjig_v1.c: 1713: __nop();
  1361  0960  0000               	nop
  1362                           
  1363                           ;Multi_RX_testjig_v1.c: 1714: __nop();
  1364  0961  0000               	nop
  1365                           
  1366                           ;Multi_RX_testjig_v1.c: 1715: __nop();
  1367  0962  0000               	nop
  1368                           
  1369                           ;Multi_RX_testjig_v1.c: 1716: __nop();
  1370  0963  0000               	nop
  1371                           
  1372                           ;Multi_RX_testjig_v1.c: 1717: unsigned char i;
  1373                           ;Multi_RX_testjig_v1.c: 1718: for(i = 0; i < 16; i++)
  1374  0964  01F2               	clrf	debug_fast_tx@i
  1375  0965                     l583:	
  1376                           
  1377                           ;Multi_RX_testjig_v1.c: 1719: {
  1378                           ;Multi_RX_testjig_v1.c: 1720: LATD2 = data & 0x01;
  1379  0965  1C70               	btfss	debug_fast_tx@data,0
  1380  0966  296A               	goto	u1440
  1381  0967  0022               	movlb	2	; select bank2
  1382  0968  150F               	bsf	15,2	;volatile
  1383  0969  296C               	goto	l2136
  1384  096A                     u1440:	
  1385  096A  0022               	movlb	2	; select bank2
  1386  096B  110F               	bcf	15,2	;volatile
  1387  096C                     l2136:	
  1388  096C  3010               	movlw	16
  1389                           
  1390                           ;Multi_RX_testjig_v1.c: 1721: data = data >> 1;
  1391  096D  36F1               	lsrf	debug_fast_tx@data+1,f
  1392  096E  0CF0               	rrf	debug_fast_tx@data,f
  1393  096F  0AF2               	incf	debug_fast_tx@i,f
  1394  0970  0272               	subwf	debug_fast_tx@i,w
  1395  0971  1C03               	skipc
  1396  0972  2965               	goto	l583
  1397                           
  1398                           ;Multi_RX_testjig_v1.c: 1722: }
  1399                           ;Multi_RX_testjig_v1.c: 1723: __nop();
  1400  0973  0000               	nop
  1401                           
  1402                           ;Multi_RX_testjig_v1.c: 1724: __nop();
  1403  0974  0000               	nop
  1404                           
  1405                           ;Multi_RX_testjig_v1.c: 1725: __nop();
  1406  0975  0000               	nop
  1407                           
  1408                           ;Multi_RX_testjig_v1.c: 1726: __nop();
  1409  0976  0000               	nop
  1410                           
  1411                           ;Multi_RX_testjig_v1.c: 1727: __nop();
  1412  0977  0000               	nop
  1413                           
  1414                           ;Multi_RX_testjig_v1.c: 1728: __nop();
  1415  0978  0000               	nop
  1416                           
  1417                           ;Multi_RX_testjig_v1.c: 1729: LATD2 = 1;
  1418  0979  0022               	movlb	2	; select bank2
  1419  097A  150F               	bsf	15,2	;volatile
  1420                           
  1421                           ;Multi_RX_testjig_v1.c: 1730: __nop();
  1422  097B  0000               	nop
  1423                           
  1424                           ;Multi_RX_testjig_v1.c: 1731: __nop();
  1425  097C  0000               	nop
  1426                           
  1427                           ;Multi_RX_testjig_v1.c: 1732: __nop();
  1428  097D  0000               	nop
  1429                           
  1430                           ;Multi_RX_testjig_v1.c: 1733: __nop();
  1431  097E  0000               	nop
  1432                           
  1433                           ;Multi_RX_testjig_v1.c: 1734: __nop();
  1434  097F  0000               	nop
  1435                           
  1436                           ;Multi_RX_testjig_v1.c: 1735: __nop();
  1437  0980  0000               	nop
  1438                           
  1439                           ;Multi_RX_testjig_v1.c: 1736: __nop();
  1440  0981  0000               	nop
  1441                           
  1442                           ;Multi_RX_testjig_v1.c: 1737: __nop();
  1443  0982  0000               	nop
  1444                           
  1445                           ;Multi_RX_testjig_v1.c: 1738: GIE = 1;
  1446  0983  178B               	bsf	11,7	;volatile
  1447  0984  0008               	return
  1448  0985                     __end_of_debug_fast_tx:	
  1449  0985                     __pmaintext:	
  1450 ;;
  1451 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1452 ;;
  1453 ;; *************** function _main *****************
  1454 ;; Defined at:
  1455 ;;		line 448 in file "Multi_RX_testjig_v1.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;		None
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : B1F/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  1469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1471 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1472 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1473 ;;Total ram usage:        3 bytes
  1474 ;; Hardware stack levels required when called:    5
  1475 ;; This function calls:
  1476 ;;		_ADC_get_val
  1477 ;;		_Vout_set
  1478 ;;		_buzz_one
  1479 ;;		_debug_fast_tx
  1480 ;;		_disable_uart
  1481 ;;		_enable_uart
  1482 ;;		_get_30v_current
  1483 ;;		_init_ADC
  1484 ;;		_init_current_sink
  1485 ;;		_init_i2c
  1486 ;;		_init_i2c_lcd_5v
  1487 ;;		_init_uart2
  1488 ;;		_power_supply_set
  1489 ;;		_print_error
  1490 ;;		_print_screen
  1491 ;;		_testjig_done
  1492 ;;		_uart_reset
  1493 ;; This function is called by:
  1494 ;;		Startup code after reset
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function _main
  1500  0985                     _main:	
  1501                           
  1502                           ;Multi_RX_testjig_v1.c: 451: OSCCON = 0x7A;
  1503                           
  1504                           ;incstack = 0
  1505                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1506  0985  307A               	movlw	122
  1507  0986  0021               	movlb	1	; select bank1
  1508  0987  0099               	movwf	25	;volatile
  1509                           
  1510                           ;Multi_RX_testjig_v1.c: 453: OPTION_REG = 0b11010000;
  1511  0988  30D0               	movlw	208
  1512  0989  0095               	movwf	21	;volatile
  1513                           
  1514                           ;Multi_RX_testjig_v1.c: 454: TMR0 = 0x00;
  1515  098A  0020               	movlb	0	; select bank0
  1516  098B  0195               	clrf	21	;volatile
  1517                           
  1518                           ;Multi_RX_testjig_v1.c: 455: TMR0IF = 0;
  1519  098C  110B               	bcf	11,2	;volatile
  1520                           
  1521                           ;Multi_RX_testjig_v1.c: 456: TMR0IE = 1;
  1522  098D  168B               	bsf	11,5	;volatile
  1523                           
  1524                           ;Multi_RX_testjig_v1.c: 459: TRISA = 0b01001111;
  1525  098E  304F               	movlw	79
  1526  098F  0021               	movlb	1	; select bank1
  1527  0990  008C               	movwf	12	;volatile
  1528                           
  1529                           ;Multi_RX_testjig_v1.c: 460: TRISB = 0b11001111;
  1530  0991  30CF               	movlw	207
  1531  0992  008D               	movwf	13	;volatile
  1532                           
  1533                           ;Multi_RX_testjig_v1.c: 461: TRISC = 0b00011010;
  1534  0993  301A               	movlw	26
  1535  0994  008E               	movwf	14	;volatile
  1536                           
  1537                           ;Multi_RX_testjig_v1.c: 462: TRISD = 0b10001011;
  1538  0995  308B               	movlw	139
  1539  0996  008F               	movwf	15	;volatile
  1540                           
  1541                           ;Multi_RX_testjig_v1.c: 463: TRISE = 0b11110111;
  1542  0997  30F7               	movlw	247
  1543  0998  0090               	movwf	16	;volatile
  1544                           
  1545                           ;Multi_RX_testjig_v1.c: 464: TRISF = 0b00001000;
  1546  0999  3008               	movlw	8
  1547  099A  0026               	movlb	6	; select bank6
  1548  099B  008C               	movwf	12	;volatile
  1549                           
  1550                           ;Multi_RX_testjig_v1.c: 465: TRISG = 0b11101111;
  1551  099C  30EF               	movlw	239
  1552  099D  008D               	movwf	13	;volatile
  1553                           
  1554                           ;Multi_RX_testjig_v1.c: 467: PORTA = 0b00000000;
  1555  099E  0020               	movlb	0	; select bank0
  1556  099F  018C               	clrf	12	;volatile
  1557                           
  1558                           ;Multi_RX_testjig_v1.c: 468: PORTB = 0b00000000;
  1559  09A0  018D               	clrf	13	;volatile
  1560                           
  1561                           ;Multi_RX_testjig_v1.c: 469: PORTC = 0b00000000;
  1562  09A1  018E               	clrf	14	;volatile
  1563                           
  1564                           ;Multi_RX_testjig_v1.c: 470: PORTD = 0b01000000;
  1565  09A2  3040               	movlw	64
  1566  09A3  008F               	movwf	15	;volatile
  1567                           
  1568                           ;Multi_RX_testjig_v1.c: 471: PORTE = 0b00000000;
  1569  09A4  0190               	clrf	16	;volatile
  1570                           
  1571                           ;Multi_RX_testjig_v1.c: 472: PORTF = 0b00000000;
  1572  09A5  0025               	movlb	5	; select bank5
  1573  09A6  018C               	clrf	12	;volatile
  1574                           
  1575                           ;Multi_RX_testjig_v1.c: 473: PORTG = 0b00000000;
  1576  09A7  018D               	clrf	13	;volatile
  1577                           
  1578                           ;Multi_RX_testjig_v1.c: 475: WPUB = 0b00000000;
  1579  09A8  0024               	movlb	4	; select bank4
  1580  09A9  018D               	clrf	13	;volatile
  1581                           
  1582                           ;Multi_RX_testjig_v1.c: 476: WPUD = 0b00000000;
  1583  09AA  018F               	clrf	15	;volatile
  1584                           
  1585                           ;Multi_RX_testjig_v1.c: 477: WPUE = 0b00000000;
  1586  09AB  0190               	clrf	16	;volatile
  1587                           
  1588                           ;Multi_RX_testjig_v1.c: 479: ANSELA = 0b00000000;
  1589  09AC  0023               	movlb	3	; select bank3
  1590  09AD  018C               	clrf	12	;volatile
  1591                           
  1592                           ;Multi_RX_testjig_v1.c: 480: ANSELB = 0b00001100;
  1593  09AE  300C               	movlw	12
  1594  09AF  008D               	movwf	13	;volatile
  1595                           
  1596                           ;Multi_RX_testjig_v1.c: 481: ANSELD = 0b00001111;
  1597  09B0  300F               	movlw	15
  1598  09B1  008F               	movwf	15	;volatile
  1599                           
  1600                           ;Multi_RX_testjig_v1.c: 482: ANSELE = 0b00000100;
  1601  09B2  3004               	movlw	4
  1602  09B3  0090               	movwf	16	;volatile
  1603                           
  1604                           ;Multi_RX_testjig_v1.c: 483: ANSELF = 0b00000000;
  1605  09B4  0028               	movlb	8	; select bank8
  1606  09B5  018C               	clrf	12	;volatile
  1607                           
  1608                           ;Multi_RX_testjig_v1.c: 484: ANSELG = 0b00000000;
  1609  09B6  018D               	clrf	13	;volatile
  1610                           
  1611                           ;Multi_RX_testjig_v1.c: 487: init_ADC();
  1612  09B7  27C2  3188         	fcall	_init_ADC
  1613                           
  1614                           ;Multi_RX_testjig_v1.c: 488: init_current_sink();
  1615  09B9  27C9  3188         	fcall	_init_current_sink
  1616                           
  1617                           ;Multi_RX_testjig_v1.c: 489: pickit_state = pickit_idle;
  1618  09BB  3005               	movlw	5
  1619  09BC  0020               	movlb	0	; select bank0
  1620  09BD  00E8               	movwf	_pickit_state
  1621                           
  1622                           ;Multi_RX_testjig_v1.c: 490: current_sink_state = current_sink_off;
  1623  09BE  01E4               	clrf	_current_sink_state
  1624                           
  1625                           ;Multi_RX_testjig_v1.c: 491: RA5 = 0;
  1626  09BF  128C               	bcf	12,5	;volatile
  1627                           
  1628                           ;Multi_RX_testjig_v1.c: 492: buzz_one(200);
  1629  09C0  30C8               	movlw	200
  1630  09C1  00F0               	movwf	buzz_one@time
  1631  09C2  01F1               	clrf	buzz_one@time+1
  1632  09C3  2456  3188         	fcall	_buzz_one
  1633                           
  1634                           ;Multi_RX_testjig_v1.c: 493: RA5 = 1;
  1635  09C5  0020               	movlb	0	; select bank0
  1636  09C6  168C               	bsf	12,5	;volatile
  1637                           
  1638                           ;Multi_RX_testjig_v1.c: 494: init_i2c();
  1639  09C7  27DE  3188         	fcall	_init_i2c
  1640                           
  1641                           ;Multi_RX_testjig_v1.c: 495: init_uart2();
  1642  09C9  27F5  3188         	fcall	_init_uart2
  1643                           
  1644                           ;Multi_RX_testjig_v1.c: 496: disable_uart();
  1645  09CB  27BA  3188         	fcall	_disable_uart
  1646                           
  1647                           ;Multi_RX_testjig_v1.c: 497: uart_reset();
  1648  09CD  26BD  3188         	fcall	_uart_reset
  1649                           
  1650                           ;Multi_RX_testjig_v1.c: 498: enable_uart();
  1651  09CF  27BE  3188         	fcall	_enable_uart
  1652                           
  1653                           ;Multi_RX_testjig_v1.c: 499: uart_reset();
  1654  09D1  26BD  3188         	fcall	_uart_reset
  1655                           
  1656                           ;Multi_RX_testjig_v1.c: 501: init_i2c_lcd_5v(8, 0x38);
  1657  09D3  3038               	movlw	56
  1658  09D4  00F1               	movwf	init_i2c_lcd_5v@single1_double2
  1659  09D5  3008               	movlw	8
  1660  09D6  24DB  3188         	fcall	_init_i2c_lcd_5v
  1661                           
  1662                           ;Multi_RX_testjig_v1.c: 502: print_screen("Multi_RX", "Test-Jig|Startup");
  1663  09D8  3004               	movlw	low (STR_1| (0+32768))
  1664  09D9  00F4               	movwf	print_screen@top
  1665  09DA  3091               	movlw	high (STR_1| (0+32768))
  1666  09DB  00F5               	movwf	print_screen@top+1
  1667  09DC  3035               	movlw	low (STR_2| (0+32768))
  1668  09DD  00F6               	movwf	print_screen@bottom
  1669  09DE  3090               	movlw	high (STR_2| (0+32768))
  1670  09DF  00F7               	movwf	print_screen@bottom+1
  1671  09E0  23E5  3188         	fcall	_print_screen
  1672                           
  1673                           ;Multi_RX_testjig_v1.c: 503: RA4 = 1;
  1674  09E2  0020               	movlb	0	; select bank0
  1675  09E3  160C               	bsf	12,4	;volatile
  1676                           
  1677                           ;Multi_RX_testjig_v1.c: 504: GIE = 1;
  1678  09E4  178B               	bsf	11,7	;volatile
  1679                           
  1680                           ;Multi_RX_testjig_v1.c: 505: LATC7 = 1;
  1681  09E5  0022               	movlb	2	; select bank2
  1682  09E6  178E               	bsf	14,7	;volatile
  1683                           
  1684                           ;Multi_RX_testjig_v1.c: 506: _delay((unsigned long)((100)*(16000000/4000.0)));
  1685  09E7  3003               	movlw	3
  1686  09E8  0020               	movlb	0	; select bank0
  1687  09E9  00D3               	movwf	??_main+2
  1688  09EA  3008               	movlw	8
  1689  09EB  00D2               	movwf	??_main+1
  1690  09EC  3078               	movlw	120
  1691  09ED  00D1               	movwf	??_main
  1692  09EE                     u1917:	
  1693  09EE  0BD1               	decfsz	??_main,f
  1694  09EF  29EE               	goto	u1917
  1695  09F0  0BD2               	decfsz	??_main+1,f
  1696  09F1  29EE               	goto	u1917
  1697  09F2  0BD3               	decfsz	??_main+2,f
  1698  09F3  29EE               	goto	u1917
  1699                           
  1700                           ;Multi_RX_testjig_v1.c: 507: debug_fast_tx(0xAAAA);
  1701  09F4  30AA               	movlw	170
  1702  09F5  00F0               	movwf	debug_fast_tx@data
  1703  09F6  00F1               	movwf	debug_fast_tx@data+1
  1704  09F7  2158  3188         	fcall	_debug_fast_tx
  1705                           
  1706                           ;Multi_RX_testjig_v1.c: 508: _delay((unsigned long)((100)*(16000000/4000000.0)));
  1707  09F9  3085               	movlw	133
  1708  09FA  0020               	movlb	0	; select bank0
  1709  09FB  00D1               	movwf	??_main
  1710  09FC                     u1927:	
  1711  09FC  0BD1               	decfsz	??_main,f
  1712  09FD  29FC               	goto	u1927
  1713                           
  1714                           ;Multi_RX_testjig_v1.c: 509: debug_fast_tx(0x5555);
  1715  09FE  3055               	movlw	85
  1716  09FF  00F0               	movwf	debug_fast_tx@data
  1717  0A00  00F1               	movwf	debug_fast_tx@data+1
  1718  0A01  2158  3188         	fcall	_debug_fast_tx
  1719                           
  1720                           ;Multi_RX_testjig_v1.c: 510: _delay((unsigned long)((100)*(16000000/4000000.0)));
  1721  0A03  3085               	movlw	133
  1722  0A04  0020               	movlb	0	; select bank0
  1723  0A05  00D1               	movwf	??_main
  1724  0A06                     u1937:	
  1725  0A06  0BD1               	decfsz	??_main,f
  1726  0A07  2A06               	goto	u1937
  1727                           
  1728                           ;Multi_RX_testjig_v1.c: 518: if(RF3 == 1)
  1729  0A08  0025               	movlb	5	; select bank5
  1730  0A09  1D8C               	btfss	12,3	;volatile
  1731  0A0A  2A16               	goto	l284
  1732                           
  1733                           ;Multi_RX_testjig_v1.c: 519: print_error("Multi_RX", "-> Insert PCB");
  1734  0A0B  3004               	movlw	low (STR_1| (0+32768))
  1735  0A0C  0020               	movlb	0	; select bank0
  1736  0A0D  00CA               	movwf	print_error@top
  1737  0A0E  3091               	movlw	high (STR_1| (0+32768))
  1738  0A0F  00CB               	movwf	print_error@top+1
  1739  0A10  3075               	movlw	low (STR_4| (0+32768))
  1740  0A11  00CC               	movwf	print_error@bottom
  1741  0A12  3090               	movlw	high (STR_4| (0+32768))
  1742  0A13  00CD               	movwf	print_error@bottom+1
  1743  0A14  245E  3188         	fcall	_print_error
  1744  0A16                     l284:	
  1745                           
  1746                           ;Multi_RX_testjig_v1.c: 522: print_screen("Powering board", "");
  1747  0A16  3057               	movlw	low (STR_5| (0+32768))
  1748  0A17  00F4               	movwf	print_screen@top
  1749  0A18  3090               	movlw	high (STR_5| (0+32768))
  1750  0A19  00F5               	movwf	print_screen@top+1
  1751  0A1A  301D               	movlw	low ((STR_42+7)| (0+32768))
  1752  0A1B  00F6               	movwf	print_screen@bottom
  1753  0A1C  3091               	movlw	high ((STR_42+7)| (0+32768))
  1754  0A1D  00F7               	movwf	print_screen@bottom+1
  1755  0A1E  23E5  3188         	fcall	_print_screen
  1756                           
  1757                           ;Multi_RX_testjig_v1.c: 525: Vout_set(12);
  1758  0A20  300C               	movlw	12
  1759  0A21  00F4               	movwf	Vout_set@Volts
  1760  0A22  01F5               	clrf	Vout_set@Volts+1
  1761  0A23  2688  3188         	fcall	_Vout_set
  1762                           
  1763                           ;Multi_RX_testjig_v1.c: 526: power_supply_set(0);
  1764  0A25  3000               	movlw	0
  1765  0A26  2435  3188         	fcall	_power_supply_set
  1766                           
  1767                           ;Multi_RX_testjig_v1.c: 527: _delay((unsigned long)((50)*(16000000/4000.0)));
  1768  0A28  3002               	movlw	2
  1769  0A29  0020               	movlb	0	; select bank0
  1770  0A2A  00D3               	movwf	??_main+2
  1771  0A2B  3004               	movlw	4
  1772  0A2C  00D2               	movwf	??_main+1
  1773  0A2D  30BA               	movlw	186
  1774  0A2E  00D1               	movwf	??_main
  1775  0A2F                     u1947:	
  1776  0A2F  0BD1               	decfsz	??_main,f
  1777  0A30  2A2F               	goto	u1947
  1778  0A31  0BD2               	decfsz	??_main+1,f
  1779  0A32  2A2F               	goto	u1947
  1780  0A33  0BD3               	decfsz	??_main+2,f
  1781  0A34  2A2F               	goto	u1947
  1782  0A35  0000               	nop
  1783                           
  1784                           ;Multi_RX_testjig_v1.c: 528: ADC_val = ADC_get_val(0b01011111);
  1785  0A36  305F               	movlw	95
  1786  0A37  23D3  3188         	fcall	_ADC_get_val
  1787                           
  1788                           ;Multi_RX_testjig_v1.c: 529: testjig_timer = (unsigned int)(7518.8/2);
  1789  0A39  30AF               	movlw	175
  1790  0A3A  0020               	movlb	0	; select bank0
  1791  0A3B  00E0               	movwf	_testjig_timer	;volatile
  1792  0A3C  300E               	movlw	14
  1793  0A3D  00E1               	movwf	_testjig_timer+1	;volatile
  1794  0A3E  2A56               	goto	l2548
  1795  0A3F                     l2550:	
  1796  0A3F  305F               	movlw	95
  1797  0A40  23D3  3188         	fcall	_ADC_get_val
  1798  0A42  3000               	movlw	0
  1799  0A43  0271               	subwf	?_ADC_get_val+1,w
  1800  0A44  307B               	movlw	123
  1801  0A45  1903               	skipnz
  1802  0A46  0270               	subwf	?_ADC_get_val,w
  1803  0A47  1C03               	skipc
  1804  0A48  2A60               	goto	l2556
  1805  0A49  23F6  3188         	fcall	_get_30v_current
  1806  0A4B  3000               	movlw	0
  1807  0A4C  0246               	subwf	?_get_30v_current+1,w
  1808  0A4D  301E               	movlw	30
  1809  0A4E  1903               	skipnz
  1810  0A4F  0245               	subwf	?_get_30v_current,w
  1811  0A50  1803               	skipnc
  1812  0A51  2A60               	goto	l2556
  1813  0A52  0860               	movf	_testjig_timer,w	;volatile
  1814  0A53  0461               	iorwf	_testjig_timer+1,w	;volatile
  1815  0A54  1903               	btfsc	3,2
  1816  0A55  2A60               	goto	l2556
  1817  0A56                     l2548:	
  1818                           ;Multi_RX_testjig_v1.c: 530: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08)) && (get_30v_current() < 30) && testjig_timer);
  1819                           
  1820  0A56  305F               	movlw	95
  1821  0A57  23D3  3188         	fcall	_ADC_get_val
  1822  0A59  3000               	movlw	0
  1823  0A5A  0271               	subwf	?_ADC_get_val+1,w
  1824  0A5B  3068               	movlw	104
  1825  0A5C  1903               	skipnz
  1826  0A5D  0270               	subwf	?_ADC_get_val,w
  1827  0A5E  1C03               	btfss	3,0
  1828  0A5F  2A3F               	goto	l2550
  1829  0A60                     l2556:	
  1830                           
  1831                           ;Multi_RX_testjig_v1.c: 531: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  1832  0A60  305F               	movlw	95
  1833  0A61  23D3  3188         	fcall	_ADC_get_val
  1834  0A63  3000               	movlw	0
  1835  0A64  0271               	subwf	?_ADC_get_val+1,w
  1836  0A65  3068               	movlw	104
  1837  0A66  1903               	skipnz
  1838  0A67  0270               	subwf	?_ADC_get_val,w
  1839  0A68  1803               	skipnc
  1840  0A69  2A73               	goto	l2560
  1841                           
  1842                           ;Multi_RX_testjig_v1.c: 532: print_error("12v-5v supply", "Volt Error L");
  1843  0A6A  3091               	movlw	low (STR_7| (0+32768))
  1844  0A6B  0020               	movlb	0	; select bank0
  1845  0A6C  00CA               	movwf	print_error@top
  1846  0A6D  3090               	movlw	high (STR_7| (0+32768))
  1847  0A6E  00CB               	movwf	print_error@top+1
  1848  0A6F  30BA               	movlw	low (STR_8| (0+32768))
  1849  0A70  00CC               	movwf	print_error@bottom
  1850  0A71  3090               	movlw	high (STR_8| (0+32768))
  1851  0A72  2AA2               	goto	L1
  1852  0A73                     l2560:	
  1853                           
  1854                           ;Multi_RX_testjig_v1.c: 533: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  1855  0A73  305F               	movlw	95
  1856  0A74  23D3  3188         	fcall	_ADC_get_val
  1857  0A76  3000               	movlw	0
  1858  0A77  0271               	subwf	?_ADC_get_val+1,w
  1859  0A78  307B               	movlw	123
  1860  0A79  1903               	skipnz
  1861  0A7A  0270               	subwf	?_ADC_get_val,w
  1862  0A7B  1C03               	skipc
  1863  0A7C  2A86               	goto	l2564
  1864                           
  1865                           ;Multi_RX_testjig_v1.c: 534: print_error("12v-5v supply", "Volt Error H");
  1866  0A7D  3091               	movlw	low (STR_7| (0+32768))
  1867  0A7E  0020               	movlb	0	; select bank0
  1868  0A7F  00CA               	movwf	print_error@top
  1869  0A80  3090               	movlw	high (STR_7| (0+32768))
  1870  0A81  00CB               	movwf	print_error@top+1
  1871  0A82  30AD               	movlw	low (STR_10| (0+32768))
  1872  0A83  00CC               	movwf	print_error@bottom
  1873  0A84  3090               	movlw	high (STR_10| (0+32768))
  1874  0A85  2AA2               	goto	L1
  1875  0A86                     l2564:	
  1876                           
  1877                           ;Multi_RX_testjig_v1.c: 535: else if((get_30v_current() >= 30))
  1878  0A86  23F6  3188         	fcall	_get_30v_current
  1879  0A88  3000               	movlw	0
  1880  0A89  0246               	subwf	?_get_30v_current+1,w
  1881  0A8A  301E               	movlw	30
  1882  0A8B  1903               	skipnz
  1883  0A8C  0245               	subwf	?_get_30v_current,w
  1884  0A8D  1C03               	skipc
  1885  0A8E  2A97               	goto	l2568
  1886                           
  1887                           ;Multi_RX_testjig_v1.c: 536: print_error("12v-5v supply", "Curr Error");
  1888  0A8F  3091               	movlw	low (STR_7| (0+32768))
  1889  0A90  00CA               	movwf	print_error@top
  1890  0A91  3090               	movlw	high (STR_7| (0+32768))
  1891  0A92  00CB               	movwf	print_error@top+1
  1892  0A93  30F9               	movlw	low (STR_12| (0+32768))
  1893  0A94  00CC               	movwf	print_error@bottom
  1894  0A95  3090               	movlw	high (STR_12| (0+32768))
  1895  0A96  2AA2               	goto	L1
  1896  0A97                     l2568:	
  1897                           
  1898                           ;Multi_RX_testjig_v1.c: 537: else if(testjig_timer == 0)
  1899  0A97  0860               	movf	_testjig_timer,w	;volatile
  1900  0A98  0461               	iorwf	_testjig_timer+1,w	;volatile
  1901  0A99  1D03               	btfss	3,2
  1902  0A9A  2AA5               	goto	l291
  1903                           
  1904                           ;Multi_RX_testjig_v1.c: 538: print_error("12v-5v supply", "T-out Error");
  1905  0A9B  3091               	movlw	low (STR_7| (0+32768))
  1906  0A9C  00CA               	movwf	print_error@top
  1907  0A9D  3090               	movlw	high (STR_7| (0+32768))
  1908  0A9E  00CB               	movwf	print_error@top+1
  1909  0A9F  30ED               	movlw	low (STR_14| (0+32768))
  1910  0AA0  00CC               	movwf	print_error@bottom
  1911  0AA1  3090               	movlw	high (STR_14| (0+32768))
  1912  0AA2                     L1:	
  1913  0AA2  00CD               	movwf	print_error@bottom+1
  1914  0AA3  245E  3188         	fcall	_print_error
  1915  0AA5                     l291:	
  1916                           
  1917                           ;Multi_RX_testjig_v1.c: 543: Vout_set(16);
  1918  0AA5  3010               	movlw	16
  1919  0AA6  00F4               	movwf	Vout_set@Volts
  1920  0AA7  01F5               	clrf	Vout_set@Volts+1
  1921  0AA8  2688  3188         	fcall	_Vout_set
  1922                           
  1923                           ;Multi_RX_testjig_v1.c: 544: power_supply_set(1);
  1924  0AAA  3001               	movlw	1
  1925  0AAB  2435  3188         	fcall	_power_supply_set
  1926                           
  1927                           ;Multi_RX_testjig_v1.c: 545: _delay((unsigned long)((150)*(16000000/4000.0)));
  1928  0AAD  3004               	movlw	4
  1929  0AAE  0020               	movlb	0	; select bank0
  1930  0AAF  00D3               	movwf	??_main+2
  1931  0AB0  300C               	movlw	12
  1932  0AB1  00D2               	movwf	??_main+1
  1933  0AB2  3035               	movlw	53
  1934  0AB3  00D1               	movwf	??_main
  1935  0AB4                     u1957:	
  1936  0AB4  0BD1               	decfsz	??_main,f
  1937  0AB5  2AB4               	goto	u1957
  1938  0AB6  0BD2               	decfsz	??_main+1,f
  1939  0AB7  2AB4               	goto	u1957
  1940  0AB8  0BD3               	decfsz	??_main+2,f
  1941  0AB9  2AB4               	goto	u1957
  1942  0ABA  3200               	nop2
  1943                           
  1944                           ;Multi_RX_testjig_v1.c: 546: testjig_timer = (unsigned int)(7518.8/2);
  1945  0ABB  30AF               	movlw	175
  1946  0ABC  0020               	movlb	0	; select bank0
  1947  0ABD  00E0               	movwf	_testjig_timer	;volatile
  1948  0ABE  300E               	movlw	14
  1949  0ABF  00E1               	movwf	_testjig_timer+1	;volatile
  1950  0AC0  2AEC               	goto	l2576
  1951  0AC1                     l2578:	
  1952  0AC1  305F               	movlw	95
  1953  0AC2  23D3  3188         	fcall	_ADC_get_val
  1954  0AC4  3000               	movlw	0
  1955  0AC5  0271               	subwf	?_ADC_get_val+1,w
  1956  0AC6  307B               	movlw	123
  1957  0AC7  1903               	skipnz
  1958  0AC8  0270               	subwf	?_ADC_get_val,w
  1959  0AC9  1C03               	skipc
  1960  0ACA  2AF6               	goto	l2588
  1961  0ACB  3063               	movlw	99
  1962  0ACC  23D3  3188         	fcall	_ADC_get_val
  1963  0ACE  3000               	movlw	0
  1964  0ACF  0271               	subwf	?_ADC_get_val+1,w
  1965  0AD0  30FA               	movlw	250
  1966  0AD1  1903               	skipnz
  1967  0AD2  0270               	subwf	?_ADC_get_val,w
  1968  0AD3  1803               	skipnc
  1969  0AD4  2AF6               	goto	l2588
  1970  0AD5  3063               	movlw	99
  1971  0AD6  23D3  3188         	fcall	_ADC_get_val
  1972  0AD8  3001               	movlw	1
  1973  0AD9  0271               	subwf	?_ADC_get_val+1,w
  1974  0ADA  3027               	movlw	39
  1975  0ADB  1903               	skipnz
  1976  0ADC  0270               	subwf	?_ADC_get_val,w
  1977  0ADD  1C03               	skipc
  1978  0ADE  2AF6               	goto	l2588
  1979  0ADF  23F6  3188         	fcall	_get_30v_current
  1980  0AE1  3000               	movlw	0
  1981  0AE2  0246               	subwf	?_get_30v_current+1,w
  1982  0AE3  3028               	movlw	40
  1983  0AE4  1903               	skipnz
  1984  0AE5  0245               	subwf	?_get_30v_current,w
  1985  0AE6  1803               	skipnc
  1986  0AE7  2AF6               	goto	l2588
  1987  0AE8  0860               	movf	_testjig_timer,w	;volatile
  1988  0AE9  0461               	iorwf	_testjig_timer+1,w	;volatile
  1989  0AEA  1903               	btfsc	3,2
  1990  0AEB  2AF6               	goto	l2588
  1991  0AEC                     l2576:	
  1992                           ;Multi_RX_testjig_v1.c: 547: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08))&&(ADC_get_val(0b01100011) < (unsigned int)((((12/11.0)*1024)/4.096)*0.92)) && (A
      +                          DC_get_val(0b01
  1993                           
  1994  0AEC  305F               	movlw	95
  1995  0AED  23D3  3188         	fcall	_ADC_get_val
  1996  0AEF  3000               	movlw	0
  1997  0AF0  0271               	subwf	?_ADC_get_val+1,w
  1998  0AF1  3068               	movlw	104
  1999  0AF2  1903               	skipnz
  2000  0AF3  0270               	subwf	?_ADC_get_val,w
  2001  0AF4  1C03               	btfss	3,0
  2002  0AF5  2AC1               	goto	l2578
  2003  0AF6                     l2588:	
  2004                           
  2005                           ;Multi_RX_testjig_v1.c: 548: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  2006  0AF6  305F               	movlw	95
  2007  0AF7  23D3  3188         	fcall	_ADC_get_val
  2008  0AF9  3000               	movlw	0
  2009  0AFA  0271               	subwf	?_ADC_get_val+1,w
  2010  0AFB  3068               	movlw	104
  2011  0AFC  1903               	skipnz
  2012  0AFD  0270               	subwf	?_ADC_get_val,w
  2013  0AFE  1803               	skipnc
  2014  0AFF  2B05               	goto	l2592
  2015                           
  2016                           ;Multi_RX_testjig_v1.c: 549: print_error("16v-5v supply", "Volt Error L");
  2017  0B00  309F               	movlw	low (STR_15| (0+32768))
  2018  0B01  0020               	movlb	0	; select bank0
  2019  0B02  00CA               	movwf	print_error@top
  2020  0B03  3090               	movlw	high (STR_15| (0+32768))
  2021  0B04  2B22               	goto	L3
  2022  0B05                     l2592:	
  2023                           
  2024                           ;Multi_RX_testjig_v1.c: 550: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  2025  0B05  305F               	movlw	95
  2026  0B06  23D3  3188         	fcall	_ADC_get_val
  2027  0B08  3000               	movlw	0
  2028  0B09  0271               	subwf	?_ADC_get_val+1,w
  2029  0B0A  307B               	movlw	123
  2030  0B0B  1903               	skipnz
  2031  0B0C  0270               	subwf	?_ADC_get_val,w
  2032  0B0D  1C03               	skipc
  2033  0B0E  2B14               	goto	l2596
  2034                           
  2035                           ;Multi_RX_testjig_v1.c: 551: print_error("16v-5v supply", "Volt Error H");
  2036  0B0F  309F               	movlw	low (STR_15| (0+32768))
  2037  0B10  0020               	movlb	0	; select bank0
  2038  0B11  00CA               	movwf	print_error@top
  2039  0B12  3090               	movlw	high (STR_15| (0+32768))
  2040  0B13  2B35               	goto	L4
  2041  0B14                     l2596:	
  2042                           
  2043                           ;Multi_RX_testjig_v1.c: 552: else if((ADC_get_val(0b01100011) < (unsigned int)((((12/11.
      +                          0)*1024)/4.096)*0.92)))
  2044  0B14  3063               	movlw	99
  2045  0B15  23D3  3188         	fcall	_ADC_get_val
  2046  0B17  3000               	movlw	0
  2047  0B18  0271               	subwf	?_ADC_get_val+1,w
  2048  0B19  30FA               	movlw	250
  2049  0B1A  1903               	skipnz
  2050  0B1B  0270               	subwf	?_ADC_get_val,w
  2051  0B1C  1803               	skipnc
  2052  0B1D  2B27               	goto	l2600
  2053                           
  2054                           ;Multi_RX_testjig_v1.c: 553: print_error("16v-12v supply", "Volt Error L");
  2055  0B1E  3066               	movlw	low (STR_19| (0+32768))
  2056  0B1F  0020               	movlb	0	; select bank0
  2057  0B20  00CA               	movwf	print_error@top
  2058  0B21  3090               	movlw	high (STR_19| (0+32768))
  2059  0B22                     L3:	
  2060  0B22  00CB               	movwf	print_error@top+1
  2061  0B23  30BA               	movlw	low (STR_8| (0+32768))
  2062  0B24  00CC               	movwf	print_error@bottom
  2063  0B25  3090               	movlw	high (STR_8| (0+32768))
  2064  0B26  2B56               	goto	L2
  2065  0B27                     l2600:	
  2066                           
  2067                           ;Multi_RX_testjig_v1.c: 554: else if((ADC_get_val(0b01100011) > (unsigned int)((((12/11.
      +                          0)*1024)/4.096)*1.08)))
  2068  0B27  3063               	movlw	99
  2069  0B28  23D3  3188         	fcall	_ADC_get_val
  2070  0B2A  3001               	movlw	1
  2071  0B2B  0271               	subwf	?_ADC_get_val+1,w
  2072  0B2C  3027               	movlw	39
  2073  0B2D  1903               	skipnz
  2074  0B2E  0270               	subwf	?_ADC_get_val,w
  2075  0B2F  1C03               	skipc
  2076  0B30  2B3A               	goto	l2604
  2077                           
  2078                           ;Multi_RX_testjig_v1.c: 555: print_error("16v-12v supply", "Volt Error H");
  2079  0B31  3066               	movlw	low (STR_19| (0+32768))
  2080  0B32  0020               	movlb	0	; select bank0
  2081  0B33  00CA               	movwf	print_error@top
  2082  0B34  3090               	movlw	high (STR_19| (0+32768))
  2083  0B35                     L4:	
  2084  0B35  00CB               	movwf	print_error@top+1
  2085  0B36  30AD               	movlw	low (STR_10| (0+32768))
  2086  0B37  00CC               	movwf	print_error@bottom
  2087  0B38  3090               	movlw	high (STR_10| (0+32768))
  2088  0B39  2B56               	goto	L2
  2089  0B3A                     l2604:	
  2090                           
  2091                           ;Multi_RX_testjig_v1.c: 556: else if((get_30v_current() >= 40))
  2092  0B3A  23F6  3188         	fcall	_get_30v_current
  2093  0B3C  3000               	movlw	0
  2094  0B3D  0246               	subwf	?_get_30v_current+1,w
  2095  0B3E  3028               	movlw	40
  2096  0B3F  1903               	skipnz
  2097  0B40  0245               	subwf	?_get_30v_current,w
  2098  0B41  1C03               	skipc
  2099  0B42  2B4B               	goto	l2608
  2100                           
  2101                           ;Multi_RX_testjig_v1.c: 557: print_error("16v-5v supply", "Curr Error");
  2102  0B43  309F               	movlw	low (STR_15| (0+32768))
  2103  0B44  00CA               	movwf	print_error@top
  2104  0B45  3090               	movlw	high (STR_15| (0+32768))
  2105  0B46  00CB               	movwf	print_error@top+1
  2106  0B47  30F9               	movlw	low (STR_12| (0+32768))
  2107  0B48  00CC               	movwf	print_error@bottom
  2108  0B49  3090               	movlw	high (STR_12| (0+32768))
  2109  0B4A  2B56               	goto	L2
  2110  0B4B                     l2608:	
  2111                           
  2112                           ;Multi_RX_testjig_v1.c: 558: else if(testjig_timer == 0)
  2113  0B4B  0860               	movf	_testjig_timer,w	;volatile
  2114  0B4C  0461               	iorwf	_testjig_timer+1,w	;volatile
  2115  0B4D  1D03               	btfss	3,2
  2116  0B4E  2B59               	goto	l2612
  2117                           
  2118                           ;Multi_RX_testjig_v1.c: 559: print_error("16v-5v supply", "T-out Error");
  2119  0B4F  309F               	movlw	low (STR_15| (0+32768))
  2120  0B50  00CA               	movwf	print_error@top
  2121  0B51  3090               	movlw	high (STR_15| (0+32768))
  2122  0B52  00CB               	movwf	print_error@top+1
  2123  0B53  30ED               	movlw	low (STR_14| (0+32768))
  2124  0B54  00CC               	movwf	print_error@bottom
  2125  0B55  3090               	movlw	high (STR_14| (0+32768))
  2126  0B56                     L2:	
  2127  0B56  00CD               	movwf	print_error@bottom+1
  2128  0B57  245E  3188         	fcall	_print_error
  2129  0B59                     l2612:	
  2130                           
  2131                           ;Multi_RX_testjig_v1.c: 565: if(RA2 == 1)
  2132  0B59  0020               	movlb	0	; select bank0
  2133  0B5A  1D0C               	btfss	12,2	;volatile
  2134  0B5B  2B9E               	goto	l2632
  2135                           
  2136                           ;Multi_RX_testjig_v1.c: 566: {
  2137                           ;Multi_RX_testjig_v1.c: 567: power_supply_set(0);
  2138  0B5C  3000               	movlw	0
  2139  0B5D  2435  3188         	fcall	_power_supply_set
  2140                           
  2141                           ;Multi_RX_testjig_v1.c: 569: print_screen("Pickit Programming", "");
  2142  0B5F  3000               	movlw	low (STR_27| (0+32768))
  2143  0B60  00F4               	movwf	print_screen@top
  2144  0B61  3090               	movlw	high (STR_27| (0+32768))
  2145  0B62  00F5               	movwf	print_screen@top+1
  2146  0B63  301D               	movlw	low ((STR_42+7)| (0+32768))
  2147  0B64  00F6               	movwf	print_screen@bottom
  2148  0B65  3091               	movlw	high ((STR_42+7)| (0+32768))
  2149  0B66  00F7               	movwf	print_screen@bottom+1
  2150  0B67  23E5  3188         	fcall	_print_screen
  2151                           
  2152                           ;Multi_RX_testjig_v1.c: 570: LATA7 = 1;
  2153  0B69  0022               	movlb	2	; select bank2
  2154  0B6A  178C               	bsf	12,7	;volatile
  2155                           
  2156                           ;Multi_RX_testjig_v1.c: 571: _delay((unsigned long)((100)*(16000000/4000.0)));
  2157  0B6B  3003               	movlw	3
  2158  0B6C  0020               	movlb	0	; select bank0
  2159  0B6D  00D3               	movwf	??_main+2
  2160  0B6E  3008               	movlw	8
  2161  0B6F  00D2               	movwf	??_main+1
  2162  0B70  3078               	movlw	120
  2163  0B71  00D1               	movwf	??_main
  2164  0B72                     u1967:	
  2165  0B72  0BD1               	decfsz	??_main,f
  2166  0B73  2B72               	goto	u1967
  2167  0B74  0BD2               	decfsz	??_main+1,f
  2168  0B75  2B72               	goto	u1967
  2169  0B76  0BD3               	decfsz	??_main+2,f
  2170  0B77  2B72               	goto	u1967
  2171                           
  2172                           ;Multi_RX_testjig_v1.c: 572: pickit_state = pickit_start;
  2173  0B78  0020               	movlb	0	; select bank0
  2174  0B79  30E1               	movlw	low (STR_29| (0+32768))
  2175  0B7A  01E8               	clrf	_pickit_state
  2176  0B7B  0AE8               	incf	_pickit_state,f
  2177                           
  2178                           ;Multi_RX_testjig_v1.c: 574: print_screen("Waiting for", " Programming");
  2179  0B7C  00F4               	movwf	print_screen@top
  2180  0B7D  3090               	movlw	high (STR_29| (0+32768))
  2181  0B7E  00F5               	movwf	print_screen@top+1
  2182  0B7F  3006               	movlw	low ((STR_27+6)| (0+32768))
  2183  0B80  00F6               	movwf	print_screen@bottom
  2184  0B81  3090               	movlw	high ((STR_27+6)| (0+32768))
  2185  0B82  00F7               	movwf	print_screen@bottom+1
  2186  0B83  23E5  3188         	fcall	_print_screen
  2187  0B85  2B8A               	goto	l2624
  2188  0B86                     l2626:	
  2189  0B86  3004               	movlw	4
  2190  0B87  0668               	xorwf	_pickit_state,w
  2191  0B88  1903               	btfsc	3,2
  2192  0B89  2B8F               	goto	l2628
  2193  0B8A                     l2624:	
  2194                           ;Multi_RX_testjig_v1.c: 575: while((pickit_state != pickit_idle) && (pickit_state != pic
      +                          kit_error));
  2195                           
  2196  0B8A  3005               	movlw	5
  2197  0B8B  0020               	movlb	0	; select bank0
  2198  0B8C  0668               	xorwf	_pickit_state,w
  2199  0B8D  1D03               	btfss	3,2
  2200  0B8E  2B86               	goto	l2626
  2201  0B8F                     l2628:	
  2202                           
  2203                           ;Multi_RX_testjig_v1.c: 576: if(pickit_state == pickit_error)
  2204  0B8F  3004               	movlw	4
  2205  0B90  0668               	xorwf	_pickit_state,w
  2206  0B91  1D03               	btfss	3,2
  2207  0B92  2BB6               	goto	l2636
  2208                           
  2209                           ;Multi_RX_testjig_v1.c: 577: print_error("Programming", "Error");
  2210  0B93  3007               	movlw	low ((STR_27+7)| (0+32768))
  2211  0B94  00CA               	movwf	print_error@top
  2212  0B95  3090               	movlw	high ((STR_27+7)| (0+32768))
  2213  0B96  00CB               	movwf	print_error@top+1
  2214  0B97  30FE               	movlw	low ((STR_12+5)| (0+32768))
  2215  0B98  00CC               	movwf	print_error@bottom
  2216  0B99  3090               	movlw	high ((STR_12+5)| (0+32768))
  2217  0B9A  00CD               	movwf	print_error@bottom+1
  2218  0B9B  245E  3188         	fcall	_print_error
  2219  0B9D  2BB6               	goto	l2636
  2220  0B9E                     l2632:	
  2221                           
  2222                           ;Multi_RX_testjig_v1.c: 579: else
  2223                           ;Multi_RX_testjig_v1.c: 580: {
  2224                           ;Multi_RX_testjig_v1.c: 581: print_screen("Pickit Programming", " skipped");
  2225  0B9E  3000               	movlw	low (STR_27| (0+32768))
  2226  0B9F  00F4               	movwf	print_screen@top
  2227  0BA0  3090               	movlw	high (STR_27| (0+32768))
  2228  0BA1  00F5               	movwf	print_screen@top+1
  2229  0BA2  300D               	movlw	low (STR_34| (0+32768))
  2230  0BA3  00F6               	movwf	print_screen@bottom
  2231  0BA4  3091               	movlw	high (STR_34| (0+32768))
  2232  0BA5  00F7               	movwf	print_screen@bottom+1
  2233  0BA6  23E5  3188         	fcall	_print_screen
  2234                           
  2235                           ;Multi_RX_testjig_v1.c: 582: _delay((unsigned long)((500)*(16000000/4000.0)));
  2236  0BA8  300B               	movlw	11
  2237  0BA9  0020               	movlb	0	; select bank0
  2238  0BAA  00D3               	movwf	??_main+2
  2239  0BAB  3026               	movlw	38
  2240  0BAC  00D2               	movwf	??_main+1
  2241  0BAD  3066               	movlw	102
  2242  0BAE  00D1               	movwf	??_main
  2243  0BAF                     u1977:	
  2244  0BAF  0BD1               	decfsz	??_main,f
  2245  0BB0  2BAF               	goto	u1977
  2246  0BB1  0BD2               	decfsz	??_main+1,f
  2247  0BB2  2BAF               	goto	u1977
  2248  0BB3  0BD3               	decfsz	??_main+2,f
  2249  0BB4  2BAF               	goto	u1977
  2250  0BB5  3200               	nop2
  2251  0BB6                     l2636:	
  2252                           
  2253                           ;Multi_RX_testjig_v1.c: 583: }
  2254                           ;Multi_RX_testjig_v1.c: 586: TRISG0 = 0;
  2255  0BB6  0026               	movlb	6	; select bank6
  2256  0BB7  100D               	bcf	13,0	;volatile
  2257                           
  2258                           ;Multi_RX_testjig_v1.c: 587: print_screen("Toggle", "");
  2259  0BB8  301E               	movlw	low (STR_35| (0+32768))
  2260  0BB9  00F4               	movwf	print_screen@top
  2261  0BBA  3091               	movlw	high (STR_35| (0+32768))
  2262  0BBB  00F5               	movwf	print_screen@top+1
  2263  0BBC  301D               	movlw	low ((STR_42+7)| (0+32768))
  2264  0BBD  00F6               	movwf	print_screen@bottom
  2265  0BBE  3091               	movlw	high ((STR_42+7)| (0+32768))
  2266  0BBF  00F7               	movwf	print_screen@bottom+1
  2267  0BC0  23E5  3188         	fcall	_print_screen
  2268  0BC2                     l321:	
  2269                           ;Multi_RX_testjig_v1.c: 588: while(1)
  2270                           
  2271                           
  2272                           ;Multi_RX_testjig_v1.c: 589: {
  2273                           ;Multi_RX_testjig_v1.c: 590: LATG0 = !LATG0;
  2274  0BC2  3001               	movlw	1
  2275  0BC3  0027               	movlb	7	; select bank7
  2276  0BC4  068D               	xorwf	13,f
  2277                           
  2278                           ;Multi_RX_testjig_v1.c: 591: _delay((unsigned long)((100)*(16000000/4000.0)));
  2279  0BC5  3003               	movlw	3
  2280  0BC6  0020               	movlb	0	; select bank0
  2281  0BC7  00D3               	movwf	??_main+2
  2282  0BC8  3008               	movlw	8
  2283  0BC9  00D2               	movwf	??_main+1
  2284  0BCA  3078               	movlw	120
  2285  0BCB  00D1               	movwf	??_main
  2286  0BCC                     u1987:	
  2287  0BCC  0BD1               	decfsz	??_main,f
  2288  0BCD  2BCC               	goto	u1987
  2289  0BCE  0BD2               	decfsz	??_main+1,f
  2290  0BCF  2BCC               	goto	u1987
  2291  0BD0  0BD3               	decfsz	??_main+2,f
  2292  0BD1  2BCC               	goto	u1987
  2293  0BD2  2BC2               	goto	l321
  2294  0BD3                     __end_of_main:	
  2295  0BD3                     __ptext23:	
  2296 ;; *************** function _ADC_get_val *****************
  2297 ;; Defined at:
  2298 ;;		line 1524 in file "Multi_RX_testjig_v1.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  channel         1    wreg     unsigned char 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  channel         1    3[COMMON] unsigned char 
  2303 ;;  return_val      2    4[COMMON] unsigned int 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  2    0[COMMON] unsigned int 
  2306 ;; Registers used:
  2307 ;;		wreg
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/5
  2310 ;;		On exit  : 1F/1
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2313 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2314 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2316 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2317 ;;Total ram usage:        6 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    1
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;;		_get_30v_current
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           
  2329                           ;psect for function _ADC_get_val
  2330  0BD3                     _ADC_get_val:	
  2331                           
  2332                           ;incstack = 0
  2333                           ; Regs used in _ADC_get_val: [wreg]
  2334                           ;ADC_get_val@channel stored from wreg
  2335  0BD3  00F3               	movwf	ADC_get_val@channel
  2336                           
  2337                           ;Multi_RX_testjig_v1.c: 1526: unsigned int return_val;
  2338                           ;Multi_RX_testjig_v1.c: 1527: GIE = 0;
  2339  0BD4  138B               	bcf	11,7	;volatile
  2340                           
  2341                           ;Multi_RX_testjig_v1.c: 1528: ADCON0 = channel;
  2342  0BD5  0873               	movf	ADC_get_val@channel,w
  2343  0BD6  0021               	movlb	1	; select bank1
  2344  0BD7  009D               	movwf	29	;volatile
  2345  0BD8                     l526:	
  2346                           ;Multi_RX_testjig_v1.c: 1529: while(ADCON0bits.GO_nDONE == 1);
  2347                           
  2348  0BD8  189D               	btfsc	29,1	;volatile
  2349  0BD9  2BD8               	goto	l526
  2350                           
  2351                           ;Multi_RX_testjig_v1.c: 1530: return_val = ADRESH << 8 | ADRESL;
  2352  0BDA  081C               	movf	28,w	;volatile
  2353  0BDB  00F5               	movwf	ADC_get_val@return_val+1
  2354  0BDC  01F4               	clrf	ADC_get_val@return_val
  2355  0BDD  081B               	movf	27,w	;volatile
  2356  0BDE  04F4               	iorwf	ADC_get_val@return_val,f
  2357                           
  2358                           ;Multi_RX_testjig_v1.c: 1531: GIE = 1;
  2359  0BDF  178B               	bsf	11,7	;volatile
  2360                           
  2361                           ;Multi_RX_testjig_v1.c: 1532: return return_val;
  2362  0BE0  0875               	movf	ADC_get_val@return_val+1,w
  2363  0BE1  00F1               	movwf	?_ADC_get_val+1
  2364  0BE2  0874               	movf	ADC_get_val@return_val,w
  2365  0BE3  00F0               	movwf	?_ADC_get_val
  2366  0BE4  0008               	return
  2367  0BE5                     __end_of_ADC_get_val:	
  2368  0BE5                     __ptext4:	
  2369 ;; *************** function _print_screen *****************
  2370 ;; Defined at:
  2371 ;;		line 1169 in file "Multi_RX_testjig_v1.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  top             2    4[COMMON] PTR const unsigned char 
  2374 ;;		 -> STR_47(12), STR_45(17), STR_43(17), STR_41(17), 
  2375 ;;		 -> STR_39(9), STR_37(13), STR_35(7), STR_33(19), 
  2376 ;;		 -> STR_29(12), STR_27(19), STR_5(15), STR_1(9), 
  2377 ;;  bottom          2    6[COMMON] PTR const unsigned char 
  2378 ;;		 -> STR_48(17), STR_46(13), STR_44(14), STR_42(8), 
  2379 ;;		 -> STR_40(8), STR_38(14), STR_36(1), STR_34(9), 
  2380 ;;		 -> STR_30(13), STR_28(1), STR_6(1), STR_2(17), 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/4
  2389 ;;		On exit  : 1F/4
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2392 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2395 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2396 ;;Total ram usage:        4 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    3
  2399 ;; This function calls:
  2400 ;;		_clear_lcd
  2401 ;;		_i2c_Write_string
  2402 ;;		_i2c_first_line
  2403 ;;		_i2c_second_line
  2404 ;; This function is called by:
  2405 ;;		_main
  2406 ;;		_testjig_done
  2407 ;;		_print_error
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           
  2412                           ;psect for function _print_screen
  2413  0BE5                     _print_screen:	
  2414                           
  2415                           ;Multi_RX_testjig_v1.c: 1171: clear_lcd();
  2416                           
  2417                           ;incstack = 0
  2418                           ; Regs used in _print_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2419  0BE5  204B  3188         	fcall	_clear_lcd
  2420                           
  2421                           ;Multi_RX_testjig_v1.c: 1172: i2c_first_line();
  2422  0BE7  203A  3188         	fcall	_i2c_first_line
  2423                           
  2424                           ;Multi_RX_testjig_v1.c: 1173: i2c_Write_string(top);
  2425  0BE9  0875               	movf	print_screen@top+1,w
  2426  0BEA  00F2               	movwf	i2c_Write_string@data+1
  2427  0BEB  0874               	movf	print_screen@top,w
  2428  0BEC  00F1               	movwf	i2c_Write_string@data
  2429  0BED  24C0  3188         	fcall	_i2c_Write_string
  2430                           
  2431                           ;Multi_RX_testjig_v1.c: 1174: i2c_second_line();
  2432  0BEF  2029  3188         	fcall	_i2c_second_line
  2433                           
  2434                           ;Multi_RX_testjig_v1.c: 1175: i2c_Write_string(bottom);
  2435  0BF1  0877               	movf	print_screen@bottom+1,w
  2436  0BF2  00F2               	movwf	i2c_Write_string@data+1
  2437  0BF3  0876               	movf	print_screen@bottom,w
  2438  0BF4  00F1               	movwf	i2c_Write_string@data
  2439  0BF5  2CC0               	ljmp	l1896
  2440  0BF6                     __end_of_print_screen:	
  2441  0BF6                     __ptext17:	
  2442 ;; *************** function _get_30v_current *****************
  2443 ;; Defined at:
  2444 ;;		line 1618 in file "Multi_RX_testjig_v1.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  temp            2   39[BANK0 ] unsigned int 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  2   37[BANK0 ] unsigned int 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 1F/1
  2455 ;;		On exit  : 1F/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2458 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2459 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2461 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2462 ;;Total ram usage:        4 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    3
  2465 ;; This function calls:
  2466 ;;		_ADC_get_val
  2467 ;;		___ftadd
  2468 ;;		___ftmul
  2469 ;;		___fttol
  2470 ;;		___lwtoft
  2471 ;; This function is called by:
  2472 ;;		_main
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           
  2477                           ;psect for function _get_30v_current
  2478  0BF6                     _get_30v_current:	
  2479                           
  2480                           ;Multi_RX_testjig_v1.c: 1620: unsigned int temp;
  2481                           ;Multi_RX_testjig_v1.c: 1621: temp = ADC_get_val(0b01010011);
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in _get_30v_current: [wreg+status,2+status,0+pclath+cstack]
  2485  0BF6  3053               	movlw	83
  2486  0BF7  23D3  3188         	fcall	_ADC_get_val
  2487  0BF9  0871               	movf	?_ADC_get_val+1,w
  2488  0BFA  0020               	movlb	0	; select bank0
  2489  0BFB  00C8               	movwf	get_30v_current@temp+1
  2490  0BFC  0870               	movf	?_ADC_get_val,w
  2491  0BFD  00C7               	movwf	get_30v_current@temp
  2492                           
  2493                           ;Multi_RX_testjig_v1.c: 1622: if(temp > 4)
  2494  0BFE  3000               	movlw	0
  2495  0BFF  0248               	subwf	get_30v_current@temp+1,w
  2496  0C00  3005               	movlw	5
  2497  0C01  1903               	skipnz
  2498  0C02  0247               	subwf	get_30v_current@temp,w
  2499  0C03  1C03               	skipc
  2500  0C04  2C32               	goto	l2342
  2501                           
  2502                           ;Multi_RX_testjig_v1.c: 1623: return ( temp*3.4) - 16;
  2503  0C05  0848               	movf	get_30v_current@temp+1,w
  2504  0C06  00F9               	movwf	___lwtoft@c+1
  2505  0C07  0847               	movf	get_30v_current@temp,w
  2506  0C08  00F8               	movwf	___lwtoft@c
  2507  0C09  2678  3188         	fcall	___lwtoft
  2508  0C0B  0878               	movf	?___lwtoft,w
  2509  0C0C  00A3               	movwf	___ftmul@f2
  2510  0C0D  0879               	movf	?___lwtoft+1,w
  2511  0C0E  00A4               	movwf	___ftmul@f2+1
  2512  0C0F  087A               	movf	?___lwtoft+2,w
  2513  0C10  00A5               	movwf	___ftmul@f2+2
  2514  0C11  309A               	movlw	154
  2515  0C12  00A0               	movwf	___ftmul@f1
  2516  0C13  3059               	movlw	89
  2517  0C14  00A1               	movwf	___ftmul@f1+1
  2518  0C15  3040               	movlw	64
  2519  0C16  00A2               	movwf	___ftmul@f1+2
  2520  0C17  25AC  3188         	fcall	___ftmul
  2521  0C19  0820               	movf	?___ftmul,w
  2522  0C1A  00AF               	movwf	___ftadd@f2
  2523  0C1B  0821               	movf	?___ftmul+1,w
  2524  0C1C  00B0               	movwf	___ftadd@f2+1
  2525  0C1D  0822               	movf	?___ftmul+2,w
  2526  0C1E  00B1               	movwf	___ftadd@f2+2
  2527  0C1F  3080               	movlw	128
  2528  0C20  01AC               	clrf	___ftadd@f1
  2529  0C21  00AD               	movwf	___ftadd@f1+1
  2530  0C22  30C1               	movlw	193
  2531  0C23  00AE               	movwf	___ftadd@f1+2
  2532  0C24  26C8  3188         	fcall	___ftadd
  2533  0C26  082C               	movf	?___ftadd,w
  2534  0C27  00B8               	movwf	___fttol@f1
  2535  0C28  082D               	movf	?___ftadd+1,w
  2536  0C29  00B9               	movwf	___fttol@f1+1
  2537  0C2A  082E               	movf	?___ftadd+2,w
  2538  0C2B  00BA               	movwf	___fttol@f1+2
  2539  0C2C  2616               	fcall	___fttol
  2540  0C2D  0839               	movf	?___fttol+1,w
  2541  0C2E  00C6               	movwf	?_get_30v_current+1
  2542  0C2F  0838               	movf	?___fttol,w
  2543  0C30  00C5               	movwf	?_get_30v_current
  2544  0C31  0008               	return
  2545  0C32                     l2342:	
  2546                           
  2547                           ;Multi_RX_testjig_v1.c: 1624: else
  2548                           ;Multi_RX_testjig_v1.c: 1625: return 0;
  2549  0C32  01C5               	clrf	?_get_30v_current
  2550  0C33  01C6               	clrf	?_get_30v_current+1
  2551  0C34  0008               	return
  2552  0C35                     __end_of_get_30v_current:	
  2553  0C35                     __ptext9:	
  2554 ;; *************** function _power_supply_set *****************
  2555 ;; Defined at:
  2556 ;;		line 1591 in file "Multi_RX_testjig_v1.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  supply          1    wreg     unsigned char 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  supply          1    0[COMMON] unsigned char 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/4
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2573 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2574 ;;Total ram usage:        1 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    1
  2577 ;; This function calls:
  2578 ;;		Nothing
  2579 ;; This function is called by:
  2580 ;;		_main
  2581 ;;		_testjig_done
  2582 ;;		_print_error
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           
  2587                           ;psect for function _power_supply_set
  2588  0C35                     _power_supply_set:	
  2589                           
  2590                           ;incstack = 0
  2591                           ; Regs used in _power_supply_set: [wreg-fsr0h+status,2+status,0]
  2592                           ;power_supply_set@supply stored from wreg
  2593  0C35  00F0               	movwf	power_supply_set@supply
  2594                           
  2595                           ;Multi_RX_testjig_v1.c: 1593: switch(supply)
  2596  0C36  2C4B               	goto	l2144
  2597  0C37                     l548:	
  2598                           ;Multi_RX_testjig_v1.c: 1594: {
  2599                           ;Multi_RX_testjig_v1.c: 1595: case 0:
  2600                           
  2601                           
  2602                           ;Multi_RX_testjig_v1.c: 1596: LATD4 = 1;
  2603  0C37  0022               	movlb	2	; select bank2
  2604  0C38  160F               	bsf	15,4	;volatile
  2605                           
  2606                           ;Multi_RX_testjig_v1.c: 1597: LATD5 = 1;
  2607  0C39  168F               	bsf	15,5	;volatile
  2608                           
  2609                           ;Multi_RX_testjig_v1.c: 1598: LATD6 = 1;
  2610  0C3A  170F               	bsf	15,6	;volatile
  2611                           
  2612                           ;Multi_RX_testjig_v1.c: 1599: break;
  2613  0C3B  0008               	return
  2614  0C3C                     l550:	
  2615                           ;Multi_RX_testjig_v1.c: 1600: case 1:
  2616                           
  2617                           
  2618                           ;Multi_RX_testjig_v1.c: 1601: LATD4 = 1;
  2619  0C3C  0022               	movlb	2	; select bank2
  2620  0C3D  160F               	bsf	15,4	;volatile
  2621                           
  2622                           ;Multi_RX_testjig_v1.c: 1602: LATD5 = 0;
  2623  0C3E  128F               	bcf	15,5	;volatile
  2624                           
  2625                           ;Multi_RX_testjig_v1.c: 1603: LATD6 = 1;
  2626  0C3F  170F               	bsf	15,6	;volatile
  2627                           
  2628                           ;Multi_RX_testjig_v1.c: 1604: break;
  2629  0C40  0008               	return
  2630  0C41                     l551:	
  2631                           ;Multi_RX_testjig_v1.c: 1605: case 2:
  2632                           
  2633                           
  2634                           ;Multi_RX_testjig_v1.c: 1606: LATD4 = 0;
  2635  0C41  0022               	movlb	2	; select bank2
  2636  0C42  120F               	bcf	15,4	;volatile
  2637                           
  2638                           ;Multi_RX_testjig_v1.c: 1607: LATD5 = 0;
  2639  0C43  128F               	bcf	15,5	;volatile
  2640                           
  2641                           ;Multi_RX_testjig_v1.c: 1608: LATD6 = 0;
  2642  0C44  130F               	bcf	15,6	;volatile
  2643                           
  2644                           ;Multi_RX_testjig_v1.c: 1609: break;
  2645  0C45  0008               	return
  2646  0C46                     l552:	
  2647                           ;Multi_RX_testjig_v1.c: 1610: case 3:
  2648                           
  2649                           
  2650                           ;Multi_RX_testjig_v1.c: 1611: LATD4 = 0;
  2651  0C46  0022               	movlb	2	; select bank2
  2652  0C47  120F               	bcf	15,4	;volatile
  2653                           
  2654                           ;Multi_RX_testjig_v1.c: 1612: LATD5 = 0;
  2655  0C48  128F               	bcf	15,5	;volatile
  2656                           
  2657                           ;Multi_RX_testjig_v1.c: 1613: LATD6 = 1;
  2658  0C49  170F               	bsf	15,6	;volatile
  2659                           
  2660                           ;Multi_RX_testjig_v1.c: 1614: break;
  2661  0C4A  0008               	return
  2662  0C4B                     l2144:	
  2663  0C4B  0870               	movf	power_supply_set@supply,w
  2664                           
  2665                           ; Switch size 1, requested type "speed"
  2666                           ; Number of cases is 4, Range of values is 0 to 3
  2667                           ; switch strategies available:
  2668                           ; Name         Instructions Cycles
  2669                           ; direct_byte           14     6 (fixed)
  2670                           ; simple_byte           13     7 (average)
  2671                           ; jumptable            260     6 (fixed)
  2672                           ;	Chosen strategy is direct_byte
  2673  0C4C  0084               	movwf	4
  2674  0C4D  3004               	movlw	4
  2675  0C4E  0204               	subwf	4,w
  2676  0C4F  1803               	skipnc
  2677  0C50  0008               	return
  2678  0C51  3180               	movlp	high S2744
  2679  0C52  3504               	lslf	4,w
  2680  0C53  3EB3               	addlw	low S2744
  2681  0C54  0082               	movwf	2
  2682  0C55  0008               	return
  2683  0C56                     __end_of_power_supply_set:	
  2684  0C56                     __ptext11:	
  2685 ;; *************** function _buzz_one *****************
  2686 ;; Defined at:
  2687 ;;		line 674 in file "Multi_RX_testjig_v1.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;  time            2    0[COMMON] unsigned int 
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		wreg
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 1F/2
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2704 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2705 ;;Total ram usage:        2 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    1
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_main
  2712 ;;		_testjig_done
  2713 ;;		_print_error
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           
  2718                           ;psect for function _buzz_one
  2719  0C56                     _buzz_one:	
  2720                           
  2721                           ;Multi_RX_testjig_v1.c: 676: buzz_timer = time;
  2722                           
  2723                           ;incstack = 0
  2724                           ; Regs used in _buzz_one: [wreg]
  2725  0C56  0871               	movf	buzz_one@time+1,w
  2726  0C57  0020               	movlb	0	; select bank0
  2727  0C58  00E7               	movwf	_buzz_timer+1	;volatile
  2728  0C59  0870               	movf	buzz_one@time,w
  2729  0C5A  00E6               	movwf	_buzz_timer	;volatile
  2730                           
  2731                           ;Multi_RX_testjig_v1.c: 677: LATC5 = 1;
  2732  0C5B  0022               	movlb	2	; select bank2
  2733  0C5C  168E               	bsf	14,5	;volatile
  2734  0C5D  0008               	return
  2735  0C5E                     __end_of_buzz_one:	
  2736  0C5E                     __ptext2:	
  2737 ;; *************** function _print_error *****************
  2738 ;; Defined at:
  2739 ;;		line 1147 in file "Multi_RX_testjig_v1.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  top             2   42[BANK0 ] PTR const unsigned char 
  2742 ;;		 -> STR_31(12), STR_25(14), STR_23(14), STR_21(15), 
  2743 ;;		 -> STR_19(15), STR_17(14), STR_15(14), STR_13(14), 
  2744 ;;		 -> STR_11(14), STR_9(14), STR_7(14), STR_3(9), 
  2745 ;;  bottom          2   44[BANK0 ] PTR const unsigned char 
  2746 ;;		 -> STR_32(6), STR_26(12), STR_24(11), STR_22(13), 
  2747 ;;		 -> STR_20(13), STR_18(13), STR_16(13), STR_14(12), 
  2748 ;;		 -> STR_12(11), STR_10(13), STR_8(13), STR_4(14), 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 1F/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2760 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2762 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2763 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2764 ;;Total ram usage:        7 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:    4
  2767 ;; This function calls:
  2768 ;;		_buzz_one
  2769 ;;		_clear_lcd
  2770 ;;		_debug_fast_tx
  2771 ;;		_i2c_Write_string
  2772 ;;		_i2c_first_line
  2773 ;;		_i2c_second_line
  2774 ;;		_power_supply_set
  2775 ;;		_print_screen
  2776 ;;		_set_current_sink
  2777 ;; This function is called by:
  2778 ;;		_main
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function _print_error
  2784  0C5E                     _print_error:	
  2785                           
  2786                           ;Multi_RX_testjig_v1.c: 1149: debug_fast_tx(12345);
  2787                           
  2788                           ;incstack = 0
  2789                           ; Regs used in _print_error: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2790  0C5E  3039               	movlw	57
  2791  0C5F  00F0               	movwf	debug_fast_tx@data
  2792  0C60  3030               	movlw	48
  2793  0C61  00F1               	movwf	debug_fast_tx@data+1
  2794  0C62  2158  3188         	fcall	_debug_fast_tx
  2795                           
  2796                           ;Multi_RX_testjig_v1.c: 1150: power_supply_set(3);
  2797  0C64  3003               	movlw	3
  2798  0C65  2435  3188         	fcall	_power_supply_set
  2799                           
  2800                           ;Multi_RX_testjig_v1.c: 1151: LATA7 = 0;
  2801  0C67  0022               	movlb	2	; select bank2
  2802  0C68  138C               	bcf	12,7	;volatile
  2803                           
  2804                           ;Multi_RX_testjig_v1.c: 1152: set_current_sink(100, 2);
  2805  0C69  3064               	movlw	100
  2806  0C6A  0020               	movlb	0	; select bank0
  2807  0C6B  00C5               	movwf	set_current_sink@value
  2808  0C6C  3002               	movlw	2
  2809  0C6D  01C6               	clrf	set_current_sink@value+1
  2810  0C6E  00C7               	movwf	set_current_sink@source
  2811  0C6F  2525  3188         	fcall	_set_current_sink
  2812                           
  2813                           ;Multi_RX_testjig_v1.c: 1153: _delay((unsigned long)((10)*(16000000/4000.0)));
  2814  0C71  3034               	movlw	52
  2815  0C72  00CF               	movwf	??_print_error+1
  2816  0C73  30F1               	movlw	241
  2817  0C74  00CE               	movwf	??_print_error
  2818  0C75                     u2067:	
  2819  0C75  0BCE               	decfsz	??_print_error,f
  2820  0C76  2C75               	goto	u2067
  2821  0C77  0BCF               	decfsz	??_print_error+1,f
  2822  0C78  2C75               	goto	u2067
  2823  0C79  3200               	nop2
  2824                           
  2825                           ;Multi_RX_testjig_v1.c: 1154: set_current_sink(0, 0);
  2826  0C7A  0020               	movlb	0	; select bank0
  2827  0C7B  01C5               	clrf	set_current_sink@value
  2828  0C7C  01C6               	clrf	set_current_sink@value+1
  2829  0C7D  01C7               	clrf	set_current_sink@source
  2830  0C7E  2525  3188         	fcall	_set_current_sink
  2831                           
  2832                           ;Multi_RX_testjig_v1.c: 1155: buzz_one(1000);
  2833  0C80  30E8               	movlw	232
  2834  0C81  00F0               	movwf	buzz_one@time
  2835  0C82  3003               	movlw	3
  2836  0C83  00F1               	movwf	buzz_one@time+1
  2837  0C84  2456  3188         	fcall	_buzz_one
  2838  0C86                     l2274:	
  2839                           
  2840                           ;Multi_RX_testjig_v1.c: 1157: {
  2841                           ;Multi_RX_testjig_v1.c: 1158: clear_lcd();
  2842  0C86  204B  3188         	fcall	_clear_lcd
  2843                           
  2844                           ;Multi_RX_testjig_v1.c: 1159: i2c_first_line();
  2845  0C88  203A  3188         	fcall	_i2c_first_line
  2846                           
  2847                           ;Multi_RX_testjig_v1.c: 1160: i2c_Write_string(top);
  2848  0C8A  0020               	movlb	0	; select bank0
  2849  0C8B  084B               	movf	print_error@top+1,w
  2850  0C8C  00F2               	movwf	i2c_Write_string@data+1
  2851  0C8D  084A               	movf	print_error@top,w
  2852  0C8E  00F1               	movwf	i2c_Write_string@data
  2853  0C8F  24C0  3188         	fcall	_i2c_Write_string
  2854                           
  2855                           ;Multi_RX_testjig_v1.c: 1161: i2c_second_line();
  2856  0C91  2029  3188         	fcall	_i2c_second_line
  2857                           
  2858                           ;Multi_RX_testjig_v1.c: 1162: i2c_Write_string(bottom);
  2859  0C93  0020               	movlb	0	; select bank0
  2860  0C94  084D               	movf	print_error@bottom+1,w
  2861  0C95  00F2               	movwf	i2c_Write_string@data+1
  2862  0C96  084C               	movf	print_error@bottom,w
  2863  0C97  00F1               	movwf	i2c_Write_string@data
  2864  0C98  24C0  3188         	fcall	_i2c_Write_string
  2865                           
  2866                           ;Multi_RX_testjig_v1.c: 1163: _delay((unsigned long)((2000)*(16000000/4000.0)));
  2867  0C9A  3029               	movlw	41
  2868  0C9B  0020               	movlb	0	; select bank0
  2869  0C9C  00D0               	movwf	??_print_error+2
  2870  0C9D  3096               	movlw	150
  2871  0C9E  00CF               	movwf	??_print_error+1
  2872  0C9F  30A6               	movlw	166
  2873  0CA0  00CE               	movwf	??_print_error
  2874  0CA1                     u2077:	
  2875  0CA1  0BCE               	decfsz	??_print_error,f
  2876  0CA2  2CA1               	goto	u2077
  2877  0CA3  0BCF               	decfsz	??_print_error+1,f
  2878  0CA4  2CA1               	goto	u2077
  2879  0CA5  0BD0               	decfsz	??_print_error+2,f
  2880  0CA6  2CA1               	goto	u2077
  2881                           
  2882                           ;Multi_RX_testjig_v1.c: 1164: print_screen("Press START", " to restart test");
  2883  0CA7  30C8               	movlw	low ((STR_46+1)| (0+32768))
  2884  0CA8  00F4               	movwf	print_screen@top
  2885  0CA9  3090               	movlw	high ((STR_46+1)| (0+32768))
  2886  0CAA  00F5               	movwf	print_screen@top+1
  2887  0CAB  3046               	movlw	low (STR_48| (0+32768))
  2888  0CAC  00F6               	movwf	print_screen@bottom
  2889  0CAD  3090               	movlw	high (STR_48| (0+32768))
  2890  0CAE  00F7               	movwf	print_screen@bottom+1
  2891  0CAF  23E5  3188         	fcall	_print_screen
  2892                           
  2893                           ;Multi_RX_testjig_v1.c: 1165: _delay((unsigned long)((1200)*(16000000/4000.0)));
  2894  0CB1  3019               	movlw	25
  2895  0CB2  0020               	movlb	0	; select bank0
  2896  0CB3  00D0               	movwf	??_print_error+2
  2897  0CB4  305A               	movlw	90
  2898  0CB5  00CF               	movwf	??_print_error+1
  2899  0CB6  30C8               	movlw	200
  2900  0CB7  00CE               	movwf	??_print_error
  2901  0CB8                     u2087:	
  2902  0CB8  0BCE               	decfsz	??_print_error,f
  2903  0CB9  2CB8               	goto	u2087
  2904  0CBA  0BCF               	decfsz	??_print_error+1,f
  2905  0CBB  2CB8               	goto	u2087
  2906  0CBC  0BD0               	decfsz	??_print_error+2,f
  2907  0CBD  2CB8               	goto	u2087
  2908  0CBE  3200               	nop2
  2909  0CBF  2C86               	goto	l2274
  2910  0CC0                     __end_of_print_error:	
  2911  0CC0                     __ptext7:	
  2912 ;; *************** function _i2c_Write_string *****************
  2913 ;; Defined at:
  2914 ;;		line 707 in file "Multi_RX_testjig_v1.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  data            2    1[COMMON] PTR const unsigned char 
  2917 ;;		 -> STR_48(17), STR_47(12), STR_46(13), STR_45(17), 
  2918 ;;		 -> STR_44(14), STR_43(17), STR_42(8), STR_41(17), 
  2919 ;;		 -> STR_40(8), STR_39(9), STR_38(14), STR_37(13), 
  2920 ;;		 -> STR_36(1), STR_35(7), STR_34(9), STR_33(19), 
  2921 ;;		 -> STR_32(6), STR_31(12), STR_30(13), STR_29(12), 
  2922 ;;		 -> STR_28(1), STR_27(19), STR_26(12), STR_25(14), 
  2923 ;;		 -> STR_24(11), STR_23(14), STR_22(13), STR_21(15), 
  2924 ;;		 -> STR_20(13), STR_19(15), STR_18(13), STR_17(14), 
  2925 ;;		 -> STR_16(13), STR_15(14), STR_14(12), STR_13(14), 
  2926 ;;		 -> STR_12(11), STR_11(14), STR_10(13), STR_9(14), 
  2927 ;;		 -> STR_8(13), STR_7(14), STR_6(1), STR_5(15), 
  2928 ;;		 -> STR_4(14), STR_3(9), STR_2(17), STR_1(9), 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 1B/0
  2937 ;;		On exit  : 1F/4
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2942 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2943 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2944 ;;Total ram usage:        3 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    2
  2947 ;; This function calls:
  2948 ;;		_i2c_Start
  2949 ;;		_i2c_Stop
  2950 ;;		_i2c_Write
  2951 ;; This function is called by:
  2952 ;;		_print_error
  2953 ;;		_print_screen
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           
  2958                           ;psect for function _i2c_Write_string
  2959  0CC0                     _i2c_Write_string:	
  2960  0CC0                     l1896:	
  2961                           ;incstack = 0
  2962                           ; Regs used in _i2c_Write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2963                           
  2964                           
  2965                           ;Multi_RX_testjig_v1.c: 709: i2c_Start();
  2966  0CC0  2520  3188         	fcall	_i2c_Start
  2967                           
  2968                           ;Multi_RX_testjig_v1.c: 710: i2c_Write(0x7C);
  2969  0CC2  307C               	movlw	124
  2970  0CC3  2513  3188         	fcall	_i2c_Write
  2971                           
  2972                           ;Multi_RX_testjig_v1.c: 711: i2c_Write(0x40);
  2973  0CC5  3040               	movlw	64
  2974  0CC6  2513  3188         	fcall	_i2c_Write
  2975  0CC8                     l1906:	
  2976                           ;Multi_RX_testjig_v1.c: 713: while(*data != (0))
  2977                           
  2978  0CC8  0871               	movf	i2c_Write_string@data,w
  2979  0CC9  0084               	movwf	4
  2980  0CCA  0872               	movf	i2c_Write_string@data+1,w
  2981  0CCB  0085               	movwf	5
  2982  0CCC  0012               	moviw fsr0++
  2983  0CCD  1903               	btfsc	3,2
  2984  0CCE  2CDA               	goto	l1908
  2985                           
  2986                           ;Multi_RX_testjig_v1.c: 714: {
  2987                           ;Multi_RX_testjig_v1.c: 715: i2c_Write(*data);
  2988  0CCF  0871               	movf	i2c_Write_string@data,w
  2989  0CD0  0084               	movwf	4
  2990  0CD1  0872               	movf	i2c_Write_string@data+1,w
  2991  0CD2  0085               	movwf	5
  2992  0CD3  0800               	movf	0,w	;code access
  2993  0CD4  2513  3188         	fcall	_i2c_Write
  2994                           
  2995                           ;Multi_RX_testjig_v1.c: 716: data++;
  2996  0CD6  0AF1               	incf	i2c_Write_string@data,f
  2997  0CD7  1903               	skipnz
  2998  0CD8  0AF2               	incf	i2c_Write_string@data+1,f
  2999  0CD9  2CC8               	goto	l1906
  3000  0CDA                     l1908:	
  3001                           
  3002                           ;Multi_RX_testjig_v1.c: 717: }
  3003                           ;Multi_RX_testjig_v1.c: 718: i2c_Stop();
  3004  0CDA  2E73               	ljmp	l1870
  3005  0CDB                     __end_of_i2c_Write_string:	
  3006  0CDB                     __ptext13:	
  3007 ;; *************** function _init_i2c_lcd_5v *****************
  3008 ;; Defined at:
  3009 ;;		line 731 in file "Multi_RX_testjig_v1.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  contrast        1    wreg     unsigned char 
  3012 ;;  single1_doub    1    1[COMMON] unsigned char 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  contrast        1    4[COMMON] unsigned char 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0, pclath, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 1F/0
  3021 ;;		On exit  : 1F/4
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3024 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3025 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3027 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3028 ;;Total ram usage:        4 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    2
  3031 ;; This function calls:
  3032 ;;		_i2c_Start
  3033 ;;		_i2c_Stop
  3034 ;;		_i2c_Write
  3035 ;; This function is called by:
  3036 ;;		_main
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           
  3041                           ;psect for function _init_i2c_lcd_5v
  3042  0CDB                     _init_i2c_lcd_5v:	
  3043                           
  3044                           ;incstack = 0
  3045                           ; Regs used in _init_i2c_lcd_5v: [wreg+status,2+status,0+pclath+cstack]
  3046                           ;init_i2c_lcd_5v@contrast stored from wreg
  3047  0CDB  00F4               	movwf	init_i2c_lcd_5v@contrast
  3048                           
  3049                           ;Multi_RX_testjig_v1.c: 733: i2c_Start();
  3050  0CDC  2520  3188         	fcall	_i2c_Start
  3051                           
  3052                           ;Multi_RX_testjig_v1.c: 734: i2c_Write(0x7C);
  3053  0CDE  307C               	movlw	124
  3054  0CDF  2513  3188         	fcall	_i2c_Write
  3055                           
  3056                           ;Multi_RX_testjig_v1.c: 735: i2c_Write(0x00);
  3057  0CE1  3000               	movlw	0
  3058  0CE2  2513  3188         	fcall	_i2c_Write
  3059                           
  3060                           ;Multi_RX_testjig_v1.c: 736: i2c_Write(0x39);
  3061  0CE4  3039               	movlw	57
  3062  0CE5  2513  3188         	fcall	_i2c_Write
  3063                           
  3064                           ;Multi_RX_testjig_v1.c: 737: i2c_Write(0x1C);
  3065  0CE7  301C               	movlw	28
  3066  0CE8  2513  3188         	fcall	_i2c_Write
  3067                           
  3068                           ;Multi_RX_testjig_v1.c: 738: i2c_Write(0x70 | contrast);
  3069  0CEA  0874               	movf	init_i2c_lcd_5v@contrast,w
  3070  0CEB  3870               	iorlw	112
  3071  0CEC  2513  3188         	fcall	_i2c_Write
  3072                           
  3073                           ;Multi_RX_testjig_v1.c: 739: i2c_Write(0x50);
  3074  0CEE  3050               	movlw	80
  3075  0CEF  2513  3188         	fcall	_i2c_Write
  3076                           
  3077                           ;Multi_RX_testjig_v1.c: 740: i2c_Write(0x6C);
  3078  0CF1  306C               	movlw	108
  3079  0CF2  2513  3188         	fcall	_i2c_Write
  3080                           
  3081                           ;Multi_RX_testjig_v1.c: 741: if(single1_double2 == 1)
  3082  0CF4  0B71               	decfsz	init_i2c_lcd_5v@single1_double2,w
  3083  0CF5  2CF9               	goto	l2254
  3084                           
  3085                           ;Multi_RX_testjig_v1.c: 742: i2c_Write(0x38);
  3086  0CF6  3038               	movlw	56
  3087  0CF7  2513  3188         	fcall	_i2c_Write
  3088  0CF9                     l2254:	
  3089                           
  3090                           ;Multi_RX_testjig_v1.c: 743: if(single1_double2 == 2)
  3091  0CF9  3002               	movlw	2
  3092  0CFA  0671               	xorwf	init_i2c_lcd_5v@single1_double2,w
  3093  0CFB  1D03               	btfss	3,2
  3094  0CFC  2D00               	goto	l380
  3095                           
  3096                           ;Multi_RX_testjig_v1.c: 744: i2c_Write(0x34);
  3097  0CFD  3034               	movlw	52
  3098  0CFE  2513  3188         	fcall	_i2c_Write
  3099  0D00                     l380:	
  3100                           
  3101                           ;Multi_RX_testjig_v1.c: 745: i2c_Write(0x0C);
  3102  0D00  300C               	movlw	12
  3103  0D01  2513  3188         	fcall	_i2c_Write
  3104                           
  3105                           ;Multi_RX_testjig_v1.c: 746: i2c_Write(0x06);
  3106  0D03  3006               	movlw	6
  3107  0D04  2513  3188         	fcall	_i2c_Write
  3108                           
  3109                           ;Multi_RX_testjig_v1.c: 747: i2c_Write(0x01);
  3110  0D06  3001               	movlw	1
  3111  0D07  2513  3188         	fcall	_i2c_Write
  3112                           
  3113                           ;Multi_RX_testjig_v1.c: 748: _delay((unsigned long)((2)*(16000000/4000.0)));
  3114  0D09  300B               	movlw	11
  3115  0D0A  00F3               	movwf	??_init_i2c_lcd_5v+1
  3116  0D0B  3062               	movlw	98
  3117  0D0C  00F2               	movwf	??_init_i2c_lcd_5v
  3118  0D0D                     u2137:	
  3119  0D0D  0BF2               	decfsz	??_init_i2c_lcd_5v,f
  3120  0D0E  2D0D               	goto	u2137
  3121  0D0F  0BF3               	decfsz	??_init_i2c_lcd_5v+1,f
  3122  0D10  2D0D               	goto	u2137
  3123  0D11  0000               	nop
  3124                           
  3125                           ;Multi_RX_testjig_v1.c: 749: i2c_Stop();
  3126  0D12  2E73               	ljmp	l1870
  3127  0D13                     __end_of_init_i2c_lcd_5v:	
  3128  0D13                     __ptext29:	
  3129 ;; *************** function _i2c_Write *****************
  3130 ;; Defined at:
  3131 ;;		line 693 in file "Multi_RX_testjig_v1.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  data            1    wreg     unsigned char 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;  data            1    0[COMMON] unsigned char 
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg, status,2
  3140 ;; Tracked objects:
  3141 ;;		On entry : 1B/4
  3142 ;;		On exit  : 1F/4
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3146 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3148 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3149 ;;Total ram usage:        1 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    1
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_i2c_Write_string
  3156 ;;		_init_i2c_lcd_5v
  3157 ;;		_clear_lcd
  3158 ;;		_i2c_first_line
  3159 ;;		_i2c_second_line
  3160 ;;		_digitalpot
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           
  3165                           ;psect for function _i2c_Write
  3166  0D13                     _i2c_Write:	
  3167                           
  3168                           ;incstack = 0
  3169                           ; Regs used in _i2c_Write: [wreg+status,2]
  3170                           ;i2c_Write@data stored from wreg
  3171  0D13  00F0               	movwf	i2c_Write@data
  3172                           
  3173                           ;Multi_RX_testjig_v1.c: 695: SSP1BUF = data;
  3174  0D14  0870               	movf	i2c_Write@data,w
  3175  0D15  0024               	movlb	4	; select bank4
  3176  0D16  0091               	movwf	17	;volatile
  3177  0D17                     l355:	
  3178                           ;Multi_RX_testjig_v1.c: 696: while(SSP1STATbits.BF == 1);
  3179                           
  3180  0D17  1814               	btfsc	20,0	;volatile
  3181  0D18  2D17               	goto	l355
  3182  0D19                     l1866:	
  3183  0D19  0816               	movf	22,w	;volatile
  3184  0D1A  391F               	andlw	31
  3185  0D1B  1D03               	btfss	3,2
  3186  0D1C  2D19               	goto	l1866
  3187  0D1D  1D14               	btfss	20,2	;volatile
  3188  0D1E  0008               	return
  3189  0D1F  2D19               	goto	l1866
  3190  0D20                     __end_of_i2c_Write:	
  3191  0D20                     __ptext31:	
  3192 ;; *************** function _i2c_Start *****************
  3193 ;; Defined at:
  3194 ;;		line 684 in file "Multi_RX_testjig_v1.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		None
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/4
  3205 ;;		On exit  : 1F/4
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3212 ;;Total ram usage:        0 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    1
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_i2c_Write_string
  3219 ;;		_init_i2c_lcd_5v
  3220 ;;		_clear_lcd
  3221 ;;		_i2c_first_line
  3222 ;;		_i2c_second_line
  3223 ;;		_digitalpot
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           
  3228                           ;psect for function _i2c_Start
  3229  0D20                     _i2c_Start:	
  3230                           
  3231                           ;Multi_RX_testjig_v1.c: 687: SSP1CON2bits.SEN = 1;
  3232                           
  3233                           ;incstack = 0
  3234                           ; Regs used in _i2c_Start: []
  3235  0D20  0024               	movlb	4	; select bank4
  3236  0D21  1416               	bsf	22,0	;volatile
  3237  0D22                     l349:	
  3238                           ;Multi_RX_testjig_v1.c: 689: while(SSP1CON2bits.SEN == 1);
  3239                           
  3240  0D22  1C16               	btfss	22,0	;volatile
  3241  0D23  0008               	return
  3242  0D24  2D22               	goto	l349
  3243  0D25                     __end_of_i2c_Start:	
  3244  0D25                     __ptext3:	
  3245 ;; *************** function _set_current_sink *****************
  3246 ;; Defined at:
  3247 ;;		line 1548 in file "Multi_RX_testjig_v1.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  value           2   37[BANK0 ] unsigned int 
  3250 ;;  source          1   39[BANK0 ] unsigned char 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;		None
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      void 
  3255 ;; Registers used:
  3256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3257 ;; Tracked objects:
  3258 ;;		On entry : 1F/0
  3259 ;;		On exit  : 1F/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3262 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3264 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3265 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3266 ;;Total ram usage:        5 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    3
  3269 ;; This function calls:
  3270 ;;		___ftadd
  3271 ;;		___ftmul
  3272 ;;		___fttol
  3273 ;;		___lwtoft
  3274 ;; This function is called by:
  3275 ;;		_testjig_done
  3276 ;;		_print_error
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           
  3281                           ;psect for function _set_current_sink
  3282  0D25                     _set_current_sink:	
  3283                           
  3284                           ;Multi_RX_testjig_v1.c: 1550: GIE = 0;
  3285                           
  3286                           ;incstack = 0
  3287                           ; Regs used in _set_current_sink: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3288  0D25  138B               	bcf	11,7	;volatile
  3289                           
  3290                           ;Multi_RX_testjig_v1.c: 1551: switch(source)
  3291  0D26  2D3C               	goto	l2166
  3292  0D27                     l536:	
  3293                           ;Multi_RX_testjig_v1.c: 1552: {
  3294                           ;Multi_RX_testjig_v1.c: 1553: case 1:
  3295                           
  3296                           
  3297                           ;Multi_RX_testjig_v1.c: 1554: LATB4 = 1;
  3298  0D27  0022               	movlb	2	; select bank2
  3299  0D28  160D               	bsf	13,4	;volatile
  3300  0D29  2D30               	goto	L7
  3301  0D2A                     l538:	
  3302                           ;Multi_RX_testjig_v1.c: 1558: case 2:
  3303                           
  3304                           ;Multi_RX_testjig_v1.c: 1557: break;
  3305                           
  3306                           ;Multi_RX_testjig_v1.c: 1556: current_sink_state = current_sink_on;
  3307                           
  3308                           ;Multi_RX_testjig_v1.c: 1555: LATB5 = 0;
  3309                           
  3310                           
  3311                           ;Multi_RX_testjig_v1.c: 1559: LATB4 = 0;
  3312  0D2A  0022               	movlb	2	; select bank2
  3313  0D2B  120D               	bcf	13,4	;volatile
  3314                           
  3315                           ;Multi_RX_testjig_v1.c: 1560: LATB5 = 1;
  3316  0D2C  168D               	bsf	13,5	;volatile
  3317  0D2D  2D31               	goto	L6
  3318  0D2E                     l539:	
  3319                           ;Multi_RX_testjig_v1.c: 1563: case 3:
  3320                           
  3321                           ;Multi_RX_testjig_v1.c: 1562: break;
  3322                           
  3323                           ;Multi_RX_testjig_v1.c: 1561: current_sink_state = current_sink_on;
  3324                           
  3325                           
  3326                           ;Multi_RX_testjig_v1.c: 1564: LATB4 = 0;
  3327  0D2E  0022               	movlb	2	; select bank2
  3328  0D2F  120D               	bcf	13,4	;volatile
  3329  0D30                     L7:	
  3330                           
  3331                           ;Multi_RX_testjig_v1.c: 1565: LATB5 = 0;
  3332  0D30  128D               	bcf	13,5	;volatile
  3333  0D31                     L6:	
  3334                           
  3335                           ;Multi_RX_testjig_v1.c: 1566: current_sink_state = current_sink_on;
  3336  0D31  0020               	movlb	0	; select bank0
  3337  0D32  01E4               	clrf	_current_sink_state
  3338  0D33  0AE4               	incf	_current_sink_state,f
  3339                           
  3340                           ;Multi_RX_testjig_v1.c: 1567: break;
  3341  0D34  2D46               	goto	l2168
  3342  0D35                     l2162:	
  3343                           
  3344                           ;Multi_RX_testjig_v1.c: 1569: CCPR9L = 0;
  3345  0D35  002C               	movlb	12	; select bank12
  3346  0D36  019A               	clrf	26	;volatile
  3347                           
  3348                           ;Multi_RX_testjig_v1.c: 1570: curent_sink_val = 0;
  3349  0D37  0020               	movlb	0	; select bank0
  3350  0D38  01D6               	clrf	_curent_sink_val	;volatile
  3351  0D39  01D7               	clrf	_curent_sink_val+1	;volatile
  3352                           
  3353                           ;Multi_RX_testjig_v1.c: 1571: current_sink_state = current_sink_off;
  3354  0D3A  01E4               	clrf	_current_sink_state
  3355                           
  3356                           ;Multi_RX_testjig_v1.c: 1572: break;
  3357  0D3B  2D46               	goto	l2168
  3358  0D3C                     l2166:	
  3359  0D3C  0847               	movf	set_current_sink@source,w
  3360                           
  3361                           ; Switch size 1, requested type "speed"
  3362                           ; Number of cases is 4, Range of values is 0 to 3
  3363                           ; switch strategies available:
  3364                           ; Name         Instructions Cycles
  3365                           ; direct_byte           14     6 (fixed)
  3366                           ; simple_byte           13     7 (average)
  3367                           ; jumptable            260     6 (fixed)
  3368                           ;	Chosen strategy is direct_byte
  3369  0D3D  0084               	movwf	4
  3370  0D3E  3004               	movlw	4
  3371  0D3F  0204               	subwf	4,w
  3372  0D40  1803               	skipnc
  3373  0D41  2D46               	goto	l2168
  3374  0D42  3180               	movlp	high S2742
  3375  0D43  3504               	lslf	4,w
  3376  0D44  3EAB               	addlw	low S2742
  3377  0D45  0082               	movwf	2
  3378  0D46                     l2168:	
  3379                           
  3380                           ;Multi_RX_testjig_v1.c: 1574: if(current_sink_state == current_sink_on)
  3381  0D46  0B64               	decfsz	_current_sink_state,w
  3382  0D47  2DAA               	goto	l2186
  3383                           
  3384                           ;Multi_RX_testjig_v1.c: 1575: {
  3385                           ;Multi_RX_testjig_v1.c: 1576: if(value != 0)
  3386  0D48  0845               	movf	set_current_sink@value,w
  3387  0D49  0446               	iorwf	set_current_sink@value+1,w
  3388  0D4A  1903               	btfsc	3,2
  3389  0D4B  2DA9               	goto	l2184
  3390                           
  3391                           ;Multi_RX_testjig_v1.c: 1577: {
  3392                           ;Multi_RX_testjig_v1.c: 1578: current_sink_state = current_sink_off;
  3393  0D4C  01E4               	clrf	_current_sink_state
  3394                           
  3395                           ;Multi_RX_testjig_v1.c: 1579: curent_sink_val = value * 0.87;
  3396  0D4D  0846               	movf	set_current_sink@value+1,w
  3397  0D4E  00F9               	movwf	___lwtoft@c+1
  3398  0D4F  0845               	movf	set_current_sink@value,w
  3399  0D50  00F8               	movwf	___lwtoft@c
  3400  0D51  2678  3188         	fcall	___lwtoft
  3401  0D53  0878               	movf	?___lwtoft,w
  3402  0D54  00A3               	movwf	___ftmul@f2
  3403  0D55  0879               	movf	?___lwtoft+1,w
  3404  0D56  00A4               	movwf	___ftmul@f2+1
  3405  0D57  087A               	movf	?___lwtoft+2,w
  3406  0D58  00A5               	movwf	___ftmul@f2+2
  3407  0D59  30B8               	movlw	184
  3408  0D5A  00A0               	movwf	___ftmul@f1
  3409  0D5B  305E               	movlw	94
  3410  0D5C  00A1               	movwf	___ftmul@f1+1
  3411  0D5D  303F               	movlw	63
  3412  0D5E  00A2               	movwf	___ftmul@f1+2
  3413  0D5F  25AC  3188         	fcall	___ftmul
  3414  0D61  0820               	movf	?___ftmul,w
  3415  0D62  00B8               	movwf	___fttol@f1
  3416  0D63  0821               	movf	?___ftmul+1,w
  3417  0D64  00B9               	movwf	___fttol@f1+1
  3418  0D65  0822               	movf	?___ftmul+2,w
  3419  0D66  00BA               	movwf	___fttol@f1+2
  3420  0D67  2616  3188         	fcall	___fttol
  3421  0D69  0839               	movf	?___fttol+1,w
  3422  0D6A  00D7               	movwf	_curent_sink_val+1	;volatile
  3423  0D6B  0838               	movf	?___fttol,w
  3424  0D6C  00D6               	movwf	_curent_sink_val	;volatile
  3425                           
  3426                           ;Multi_RX_testjig_v1.c: 1580: CCPR9L = 0.20 * value + 59;
  3427  0D6D  0846               	movf	set_current_sink@value+1,w
  3428  0D6E  00F9               	movwf	___lwtoft@c+1
  3429  0D6F  0845               	movf	set_current_sink@value,w
  3430  0D70  00F8               	movwf	___lwtoft@c
  3431  0D71  2678  3188         	fcall	___lwtoft
  3432  0D73  0878               	movf	?___lwtoft,w
  3433  0D74  00A3               	movwf	___ftmul@f2
  3434  0D75  0879               	movf	?___lwtoft+1,w
  3435  0D76  00A4               	movwf	___ftmul@f2+1
  3436  0D77  087A               	movf	?___lwtoft+2,w
  3437  0D78  00A5               	movwf	___ftmul@f2+2
  3438  0D79  30CD               	movlw	205
  3439  0D7A  00A0               	movwf	___ftmul@f1
  3440  0D7B  304C               	movlw	76
  3441  0D7C  00A1               	movwf	___ftmul@f1+1
  3442  0D7D  303E               	movlw	62
  3443  0D7E  00A2               	movwf	___ftmul@f1+2
  3444  0D7F  25AC  3188         	fcall	___ftmul
  3445  0D81  0820               	movf	?___ftmul,w
  3446  0D82  00AF               	movwf	___ftadd@f2
  3447  0D83  0821               	movf	?___ftmul+1,w
  3448  0D84  00B0               	movwf	___ftadd@f2+1
  3449  0D85  0822               	movf	?___ftmul+2,w
  3450  0D86  00B1               	movwf	___ftadd@f2+2
  3451  0D87  306C               	movlw	108
  3452  0D88  01AC               	clrf	___ftadd@f1
  3453  0D89  00AD               	movwf	___ftadd@f1+1
  3454  0D8A  3042               	movlw	66
  3455  0D8B  00AE               	movwf	___ftadd@f1+2
  3456  0D8C  26C8  3188         	fcall	___ftadd
  3457  0D8E  082C               	movf	?___ftadd,w
  3458  0D8F  00B8               	movwf	___fttol@f1
  3459  0D90  082D               	movf	?___ftadd+1,w
  3460  0D91  00B9               	movwf	___fttol@f1+1
  3461  0D92  082E               	movf	?___ftadd+2,w
  3462  0D93  00BA               	movwf	___fttol@f1+2
  3463  0D94  2616  3188         	fcall	___fttol
  3464  0D96  0838               	movf	?___fttol,w
  3465  0D97  002C               	movlb	12	; select bank12
  3466  0D98  009A               	movwf	26	;volatile
  3467                           
  3468                           ;Multi_RX_testjig_v1.c: 1581: _delay((unsigned long)((40)*(16000000/4000.0)));
  3469  0D99  30D0               	movlw	208
  3470  0D9A  0020               	movlb	0	; select bank0
  3471  0D9B  00C9               	movwf	??_set_current_sink+1
  3472  0D9C  30C9               	movlw	201
  3473  0D9D  00C8               	movwf	??_set_current_sink
  3474  0D9E                     u2097:	
  3475  0D9E  0BC8               	decfsz	??_set_current_sink,f
  3476  0D9F  2D9E               	goto	u2097
  3477  0DA0  0BC9               	decfsz	??_set_current_sink+1,f
  3478  0DA1  2D9E               	goto	u2097
  3479  0DA2  3200               	nop2
  3480                           
  3481                           ;Multi_RX_testjig_v1.c: 1582: current_sink_state = current_sink_on;
  3482  0DA3  0020               	movlb	0	; select bank0
  3483  0DA4  01E4               	clrf	_current_sink_state
  3484  0DA5  0AE4               	incf	_current_sink_state,f
  3485                           
  3486                           ;Multi_RX_testjig_v1.c: 1583: current_sink_stable = 0;
  3487  0DA6  01D8               	clrf	_current_sink_stable	;volatile
  3488  0DA7  01D9               	clrf	_current_sink_stable+1	;volatile
  3489                           
  3490                           ;Multi_RX_testjig_v1.c: 1584: }
  3491  0DA8  2DAA               	goto	l2186
  3492  0DA9                     l2184:	
  3493                           
  3494                           ;Multi_RX_testjig_v1.c: 1585: else
  3495                           ;Multi_RX_testjig_v1.c: 1586: current_sink_state = current_sink_off;
  3496  0DA9  01E4               	clrf	_current_sink_state
  3497  0DAA                     l2186:	
  3498                           
  3499                           ;Multi_RX_testjig_v1.c: 1587: }
  3500                           ;Multi_RX_testjig_v1.c: 1588: GIE = 1;
  3501  0DAA  178B               	bsf	11,7	;volatile
  3502  0DAB  0008               	return
  3503  0DAC                     __end_of_set_current_sink:	
  3504  0DAC                     __ptext20:	
  3505 ;; *************** function ___ftmul *****************
  3506 ;; Defined at:
  3507 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  f1              3    0[BANK0 ] float 
  3510 ;;  f2              3    3[BANK0 ] float 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  3513 ;;  sign            1   11[BANK0 ] unsigned char 
  3514 ;;  cntr            1   10[BANK0 ] unsigned char 
  3515 ;;  exp             1    6[BANK0 ] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  3    0[BANK0 ] float 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0, pclath, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 1F/0
  3522 ;;		On exit  : 1F/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3525 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3526 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3527 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3528 ;;      Totals:         3      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3529 ;;Total ram usage:       15 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    2
  3532 ;; This function calls:
  3533 ;;		___ftpack
  3534 ;; This function is called by:
  3535 ;;		_set_current_sink
  3536 ;;		_get_30v_current
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           
  3541                           ;psect for function ___ftmul
  3542  0DAC                     ___ftmul:	
  3543                           
  3544                           ;incstack = 0
  3545                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3546  0DAC  0820               	movf	___ftmul@f1,w
  3547  0DAD  00FB               	movwf	??___ftmul
  3548  0DAE  0821               	movf	___ftmul@f1+1,w
  3549  0DAF  00FC               	movwf	??___ftmul+1
  3550  0DB0  0822               	movf	___ftmul@f1+2,w
  3551  0DB1  00FD               	movwf	??___ftmul+2
  3552  0DB2  1003               	clrc
  3553  0DB3  0D7C               	rlf	??___ftmul+1,w
  3554  0DB4  0D7D               	rlf	??___ftmul+2,w
  3555  0DB5  00A6               	movwf	___ftmul@exp
  3556  0DB6  0826               	movf	___ftmul@exp,w
  3557  0DB7  1D03               	btfss	3,2
  3558  0DB8  2DBD               	goto	l2020
  3559  0DB9  01A0               	clrf	?___ftmul
  3560  0DBA  01A1               	clrf	?___ftmul+1
  3561  0DBB  01A2               	clrf	?___ftmul+2
  3562  0DBC  0008               	return
  3563  0DBD                     l2020:	
  3564  0DBD  0823               	movf	___ftmul@f2,w
  3565  0DBE  00FB               	movwf	??___ftmul
  3566  0DBF  0824               	movf	___ftmul@f2+1,w
  3567  0DC0  00FC               	movwf	??___ftmul+1
  3568  0DC1  0825               	movf	___ftmul@f2+2,w
  3569  0DC2  00FD               	movwf	??___ftmul+2
  3570  0DC3  1003               	clrc
  3571  0DC4  0D7C               	rlf	??___ftmul+1,w
  3572  0DC5  0D7D               	rlf	??___ftmul+2,w
  3573  0DC6  00AB               	movwf	___ftmul@sign
  3574  0DC7  082B               	movf	___ftmul@sign,w
  3575  0DC8  1D03               	btfss	3,2
  3576  0DC9  2DCE               	goto	l2024
  3577  0DCA  01A0               	clrf	?___ftmul
  3578  0DCB  01A1               	clrf	?___ftmul+1
  3579  0DCC  01A2               	clrf	?___ftmul+2
  3580  0DCD  0008               	return
  3581  0DCE                     l2024:	
  3582  0DCE  082B               	movf	___ftmul@sign,w
  3583  0DCF  3E7B               	addlw	123
  3584  0DD0  07A6               	addwf	___ftmul@exp,f
  3585  0DD1  0822               	movf	___ftmul@f1+2,w
  3586  0DD2  00AB               	movwf	___ftmul@sign
  3587  0DD3  0825               	movf	___ftmul@f2+2,w
  3588  0DD4  06AB               	xorwf	___ftmul@sign,f
  3589  0DD5  3080               	movlw	128
  3590  0DD6  05AB               	andwf	___ftmul@sign,f
  3591  0DD7  30FF               	movlw	255
  3592  0DD8  17A1               	bsf	___ftmul@f1+1,7
  3593  0DD9  17A4               	bsf	___ftmul@f2+1,7
  3594  0DDA  05A3               	andwf	___ftmul@f2,f
  3595  0DDB  05A4               	andwf	___ftmul@f2+1,f
  3596  0DDC  3007               	movlw	7
  3597  0DDD  01A5               	clrf	___ftmul@f2+2
  3598  0DDE  01A7               	clrf	___ftmul@f3_as_product
  3599  0DDF  01A8               	clrf	___ftmul@f3_as_product+1
  3600  0DE0  01A9               	clrf	___ftmul@f3_as_product+2
  3601  0DE1  00AA               	movwf	___ftmul@cntr
  3602  0DE2                     l2042:	
  3603  0DE2  1C20               	btfss	___ftmul@f1,0
  3604  0DE3  2DEA               	goto	l2046
  3605  0DE4  0823               	movf	___ftmul@f2,w
  3606  0DE5  07A7               	addwf	___ftmul@f3_as_product,f
  3607  0DE6  0824               	movf	___ftmul@f2+1,w
  3608  0DE7  3DA8               	addwfc	___ftmul@f3_as_product+1,f
  3609  0DE8  0825               	movf	___ftmul@f2+2,w
  3610  0DE9  3DA9               	addwfc	___ftmul@f3_as_product+2,f
  3611  0DEA                     l2046:	
  3612  0DEA  36A2               	lsrf	___ftmul@f1+2,f
  3613  0DEB  0CA1               	rrf	___ftmul@f1+1,f
  3614  0DEC  0CA0               	rrf	___ftmul@f1,f
  3615  0DED  35A3               	lslf	___ftmul@f2,f
  3616  0DEE  0DA4               	rlf	___ftmul@f2+1,f
  3617  0DEF  0DA5               	rlf	___ftmul@f2+2,f
  3618  0DF0  0BAA               	decfsz	___ftmul@cntr,f
  3619  0DF1  2DE2               	goto	l2042
  3620  0DF2  3009               	movlw	9
  3621  0DF3  00AA               	movwf	___ftmul@cntr
  3622  0DF4                     l2054:	
  3623  0DF4  1C20               	btfss	___ftmul@f1,0
  3624  0DF5  2DFC               	goto	l2058
  3625  0DF6  0823               	movf	___ftmul@f2,w
  3626  0DF7  07A7               	addwf	___ftmul@f3_as_product,f
  3627  0DF8  0824               	movf	___ftmul@f2+1,w
  3628  0DF9  3DA8               	addwfc	___ftmul@f3_as_product+1,f
  3629  0DFA  0825               	movf	___ftmul@f2+2,w
  3630  0DFB  3DA9               	addwfc	___ftmul@f3_as_product+2,f
  3631  0DFC                     l2058:	
  3632  0DFC  36A2               	lsrf	___ftmul@f1+2,f
  3633  0DFD  0CA1               	rrf	___ftmul@f1+1,f
  3634  0DFE  0CA0               	rrf	___ftmul@f1,f
  3635  0DFF  36A9               	lsrf	___ftmul@f3_as_product+2,f
  3636  0E00  0CA8               	rrf	___ftmul@f3_as_product+1,f
  3637  0E01  0CA7               	rrf	___ftmul@f3_as_product,f
  3638  0E02  0BAA               	decfsz	___ftmul@cntr,f
  3639  0E03  2DF4               	goto	l2054
  3640  0E04  0827               	movf	___ftmul@f3_as_product,w
  3641  0E05  00F0               	movwf	___ftpack@arg
  3642  0E06  0828               	movf	___ftmul@f3_as_product+1,w
  3643  0E07  00F1               	movwf	___ftpack@arg+1
  3644  0E08  0829               	movf	___ftmul@f3_as_product+2,w
  3645  0E09  00F2               	movwf	___ftpack@arg+2
  3646  0E0A  0826               	movf	___ftmul@exp,w
  3647  0E0B  00F3               	movwf	___ftpack@exp
  3648  0E0C  082B               	movf	___ftmul@sign,w
  3649  0E0D  00F4               	movwf	___ftpack@sign
  3650  0E0E  277C               	fcall	___ftpack
  3651  0E0F  0870               	movf	?___ftpack,w
  3652  0E10  00A0               	movwf	?___ftmul
  3653  0E11  0871               	movf	?___ftpack+1,w
  3654  0E12  00A1               	movwf	?___ftmul+1
  3655  0E13  0872               	movf	?___ftpack+2,w
  3656  0E14  00A2               	movwf	?___ftmul+2
  3657  0E15  0008               	return
  3658  0E16                     __end_of___ftmul:	
  3659  0E16                     __ptext19:	
  3660 ;; *************** function ___fttol *****************
  3661 ;; Defined at:
  3662 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  f1              3   24[BANK0 ] float 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  lval            4   32[BANK0 ] unsigned long 
  3667 ;;  exp1            1   36[BANK0 ] unsigned char 
  3668 ;;  sign1           1   31[BANK0 ] unsigned char 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  4   24[BANK0 ] long 
  3671 ;; Registers used:
  3672 ;;		wreg, status,2, status,0
  3673 ;; Tracked objects:
  3674 ;;		On entry : 1F/0
  3675 ;;		On exit  : 1F/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3678 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3679 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3680 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3681 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3682 ;;Total ram usage:       13 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    1
  3685 ;; This function calls:
  3686 ;;		Nothing
  3687 ;; This function is called by:
  3688 ;;		_set_current_sink
  3689 ;;		_get_30v_current
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function ___fttol
  3695  0E16                     ___fttol:	
  3696                           
  3697                           ;incstack = 0
  3698                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3699  0E16  0838               	movf	___fttol@f1,w
  3700  0E17  00BC               	movwf	??___fttol
  3701  0E18  0839               	movf	___fttol@f1+1,w
  3702  0E19  00BD               	movwf	??___fttol+1
  3703  0E1A  083A               	movf	___fttol@f1+2,w
  3704  0E1B  00BE               	movwf	??___fttol+2
  3705  0E1C  1003               	clrc
  3706  0E1D  0D3D               	rlf	??___fttol+1,w
  3707  0E1E  0D3E               	rlf	??___fttol+2,w
  3708  0E1F  00C4               	movwf	___fttol@exp1
  3709  0E20  0844               	movf	___fttol@exp1,w
  3710  0E21  1D03               	btfss	3,2
  3711  0E22  2E28               	goto	l2072
  3712  0E23                     l2070:	
  3713  0E23  01B8               	clrf	?___fttol
  3714  0E24  01B9               	clrf	?___fttol+1
  3715  0E25  01BA               	clrf	?___fttol+2
  3716  0E26  01BB               	clrf	?___fttol+3
  3717  0E27  0008               	return
  3718  0E28                     l2072:	
  3719  0E28  0838               	movf	___fttol@f1,w
  3720  0E29  00BC               	movwf	??___fttol
  3721  0E2A  0839               	movf	___fttol@f1+1,w
  3722  0E2B  00BD               	movwf	??___fttol+1
  3723  0E2C  083A               	movf	___fttol@f1+2,w
  3724  0E2D  00BE               	movwf	??___fttol+2
  3725  0E2E  3017               	movlw	23
  3726  0E2F                     u1365:	
  3727  0E2F  36BE               	lsrf	??___fttol+2,f
  3728  0E30  0CBD               	rrf	??___fttol+1,f
  3729  0E31  0CBC               	rrf	??___fttol,f
  3730  0E32  0B89               	decfsz	9,f
  3731  0E33  2E2F               	goto	u1365
  3732  0E34  083C               	movf	??___fttol,w
  3733  0E35  00BF               	movwf	___fttol@sign1
  3734  0E36  17B9               	bsf	___fttol@f1+1,7
  3735  0E37  01BA               	clrf	___fttol@f1+2
  3736  0E38  0838               	movf	___fttol@f1,w
  3737  0E39  00C0               	movwf	___fttol@lval
  3738  0E3A  0839               	movf	___fttol@f1+1,w
  3739  0E3B  00C1               	movwf	___fttol@lval+1
  3740  0E3C  083A               	movf	___fttol@f1+2,w
  3741  0E3D  00C2               	movwf	___fttol@lval+2
  3742  0E3E  308E               	movlw	142
  3743  0E3F  01C3               	clrf	___fttol@lval+3
  3744  0E40  02C4               	subwf	___fttol@exp1,f
  3745  0E41  1FC4               	btfss	___fttol@exp1,7
  3746  0E42  2E4F               	goto	l2092
  3747  0E43  0844               	movf	___fttol@exp1,w
  3748  0E44  3A80               	xorlw	128
  3749  0E45  3E8F               	addlw	143
  3750  0E46  1C03               	btfss	3,0
  3751  0E47  2E23               	goto	l2070
  3752  0E48                     l2088:	
  3753  0E48  36C3               	lsrf	___fttol@lval+3,f
  3754  0E49  0CC2               	rrf	___fttol@lval+2,f
  3755  0E4A  0CC1               	rrf	___fttol@lval+1,f
  3756  0E4B  0CC0               	rrf	___fttol@lval,f
  3757  0E4C  0FC4               	incfsz	___fttol@exp1,f
  3758  0E4D  2E48               	goto	l2088
  3759  0E4E  2E5C               	goto	l2100
  3760  0E4F                     l2092:	
  3761  0E4F  3018               	movlw	24
  3762  0E50  0244               	subwf	___fttol@exp1,w
  3763  0E51  1803               	btfsc	3,0
  3764  0E52  2E23               	goto	l2070
  3765  0E53                     l2098:	
  3766  0E53  0844               	movf	___fttol@exp1,w
  3767  0E54  1903               	btfsc	3,2
  3768  0E55  2E5C               	goto	l2100
  3769  0E56  35C0               	lslf	___fttol@lval,f
  3770  0E57  0DC1               	rlf	___fttol@lval+1,f
  3771  0E58  0DC2               	rlf	___fttol@lval+2,f
  3772  0E59  0DC3               	rlf	___fttol@lval+3,f
  3773  0E5A  03C4               	decf	___fttol@exp1,f
  3774  0E5B  2E53               	goto	l2098
  3775  0E5C                     l2100:	
  3776  0E5C  083F               	movf	___fttol@sign1,w
  3777  0E5D  1903               	btfsc	3,2
  3778  0E5E  2E6A               	goto	l2104
  3779  0E5F  09C0               	comf	___fttol@lval,f
  3780  0E60  09C1               	comf	___fttol@lval+1,f
  3781  0E61  09C2               	comf	___fttol@lval+2,f
  3782  0E62  09C3               	comf	___fttol@lval+3,f
  3783  0E63  0AC0               	incf	___fttol@lval,f
  3784  0E64  1903               	skipnz
  3785  0E65  0AC1               	incf	___fttol@lval+1,f
  3786  0E66  1903               	skipnz
  3787  0E67  0AC2               	incf	___fttol@lval+2,f
  3788  0E68  1903               	skipnz
  3789  0E69  0AC3               	incf	___fttol@lval+3,f
  3790  0E6A                     l2104:	
  3791  0E6A  0843               	movf	___fttol@lval+3,w
  3792  0E6B  00BB               	movwf	?___fttol+3
  3793  0E6C  0842               	movf	___fttol@lval+2,w
  3794  0E6D  00BA               	movwf	?___fttol+2
  3795  0E6E  0841               	movf	___fttol@lval+1,w
  3796  0E6F  00B9               	movwf	?___fttol+1
  3797  0E70  0840               	movf	___fttol@lval,w
  3798  0E71  00B8               	movwf	?___fttol
  3799  0E72  0008               	return
  3800  0E73                     __end_of___fttol:	
  3801  0E73                     __ptext30:	
  3802 ;; *************** function _i2c_Stop *****************
  3803 ;; Defined at:
  3804 ;;		line 700 in file "Multi_RX_testjig_v1.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;		None
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;		None
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  1    wreg      void 
  3811 ;; Registers used:
  3812 ;;		None
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/4
  3815 ;;		On exit  : 1F/4
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3822 ;;Total ram usage:        0 bytes
  3823 ;; Hardware stack levels used:    1
  3824 ;; Hardware stack levels required when called:    1
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		_i2c_Write_string
  3829 ;;		_init_i2c_lcd_5v
  3830 ;;		_clear_lcd
  3831 ;;		_i2c_first_line
  3832 ;;		_i2c_second_line
  3833 ;;		_digitalpot
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           
  3838                           ;psect for function _i2c_Stop
  3839  0E73                     _i2c_Stop:	
  3840  0E73                     l1870:	
  3841                           ;incstack = 0
  3842                           ; Regs used in _i2c_Stop: []
  3843                           
  3844                           
  3845                           ;Multi_RX_testjig_v1.c: 702: SSP1CON2bits.PEN = 1;
  3846  0E73  0024               	movlb	4	; select bank4
  3847  0E74  1516               	bsf	22,2	;volatile
  3848  0E75                     l364:	
  3849                           ;Multi_RX_testjig_v1.c: 703: while(SSP1CON2bits.PEN == 1);
  3850                           
  3851  0E75  1D16               	btfss	22,2	;volatile
  3852  0E76  0008               	return
  3853  0E77  2E75               	goto	l364
  3854  0E78                     __end_of_i2c_Stop:	
  3855  0E78                     __ptext18:	
  3856 ;; *************** function ___lwtoft *****************
  3857 ;; Defined at:
  3858 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  c               2    8[COMMON] unsigned int 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;		None
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  3    8[COMMON] float 
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0, pclath, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 1F/0
  3869 ;;		On exit  : 1F/0
  3870 ;;		Unchanged: 1F/0
  3871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3872 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3875 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3876 ;;Total ram usage:        3 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:    2
  3879 ;; This function calls:
  3880 ;;		___ftpack
  3881 ;; This function is called by:
  3882 ;;		_set_current_sink
  3883 ;;		_get_30v_current
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           
  3888                           ;psect for function ___lwtoft
  3889  0E78                     ___lwtoft:	
  3890                           
  3891                           ;incstack = 0
  3892                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3893  0E78  0878               	movf	___lwtoft@c,w
  3894  0E79  00F0               	movwf	___ftpack@arg
  3895  0E7A  0879               	movf	___lwtoft@c+1,w
  3896  0E7B  00F1               	movwf	___ftpack@arg+1
  3897  0E7C  308E               	movlw	142
  3898  0E7D  01F2               	clrf	___ftpack@arg+2
  3899  0E7E  00F3               	movwf	___ftpack@exp
  3900  0E7F  01F4               	clrf	___ftpack@sign
  3901  0E80  277C               	fcall	___ftpack
  3902  0E81  0870               	movf	?___ftpack,w
  3903  0E82  00F8               	movwf	?___lwtoft
  3904  0E83  0871               	movf	?___ftpack+1,w
  3905  0E84  00F9               	movwf	?___lwtoft+1
  3906  0E85  0872               	movf	?___ftpack+2,w
  3907  0E86  00FA               	movwf	?___lwtoft+2
  3908  0E87  0008               	return
  3909  0E88                     __end_of___lwtoft:	
  3910  0E88                     __ptext27:	
  3911 ;; *************** function _Vout_set *****************
  3912 ;; Defined at:
  3913 ;;		line 1628 in file "Multi_RX_testjig_v1.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  Volts           2    4[COMMON] int 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  digi_step       4    6[COMMON] unsigned long 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      void 
  3920 ;; Registers used:
  3921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/4
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3928 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3930 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3931 ;;Total ram usage:        6 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    3
  3934 ;; This function calls:
  3935 ;;		_digitalpot
  3936 ;; This function is called by:
  3937 ;;		_main
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           
  3942                           ;psect for function _Vout_set
  3943  0E88                     _Vout_set:	
  3944                           
  3945                           ;Multi_RX_testjig_v1.c: 1636: switch(Volts)
  3946                           
  3947                           ;incstack = 0
  3948                           ; Regs used in _Vout_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3949  0E88  2EA9               	goto	l2320
  3950  0E89                     l2292:	
  3951                           
  3952                           ;Multi_RX_testjig_v1.c: 1639: digi_step = 20;
  3953  0E89  3014               	movlw	20
  3954  0E8A  2EA2               	goto	L20
  3955  0E8B                     l2294:	
  3956                           ;Multi_RX_testjig_v1.c: 1640: break;
  3957                           
  3958                           
  3959                           ;Multi_RX_testjig_v1.c: 1642: digi_step = 39;
  3960  0E8B  3027               	movlw	39
  3961  0E8C  2EA2               	goto	L20
  3962  0E8D                     l2296:	
  3963                           ;Multi_RX_testjig_v1.c: 1643: break;
  3964                           
  3965                           
  3966                           ;Multi_RX_testjig_v1.c: 1645: digi_step = 52;
  3967  0E8D  3034               	movlw	52
  3968  0E8E  2EA2               	goto	L20
  3969  0E8F                     l2298:	
  3970                           ;Multi_RX_testjig_v1.c: 1646: break;
  3971                           
  3972                           
  3973                           ;Multi_RX_testjig_v1.c: 1648: digi_step = 62;
  3974  0E8F  303E               	movlw	62
  3975  0E90  2EA2               	goto	L20
  3976  0E91                     l2300:	
  3977                           ;Multi_RX_testjig_v1.c: 1649: break;
  3978                           
  3979                           
  3980                           ;Multi_RX_testjig_v1.c: 1651: digi_step = 70;
  3981  0E91  3046               	movlw	70
  3982  0E92  2EA2               	goto	L20
  3983  0E93                     l2302:	
  3984                           ;Multi_RX_testjig_v1.c: 1652: break;
  3985                           
  3986                           
  3987                           ;Multi_RX_testjig_v1.c: 1654: digi_step = 76;
  3988  0E93  304C               	movlw	76
  3989  0E94  2EA2               	goto	L20
  3990  0E95                     l2304:	
  3991                           ;Multi_RX_testjig_v1.c: 1655: break;
  3992                           
  3993                           
  3994                           ;Multi_RX_testjig_v1.c: 1657: digi_step = 81;
  3995  0E95  3051               	movlw	81
  3996  0E96  2EA2               	goto	L20
  3997  0E97                     l2306:	
  3998                           ;Multi_RX_testjig_v1.c: 1658: break;
  3999                           
  4000                           
  4001                           ;Multi_RX_testjig_v1.c: 1660: digi_step = 85;
  4002  0E97  3055               	movlw	85
  4003  0E98  2EA2               	goto	L20
  4004  0E99                     l2308:	
  4005                           ;Multi_RX_testjig_v1.c: 1661: break;
  4006                           
  4007                           
  4008                           ;Multi_RX_testjig_v1.c: 1663: digi_step = 88;
  4009  0E99  3058               	movlw	88
  4010  0E9A  2EA2               	goto	L20
  4011  0E9B                     l2310:	
  4012                           ;Multi_RX_testjig_v1.c: 1664: break;
  4013                           
  4014                           
  4015                           ;Multi_RX_testjig_v1.c: 1666: digi_step = 91;
  4016  0E9B  305B               	movlw	91
  4017  0E9C  2EA2               	goto	L20
  4018  0E9D                     l2312:	
  4019                           ;Multi_RX_testjig_v1.c: 1667: break;
  4020                           
  4021                           
  4022                           ;Multi_RX_testjig_v1.c: 1669: digi_step = 94;
  4023  0E9D  305E               	movlw	94
  4024  0E9E  2EA2               	goto	L20
  4025  0E9F                     l2314:	
  4026                           ;Multi_RX_testjig_v1.c: 1670: break;
  4027                           
  4028                           
  4029                           ;Multi_RX_testjig_v1.c: 1672: digi_step = 96;
  4030  0E9F  3060               	movlw	96
  4031  0EA0  2EA2               	goto	L20
  4032  0EA1                     l2316:	
  4033                           ;Multi_RX_testjig_v1.c: 1673: break;
  4034                           
  4035                           
  4036                           ;Multi_RX_testjig_v1.c: 1675: digi_step = 98;
  4037  0EA1  3062               	movlw	98
  4038  0EA2                     L20:	
  4039  0EA2  00F6               	movwf	Vout_set@digi_step
  4040  0EA3  2EA5               	goto	L21
  4041  0EA4                     l576:	
  4042                           ;Multi_RX_testjig_v1.c: 1677: default:
  4043                           
  4044                           ;Multi_RX_testjig_v1.c: 1676: break;
  4045                           
  4046                           
  4047                           ;Multi_RX_testjig_v1.c: 1678: digi_step = 0;
  4048  0EA4  01F6               	clrf	Vout_set@digi_step
  4049  0EA5                     L21:	
  4050  0EA5  01F7               	clrf	Vout_set@digi_step+1
  4051  0EA6  01F8               	clrf	Vout_set@digi_step+2
  4052  0EA7  01F9               	clrf	Vout_set@digi_step+3
  4053                           
  4054                           ;Multi_RX_testjig_v1.c: 1679: break;
  4055  0EA8  2EBB               	goto	l2322
  4056  0EA9                     l2320:	
  4057                           
  4058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4059                           ; Switch size 1, requested type "speed"
  4060                           ; Number of cases is 1, Range of values is 0 to 0
  4061                           ; switch strategies available:
  4062                           ; Name         Instructions Cycles
  4063                           ; simple_byte            4     3 (average)
  4064                           ; direct_byte            8     6 (fixed)
  4065                           ; jumptable            260     6 (fixed)
  4066                           ;	Chosen strategy is simple_byte
  4067  0EA9  0875               	movf	Vout_set@Volts+1,w
  4068  0EAA  3A00               	xorlw	0	; case 0
  4069  0EAB  1903               	skipnz
  4070  0EAC  2EAE               	goto	l2746
  4071  0EAD  2EA4               	goto	l576
  4072  0EAE                     l2746:	
  4073                           
  4074                           ; Switch size 1, requested type "speed"
  4075                           ; Number of cases is 13, Range of values is 6 to 18
  4076                           ; switch strategies available:
  4077                           ; Name         Instructions Cycles
  4078                           ; direct_byte           35     9 (fixed)
  4079                           ; simple_byte           40    21 (average)
  4080                           ; jumptable            263     9 (fixed)
  4081                           ;	Chosen strategy is direct_byte
  4082  0EAE  0874               	movf	Vout_set@Volts,w
  4083  0EAF  3EFA               	addlw	-6
  4084  0EB0  1C03               	skipc
  4085  0EB1  2EA4               	goto	l576
  4086  0EB2  0084               	movwf	4
  4087  0EB3  300D               	movlw	13
  4088  0EB4  0204               	subwf	4,w
  4089  0EB5  1803               	skipnc
  4090  0EB6  2EA4               	goto	l576
  4091  0EB7  3180               	movlp	high S2748
  4092  0EB8  3504               	lslf	4,w
  4093  0EB9  3E85               	addlw	low S2748
  4094  0EBA  0082               	movwf	2
  4095  0EBB                     l2322:	
  4096                           
  4097                           ;Multi_RX_testjig_v1.c: 1686: digitalpot((unsigned char)digi_step);
  4098  0EBB  0876               	movf	Vout_set@digi_step,w
  4099  0EBC  2860               	ljmp	_digitalpot
  4100  0EBD                     __end_of_Vout_set:	
  4101  0EBD                     __ptext25:	
  4102 ;; *************** function _uart_reset *****************
  4103 ;; Defined at:
  4104 ;;		line 1456 in file "Multi_RX_testjig_v1.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  dummy_clear     1    0        unsigned char 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      void 
  4111 ;; Registers used:
  4112 ;;		wreg
  4113 ;; Tracked objects:
  4114 ;;		On entry : 16/9
  4115 ;;		On exit  : 1F/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4122 ;;Total ram usage:        0 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:    1
  4125 ;; This function calls:
  4126 ;;		Nothing
  4127 ;; This function is called by:
  4128 ;;		_main
  4129 ;;		_enable_uart
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           
  4134                           ;psect for function _uart_reset
  4135  0EBD                     _uart_reset:	
  4136  0EBD                     l2116:	
  4137                           ;incstack = 0
  4138                           ; Regs used in _uart_reset: [wreg]
  4139                           
  4140                           
  4141                           ;Multi_RX_testjig_v1.c: 1458: unsigned char dummy_clear;
  4142                           ;Multi_RX_testjig_v1.c: 1459: RC2STAbits.CREN = 0;
  4143  0EBD  0029               	movlb	9	; select bank9
  4144  0EBE  1215               	bcf	21,4	;volatile
  4145                           
  4146                           ;Multi_RX_testjig_v1.c: 1460: __nop();
  4147  0EBF  0000               	nop
  4148                           
  4149                           ;Multi_RX_testjig_v1.c: 1461: RC2STAbits.CREN = 1;
  4150  0EC0  0029               	movlb	9	; select bank9
  4151  0EC1  1615               	bsf	21,4	;volatile
  4152  0EC2                     l2120:	
  4153                           ;Multi_RX_testjig_v1.c: 1462: while(RC2IF == 1)
  4154                           
  4155  0EC2  0020               	movlb	0	; select bank0
  4156  0EC3  1E94               	btfss	20,5	;volatile
  4157  0EC4  0008               	return
  4158                           
  4159                           ;Multi_RX_testjig_v1.c: 1463: dummy_clear = RC2REG;
  4160  0EC5  0029               	movlb	9	; select bank9
  4161  0EC6  0811               	movf	17,w	;volatile
  4162  0EC7  2EC2               	goto	l2120
  4163  0EC8                     __end_of_uart_reset:	
  4164  0EC8                     __ptext21:	
  4165 ;; *************** function ___ftadd *****************
  4166 ;; Defined at:
  4167 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  f1              3   12[BANK0 ] float 
  4170 ;;  f2              3   15[BANK0 ] float 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  exp1            1   23[BANK0 ] unsigned char 
  4173 ;;  exp2            1   22[BANK0 ] unsigned char 
  4174 ;;  sign            1   21[BANK0 ] unsigned char 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  3   12[BANK0 ] float 
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0, pclath, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 1F/0
  4181 ;;		On exit  : 1F/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4184 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4185 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4186 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4187 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4188 ;;Total ram usage:       12 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    2
  4191 ;; This function calls:
  4192 ;;		___ftpack
  4193 ;; This function is called by:
  4194 ;;		_set_current_sink
  4195 ;;		_get_30v_current
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function ___ftadd
  4201  0EC8                     ___ftadd:	
  4202                           
  4203                           ;incstack = 0
  4204                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4205  0EC8  082C               	movf	___ftadd@f1,w
  4206  0EC9  00B2               	movwf	??___ftadd
  4207  0ECA  082D               	movf	___ftadd@f1+1,w
  4208  0ECB  00B3               	movwf	??___ftadd+1
  4209  0ECC  082E               	movf	___ftadd@f1+2,w
  4210  0ECD  00B4               	movwf	??___ftadd+2
  4211  0ECE  1003               	clrc
  4212  0ECF  0D33               	rlf	??___ftadd+1,w
  4213  0ED0  0D34               	rlf	??___ftadd+2,w
  4214  0ED1  00B7               	movwf	___ftadd@exp1
  4215  0ED2  082F               	movf	___ftadd@f2,w
  4216  0ED3  00B2               	movwf	??___ftadd
  4217  0ED4  0830               	movf	___ftadd@f2+1,w
  4218  0ED5  00B3               	movwf	??___ftadd+1
  4219  0ED6  0831               	movf	___ftadd@f2+2,w
  4220  0ED7  00B4               	movwf	??___ftadd+2
  4221  0ED8  1003               	clrc
  4222  0ED9  0D33               	rlf	??___ftadd+1,w
  4223  0EDA  0D34               	rlf	??___ftadd+2,w
  4224  0EDB  00B6               	movwf	___ftadd@exp2
  4225  0EDC  0837               	movf	___ftadd@exp1,w
  4226  0EDD  1903               	btfsc	3,2
  4227  0EDE  2EEB               	goto	l1946
  4228  0EDF  0836               	movf	___ftadd@exp2,w
  4229  0EE0  0237               	subwf	___ftadd@exp1,w
  4230  0EE1  0836               	movf	___ftadd@exp2,w
  4231  0EE2  1803               	skipnc
  4232  0EE3  2EF3               	goto	L8
  4233  0EE4  00B2               	movwf	??___ftadd
  4234  0EE5  0837               	movf	___ftadd@exp1,w
  4235  0EE6  02B2               	subwf	??___ftadd,f
  4236  0EE7  3019               	movlw	25
  4237  0EE8  0232               	subwf	??___ftadd,w
  4238  0EE9  1C03               	skipc
  4239  0EEA  2EF2               	goto	l1950
  4240  0EEB                     l1946:	
  4241  0EEB  082F               	movf	___ftadd@f2,w
  4242  0EEC  00AC               	movwf	?___ftadd
  4243  0EED  0830               	movf	___ftadd@f2+1,w
  4244  0EEE  00AD               	movwf	?___ftadd+1
  4245  0EEF  0831               	movf	___ftadd@f2+2,w
  4246  0EF0  00AE               	movwf	?___ftadd+2
  4247  0EF1  0008               	return
  4248  0EF2                     l1950:	
  4249  0EF2  0836               	movf	___ftadd@exp2,w
  4250  0EF3                     L8:	
  4251  0EF3  1903               	btfsc	3,2
  4252  0EF4  0008               	return
  4253  0EF5  0837               	movf	___ftadd@exp1,w
  4254  0EF6  0236               	subwf	___ftadd@exp2,w
  4255  0EF7  1803               	skipnc
  4256  0EF8  2F01               	goto	l1956
  4257  0EF9  0837               	movf	___ftadd@exp1,w
  4258  0EFA  00B2               	movwf	??___ftadd
  4259  0EFB  0836               	movf	___ftadd@exp2,w
  4260  0EFC  02B2               	subwf	??___ftadd,f
  4261  0EFD  3019               	movlw	25
  4262  0EFE  0232               	subwf	??___ftadd,w
  4263  0EFF  1803               	btfsc	3,0
  4264  0F00  0008               	return
  4265  0F01                     l1956:	
  4266  0F01  3006               	movlw	6
  4267  0F02  00B5               	movwf	___ftadd@sign
  4268  0F03  1BAE               	btfsc	___ftadd@f1+2,7
  4269  0F04  17B5               	bsf	___ftadd@sign,7
  4270  0F05  1BB1               	btfsc	___ftadd@f2+2,7
  4271  0F06  1735               	bsf	___ftadd@sign,6
  4272  0F07  17AD               	bsf	___ftadd@f1+1,7
  4273  0F08  01AE               	clrf	___ftadd@f1+2
  4274  0F09  17B0               	bsf	___ftadd@f2+1,7
  4275  0F0A  01B1               	clrf	___ftadd@f2+2
  4276  0F0B  0836               	movf	___ftadd@exp2,w
  4277  0F0C  0237               	subwf	___ftadd@exp1,w
  4278  0F0D  1803               	skipnc
  4279  0F0E  2F26               	goto	l1978
  4280  0F0F                     l1968:	
  4281  0F0F  35AF               	lslf	___ftadd@f2,f
  4282  0F10  0DB0               	rlf	___ftadd@f2+1,f
  4283  0F11  0DB1               	rlf	___ftadd@f2+2,f
  4284  0F12  03B6               	decf	___ftadd@exp2,f
  4285  0F13  0836               	movf	___ftadd@exp2,w
  4286  0F14  0637               	xorwf	___ftadd@exp1,w
  4287  0F15  1903               	skipnz
  4288  0F16  2F21               	goto	l1976
  4289  0F17  03B5               	decf	___ftadd@sign,f
  4290  0F18  0835               	movf	___ftadd@sign,w
  4291  0F19  3907               	andlw	7
  4292  0F1A  1903               	btfsc	3,2
  4293  0F1B  2F21               	goto	l1976
  4294  0F1C  2F0F               	goto	l1968
  4295  0F1D                     l1974:	
  4296  0F1D  36AE               	lsrf	___ftadd@f1+2,f
  4297  0F1E  0CAD               	rrf	___ftadd@f1+1,f
  4298  0F1F  0CAC               	rrf	___ftadd@f1,f
  4299  0F20  0AB7               	incf	___ftadd@exp1,f
  4300  0F21                     l1976:	
  4301  0F21  0837               	movf	___ftadd@exp1,w
  4302  0F22  0636               	xorwf	___ftadd@exp2,w
  4303  0F23  1903               	btfsc	3,2
  4304  0F24  2F40               	goto	l786
  4305  0F25  2F1D               	goto	l1974
  4306  0F26                     l1978:	
  4307  0F26  0837               	movf	___ftadd@exp1,w
  4308  0F27  0236               	subwf	___ftadd@exp2,w
  4309  0F28  1803               	skipnc
  4310  0F29  2F40               	goto	l786
  4311  0F2A                     l1980:	
  4312  0F2A  35AC               	lslf	___ftadd@f1,f
  4313  0F2B  0DAD               	rlf	___ftadd@f1+1,f
  4314  0F2C  0DAE               	rlf	___ftadd@f1+2,f
  4315  0F2D  03B7               	decf	___ftadd@exp1,f
  4316  0F2E  0836               	movf	___ftadd@exp2,w
  4317  0F2F  0637               	xorwf	___ftadd@exp1,w
  4318  0F30  1903               	skipnz
  4319  0F31  2F3C               	goto	l1988
  4320  0F32  03B5               	decf	___ftadd@sign,f
  4321  0F33  0835               	movf	___ftadd@sign,w
  4322  0F34  3907               	andlw	7
  4323  0F35  1903               	btfsc	3,2
  4324  0F36  2F3C               	goto	l1988
  4325  0F37  2F2A               	goto	l1980
  4326  0F38                     l1986:	
  4327  0F38  36B1               	lsrf	___ftadd@f2+2,f
  4328  0F39  0CB0               	rrf	___ftadd@f2+1,f
  4329  0F3A  0CAF               	rrf	___ftadd@f2,f
  4330  0F3B  0AB6               	incf	___ftadd@exp2,f
  4331  0F3C                     l1988:	
  4332  0F3C  0837               	movf	___ftadd@exp1,w
  4333  0F3D  0636               	xorwf	___ftadd@exp2,w
  4334  0F3E  1D03               	skipz
  4335  0F3F  2F38               	goto	l1986
  4336  0F40                     l786:	
  4337  0F40  1FB5               	btfss	___ftadd@sign,7
  4338  0F41  2F4B               	goto	l1994
  4339  0F42  30FF               	movlw	255
  4340  0F43  06AC               	xorwf	___ftadd@f1,f
  4341  0F44  06AD               	xorwf	___ftadd@f1+1,f
  4342  0F45  06AE               	xorwf	___ftadd@f1+2,f
  4343  0F46  0AAC               	incf	___ftadd@f1,f
  4344  0F47  1903               	skipnz
  4345  0F48  0AAD               	incf	___ftadd@f1+1,f
  4346  0F49  1903               	skipnz
  4347  0F4A  0AAE               	incf	___ftadd@f1+2,f
  4348  0F4B                     l1994:	
  4349  0F4B  1F35               	btfss	___ftadd@sign,6
  4350  0F4C  2F56               	goto	l2000
  4351  0F4D  30FF               	movlw	255
  4352  0F4E  06AF               	xorwf	___ftadd@f2,f
  4353  0F4F  06B0               	xorwf	___ftadd@f2+1,f
  4354  0F50  06B1               	xorwf	___ftadd@f2+2,f
  4355  0F51  0AAF               	incf	___ftadd@f2,f
  4356  0F52  1903               	skipnz
  4357  0F53  0AB0               	incf	___ftadd@f2+1,f
  4358  0F54  1903               	skipnz
  4359  0F55  0AB1               	incf	___ftadd@f2+2,f
  4360  0F56                     l2000:	
  4361  0F56  01B5               	clrf	___ftadd@sign
  4362  0F57  082C               	movf	___ftadd@f1,w
  4363  0F58  07AF               	addwf	___ftadd@f2,f
  4364  0F59  082D               	movf	___ftadd@f1+1,w
  4365  0F5A  3DB0               	addwfc	___ftadd@f2+1,f
  4366  0F5B  082E               	movf	___ftadd@f1+2,w
  4367  0F5C  3DB1               	addwfc	___ftadd@f2+2,f
  4368  0F5D  1FB1               	btfss	___ftadd@f2+2,7
  4369  0F5E  2F6A               	goto	l2012
  4370  0F5F  30FF               	movlw	255
  4371  0F60  06AF               	xorwf	___ftadd@f2,f
  4372  0F61  06B0               	xorwf	___ftadd@f2+1,f
  4373  0F62  06B1               	xorwf	___ftadd@f2+2,f
  4374  0F63  0AAF               	incf	___ftadd@f2,f
  4375  0F64  1903               	skipnz
  4376  0F65  0AB0               	incf	___ftadd@f2+1,f
  4377  0F66  1903               	skipnz
  4378  0F67  0AB1               	incf	___ftadd@f2+2,f
  4379  0F68  01B5               	clrf	___ftadd@sign
  4380  0F69  0AB5               	incf	___ftadd@sign,f
  4381  0F6A                     l2012:	
  4382  0F6A  082F               	movf	___ftadd@f2,w
  4383  0F6B  00F0               	movwf	___ftpack@arg
  4384  0F6C  0830               	movf	___ftadd@f2+1,w
  4385  0F6D  00F1               	movwf	___ftpack@arg+1
  4386  0F6E  0831               	movf	___ftadd@f2+2,w
  4387  0F6F  00F2               	movwf	___ftpack@arg+2
  4388  0F70  0837               	movf	___ftadd@exp1,w
  4389  0F71  00F3               	movwf	___ftpack@exp
  4390  0F72  0835               	movf	___ftadd@sign,w
  4391  0F73  00F4               	movwf	___ftpack@sign
  4392  0F74  277C               	fcall	___ftpack
  4393  0F75  0870               	movf	?___ftpack,w
  4394  0F76  00AC               	movwf	?___ftadd
  4395  0F77  0871               	movf	?___ftpack+1,w
  4396  0F78  00AD               	movwf	?___ftadd+1
  4397  0F79  0872               	movf	?___ftpack+2,w
  4398  0F7A  00AE               	movwf	?___ftadd+2
  4399  0F7B  0008               	return
  4400  0F7C                     __end_of___ftadd:	
  4401  0F7C                     __ptext22:	
  4402 ;; *************** function ___ftpack *****************
  4403 ;; Defined at:
  4404 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  arg             3    0[COMMON] unsigned um
  4407 ;;  exp             1    3[COMMON] unsigned char 
  4408 ;;  sign            1    4[COMMON] unsigned char 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;		None
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  3    0[COMMON] float 
  4413 ;; Registers used:
  4414 ;;		wreg, status,2, status,0
  4415 ;; Tracked objects:
  4416 ;;		On entry : 1F/0
  4417 ;;		On exit  : 1F/0
  4418 ;;		Unchanged: 1F/0
  4419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4420 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4422 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4423 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4424 ;;Total ram usage:        8 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    1
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		___ftadd
  4431 ;;		___ftmul
  4432 ;;		___lwtoft
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           
  4437                           ;psect for function ___ftpack
  4438  0F7C                     ___ftpack:	
  4439                           
  4440                           ;incstack = 0
  4441                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4442  0F7C  0873               	movf	___ftpack@exp,w
  4443  0F7D  1903               	btfsc	3,2
  4444  0F7E  2F84               	goto	l750
  4445  0F7F  0872               	movf	___ftpack@arg+2,w
  4446  0F80  0471               	iorwf	___ftpack@arg+1,w
  4447  0F81  0470               	iorwf	___ftpack@arg,w
  4448  0F82  1D03               	skipz
  4449  0F83  2F8C               	goto	l1878
  4450  0F84                     l750:	
  4451  0F84  01F0               	clrf	?___ftpack
  4452  0F85  01F1               	clrf	?___ftpack+1
  4453  0F86  01F2               	clrf	?___ftpack+2
  4454  0F87  0008               	return
  4455  0F88                     l1876:	
  4456  0F88  0AF3               	incf	___ftpack@exp,f
  4457  0F89  36F2               	lsrf	___ftpack@arg+2,f
  4458  0F8A  0CF1               	rrf	___ftpack@arg+1,f
  4459  0F8B  0CF0               	rrf	___ftpack@arg,f
  4460  0F8C                     l1878:	
  4461  0F8C  30FE               	movlw	254
  4462  0F8D  0572               	andwf	___ftpack@arg+2,w
  4463  0F8E  1903               	btfsc	3,2
  4464  0F8F  2F9A               	goto	l1882
  4465  0F90  2F88               	goto	l1876
  4466  0F91                     l1880:	
  4467  0F91  0AF3               	incf	___ftpack@exp,f
  4468  0F92  0AF0               	incf	___ftpack@arg,f
  4469  0F93  1903               	skipnz
  4470  0F94  0AF1               	incf	___ftpack@arg+1,f
  4471  0F95  1903               	skipnz
  4472  0F96  0AF2               	incf	___ftpack@arg+2,f
  4473  0F97  36F2               	lsrf	___ftpack@arg+2,f
  4474  0F98  0CF1               	rrf	___ftpack@arg+1,f
  4475  0F99  0CF0               	rrf	___ftpack@arg,f
  4476  0F9A                     l1882:	
  4477  0F9A  30FF               	movlw	255
  4478  0F9B  0572               	andwf	___ftpack@arg+2,w
  4479  0F9C  1903               	btfsc	3,2
  4480  0F9D  2FA7               	goto	l1886
  4481  0F9E  2F91               	goto	l1880
  4482  0F9F                     l1888:	
  4483  0F9F  3002               	movlw	2
  4484  0FA0  0273               	subwf	___ftpack@exp,w
  4485  0FA1  1C03               	btfss	3,0
  4486  0FA2  2FA9               	goto	l762
  4487  0FA3  03F3               	decf	___ftpack@exp,f
  4488  0FA4  35F0               	lslf	___ftpack@arg,f
  4489  0FA5  0DF1               	rlf	___ftpack@arg+1,f
  4490  0FA6  0DF2               	rlf	___ftpack@arg+2,f
  4491  0FA7                     l1886:	
  4492  0FA7  1FF1               	btfss	___ftpack@arg+1,7
  4493  0FA8  2F9F               	goto	l1888
  4494  0FA9                     l762:	
  4495  0FA9  1C73               	btfss	___ftpack@exp,0
  4496  0FAA  13F1               	bcf	___ftpack@arg+1,7
  4497  0FAB  36F3               	lsrf	___ftpack@exp,f
  4498  0FAC  0873               	movf	___ftpack@exp,w
  4499  0FAD  00F7               	movwf	??___ftpack+2
  4500  0FAE  01F6               	clrf	??___ftpack+1
  4501  0FAF  01F5               	clrf	??___ftpack
  4502  0FB0  0875               	movf	??___ftpack,w
  4503  0FB1  04F0               	iorwf	___ftpack@arg,f
  4504  0FB2  0876               	movf	??___ftpack+1,w
  4505  0FB3  04F1               	iorwf	___ftpack@arg+1,f
  4506  0FB4  0877               	movf	??___ftpack+2,w
  4507  0FB5  04F2               	iorwf	___ftpack@arg+2,f
  4508  0FB6  0874               	movf	___ftpack@sign,w
  4509  0FB7  1D03               	btfss	3,2
  4510  0FB8  17F2               	bsf	___ftpack@arg+2,7
  4511  0FB9  0008               	return
  4512  0FBA                     __end_of___ftpack:	
  4513  0FBA                     __ptext26:	
  4514 ;; *************** function _disable_uart *****************
  4515 ;; Defined at:
  4516 ;;		line 1431 in file "Multi_RX_testjig_v1.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;		None
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		None
  4525 ;; Tracked objects:
  4526 ;;		On entry : 1F/9
  4527 ;;		On exit  : 1F/9
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4534 ;;Total ram usage:        0 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    1
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_main
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           
  4545                           ;psect for function _disable_uart
  4546  0FBA                     _disable_uart:	
  4547                           
  4548                           ;Multi_RX_testjig_v1.c: 1433: TX2STAbits.TXEN = 0;
  4549                           
  4550                           ;incstack = 0
  4551                           ; Regs used in _disable_uart: []
  4552  0FBA  1296               	bcf	22,5	;volatile
  4553                           
  4554                           ;Multi_RX_testjig_v1.c: 1434: RC2STAbits.CREN = 0;
  4555  0FBB  1215               	bcf	21,4	;volatile
  4556                           
  4557                           ;Multi_RX_testjig_v1.c: 1435: RC2STAbits.SPEN = 0;
  4558  0FBC  1395               	bcf	21,7	;volatile
  4559  0FBD  0008               	return
  4560  0FBE                     __end_of_disable_uart:	
  4561  0FBE                     __ptext24:	
  4562 ;; *************** function _enable_uart *****************
  4563 ;; Defined at:
  4564 ;;		line 1440 in file "Multi_RX_testjig_v1.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;		None
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;		None
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  1    wreg      void 
  4571 ;; Registers used:
  4572 ;;		wreg, status,2, status,0, pclath, cstack
  4573 ;; Tracked objects:
  4574 ;;		On entry : 1F/0
  4575 ;;		On exit  : 1F/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4582 ;;Total ram usage:        0 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    2
  4585 ;; This function calls:
  4586 ;;		_uart_reset
  4587 ;; This function is called by:
  4588 ;;		_main
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           
  4593                           ;psect for function _enable_uart
  4594  0FBE                     _enable_uart:	
  4595                           
  4596                           ;Multi_RX_testjig_v1.c: 1442: TX2STAbits.TXEN = 1;
  4597                           
  4598                           ;incstack = 0
  4599                           ; Regs used in _enable_uart: [wreg+status,2+status,0+pclath+cstack]
  4600  0FBE  0029               	movlb	9	; select bank9
  4601  0FBF  1696               	bsf	22,5	;volatile
  4602                           
  4603                           ;Multi_RX_testjig_v1.c: 1444: RC2STAbits.SPEN = 1;
  4604  0FC0  1795               	bsf	21,7	;volatile
  4605                           
  4606                           ;Multi_RX_testjig_v1.c: 1445: uart_reset();
  4607  0FC1  2EBD               	ljmp	l2116
  4608  0FC2                     __end_of_enable_uart:	
  4609  0FC2                     __ptext16:	
  4610 ;; *************** function _init_ADC *****************
  4611 ;; Defined at:
  4612 ;;		line 1517 in file "Multi_RX_testjig_v1.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1    wreg      void 
  4619 ;; Registers used:
  4620 ;;		wreg
  4621 ;; Tracked objects:
  4622 ;;		On entry : B1F/8
  4623 ;;		On exit  : B1F/1
  4624 ;;		Unchanged: B00/0
  4625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4630 ;;Total ram usage:        0 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    1
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_main
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           
  4641                           ;psect for function _init_ADC
  4642  0FC2                     _init_ADC:	
  4643                           
  4644                           ;Multi_RX_testjig_v1.c: 1519: FVRCON = 0b10000011;
  4645                           
  4646                           ;incstack = 0
  4647                           ; Regs used in _init_ADC: [wreg]
  4648  0FC2  3083               	movlw	131
  4649  0FC3  0022               	movlb	2	; select bank2
  4650  0FC4  0097               	movwf	23	;volatile
  4651                           
  4652                           ;Multi_RX_testjig_v1.c: 1521: ADCON1 = 0b10100011;
  4653  0FC5  30A3               	movlw	163
  4654  0FC6  0021               	movlb	1	; select bank1
  4655  0FC7  009E               	movwf	30	;volatile
  4656  0FC8  0008               	return
  4657  0FC9                     __end_of_init_ADC:	
  4658  0FC9                     __ptext15:	
  4659 ;; *************** function _init_current_sink *****************
  4660 ;; Defined at:
  4661 ;;		line 1535 in file "Multi_RX_testjig_v1.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;		None
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;		None
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      void 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2
  4670 ;; Tracked objects:
  4671 ;;		On entry : B1F/1
  4672 ;;		On exit  : B1F/C
  4673 ;;		Unchanged: B00/0
  4674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4679 ;;Total ram usage:        0 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    1
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_main
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           
  4690                           ;psect for function _init_current_sink
  4691  0FC9                     _init_current_sink:	
  4692                           
  4693                           ;Multi_RX_testjig_v1.c: 1537: T2CON = 0b00000110;
  4694                           
  4695                           ;incstack = 0
  4696                           ; Regs used in _init_current_sink: [wreg+status,2]
  4697  0FC9  3006               	movlw	6
  4698  0FCA  0020               	movlb	0	; select bank0
  4699  0FCB  009C               	movwf	28	;volatile
  4700                           
  4701                           ;Multi_RX_testjig_v1.c: 1538: PR2 = 0xFA;
  4702  0FCC  30FA               	movlw	250
  4703  0FCD  009B               	movwf	27	;volatile
  4704                           
  4705                           ;Multi_RX_testjig_v1.c: 1539: PIE1bits.TMR2IE = 1;
  4706  0FCE  0021               	movlb	1	; select bank1
  4707  0FCF  1491               	bsf	17,1	;volatile
  4708                           
  4709                           ;Multi_RX_testjig_v1.c: 1541: T8CON = 0b00000100;
  4710  0FD0  3004               	movlw	4
  4711  0FD1  002B               	movlb	11	; select bank11
  4712  0FD2  0097               	movwf	23	;volatile
  4713                           
  4714                           ;Multi_RX_testjig_v1.c: 1542: PR8 = 0xFF;
  4715  0FD3  30FF               	movlw	255
  4716  0FD4  0096               	movwf	22	;volatile
  4717                           
  4718                           ;Multi_RX_testjig_v1.c: 1543: CCP9CON = 0b00001100;
  4719  0FD5  300C               	movlw	12
  4720  0FD6  002C               	movlb	12	; select bank12
  4721  0FD7  009C               	movwf	28	;volatile
  4722                           
  4723                           ;Multi_RX_testjig_v1.c: 1544: CCPTMRS2 = 0b00000001;
  4724  0FD8  3001               	movlw	1
  4725  0FD9  0025               	movlb	5	; select bank5
  4726  0FDA  009F               	movwf	31	;volatile
  4727                           
  4728                           ;Multi_RX_testjig_v1.c: 1545: CCPR9L = 0x00;
  4729  0FDB  002C               	movlb	12	; select bank12
  4730  0FDC  019A               	clrf	26	;volatile
  4731  0FDD  0008               	return
  4732  0FDE                     __end_of_init_current_sink:	
  4733  0FDE                     __ptext14:	
  4734 ;; *************** function _init_i2c *****************
  4735 ;; Defined at:
  4736 ;;		line 1506 in file "Multi_RX_testjig_v1.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;		None
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;		None
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      void 
  4743 ;; Registers used:
  4744 ;;		wreg
  4745 ;; Tracked objects:
  4746 ;;		On entry : 1F/0
  4747 ;;		On exit  : 1F/4
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4752 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4753 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4754 ;;Total ram usage:        3 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; Hardware stack levels required when called:    1
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_main
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           
  4765                           ;psect for function _init_i2c
  4766  0FDE                     _init_i2c:	
  4767                           
  4768                           ;Multi_RX_testjig_v1.c: 1508: RA5 = 1;
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in _init_i2c: [wreg]
  4772  0FDE  168C               	bsf	12,5	;volatile
  4773                           
  4774                           ;Multi_RX_testjig_v1.c: 1509: _delay((unsigned long)((200)*(16000000/4000.0)));
  4775  0FDF  3005               	movlw	5
  4776  0FE0  00F2               	movwf	??_init_i2c+2
  4777  0FE1  300F               	movlw	15
  4778  0FE2  00F1               	movwf	??_init_i2c+1
  4779  0FE3  30F4               	movlw	244
  4780  0FE4  00F0               	movwf	??_init_i2c
  4781  0FE5                     u2147:	
  4782  0FE5  0BF0               	decfsz	??_init_i2c,f
  4783  0FE6  2FE5               	goto	u2147
  4784  0FE7  0BF1               	decfsz	??_init_i2c+1,f
  4785  0FE8  2FE5               	goto	u2147
  4786  0FE9  0BF2               	decfsz	??_init_i2c+2,f
  4787  0FEA  2FE5               	goto	u2147
  4788                           
  4789                           ;Multi_RX_testjig_v1.c: 1510: TRISC3 = 1;
  4790  0FEB  0021               	movlb	1	; select bank1
  4791  0FEC  158E               	bsf	14,3	;volatile
  4792                           
  4793                           ;Multi_RX_testjig_v1.c: 1511: TRISC4 = 1;
  4794  0FED  160E               	bsf	14,4	;volatile
  4795                           
  4796                           ;Multi_RX_testjig_v1.c: 1512: SSP1STAT |= 0x80;
  4797  0FEE  0024               	movlb	4	; select bank4
  4798  0FEF  1794               	bsf	20,7	;volatile
  4799                           
  4800                           ;Multi_RX_testjig_v1.c: 1513: SSP1CON1 = 0x28;
  4801  0FF0  3028               	movlw	40
  4802  0FF1  0095               	movwf	21	;volatile
  4803                           
  4804                           ;Multi_RX_testjig_v1.c: 1514: SSP1ADD = 0x14;
  4805  0FF2  3014               	movlw	20
  4806  0FF3  0092               	movwf	18	;volatile
  4807  0FF4  0008               	return
  4808  0FF5                     __end_of_init_i2c:	
  4809  0FF5                     __ptext12:	
  4810 ;; *************** function _init_uart2 *****************
  4811 ;; Defined at:
  4812 ;;		line 1422 in file "Multi_RX_testjig_v1.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;		None
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, status,2
  4821 ;; Tracked objects:
  4822 ;;		On entry : 1F/4
  4823 ;;		On exit  : 1F/9
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4830 ;;Total ram usage:        0 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    1
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_main
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           
  4841                           ;psect for function _init_uart2
  4842  0FF5                     _init_uart2:	
  4843                           
  4844                           ;Multi_RX_testjig_v1.c: 1424: TX2STA = 0b00100100;
  4845                           
  4846                           ;incstack = 0
  4847                           ; Regs used in _init_uart2: [wreg+status,2]
  4848  0FF5  3024               	movlw	36
  4849  0FF6  0029               	movlb	9	; select bank9
  4850  0FF7  0096               	movwf	22	;volatile
  4851                           
  4852                           ;Multi_RX_testjig_v1.c: 1425: RC2STA = 0b10010000;
  4853  0FF8  3090               	movlw	144
  4854  0FF9  0095               	movwf	21	;volatile
  4855                           
  4856                           ;Multi_RX_testjig_v1.c: 1426: BAUD2CON = 0b00001000;
  4857  0FFA  3008               	movlw	8
  4858  0FFB  0097               	movwf	23	;volatile
  4859                           
  4860                           ;Multi_RX_testjig_v1.c: 1427: SP2BRGH = 0x00;
  4861  0FFC  0194               	clrf	20	;volatile
  4862                           
  4863                           ;Multi_RX_testjig_v1.c: 1428: SP2BRGL = 66;
  4864  0FFD  3042               	movlw	66
  4865  0FFE  0093               	movwf	19	;volatile
  4866  0FFF  0008               	return
  4867  1000                     __end_of_init_uart2:	
  4868                           
  4869                           	psect	bssBANK0
  4870  0054                     __pbssBANK0:	
  4871  0054                     _ADC_cur_sink_val:	
  4872  0054                     	ds	2
  4873  0056                     _curent_sink_val:	
  4874  0056                     	ds	2
  4875  0058                     _current_sink_stable:	
  4876  0058                     	ds	2
  4877  005A                     _current_sink_timer:	
  4878  005A                     	ds	2
  4879  005C                     _motor_direction_timer:	
  4880  005C                     	ds	2
  4881  005E                     _pickit_timer:	
  4882  005E                     	ds	2
  4883  0060                     _testjig_timer:	
  4884  0060                     	ds	2
  4885  0062                     _uart_receive_timer:	
  4886  0062                     	ds	2
  4887  0064                     _current_sink_state:	
  4888  0064                     	ds	1
  4889  0065                     _thou:	
  4890  0065                     	ds	1
  4891                           
  4892                           	psect	dataBANK0
  4893  0069                     __pdataBANK0:	
  4894  0069                     _one_second_timer:	
  4895  0069                     	ds	2
  4896                           
  4897                           	psect	clrtext
  4898  00BB                     clear_ram0:	
  4899                           ;	Called with FSR0 containing the base address, and
  4900                           ;	WREG with the size to clear
  4901                           
  4902  00BB  0064               	clrwdt	;clear the watchdog before getting into this loop
  4903  00BC                     clrloop0:	
  4904  00BC  0180               	clrf	0	;clear RAM location pointed to by FSR
  4905  00BD  3101               	addfsr 0,1
  4906  00BE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4907  00BF  28BC               	goto	clrloop0	;have we reached the end yet?
  4908  00C0  3400               	retlw	0	;all done for this memory range, return
  4909                           
  4910                           	psect	cstackCOMMON
  4911  0070                     __pcstackCOMMON:	
  4912  0070                     ?_init_ADC:	
  4913  0070                     ??_init_ADC:	
  4914                           ; 1 bytes @ 0x0
  4915                           
  4916  0070                     ?_init_current_sink:	
  4917                           ; 1 bytes @ 0x0
  4918                           
  4919  0070                     ??_init_current_sink:	
  4920                           ; 1 bytes @ 0x0
  4921                           
  4922  0070                     ?_buzz_one:	
  4923                           ; 1 bytes @ 0x0
  4924                           
  4925  0070                     ?_init_i2c:	
  4926                           ; 1 bytes @ 0x0
  4927                           
  4928  0070                     ??_init_i2c:	
  4929                           ; 1 bytes @ 0x0
  4930                           
  4931  0070                     ?_init_uart2:	
  4932                           ; 1 bytes @ 0x0
  4933                           
  4934  0070                     ??_init_uart2:	
  4935                           ; 1 bytes @ 0x0
  4936                           
  4937  0070                     ?_disable_uart:	
  4938                           ; 1 bytes @ 0x0
  4939                           
  4940  0070                     ??_disable_uart:	
  4941                           ; 1 bytes @ 0x0
  4942                           
  4943  0070                     ?_uart_reset:	
  4944                           ; 1 bytes @ 0x0
  4945                           
  4946  0070                     ??_uart_reset:	
  4947                           ; 1 bytes @ 0x0
  4948                           
  4949  0070                     ?_enable_uart:	
  4950                           ; 1 bytes @ 0x0
  4951                           
  4952  0070                     ??_enable_uart:	
  4953                           ; 1 bytes @ 0x0
  4954                           
  4955  0070                     ?_debug_fast_tx:	
  4956                           ; 1 bytes @ 0x0
  4957                           
  4958  0070                     ?_power_supply_set:	
  4959                           ; 1 bytes @ 0x0
  4960                           
  4961  0070                     ??_power_supply_set:	
  4962                           ; 1 bytes @ 0x0
  4963                           
  4964  0070                     ?_testjig_done:	
  4965                           ; 1 bytes @ 0x0
  4966                           
  4967  0070                     ?_digitalpot:	
  4968                           ; 1 bytes @ 0x0
  4969                           
  4970  0070                     ?_isr:	
  4971                           ; 1 bytes @ 0x0
  4972                           
  4973  0070                     ??_isr:	
  4974                           ; 1 bytes @ 0x0
  4975                           
  4976  0070                     ?_main:	
  4977                           ; 1 bytes @ 0x0
  4978                           
  4979  0070                     ?_i2c_Start:	
  4980                           ; 1 bytes @ 0x0
  4981                           
  4982  0070                     ??_i2c_Start:	
  4983                           ; 1 bytes @ 0x0
  4984                           
  4985  0070                     ?_i2c_Write:	
  4986                           ; 1 bytes @ 0x0
  4987                           
  4988  0070                     ??_i2c_Write:	
  4989                           ; 1 bytes @ 0x0
  4990                           
  4991  0070                     ?_i2c_Stop:	
  4992                           ; 1 bytes @ 0x0
  4993                           
  4994  0070                     ??_i2c_Stop:	
  4995                           ; 1 bytes @ 0x0
  4996                           
  4997  0070                     ?_clear_lcd:	
  4998                           ; 1 bytes @ 0x0
  4999                           
  5000  0070                     ?_i2c_first_line:	
  5001                           ; 1 bytes @ 0x0
  5002                           
  5003  0070                     ?_i2c_second_line:	
  5004                           ; 1 bytes @ 0x0
  5005                           
  5006  0070                     ?_ADC_get_val:	
  5007                           ; 1 bytes @ 0x0
  5008                           
  5009  0070                     ?___ftpack:	
  5010                           ; 2 bytes @ 0x0
  5011                           
  5012  0070                     i2c_Write@data:	
  5013                           ; 3 bytes @ 0x0
  5014                           
  5015  0070                     power_supply_set@supply:	
  5016                           ; 1 bytes @ 0x0
  5017                           
  5018  0070                     buzz_one@time:	
  5019                           ; 1 bytes @ 0x0
  5020                           
  5021  0070                     debug_fast_tx@data:	
  5022                           ; 2 bytes @ 0x0
  5023                           
  5024  0070                     ___ftpack@arg:	
  5025                           ; 2 bytes @ 0x0
  5026                           
  5027                           
  5028                           ; 3 bytes @ 0x0
  5029  0070                     	ds	1
  5030  0071                     ?_init_i2c_lcd_5v:	
  5031  0071                     ??_digitalpot:	
  5032                           ; 1 bytes @ 0x1
  5033                           
  5034  0071                     ?_i2c_Write_string:	
  5035                           ; 1 bytes @ 0x1
  5036                           
  5037  0071                     ??_clear_lcd:	
  5038                           ; 1 bytes @ 0x1
  5039                           
  5040  0071                     ??_i2c_first_line:	
  5041                           ; 1 bytes @ 0x1
  5042                           
  5043  0071                     ??_i2c_second_line:	
  5044                           ; 1 bytes @ 0x1
  5045                           
  5046  0071                     init_i2c_lcd_5v@single1_double2:	
  5047                           ; 1 bytes @ 0x1
  5048                           
  5049  0071                     i2c_Write_string@data:	
  5050                           ; 1 bytes @ 0x1
  5051                           
  5052                           
  5053                           ; 2 bytes @ 0x1
  5054  0071                     	ds	1
  5055  0072                     ??_buzz_one:	
  5056  0072                     ??_init_i2c_lcd_5v:	
  5057                           ; 1 bytes @ 0x2
  5058                           
  5059  0072                     ??_debug_fast_tx:	
  5060                           ; 1 bytes @ 0x2
  5061                           
  5062  0072                     debug_fast_tx@i:	
  5063                           ; 1 bytes @ 0x2
  5064                           
  5065                           
  5066                           ; 1 bytes @ 0x2
  5067  0072                     	ds	1
  5068  0073                     ??_ADC_get_val:	
  5069  0073                     ??_i2c_Write_string:	
  5070                           ; 1 bytes @ 0x3
  5071                           
  5072  0073                     ADC_get_val@channel:	
  5073                           ; 1 bytes @ 0x3
  5074                           
  5075  0073                     digitalpot@value:	
  5076                           ; 1 bytes @ 0x3
  5077                           
  5078  0073                     ___ftpack@exp:	
  5079                           ; 1 bytes @ 0x3
  5080                           
  5081                           
  5082                           ; 1 bytes @ 0x3
  5083  0073                     	ds	1
  5084  0074                     ?_print_screen:	
  5085  0074                     ?_Vout_set:	
  5086                           ; 1 bytes @ 0x4
  5087                           
  5088  0074                     init_i2c_lcd_5v@contrast:	
  5089                           ; 1 bytes @ 0x4
  5090                           
  5091  0074                     ___ftpack@sign:	
  5092                           ; 1 bytes @ 0x4
  5093                           
  5094  0074                     print_screen@top:	
  5095                           ; 1 bytes @ 0x4
  5096                           
  5097  0074                     ADC_get_val@return_val:	
  5098                           ; 2 bytes @ 0x4
  5099                           
  5100  0074                     Vout_set@Volts:	
  5101                           ; 2 bytes @ 0x4
  5102                           
  5103                           
  5104                           ; 2 bytes @ 0x4
  5105  0074                     	ds	1
  5106  0075                     ??___ftpack:	
  5107                           
  5108                           ; 1 bytes @ 0x5
  5109  0075                     	ds	1
  5110  0076                     ??_Vout_set:	
  5111  0076                     print_screen@bottom:	
  5112                           ; 1 bytes @ 0x6
  5113                           
  5114  0076                     Vout_set@digi_step:	
  5115                           ; 2 bytes @ 0x6
  5116                           
  5117                           
  5118                           ; 4 bytes @ 0x6
  5119  0076                     	ds	2
  5120  0078                     ??_print_screen:	
  5121  0078                     ?___lwtoft:	
  5122                           ; 1 bytes @ 0x8
  5123                           
  5124  0078                     ___lwtoft@c:	
  5125                           ; 3 bytes @ 0x8
  5126                           
  5127                           
  5128                           ; 2 bytes @ 0x8
  5129  0078                     	ds	3
  5130  007B                     ??___ftmul:	
  5131  007B                     ??___lwtoft:	
  5132                           ; 1 bytes @ 0xB
  5133                           
  5134                           
  5135                           ; 1 bytes @ 0xB
  5136  007B                     	ds	3
  5137  007E                     ??_get_30v_current:	
  5138                           
  5139                           	psect	cstackBANK0
  5140  0020                     __pcstackBANK0:	
  5141                           ; 1 bytes @ 0xE
  5142                           
  5143  0020                     ?___ftmul:	
  5144  0020                     ___ftmul@f1:	
  5145                           ; 3 bytes @ 0x0
  5146                           
  5147                           
  5148                           ; 3 bytes @ 0x0
  5149  0020                     	ds	3
  5150  0023                     ___ftmul@f2:	
  5151                           
  5152                           ; 3 bytes @ 0x3
  5153  0023                     	ds	3
  5154  0026                     ___ftmul@exp:	
  5155                           
  5156                           ; 1 bytes @ 0x6
  5157  0026                     	ds	1
  5158  0027                     ___ftmul@f3_as_product:	
  5159                           
  5160                           ; 3 bytes @ 0x7
  5161  0027                     	ds	3
  5162  002A                     ___ftmul@cntr:	
  5163                           
  5164                           ; 1 bytes @ 0xA
  5165  002A                     	ds	1
  5166  002B                     ___ftmul@sign:	
  5167                           
  5168                           ; 1 bytes @ 0xB
  5169  002B                     	ds	1
  5170  002C                     ?___ftadd:	
  5171  002C                     ___ftadd@f1:	
  5172                           ; 3 bytes @ 0xC
  5173                           
  5174                           
  5175                           ; 3 bytes @ 0xC
  5176  002C                     	ds	3
  5177  002F                     ___ftadd@f2:	
  5178                           
  5179                           ; 3 bytes @ 0xF
  5180  002F                     	ds	3
  5181  0032                     ??___ftadd:	
  5182                           
  5183                           ; 1 bytes @ 0x12
  5184  0032                     	ds	3
  5185  0035                     ___ftadd@sign:	
  5186                           
  5187                           ; 1 bytes @ 0x15
  5188  0035                     	ds	1
  5189  0036                     ___ftadd@exp2:	
  5190                           
  5191                           ; 1 bytes @ 0x16
  5192  0036                     	ds	1
  5193  0037                     ___ftadd@exp1:	
  5194                           
  5195                           ; 1 bytes @ 0x17
  5196  0037                     	ds	1
  5197  0038                     ?___fttol:	
  5198  0038                     ___fttol@f1:	
  5199                           ; 4 bytes @ 0x18
  5200                           
  5201                           
  5202                           ; 3 bytes @ 0x18
  5203  0038                     	ds	4
  5204  003C                     ??___fttol:	
  5205                           
  5206                           ; 1 bytes @ 0x1C
  5207  003C                     	ds	3
  5208  003F                     ___fttol@sign1:	
  5209                           
  5210                           ; 1 bytes @ 0x1F
  5211  003F                     	ds	1
  5212  0040                     ___fttol@lval:	
  5213                           
  5214                           ; 4 bytes @ 0x20
  5215  0040                     	ds	4
  5216  0044                     ___fttol@exp1:	
  5217                           
  5218                           ; 1 bytes @ 0x24
  5219  0044                     	ds	1
  5220  0045                     ?_set_current_sink:	
  5221  0045                     ?_get_30v_current:	
  5222                           ; 1 bytes @ 0x25
  5223                           
  5224  0045                     set_current_sink@value:	
  5225                           ; 2 bytes @ 0x25
  5226                           
  5227                           
  5228                           ; 2 bytes @ 0x25
  5229  0045                     	ds	2
  5230  0047                     set_current_sink@source:	
  5231  0047                     get_30v_current@temp:	
  5232                           ; 1 bytes @ 0x27
  5233                           
  5234                           
  5235                           ; 2 bytes @ 0x27
  5236  0047                     	ds	1
  5237  0048                     ??_set_current_sink:	
  5238                           
  5239                           ; 1 bytes @ 0x28
  5240  0048                     	ds	2
  5241  004A                     ?_print_error:	
  5242  004A                     ??_testjig_done:	
  5243                           ; 1 bytes @ 0x2A
  5244                           
  5245  004A                     print_error@top:	
  5246                           ; 1 bytes @ 0x2A
  5247                           
  5248                           
  5249                           ; 2 bytes @ 0x2A
  5250  004A                     	ds	2
  5251  004C                     print_error@bottom:	
  5252                           
  5253                           ; 2 bytes @ 0x2C
  5254  004C                     	ds	1
  5255  004D                     testjig_done@state:	
  5256                           
  5257                           ; 1 bytes @ 0x2D
  5258  004D                     	ds	1
  5259  004E                     ??_print_error:	
  5260                           
  5261                           ; 1 bytes @ 0x2E
  5262  004E                     	ds	3
  5263  0051                     ??_main:	
  5264                           
  5265                           ; 1 bytes @ 0x31
  5266  0051                     	ds	3
  5267                           
  5268                           	psect	swtext1
  5269  00AB                     __pswtext1:	
  5270  00AB                     S2742:	
  5271  00AB  318D  2D35         	ljmp	l2162
  5272  00AD  318D  2D27         	ljmp	l536
  5273  00AF  318D  2D2A         	ljmp	l538
  5274  00B1  318D  2D2E         	ljmp	l539
  5275                           
  5276                           	psect	swtext2
  5277  00B3                     __pswtext2:	
  5278  00B3                     S2744:	
  5279  00B3  318C  2C37         	ljmp	l548
  5280  00B5  318C  2C3C         	ljmp	l550
  5281  00B7  318C  2C41         	ljmp	l551
  5282  00B9  318C  2C46         	ljmp	l552
  5283                           
  5284                           	psect	swtext3
  5285  0085                     __pswtext3:	
  5286  0085                     S2748:	
  5287  0085  318E  2E89         	ljmp	l2292
  5288  0087  318E  2E8B         	ljmp	l2294
  5289  0089  318E  2E8D         	ljmp	l2296
  5290  008B  318E  2E8F         	ljmp	l2298
  5291  008D  318E  2E91         	ljmp	l2300
  5292  008F  318E  2E93         	ljmp	l2302
  5293  0091  318E  2E95         	ljmp	l2304
  5294  0093  318E  2E97         	ljmp	l2306
  5295  0095  318E  2E99         	ljmp	l2308
  5296  0097  318E  2E9B         	ljmp	l2310
  5297  0099  318E  2E9D         	ljmp	l2312
  5298  009B  318E  2E9F         	ljmp	l2314
  5299  009D  318E  2EA1         	ljmp	l2316
  5300                           
  5301                           	psect	intentry
  5302  0004                     __pintentry:	
  5303 ;; *************** function _isr *****************
  5304 ;; Defined at:
  5305 ;;		line 311 in file "Multi_RX_testjig_v1.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;		None
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;		None
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      void 
  5312 ;; Registers used:
  5313 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 1F/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5323 ;;Total ram usage:        0 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		Interrupt level 1
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332  0004                     _isr:	
  5333                           
  5334                           ;incstack = 0
  5335  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5336                           
  5337                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  5338  0005  3180               	pagesel	$
  5339                           
  5340                           ;Multi_RX_testjig_v1.c: 313: if(INTCONbits.TMR0IF == 1)
  5341  0006  1D0B               	btfss	11,2	;volatile
  5342  0007  2822               	goto	i1l2412
  5343                           
  5344                           ;Multi_RX_testjig_v1.c: 314: {
  5345                           ;Multi_RX_testjig_v1.c: 316: if(testjig_timer)
  5346  0008  0020               	movlb	0	; select bank0
  5347  0009  0860               	movf	_testjig_timer,w	;volatile
  5348  000A  0461               	iorwf	_testjig_timer+1,w	;volatile
  5349  000B  1903               	btfsc	3,2
  5350  000C  2811               	goto	i1l2404
  5351                           
  5352                           ;Multi_RX_testjig_v1.c: 317: testjig_timer--;
  5353  000D  3001               	movlw	1
  5354  000E  02E0               	subwf	_testjig_timer,f	;volatile
  5355  000F  3000               	movlw	0
  5356  0010  3BE1               	subwfb	_testjig_timer+1,f	;volatile
  5357  0011                     i1l2404:	
  5358                           
  5359                           ;Multi_RX_testjig_v1.c: 318: if(uart_receive_timer)
  5360  0011  0862               	movf	_uart_receive_timer,w	;volatile
  5361  0012  0463               	iorwf	_uart_receive_timer+1,w	;volatile
  5362  0013  1903               	btfsc	3,2
  5363  0014  2819               	goto	i1l261
  5364                           
  5365                           ;Multi_RX_testjig_v1.c: 319: uart_receive_timer--;
  5366  0015  30FF               	movlw	-1
  5367  0016  07E2               	addwf	_uart_receive_timer,f	;volatile
  5368  0017  1C03               	skipc
  5369  0018  03E3               	decf	_uart_receive_timer+1,f	;volatile
  5370  0019                     i1l261:	
  5371                           
  5372                           ;Multi_RX_testjig_v1.c: 320: if(motor_direction_timer)
  5373  0019  085C               	movf	_motor_direction_timer,w	;volatile
  5374  001A  045D               	iorwf	_motor_direction_timer+1,w	;volatile
  5375  001B  1903               	btfsc	3,2
  5376  001C  2821               	goto	i1l2410
  5377                           
  5378                           ;Multi_RX_testjig_v1.c: 321: motor_direction_timer--;
  5379  001D  30FF               	movlw	-1
  5380  001E  07DC               	addwf	_motor_direction_timer,f	;volatile
  5381  001F  1C03               	skipc
  5382  0020  03DD               	decf	_motor_direction_timer+1,f	;volatile
  5383  0021                     i1l2410:	
  5384                           
  5385                           ;Multi_RX_testjig_v1.c: 323: INTCONbits.TMR0IF = 0;
  5386  0021  110B               	bcf	11,2	;volatile
  5387  0022                     i1l2412:	
  5388                           
  5389                           ;Multi_RX_testjig_v1.c: 325: }
  5390                           ;Multi_RX_testjig_v1.c: 326: if(PIR1bits.TMR2IF == 1)
  5391  0022  0020               	movlb	0	; select bank0
  5392  0023  1C91               	btfss	17,1	;volatile
  5393  0024  2881               	goto	i1l281
  5394                           
  5395                           ;Multi_RX_testjig_v1.c: 327: {
  5396                           ;Multi_RX_testjig_v1.c: 329: if(pickit_timer)
  5397  0025  085E               	movf	_pickit_timer,w	;volatile
  5398  0026  045F               	iorwf	_pickit_timer+1,w	;volatile
  5399  0027  1903               	btfsc	3,2
  5400  0028  285C               	goto	i1l2434
  5401                           
  5402                           ;Multi_RX_testjig_v1.c: 330: pickit_timer--;
  5403  0029  3001               	movlw	1
  5404  002A  02DE               	subwf	_pickit_timer,f	;volatile
  5405  002B  3000               	movlw	0
  5406  002C  3BDF               	subwfb	_pickit_timer+1,f	;volatile
  5407  002D  2866               	goto	i1l2436
  5408  002E                     i1l267:	
  5409                           ;Multi_RX_testjig_v1.c: 334: {
  5410                           ;Multi_RX_testjig_v1.c: 335: case pickit_start:
  5411                           
  5412                           
  5413                           ;Multi_RX_testjig_v1.c: 336: LATC2 = 1;
  5414  002E  0022               	movlb	2	; select bank2
  5415  002F  150E               	bsf	14,2	;volatile
  5416                           
  5417                           ;Multi_RX_testjig_v1.c: 337: LATC7 = 1;
  5418  0030  178E               	bsf	14,7	;volatile
  5419                           
  5420                           ;Multi_RX_testjig_v1.c: 338: pickit_timer = 10;
  5421  0031  300A               	movlw	10
  5422  0032  0020               	movlb	0	; select bank0
  5423  0033  00DE               	movwf	_pickit_timer	;volatile
  5424  0034  01DF               	clrf	_pickit_timer+1	;volatile
  5425                           
  5426                           ;Multi_RX_testjig_v1.c: 339: pickit_state = pickit_push_button;
  5427  0035  3002               	movlw	2
  5428  0036  285A               	goto	L23
  5429  0037                     i1l2420:	
  5430                           ;Multi_RX_testjig_v1.c: 340: break;
  5431                           
  5432                           
  5433                           ;Multi_RX_testjig_v1.c: 342: pickit_timer = 1000;
  5434  0037  30E8               	movlw	232
  5435  0038  00DE               	movwf	_pickit_timer	;volatile
  5436  0039  3003               	movlw	3
  5437  003A  00DF               	movwf	_pickit_timer+1	;volatile
  5438                           
  5439                           ;Multi_RX_testjig_v1.c: 343: LATC6 = 1;
  5440  003B  0022               	movlb	2	; select bank2
  5441  003C  170E               	bsf	14,6	;volatile
  5442                           
  5443                           ;Multi_RX_testjig_v1.c: 344: pickit_state = pickit_busy;
  5444  003D  2859               	goto	L24
  5445  003E                     i1l270:	
  5446                           ;Multi_RX_testjig_v1.c: 346: case pickit_busy:
  5447                           
  5448                           ;Multi_RX_testjig_v1.c: 345: break;
  5449                           
  5450                           
  5451                           ;Multi_RX_testjig_v1.c: 347: LATC6 = 0;
  5452  003E  0022               	movlb	2	; select bank2
  5453  003F  130E               	bcf	14,6	;volatile
  5454                           
  5455                           ;Multi_RX_testjig_v1.c: 348: if(RE5 == 0)
  5456  0040  0020               	movlb	0	; select bank0
  5457  0041  1A90               	btfsc	16,5	;volatile
  5458  0042  284A               	goto	i1l271
  5459                           
  5460                           ;Multi_RX_testjig_v1.c: 349: {
  5461                           ;Multi_RX_testjig_v1.c: 350: pickit_state = pickit_error;
  5462  0043  3004               	movlw	4
  5463  0044  00E8               	movwf	_pickit_state
  5464                           
  5465                           ;Multi_RX_testjig_v1.c: 351: pickit_timer = 1000;
  5466  0045  30E8               	movlw	232
  5467  0046  00DE               	movwf	_pickit_timer	;volatile
  5468  0047  3003               	movlw	3
  5469  0048  00DF               	movwf	_pickit_timer+1	;volatile
  5470                           
  5471                           ;Multi_RX_testjig_v1.c: 352: }
  5472  0049  284D               	goto	i1l2428
  5473  004A                     i1l271:	
  5474                           
  5475                           ;Multi_RX_testjig_v1.c: 353: else if(RE4 == 0)
  5476  004A  1A10               	btfsc	16,4	;volatile
  5477  004B  284D               	goto	i1l2428
  5478                           
  5479                           ;Multi_RX_testjig_v1.c: 354: {
  5480                           ;Multi_RX_testjig_v1.c: 355: pickit_state = pickit_finish;
  5481  004C  01E8               	clrf	_pickit_state
  5482  004D                     i1l2428:	
  5483                           
  5484                           ;Multi_RX_testjig_v1.c: 356: }
  5485                           ;Multi_RX_testjig_v1.c: 357: pickit_timer = 100;
  5486  004D  3064               	movlw	100
  5487  004E  00DE               	movwf	_pickit_timer	;volatile
  5488  004F  01DF               	clrf	_pickit_timer+1	;volatile
  5489                           
  5490                           ;Multi_RX_testjig_v1.c: 358: break;
  5491  0050  2866               	goto	i1l2436
  5492  0051                     i1l274:	
  5493                           ;Multi_RX_testjig_v1.c: 359: case pickit_error:
  5494                           
  5495                           
  5496                           ;Multi_RX_testjig_v1.c: 360: LATC2 = 0;
  5497  0051  0022               	movlb	2	; select bank2
  5498  0052  110E               	bcf	14,2	;volatile
  5499                           
  5500                           ;Multi_RX_testjig_v1.c: 361: LATC7 = 0;
  5501  0053  138E               	bcf	14,7	;volatile
  5502                           
  5503                           ;Multi_RX_testjig_v1.c: 362: break;
  5504  0054  2866               	goto	i1l2436
  5505  0055                     i1l275:	
  5506                           ;Multi_RX_testjig_v1.c: 363: case pickit_finish:
  5507                           
  5508                           
  5509                           ;Multi_RX_testjig_v1.c: 364: LATC2 = 0;
  5510  0055  0022               	movlb	2	; select bank2
  5511  0056  110E               	bcf	14,2	;volatile
  5512                           
  5513                           ;Multi_RX_testjig_v1.c: 365: LATC7 = 0;
  5514  0057  138E               	bcf	14,7	;volatile
  5515                           
  5516                           ;Multi_RX_testjig_v1.c: 366: pickit_state = pickit_idle;
  5517  0058  3005               	movlw	5
  5518  0059                     L24:	
  5519  0059  0020               	movlb	0	; select bank0
  5520  005A                     L23:	
  5521  005A  00E8               	movwf	_pickit_state
  5522                           
  5523                           ;Multi_RX_testjig_v1.c: 367: break;
  5524  005B  2866               	goto	i1l2436
  5525  005C                     i1l2434:	
  5526  005C  0868               	movf	_pickit_state,w
  5527                           
  5528                           ; Switch size 1, requested type "speed"
  5529                           ; Number of cases is 6, Range of values is 0 to 5
  5530                           ; switch strategies available:
  5531                           ; Name         Instructions Cycles
  5532                           ; direct_byte           18     6 (fixed)
  5533                           ; simple_byte           19    10 (average)
  5534                           ; jumptable            260     6 (fixed)
  5535                           ;	Chosen strategy is direct_byte
  5536  005D  0084               	movwf	4
  5537  005E  3006               	movlw	6
  5538  005F  0204               	subwf	4,w
  5539  0060  1803               	skipnc
  5540  0061  2866               	goto	i1l2436
  5541  0062  3180               	movlp	high i1S2750
  5542  0063  3504               	lslf	4,w
  5543  0064  3E9F               	addlw	low i1S2750
  5544  0065  0082               	movwf	2
  5545  0066                     i1l2436:	
  5546                           
  5547                           ;Multi_RX_testjig_v1.c: 371: }
  5548                           ;Multi_RX_testjig_v1.c: 433: if(buzz_timer)
  5549  0066  0020               	movlb	0	; select bank0
  5550  0067  0866               	movf	_buzz_timer,w	;volatile
  5551  0068  0467               	iorwf	_buzz_timer+1,w	;volatile
  5552  0069  1903               	btfsc	3,2
  5553  006A  2870               	goto	i1l277
  5554                           
  5555                           ;Multi_RX_testjig_v1.c: 434: buzz_timer--;
  5556  006B  3001               	movlw	1
  5557  006C  02E6               	subwf	_buzz_timer,f	;volatile
  5558  006D  3000               	movlw	0
  5559  006E  3BE7               	subwfb	_buzz_timer+1,f	;volatile
  5560  006F  2872               	goto	i1l2440
  5561  0070                     i1l277:	
  5562                           
  5563                           ;Multi_RX_testjig_v1.c: 435: else
  5564                           ;Multi_RX_testjig_v1.c: 436: LATC5 = 0;
  5565  0070  0022               	movlb	2	; select bank2
  5566  0071  128E               	bcf	14,5	;volatile
  5567  0072                     i1l2440:	
  5568                           
  5569                           ;Multi_RX_testjig_v1.c: 437: if(one_second_timer)
  5570  0072  0020               	movlb	0	; select bank0
  5571  0073  0869               	movf	_one_second_timer,w	;volatile
  5572  0074  046A               	iorwf	_one_second_timer+1,w	;volatile
  5573  0075  1903               	btfsc	3,2
  5574  0076  287C               	goto	i1l2444
  5575                           
  5576                           ;Multi_RX_testjig_v1.c: 438: one_second_timer--;
  5577  0077  3001               	movlw	1
  5578  0078  02E9               	subwf	_one_second_timer,f	;volatile
  5579  0079  3000               	movlw	0
  5580  007A  3BEA               	subwfb	_one_second_timer+1,f	;volatile
  5581  007B  2880               	goto	i1l2446
  5582  007C                     i1l2444:	
  5583                           
  5584                           ;Multi_RX_testjig_v1.c: 439: else
  5585                           ;Multi_RX_testjig_v1.c: 440: {
  5586                           ;Multi_RX_testjig_v1.c: 441: one_second_timer = 1000;
  5587  007C  30E8               	movlw	232
  5588  007D  00E9               	movwf	_one_second_timer	;volatile
  5589  007E  3003               	movlw	3
  5590  007F  00EA               	movwf	_one_second_timer+1	;volatile
  5591  0080                     i1l2446:	
  5592                           
  5593                           ;Multi_RX_testjig_v1.c: 442: }
  5594                           ;Multi_RX_testjig_v1.c: 443: PIR1bits.TMR2IF = 0;
  5595  0080  1091               	bcf	17,1	;volatile
  5596  0081                     i1l281:	
  5597  0081  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5598  0082  0009               	retfie
  5599  0083                     __end_of_isr:	
  5600  007E                     btemp	set	126	;btemp
  5601  007E                     int$flags	set	126
  5602  007E                     wtemp	set	126
  5603  007E                     wtemp0	set	126
  5604  0080                     wtemp1	set	128
  5605  0082                     wtemp2	set	130
  5606  0084                     wtemp3	set	132
  5607  0086                     wtemp4	set	134
  5608  0088                     wtemp5	set	136
  5609  007F                     wtemp6	set	127
  5610  007E                     ttemp	set	126
  5611  007E                     ttemp0	set	126
  5612  0081                     ttemp1	set	129
  5613  0084                     ttemp2	set	132
  5614  0087                     ttemp3	set	135
  5615  007F                     ttemp4	set	127
  5616  007E                     ltemp	set	126
  5617  007E                     ltemp0	set	126
  5618  0082                     ltemp1	set	130
  5619  0086                     ltemp2	set	134
  5620  0080                     ltemp3	set	128
  5621                           
  5622                           	psect	swtext4
  5623  009F                     __pswtext4:	
  5624  009F                     i1S2750:	
  5625  009F  3180  2855         	ljmp	i1l275
  5626  00A1  3180  282E         	ljmp	i1l267
  5627  00A3  3180  2837         	ljmp	i1l2420
  5628  00A5  3180  283E         	ljmp	i1l270
  5629  00A7  3180  2851         	ljmp	i1l274
  5630  00A9  3180  2866         	ljmp	i1l2436


Data Sizes:
    Strings     293
    Constant    0
    Data        2
    BSS         18
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      75
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0

Pointer List with Targets:

    print_screen@bottom	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_48(CODE[17]), STR_46(CODE[13]), STR_44(CODE[14]), STR_42(CODE[8]), 
		 -> STR_40(CODE[8]), STR_38(CODE[14]), STR_36(CODE[1]), STR_34(CODE[9]), 
		 -> STR_30(CODE[13]), STR_28(CODE[1]), STR_6(CODE[1]), STR_2(CODE[17]), 

    print_screen@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_47(CODE[12]), STR_45(CODE[17]), STR_43(CODE[17]), STR_41(CODE[17]), 
		 -> STR_39(CODE[9]), STR_37(CODE[13]), STR_35(CODE[7]), STR_33(CODE[19]), 
		 -> STR_29(CODE[12]), STR_27(CODE[19]), STR_5(CODE[15]), STR_1(CODE[9]), 

    print_error@bottom	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_32(CODE[6]), STR_26(CODE[12]), STR_24(CODE[11]), STR_22(CODE[13]), 
		 -> STR_20(CODE[13]), STR_18(CODE[13]), STR_16(CODE[13]), STR_14(CODE[12]), 
		 -> STR_12(CODE[11]), STR_10(CODE[13]), STR_8(CODE[13]), STR_4(CODE[14]), 

    print_error@top	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_31(CODE[12]), STR_25(CODE[14]), STR_23(CODE[14]), STR_21(CODE[15]), 
		 -> STR_19(CODE[15]), STR_17(CODE[14]), STR_15(CODE[14]), STR_13(CODE[14]), 
		 -> STR_11(CODE[14]), STR_9(CODE[14]), STR_7(CODE[14]), STR_3(CODE[9]), 

    i2c_Write_string@data	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_48(CODE[17]), STR_47(CODE[12]), STR_46(CODE[13]), STR_45(CODE[17]), 
		 -> STR_44(CODE[14]), STR_43(CODE[17]), STR_42(CODE[8]), STR_41(CODE[17]), 
		 -> STR_40(CODE[8]), STR_39(CODE[9]), STR_38(CODE[14]), STR_37(CODE[13]), 
		 -> STR_36(CODE[1]), STR_35(CODE[7]), STR_34(CODE[9]), STR_33(CODE[19]), 
		 -> STR_32(CODE[6]), STR_31(CODE[12]), STR_30(CODE[13]), STR_29(CODE[12]), 
		 -> STR_28(CODE[1]), STR_27(CODE[19]), STR_26(CODE[12]), STR_25(CODE[14]), 
		 -> STR_24(CODE[11]), STR_23(CODE[14]), STR_22(CODE[13]), STR_21(CODE[15]), 
		 -> STR_20(CODE[13]), STR_19(CODE[15]), STR_18(CODE[13]), STR_17(CODE[14]), 
		 -> STR_16(CODE[13]), STR_15(CODE[14]), STR_14(CODE[12]), STR_13(CODE[14]), 
		 -> STR_12(CODE[11]), STR_11(CODE[14]), STR_10(CODE[13]), STR_9(CODE[14]), 
		 -> STR_8(CODE[13]), STR_7(CODE[14]), STR_6(CODE[1]), STR_5(CODE[15]), 
		 -> STR_4(CODE[14]), STR_3(CODE[9]), STR_2(CODE[17]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _set_current_sink->___ftmul
    _print_screen->_i2c_Write_string
    _i2c_second_line->_i2c_Write
    _i2c_first_line->_i2c_Write
    _i2c_Write_string->_i2c_Write
    _clear_lcd->_i2c_Write
    _init_i2c_lcd_5v->_i2c_Write
    _get_30v_current->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    ___ftadd->___ftmul
    _Vout_set->_digitalpot
    _digitalpot->_i2c_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_print_error
    _testjig_done->_set_current_sink
    _print_error->_set_current_sink
    _set_current_sink->___fttol
    _get_30v_current->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   32570
                                             49 BANK0      3     3      0
                        _ADC_get_val
                           _Vout_set
                           _buzz_one
                      _debug_fast_tx
                       _disable_uart
                        _enable_uart
                    _get_30v_current
                           _init_ADC
                  _init_current_sink
                           _init_i2c
                    _init_i2c_lcd_5v
                         _init_uart2
                   _power_supply_set
                        _print_error
                       _print_screen
                       _testjig_done
                         _uart_reset
 ---------------------------------------------------------------------------------
 (1) _testjig_done                                         4     4      0   10342
                                             42 BANK0      4     4      0
                           _buzz_one
                      _debug_fast_tx
                   _power_supply_set
                       _print_screen
                   _set_current_sink
 ---------------------------------------------------------------------------------
 (1) _print_error                                          7     3      4   11957
                                             42 BANK0      7     3      4
                           _buzz_one
                          _clear_lcd
                      _debug_fast_tx
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
                   _power_supply_set
                       _print_screen
                   _set_current_sink
 ---------------------------------------------------------------------------------
 (2) _set_current_sink                                     5     2      3    7886
                                             37 BANK0      5     2      3
                            ___ftadd
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) _print_screen                                         4     0      4    1661
                                              4 COMMON     4     0      4
                          _clear_lcd
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
 ---------------------------------------------------------------------------------
 (3) _i2c_second_line                                      1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_first_line                                       1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write_string                                     3     1      2     279
                                              1 COMMON     3     1      2
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _clear_lcd                                            2     2      0      22
                                              1 COMMON     2     2      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _power_supply_set                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _debug_fast_tx                                        3     1      2     493
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _buzz_one                                             2     0      2     234
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_i2c_lcd_5v                                      4     3      1     141
                                              1 COMMON     4     3      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init_current_sink                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_30v_current                                      4     2      2    7465
                                             37 BANK0      4     2      2
                        _ADC_get_val
                            ___ftadd
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    1849
                                              8 COMMON     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             13     9      4     411
                                             24 BANK0     13     9      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2314
                                             11 COMMON     3     3      0
                                              0 BANK0     12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    2800
                                             12 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _ADC_get_val                                          6     3      3      46
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _enable_uart                                          0     0      0       0
                         _uart_reset
 ---------------------------------------------------------------------------------
 (1) _uart_reset                                           1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _disable_uart                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Vout_set                                             6     4      2     209
                                              4 COMMON     6     4      2
                         _digitalpot
 ---------------------------------------------------------------------------------
 (2) _digitalpot                                           3     3      0      44
                                              1 COMMON     3     3      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (4) _i2c_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_get_val
   _Vout_set
     _digitalpot
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _buzz_one
   _debug_fast_tx
   _disable_uart
   _enable_uart
     _uart_reset
   _get_30v_current
     _ADC_get_val
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _init_ADC
   _init_current_sink
   _init_i2c
   _init_i2c_lcd_5v
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _init_uart2
   _power_supply_set
   _print_error
     _buzz_one
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _debug_fast_tx
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
     _set_current_sink
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
   _print_screen
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _testjig_done
     _buzz_one
     _debug_fast_tx
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
     _set_current_sink
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
   _uart_reset

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      4B       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0      59      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      59      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Oct 06 12:22:48 2016

         _motor_direction_timer 005C                  ??_disable_uart 0070             ??_init_current_sink 0070  
                             pc 0002                     __CFG_CP$OFF 0000                _power_supply_set 0C35  
                  ___ftadd@exp1 0037                    ___ftadd@exp2 0036                    ___ftadd@sign 0035  
                           l321 0BC2                             l330 08C9                             l335 092C  
                           l327 087A                             l338 0946                             l355 0D17  
                           l291 0AA5                             l364 0E75                             l380 0D00  
                           l284 0A16                             l349 0D22                             l526 0BD8  
                           l550 0C3C                             l551 0C41                             l552 0C46  
                           l536 0D27                             l538 0D2A                             l539 0D2E  
                           l548 0C37                             l750 0F84                             l583 0965  
                           l576 0EA4                             l762 0FA9                             l786 0F40  
                           _GIE 005F                             _RA2 0062                             _RA4 0064  
                           _RA5 0065               ??_i2c_second_line 0071                             _RE4 0084  
                           _RF3 1463                             _RE5 0085                             _PR2 001B  
                           _PR8 0596                             _isr 0004                    __CFG_BORV$HI 0000  
                           wreg 0009                            S2742 00AB                            S2744 00B3  
                          S2748 0085                    __CFG_LVP$OFF 0000       __end_of_init_current_sink 0FDE  
                          l2000 0F56                            l2012 0F6A                            l2020 0DBD  
                          l2100 0E5C                            l2120 0EC2                            l2024 0DCE  
                          l2104 0E6A                            l2042 0DE2                            l2300 0E91  
                          l2116 0EBD                            l2310 0E9B                            l2302 0E93  
                          l2054 0DF4                            l2046 0DEA                            l2070 0E23  
                          l2312 0E9D                            l2304 0E95                            l2320 0EA9  
                          l2072 0E28                            l2136 096C                            l2144 0C4B  
                          l2314 0E9F                            l2306 0E97                            l2322 0EBB  
                          l2058 0DFC                            l2162 0D35                            l2316 0EA1  
                          l2308 0E99                            l2092 0E4F                            l2342 0C32  
                          l2254 0CF9                            l2166 0D3C                            l2088 0E48  
                          l2184 0DA9                            l2168 0D46                            l2360 08A2  
                          l2600 0B27                            l2098 0E53                            l2186 0DAA  
                          l2274 0C86                            l2292 0E89                            l2372 08DA  
                          l2604 0B3A                            l2612 0B59                            l2294 0E8B  
                          l2382 090F                            l2550 0A3F                            l2296 0E8D  
                          l2624 0B8A                            l2632 0B9E                            l2608 0B4B  
                          l2560 0A73                            l2298 0E8F                            l1906 0CC8  
                          l2386 0913                            l2626 0B86                            l1908 0CDA  
                          l2388 091C                            l2636 0BB6                            l2628 0B8F  
                          l2564 0A86                            l2556 0A60                            l2548 0A56  
                          l1870 0E73                            l1950 0EF2                            l1880 0F91  
                          l2592 0B05                            l2576 0AEC                            l2568 0A97  
                          l1866 0D19                            l2746 0EAE                            l1882 0F9A  
                          l1946 0EEB                            l2578 0AC1                            l1876 0F88  
                          l1980 0F2A                            l1956 0F01                            l2596 0B14  
                          l2588 0AF6                            l1886 0FA7                            l1878 0F8C  
                          l1974 0F1D                            l1888 0F9F                            l1976 0F21  
                          l1968 0F0F                            l1896 0CC0                            l1994 0F4B  
                          l1986 0F38                            l1978 0F26                            l1988 0F3C  
                          ?_isr 0070                            STR_1 1104                            STR_2 1035  
                          STR_3 1104                            STR_4 1075                            STR_5 1057  
                          STR_6 111D                            STR_7 1091                            STR_8 10BA  
                          STR_9 1091                            u2007 08BE                            u2017 08D3  
                          u2107 0836                            u2027 08F1                            u2117 0847  
                          u2037 0908                            u2127 085A                            u2047 0936  
                          u1440 096A                            u2137 0D0D                            u2057 0950  
                          u2147 0FE5                            u2067 0C75                            u2157 0872  
                          u1365 0E2F                            u2077 0CA1                            u2087 0CB8  
                          u2097 0D9E                            u1917 09EE                            u1927 09FC  
                          u1937 0A06                            u1947 0A2F                            u1957 0AB4  
                          u1967 0B72                            u1977 0BAF                            u1987 0BCC  
                          u1997 0891                            _TMR0 0015                            _WPUB 020D  
                          _WPUD 020F                            _WPUE 0210                    __CFG_WRT$OFF 0000  
                          _main 0985                    ___ftpack@arg 0070                    ___ftpack@exp 0073  
                          _thou 0065                            fsr0h 0005                            fsr0l 0004  
                          indf0 0000                            btemp 007E               ??_get_30v_current 007E  
                 __CFG_BOREN$ON 0000                            ltemp 007E                            start 0083  
                          ttemp 007E                            wtemp 007E                   __CFG_IESO$OFF 0000  
                 __CFG_MCLRE$ON 0000                    ___ftmul@cntr 002A                    ___ftmul@sign 002B  
               digitalpot@value 0073            __size_of_ADC_get_val 0012         __end_of_init_i2c_lcd_5v 0D13  
                  ___fttol@exp1 0044                    ___fttol@lval 0040                           ??_isr 0070  
                _i2c_first_line 083A                           ?_main 0070                 __end_of___ftadd 0F7C  
                         STR_10 10AD                           STR_11 1091                           STR_20 10BA  
                         STR_12 10F9                           STR_21 1066                           STR_13 1091  
                         STR_22 10AD                           STR_30 1006                           STR_14 10ED  
                         STR_31 1007                           STR_23 109F                           STR_15 109F  
                         STR_16 10BA                           STR_40 101C                           STR_32 10FE  
                         STR_24 10F9                           STR_33 1000                           STR_25 109F  
                         STR_17 109F                           STR_41 1024                           STR_18 10AD  
                         STR_26 10ED                           STR_42 1116                           STR_34 110D  
                         STR_35 111E                           STR_19 1066                           STR_43 1013  
                         STR_27 1000                           STR_36 111D                           STR_28 111D  
                         STR_44 1075                           STR_45 1013                           STR_29 10E1  
                         STR_37 10D4                           STR_46 10C7                           STR_38 1083  
                         STR_47 10C8                           STR_39 1104                           STR_48 1046  
               __end_of___ftmul 0E16                 __end_of___fttol 0E73                           _T2CON 001C  
                         _LATC2 0872                           _LATB4 086C                           _LATB5 086D  
                         _LATA7 0867                           _LATD2 087A                           _LATC5 0875  
                         _LATD4 087C                           _LATC6 0876                           _LATD5 087D  
                         _LATC7 0877                           _LATG0 1C68                           _LATD6 087E  
                         _RC2IF 00A5           __end_of_debug_fast_tx 0985                           _T8CON 0597  
                         i1l261 0019                           i1l270 003E                           i1l271 004A  
                         i1l281 0081                           i1l274 0051                           i1l275 0055  
                         i1l267 002E                           i1l277 0070                           _PORTA 000C  
                         _PORTB 000D                           _PORTC 000E                           _PORTD 000F  
                         _PORTE 0010                           _PORTF 028C                           _PORTG 028D  
                         _TRISA 008C                           _TRISB 008D                           _TRISC 008E  
                         _TRISD 008F                           _TRISE 0090                           _TRISF 030C  
                         _TRISG 030D                  __CFG_FCMEN$OFF 0000              _current_sink_timer 005A  
            _current_sink_state 0064        __end_of_i2c_Write_string 0CDB                   ___ftpack@sign 0074  
                         ltemp0 007E                           ltemp1 0082                           ltemp2 0086  
                         ltemp3 0080                           ttemp0 007E                           ttemp1 0081  
                         ttemp2 0084                           ttemp3 0087                           ttemp4 007F  
                         status 0003                           wtemp0 007E                           wtemp1 0080  
                         wtemp2 0082                           wtemp3 0084                           wtemp4 0086  
                         wtemp5 0088                           wtemp6 007F                 __initialization 081A  
                  __end_of_main 0BD3          __end_of_i2c_first_line 084B                __end_of_i2c_Stop 0E78  
                __CFG_LPBOR$OFF 0000                          ??_main 0051                   ___fttol@sign1 003F  
      __end_of_set_current_sink 0DAC                          _ADCON0 009D                          _ADCON1 009E  
          __size_of_enable_uart 0004            __end_of_disable_uart 0FBE                          i1S2750 009F  
                        _ADRESH 009C                          _ADRESL 009B      __size_of_init_current_sink 0015  
                        _CCPR9L 061A                          _ANSELA 018C                          _ANSELB 018D  
                        _ANSELD 018F                          _ANSELE 0190                          _ANSELF 040C  
              __end_of___ftpack 0FBA                          _ANSELG 040D                          _RC2REG 0491  
            __size_of_i2c_Start 0005                          _RC2STA 0495                          i1l2410 0021  
                        i1l2420 0037                          i1l2404 0011                          i1l2412 0022  
                        i1l2440 0072                          i1l2434 005C                          i1l2444 007C  
                        i1l2428 004D                          i1l2436 0066                          i1l2446 0080  
            __size_of_i2c_Write 000D                          _FVRCON 0117                __end_of_Vout_set 0EBD  
              __end_of___lwtoft 0E88                          _OSCCON 0099                          _TMR0IE 005D  
                        _TMR0IF 005A                          _TX2STA 0496                          _TRISC3 0473  
                        _TRISC4 0474                          _TRISG0 1868               print_error@bottom 004C  
                __CFG_PWRTE$OFF 0000             _current_sink_stable 0058                 ?_i2c_first_line 0070  
                     ??___ftadd 0032                  __CFG_STVREN$ON 0000                       ??___ftmul 007B  
                     ??___fttol 003C                __end_of_init_ADC 0FC9                ?_init_i2c_lcd_5v 0071  
              __end_of_init_i2c 0FF5                __end_of_buzz_one 0C5E                _ADC_cur_sink_val 0054  
         ___ftmul@f3_as_product 0027                   i2c_Write@data 0070               debug_fast_tx@data 0070  
      __end_of_power_supply_set 0C56                    ?_print_error 004A         __end_of__initialization 0826  
                    ___ftadd@f1 002C                      ___ftadd@f2 002F                      ___ftmul@f1 0020  
                    ___ftmul@f2 0023                 _i2c_second_line 0829                      ___fttol@f1 0038  
                __pcstackCOMMON 0070                    __pidataBANK0 0000                  print_error@top 004A  
             __end_of_i2c_Start 0D25               __end_of_i2c_Write 0D20              __size_of_clear_lcd 0015  
                    ___lwtoft@c 0078                 _get_30v_current 0BF6            i2c_Write_string@data 0071  
              _one_second_timer 0069                      __pbssBANK0 0054                       ?_i2c_Stop 0070  
            ADC_get_val@channel 0073                      __pmaintext 0985                      __pintentry 0004  
                    _digitalpot 0860                         _CCP9CON 061C                       ?___ftpack 0070  
                     ?_Vout_set 0074                       ?___lwtoft 0078           __size_of_disable_uart 0004  
                       _SP2BRGH 0494                         _SP2BRGL 0493                         _SSP1ADD 0212  
                       _SSP1BUF 0211               ?_i2c_Write_string 0071              ??_i2c_Write_string 0073  
                    ??_i2c_Stop 0070                       ?_init_ADC 0070         __end_of_i2c_second_line 083A  
                     ?_init_i2c 0070               __end_of_clear_lcd 0860                       ?_buzz_one 0070  
                 ??_ADC_get_val 0073                         ___ftadd 0EC8                         ___ftmul 0DAC  
                  _disable_uart 0FBA                         ___fttol 0E16                      _init_uart2 0FF5  
                    ??___ftpack 0075         __end_of_get_30v_current 0C35                         __ptext1 0878  
                       __ptext2 0C5E                         __ptext3 0D25                         __ptext4 0BE5  
                       __ptext5 0829                         __ptext6 083A                         __ptext7 0CC0  
                       __ptext8 084B                         __ptext9 0C35                      ??_Vout_set 0076  
                    ??___lwtoft 007B                    __size_of_isr 007F                      _buzz_timer 0066  
init_i2c_lcd_5v@single1_double2 0071               ?_set_current_sink 0045                         clrloop0 00BC  
          end_of_initialization 0826              ??_set_current_sink 0048                      ??_init_ADC 0070  
                    ??_init_i2c 0070                      ??_buzz_one 0072                ??_i2c_first_line 0071  
          __size_of_print_error 0062          __size_of_debug_fast_tx 002D                    __pstringtext 1000  
                   ?_digitalpot 0070             __end_of_ADC_get_val 0BE5                      _uart_reset 0EBD  
                 ??_enable_uart 0070                __CFG_FOSC$INTOSC 0000                   ?_print_screen 0074  
                 ?_testjig_done 0070               ?_power_supply_set 0070                ?_i2c_second_line 0070  
            ??_power_supply_set 0070                     ___ftmul@exp 0026                    buzz_one@time 0070  
                   ?_init_uart2 0070                ?_get_30v_current 0045                   _debug_fast_tx 0958  
                     _i2c_Start 0D20                       _i2c_Write 0D13             start_initialization 081A  
      __size_of_init_i2c_lcd_5v 0038                  ??_print_screen 0078                     __end_of_isr 0083  
                ??_testjig_done 004A             __end_of_enable_uart 0FC2             __size_of_digitalpot 0018  
             __size_of_i2c_Stop 0005                 print_screen@top 0074                     _ADC_get_val 0BD3  
                   __pdataBANK0 0069                     ?_uart_reset 0070                  ?_debug_fast_tx 0070  
             __size_of___ftpack 003E                      ?_i2c_Start 0070                      ?_i2c_Write 0070  
             __size_of_Vout_set 0035                       ___latbits 0003               __size_of___lwtoft 0010  
                 __pcstackBANK0 0020             __size_of_init_uart2 000B                       __pnvBANK0 0066  
             __size_of_init_ADC 0007               __size_of_init_i2c 0017                       _clear_lcd 084B  
             __size_of_buzz_one 0008       __size_of_i2c_Write_string 001B                        ?___ftadd 002C  
                      ?___ftmul 0020                        ?___fttol 0038                       __pswtext1 00AB  
                     __pswtext2 00B3                       __pswtext3 0085                       __pswtext4 009F  
                      _BAUD2CON 0497                     _enable_uart 0FBE                        _CCPTMRS2 029F  
              __CFG_WDTE$SWDTEN 0000               ??_init_i2c_lcd_5v 0072             __size_of_uart_reset 000B  
                     clear_ram0 00BB                        _PIE1bits 0091                        _PIR1bits 0011  
                    ?_clear_lcd 0070            __end_of_print_screen 0BF6       __size_of_set_current_sink 0087  
            print_screen@bottom 0076                        _SSP1CON1 0215                        _SSP1CON2 0216  
          __end_of_testjig_done 0958                    ??_digitalpot 0071                        _SSP1STAT 0214  
                  _pickit_timer 005E                    _pickit_state 0068                 ??_debug_fast_tx 0072  
                    _ADCON0bits 009D                     ??_i2c_Start 0070                     ??_i2c_Write 0070  
                debug_fast_tx@i 0072               testjig_done@state 004D                        _i2c_Stop 0E73  
                 ??_print_error 004E              __end_of_digitalpot 0878           ADC_get_val@return_val 0074  
                 Vout_set@Volts 0074                __size_of___ftadd 00B4                __size_of___ftmul 006A  
              __size_of___fttol 005D                    ??_init_uart2 0070       __size_of_power_supply_set 0021  
                      ___ftpack 0F7C                        _Vout_set 0E88                        ___lwtoft 0E78  
       init_i2c_lcd_5v@contrast 0074               Vout_set@digi_step 0076                        __ptext10 0958  
                      __ptext11 0C56                        __ptext20 0DAC                        __ptext12 0FF5  
                      __ptext21 0EC8                        __ptext13 0CDB                        __ptext30 0E73  
                      __ptext22 0F7C                        __ptext14 0FDE                        __ptext31 0D20  
                      __ptext23 0BD3                        __ptext15 0FC9                        __ptext24 0FBE  
                      __ptext16 0FC2                        __ptext25 0EBD                        __ptext17 0BF6  
                      __ptext26 0FBA                        __ptext18 0E78                        __ptext27 0E88  
                      __ptext19 0E16                        __ptext28 0860                        __ptext29 0D13  
                  _SSP1CON2bits 0216                        _init_ADC 0FC2                        _init_i2c 0FDE  
                 __size_of_main 024E              __end_of_init_uart2 1000                        _buzz_one 0C56  
                  ?_ADC_get_val 0070                     ??_clear_lcd 0071             __end_of_print_error 0CC0  
              _i2c_Write_string 0CC0                      _RC2STAbits 0495        __size_of_i2c_second_line 0011  
                      int$flags 007E                    ??_uart_reset 0070                    _SSP1STATbits 0214  
       __size_of_i2c_first_line 0011              _uart_receive_timer 0062             get_30v_current@temp 0047  
                    _INTCONbits 000B          set_current_sink@source 0047        __size_of_get_30v_current 003F  
                      intlevel1 0000           __size_of_print_screen 0011              __end_of_uart_reset 0EC8  
             __CFG_CLKOUTEN$OFF 0000           __size_of_testjig_done 00E0          power_supply_set@supply 0070  
              _set_current_sink 0D25                   ?_disable_uart 0070           set_current_sink@value 0045  
                    _OPTION_REG 0095                   _testjig_timer 0060                 _init_i2c_lcd_5v 0CDB  
                  ?_enable_uart 0070                 _curent_sink_val 0056                    _print_screen 0BE5  
                    _TX2STAbits 0496                    _testjig_done 0878               _init_current_sink 0FC9  
                   _print_error 0C5E              ?_init_current_sink 0070  
