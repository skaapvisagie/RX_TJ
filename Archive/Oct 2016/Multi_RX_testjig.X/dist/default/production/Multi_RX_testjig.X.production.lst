

Microchip Technology PIC PRO Macro Assembler V1.38 build -256452561 
                                                                                               Tue Oct 11 11:48:48 2016

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	text18,local,class=CODE,merge=1,delta=2
    17                           	psect	text19,local,class=CODE,merge=1,delta=2
    18                           	psect	text20,local,class=CODE,merge=1,delta=2
    19                           	psect	text23,local,class=CODE,merge=1,delta=2
    20                           	psect	text24,local,class=CODE,merge=1,delta=2
    21                           	psect	text28,local,class=CODE,merge=1,delta=2
    22                           	psect	swtext2,local,class=CONST,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	swtext3,local,class=CONST,delta=2
    25                           	psect	pa_nodes,global,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     	;# 
    28  0001                     	;# 
    29  0002                     	;# 
    30  0003                     	;# 
    31  0004                     	;# 
    32  0005                     	;# 
    33  0006                     	;# 
    34  0007                     	;# 
    35  0008                     	;# 
    36  0009                     	;# 
    37  000A                     	;# 
    38  000B                     	;# 
    39  000C                     	;# 
    40  000D                     	;# 
    41  000E                     	;# 
    42  000F                     	;# 
    43  0010                     	;# 
    44  0011                     	;# 
    45  0012                     	;# 
    46  0013                     	;# 
    47  0014                     	;# 
    48  0015                     	;# 
    49  0016                     	;# 
    50  0016                     	;# 
    51  0017                     	;# 
    52  0018                     	;# 
    53  0019                     	;# 
    54  001A                     	;# 
    55  001B                     	;# 
    56  001C                     	;# 
    57  008C                     	;# 
    58  008D                     	;# 
    59  008E                     	;# 
    60  008F                     	;# 
    61  0090                     	;# 
    62  0091                     	;# 
    63  0092                     	;# 
    64  0093                     	;# 
    65  0094                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0097                     	;# 
    69  0099                     	;# 
    70  009A                     	;# 
    71  009B                     	;# 
    72  009B                     	;# 
    73  009C                     	;# 
    74  009D                     	;# 
    75  009E                     	;# 
    76  010C                     	;# 
    77  010D                     	;# 
    78  010E                     	;# 
    79  010F                     	;# 
    80  0110                     	;# 
    81  0116                     	;# 
    82  0117                     	;# 
    83  011D                     	;# 
    84  018C                     	;# 
    85  018D                     	;# 
    86  018F                     	;# 
    87  0190                     	;# 
    88  0191                     	;# 
    89  0191                     	;# 
    90  0192                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0194                     	;# 
    94  0195                     	;# 
    95  0196                     	;# 
    96  0197                     	;# 
    97  0199                     	;# 
    98  0199                     	;# 
    99  0199                     	;# 
   100  019A                     	;# 
   101  019A                     	;# 
   102  019A                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019C                     	;# 
   109  019C                     	;# 
   110  019C                     	;# 
   111  019D                     	;# 
   112  019D                     	;# 
   113  019D                     	;# 
   114  019E                     	;# 
   115  019E                     	;# 
   116  019E                     	;# 
   117  019F                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  020D                     	;# 
   121  020F                     	;# 
   122  0210                     	;# 
   123  0211                     	;# 
   124  0211                     	;# 
   125  0212                     	;# 
   126  0212                     	;# 
   127  0213                     	;# 
   128  0213                     	;# 
   129  0214                     	;# 
   130  0214                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0216                     	;# 
   135  0216                     	;# 
   136  0217                     	;# 
   137  0217                     	;# 
   138  0219                     	;# 
   139  021A                     	;# 
   140  021B                     	;# 
   141  021C                     	;# 
   142  021D                     	;# 
   143  021E                     	;# 
   144  021F                     	;# 
   145  028C                     	;# 
   146  028D                     	;# 
   147  0291                     	;# 
   148  0291                     	;# 
   149  0292                     	;# 
   150  0293                     	;# 
   151  0298                     	;# 
   152  0298                     	;# 
   153  0299                     	;# 
   154  029A                     	;# 
   155  029D                     	;# 
   156  029E                     	;# 
   157  029F                     	;# 
   158  030C                     	;# 
   159  030D                     	;# 
   160  0311                     	;# 
   161  0311                     	;# 
   162  0312                     	;# 
   163  0313                     	;# 
   164  0318                     	;# 
   165  0318                     	;# 
   166  0319                     	;# 
   167  031A                     	;# 
   168  031C                     	;# 
   169  031C                     	;# 
   170  031D                     	;# 
   171  031E                     	;# 
   172  038C                     	;# 
   173  038D                     	;# 
   174  0394                     	;# 
   175  0395                     	;# 
   176  0396                     	;# 
   177  040C                     	;# 
   178  040D                     	;# 
   179  0411                     	;# 
   180  0411                     	;# 
   181  0412                     	;# 
   182  0413                     	;# 
   183  0414                     	;# 
   184  0415                     	;# 
   185  0416                     	;# 
   186  0417                     	;# 
   187  0418                     	;# 
   188  0418                     	;# 
   189  0419                     	;# 
   190  041A                     	;# 
   191  041B                     	;# 
   192  041C                     	;# 
   193  041D                     	;# 
   194  041E                     	;# 
   195  048D                     	;# 
   196  0491                     	;# 
   197  0491                     	;# 
   198  0492                     	;# 
   199  0492                     	;# 
   200  0493                     	;# 
   201  0493                     	;# 
   202  0493                     	;# 
   203  0494                     	;# 
   204  0494                     	;# 
   205  0495                     	;# 
   206  0495                     	;# 
   207  0496                     	;# 
   208  0496                     	;# 
   209  0497                     	;# 
   210  0497                     	;# 
   211  0595                     	;# 
   212  0596                     	;# 
   213  0597                     	;# 
   214  059C                     	;# 
   215  059D                     	;# 
   216  059E                     	;# 
   217  0611                     	;# 
   218  0611                     	;# 
   219  0612                     	;# 
   220  0613                     	;# 
   221  0614                     	;# 
   222  0614                     	;# 
   223  0615                     	;# 
   224  0616                     	;# 
   225  0617                     	;# 
   226  0617                     	;# 
   227  0618                     	;# 
   228  0619                     	;# 
   229  061A                     	;# 
   230  061A                     	;# 
   231  061B                     	;# 
   232  061C                     	;# 
   233  061D                     	;# 
   234  061D                     	;# 
   235  061E                     	;# 
   236  061F                     	;# 
   237  0FE4                     	;# 
   238  0FE5                     	;# 
   239  0FE6                     	;# 
   240  0FE7                     	;# 
   241  0FE8                     	;# 
   242  0FE9                     	;# 
   243  0FEA                     	;# 
   244  0FEB                     	;# 
   245  0FED                     	;# 
   246  0FEE                     	;# 
   247  0FEF                     	;# 
   248                           
   249                           	psect	idataBANK0
   250  0000                     __pidataBANK0:	
   251                           
   252                           	psect	nvBANK0
   253  0067                     __pnvBANK0:	
   254  0067                     _buzz_timer:	
   255  0067                     	ds	2
   256  0069                     _pickit_state:	
   257  0069                     	ds	1
   258  000B                     _INTCONbits	set	11
   259  0011                     _PIR1bits	set	17
   260  000C                     _PORTA	set	12
   261  000D                     _PORTB	set	13
   262  000E                     _PORTC	set	14
   263  000F                     _PORTD	set	15
   264  0010                     _PORTE	set	16
   265  001B                     _PR2	set	27
   266  001C                     _T2CON	set	28
   267  0015                     _TMR0	set	21
   268  005F                     _GIE	set	95
   269  0062                     _RA2	set	98
   270  0064                     _RA4	set	100
   271  0065                     _RA5	set	101
   272  0080                     _RE0	set	128
   273  0084                     _RE4	set	132
   274  0085                     _RE5	set	133
   275  0086                     _RE6	set	134
   276  005D                     _TMR0IE	set	93
   277  005A                     _TMR0IF	set	90
   278  009D                     _ADCON0	set	157
   279  009D                     _ADCON0bits	set	157
   280  009E                     _ADCON1	set	158
   281  009C                     _ADRESH	set	156
   282  009B                     _ADRESL	set	155
   283  0095                     _OPTION_REG	set	149
   284  0099                     _OSCCON	set	153
   285  0091                     _PIE1bits	set	145
   286  008C                     _TRISA	set	140
   287  008D                     _TRISB	set	141
   288  008E                     _TRISC	set	142
   289  008F                     _TRISD	set	143
   290  0090                     _TRISE	set	144
   291  0473                     _TRISC3	set	1139
   292  0474                     _TRISC4	set	1140
   293  0117                     _FVRCON	set	279
   294  0866                     _LATA6	set	2150
   295  0867                     _LATA7	set	2151
   296  086D                     _LATB5	set	2157
   297  0872                     _LATC2	set	2162
   298  0875                     _LATC5	set	2165
   299  0876                     _LATC6	set	2166
   300  0877                     _LATC7	set	2167
   301  087A                     _LATD2	set	2170
   302  087C                     _LATD4	set	2172
   303  087D                     _LATD5	set	2173
   304  087E                     _LATD6	set	2174
   305  018C                     _ANSELA	set	396
   306  018D                     _ANSELB	set	397
   307  018F                     _ANSELD	set	399
   308  0190                     _ANSELE	set	400
   309  0212                     _SSP1ADD	set	530
   310  0211                     _SSP1BUF	set	529
   311  0215                     _SSP1CON1	set	533
   312  0216                     _SSP1CON2	set	534
   313  0216                     _SSP1CON2bits	set	534
   314  0214                     _SSP1STAT	set	532
   315  0214                     _SSP1STATbits	set	532
   316  020D                     _WPUB	set	525
   317  020F                     _WPUD	set	527
   318  0210                     _WPUE	set	528
   319  029F                     _CCPTMRS2	set	671
   320  028C                     _PORTF	set	652
   321  028D                     _PORTG	set	653
   322  1460                     _RF0	set	5216
   323  1461                     _RF1	set	5217
   324  1462                     _RF2	set	5218
   325  1463                     _RF3	set	5219
   326  1465                     _RF5	set	5221
   327  1469                     _RG1	set	5225
   328  146B                     _RG3	set	5227
   329  030C                     _TRISF	set	780
   330  030D                     _TRISG	set	781
   331  1868                     _TRISG0	set	6248
   332  1C68                     _LATG0	set	7272
   333  040C                     _ANSELF	set	1036
   334  040D                     _ANSELG	set	1037
   335  0596                     _PR8	set	1430
   336  0597                     _T8CON	set	1431
   337  061C                     _CCP9CON	set	1564
   338  061A                     _CCPR9L	set	1562
   339                           
   340                           	psect	stringtext
   341  1000                     __pstringtext:	
   342  1000                     STR_53:	
   343  1000  3452               	retlw	82	;'R'
   344  1001  3465               	retlw	101	;'e'
   345  1002  346C               	retlw	108	;'l'
   346  1003  3461               	retlw	97	;'a'
   347  1004  3479               	retlw	121	;'y'
   348  1005  3420               	retlw	32	;' '
   349  1006  3464               	retlw	100	;'d'
   350  1007  3465               	retlw	101	;'e'
   351  1008  342D               	retlw	45	;'-'
   352  1009  3465               	retlw	101	;'e'
   353  100A  346E               	retlw	110	;'n'
   354  100B  3465               	retlw	101	;'e'
   355  100C  3472               	retlw	114	;'r'
   356  100D  3467               	retlw	103	;'g'
   357  100E  3469               	retlw	105	;'i'
   358  100F  347A               	retlw	122	;'z'
   359  1010  3465               	retlw	101	;'e'
   360  1011  3464               	retlw	100	;'d'
   361  1012  3400               	retlw	0
   362  1013                     STR_27:	
   363  1013  3450               	retlw	80	;'P'
   364  1014  3469               	retlw	105	;'i'
   365  1015  3463               	retlw	99	;'c'
   366  1016  346B               	retlw	107	;'k'
   367  1017  3469               	retlw	105	;'i'
   368  1018  3474               	retlw	116	;'t'
   369  1019  3420               	retlw	32	;' '
   370  101A  3450               	retlw	80	;'P'
   371  101B  3472               	retlw	114	;'r'
   372  101C  346F               	retlw	111	;'o'
   373  101D  3467               	retlw	103	;'g'
   374  101E  3472               	retlw	114	;'r'
   375  101F  3461               	retlw	97	;'a'
   376  1020  346D               	retlw	109	;'m'
   377  1021  346D               	retlw	109	;'m'
   378  1022  3469               	retlw	105	;'i'
   379  1023  346E               	retlw	110	;'n'
   380  1024  3467               	retlw	103	;'g'
   381  1025  3400               	retlw	0
   382  1026                     STR_165:	
   383  1026  344D               	retlw	77	;'M'
   384  1027  3475               	retlw	117	;'u'
   385  1028  346C               	retlw	108	;'l'
   386  1029  3474               	retlw	116	;'t'
   387  102A  3469               	retlw	105	;'i'
   388  102B  345F               	retlw	95	;'_'
   389  102C  3452               	retlw	82	;'R'
   390  102D  3458               	retlw	88	;'X'
   391  102E  3420               	retlw	32	;' '
   392  102F  3454               	retlw	84	;'T'
   393  1030  3465               	retlw	101	;'e'
   394  1031  3473               	retlw	115	;'s'
   395  1032  3474               	retlw	116	;'t'
   396  1033  346A               	retlw	106	;'j'
   397  1034  3469               	retlw	105	;'i'
   398  1035  3467               	retlw	103	;'g'
   399  1036  3400               	retlw	0
   400  1037                     STR_142:	
   401  1037  3444               	retlw	68	;'D'
   402  1038  3465               	retlw	101	;'e'
   403  1039  3463               	retlw	99	;'c'
   404  103A  346F               	retlw	111	;'o'
   405  103B  3464               	retlw	100	;'d'
   406  103C  3465               	retlw	101	;'e'
   407  103D  3420               	retlw	32	;' '
   408  103E  344F               	retlw	79	;'O'
   409  103F  346C               	retlw	108	;'l'
   410  1040  3464               	retlw	100	;'d'
   411  1041  3420               	retlw	32	;' '
   412  1042  342D               	retlw	45	;'-'
   413  1043  3446               	retlw	70	;'F'
   414  1044  3461               	retlw	97	;'a'
   415  1045  3469               	retlw	105	;'i'
   416  1046  346C               	retlw	108	;'l'
   417  1047  3400               	retlw	0
   418  1048                     STR_163:	
   419  1048  3454               	retlw	84	;'T'
   420  1049  3465               	retlw	101	;'e'
   421  104A  3473               	retlw	115	;'s'
   422  104B  3474               	retlw	116	;'t'
   423  104C  346A               	retlw	106	;'j'
   424  104D  3469               	retlw	105	;'i'
   425  104E  3467               	retlw	103	;'g'
   426  104F  3420               	retlw	32	;' '
   427  1050  3450               	retlw	80	;'P'
   428  1051  346F               	retlw	111	;'o'
   429  1052  3477               	retlw	119	;'w'
   430  1053  3465               	retlw	101	;'e'
   431  1054  3472               	retlw	114	;'r'
   432  1055  342D               	retlw	45	;'-'
   433  1056  3475               	retlw	117	;'u'
   434  1057  3470               	retlw	112	;'p'
   435  1058  3400               	retlw	0
   436  1059                     STR_2:	
   437  1059  3454               	retlw	84	;'T'
   438  105A  3465               	retlw	101	;'e'
   439  105B  3473               	retlw	115	;'s'
   440  105C  3474               	retlw	116	;'t'
   441  105D  342D               	retlw	45	;'-'
   442  105E  344A               	retlw	74	;'J'
   443  105F  3469               	retlw	105	;'i'
   444  1060  3467               	retlw	103	;'g'
   445  1061  347C               	retlw	124	;'|'
   446  1062  3453               	retlw	83	;'S'
   447  1063  3474               	retlw	116	;'t'
   448  1064  3461               	retlw	97	;'a'
   449  1065  3472               	retlw	114	;'r'
   450  1066  3474               	retlw	116	;'t'
   451  1067  3475               	retlw	117	;'u'
   452  1068  3470               	retlw	112	;'p'
   453  1069  3400               	retlw	0
   454  106A                     STR_170:	
   455  106A  3420               	retlw	32	;' '
   456  106B  3474               	retlw	116	;'t'
   457  106C  346F               	retlw	111	;'o'
   458  106D  3420               	retlw	32	;' '
   459  106E  3472               	retlw	114	;'r'
   460  106F  3465               	retlw	101	;'e'
   461  1070  3473               	retlw	115	;'s'
   462  1071  3474               	retlw	116	;'t'
   463  1072  3461               	retlw	97	;'a'
   464  1073  3472               	retlw	114	;'r'
   465  1074  3474               	retlw	116	;'t'
   466  1075  3420               	retlw	32	;' '
   467  1076  3474               	retlw	116	;'t'
   468  1077  3465               	retlw	101	;'e'
   469  1078  3473               	retlw	115	;'s'
   470  1079  3474               	retlw	116	;'t'
   471  107A  3400               	retlw	0
   472  107B                     STR_155:	
   473  107B  3437               	retlw	55	;'7'
   474  107C  3473               	retlw	115	;'s'
   475  107D  3465               	retlw	101	;'e'
   476  107E  3467               	retlw	103	;'g'
   477  107F  342C               	retlw	44	;','
   478  1080  3420               	retlw	32	;' '
   479  1081  3462               	retlw	98	;'b'
   480  1082  3475               	retlw	117	;'u'
   481  1083  347A               	retlw	122	;'z'
   482  1084  347A               	retlw	122	;'z'
   483  1085  3465               	retlw	101	;'e'
   484  1086  3472               	retlw	114	;'r'
   485  1087  342C               	retlw	44	;','
   486  1088  3420               	retlw	32	;' '
   487  1089  3420               	retlw	32	;' '
   488  108A  3400               	retlw	0
   489  108B                     STR_140:	
   490  108B  3444               	retlw	68	;'D'
   491  108C  3465               	retlw	101	;'e'
   492  108D  3463               	retlw	99	;'c'
   493  108E  346F               	retlw	111	;'o'
   494  108F  3464               	retlw	100	;'d'
   495  1090  3465               	retlw	101	;'e'
   496  1091  3420               	retlw	32	;' '
   497  1092  344E               	retlw	78	;'N'
   498  1093  3465               	retlw	101	;'e'
   499  1094  3477               	retlw	119	;'w'
   500  1095  3420               	retlw	32	;' '
   501  1096  342D               	retlw	45	;'-'
   502  1097  3420               	retlw	32	;' '
   503  1098  344F               	retlw	79	;'O'
   504  1099  344B               	retlw	75	;'K'
   505  109A  3400               	retlw	0
   506  109B                     STR_57:	
   507  109B  3452               	retlw	82	;'R'
   508  109C  3465               	retlw	101	;'e'
   509  109D  346C               	retlw	108	;'l'
   510  109E  3461               	retlw	97	;'a'
   511  109F  3479               	retlw	121	;'y'
   512  10A0  3420               	retlw	32	;' '
   513  10A1  3465               	retlw	101	;'e'
   514  10A2  346E               	retlw	110	;'n'
   515  10A3  3465               	retlw	101	;'e'
   516  10A4  3472               	retlw	114	;'r'
   517  10A5  3467               	retlw	103	;'g'
   518  10A6  3469               	retlw	105	;'i'
   519  10A7  347A               	retlw	122	;'z'
   520  10A8  3465               	retlw	101	;'e'
   521  10A9  3464               	retlw	100	;'d'
   522  10AA  3400               	retlw	0
   523  10AB                     STR_120:	
   524  10AB  3420               	retlw	32	;' '
   525  10AC  3445               	retlw	69	;'E'
   526  10AD  3472               	retlw	114	;'r'
   527  10AE  3472               	retlw	114	;'r'
   528  10AF  346F               	retlw	111	;'o'
   529  10B0  3472               	retlw	114	;'r'
   530  10B1  3420               	retlw	32	;' '
   531  10B2  342D               	retlw	45	;'-'
   532  10B3  3420               	retlw	32	;' '
   533  10B4  344D               	retlw	77	;'M'
   534  10B5  3469               	retlw	105	;'i'
   535  10B6  3463               	retlw	99	;'c'
   536  10B7  3472               	retlw	114	;'r'
   537  10B8  3465               	retlw	101	;'e'
   538  10B9  346C               	retlw	108	;'l'
   539  10BA  3400               	retlw	0
   540  10BB                     STR_72:	
   541  10BB  3450               	retlw	80	;'P'
   542  10BC  3454               	retlw	84	;'T'
   543  10BD  3443               	retlw	67	;'C'
   544  10BE  3420               	retlw	32	;' '
   545  10BF  3445               	retlw	69	;'E'
   546  10C0  3472               	retlw	114	;'r'
   547  10C1  3472               	retlw	114	;'r'
   548  10C2  346F               	retlw	111	;'o'
   549  10C3  3472               	retlw	114	;'r'
   550  10C4  3420               	retlw	32	;' '
   551  10C5  3472               	retlw	114	;'r'
   552  10C6  3465               	retlw	101	;'e'
   553  10C7  3473               	retlw	115	;'s'
   554  10C8  3465               	retlw	101	;'e'
   555  10C9  3474               	retlw	116	;'t'
   556  10CA  3400               	retlw	0
   557  10CB                     STR_147:	
   558  10CB  3446               	retlw	70	;'F'
   559  10CC  3461               	retlw	97	;'a'
   560  10CD  3463               	retlw	99	;'c'
   561  10CE  3474               	retlw	116	;'t'
   562  10CF  346F               	retlw	111	;'o'
   563  10D0  3472               	retlw	114	;'r'
   564  10D1  3479               	retlw	121	;'y'
   565  10D2  3420               	retlw	32	;' '
   566  10D3  3472               	retlw	114	;'r'
   567  10D4  3465               	retlw	101	;'e'
   568  10D5  3473               	retlw	115	;'s'
   569  10D6  3465               	retlw	101	;'e'
   570  10D7  3474               	retlw	116	;'t'
   571  10D8  3420               	retlw	32	;' '
   572  10D9  3400               	retlw	0
   573  10DA                     STR_5:	
   574  10DA  3450               	retlw	80	;'P'
   575  10DB  346F               	retlw	111	;'o'
   576  10DC  3477               	retlw	119	;'w'
   577  10DD  3465               	retlw	101	;'e'
   578  10DE  3472               	retlw	114	;'r'
   579  10DF  3469               	retlw	105	;'i'
   580  10E0  346E               	retlw	110	;'n'
   581  10E1  3467               	retlw	103	;'g'
   582  10E2  3420               	retlw	32	;' '
   583  10E3  3462               	retlw	98	;'b'
   584  10E4  346F               	retlw	111	;'o'
   585  10E5  3461               	retlw	97	;'a'
   586  10E6  3472               	retlw	114	;'r'
   587  10E7  3464               	retlw	100	;'d'
   588  10E8  3400               	retlw	0
   589  10E9                     STR_144:	
   590  10E9  3445               	retlw	69	;'E'
   591  10EA  3472               	retlw	114	;'r'
   592  10EB  3472               	retlw	114	;'r'
   593  10EC  346F               	retlw	111	;'o'
   594  10ED  3472               	retlw	114	;'r'
   595  10EE  3420               	retlw	32	;' '
   596  10EF  342D               	retlw	45	;'-'
   597  10F0  3420               	retlw	32	;' '
   598  10F1  3444               	retlw	68	;'D'
   599  10F2  3465               	retlw	101	;'e'
   600  10F3  3463               	retlw	99	;'c'
   601  10F4  346F               	retlw	111	;'o'
   602  10F5  3464               	retlw	100	;'d'
   603  10F6  3465               	retlw	101	;'e'
   604  10F7  3400               	retlw	0
   605  10F8                     STR_74:	
   606  10F8  3450               	retlw	80	;'P'
   607  10F9  3454               	retlw	84	;'T'
   608  10FA  3443               	retlw	67	;'C'
   609  10FB  3420               	retlw	32	;' '
   610  10FC  3445               	retlw	69	;'E'
   611  10FD  3472               	retlw	114	;'r'
   612  10FE  3472               	retlw	114	;'r'
   613  10FF  346F               	retlw	111	;'o'
   614  1100  3472               	retlw	114	;'r'
   615  1101  3420               	retlw	32	;' '
   616  1102  3474               	retlw	116	;'t'
   617  1103  3472               	retlw	114	;'r'
   618  1104  3469               	retlw	105	;'i'
   619  1105  3470               	retlw	112	;'p'
   620  1106  3400               	retlw	0
   621  1107                     STR_19:	
   622  1107  3431               	retlw	49	;'1'
   623  1108  3436               	retlw	54	;'6'
   624  1109  3476               	retlw	118	;'v'
   625  110A  342D               	retlw	45	;'-'
   626  110B  3431               	retlw	49	;'1'
   627  110C  3432               	retlw	50	;'2'
   628  110D  3476               	retlw	118	;'v'
   629  110E  3420               	retlw	32	;' '
   630  110F  3473               	retlw	115	;'s'
   631  1110  3475               	retlw	117	;'u'
   632  1111  3470               	retlw	112	;'p'
   633  1112  3470               	retlw	112	;'p'
   634  1113  346C               	retlw	108	;'l'
   635  1114  3479               	retlw	121	;'y'
   636  1115  3400               	retlw	0
   637  1116                     STR_4:	
   638  1116  342D               	retlw	45	;'-'
   639  1117  343E               	retlw	62	;'>'
   640  1118  3420               	retlw	32	;' '
   641  1119  3449               	retlw	73	;'I'
   642  111A  346E               	retlw	110	;'n'
   643  111B  3473               	retlw	115	;'s'
   644  111C  3465               	retlw	101	;'e'
   645  111D  3472               	retlw	114	;'r'
   646  111E  3474               	retlw	116	;'t'
   647  111F  3420               	retlw	32	;' '
   648  1120  3450               	retlw	80	;'P'
   649  1121  3443               	retlw	67	;'C'
   650  1122  3442               	retlw	66	;'B'
   651  1123  3400               	retlw	0
   652  1124                     STR_160:	
   653  1124  3420               	retlw	32	;' '
   654  1125  3452               	retlw	82	;'R'
   655  1126  3465               	retlw	101	;'e'
   656  1127  346D               	retlw	109	;'m'
   657  1128  346F               	retlw	111	;'o'
   658  1129  3476               	retlw	118	;'v'
   659  112A  3465               	retlw	101	;'e'
   660  112B  3420               	retlw	32	;' '
   661  112C  3462               	retlw	98	;'b'
   662  112D  346F               	retlw	111	;'o'
   663  112E  3461               	retlw	97	;'a'
   664  112F  3472               	retlw	114	;'r'
   665  1130  3464               	retlw	100	;'d'
   666  1131  3400               	retlw	0
   667  1132                     STR_118:	
   668  1132  3420               	retlw	32	;' '
   669  1133  3445               	retlw	69	;'E'
   670  1134  3472               	retlw	114	;'r'
   671  1135  3472               	retlw	114	;'r'
   672  1136  346F               	retlw	111	;'o'
   673  1137  3472               	retlw	114	;'r'
   674  1138  3420               	retlw	32	;' '
   675  1139  342D               	retlw	45	;'-'
   676  113A  3420               	retlw	32	;' '
   677  113B  3448               	retlw	72	;'H'
   678  113C  3469               	retlw	105	;'i'
   679  113D  3467               	retlw	103	;'g'
   680  113E  3468               	retlw	104	;'h'
   681  113F  3400               	retlw	0
   682  1140                     STR_7:	
   683  1140  3431               	retlw	49	;'1'
   684  1141  3432               	retlw	50	;'2'
   685  1142  3476               	retlw	118	;'v'
   686  1143  342D               	retlw	45	;'-'
   687  1144  3435               	retlw	53	;'5'
   688  1145  3476               	retlw	118	;'v'
   689  1146  3420               	retlw	32	;' '
   690  1147  3473               	retlw	115	;'s'
   691  1148  3475               	retlw	117	;'u'
   692  1149  3470               	retlw	112	;'p'
   693  114A  3470               	retlw	112	;'p'
   694  114B  346C               	retlw	108	;'l'
   695  114C  3479               	retlw	121	;'y'
   696  114D  3400               	retlw	0
   697  114E                     STR_15:	
   698  114E  3431               	retlw	49	;'1'
   699  114F  3436               	retlw	54	;'6'
   700  1150  3476               	retlw	118	;'v'
   701  1151  342D               	retlw	45	;'-'
   702  1152  3435               	retlw	53	;'5'
   703  1153  3476               	retlw	118	;'v'
   704  1154  3420               	retlw	32	;' '
   705  1155  3473               	retlw	115	;'s'
   706  1156  3475               	retlw	117	;'u'
   707  1157  3470               	retlw	112	;'p'
   708  1158  3470               	retlw	112	;'p'
   709  1159  346C               	retlw	108	;'l'
   710  115A  3479               	retlw	121	;'y'
   711  115B  3400               	retlw	0
   712  115C                     STR_43:	
   713  115C  3454               	retlw	84	;'T'
   714  115D  3465               	retlw	101	;'e'
   715  115E  3473               	retlw	115	;'s'
   716  115F  3474               	retlw	116	;'t'
   717  1160  3420               	retlw	32	;' '
   718  1161  3445               	retlw	69	;'E'
   719  1162  3445               	retlw	69	;'E'
   720  1163  3450               	retlw	80	;'P'
   721  1164  3452               	retlw	82	;'R'
   722  1165  344F               	retlw	79	;'O'
   723  1166  344D               	retlw	77	;'M'
   724  1167  3420               	retlw	32	;' '
   725  1168  3400               	retlw	0
   726  1169                     STR_10:	
   727  1169  3456               	retlw	86	;'V'
   728  116A  346F               	retlw	111	;'o'
   729  116B  346C               	retlw	108	;'l'
   730  116C  3474               	retlw	116	;'t'
   731  116D  3420               	retlw	32	;' '
   732  116E  3445               	retlw	69	;'E'
   733  116F  3472               	retlw	114	;'r'
   734  1170  3472               	retlw	114	;'r'
   735  1171  346F               	retlw	111	;'o'
   736  1172  3472               	retlw	114	;'r'
   737  1173  3420               	retlw	32	;' '
   738  1174  3448               	retlw	72	;'H'
   739  1175  3400               	retlw	0
   740  1176                     STR_131:	
   741  1176  3454               	retlw	84	;'T'
   742  1177  3465               	retlw	101	;'e'
   743  1178  3473               	retlw	115	;'s'
   744  1179  3474               	retlw	116	;'t'
   745  117A  3420               	retlw	32	;' '
   746  117B  3452               	retlw	82	;'R'
   747  117C  3446               	retlw	70	;'F'
   748  117D  3420               	retlw	32	;' '
   749  117E  3452               	retlw	82	;'R'
   750  117F  3453               	retlw	83	;'S'
   751  1180  3453               	retlw	83	;'S'
   752  1181  3449               	retlw	73	;'I'
   753  1182  3400               	retlw	0
   754  1183                     STR_8:	
   755  1183  3456               	retlw	86	;'V'
   756  1184  346F               	retlw	111	;'o'
   757  1185  346C               	retlw	108	;'l'
   758  1186  3474               	retlw	116	;'t'
   759  1187  3420               	retlw	32	;' '
   760  1188  3445               	retlw	69	;'E'
   761  1189  3472               	retlw	114	;'r'
   762  118A  3472               	retlw	114	;'r'
   763  118B  346F               	retlw	111	;'o'
   764  118C  3472               	retlw	114	;'r'
   765  118D  3420               	retlw	32	;' '
   766  118E  344C               	retlw	76	;'L'
   767  118F  3400               	retlw	0
   768  1190                     STR_168:	
   769  1190  3420               	retlw	32	;' '
   770  1191  3450               	retlw	80	;'P'
   771  1192  3472               	retlw	114	;'r'
   772  1193  3465               	retlw	101	;'e'
   773  1194  3473               	retlw	115	;'s'
   774  1195  3473               	retlw	115	;'s'
   775  1196  3420               	retlw	32	;' '
   776  1197  3453               	retlw	83	;'S'
   777  1198  3454               	retlw	84	;'T'
   778  1199  3441               	retlw	65	;'A'
   779  119A  3452               	retlw	82	;'R'
   780  119B  3454               	retlw	84	;'T'
   781  119C  3400               	retlw	0
   782  119D                     STR_35:	
   783  119D  3445               	retlw	69	;'E'
   784  119E  3473               	retlw	115	;'s'
   785  119F  3474               	retlw	116	;'t'
   786  11A0  3461               	retlw	97	;'a'
   787  11A1  3462               	retlw	98	;'b'
   788  11A2  346C               	retlw	108	;'l'
   789  11A3  3469               	retlw	105	;'i'
   790  11A4  3473               	retlw	115	;'s'
   791  11A5  3468               	retlw	104	;'h'
   792  11A6  3469               	retlw	105	;'i'
   793  11A7  346E               	retlw	110	;'n'
   794  11A8  3467               	retlw	103	;'g'
   795  11A9  3400               	retlw	0
   796  11AA                     STR_39:	
   797  11AA  3445               	retlw	69	;'E'
   798  11AB  3445               	retlw	69	;'E'
   799  11AC  3450               	retlw	80	;'P'
   800  11AD  3452               	retlw	82	;'R'
   801  11AE  344F               	retlw	79	;'O'
   802  11AF  344D               	retlw	77	;'M'
   803  11B0  3420               	retlw	32	;' '
   804  11B1  3465               	retlw	101	;'e'
   805  11B2  3472               	retlw	114	;'r'
   806  11B3  3472               	retlw	114	;'r'
   807  11B4  346F               	retlw	111	;'o'
   808  11B5  3472               	retlw	114	;'r'
   809  11B6  3400               	retlw	0
   810  11B7                     STR_159:	
   811  11B7  3454               	retlw	84	;'T'
   812  11B8  3465               	retlw	101	;'e'
   813  11B9  3473               	retlw	115	;'s'
   814  11BA  3474               	retlw	116	;'t'
   815  11BB  346A               	retlw	106	;'j'
   816  11BC  3469               	retlw	105	;'i'
   817  11BD  3467               	retlw	103	;'g'
   818  11BE  3420               	retlw	32	;' '
   819  11BF  3450               	retlw	80	;'P'
   820  11C0  3461               	retlw	97	;'a'
   821  11C1  3473               	retlw	115	;'s'
   822  11C2  3473               	retlw	115	;'s'
   823  11C3  3400               	retlw	0
   824  11C4                     STR_156:	
   825  11C4  3420               	retlw	32	;' '
   826  11C5  3462               	retlw	98	;'b'
   827  11C6  3475               	retlw	117	;'u'
   828  11C7  3474               	retlw	116	;'t'
   829  11C8  3474               	retlw	116	;'t'
   830  11C9  346F               	retlw	111	;'o'
   831  11CA  346E               	retlw	110	;'n'
   832  11CB  3420               	retlw	32	;' '
   833  11CC  3474               	retlw	116	;'t'
   834  11CD  3465               	retlw	101	;'e'
   835  11CE  3473               	retlw	115	;'s'
   836  11CF  3474               	retlw	116	;'t'
   837  11D0  3400               	retlw	0
   838  11D1                     STR_122:	
   839  11D1  3420               	retlw	32	;' '
   840  11D2  3445               	retlw	69	;'E'
   841  11D3  3472               	retlw	114	;'r'
   842  11D4  3472               	retlw	114	;'r'
   843  11D5  346F               	retlw	111	;'o'
   844  11D6  3472               	retlw	114	;'r'
   845  11D7  3420               	retlw	32	;' '
   846  11D8  342D               	retlw	45	;'-'
   847  11D9  3420               	retlw	32	;' '
   848  11DA  344C               	retlw	76	;'L'
   849  11DB  346F               	retlw	111	;'o'
   850  11DC  3477               	retlw	119	;'w'
   851  11DD  3400               	retlw	0
   852  11DE                     STR_117:	
   853  11DE  3454               	retlw	84	;'T'
   854  11DF  3465               	retlw	101	;'e'
   855  11E0  3473               	retlw	115	;'s'
   856  11E1  3474               	retlw	116	;'t'
   857  11E2  3420               	retlw	32	;' '
   858  11E3  3452               	retlw	82	;'R'
   859  11E4  3446               	retlw	70	;'F'
   860  11E5  3420               	retlw	32	;' '
   861  11E6  3433               	retlw	51	;'3'
   862  11E7  3476               	retlw	118	;'v'
   863  11E8  3433               	retlw	51	;'3'
   864  11E9  3400               	retlw	0
   865  11EA                     STR_40:	
   866  11EA  3420               	retlw	32	;' '
   867  11EB  3452               	retlw	82	;'R'
   868  11EC  3465               	retlw	101	;'e'
   869  11ED  3461               	retlw	97	;'a'
   870  11EE  3464               	retlw	100	;'d'
   871  11EF  342F               	retlw	47	;'/'
   872  11F0  3457               	retlw	87	;'W'
   873  11F1  3472               	retlw	114	;'r'
   874  11F2  3469               	retlw	105	;'i'
   875  11F3  3474               	retlw	116	;'t'
   876  11F4  3465               	retlw	101	;'e'
   877  11F5  3400               	retlw	0
   878  11F6                     STR_45:	
   879  11F6  3445               	retlw	69	;'E'
   880  11F7  3445               	retlw	69	;'E'
   881  11F8  3450               	retlw	80	;'P'
   882  11F9  3452               	retlw	82	;'R'
   883  11FA  344F               	retlw	79	;'O'
   884  11FB  344D               	retlw	77	;'M'
   885  11FC  3420               	retlw	32	;' '
   886  11FD  3473               	retlw	115	;'s'
   887  11FE  3469               	retlw	105	;'i'
   888  11FF  347A               	retlw	122	;'z'
   889  1200  3465               	retlw	101	;'e'
   890  1201  3400               	retlw	0
   891  1202                     STR_29:	
   892  1202  3457               	retlw	87	;'W'
   893  1203  3461               	retlw	97	;'a'
   894  1204  3469               	retlw	105	;'i'
   895  1205  3474               	retlw	116	;'t'
   896  1206  3469               	retlw	105	;'i'
   897  1207  346E               	retlw	110	;'n'
   898  1208  3467               	retlw	103	;'g'
   899  1209  3420               	retlw	32	;' '
   900  120A  3466               	retlw	102	;'f'
   901  120B  346F               	retlw	111	;'o'
   902  120C  3472               	retlw	114	;'r'
   903  120D  3400               	retlw	0
   904  120E                     STR_37:	
   905  120E  3443               	retlw	67	;'C'
   906  120F  346F               	retlw	111	;'o'
   907  1210  346D               	retlw	109	;'m'
   908  1211  346D               	retlw	109	;'m'
   909  1212  3473               	retlw	115	;'s'
   910  1213  3420               	retlw	32	;' '
   911  1214  3445               	retlw	69	;'E'
   912  1215  3472               	retlw	114	;'r'
   913  1216  3472               	retlw	114	;'r'
   914  1217  346F               	retlw	111	;'o'
   915  1218  3472               	retlw	114	;'r'
   916  1219  3400               	retlw	0
   917  121A                     STR_14:	
   918  121A  3454               	retlw	84	;'T'
   919  121B  342D               	retlw	45	;'-'
   920  121C  346F               	retlw	111	;'o'
   921  121D  3475               	retlw	117	;'u'
   922  121E  3474               	retlw	116	;'t'
   923  121F  3420               	retlw	32	;' '
   924  1220  3445               	retlw	69	;'E'
   925  1221  3472               	retlw	114	;'r'
   926  1222  3472               	retlw	114	;'r'
   927  1223  346F               	retlw	111	;'o'
   928  1224  3472               	retlw	114	;'r'
   929  1225  3400               	retlw	0
   930  1226                     STR_12:	
   931  1226  3443               	retlw	67	;'C'
   932  1227  3475               	retlw	117	;'u'
   933  1228  3472               	retlw	114	;'r'
   934  1229  3472               	retlw	114	;'r'
   935  122A  3420               	retlw	32	;' '
   936  122B  3445               	retlw	69	;'E'
   937  122C  3472               	retlw	114	;'r'
   938  122D  3472               	retlw	114	;'r'
   939  122E  346F               	retlw	111	;'o'
   940  122F  3472               	retlw	114	;'r'
   941  1230  3400               	retlw	0
   942  1231                     STR_158:	
   943  1231  3420               	retlw	32	;' '
   944  1232  3466               	retlw	102	;'f'
   945  1233  346F               	retlw	111	;'o'
   946  1234  3472               	retlw	114	;'r'
   947  1235  3420               	retlw	32	;' '
   948  1236  3463               	retlw	99	;'c'
   949  1237  346F               	retlw	111	;'o'
   950  1238  346D               	retlw	109	;'m'
   951  1239  346D               	retlw	109	;'m'
   952  123A  3473               	retlw	115	;'s'
   953  123B  3400               	retlw	0
   954  123C                     STR_49:	
   955  123C  3454               	retlw	84	;'T'
   956  123D  3465               	retlw	101	;'e'
   957  123E  3473               	retlw	115	;'s'
   958  123F  3474               	retlw	116	;'t'
   959  1240  3420               	retlw	32	;' '
   960  1241  3452               	retlw	82	;'R'
   961  1242  3465               	retlw	101	;'e'
   962  1243  346C               	retlw	108	;'l'
   963  1244  3461               	retlw	97	;'a'
   964  1245  3479               	retlw	121	;'y'
   965  1246  3400               	retlw	0
   966  1247                     STR_157:	
   967  1247  3477               	retlw	119	;'w'
   968  1248  3461               	retlw	97	;'a'
   969  1249  3469               	retlw	105	;'i'
   970  124A  3474               	retlw	116	;'t'
   971  124B  3469               	retlw	105	;'i'
   972  124C  346E               	retlw	110	;'n'
   973  124D  3467               	retlw	103	;'g'
   974  124E  3420               	retlw	32	;' '
   975  124F  3420               	retlw	32	;' '
   976  1250  3400               	retlw	0
   977  1251                     STR_151:	
   978  1251  3453               	retlw	83	;'S'
   979  1252  3465               	retlw	101	;'e'
   980  1253  3474               	retlw	116	;'t'
   981  1254  3420               	retlw	32	;' '
   982  1255  3423               	retlw	35	;'#'
   983  1256  3420               	retlw	32	;' '
   984  1257  346F               	retlw	111	;'o'
   985  1258  3466               	retlw	102	;'f'
   986  1259  3420               	retlw	32	;' '
   987  125A  3400               	retlw	0
   988  125B                     STR_67:	
   989  125B  3443               	retlw	67	;'C'
   990  125C  3448               	retlw	72	;'H'
   991  125D  3432               	retlw	50	;'2'
   992  125E  3420               	retlw	32	;' '
   993  125F  342D               	retlw	45	;'-'
   994  1260  3420               	retlw	32	;' '
   995  1261  344F               	retlw	79	;'O'
   996  1262  3446               	retlw	70	;'F'
   997  1263  3446               	retlw	70	;'F'
   998  1264  3400               	retlw	0
   999  1265                     STR_91:	
  1000  1265  3443               	retlw	67	;'C'
  1001  1266  3448               	retlw	72	;'H'
  1002  1267  3433               	retlw	51	;'3'
  1003  1268  3420               	retlw	32	;' '
  1004  1269  342D               	retlw	45	;'-'
  1005  126A  3420               	retlw	32	;' '
  1006  126B  344F               	retlw	79	;'O'
  1007  126C  3446               	retlw	70	;'F'
  1008  126D  3446               	retlw	70	;'F'
  1009  126E  3400               	retlw	0
  1010  126F                     STR_136:	
  1011  126F  3452               	retlw	82	;'R'
  1012  1270  3453               	retlw	83	;'S'
  1013  1271  3453               	retlw	83	;'S'
  1014  1272  3449               	retlw	73	;'I'
  1015  1273  3420               	retlw	32	;' '
  1016  1274  342D               	retlw	45	;'-'
  1017  1275  3420               	retlw	32	;' '
  1018  1276  344F               	retlw	79	;'O'
  1019  1277  344B               	retlw	75	;'K'
  1020  1278  3400               	retlw	0
  1021  1279                     STR_152:	
  1022  1279  3420               	retlw	32	;' '
  1023  127A  3463               	retlw	99	;'c'
  1024  127B  3468               	retlw	104	;'h'
  1025  127C  3461               	retlw	97	;'a'
  1026  127D  346E               	retlw	110	;'n'
  1027  127E  346E               	retlw	110	;'n'
  1028  127F  3465               	retlw	101	;'e'
  1029  1280  346C               	retlw	108	;'l'
  1030  1281  3473               	retlw	115	;'s'
  1031  1282  3400               	retlw	0
  1032  1283                     STR_46:	
  1033  1283  3420               	retlw	32	;' '
  1034  1284  3445               	retlw	69	;'E'
  1035  1285  3472               	retlw	114	;'r'
  1036  1286  3472               	retlw	114	;'r'
  1037  1287  346F               	retlw	111	;'o'
  1038  1288  3472               	retlw	114	;'r'
  1039  1289  3420               	retlw	32	;' '
  1040  128A  3431               	retlw	49	;'1'
  1041  128B  3400               	retlw	0
  1042  128C                     STR_48:	
  1043  128C  3420               	retlw	32	;' '
  1044  128D  3445               	retlw	69	;'E'
  1045  128E  3472               	retlw	114	;'r'
  1046  128F  3472               	retlw	114	;'r'
  1047  1290  346F               	retlw	111	;'o'
  1048  1291  3472               	retlw	114	;'r'
  1049  1292  3420               	retlw	32	;' '
  1050  1293  3432               	retlw	50	;'2'
  1051  1294  3400               	retlw	0
  1052  1295                     STR_63:	
  1053  1295  3454               	retlw	84	;'T'
  1054  1296  3465               	retlw	101	;'e'
  1055  1297  3473               	retlw	115	;'s'
  1056  1298  3474               	retlw	116	;'t'
  1057  1299  3420               	retlw	32	;' '
  1058  129A  3443               	retlw	67	;'C'
  1059  129B  3448               	retlw	72	;'H'
  1060  129C  3432               	retlw	50	;'2'
  1061  129D  3400               	retlw	0
  1062  129E                     STR_87:	
  1063  129E  3454               	retlw	84	;'T'
  1064  129F  3465               	retlw	101	;'e'
  1065  12A0  3473               	retlw	115	;'s'
  1066  12A1  3474               	retlw	116	;'t'
  1067  12A2  3420               	retlw	32	;' '
  1068  12A3  3443               	retlw	67	;'C'
  1069  12A4  3448               	retlw	72	;'H'
  1070  12A5  3433               	retlw	51	;'3'
  1071  12A6  3400               	retlw	0
  1072  12A7                     STR_124:	
  1073  12A7  3433               	retlw	51	;'3'
  1074  12A8  3476               	retlw	118	;'v'
  1075  12A9  3433               	retlw	51	;'3'
  1076  12AA  3420               	retlw	32	;' '
  1077  12AB  342D               	retlw	45	;'-'
  1078  12AC  3420               	retlw	32	;' '
  1079  12AD  344F               	retlw	79	;'O'
  1080  12AE  344B               	retlw	75	;'K'
  1081  12AF  3400               	retlw	0
  1082  12B0                     STR_71:	
  1083  12B0  3443               	retlw	67	;'C'
  1084  12B1  3448               	retlw	72	;'H'
  1085  12B2  3432               	retlw	50	;'2'
  1086  12B3  3420               	retlw	32	;' '
  1087  12B4  342D               	retlw	45	;'-'
  1088  12B5  3420               	retlw	32	;' '
  1089  12B6  344F               	retlw	79	;'O'
  1090  12B7  344E               	retlw	78	;'N'
  1091  12B8  3400               	retlw	0
  1092  12B9                     STR_95:	
  1093  12B9  3443               	retlw	67	;'C'
  1094  12BA  3448               	retlw	72	;'H'
  1095  12BB  3433               	retlw	51	;'3'
  1096  12BC  3420               	retlw	32	;' '
  1097  12BD  342D               	retlw	45	;'-'
  1098  12BE  3420               	retlw	32	;' '
  1099  12BF  344F               	retlw	79	;'O'
  1100  12C0  344E               	retlw	78	;'N'
  1101  12C1  3400               	retlw	0
  1102  12C2                     STR_1:	
  1103  12C2  344D               	retlw	77	;'M'
  1104  12C3  3475               	retlw	117	;'u'
  1105  12C4  346C               	retlw	108	;'l'
  1106  12C5  3474               	retlw	116	;'t'
  1107  12C6  3469               	retlw	105	;'i'
  1108  12C7  345F               	retlw	95	;'_'
  1109  12C8  3452               	retlw	82	;'R'
  1110  12C9  3458               	retlw	88	;'X'
  1111  12CA  3400               	retlw	0
  1112  12CB                     STR_34:	
  1113  12CB  3420               	retlw	32	;' '
  1114  12CC  3473               	retlw	115	;'s'
  1115  12CD  346B               	retlw	107	;'k'
  1116  12CE  3469               	retlw	105	;'i'
  1117  12CF  3470               	retlw	112	;'p'
  1118  12D0  3470               	retlw	112	;'p'
  1119  12D1  3465               	retlw	101	;'e'
  1120  12D2  3464               	retlw	100	;'d'
  1121  12D3  3400               	retlw	0
  1122  12D4                     STR_164:	
  1123  12D4  3477               	retlw	119	;'w'
  1124  12D5  3461               	retlw	97	;'a'
  1125  12D6  3469               	retlw	105	;'i'
  1126  12D7  3474               	retlw	116	;'t'
  1127  12D8  342E               	retlw	46	;'.'
  1128  12D9  342E               	retlw	46	;'.'
  1129  12DA  342E               	retlw	46	;'.'
  1130  12DB  3400               	retlw	0
  1131  12DC                     STR_111:	
  1132  12DC  3454               	retlw	84	;'T'
  1133  12DD  3465               	retlw	101	;'e'
  1134  12DE  3473               	retlw	115	;'s'
  1135  12DF  3474               	retlw	116	;'t'
  1136  12E0  3420               	retlw	32	;' '
  1137  12E1  3452               	retlw	82	;'R'
  1138  12E2  3446               	retlw	70	;'F'
  1139  12E3  3400               	retlw	0
  1140  12E4                     STR_110:	
  1141  12E4  3420               	retlw	32	;' '
  1142  12E5  3431               	retlw	49	;'1'
  1143  12E6  3430               	retlw	48	;'0'
  1144  12E7  3400               	retlw	0
  1145  12E8                     STR_114:	
  1146  12E8  3420               	retlw	32	;' '
  1147  12E9  3431               	retlw	49	;'1'
  1148  12EA  3431               	retlw	49	;'1'
  1149  12EB  3400               	retlw	0
  1150  12EC                     STR_116:	
  1151  12EC  3420               	retlw	32	;' '
  1152  12ED  3431               	retlw	49	;'1'
  1153  12EE  3432               	retlw	50	;'2'
  1154  12EF  3400               	retlw	0
  1155  12F0                     STR_128:	
  1156  12F0  3420               	retlw	32	;' '
  1157  12F1  3431               	retlw	49	;'1'
  1158  12F2  3433               	retlw	51	;'3'
  1159  12F3  3400               	retlw	0
  1160  12F4                     STR_130:	
  1161  12F4  3420               	retlw	32	;' '
  1162  12F5  3431               	retlw	49	;'1'
  1163  12F6  3434               	retlw	52	;'4'
  1164  12F7  3400               	retlw	0
  1165  12F8                     STR_146:	
  1166  12F8  3420               	retlw	32	;' '
  1167  12F9  3431               	retlw	49	;'1'
  1168  12FA  3435               	retlw	53	;'5'
  1169  12FB  3400               	retlw	0
  1170  12FC                     STR_154:	
  1171  12FC  3420               	retlw	32	;' '
  1172  12FD  3431               	retlw	49	;'1'
  1173  12FE  3436               	retlw	54	;'6'
  1174  12FF  3400               	retlw	0
  1175  1300                     STR_150:	
  1176  1300  3420               	retlw	32	;' '
  1177  1301  3431               	retlw	49	;'1'
  1178  1302  3437               	retlw	55	;'7'
  1179  1303  3400               	retlw	0
  1180  1304                     STR_76:	
  1181  1304  3420               	retlw	32	;' '
  1182  1305  3436               	retlw	54	;'6'
  1183  1306  3461               	retlw	97	;'a'
  1184  1307  3400               	retlw	0
  1185  1308                     STR_102:	
  1186  1308  3420               	retlw	32	;' '
  1187  1309  3438               	retlw	56	;'8'
  1188  130A  3461               	retlw	97	;'a'
  1189  130B  3400               	retlw	0
  1190  130C                     STR_78:	
  1191  130C  3420               	retlw	32	;' '
  1192  130D  3436               	retlw	54	;'6'
  1193  130E  3462               	retlw	98	;'b'
  1194  130F  3400               	retlw	0
  1195  1310                     STR_100:	
  1196  1310  3420               	retlw	32	;' '
  1197  1311  3438               	retlw	56	;'8'
  1198  1312  3462               	retlw	98	;'b'
  1199  1313  3400               	retlw	0
  1200  1314                     STR_56:	
  1201  1314  3420               	retlw	32	;' '
  1202  1315  3433               	retlw	51	;'3'
  1203  1316  3400               	retlw	0
  1204  1317                     STR_60:	
  1205  1317  3420               	retlw	32	;' '
  1206  1318  3434               	retlw	52	;'4'
  1207  1319  3400               	retlw	0
  1208  131A                     STR_70:	
  1209  131A  3420               	retlw	32	;' '
  1210  131B  3435               	retlw	53	;'5'
  1211  131C  3400               	retlw	0
  1212  131D                     STR_82:	
  1213  131D  3420               	retlw	32	;' '
  1214  131E  3436               	retlw	54	;'6'
  1215  131F  3400               	retlw	0
  1216  1320                     STR_86:	
  1217  1320  3420               	retlw	32	;' '
  1218  1321  3437               	retlw	55	;'7'
  1219  1322  3400               	retlw	0
  1220  1323                     STR_94:	
  1221  1323  3420               	retlw	32	;' '
  1222  1324  3438               	retlw	56	;'8'
  1223  1325  3400               	retlw	0
  1224  1326                     STR_106:	
  1225  1326  3420               	retlw	32	;' '
  1226  1327  3439               	retlw	57	;'9'
  1227  1328  3400               	retlw	0
  1228  1329                     STR_66:	
  1229  1329  346F               	retlw	111	;'o'
  1230  132A  346B               	retlw	107	;'k'
  1231  132B  3400               	retlw	0
  1232  108A                     
  1233                           ; #config settings
  1234  0000                     
  1235                           	psect	cinit
  1236  0097                     start_initialization:	
  1237  0097                     __initialization:	
  1238                           
  1239                           ;initializer for _one_second_timer
  1240  0097  30E8               	movlw	232
  1241  0098  00EA               	movwf	__pdataBANK0& (0+127)
  1242  0099  3003               	movlw	3
  1243  009A  00EB               	movwf	(__pdataBANK0+1)& (0+127)
  1244                           
  1245                           ; Clear objects allocated to BANK0
  1246  009B  304F               	movlw	low __pbssBANK0
  1247  009C  0084               	movwf	4
  1248  009D  3000               	movlw	high __pbssBANK0
  1249  009E  0085               	movwf	5
  1250  009F  3018               	movlw	24
  1251  00A0  3186  265B         	fcall	clear_ram0
  1252  00A2                     end_of_initialization:	
  1253                           ;End of C runtime variable initialization code
  1254                           
  1255  00A2                     __end_of__initialization:	
  1256  00A2  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1257  00A3  0020               	movlb	0
  1258  00A4  3188  2805         	ljmp	_main	;jump to C main() function
  1259                           
  1260                           	psect	bssBANK0
  1261  004F                     __pbssBANK0:	
  1262  004F                     _ADC_cur_sink_val:	
  1263  004F                     	ds	2
  1264  0051                     _curent_sink_val:	
  1265  0051                     	ds	2
  1266  0053                     _current_sink_stable:	
  1267  0053                     	ds	2
  1268  0055                     _current_sink_timer:	
  1269  0055                     	ds	2
  1270  0057                     _motor_direction_timer:	
  1271  0057                     	ds	2
  1272  0059                     _pickit_timer:	
  1273  0059                     	ds	2
  1274  005B                     _testjig_timer:	
  1275  005B                     	ds	2
  1276  005D                     _tj_timer:	
  1277  005D                     	ds	2
  1278  005F                     _uart_receive_timer:	
  1279  005F                     	ds	2
  1280  0061                     _hund:	
  1281  0061                     	ds	1
  1282  0062                     _pickit_red_counter:	
  1283  0062                     	ds	1
  1284  0063                     _ten:	
  1285  0063                     	ds	1
  1286  0064                     _ten_thou:	
  1287  0064                     	ds	1
  1288  0065                     _unit:	
  1289  0065                     	ds	1
  1290  0066                     _thou:	
  1291  0066                     	ds	1
  1292                           
  1293                           	psect	dataBANK0
  1294  006A                     __pdataBANK0:	
  1295  006A                     _one_second_timer:	
  1296  006A                     	ds	2
  1297                           
  1298                           	psect	clrtext
  1299  065B                     clear_ram0:	
  1300                           ;	Called with FSR0 containing the base address, and
  1301                           ;	WREG with the size to clear
  1302                           
  1303  065B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1304  065C                     clrloop0:	
  1305  065C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1306  065D  3101               	addfsr 0,1
  1307  065E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1308  065F  2E5C               	goto	clrloop0	;have we reached the end yet?
  1309  0660  3400               	retlw	0	;all done for this memory range, return
  1310                           
  1311                           	psect	cstackCOMMON
  1312  0070                     __pcstackCOMMON:	
  1313  0070                     ?_init_ADC:	
  1314  0070                     ??_init_ADC:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ?_init_current_sink:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ??_init_current_sink:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ?_buzz_one:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ?_init_i2c:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     ??_init_i2c:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0070                     ?_debug_fast_tx:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0070                     ?_power_supply_set:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0070                     ??_power_supply_set:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0070                     ?_TX_one:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344  0070                     ??_TX_one:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0070                     ?_RX_one:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0070                     ??_RX_one:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353  0070                     ?_testjig_done:	
  1354                           ; 1 bytes @ 0x0
  1355                           
  1356  0070                     ?_digitalpot:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359  0070                     ?_isr:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0070                     ??_isr:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0070                     ?_main:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  0070                     ?_i2c_Start:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0070                     ??_i2c_Start:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  0070                     ?_i2c_Write:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  0070                     ??_i2c_Write:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0070                     ?_i2c_Stop:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0070                     ??_i2c_Stop:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  0070                     ?_i2c_write_char:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  0070                     ?_clear_lcd:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0070                     ?_i2c_first_line:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  0070                     ?_i2c_second_line:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  0070                     ?___bmul:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  0070                     ?_ADC_get_val:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404  0070                     ?___wmul:	
  1405                           ; 2 bytes @ 0x0
  1406                           
  1407  0070                     ?___ftpack:	
  1408                           ; 2 bytes @ 0x0
  1409                           
  1410  0070                     i2c_Write@data:	
  1411                           ; 3 bytes @ 0x0
  1412                           
  1413  0070                     power_supply_set@supply:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416  0070                     ___bmul@multiplicand:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419  0070                     buzz_one@time:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  0070                     debug_fast_tx@data:	
  1423                           ; 2 bytes @ 0x0
  1424                           
  1425  0070                     ___wmul@multiplier:	
  1426                           ; 2 bytes @ 0x0
  1427                           
  1428  0070                     ___ftpack@arg:	
  1429                           ; 2 bytes @ 0x0
  1430                           
  1431                           
  1432                           ; 3 bytes @ 0x0
  1433  0070                     	ds	1
  1434  0071                     ?_init_i2c_lcd_5v:	
  1435  0071                     ??_digitalpot:	
  1436                           ; 1 bytes @ 0x1
  1437                           
  1438  0071                     ?_i2c_Write_string:	
  1439                           ; 1 bytes @ 0x1
  1440                           
  1441  0071                     ??_i2c_write_char:	
  1442                           ; 1 bytes @ 0x1
  1443                           
  1444  0071                     ??_clear_lcd:	
  1445                           ; 1 bytes @ 0x1
  1446                           
  1447  0071                     ??_i2c_first_line:	
  1448                           ; 1 bytes @ 0x1
  1449                           
  1450  0071                     ??_i2c_second_line:	
  1451                           ; 1 bytes @ 0x1
  1452                           
  1453  0071                     ?_lcd_set_cursor:	
  1454                           ; 1 bytes @ 0x1
  1455                           
  1456  0071                     ??___bmul:	
  1457                           ; 1 bytes @ 0x1
  1458                           
  1459  0071                     i2c_write_char@char_data:	
  1460                           ; 1 bytes @ 0x1
  1461                           
  1462  0071                     init_i2c_lcd_5v@single1_double2:	
  1463                           ; 1 bytes @ 0x1
  1464                           
  1465  0071                     lcd_set_cursor@col:	
  1466                           ; 1 bytes @ 0x1
  1467                           
  1468  0071                     TX_one@data:	
  1469                           ; 1 bytes @ 0x1
  1470                           
  1471  0071                     RX_one@i:	
  1472                           ; 1 bytes @ 0x1
  1473                           
  1474  0071                     ___bmul@product:	
  1475                           ; 1 bytes @ 0x1
  1476                           
  1477  0071                     i2c_Write_string@data:	
  1478                           ; 1 bytes @ 0x1
  1479                           
  1480                           
  1481                           ; 2 bytes @ 0x1
  1482  0071                     	ds	1
  1483  0072                     ??_buzz_one:	
  1484  0072                     ??_init_i2c_lcd_5v:	
  1485                           ; 1 bytes @ 0x2
  1486                           
  1487  0072                     ??_debug_fast_tx:	
  1488                           ; 1 bytes @ 0x2
  1489                           
  1490  0072                     ??_lcd_set_cursor:	
  1491                           ; 1 bytes @ 0x2
  1492                           
  1493  0072                     lcd_set_cursor@row:	
  1494                           ; 1 bytes @ 0x2
  1495                           
  1496  0072                     debug_fast_tx@i:	
  1497                           ; 1 bytes @ 0x2
  1498                           
  1499  0072                     TX_one@i:	
  1500                           ; 1 bytes @ 0x2
  1501                           
  1502  0072                     RX_one@data:	
  1503                           ; 1 bytes @ 0x2
  1504                           
  1505  0072                     ___bmul@multiplier:	
  1506                           ; 1 bytes @ 0x2
  1507                           
  1508  0072                     ___wmul@multiplicand:	
  1509                           ; 1 bytes @ 0x2
  1510                           
  1511                           
  1512                           ; 2 bytes @ 0x2
  1513  0072                     	ds	1
  1514  0073                     ??_ADC_get_val:	
  1515  0073                     ??_i2c_Write_string:	
  1516                           ; 1 bytes @ 0x3
  1517                           
  1518  0073                     lcd_set_cursor@LCD_position:	
  1519                           ; 1 bytes @ 0x3
  1520                           
  1521  0073                     ADC_get_val@channel:	
  1522                           ; 1 bytes @ 0x3
  1523                           
  1524  0073                     digitalpot@value:	
  1525                           ; 1 bytes @ 0x3
  1526                           
  1527  0073                     ___ftpack@exp:	
  1528                           ; 1 bytes @ 0x3
  1529                           
  1530                           
  1531                           ; 1 bytes @ 0x3
  1532  0073                     	ds	1
  1533  0074                     ?_print_screen:	
  1534  0074                     ?_Vout_set:	
  1535                           ; 1 bytes @ 0x4
  1536                           
  1537  0074                     ??___wmul:	
  1538                           ; 1 bytes @ 0x4
  1539                           
  1540  0074                     init_i2c_lcd_5v@contrast:	
  1541                           ; 1 bytes @ 0x4
  1542                           
  1543  0074                     ___ftpack@sign:	
  1544                           ; 1 bytes @ 0x4
  1545                           
  1546  0074                     print_screen@top:	
  1547                           ; 1 bytes @ 0x4
  1548                           
  1549  0074                     ADC_get_val@return_val:	
  1550                           ; 2 bytes @ 0x4
  1551                           
  1552  0074                     Vout_set@Volts:	
  1553                           ; 2 bytes @ 0x4
  1554                           
  1555  0074                     ___wmul@product:	
  1556                           ; 2 bytes @ 0x4
  1557                           
  1558                           
  1559                           ; 2 bytes @ 0x4
  1560  0074                     	ds	1
  1561  0075                     ??___ftpack:	
  1562                           
  1563                           ; 1 bytes @ 0x5
  1564  0075                     	ds	1
  1565  0076                     ??_Vout_set:	
  1566  0076                     ?_ten_thou_conv:	
  1567                           ; 1 bytes @ 0x6
  1568                           
  1569  0076                     ten_thou_conv@n:	
  1570                           ; 1 bytes @ 0x6
  1571                           
  1572  0076                     print_screen@bottom:	
  1573                           ; 2 bytes @ 0x6
  1574                           
  1575  0076                     Vout_set@digi_step:	
  1576                           ; 2 bytes @ 0x6
  1577                           
  1578                           
  1579                           ; 4 bytes @ 0x6
  1580  0076                     	ds	2
  1581  0078                     ??_print_screen:	
  1582  0078                     ?_print_error:	
  1583                           ; 1 bytes @ 0x8
  1584                           
  1585  0078                     ??_testjig_done:	
  1586                           ; 1 bytes @ 0x8
  1587                           
  1588  0078                     ??_ten_thou_conv:	
  1589                           ; 1 bytes @ 0x8
  1590                           
  1591  0078                     ?___lwtoft:	
  1592                           ; 1 bytes @ 0x8
  1593                           
  1594  0078                     print_error@top:	
  1595                           ; 3 bytes @ 0x8
  1596                           
  1597  0078                     ___lwtoft@c:	
  1598                           ; 2 bytes @ 0x8
  1599                           
  1600                           
  1601                           ; 2 bytes @ 0x8
  1602  0078                     	ds	2
  1603  007A                     print_error@bottom:	
  1604                           
  1605                           ; 2 bytes @ 0xA
  1606  007A                     	ds	1
  1607  007B                     ??_lcd_print_int:	
  1608  007B                     ??___ftmul:	
  1609                           ; 1 bytes @ 0xB
  1610                           
  1611  007B                     ??___lwtoft:	
  1612                           ; 1 bytes @ 0xB
  1613                           
  1614  007B                     testjig_done@state:	
  1615                           ; 1 bytes @ 0xB
  1616                           
  1617                           
  1618                           ; 1 bytes @ 0xB
  1619  007B                     	ds	3
  1620  007E                     ??_get_30v_current:	
  1621                           
  1622                           	psect	cstackBANK0
  1623  0020                     __pcstackBANK0:	
  1624                           ; 1 bytes @ 0xE
  1625                           
  1626  0020                     ??_print_error:	
  1627  0020                     ?_lcd_print_int:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0020                     ?___ftmul:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0020                     lcd_print_int@number:	
  1634                           ; 3 bytes @ 0x0
  1635                           
  1636  0020                     ___ftmul@f1:	
  1637                           ; 2 bytes @ 0x0
  1638                           
  1639                           
  1640                           ; 3 bytes @ 0x0
  1641  0020                     	ds	2
  1642  0022                     lcd_print_int@pos:	
  1643                           
  1644                           ; 2 bytes @ 0x2
  1645  0022                     	ds	1
  1646  0023                     ___ftmul@f2:	
  1647                           
  1648                           ; 3 bytes @ 0x3
  1649  0023                     	ds	1
  1650  0024                     lcd_print_int@decimal:	
  1651                           
  1652                           ; 1 bytes @ 0x4
  1653  0024                     	ds	1
  1654  0025                     lcd_print_int@ten_thou_digit:	
  1655                           
  1656                           ; 1 bytes @ 0x5
  1657  0025                     	ds	1
  1658  0026                     ___ftmul@exp:	
  1659                           
  1660                           ; 1 bytes @ 0x6
  1661  0026                     	ds	1
  1662  0027                     ___ftmul@f3_as_product:	
  1663                           
  1664                           ; 3 bytes @ 0x7
  1665  0027                     	ds	3
  1666  002A                     ___ftmul@cntr:	
  1667                           
  1668                           ; 1 bytes @ 0xA
  1669  002A                     	ds	1
  1670  002B                     ___ftmul@sign:	
  1671                           
  1672                           ; 1 bytes @ 0xB
  1673  002B                     	ds	1
  1674  002C                     ?___ftadd:	
  1675  002C                     ___ftadd@f1:	
  1676                           ; 3 bytes @ 0xC
  1677                           
  1678                           
  1679                           ; 3 bytes @ 0xC
  1680  002C                     	ds	3
  1681  002F                     ___ftadd@f2:	
  1682                           
  1683                           ; 3 bytes @ 0xF
  1684  002F                     	ds	3
  1685  0032                     ??___ftadd:	
  1686                           
  1687                           ; 1 bytes @ 0x12
  1688  0032                     	ds	3
  1689  0035                     ___ftadd@sign:	
  1690                           
  1691                           ; 1 bytes @ 0x15
  1692  0035                     	ds	1
  1693  0036                     ___ftadd@exp2:	
  1694                           
  1695                           ; 1 bytes @ 0x16
  1696  0036                     	ds	1
  1697  0037                     ___ftadd@exp1:	
  1698                           
  1699                           ; 1 bytes @ 0x17
  1700  0037                     	ds	1
  1701  0038                     ?___fttol:	
  1702  0038                     ___fttol@f1:	
  1703                           ; 4 bytes @ 0x18
  1704                           
  1705                           
  1706                           ; 3 bytes @ 0x18
  1707  0038                     	ds	4
  1708  003C                     ??___fttol:	
  1709                           
  1710                           ; 1 bytes @ 0x1C
  1711  003C                     	ds	3
  1712  003F                     ___fttol@sign1:	
  1713                           
  1714                           ; 1 bytes @ 0x1F
  1715  003F                     	ds	1
  1716  0040                     ___fttol@lval:	
  1717                           
  1718                           ; 4 bytes @ 0x20
  1719  0040                     	ds	4
  1720  0044                     ___fttol@exp1:	
  1721                           
  1722                           ; 1 bytes @ 0x24
  1723  0044                     	ds	1
  1724  0045                     ?_get_30v_current:	
  1725                           
  1726                           ; 2 bytes @ 0x25
  1727  0045                     	ds	2
  1728  0047                     get_30v_current@temp:	
  1729                           
  1730                           ; 2 bytes @ 0x27
  1731  0047                     	ds	2
  1732  0049                     ??_main:	
  1733                           
  1734                           ; 1 bytes @ 0x29
  1735  0049                     	ds	3
  1736  004C                     main@i:	
  1737                           
  1738                           ; 2 bytes @ 0x2C
  1739  004C                     	ds	2
  1740  004E                     main@RX_data:	
  1741                           
  1742                           ; 1 bytes @ 0x2E
  1743  004E                     	ds	1
  1744                           
  1745                           	psect	maintext
  1746  0805                     __pmaintext:	
  1747 ;;
  1748 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1749 ;;
  1750 ;; *************** function _main *****************
  1751 ;; Defined at:
  1752 ;;		line 455 in file "Multi_RX_testjig_v1.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  i               2   44[BANK0 ] unsigned int 
  1757 ;;  RX_data         1   46[BANK0 ] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : B1F/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1768 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1769 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1770 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1771 ;;Total ram usage:        6 bytes
  1772 ;; Hardware stack levels required when called:    5
  1773 ;; This function calls:
  1774 ;;		_ADC_get_val
  1775 ;;		_RX_one
  1776 ;;		_TX_one
  1777 ;;		_Vout_set
  1778 ;;		_buzz_one
  1779 ;;		_debug_fast_tx
  1780 ;;		_get_30v_current
  1781 ;;		_init_ADC
  1782 ;;		_init_current_sink
  1783 ;;		_init_i2c
  1784 ;;		_init_i2c_lcd_5v
  1785 ;;		_lcd_print_int
  1786 ;;		_power_supply_set
  1787 ;;		_print_error
  1788 ;;		_print_screen
  1789 ;;		_testjig_done
  1790 ;; This function is called by:
  1791 ;;		Startup code after reset
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function _main
  1797  0805                     _main:	
  1798                           
  1799                           ;Multi_RX_testjig_v1.c: 458: OSCCON = 0x7A;
  1800                           
  1801                           ;incstack = 0
  1802                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1803  0805  307A               	movlw	122
  1804  0806  0021               	movlb	1	; select bank1
  1805  0807  0099               	movwf	25	;volatile
  1806                           
  1807                           ;Multi_RX_testjig_v1.c: 460: OPTION_REG = 0b11010000;
  1808  0808  30D0               	movlw	208
  1809  0809  0095               	movwf	21	;volatile
  1810                           
  1811                           ;Multi_RX_testjig_v1.c: 461: TMR0 = 0x00;
  1812  080A  0020               	movlb	0	; select bank0
  1813  080B  0195               	clrf	21	;volatile
  1814                           
  1815                           ;Multi_RX_testjig_v1.c: 462: TMR0IF = 0;
  1816  080C  110B               	bcf	11,2	;volatile
  1817                           
  1818                           ;Multi_RX_testjig_v1.c: 463: TMR0IE = 1;
  1819  080D  168B               	bsf	11,5	;volatile
  1820                           
  1821                           ;Multi_RX_testjig_v1.c: 466: TRISA = 0b00001111;
  1822  080E  300F               	movlw	15
  1823  080F  0021               	movlb	1	; select bank1
  1824  0810  008C               	movwf	12	;volatile
  1825                           
  1826                           ;Multi_RX_testjig_v1.c: 467: TRISB = 0b11001111;
  1827  0811  30CF               	movlw	207
  1828  0812  008D               	movwf	13	;volatile
  1829                           
  1830                           ;Multi_RX_testjig_v1.c: 468: TRISC = 0b00011010;
  1831  0813  301A               	movlw	26
  1832  0814  008E               	movwf	14	;volatile
  1833                           
  1834                           ;Multi_RX_testjig_v1.c: 469: TRISD = 0b10001011;
  1835  0815  308B               	movlw	139
  1836  0816  008F               	movwf	15	;volatile
  1837                           
  1838                           ;Multi_RX_testjig_v1.c: 470: TRISE = 0b11110110;
  1839  0817  30F6               	movlw	246
  1840  0818  0090               	movwf	16	;volatile
  1841                           
  1842                           ;Multi_RX_testjig_v1.c: 471: TRISF = 0b00101111;
  1843  0819  302F               	movlw	47
  1844  081A  0026               	movlb	6	; select bank6
  1845  081B  008C               	movwf	12	;volatile
  1846                           
  1847                           ;Multi_RX_testjig_v1.c: 472: TRISG = 0b11101111;
  1848  081C  30EF               	movlw	239
  1849  081D  008D               	movwf	13	;volatile
  1850                           
  1851                           ;Multi_RX_testjig_v1.c: 474: PORTA = 0b00000000;
  1852  081E  0020               	movlb	0	; select bank0
  1853  081F  018C               	clrf	12	;volatile
  1854                           
  1855                           ;Multi_RX_testjig_v1.c: 475: PORTB = 0b00000000;
  1856  0820  018D               	clrf	13	;volatile
  1857                           
  1858                           ;Multi_RX_testjig_v1.c: 476: PORTC = 0b00000000;
  1859  0821  018E               	clrf	14	;volatile
  1860                           
  1861                           ;Multi_RX_testjig_v1.c: 477: PORTD = 0b01000000;
  1862  0822  3040               	movlw	64
  1863  0823  008F               	movwf	15	;volatile
  1864                           
  1865                           ;Multi_RX_testjig_v1.c: 478: PORTE = 0b00000000;
  1866  0824  0190               	clrf	16	;volatile
  1867                           
  1868                           ;Multi_RX_testjig_v1.c: 479: PORTF = 0b00000000;
  1869  0825  0025               	movlb	5	; select bank5
  1870  0826  018C               	clrf	12	;volatile
  1871                           
  1872                           ;Multi_RX_testjig_v1.c: 480: PORTG = 0b00000000;
  1873  0827  018D               	clrf	13	;volatile
  1874                           
  1875                           ;Multi_RX_testjig_v1.c: 482: WPUB = 0b00000000;
  1876  0828  0024               	movlb	4	; select bank4
  1877  0829  018D               	clrf	13	;volatile
  1878                           
  1879                           ;Multi_RX_testjig_v1.c: 483: WPUD = 0b00000000;
  1880  082A  018F               	clrf	15	;volatile
  1881                           
  1882                           ;Multi_RX_testjig_v1.c: 484: WPUE = 0b00000000;
  1883  082B  0190               	clrf	16	;volatile
  1884                           
  1885                           ;Multi_RX_testjig_v1.c: 486: ANSELA = 0b00000000;
  1886  082C  0023               	movlb	3	; select bank3
  1887  082D  018C               	clrf	12	;volatile
  1888                           
  1889                           ;Multi_RX_testjig_v1.c: 487: ANSELB = 0b00001100;
  1890  082E  300C               	movlw	12
  1891  082F  008D               	movwf	13	;volatile
  1892                           
  1893                           ;Multi_RX_testjig_v1.c: 488: ANSELD = 0b00001111;
  1894  0830  300F               	movlw	15
  1895  0831  008F               	movwf	15	;volatile
  1896                           
  1897                           ;Multi_RX_testjig_v1.c: 489: ANSELE = 0b00000100;
  1898  0832  3004               	movlw	4
  1899  0833  0090               	movwf	16	;volatile
  1900                           
  1901                           ;Multi_RX_testjig_v1.c: 490: ANSELF = 0b00000000;
  1902  0834  0028               	movlb	8	; select bank8
  1903  0835  018C               	clrf	12	;volatile
  1904                           
  1905                           ;Multi_RX_testjig_v1.c: 491: ANSELG = 0b00000000;
  1906  0836  018D               	clrf	13	;volatile
  1907                           
  1908                           ;Multi_RX_testjig_v1.c: 494: init_ADC();
  1909  0837  3186  2654  3188   	fcall	_init_ADC
  1910                           
  1911                           ;Multi_RX_testjig_v1.c: 495: init_current_sink();
  1912  083A  3186  263F  3188   	fcall	_init_current_sink
  1913                           
  1914                           ;Multi_RX_testjig_v1.c: 497: current_sink_state = current_sink_off;
  1915  083D  3005               	movlw	5
  1916  083E  0020               	movlb	0	; select bank0
  1917  083F  00E9               	movwf	_pickit_state
  1918                           
  1919                           ;Multi_RX_testjig_v1.c: 498: RA5 = 0;
  1920  0840  128C               	bcf	12,5	;volatile
  1921                           
  1922                           ;Multi_RX_testjig_v1.c: 499: buzz_one(200);
  1923  0841  30C8               	movlw	200
  1924  0842  00F0               	movwf	buzz_one@time
  1925  0843  01F1               	clrf	buzz_one@time+1
  1926  0844  3185  2564  3188   	fcall	_buzz_one
  1927                           
  1928                           ;Multi_RX_testjig_v1.c: 500: RA5 = 1;
  1929  0847  0020               	movlb	0	; select bank0
  1930  0848  168C               	bsf	12,5	;volatile
  1931                           
  1932                           ;Multi_RX_testjig_v1.c: 501: init_i2c();
  1933  0849  3186  2628  3188   	fcall	_init_i2c
  1934                           
  1935                           ;Multi_RX_testjig_v1.c: 508: init_i2c_lcd_5v(8, 0x38);
  1936  084C  3038               	movlw	56
  1937  084D  00F1               	movwf	init_i2c_lcd_5v@single1_double2
  1938  084E  3008               	movlw	8
  1939  084F  3181  21E2  3188   	fcall	_init_i2c_lcd_5v
  1940                           
  1941                           ;Multi_RX_testjig_v1.c: 509: print_screen("Multi_RX", "Test-Jig|Startup");
  1942  0852  30C2               	movlw	low (STR_1| (0+32768))
  1943  0853  00F4               	movwf	print_screen@top
  1944  0854  3092               	movlw	high (STR_1| (0+32768))
  1945  0855  00F5               	movwf	print_screen@top+1
  1946  0856  3059               	movlw	low (STR_2| (0+32768))
  1947  0857  00F6               	movwf	print_screen@bottom
  1948  0858  3090               	movlw	high (STR_2| (0+32768))
  1949  0859  00F7               	movwf	print_screen@bottom+1
  1950  085A  2731  3188         	fcall	_print_screen
  1951                           
  1952                           ;Multi_RX_testjig_v1.c: 510: RA4 = 1;
  1953  085C  0020               	movlb	0	; select bank0
  1954  085D  160C               	bsf	12,4	;volatile
  1955                           
  1956                           ;Multi_RX_testjig_v1.c: 511: GIE = 1;
  1957  085E  178B               	bsf	11,7	;volatile
  1958                           
  1959                           ;Multi_RX_testjig_v1.c: 512: LATC7 = 1;
  1960  085F  0022               	movlb	2	; select bank2
  1961  0860  178E               	bsf	14,7	;volatile
  1962                           
  1963                           ;Multi_RX_testjig_v1.c: 513: _delay((unsigned long)((100)*(16000000/4000.0)));
  1964  0861  3003               	movlw	3
  1965  0862  0020               	movlb	0	; select bank0
  1966  0863  00CB               	movwf	??_main+2
  1967  0864  3008               	movlw	8
  1968  0865  00CA               	movwf	??_main+1
  1969  0866  3078               	movlw	120
  1970  0867  00C9               	movwf	??_main
  1971  0868                     u4037:	
  1972  0868  0BC9               	decfsz	??_main,f
  1973  0869  2868               	goto	u4037
  1974  086A  0BCA               	decfsz	??_main+1,f
  1975  086B  2868               	goto	u4037
  1976  086C  0BCB               	decfsz	??_main+2,f
  1977  086D  2868               	goto	u4037
  1978                           
  1979                           ;Multi_RX_testjig_v1.c: 514: debug_fast_tx(0xAAAA);
  1980  086E  30AA               	movlw	170
  1981  086F  00F0               	movwf	debug_fast_tx@data
  1982  0870  00F1               	movwf	debug_fast_tx@data+1
  1983  0871  3185  2537  3188   	fcall	_debug_fast_tx
  1984                           
  1985                           ;Multi_RX_testjig_v1.c: 515: _delay((unsigned long)((100)*(16000000/4000000.0)));
  1986  0874  3085               	movlw	133
  1987  0875  0020               	movlb	0	; select bank0
  1988  0876  00C9               	movwf	??_main
  1989  0877                     u4047:	
  1990  0877  0BC9               	decfsz	??_main,f
  1991  0878  2877               	goto	u4047
  1992                           
  1993                           ;Multi_RX_testjig_v1.c: 516: debug_fast_tx(0x5555);
  1994  0879  3055               	movlw	85
  1995  087A  00F0               	movwf	debug_fast_tx@data
  1996  087B  00F1               	movwf	debug_fast_tx@data+1
  1997  087C  3185  2537  3188   	fcall	_debug_fast_tx
  1998                           
  1999                           ;Multi_RX_testjig_v1.c: 517: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2000  087F  3085               	movlw	133
  2001  0880  0020               	movlb	0	; select bank0
  2002  0881  00C9               	movwf	??_main
  2003  0882                     u4057:	
  2004  0882  0BC9               	decfsz	??_main,f
  2005  0883  2882               	goto	u4057
  2006                           
  2007                           ;Multi_RX_testjig_v1.c: 525: if(RF3 == 1)
  2008  0884  0025               	movlb	5	; select bank5
  2009  0885  1D8C               	btfss	12,3	;volatile
  2010  0886  2891               	goto	l296
  2011                           
  2012                           ;Multi_RX_testjig_v1.c: 526: print_error("Multi_RX", "-> Insert PCB");
  2013  0887  30C2               	movlw	low (STR_1| (0+32768))
  2014  0888  00F8               	movwf	print_error@top
  2015  0889  3092               	movlw	high (STR_1| (0+32768))
  2016  088A  00F9               	movwf	print_error@top+1
  2017  088B  3016               	movlw	low (STR_4| (0+32768))
  2018  088C  00FA               	movwf	print_error@bottom
  2019  088D  3091               	movlw	high (STR_4| (0+32768))
  2020  088E  00FB               	movwf	print_error@bottom+1
  2021  088F  2747  3188         	fcall	_print_error
  2022  0891                     l296:	
  2023                           
  2024                           ;Multi_RX_testjig_v1.c: 529: print_screen("Powering board", "");
  2025  0891  30DA               	movlw	low (STR_5| (0+32768))
  2026  0892  00F4               	movwf	print_screen@top
  2027  0893  3090               	movlw	high (STR_5| (0+32768))
  2028  0894  00F5               	movwf	print_screen@top+1
  2029  0895  308A               	movlw	low ((STR_155+15)| (0+32768))
  2030  0896  00F6               	movwf	print_screen@bottom
  2031  0897  3090               	movlw	high ((STR_155+15)| (0+32768))
  2032  0898  00F7               	movwf	print_screen@bottom+1
  2033  0899  2731               	fcall	_print_screen
  2034                           
  2035                           ;Multi_RX_testjig_v1.c: 532: Vout_set(12);
  2036  089A  300C               	movlw	12
  2037  089B  00F4               	movwf	Vout_set@Volts
  2038  089C  01F5               	clrf	Vout_set@Volts+1
  2039  089D  3180  20A6  3188   	fcall	_Vout_set
  2040                           
  2041                           ;Multi_RX_testjig_v1.c: 533: power_supply_set(0);
  2042  08A0  3000               	movlw	0
  2043  08A1  3185  256C  3188   	fcall	_power_supply_set
  2044                           
  2045                           ;Multi_RX_testjig_v1.c: 534: _delay((unsigned long)((50)*(16000000/4000.0)));
  2046  08A4  3002               	movlw	2
  2047  08A5  0020               	movlb	0	; select bank0
  2048  08A6  00CB               	movwf	??_main+2
  2049  08A7  3004               	movlw	4
  2050  08A8  00CA               	movwf	??_main+1
  2051  08A9  30BA               	movlw	186
  2052  08AA  00C9               	movwf	??_main
  2053  08AB                     u4067:	
  2054  08AB  0BC9               	decfsz	??_main,f
  2055  08AC  28AB               	goto	u4067
  2056  08AD  0BCA               	decfsz	??_main+1,f
  2057  08AE  28AB               	goto	u4067
  2058  08AF  0BCB               	decfsz	??_main+2,f
  2059  08B0  28AB               	goto	u4067
  2060  08B1  0000               	nop
  2061                           
  2062                           ;Multi_RX_testjig_v1.c: 535: ADC_val = ADC_get_val(0b01011111);
  2063  08B2  305F               	movlw	95
  2064  08B3  279C  3188         	fcall	_ADC_get_val
  2065                           
  2066                           ;Multi_RX_testjig_v1.c: 536: testjig_timer = (unsigned int)(7518.8/2);
  2067  08B5  30AF               	movlw	175
  2068  08B6  0020               	movlb	0	; select bank0
  2069  08B7  00DB               	movwf	_testjig_timer	;volatile
  2070  08B8  300E               	movlw	14
  2071  08B9  00DC               	movwf	_testjig_timer+1	;volatile
  2072  08BA  28D2               	goto	l3373
  2073  08BB                     l3375:	
  2074  08BB  305F               	movlw	95
  2075  08BC  279C  3188         	fcall	_ADC_get_val
  2076  08BE  3000               	movlw	0
  2077  08BF  0271               	subwf	?_ADC_get_val+1,w
  2078  08C0  307B               	movlw	123
  2079  08C1  1903               	skipnz
  2080  08C2  0270               	subwf	?_ADC_get_val,w
  2081  08C3  1C03               	skipc
  2082  08C4  28DC               	goto	l3381
  2083  08C5  27AE  3188         	fcall	_get_30v_current
  2084  08C7  3000               	movlw	0
  2085  08C8  0246               	subwf	?_get_30v_current+1,w
  2086  08C9  301E               	movlw	30
  2087  08CA  1903               	skipnz
  2088  08CB  0245               	subwf	?_get_30v_current,w
  2089  08CC  1803               	skipnc
  2090  08CD  28DC               	goto	l3381
  2091  08CE  085B               	movf	_testjig_timer,w	;volatile
  2092  08CF  045C               	iorwf	_testjig_timer+1,w	;volatile
  2093  08D0  1903               	btfsc	3,2
  2094  08D1  28DC               	goto	l3381
  2095  08D2                     l3373:	
  2096                           ;Multi_RX_testjig_v1.c: 537: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08)) && (get_30v_current() < 30) && testjig_timer);
  2097                           
  2098  08D2  305F               	movlw	95
  2099  08D3  279C  3188         	fcall	_ADC_get_val
  2100  08D5  3000               	movlw	0
  2101  08D6  0271               	subwf	?_ADC_get_val+1,w
  2102  08D7  3068               	movlw	104
  2103  08D8  1903               	skipnz
  2104  08D9  0270               	subwf	?_ADC_get_val,w
  2105  08DA  1C03               	btfss	3,0
  2106  08DB  28BB               	goto	l3375
  2107  08DC                     l3381:	
  2108                           
  2109                           ;Multi_RX_testjig_v1.c: 538: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  2110  08DC  305F               	movlw	95
  2111  08DD  279C  3188         	fcall	_ADC_get_val
  2112  08DF  3000               	movlw	0
  2113  08E0  0271               	subwf	?_ADC_get_val+1,w
  2114  08E1  3068               	movlw	104
  2115  08E2  1903               	skipnz
  2116  08E3  0270               	subwf	?_ADC_get_val,w
  2117  08E4  1803               	skipnc
  2118  08E5  28EE               	goto	l3385
  2119                           
  2120                           ;Multi_RX_testjig_v1.c: 539: print_error("12v-5v supply", "Volt Error L");
  2121  08E6  3040               	movlw	low (STR_7| (0+32768))
  2122  08E7  00F8               	movwf	print_error@top
  2123  08E8  3091               	movlw	high (STR_7| (0+32768))
  2124  08E9  00F9               	movwf	print_error@top+1
  2125  08EA  3083               	movlw	low (STR_8| (0+32768))
  2126  08EB  00FA               	movwf	print_error@bottom
  2127  08EC  3091               	movlw	high (STR_8| (0+32768))
  2128  08ED  291C               	goto	L1
  2129  08EE                     l3385:	
  2130                           
  2131                           ;Multi_RX_testjig_v1.c: 540: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  2132  08EE  305F               	movlw	95
  2133  08EF  279C  3188         	fcall	_ADC_get_val
  2134  08F1  3000               	movlw	0
  2135  08F2  0271               	subwf	?_ADC_get_val+1,w
  2136  08F3  307B               	movlw	123
  2137  08F4  1903               	skipnz
  2138  08F5  0270               	subwf	?_ADC_get_val,w
  2139  08F6  1C03               	skipc
  2140  08F7  2900               	goto	l3389
  2141                           
  2142                           ;Multi_RX_testjig_v1.c: 541: print_error("12v-5v supply", "Volt Error H");
  2143  08F8  3040               	movlw	low (STR_7| (0+32768))
  2144  08F9  00F8               	movwf	print_error@top
  2145  08FA  3091               	movlw	high (STR_7| (0+32768))
  2146  08FB  00F9               	movwf	print_error@top+1
  2147  08FC  3069               	movlw	low (STR_10| (0+32768))
  2148  08FD  00FA               	movwf	print_error@bottom
  2149  08FE  3091               	movlw	high (STR_10| (0+32768))
  2150  08FF  291C               	goto	L1
  2151  0900                     l3389:	
  2152                           
  2153                           ;Multi_RX_testjig_v1.c: 542: else if((get_30v_current() >= 30))
  2154  0900  27AE  3188         	fcall	_get_30v_current
  2155  0902  3000               	movlw	0
  2156  0903  0246               	subwf	?_get_30v_current+1,w
  2157  0904  301E               	movlw	30
  2158  0905  1903               	skipnz
  2159  0906  0245               	subwf	?_get_30v_current,w
  2160  0907  1C03               	skipc
  2161  0908  2911               	goto	l3393
  2162                           
  2163                           ;Multi_RX_testjig_v1.c: 543: print_error("12v-5v supply", "Curr Error");
  2164  0909  3040               	movlw	low (STR_7| (0+32768))
  2165  090A  00F8               	movwf	print_error@top
  2166  090B  3091               	movlw	high (STR_7| (0+32768))
  2167  090C  00F9               	movwf	print_error@top+1
  2168  090D  3026               	movlw	low (STR_12| (0+32768))
  2169  090E  00FA               	movwf	print_error@bottom
  2170  090F  3092               	movlw	high (STR_12| (0+32768))
  2171  0910  291C               	goto	L1
  2172  0911                     l3393:	
  2173                           
  2174                           ;Multi_RX_testjig_v1.c: 544: else if(testjig_timer == 0)
  2175  0911  085B               	movf	_testjig_timer,w	;volatile
  2176  0912  045C               	iorwf	_testjig_timer+1,w	;volatile
  2177  0913  1D03               	btfss	3,2
  2178  0914  291E               	goto	l303
  2179                           
  2180                           ;Multi_RX_testjig_v1.c: 545: print_error("12v-5v supply", "T-out Error");
  2181  0915  3040               	movlw	low (STR_7| (0+32768))
  2182  0916  00F8               	movwf	print_error@top
  2183  0917  3091               	movlw	high (STR_7| (0+32768))
  2184  0918  00F9               	movwf	print_error@top+1
  2185  0919  301A               	movlw	low (STR_14| (0+32768))
  2186  091A  00FA               	movwf	print_error@bottom
  2187  091B  3092               	movlw	high (STR_14| (0+32768))
  2188  091C                     L1:	
  2189  091C  00FB               	movwf	print_error@bottom+1
  2190  091D  2747               	fcall	_print_error
  2191  091E                     l303:	
  2192                           
  2193                           ;Multi_RX_testjig_v1.c: 550: power_supply_set(1);
  2194  091E  3001               	movlw	1
  2195  091F  3185  256C  3188   	fcall	_power_supply_set
  2196                           
  2197                           ;Multi_RX_testjig_v1.c: 551: Vout_set(16);
  2198  0922  3010               	movlw	16
  2199  0923  00F4               	movwf	Vout_set@Volts
  2200  0924  01F5               	clrf	Vout_set@Volts+1
  2201  0925  3180  20A6  3188   	fcall	_Vout_set
  2202                           
  2203                           ;Multi_RX_testjig_v1.c: 552: _delay((unsigned long)((150)*(16000000/4000.0)));
  2204  0928  3004               	movlw	4
  2205  0929  0020               	movlb	0	; select bank0
  2206  092A  00CB               	movwf	??_main+2
  2207  092B  300C               	movlw	12
  2208  092C  00CA               	movwf	??_main+1
  2209  092D  3035               	movlw	53
  2210  092E  00C9               	movwf	??_main
  2211  092F                     u4077:	
  2212  092F  0BC9               	decfsz	??_main,f
  2213  0930  292F               	goto	u4077
  2214  0931  0BCA               	decfsz	??_main+1,f
  2215  0932  292F               	goto	u4077
  2216  0933  0BCB               	decfsz	??_main+2,f
  2217  0934  292F               	goto	u4077
  2218  0935  3200               	nop2
  2219                           
  2220                           ;Multi_RX_testjig_v1.c: 553: testjig_timer = (unsigned int)(7518.8/2);
  2221  0936  30AF               	movlw	175
  2222  0937  0020               	movlb	0	; select bank0
  2223  0938  00DB               	movwf	_testjig_timer	;volatile
  2224  0939  300E               	movlw	14
  2225  093A  00DC               	movwf	_testjig_timer+1	;volatile
  2226  093B  2967               	goto	l3401
  2227  093C                     l3403:	
  2228  093C  305F               	movlw	95
  2229  093D  279C  3188         	fcall	_ADC_get_val
  2230  093F  3000               	movlw	0
  2231  0940  0271               	subwf	?_ADC_get_val+1,w
  2232  0941  307B               	movlw	123
  2233  0942  1903               	skipnz
  2234  0943  0270               	subwf	?_ADC_get_val,w
  2235  0944  1C03               	skipc
  2236  0945  2971               	goto	l3413
  2237  0946  3063               	movlw	99
  2238  0947  279C  3188         	fcall	_ADC_get_val
  2239  0949  3000               	movlw	0
  2240  094A  0271               	subwf	?_ADC_get_val+1,w
  2241  094B  30F5               	movlw	245
  2242  094C  1903               	skipnz
  2243  094D  0270               	subwf	?_ADC_get_val,w
  2244  094E  1803               	skipnc
  2245  094F  2971               	goto	l3413
  2246  0950  3063               	movlw	99
  2247  0951  279C  3188         	fcall	_ADC_get_val
  2248  0953  3001               	movlw	1
  2249  0954  0271               	subwf	?_ADC_get_val+1,w
  2250  0955  3048               	movlw	72
  2251  0956  1903               	skipnz
  2252  0957  0270               	subwf	?_ADC_get_val,w
  2253  0958  1C03               	skipc
  2254  0959  2971               	goto	l3413
  2255  095A  27AE  3188         	fcall	_get_30v_current
  2256  095C  3000               	movlw	0
  2257  095D  0246               	subwf	?_get_30v_current+1,w
  2258  095E  3028               	movlw	40
  2259  095F  1903               	skipnz
  2260  0960  0245               	subwf	?_get_30v_current,w
  2261  0961  1803               	skipnc
  2262  0962  2971               	goto	l3413
  2263  0963  085B               	movf	_testjig_timer,w	;volatile
  2264  0964  045C               	iorwf	_testjig_timer+1,w	;volatile
  2265  0965  1903               	btfsc	3,2
  2266  0966  2971               	goto	l3413
  2267  0967                     l3401:	
  2268                           ;Multi_RX_testjig_v1.c: 554: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08))&&(ADC_get_val(0b01100011) < (unsigned int)((((12/11.0)*1024)/4.096)*0.9)) && (AD
      +                          C_get_val(0b011
  2269                           
  2270  0967  305F               	movlw	95
  2271  0968  279C  3188         	fcall	_ADC_get_val
  2272  096A  3000               	movlw	0
  2273  096B  0271               	subwf	?_ADC_get_val+1,w
  2274  096C  3068               	movlw	104
  2275  096D  1903               	skipnz
  2276  096E  0270               	subwf	?_ADC_get_val,w
  2277  096F  1C03               	btfss	3,0
  2278  0970  293C               	goto	l3403
  2279  0971                     l3413:	
  2280                           
  2281                           ;Multi_RX_testjig_v1.c: 555: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  2282  0971  305F               	movlw	95
  2283  0972  279C  3188         	fcall	_ADC_get_val
  2284  0974  3000               	movlw	0
  2285  0975  0271               	subwf	?_ADC_get_val+1,w
  2286  0976  3068               	movlw	104
  2287  0977  1903               	skipnz
  2288  0978  0270               	subwf	?_ADC_get_val,w
  2289  0979  1803               	skipnc
  2290  097A  297F               	goto	l3417
  2291                           
  2292                           ;Multi_RX_testjig_v1.c: 556: print_error("16v-5v supply", "Volt Error L");
  2293  097B  304E               	movlw	low (STR_15| (0+32768))
  2294  097C  00F8               	movwf	print_error@top
  2295  097D  3091               	movlw	high (STR_15| (0+32768))
  2296  097E  299A               	goto	L10
  2297  097F                     l3417:	
  2298                           
  2299                           ;Multi_RX_testjig_v1.c: 557: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  2300  097F  305F               	movlw	95
  2301  0980  279C  3188         	fcall	_ADC_get_val
  2302  0982  3000               	movlw	0
  2303  0983  0271               	subwf	?_ADC_get_val+1,w
  2304  0984  307B               	movlw	123
  2305  0985  1903               	skipnz
  2306  0986  0270               	subwf	?_ADC_get_val,w
  2307  0987  1C03               	skipc
  2308  0988  298D               	goto	l3421
  2309                           
  2310                           ;Multi_RX_testjig_v1.c: 558: print_error("16v-5v supply", "Volt Error H");
  2311  0989  304E               	movlw	low (STR_15| (0+32768))
  2312  098A  00F8               	movwf	print_error@top
  2313  098B  3091               	movlw	high (STR_15| (0+32768))
  2314  098C  29AC               	goto	L11
  2315  098D                     l3421:	
  2316                           
  2317                           ;Multi_RX_testjig_v1.c: 559: else if((ADC_get_val(0b01100011) < (unsigned int)((((12/11.
      +                          0)*1024)/4.096)*0.9)))
  2318  098D  3063               	movlw	99
  2319  098E  279C  3188         	fcall	_ADC_get_val
  2320  0990  3000               	movlw	0
  2321  0991  0271               	subwf	?_ADC_get_val+1,w
  2322  0992  30F5               	movlw	245
  2323  0993  1903               	skipnz
  2324  0994  0270               	subwf	?_ADC_get_val,w
  2325  0995  1803               	skipnc
  2326  0996  299F               	goto	l3425
  2327                           
  2328                           ;Multi_RX_testjig_v1.c: 560: print_error("16v-12v supply", "Volt Error L");
  2329  0997  3007               	movlw	low (STR_19| (0+32768))
  2330  0998  00F8               	movwf	print_error@top
  2331  0999  3091               	movlw	high (STR_19| (0+32768))
  2332  099A                     L10:	
  2333  099A  00F9               	movwf	print_error@top+1
  2334  099B  3083               	movlw	low (STR_8| (0+32768))
  2335  099C  00FA               	movwf	print_error@bottom
  2336  099D  3091               	movlw	high (STR_8| (0+32768))
  2337  099E  29CD               	goto	L8
  2338  099F                     l3425:	
  2339                           
  2340                           ;Multi_RX_testjig_v1.c: 561: else if((ADC_get_val(0b01100011) > (unsigned int)((((12/11.
      +                          0)*1024)/4.096)*1.2)))
  2341  099F  3063               	movlw	99
  2342  09A0  279C  3188         	fcall	_ADC_get_val
  2343  09A2  3001               	movlw	1
  2344  09A3  0271               	subwf	?_ADC_get_val+1,w
  2345  09A4  3048               	movlw	72
  2346  09A5  1903               	skipnz
  2347  09A6  0270               	subwf	?_ADC_get_val,w
  2348  09A7  1C03               	skipc
  2349  09A8  29B1               	goto	l3429
  2350                           
  2351                           ;Multi_RX_testjig_v1.c: 562: print_error("16v-12v supply", "Volt Error H");
  2352  09A9  3007               	movlw	low (STR_19| (0+32768))
  2353  09AA  00F8               	movwf	print_error@top
  2354  09AB  3091               	movlw	high (STR_19| (0+32768))
  2355  09AC                     L11:	
  2356  09AC  00F9               	movwf	print_error@top+1
  2357  09AD  3069               	movlw	low (STR_10| (0+32768))
  2358  09AE  00FA               	movwf	print_error@bottom
  2359  09AF  3091               	movlw	high (STR_10| (0+32768))
  2360  09B0  29CD               	goto	L8
  2361  09B1                     l3429:	
  2362                           
  2363                           ;Multi_RX_testjig_v1.c: 563: else if((get_30v_current() >= 40))
  2364  09B1  27AE  3188         	fcall	_get_30v_current
  2365  09B3  3000               	movlw	0
  2366  09B4  0246               	subwf	?_get_30v_current+1,w
  2367  09B5  3028               	movlw	40
  2368  09B6  1903               	skipnz
  2369  09B7  0245               	subwf	?_get_30v_current,w
  2370  09B8  1C03               	skipc
  2371  09B9  29C2               	goto	l3433
  2372                           
  2373                           ;Multi_RX_testjig_v1.c: 564: print_error("16v-5v supply", "Curr Error");
  2374  09BA  304E               	movlw	low (STR_15| (0+32768))
  2375  09BB  00F8               	movwf	print_error@top
  2376  09BC  3091               	movlw	high (STR_15| (0+32768))
  2377  09BD  00F9               	movwf	print_error@top+1
  2378  09BE  3026               	movlw	low (STR_12| (0+32768))
  2379  09BF  00FA               	movwf	print_error@bottom
  2380  09C0  3092               	movlw	high (STR_12| (0+32768))
  2381  09C1  29CD               	goto	L8
  2382  09C2                     l3433:	
  2383                           
  2384                           ;Multi_RX_testjig_v1.c: 565: else if(testjig_timer == 0)
  2385  09C2  085B               	movf	_testjig_timer,w	;volatile
  2386  09C3  045C               	iorwf	_testjig_timer+1,w	;volatile
  2387  09C4  1D03               	btfss	3,2
  2388  09C5  29D0               	goto	l3437
  2389                           
  2390                           ;Multi_RX_testjig_v1.c: 566: print_error("16v-5v supply", "T-out Error");
  2391  09C6  304E               	movlw	low (STR_15| (0+32768))
  2392  09C7  00F8               	movwf	print_error@top
  2393  09C8  3091               	movlw	high (STR_15| (0+32768))
  2394  09C9  00F9               	movwf	print_error@top+1
  2395  09CA  301A               	movlw	low (STR_14| (0+32768))
  2396  09CB  00FA               	movwf	print_error@bottom
  2397  09CC  3092               	movlw	high (STR_14| (0+32768))
  2398  09CD                     L8:	
  2399  09CD  00FB               	movwf	print_error@bottom+1
  2400  09CE  2747  3188         	fcall	_print_error
  2401  09D0                     l3437:	
  2402                           
  2403                           ;Multi_RX_testjig_v1.c: 572: if(RA2 == 1)
  2404  09D0  0020               	movlb	0	; select bank0
  2405  09D1  1D0C               	btfss	12,2	;volatile
  2406  09D2  2A16               	goto	l3457
  2407                           
  2408                           ;Multi_RX_testjig_v1.c: 573: {
  2409                           ;Multi_RX_testjig_v1.c: 574: power_supply_set(0);
  2410  09D3  3000               	movlw	0
  2411  09D4  3185  256C  3188   	fcall	_power_supply_set
  2412                           
  2413                           ;Multi_RX_testjig_v1.c: 576: print_screen("Pickit Programming", "");
  2414  09D7  3013               	movlw	low (STR_27| (0+32768))
  2415  09D8  00F4               	movwf	print_screen@top
  2416  09D9  3090               	movlw	high (STR_27| (0+32768))
  2417  09DA  00F5               	movwf	print_screen@top+1
  2418  09DB  308A               	movlw	low ((STR_155+15)| (0+32768))
  2419  09DC  00F6               	movwf	print_screen@bottom
  2420  09DD  3090               	movlw	high ((STR_155+15)| (0+32768))
  2421  09DE  00F7               	movwf	print_screen@bottom+1
  2422  09DF  2731  3188         	fcall	_print_screen
  2423                           
  2424                           ;Multi_RX_testjig_v1.c: 577: LATA7 = 1;
  2425  09E1  0022               	movlb	2	; select bank2
  2426  09E2  178C               	bsf	12,7	;volatile
  2427                           
  2428                           ;Multi_RX_testjig_v1.c: 578: _delay((unsigned long)((100)*(16000000/4000.0)));
  2429  09E3  3003               	movlw	3
  2430  09E4  0020               	movlb	0	; select bank0
  2431  09E5  00CB               	movwf	??_main+2
  2432  09E6  3008               	movlw	8
  2433  09E7  00CA               	movwf	??_main+1
  2434  09E8  3078               	movlw	120
  2435  09E9  00C9               	movwf	??_main
  2436  09EA                     u4087:	
  2437  09EA  0BC9               	decfsz	??_main,f
  2438  09EB  29EA               	goto	u4087
  2439  09EC  0BCA               	decfsz	??_main+1,f
  2440  09ED  29EA               	goto	u4087
  2441  09EE  0BCB               	decfsz	??_main+2,f
  2442  09EF  29EA               	goto	u4087
  2443                           
  2444                           ;Multi_RX_testjig_v1.c: 579: pickit_state = pickit_start;
  2445  09F0  0020               	movlb	0	; select bank0
  2446  09F1  3002               	movlw	low (STR_29| (0+32768))
  2447  09F2  01E9               	clrf	_pickit_state
  2448  09F3  0AE9               	incf	_pickit_state,f
  2449                           
  2450                           ;Multi_RX_testjig_v1.c: 581: print_screen("Waiting for", " Programming");
  2451  09F4  00F4               	movwf	print_screen@top
  2452  09F5  3092               	movlw	high (STR_29| (0+32768))
  2453  09F6  00F5               	movwf	print_screen@top+1
  2454  09F7  3019               	movlw	low ((STR_27+6)| (0+32768))
  2455  09F8  00F6               	movwf	print_screen@bottom
  2456  09F9  3090               	movlw	high ((STR_27+6)| (0+32768))
  2457  09FA  00F7               	movwf	print_screen@bottom+1
  2458  09FB  2731  3188         	fcall	_print_screen
  2459  09FD  2A02               	goto	l3449
  2460  09FE                     l3451:	
  2461  09FE  3004               	movlw	4
  2462  09FF  0669               	xorwf	_pickit_state,w
  2463  0A00  1903               	btfsc	3,2
  2464  0A01  2A07               	goto	l3453
  2465  0A02                     l3449:	
  2466                           ;Multi_RX_testjig_v1.c: 582: while((pickit_state != pickit_idle) && (pickit_state != pic
      +                          kit_error));
  2467                           
  2468  0A02  3005               	movlw	5
  2469  0A03  0020               	movlb	0	; select bank0
  2470  0A04  0669               	xorwf	_pickit_state,w
  2471  0A05  1D03               	btfss	3,2
  2472  0A06  29FE               	goto	l3451
  2473  0A07                     l3453:	
  2474                           
  2475                           ;Multi_RX_testjig_v1.c: 583: if(pickit_state == pickit_error)
  2476  0A07  3004               	movlw	4
  2477  0A08  0669               	xorwf	_pickit_state,w
  2478  0A09  1D03               	btfss	3,2
  2479  0A0A  2A2E               	goto	l3461
  2480                           
  2481                           ;Multi_RX_testjig_v1.c: 584: print_error("Programming", "Error");
  2482  0A0B  301A               	movlw	low ((STR_27+7)| (0+32768))
  2483  0A0C  00F8               	movwf	print_error@top
  2484  0A0D  3090               	movlw	high ((STR_27+7)| (0+32768))
  2485  0A0E  00F9               	movwf	print_error@top+1
  2486  0A0F  302B               	movlw	low ((STR_12+5)| (0+32768))
  2487  0A10  00FA               	movwf	print_error@bottom
  2488  0A11  3092               	movlw	high ((STR_12+5)| (0+32768))
  2489  0A12  00FB               	movwf	print_error@bottom+1
  2490  0A13  2747  3188         	fcall	_print_error
  2491  0A15  2A2E               	goto	l3461
  2492  0A16                     l3457:	
  2493                           
  2494                           ;Multi_RX_testjig_v1.c: 586: else
  2495                           ;Multi_RX_testjig_v1.c: 587: {
  2496                           ;Multi_RX_testjig_v1.c: 588: print_screen("Pickit Programming", " skipped");
  2497  0A16  3013               	movlw	low (STR_27| (0+32768))
  2498  0A17  00F4               	movwf	print_screen@top
  2499  0A18  3090               	movlw	high (STR_27| (0+32768))
  2500  0A19  00F5               	movwf	print_screen@top+1
  2501  0A1A  30CB               	movlw	low (STR_34| (0+32768))
  2502  0A1B  00F6               	movwf	print_screen@bottom
  2503  0A1C  3092               	movlw	high (STR_34| (0+32768))
  2504  0A1D  00F7               	movwf	print_screen@bottom+1
  2505  0A1E  2731  3188         	fcall	_print_screen
  2506                           
  2507                           ;Multi_RX_testjig_v1.c: 589: _delay((unsigned long)((300)*(16000000/4000.0)));
  2508  0A20  3007               	movlw	7
  2509  0A21  0020               	movlb	0	; select bank0
  2510  0A22  00CB               	movwf	??_main+2
  2511  0A23  3017               	movlw	23
  2512  0A24  00CA               	movwf	??_main+1
  2513  0A25  306F               	movlw	111
  2514  0A26  00C9               	movwf	??_main
  2515  0A27                     u4097:	
  2516  0A27  0BC9               	decfsz	??_main,f
  2517  0A28  2A27               	goto	u4097
  2518  0A29  0BCA               	decfsz	??_main+1,f
  2519  0A2A  2A27               	goto	u4097
  2520  0A2B  0BCB               	decfsz	??_main+2,f
  2521  0A2C  2A27               	goto	u4097
  2522  0A2D  0000               	nop
  2523  0A2E                     l3461:	
  2524                           
  2525                           ;Multi_RX_testjig_v1.c: 590: }
  2526                           ;Multi_RX_testjig_v1.c: 605: _delay((unsigned long)((100)*(16000000/4000.0)));
  2527  0A2E  3003               	movlw	3
  2528  0A2F  0020               	movlb	0	; select bank0
  2529  0A30  00CB               	movwf	??_main+2
  2530  0A31  3008               	movlw	8
  2531  0A32  00CA               	movwf	??_main+1
  2532  0A33  3078               	movlw	120
  2533  0A34  00C9               	movwf	??_main
  2534  0A35                     u4107:	
  2535  0A35  0BC9               	decfsz	??_main,f
  2536  0A36  2A35               	goto	u4107
  2537  0A37  0BCA               	decfsz	??_main+1,f
  2538  0A38  2A35               	goto	u4107
  2539  0A39  0BCB               	decfsz	??_main+2,f
  2540  0A3A  2A35               	goto	u4107
  2541                           
  2542                           ;Multi_RX_testjig_v1.c: 606: print_screen("Establishing", "comms");
  2543  0A3B  309D               	movlw	low (STR_35| (0+32768))
  2544  0A3C  00F4               	movwf	print_screen@top
  2545  0A3D  3091               	movlw	high (STR_35| (0+32768))
  2546  0A3E  00F5               	movwf	print_screen@top+1
  2547  0A3F  3036               	movlw	low ((STR_158+5)| (0+32768))
  2548  0A40  00F6               	movwf	print_screen@bottom
  2549  0A41  3092               	movlw	high ((STR_158+5)| (0+32768))
  2550  0A42  00F7               	movwf	print_screen@bottom+1
  2551  0A43  2731  3188         	fcall	_print_screen
  2552                           
  2553                           ;Multi_RX_testjig_v1.c: 607: unsigned int i;
  2554                           ;Multi_RX_testjig_v1.c: 608: for(i = 0; i < 10; i++)
  2555  0A45  0020               	movlb	0	; select bank0
  2556  0A46  01CC               	clrf	main@i
  2557  0A47  01CD               	clrf	main@i+1
  2558  0A48                     l3465:	
  2559  0A48  3000               	movlw	0
  2560  0A49  024D               	subwf	main@i+1,w
  2561  0A4A  300A               	movlw	10
  2562  0A4B  1903               	skipnz
  2563  0A4C  024C               	subwf	main@i,w
  2564  0A4D  1803               	btfsc	3,0
  2565  0A4E  2A77               	goto	l3481
  2566                           
  2567                           ;Multi_RX_testjig_v1.c: 609: {
  2568                           ;Multi_RX_testjig_v1.c: 610: TX_one(0x01);
  2569  0A4F  3001               	movlw	1
  2570  0A50  26EF  3188         	fcall	_TX_one
  2571                           
  2572                           ;Multi_RX_testjig_v1.c: 611: if(RX_one() == 0xAA)
  2573  0A52  2711  3188         	fcall	_RX_one
  2574  0A54  3AAA               	xorlw	170
  2575  0A55  1903               	btfsc	3,2
  2576  0A56  2A77               	goto	l3481
  2577                           
  2578                           ;Multi_RX_testjig_v1.c: 613: lcd_print_int(i, 11, 0, 0);
  2579  0A57  0020               	movlb	0	; select bank0
  2580  0A58  084D               	movf	main@i+1,w
  2581  0A59  00A1               	movwf	lcd_print_int@number+1
  2582  0A5A  084C               	movf	main@i,w
  2583  0A5B  00A0               	movwf	lcd_print_int@number
  2584  0A5C  300B               	movlw	11
  2585  0A5D  00A2               	movwf	lcd_print_int@pos
  2586  0A5E  01A3               	clrf	lcd_print_int@pos+1
  2587  0A5F  01A4               	clrf	lcd_print_int@decimal
  2588  0A60  01A5               	clrf	lcd_print_int@ten_thou_digit
  2589  0A61  3180  20F7  3188   	fcall	_lcd_print_int
  2590                           
  2591                           ;Multi_RX_testjig_v1.c: 614: _delay((unsigned long)((50)*(16000000/4000.0)));
  2592  0A64  3002               	movlw	2
  2593  0A65  0020               	movlb	0	; select bank0
  2594  0A66  00CB               	movwf	??_main+2
  2595  0A67  3004               	movlw	4
  2596  0A68  00CA               	movwf	??_main+1
  2597  0A69  30BA               	movlw	186
  2598  0A6A  00C9               	movwf	??_main
  2599  0A6B                     u4117:	
  2600  0A6B  0BC9               	decfsz	??_main,f
  2601  0A6C  2A6B               	goto	u4117
  2602  0A6D  0BCA               	decfsz	??_main+1,f
  2603  0A6E  2A6B               	goto	u4117
  2604  0A6F  0BCB               	decfsz	??_main+2,f
  2605  0A70  2A6B               	goto	u4117
  2606  0A71  0000               	nop
  2607  0A72  0020               	movlb	0	; select bank0
  2608  0A73  0ACC               	incf	main@i,f
  2609  0A74  1903               	skipnz
  2610  0A75  0ACD               	incf	main@i+1,f
  2611  0A76  2A48               	goto	l3465
  2612  0A77                     l3481:	
  2613                           
  2614                           ;Multi_RX_testjig_v1.c: 615: }
  2615                           ;Multi_RX_testjig_v1.c: 616: if(i >= 10)
  2616  0A77  3000               	movlw	0
  2617  0A78  0020               	movlb	0	; select bank0
  2618  0A79  024D               	subwf	main@i+1,w
  2619  0A7A  300A               	movlw	10
  2620  0A7B  1903               	skipnz
  2621  0A7C  024C               	subwf	main@i,w
  2622  0A7D  1C03               	skipc
  2623  0A7E  2A89               	goto	l3485
  2624                           
  2625                           ;Multi_RX_testjig_v1.c: 617: print_error("Comms Error", " 1");
  2626  0A7F  300E               	movlw	low (STR_37| (0+32768))
  2627  0A80  00F8               	movwf	print_error@top
  2628  0A81  3092               	movlw	high (STR_37| (0+32768))
  2629  0A82  00F9               	movwf	print_error@top+1
  2630  0A83  3089               	movlw	low ((STR_46+6)| (0+32768))
  2631  0A84  00FA               	movwf	print_error@bottom
  2632  0A85  3092               	movlw	high ((STR_46+6)| (0+32768))
  2633  0A86  00FB               	movwf	print_error@bottom+1
  2634  0A87  2747  3188         	fcall	_print_error
  2635  0A89                     l3485:	
  2636                           
  2637                           ;Multi_RX_testjig_v1.c: 620: unsigned char RX_data = 0;
  2638  0A89  0020               	movlb	0	; select bank0
  2639  0A8A  3010               	movlw	16
  2640  0A8B  01CE               	clrf	main@RX_data
  2641                           
  2642                           ;Multi_RX_testjig_v1.c: 621: TX_one(0x10);
  2643  0A8C  26EF  3188         	fcall	_TX_one
  2644                           
  2645                           ;Multi_RX_testjig_v1.c: 622: RX_data = RX_one();
  2646  0A8E  2711  3188         	fcall	_RX_one
  2647  0A90  0020               	movlb	0	; select bank0
  2648  0A91  00CE               	movwf	main@RX_data
  2649                           
  2650                           ;Multi_RX_testjig_v1.c: 623: if(RX_data == 0xEE)
  2651  0A92  3AEE               	xorlw	238
  2652  0A93  1D03               	btfss	3,2
  2653  0A94  2A9D               	goto	l3495
  2654                           
  2655                           ;Multi_RX_testjig_v1.c: 624: print_error("EEPROM error", " Read/Write");
  2656  0A95  30AA               	movlw	low (STR_39| (0+32768))
  2657  0A96  00F8               	movwf	print_error@top
  2658  0A97  3091               	movlw	high (STR_39| (0+32768))
  2659  0A98  00F9               	movwf	print_error@top+1
  2660  0A99  30EA               	movlw	low (STR_40| (0+32768))
  2661  0A9A  00FA               	movwf	print_error@bottom
  2662  0A9B  3091               	movlw	high (STR_40| (0+32768))
  2663  0A9C  2AA8               	goto	L2
  2664  0A9D                     l3495:	
  2665                           
  2666                           ;Multi_RX_testjig_v1.c: 625: else if(RX_data != 0x1A)
  2667  0A9D  301A               	movlw	26
  2668  0A9E  064E               	xorwf	main@RX_data,w
  2669  0A9F  1903               	btfsc	3,2
  2670  0AA0  2AAB               	goto	l338
  2671                           
  2672                           ;Multi_RX_testjig_v1.c: 626: print_error("Comms Error", " 2");
  2673  0AA1  300E               	movlw	low (STR_37| (0+32768))
  2674  0AA2  00F8               	movwf	print_error@top
  2675  0AA3  3092               	movlw	high (STR_37| (0+32768))
  2676  0AA4  00F9               	movwf	print_error@top+1
  2677  0AA5  3092               	movlw	low ((STR_48+6)| (0+32768))
  2678  0AA6  00FA               	movwf	print_error@bottom
  2679  0AA7  3092               	movlw	high ((STR_48+6)| (0+32768))
  2680  0AA8                     L2:	
  2681  0AA8  00FB               	movwf	print_error@bottom+1
  2682  0AA9  2747  3188         	fcall	_print_error
  2683  0AAB                     l338:	
  2684                           
  2685                           ;Multi_RX_testjig_v1.c: 629: print_screen("Test EEPROM ", " size");
  2686  0AAB  305C               	movlw	low (STR_43| (0+32768))
  2687  0AAC  00F4               	movwf	print_screen@top
  2688  0AAD  3091               	movlw	high (STR_43| (0+32768))
  2689  0AAE  00F5               	movwf	print_screen@top+1
  2690  0AAF  30FC               	movlw	low ((STR_45+6)| (0+32768))
  2691  0AB0  00F6               	movwf	print_screen@bottom
  2692  0AB1  3091               	movlw	high ((STR_45+6)| (0+32768))
  2693  0AB2  00F7               	movwf	print_screen@bottom+1
  2694  0AB3  2731  3188         	fcall	_print_screen
  2695                           
  2696                           ;Multi_RX_testjig_v1.c: 630: TX_one(0x20);
  2697  0AB5  3020               	movlw	32
  2698  0AB6  26EF  3188         	fcall	_TX_one
  2699                           
  2700                           ;Multi_RX_testjig_v1.c: 631: RX_data = RX_one();
  2701  0AB8  2711  3188         	fcall	_RX_one
  2702  0ABA  0020               	movlb	0	; select bank0
  2703  0ABB  00CE               	movwf	main@RX_data
  2704                           
  2705                           ;Multi_RX_testjig_v1.c: 632: if(RX_data != 0x20)
  2706  0ABC  3A20               	xorlw	32
  2707  0ABD  1903               	btfsc	3,2
  2708  0ABE  2AC9               	goto	l3507
  2709                           
  2710                           ;Multi_RX_testjig_v1.c: 633: print_error("EEPROM size", " Error 1");
  2711  0ABF  30F6               	movlw	low (STR_45| (0+32768))
  2712  0AC0  00F8               	movwf	print_error@top
  2713  0AC1  3091               	movlw	high (STR_45| (0+32768))
  2714  0AC2  00F9               	movwf	print_error@top+1
  2715  0AC3  3083               	movlw	low (STR_46| (0+32768))
  2716  0AC4  00FA               	movwf	print_error@bottom
  2717  0AC5  3092               	movlw	high (STR_46| (0+32768))
  2718  0AC6  00FB               	movwf	print_error@bottom+1
  2719  0AC7  2747  3188         	fcall	_print_error
  2720  0AC9                     l3507:	
  2721                           
  2722                           ;Multi_RX_testjig_v1.c: 634: TX_one(0x21);
  2723  0AC9  3021               	movlw	33
  2724  0ACA  26EF  3188         	fcall	_TX_one
  2725                           
  2726                           ;Multi_RX_testjig_v1.c: 635: RX_data = RX_one();
  2727  0ACC  2711  3188         	fcall	_RX_one
  2728  0ACE  0020               	movlb	0	; select bank0
  2729  0ACF  00CE               	movwf	main@RX_data
  2730                           
  2731                           ;Multi_RX_testjig_v1.c: 636: if(RX_data != 0x00)
  2732  0AD0  084E               	movf	main@RX_data,w
  2733  0AD1  1903               	btfsc	3,2
  2734  0AD2  2ADC               	goto	l341
  2735                           
  2736                           ;Multi_RX_testjig_v1.c: 637: print_error("EEPROM size", " Error 2");
  2737  0AD3  30F6               	movlw	low (STR_45| (0+32768))
  2738  0AD4  00F8               	movwf	print_error@top
  2739  0AD5  3091               	movlw	high (STR_45| (0+32768))
  2740  0AD6  00F9               	movwf	print_error@top+1
  2741  0AD7  308C               	movlw	low (STR_48| (0+32768))
  2742  0AD8  00FA               	movwf	print_error@bottom
  2743  0AD9  3092               	movlw	high (STR_48| (0+32768))
  2744  0ADA  00FB               	movwf	print_error@bottom+1
  2745  0ADB  2747               	fcall	_print_error
  2746  0ADC                     l341:	
  2747                           
  2748                           ;Multi_RX_testjig_v1.c: 640: Vout_set(12);
  2749  0ADC  300C               	movlw	12
  2750  0ADD  00F4               	movwf	Vout_set@Volts
  2751  0ADE  01F5               	clrf	Vout_set@Volts+1
  2752  0ADF  3180  20A6  3188   	fcall	_Vout_set
  2753                           
  2754                           ;Multi_RX_testjig_v1.c: 641: print_screen("Test Relay", "");
  2755  0AE2  303C               	movlw	low (STR_49| (0+32768))
  2756  0AE3  00F4               	movwf	print_screen@top
  2757  0AE4  3092               	movlw	high (STR_49| (0+32768))
  2758  0AE5  00F5               	movwf	print_screen@top+1
  2759  0AE6  308A               	movlw	low ((STR_155+15)| (0+32768))
  2760  0AE7  00F6               	movwf	print_screen@bottom
  2761  0AE8  3090               	movlw	high ((STR_155+15)| (0+32768))
  2762  0AE9  00F7               	movwf	print_screen@bottom+1
  2763  0AEA  2731  3188         	fcall	_print_screen
  2764                           
  2765                           ;Multi_RX_testjig_v1.c: 642: if(RF5 == 0 && RF2 == 1)
  2766  0AEC  0025               	movlb	5	; select bank5
  2767  0AED  1E8C               	btfss	12,5	;volatile
  2768  0AEE  1D0C               	btfss	12,2	;volatile
  2769  0AEF  2B4F               	goto	l3545
  2770                           
  2771                           ;Multi_RX_testjig_v1.c: 643: {
  2772                           ;Multi_RX_testjig_v1.c: 644: TX_one(0x30);
  2773  0AF0  3030               	movlw	48
  2774  0AF1  26EF  3188         	fcall	_TX_one
  2775                           
  2776                           ;Multi_RX_testjig_v1.c: 645: if(RX_one() == 0x3A)
  2777  0AF3  2711  3188         	fcall	_RX_one
  2778  0AF5  3A3A               	xorlw	58
  2779  0AF6  1D03               	skipz
  2780  0AF7  2B47               	goto	l3543
  2781                           
  2782                           ;Multi_RX_testjig_v1.c: 646: {
  2783                           ;Multi_RX_testjig_v1.c: 647: _delay((unsigned long)((50)*(16000000/4000.0)));
  2784  0AF8  3002               	movlw	2
  2785  0AF9  0020               	movlb	0	; select bank0
  2786  0AFA  00CB               	movwf	??_main+2
  2787  0AFB  3004               	movlw	4
  2788  0AFC  00CA               	movwf	??_main+1
  2789  0AFD  30BA               	movlw	186
  2790  0AFE  00C9               	movwf	??_main
  2791  0AFF                     u4127:	
  2792  0AFF  0BC9               	decfsz	??_main,f
  2793  0B00  2AFF               	goto	u4127
  2794  0B01  0BCA               	decfsz	??_main+1,f
  2795  0B02  2AFF               	goto	u4127
  2796  0B03  0BCB               	decfsz	??_main+2,f
  2797  0B04  2AFF               	goto	u4127
  2798  0B05  0000               	nop
  2799                           
  2800                           ;Multi_RX_testjig_v1.c: 648: if(RF5 == 1 && RF2 == 0)
  2801  0B06  0025               	movlb	5	; select bank5
  2802  0B07  1A8C               	btfsc	12,5	;volatile
  2803  0B08  190C               	btfsc	12,2	;volatile
  2804  0B09  2B3F               	goto	l3541
  2805                           
  2806                           ;Multi_RX_testjig_v1.c: 649: {
  2807                           ;Multi_RX_testjig_v1.c: 650: TX_one(0x31);
  2808  0B0A  3031               	movlw	49
  2809  0B0B  26EF  3188         	fcall	_TX_one
  2810                           
  2811                           ;Multi_RX_testjig_v1.c: 651: if(RX_one() == 0x3A)
  2812  0B0D  2711  3188         	fcall	_RX_one
  2813  0B0F  3A3A               	xorlw	58
  2814  0B10  1D03               	skipz
  2815  0B11  2B37               	goto	l3539
  2816                           
  2817                           ;Multi_RX_testjig_v1.c: 652: {
  2818                           ;Multi_RX_testjig_v1.c: 653: _delay((unsigned long)((50)*(16000000/4000.0)));
  2819  0B12  3002               	movlw	2
  2820  0B13  0020               	movlb	0	; select bank0
  2821  0B14  00CB               	movwf	??_main+2
  2822  0B15  3004               	movlw	4
  2823  0B16  00CA               	movwf	??_main+1
  2824  0B17  30BA               	movlw	186
  2825  0B18  00C9               	movwf	??_main
  2826  0B19                     u4137:	
  2827  0B19  0BC9               	decfsz	??_main,f
  2828  0B1A  2B19               	goto	u4137
  2829  0B1B  0BCA               	decfsz	??_main+1,f
  2830  0B1C  2B19               	goto	u4137
  2831  0B1D  0BCB               	decfsz	??_main+2,f
  2832  0B1E  2B19               	goto	u4137
  2833  0B1F  0000               	nop
  2834                           
  2835                           ;Multi_RX_testjig_v1.c: 654: if(RF5 == 0 && RF2 == 1)
  2836  0B20  0025               	movlb	5	; select bank5
  2837  0B21  1E8C               	btfss	12,5	;volatile
  2838  0B22  1D0C               	btfss	12,2	;volatile
  2839  0B23  2B2F               	goto	l3537
  2840                           
  2841                           ;Multi_RX_testjig_v1.c: 655: {
  2842                           ;Multi_RX_testjig_v1.c: 656: print_screen("Test Relay", "Pass");
  2843  0B24  303C               	movlw	low (STR_49| (0+32768))
  2844  0B25  00F4               	movwf	print_screen@top
  2845  0B26  3092               	movlw	high (STR_49| (0+32768))
  2846  0B27  00F5               	movwf	print_screen@top+1
  2847  0B28  30BF               	movlw	low ((STR_159+8)| (0+32768))
  2848  0B29  00F6               	movwf	print_screen@bottom
  2849  0B2A  3091               	movlw	high ((STR_159+8)| (0+32768))
  2850  0B2B  00F7               	movwf	print_screen@bottom+1
  2851  0B2C  2731  3188         	fcall	_print_screen
  2852                           
  2853                           ;Multi_RX_testjig_v1.c: 657: }
  2854  0B2E  2B59               	goto	l351
  2855  0B2F                     l3537:	
  2856                           
  2857                           ;Multi_RX_testjig_v1.c: 658: else
  2858                           ;Multi_RX_testjig_v1.c: 659: print_error("Relay de-energized", " Error 2");
  2859  0B2F  3000               	movlw	low (STR_53| (0+32768))
  2860  0B30  00F8               	movwf	print_error@top
  2861  0B31  3090               	movlw	high (STR_53| (0+32768))
  2862  0B32  00F9               	movwf	print_error@top+1
  2863  0B33  308C               	movlw	low (STR_48| (0+32768))
  2864  0B34  00FA               	movwf	print_error@bottom
  2865  0B35  3092               	movlw	high (STR_48| (0+32768))
  2866  0B36  2B56               	goto	L3
  2867  0B37                     l3539:	
  2868                           
  2869                           ;Multi_RX_testjig_v1.c: 661: else
  2870                           ;Multi_RX_testjig_v1.c: 662: print_error("Comms Error", " 3");
  2871  0B37  300E               	movlw	low (STR_37| (0+32768))
  2872  0B38  00F8               	movwf	print_error@top
  2873  0B39  3092               	movlw	high (STR_37| (0+32768))
  2874  0B3A  00F9               	movwf	print_error@top+1
  2875  0B3B  3014               	movlw	low (STR_56| (0+32768))
  2876  0B3C  00FA               	movwf	print_error@bottom
  2877  0B3D  3093               	movlw	high (STR_56| (0+32768))
  2878  0B3E  2B56               	goto	L3
  2879  0B3F                     l3541:	
  2880                           
  2881                           ;Multi_RX_testjig_v1.c: 664: else
  2882                           ;Multi_RX_testjig_v1.c: 665: print_error("Relay energized", " Error");
  2883  0B3F  309B               	movlw	low (STR_57| (0+32768))
  2884  0B40  00F8               	movwf	print_error@top
  2885  0B41  3090               	movlw	high (STR_57| (0+32768))
  2886  0B42  00F9               	movwf	print_error@top+1
  2887  0B43  302A               	movlw	low ((STR_12+4)| (0+32768))
  2888  0B44  00FA               	movwf	print_error@bottom
  2889  0B45  3092               	movlw	high ((STR_12+4)| (0+32768))
  2890  0B46  2B56               	goto	L3
  2891  0B47                     l3543:	
  2892                           
  2893                           ;Multi_RX_testjig_v1.c: 667: else
  2894                           ;Multi_RX_testjig_v1.c: 668: print_error("Comms Error", " 4");
  2895  0B47  300E               	movlw	low (STR_37| (0+32768))
  2896  0B48  00F8               	movwf	print_error@top
  2897  0B49  3092               	movlw	high (STR_37| (0+32768))
  2898  0B4A  00F9               	movwf	print_error@top+1
  2899  0B4B  3017               	movlw	low (STR_60| (0+32768))
  2900  0B4C  00FA               	movwf	print_error@bottom
  2901  0B4D  3093               	movlw	high (STR_60| (0+32768))
  2902  0B4E  2B56               	goto	L3
  2903  0B4F                     l3545:	
  2904                           
  2905                           ;Multi_RX_testjig_v1.c: 670: else
  2906                           ;Multi_RX_testjig_v1.c: 671: print_error("Relay de-energized", " Error 1");
  2907  0B4F  3000               	movlw	low (STR_53| (0+32768))
  2908  0B50  00F8               	movwf	print_error@top
  2909  0B51  3090               	movlw	high (STR_53| (0+32768))
  2910  0B52  00F9               	movwf	print_error@top+1
  2911  0B53  3083               	movlw	low (STR_46| (0+32768))
  2912  0B54  00FA               	movwf	print_error@bottom
  2913  0B55  3092               	movlw	high (STR_46| (0+32768))
  2914  0B56                     L3:	
  2915  0B56  00FB               	movwf	print_error@bottom+1
  2916  0B57  2747  3188         	fcall	_print_error
  2917  0B59                     l351:	
  2918                           
  2919                           ;Multi_RX_testjig_v1.c: 674: print_screen("Test CH2", "");
  2920  0B59  3095               	movlw	low (STR_63| (0+32768))
  2921  0B5A  00F4               	movwf	print_screen@top
  2922  0B5B  3092               	movlw	high (STR_63| (0+32768))
  2923  0B5C  00F5               	movwf	print_screen@top+1
  2924  0B5D  308A               	movlw	low ((STR_155+15)| (0+32768))
  2925  0B5E  00F6               	movwf	print_screen@bottom
  2926  0B5F  3090               	movlw	high ((STR_155+15)| (0+32768))
  2927  0B60  00F7               	movwf	print_screen@bottom+1
  2928  0B61  2731  3188         	fcall	_print_screen
  2929                           
  2930                           ;Multi_RX_testjig_v1.c: 675: TX_one(0x41);
  2931  0B63  3041               	movlw	65
  2932  0B64  26EF  3188         	fcall	_TX_one
  2933                           
  2934                           ;Multi_RX_testjig_v1.c: 676: if(RX_one() == 0x4A)
  2935  0B66  2711  3188         	fcall	_RX_one
  2936  0B68  3A4A               	xorlw	74
  2937  0B69  1D03               	skipz
  2938  0B6A  2C62               	goto	l3629
  2939                           
  2940                           ;Multi_RX_testjig_v1.c: 677: {
  2941                           ;Multi_RX_testjig_v1.c: 678: _delay((unsigned long)((10)*(16000000/4000.0)));
  2942  0B6B  3034               	movlw	52
  2943  0B6C  0020               	movlb	0	; select bank0
  2944  0B6D  00CA               	movwf	??_main+1
  2945  0B6E  30F1               	movlw	241
  2946  0B6F  00C9               	movwf	??_main
  2947  0B70                     u4147:	
  2948  0B70  0BC9               	decfsz	??_main,f
  2949  0B71  2B70               	goto	u4147
  2950  0B72  0BCA               	decfsz	??_main+1,f
  2951  0B73  2B70               	goto	u4147
  2952  0B74  3200               	nop2
  2953                           
  2954                           ;Multi_RX_testjig_v1.c: 679: if(RF1 == 1 && RF0 == 1)
  2955  0B75  0025               	movlb	5	; select bank5
  2956  0B76  188C               	btfsc	12,1	;volatile
  2957  0B77  1C0C               	btfss	12,0	;volatile
  2958  0B78  2C5A               	goto	l3627
  2959                           
  2960                           ;Multi_RX_testjig_v1.c: 680: {
  2961                           ;Multi_RX_testjig_v1.c: 681: TX_one(0x40);
  2962  0B79  3040               	movlw	64
  2963  0B7A  26EF  3188         	fcall	_TX_one
  2964                           
  2965                           ;Multi_RX_testjig_v1.c: 682: if(RX_one() == 0x4A)
  2966  0B7C  2711  3188         	fcall	_RX_one
  2967  0B7E  3A4A               	xorlw	74
  2968  0B7F  1D03               	skipz
  2969  0B80  2C52               	goto	l3625
  2970                           
  2971                           ;Multi_RX_testjig_v1.c: 683: {
  2972                           ;Multi_RX_testjig_v1.c: 684: _delay((unsigned long)((10)*(16000000/4000.0)));
  2973  0B81  3034               	movlw	52
  2974  0B82  0020               	movlb	0	; select bank0
  2975  0B83  00CA               	movwf	??_main+1
  2976  0B84  30F1               	movlw	241
  2977  0B85  00C9               	movwf	??_main
  2978  0B86                     u4157:	
  2979  0B86  0BC9               	decfsz	??_main,f
  2980  0B87  2B86               	goto	u4157
  2981  0B88  0BCA               	decfsz	??_main+1,f
  2982  0B89  2B86               	goto	u4157
  2983  0B8A  3200               	nop2
  2984                           
  2985                           ;Multi_RX_testjig_v1.c: 685: if(RF1 == 0 && RF0 == 1)
  2986  0B8B  0025               	movlb	5	; select bank5
  2987  0B8C  1C8C               	btfss	12,1	;volatile
  2988  0B8D  1C0C               	btfss	12,0	;volatile
  2989  0B8E  2C4A               	goto	l3623
  2990                           
  2991                           ;Multi_RX_testjig_v1.c: 686: {
  2992                           ;Multi_RX_testjig_v1.c: 687: TX_one(0x41);
  2993  0B8F  3041               	movlw	65
  2994  0B90  26EF  3188         	fcall	_TX_one
  2995                           
  2996                           ;Multi_RX_testjig_v1.c: 688: if(RX_one() == 0x4A)
  2997  0B92  2711  3188         	fcall	_RX_one
  2998  0B94  3A4A               	xorlw	74
  2999  0B95  1D03               	skipz
  3000  0B96  2C42               	goto	l3621
  3001                           
  3002                           ;Multi_RX_testjig_v1.c: 689: {
  3003                           ;Multi_RX_testjig_v1.c: 690: LATB5 = 1;
  3004  0B97  0022               	movlb	2	; select bank2
  3005  0B98  168D               	bsf	13,5	;volatile
  3006                           
  3007                           ;Multi_RX_testjig_v1.c: 691: _delay((unsigned long)((50)*(16000000/4000.0)));
  3008  0B99  3002               	movlw	2
  3009  0B9A  0020               	movlb	0	; select bank0
  3010  0B9B  00CB               	movwf	??_main+2
  3011  0B9C  3004               	movlw	4
  3012  0B9D  00CA               	movwf	??_main+1
  3013  0B9E  30BA               	movlw	186
  3014  0B9F  00C9               	movwf	??_main
  3015  0BA0                     u4167:	
  3016  0BA0  0BC9               	decfsz	??_main,f
  3017  0BA1  2BA0               	goto	u4167
  3018  0BA2  0BCA               	decfsz	??_main+1,f
  3019  0BA3  2BA0               	goto	u4167
  3020  0BA4  0BCB               	decfsz	??_main+2,f
  3021  0BA5  2BA0               	goto	u4167
  3022  0BA6  0000               	nop
  3023                           
  3024                           ;Multi_RX_testjig_v1.c: 692: TX_one(0x40);
  3025  0BA7  3040               	movlw	64
  3026  0BA8  26EF  3188         	fcall	_TX_one
  3027                           
  3028                           ;Multi_RX_testjig_v1.c: 693: if(RX_one() == 0x4A)
  3029  0BAA  2711  3188         	fcall	_RX_one
  3030  0BAC  3A4A               	xorlw	74
  3031  0BAD  1D03               	skipz
  3032  0BAE  2C3A               	goto	l3619
  3033                           
  3034                           ;Multi_RX_testjig_v1.c: 694: {
  3035                           ;Multi_RX_testjig_v1.c: 695: _delay((unsigned long)((50)*(16000000/4000.0)));
  3036  0BAF  3002               	movlw	2
  3037  0BB0  0020               	movlb	0	; select bank0
  3038  0BB1  00CB               	movwf	??_main+2
  3039  0BB2  3004               	movlw	4
  3040  0BB3  00CA               	movwf	??_main+1
  3041  0BB4  30BA               	movlw	186
  3042  0BB5  00C9               	movwf	??_main
  3043  0BB6                     u4177:	
  3044  0BB6  0BC9               	decfsz	??_main,f
  3045  0BB7  2BB6               	goto	u4177
  3046  0BB8  0BCA               	decfsz	??_main+1,f
  3047  0BB9  2BB6               	goto	u4177
  3048  0BBA  0BCB               	decfsz	??_main+2,f
  3049  0BBB  2BB6               	goto	u4177
  3050  0BBC  0000               	nop
  3051                           
  3052                           ;Multi_RX_testjig_v1.c: 696: tj_timer = 1000;
  3053  0BBD  30E8               	movlw	232
  3054  0BBE  0020               	movlb	0	; select bank0
  3055  0BBF  00DD               	movwf	_tj_timer
  3056  0BC0  3003               	movlw	3
  3057  0BC1  00DE               	movwf	_tj_timer+1
  3058  0BC2  2BC6               	goto	l3577
  3059  0BC3                     l3579:	
  3060  0BC3  0025               	movlb	5	; select bank5
  3061  0BC4  188C               	btfsc	12,1	;volatile
  3062  0BC5  2BCB               	goto	l362
  3063  0BC6                     l3577:	
  3064                           ;Multi_RX_testjig_v1.c: 697: while(tj_timer && RF1 == 0);
  3065                           
  3066  0BC6  0020               	movlb	0	; select bank0
  3067  0BC7  085D               	movf	_tj_timer,w
  3068  0BC8  045E               	iorwf	_tj_timer+1,w
  3069  0BC9  1D03               	btfss	3,2
  3070  0BCA  2BC3               	goto	l3579
  3071  0BCB                     l362:	
  3072                           
  3073                           ;Multi_RX_testjig_v1.c: 698: if(RF1 == 1 && RF0 == 1)
  3074  0BCB  0025               	movlb	5	; select bank5
  3075  0BCC  188C               	btfsc	12,1	;volatile
  3076  0BCD  1C0C               	btfss	12,0	;volatile
  3077  0BCE  2C30               	goto	l3615
  3078                           
  3079                           ;Multi_RX_testjig_v1.c: 699: {
  3080                           ;Multi_RX_testjig_v1.c: 700: LATB5 = 0;
  3081  0BCF  0022               	movlb	2	; select bank2
  3082  0BD0  128D               	bcf	13,5	;volatile
  3083                           
  3084                           ;Multi_RX_testjig_v1.c: 701: TX_one(0x41);
  3085  0BD1  3041               	movlw	65
  3086  0BD2  26EF  3188         	fcall	_TX_one
  3087                           
  3088                           ;Multi_RX_testjig_v1.c: 702: RX_one();
  3089  0BD4  2711  3188         	fcall	_RX_one
  3090                           
  3091                           ;Multi_RX_testjig_v1.c: 703: _delay((unsigned long)((150)*(16000000/4000.0)));
  3092  0BD6  3004               	movlw	4
  3093  0BD7  0020               	movlb	0	; select bank0
  3094  0BD8  00CB               	movwf	??_main+2
  3095  0BD9  300C               	movlw	12
  3096  0BDA  00CA               	movwf	??_main+1
  3097  0BDB  3035               	movlw	53
  3098  0BDC  00C9               	movwf	??_main
  3099  0BDD                     u4187:	
  3100  0BDD  0BC9               	decfsz	??_main,f
  3101  0BDE  2BDD               	goto	u4187
  3102  0BDF  0BCA               	decfsz	??_main+1,f
  3103  0BE0  2BDD               	goto	u4187
  3104  0BE1  0BCB               	decfsz	??_main+2,f
  3105  0BE2  2BDD               	goto	u4187
  3106  0BE3  3200               	nop2
  3107                           
  3108                           ;Multi_RX_testjig_v1.c: 704: TX_one(0x40);
  3109  0BE4  3040               	movlw	64
  3110  0BE5  26EF  3188         	fcall	_TX_one
  3111                           
  3112                           ;Multi_RX_testjig_v1.c: 705: RX_one();
  3113  0BE7  2711  3188         	fcall	_RX_one
  3114                           
  3115                           ;Multi_RX_testjig_v1.c: 706: _delay((unsigned long)((20)*(16000000/4000.0)));
  3116  0BE9  3068               	movlw	104
  3117  0BEA  0020               	movlb	0	; select bank0
  3118  0BEB  00CA               	movwf	??_main+1
  3119  0BEC  30E4               	movlw	228
  3120  0BED  00C9               	movwf	??_main
  3121  0BEE                     u4197:	
  3122  0BEE  0BC9               	decfsz	??_main,f
  3123  0BEF  2BEE               	goto	u4197
  3124  0BF0  0BCA               	decfsz	??_main+1,f
  3125  0BF1  2BEE               	goto	u4197
  3126  0BF2  0000               	nop
  3127                           
  3128                           ;Multi_RX_testjig_v1.c: 707: if(RF1 == 0 && RF0 == 1)
  3129  0BF3  0025               	movlb	5	; select bank5
  3130  0BF4  1C8C               	btfss	12,1	;volatile
  3131  0BF5  1C0C               	btfss	12,0	;volatile
  3132  0BF6  2C28               	goto	l3613
  3133                           
  3134                           ;Multi_RX_testjig_v1.c: 708: {
  3135                           ;Multi_RX_testjig_v1.c: 709: TX_one(0x41);
  3136  0BF7  3041               	movlw	65
  3137  0BF8  26EF  3188         	fcall	_TX_one
  3138                           
  3139                           ;Multi_RX_testjig_v1.c: 710: if(RX_one() == 0x4A)
  3140  0BFA  2711  3188         	fcall	_RX_one
  3141  0BFC  3A4A               	xorlw	74
  3142  0BFD  1D03               	skipz
  3143  0BFE  2C20               	goto	l3611
  3144                           
  3145                           ;Multi_RX_testjig_v1.c: 711: {
  3146                           ;Multi_RX_testjig_v1.c: 712: _delay((unsigned long)((10)*(16000000/4000.0)));
  3147  0BFF  3034               	movlw	52
  3148  0C00  0020               	movlb	0	; select bank0
  3149  0C01  00CA               	movwf	??_main+1
  3150  0C02  30F1               	movlw	241
  3151  0C03  00C9               	movwf	??_main
  3152  0C04                     u4207:	
  3153  0C04  0BC9               	decfsz	??_main,f
  3154  0C05  2C04               	goto	u4207
  3155  0C06  0BCA               	decfsz	??_main+1,f
  3156  0C07  2C04               	goto	u4207
  3157  0C08  3200               	nop2
  3158                           
  3159                           ;Multi_RX_testjig_v1.c: 713: if(RF1 == 1 && RF0 == 1)
  3160  0C09  0025               	movlb	5	; select bank5
  3161  0C0A  188C               	btfsc	12,1	;volatile
  3162  0C0B  1C0C               	btfss	12,0	;volatile
  3163  0C0C  2C18               	goto	l3609
  3164                           
  3165                           ;Multi_RX_testjig_v1.c: 714: {
  3166                           ;Multi_RX_testjig_v1.c: 715: print_screen("Test CH2", "ok");
  3167  0C0D  3095               	movlw	low (STR_63| (0+32768))
  3168  0C0E  00F4               	movwf	print_screen@top
  3169  0C0F  3092               	movlw	high (STR_63| (0+32768))
  3170  0C10  00F5               	movwf	print_screen@top+1
  3171  0C11  3029               	movlw	low (STR_66| (0+32768))
  3172  0C12  00F6               	movwf	print_screen@bottom
  3173  0C13  3093               	movlw	high (STR_66| (0+32768))
  3174  0C14  00F7               	movwf	print_screen@bottom+1
  3175  0C15  2731  3188         	fcall	_print_screen
  3176                           
  3177                           ;Multi_RX_testjig_v1.c: 716: }
  3178  0C17  2C6C               	goto	l376
  3179  0C18                     l3609:	
  3180                           
  3181                           ;Multi_RX_testjig_v1.c: 717: else
  3182                           ;Multi_RX_testjig_v1.c: 718: print_error("CH2 - OFF", " Error 2");
  3183  0C18  305B               	movlw	low (STR_67| (0+32768))
  3184  0C19  00F8               	movwf	print_error@top
  3185  0C1A  3092               	movlw	high (STR_67| (0+32768))
  3186  0C1B  00F9               	movwf	print_error@top+1
  3187  0C1C  308C               	movlw	low (STR_48| (0+32768))
  3188  0C1D  00FA               	movwf	print_error@bottom
  3189  0C1E  3092               	movlw	high (STR_48| (0+32768))
  3190  0C1F  2C69               	goto	L4
  3191  0C20                     l3611:	
  3192                           
  3193                           ;Multi_RX_testjig_v1.c: 720: else
  3194                           ;Multi_RX_testjig_v1.c: 721: print_error("Comms Error", " 5");
  3195  0C20  300E               	movlw	low (STR_37| (0+32768))
  3196  0C21  00F8               	movwf	print_error@top
  3197  0C22  3092               	movlw	high (STR_37| (0+32768))
  3198  0C23  00F9               	movwf	print_error@top+1
  3199  0C24  301A               	movlw	low (STR_70| (0+32768))
  3200  0C25  00FA               	movwf	print_error@bottom
  3201  0C26  3093               	movlw	high (STR_70| (0+32768))
  3202  0C27  2C69               	goto	L4
  3203  0C28                     l3613:	
  3204                           
  3205                           ;Multi_RX_testjig_v1.c: 723: else
  3206                           ;Multi_RX_testjig_v1.c: 724: print_error("CH2 - ON", "PTC Error reset");
  3207  0C28  30B0               	movlw	low (STR_71| (0+32768))
  3208  0C29  00F8               	movwf	print_error@top
  3209  0C2A  3092               	movlw	high (STR_71| (0+32768))
  3210  0C2B  00F9               	movwf	print_error@top+1
  3211  0C2C  30BB               	movlw	low (STR_72| (0+32768))
  3212  0C2D  00FA               	movwf	print_error@bottom
  3213  0C2E  3090               	movlw	high (STR_72| (0+32768))
  3214  0C2F  2C69               	goto	L4
  3215  0C30                     l3615:	
  3216                           
  3217                           ;Multi_RX_testjig_v1.c: 726: else
  3218                           ;Multi_RX_testjig_v1.c: 727: {
  3219                           ;Multi_RX_testjig_v1.c: 728: trip_current = get_30v_current();
  3220  0C30  27AE  3188         	fcall	_get_30v_current
  3221                           
  3222                           ;Multi_RX_testjig_v1.c: 729: print_error("CH2 - ON", "PTC Error trip");
  3223  0C32  30B0               	movlw	low (STR_71| (0+32768))
  3224  0C33  00F8               	movwf	print_error@top
  3225  0C34  3092               	movlw	high (STR_71| (0+32768))
  3226  0C35  00F9               	movwf	print_error@top+1
  3227  0C36  30F8               	movlw	low (STR_74| (0+32768))
  3228  0C37  00FA               	movwf	print_error@bottom
  3229  0C38  3090               	movlw	high (STR_74| (0+32768))
  3230  0C39  2C69               	goto	L4
  3231  0C3A                     l3619:	
  3232                           
  3233                           ;Multi_RX_testjig_v1.c: 732: else
  3234                           ;Multi_RX_testjig_v1.c: 733: print_error("Comms Error", " 6a");
  3235  0C3A  300E               	movlw	low (STR_37| (0+32768))
  3236  0C3B  00F8               	movwf	print_error@top
  3237  0C3C  3092               	movlw	high (STR_37| (0+32768))
  3238  0C3D  00F9               	movwf	print_error@top+1
  3239  0C3E  3004               	movlw	low (STR_76| (0+32768))
  3240  0C3F  00FA               	movwf	print_error@bottom
  3241  0C40  3093               	movlw	high (STR_76| (0+32768))
  3242  0C41  2C69               	goto	L4
  3243  0C42                     l3621:	
  3244                           
  3245                           ;Multi_RX_testjig_v1.c: 735: else
  3246                           ;Multi_RX_testjig_v1.c: 736: print_error("Comms Error", " 6b");
  3247  0C42  300E               	movlw	low (STR_37| (0+32768))
  3248  0C43  00F8               	movwf	print_error@top
  3249  0C44  3092               	movlw	high (STR_37| (0+32768))
  3250  0C45  00F9               	movwf	print_error@top+1
  3251  0C46  300C               	movlw	low (STR_78| (0+32768))
  3252  0C47  00FA               	movwf	print_error@bottom
  3253  0C48  3093               	movlw	high (STR_78| (0+32768))
  3254  0C49  2C69               	goto	L4
  3255  0C4A                     l3623:	
  3256                           
  3257                           ;Multi_RX_testjig_v1.c: 738: else
  3258                           ;Multi_RX_testjig_v1.c: 739: print_error("CH2 - ON", " Error");
  3259  0C4A  30B0               	movlw	low (STR_71| (0+32768))
  3260  0C4B  00F8               	movwf	print_error@top
  3261  0C4C  3092               	movlw	high (STR_71| (0+32768))
  3262  0C4D  00F9               	movwf	print_error@top+1
  3263  0C4E  302A               	movlw	low ((STR_12+4)| (0+32768))
  3264  0C4F  00FA               	movwf	print_error@bottom
  3265  0C50  3092               	movlw	high ((STR_12+4)| (0+32768))
  3266  0C51  2C69               	goto	L4
  3267  0C52                     l3625:	
  3268                           
  3269                           ;Multi_RX_testjig_v1.c: 741: else
  3270                           ;Multi_RX_testjig_v1.c: 742: print_error("Comms Error", " 6");
  3271  0C52  300E               	movlw	low (STR_37| (0+32768))
  3272  0C53  00F8               	movwf	print_error@top
  3273  0C54  3092               	movlw	high (STR_37| (0+32768))
  3274  0C55  00F9               	movwf	print_error@top+1
  3275  0C56  301D               	movlw	low (STR_82| (0+32768))
  3276  0C57  00FA               	movwf	print_error@bottom
  3277  0C58  3093               	movlw	high (STR_82| (0+32768))
  3278  0C59  2C69               	goto	L4
  3279  0C5A                     l3627:	
  3280                           
  3281                           ;Multi_RX_testjig_v1.c: 744: else
  3282                           ;Multi_RX_testjig_v1.c: 745: print_error("CH2 - OFF", " Error 1");
  3283  0C5A  305B               	movlw	low (STR_67| (0+32768))
  3284  0C5B  00F8               	movwf	print_error@top
  3285  0C5C  3092               	movlw	high (STR_67| (0+32768))
  3286  0C5D  00F9               	movwf	print_error@top+1
  3287  0C5E  3083               	movlw	low (STR_46| (0+32768))
  3288  0C5F  00FA               	movwf	print_error@bottom
  3289  0C60  3092               	movlw	high (STR_46| (0+32768))
  3290  0C61  2C69               	goto	L4
  3291  0C62                     l3629:	
  3292                           
  3293                           ;Multi_RX_testjig_v1.c: 747: else
  3294                           ;Multi_RX_testjig_v1.c: 748: print_error("Comms Error", " 7");
  3295  0C62  300E               	movlw	low (STR_37| (0+32768))
  3296  0C63  00F8               	movwf	print_error@top
  3297  0C64  3092               	movlw	high (STR_37| (0+32768))
  3298  0C65  00F9               	movwf	print_error@top+1
  3299  0C66  3020               	movlw	low (STR_86| (0+32768))
  3300  0C67  00FA               	movwf	print_error@bottom
  3301  0C68  3093               	movlw	high (STR_86| (0+32768))
  3302  0C69                     L4:	
  3303  0C69  00FB               	movwf	print_error@bottom+1
  3304  0C6A  2747  3188         	fcall	_print_error
  3305  0C6C                     l376:	
  3306                           
  3307                           ;Multi_RX_testjig_v1.c: 752: print_screen("Test CH3", "");
  3308  0C6C  309E               	movlw	low (STR_87| (0+32768))
  3309  0C6D  00F4               	movwf	print_screen@top
  3310  0C6E  3092               	movlw	high (STR_87| (0+32768))
  3311  0C6F  00F5               	movwf	print_screen@top+1
  3312  0C70  308A               	movlw	low ((STR_155+15)| (0+32768))
  3313  0C71  00F6               	movwf	print_screen@bottom
  3314  0C72  3090               	movlw	high ((STR_155+15)| (0+32768))
  3315  0C73  00F7               	movwf	print_screen@bottom+1
  3316  0C74  2731  3188         	fcall	_print_screen
  3317                           
  3318                           ;Multi_RX_testjig_v1.c: 753: TX_one(0x51);
  3319  0C76  3051               	movlw	81
  3320  0C77  26EF  3188         	fcall	_TX_one
  3321                           
  3322                           ;Multi_RX_testjig_v1.c: 754: if(RX_one() == 0x5A)
  3323  0C79  2711  3188         	fcall	_RX_one
  3324  0C7B  3A5A               	xorlw	90
  3325  0C7C  1D03               	skipz
  3326  0C7D  2D73               	goto	l3711
  3327                           
  3328                           ;Multi_RX_testjig_v1.c: 755: {
  3329                           ;Multi_RX_testjig_v1.c: 756: _delay((unsigned long)((10)*(16000000/4000.0)));
  3330  0C7E  3034               	movlw	52
  3331  0C7F  0020               	movlb	0	; select bank0
  3332  0C80  00CA               	movwf	??_main+1
  3333  0C81  30F1               	movlw	241
  3334  0C82  00C9               	movwf	??_main
  3335  0C83                     u4217:	
  3336  0C83  0BC9               	decfsz	??_main,f
  3337  0C84  2C83               	goto	u4217
  3338  0C85  0BCA               	decfsz	??_main+1,f
  3339  0C86  2C83               	goto	u4217
  3340  0C87  3200               	nop2
  3341                           
  3342                           ;Multi_RX_testjig_v1.c: 757: if(RF1 == 1 && RF0 == 1)
  3343  0C88  0025               	movlb	5	; select bank5
  3344  0C89  188C               	btfsc	12,1	;volatile
  3345  0C8A  1C0C               	btfss	12,0	;volatile
  3346  0C8B  2D6B               	goto	l3709
  3347                           
  3348                           ;Multi_RX_testjig_v1.c: 758: {
  3349                           ;Multi_RX_testjig_v1.c: 759: TX_one(0x50);
  3350  0C8C  3050               	movlw	80
  3351  0C8D  26EF  3188         	fcall	_TX_one
  3352                           
  3353                           ;Multi_RX_testjig_v1.c: 760: if(RX_one() == 0x5A)
  3354  0C8F  2711  3188         	fcall	_RX_one
  3355  0C91  3A5A               	xorlw	90
  3356  0C92  1D03               	skipz
  3357  0C93  2D63               	goto	l3707
  3358                           
  3359                           ;Multi_RX_testjig_v1.c: 761: {
  3360                           ;Multi_RX_testjig_v1.c: 762: _delay((unsigned long)((10)*(16000000/4000.0)));
  3361  0C94  3034               	movlw	52
  3362  0C95  0020               	movlb	0	; select bank0
  3363  0C96  00CA               	movwf	??_main+1
  3364  0C97  30F1               	movlw	241
  3365  0C98  00C9               	movwf	??_main
  3366  0C99                     u4227:	
  3367  0C99  0BC9               	decfsz	??_main,f
  3368  0C9A  2C99               	goto	u4227
  3369  0C9B  0BCA               	decfsz	??_main+1,f
  3370  0C9C  2C99               	goto	u4227
  3371  0C9D  3200               	nop2
  3372                           
  3373                           ;Multi_RX_testjig_v1.c: 763: if(RF1 == 1 && RF0 == 0)
  3374  0C9E  0025               	movlb	5	; select bank5
  3375  0C9F  188C               	btfsc	12,1	;volatile
  3376  0CA0  180C               	btfsc	12,0	;volatile
  3377  0CA1  2D5B               	goto	l3705
  3378                           
  3379                           ;Multi_RX_testjig_v1.c: 764: {
  3380                           ;Multi_RX_testjig_v1.c: 765: TX_one(0x51);
  3381  0CA2  3051               	movlw	81
  3382  0CA3  26EF  3188         	fcall	_TX_one
  3383                           
  3384                           ;Multi_RX_testjig_v1.c: 766: if(RX_one() == 0x5A)
  3385  0CA5  2711  3188         	fcall	_RX_one
  3386  0CA7  3A5A               	xorlw	90
  3387  0CA8  1D03               	skipz
  3388  0CA9  2D53               	goto	l3703
  3389                           
  3390                           ;Multi_RX_testjig_v1.c: 767: {
  3391                           ;Multi_RX_testjig_v1.c: 768: LATA6 = 1;
  3392  0CAA  0022               	movlb	2	; select bank2
  3393  0CAB  170C               	bsf	12,6	;volatile
  3394                           
  3395                           ;Multi_RX_testjig_v1.c: 769: _delay((unsigned long)((50)*(16000000/4000.0)));
  3396  0CAC  3002               	movlw	2
  3397  0CAD  0020               	movlb	0	; select bank0
  3398  0CAE  00CB               	movwf	??_main+2
  3399  0CAF  3004               	movlw	4
  3400  0CB0  00CA               	movwf	??_main+1
  3401  0CB1  30BA               	movlw	186
  3402  0CB2  00C9               	movwf	??_main
  3403  0CB3                     u4237:	
  3404  0CB3  0BC9               	decfsz	??_main,f
  3405  0CB4  2CB3               	goto	u4237
  3406  0CB5  0BCA               	decfsz	??_main+1,f
  3407  0CB6  2CB3               	goto	u4237
  3408  0CB7  0BCB               	decfsz	??_main+2,f
  3409  0CB8  2CB3               	goto	u4237
  3410  0CB9  0000               	nop
  3411                           
  3412                           ;Multi_RX_testjig_v1.c: 770: TX_one(0x50);
  3413  0CBA  3050               	movlw	80
  3414  0CBB  26EF  3188         	fcall	_TX_one
  3415                           
  3416                           ;Multi_RX_testjig_v1.c: 771: if(RX_one() == 0x5A)
  3417  0CBD  2711  3188         	fcall	_RX_one
  3418  0CBF  3A5A               	xorlw	90
  3419  0CC0  1D03               	skipz
  3420  0CC1  2D4B               	goto	l3701
  3421                           
  3422                           ;Multi_RX_testjig_v1.c: 772: {
  3423                           ;Multi_RX_testjig_v1.c: 773: _delay((unsigned long)((50)*(16000000/4000.0)));
  3424  0CC2  3002               	movlw	2
  3425  0CC3  0020               	movlb	0	; select bank0
  3426  0CC4  00CB               	movwf	??_main+2
  3427  0CC5  3004               	movlw	4
  3428  0CC6  00CA               	movwf	??_main+1
  3429  0CC7  30BA               	movlw	186
  3430  0CC8  00C9               	movwf	??_main
  3431  0CC9                     u4247:	
  3432  0CC9  0BC9               	decfsz	??_main,f
  3433  0CCA  2CC9               	goto	u4247
  3434  0CCB  0BCA               	decfsz	??_main+1,f
  3435  0CCC  2CC9               	goto	u4247
  3436  0CCD  0BCB               	decfsz	??_main+2,f
  3437  0CCE  2CC9               	goto	u4247
  3438  0CCF  0000               	nop
  3439                           
  3440                           ;Multi_RX_testjig_v1.c: 774: tj_timer = 1000;
  3441  0CD0  30E8               	movlw	232
  3442  0CD1  0020               	movlb	0	; select bank0
  3443  0CD2  00DD               	movwf	_tj_timer
  3444  0CD3  3003               	movlw	3
  3445  0CD4  00DE               	movwf	_tj_timer+1
  3446  0CD5  2CD9               	goto	l3661
  3447  0CD6                     l3663:	
  3448  0CD6  0025               	movlb	5	; select bank5
  3449  0CD7  180C               	btfsc	12,0	;volatile
  3450  0CD8  2CDE               	goto	l387
  3451  0CD9                     l3661:	
  3452                           ;Multi_RX_testjig_v1.c: 775: while(tj_timer && RF0 == 0);
  3453                           
  3454  0CD9  0020               	movlb	0	; select bank0
  3455  0CDA  085D               	movf	_tj_timer,w
  3456  0CDB  045E               	iorwf	_tj_timer+1,w
  3457  0CDC  1D03               	btfss	3,2
  3458  0CDD  2CD6               	goto	l3663
  3459  0CDE                     l387:	
  3460                           
  3461                           ;Multi_RX_testjig_v1.c: 776: if(RF1 == 1 && RF0 == 1)
  3462  0CDE  0025               	movlb	5	; select bank5
  3463  0CDF  188C               	btfsc	12,1	;volatile
  3464  0CE0  1C0C               	btfss	12,0	;volatile
  3465  0CE1  2D43               	goto	l3699
  3466                           
  3467                           ;Multi_RX_testjig_v1.c: 777: {
  3468                           ;Multi_RX_testjig_v1.c: 778: LATA6 = 0;
  3469  0CE2  0022               	movlb	2	; select bank2
  3470  0CE3  130C               	bcf	12,6	;volatile
  3471                           
  3472                           ;Multi_RX_testjig_v1.c: 779: TX_one(0x51);
  3473  0CE4  3051               	movlw	81
  3474  0CE5  26EF  3188         	fcall	_TX_one
  3475                           
  3476                           ;Multi_RX_testjig_v1.c: 780: RX_one();
  3477  0CE7  2711  3188         	fcall	_RX_one
  3478                           
  3479                           ;Multi_RX_testjig_v1.c: 781: _delay((unsigned long)((150)*(16000000/4000.0)));
  3480  0CE9  3004               	movlw	4
  3481  0CEA  0020               	movlb	0	; select bank0
  3482  0CEB  00CB               	movwf	??_main+2
  3483  0CEC  300C               	movlw	12
  3484  0CED  00CA               	movwf	??_main+1
  3485  0CEE  3035               	movlw	53
  3486  0CEF  00C9               	movwf	??_main
  3487  0CF0                     u4257:	
  3488  0CF0  0BC9               	decfsz	??_main,f
  3489  0CF1  2CF0               	goto	u4257
  3490  0CF2  0BCA               	decfsz	??_main+1,f
  3491  0CF3  2CF0               	goto	u4257
  3492  0CF4  0BCB               	decfsz	??_main+2,f
  3493  0CF5  2CF0               	goto	u4257
  3494  0CF6  3200               	nop2
  3495                           
  3496                           ;Multi_RX_testjig_v1.c: 782: TX_one(0x50);
  3497  0CF7  3050               	movlw	80
  3498  0CF8  26EF  3188         	fcall	_TX_one
  3499                           
  3500                           ;Multi_RX_testjig_v1.c: 783: RX_one();
  3501  0CFA  2711  3188         	fcall	_RX_one
  3502                           
  3503                           ;Multi_RX_testjig_v1.c: 784: _delay((unsigned long)((20)*(16000000/4000.0)));
  3504  0CFC  3068               	movlw	104
  3505  0CFD  0020               	movlb	0	; select bank0
  3506  0CFE  00CA               	movwf	??_main+1
  3507  0CFF  30E4               	movlw	228
  3508  0D00  00C9               	movwf	??_main
  3509  0D01                     u4267:	
  3510  0D01  0BC9               	decfsz	??_main,f
  3511  0D02  2D01               	goto	u4267
  3512  0D03  0BCA               	decfsz	??_main+1,f
  3513  0D04  2D01               	goto	u4267
  3514  0D05  0000               	nop
  3515                           
  3516                           ;Multi_RX_testjig_v1.c: 785: if(RF1 == 1 && RF0 == 0)
  3517  0D06  0025               	movlb	5	; select bank5
  3518  0D07  188C               	btfsc	12,1	;volatile
  3519  0D08  180C               	btfsc	12,0	;volatile
  3520  0D09  2D3B               	goto	l3697
  3521                           
  3522                           ;Multi_RX_testjig_v1.c: 786: {
  3523                           ;Multi_RX_testjig_v1.c: 787: TX_one(0x51);
  3524  0D0A  3051               	movlw	81
  3525  0D0B  26EF  3188         	fcall	_TX_one
  3526                           
  3527                           ;Multi_RX_testjig_v1.c: 788: if(RX_one() == 0x5A)
  3528  0D0D  2711  3188         	fcall	_RX_one
  3529  0D0F  3A5A               	xorlw	90
  3530  0D10  1D03               	skipz
  3531  0D11  2D33               	goto	l3695
  3532                           
  3533                           ;Multi_RX_testjig_v1.c: 789: {
  3534                           ;Multi_RX_testjig_v1.c: 790: _delay((unsigned long)((10)*(16000000/4000.0)));
  3535  0D12  3034               	movlw	52
  3536  0D13  0020               	movlb	0	; select bank0
  3537  0D14  00CA               	movwf	??_main+1
  3538  0D15  30F1               	movlw	241
  3539  0D16  00C9               	movwf	??_main
  3540  0D17                     u4277:	
  3541  0D17  0BC9               	decfsz	??_main,f
  3542  0D18  2D17               	goto	u4277
  3543  0D19  0BCA               	decfsz	??_main+1,f
  3544  0D1A  2D17               	goto	u4277
  3545  0D1B  3200               	nop2
  3546                           
  3547                           ;Multi_RX_testjig_v1.c: 791: if(RF1 == 1 && RF0 == 1)
  3548  0D1C  0025               	movlb	5	; select bank5
  3549  0D1D  188C               	btfsc	12,1	;volatile
  3550  0D1E  1C0C               	btfss	12,0	;volatile
  3551  0D1F  2D2B               	goto	l3693
  3552                           
  3553                           ;Multi_RX_testjig_v1.c: 792: {
  3554                           ;Multi_RX_testjig_v1.c: 793: print_screen("Test CH3", "ok");
  3555  0D20  309E               	movlw	low (STR_87| (0+32768))
  3556  0D21  00F4               	movwf	print_screen@top
  3557  0D22  3092               	movlw	high (STR_87| (0+32768))
  3558  0D23  00F5               	movwf	print_screen@top+1
  3559  0D24  3029               	movlw	low (STR_66| (0+32768))
  3560  0D25  00F6               	movwf	print_screen@bottom
  3561  0D26  3093               	movlw	high (STR_66| (0+32768))
  3562  0D27  00F7               	movwf	print_screen@bottom+1
  3563  0D28  2731  3188         	fcall	_print_screen
  3564                           
  3565                           ;Multi_RX_testjig_v1.c: 794: }
  3566  0D2A  2D7D               	goto	l401
  3567  0D2B                     l3693:	
  3568                           
  3569                           ;Multi_RX_testjig_v1.c: 795: else
  3570                           ;Multi_RX_testjig_v1.c: 796: print_error("CH3 - OFF", " Error 2");
  3571  0D2B  3065               	movlw	low (STR_91| (0+32768))
  3572  0D2C  00F8               	movwf	print_error@top
  3573  0D2D  3092               	movlw	high (STR_91| (0+32768))
  3574  0D2E  00F9               	movwf	print_error@top+1
  3575  0D2F  308C               	movlw	low (STR_48| (0+32768))
  3576  0D30  00FA               	movwf	print_error@bottom
  3577  0D31  3092               	movlw	high (STR_48| (0+32768))
  3578  0D32  2D7A               	goto	L5
  3579  0D33                     l3695:	
  3580                           
  3581                           ;Multi_RX_testjig_v1.c: 798: else
  3582                           ;Multi_RX_testjig_v1.c: 799: print_error("Comms Error", " 8");
  3583  0D33  300E               	movlw	low (STR_37| (0+32768))
  3584  0D34  00F8               	movwf	print_error@top
  3585  0D35  3092               	movlw	high (STR_37| (0+32768))
  3586  0D36  00F9               	movwf	print_error@top+1
  3587  0D37  3023               	movlw	low (STR_94| (0+32768))
  3588  0D38  00FA               	movwf	print_error@bottom
  3589  0D39  3093               	movlw	high (STR_94| (0+32768))
  3590  0D3A  2D7A               	goto	L5
  3591  0D3B                     l3697:	
  3592                           
  3593                           ;Multi_RX_testjig_v1.c: 801: else
  3594                           ;Multi_RX_testjig_v1.c: 802: print_error("CH3 - ON", "PTC Error reset");
  3595  0D3B  30B9               	movlw	low (STR_95| (0+32768))
  3596  0D3C  00F8               	movwf	print_error@top
  3597  0D3D  3092               	movlw	high (STR_95| (0+32768))
  3598  0D3E  00F9               	movwf	print_error@top+1
  3599  0D3F  30BB               	movlw	low (STR_72| (0+32768))
  3600  0D40  00FA               	movwf	print_error@bottom
  3601  0D41  3090               	movlw	high (STR_72| (0+32768))
  3602  0D42  2D7A               	goto	L5
  3603  0D43                     l3699:	
  3604                           
  3605                           ;Multi_RX_testjig_v1.c: 804: else
  3606                           ;Multi_RX_testjig_v1.c: 805: print_error("CH3 - ON", "PTC Error trip");
  3607  0D43  30B9               	movlw	low (STR_95| (0+32768))
  3608  0D44  00F8               	movwf	print_error@top
  3609  0D45  3092               	movlw	high (STR_95| (0+32768))
  3610  0D46  00F9               	movwf	print_error@top+1
  3611  0D47  30F8               	movlw	low (STR_74| (0+32768))
  3612  0D48  00FA               	movwf	print_error@bottom
  3613  0D49  3090               	movlw	high (STR_74| (0+32768))
  3614  0D4A  2D7A               	goto	L5
  3615  0D4B                     l3701:	
  3616                           
  3617                           ;Multi_RX_testjig_v1.c: 807: else
  3618                           ;Multi_RX_testjig_v1.c: 808: print_error("Comms Error", " 8b");
  3619  0D4B  300E               	movlw	low (STR_37| (0+32768))
  3620  0D4C  00F8               	movwf	print_error@top
  3621  0D4D  3092               	movlw	high (STR_37| (0+32768))
  3622  0D4E  00F9               	movwf	print_error@top+1
  3623  0D4F  3010               	movlw	low (STR_100| (0+32768))
  3624  0D50  00FA               	movwf	print_error@bottom
  3625  0D51  3093               	movlw	high (STR_100| (0+32768))
  3626  0D52  2D7A               	goto	L5
  3627  0D53                     l3703:	
  3628                           
  3629                           ;Multi_RX_testjig_v1.c: 810: else
  3630                           ;Multi_RX_testjig_v1.c: 811: print_error("Comms Error", " 8a");
  3631  0D53  300E               	movlw	low (STR_37| (0+32768))
  3632  0D54  00F8               	movwf	print_error@top
  3633  0D55  3092               	movlw	high (STR_37| (0+32768))
  3634  0D56  00F9               	movwf	print_error@top+1
  3635  0D57  3008               	movlw	low (STR_102| (0+32768))
  3636  0D58  00FA               	movwf	print_error@bottom
  3637  0D59  3093               	movlw	high (STR_102| (0+32768))
  3638  0D5A  2D7A               	goto	L5
  3639  0D5B                     l3705:	
  3640                           
  3641                           ;Multi_RX_testjig_v1.c: 813: else
  3642                           ;Multi_RX_testjig_v1.c: 814: print_error("CH3 - ON", " Error");
  3643  0D5B  30B9               	movlw	low (STR_95| (0+32768))
  3644  0D5C  00F8               	movwf	print_error@top
  3645  0D5D  3092               	movlw	high (STR_95| (0+32768))
  3646  0D5E  00F9               	movwf	print_error@top+1
  3647  0D5F  302A               	movlw	low ((STR_12+4)| (0+32768))
  3648  0D60  00FA               	movwf	print_error@bottom
  3649  0D61  3092               	movlw	high ((STR_12+4)| (0+32768))
  3650  0D62  2D7A               	goto	L5
  3651  0D63                     l3707:	
  3652                           
  3653                           ;Multi_RX_testjig_v1.c: 816: else
  3654                           ;Multi_RX_testjig_v1.c: 817: print_error("Comms Error", " 9");
  3655  0D63  300E               	movlw	low (STR_37| (0+32768))
  3656  0D64  00F8               	movwf	print_error@top
  3657  0D65  3092               	movlw	high (STR_37| (0+32768))
  3658  0D66  00F9               	movwf	print_error@top+1
  3659  0D67  3026               	movlw	low (STR_106| (0+32768))
  3660  0D68  00FA               	movwf	print_error@bottom
  3661  0D69  3093               	movlw	high (STR_106| (0+32768))
  3662  0D6A  2D7A               	goto	L5
  3663  0D6B                     l3709:	
  3664                           
  3665                           ;Multi_RX_testjig_v1.c: 819: else
  3666                           ;Multi_RX_testjig_v1.c: 820: print_error("CH3 - OFF", " Error 1");
  3667  0D6B  3065               	movlw	low (STR_91| (0+32768))
  3668  0D6C  00F8               	movwf	print_error@top
  3669  0D6D  3092               	movlw	high (STR_91| (0+32768))
  3670  0D6E  00F9               	movwf	print_error@top+1
  3671  0D6F  3083               	movlw	low (STR_46| (0+32768))
  3672  0D70  00FA               	movwf	print_error@bottom
  3673  0D71  3092               	movlw	high (STR_46| (0+32768))
  3674  0D72  2D7A               	goto	L5
  3675  0D73                     l3711:	
  3676                           
  3677                           ;Multi_RX_testjig_v1.c: 822: else
  3678                           ;Multi_RX_testjig_v1.c: 823: print_error("Comms Error", " 10");
  3679  0D73  300E               	movlw	low (STR_37| (0+32768))
  3680  0D74  00F8               	movwf	print_error@top
  3681  0D75  3092               	movlw	high (STR_37| (0+32768))
  3682  0D76  00F9               	movwf	print_error@top+1
  3683  0D77  30E4               	movlw	low (STR_110| (0+32768))
  3684  0D78  00FA               	movwf	print_error@bottom
  3685  0D79  3092               	movlw	high (STR_110| (0+32768))
  3686  0D7A                     L5:	
  3687  0D7A  00FB               	movwf	print_error@bottom+1
  3688  0D7B  2747  3188         	fcall	_print_error
  3689  0D7D                     l401:	
  3690                           
  3691                           ;Multi_RX_testjig_v1.c: 826: print_screen("Test RF", "3v3");
  3692  0D7D  30DC               	movlw	low (STR_111| (0+32768))
  3693  0D7E  00F4               	movwf	print_screen@top
  3694  0D7F  3092               	movlw	high (STR_111| (0+32768))
  3695  0D80  00F5               	movwf	print_screen@top+1
  3696  0D81  30E6               	movlw	low ((STR_117+8)| (0+32768))
  3697  0D82  00F6               	movwf	print_screen@bottom
  3698  0D83  3091               	movlw	high ((STR_117+8)| (0+32768))
  3699  0D84  00F7               	movwf	print_screen@bottom+1
  3700  0D85  2731  3188         	fcall	_print_screen
  3701                           
  3702                           ;Multi_RX_testjig_v1.c: 827: TX_one(0x70);
  3703  0D87  3070               	movlw	112
  3704  0D88  26EF  3188         	fcall	_TX_one
  3705                           
  3706                           ;Multi_RX_testjig_v1.c: 828: RX_data = RX_one();
  3707  0D8A  2711  3188         	fcall	_RX_one
  3708  0D8C  0020               	movlb	0	; select bank0
  3709  0D8D  00CE               	movwf	main@RX_data
  3710                           
  3711                           ;Multi_RX_testjig_v1.c: 829: TX_one(0x70);
  3712  0D8E  3070               	movlw	112
  3713  0D8F  26EF  3188         	fcall	_TX_one
  3714                           
  3715                           ;Multi_RX_testjig_v1.c: 830: RX_data = RX_one();
  3716  0D91  2711  3188         	fcall	_RX_one
  3717  0D93  0020               	movlb	0	; select bank0
  3718  0D94  00CE               	movwf	main@RX_data
  3719                           
  3720                           ;Multi_RX_testjig_v1.c: 831: if(RX_data == 0)
  3721  0D95  084E               	movf	main@RX_data,w
  3722  0D96  1D03               	btfss	3,2
  3723  0D97  2DA0               	goto	l3725
  3724                           
  3725                           ;Multi_RX_testjig_v1.c: 832: print_error("Comms Error", " 11");
  3726  0D98  300E               	movlw	low (STR_37| (0+32768))
  3727  0D99  00F8               	movwf	print_error@top
  3728  0D9A  3092               	movlw	high (STR_37| (0+32768))
  3729  0D9B  00F9               	movwf	print_error@top+1
  3730  0D9C  30E8               	movlw	low (STR_114| (0+32768))
  3731  0D9D  00FA               	movwf	print_error@bottom
  3732  0D9E  3092               	movlw	high (STR_114| (0+32768))
  3733  0D9F  2DCE               	goto	L9
  3734  0DA0                     l3725:	
  3735                           
  3736                           ;Multi_RX_testjig_v1.c: 833: else if(RX_data == 0xFF)
  3737  0DA0  0A4E               	incf	main@RX_data,w
  3738  0DA1  1D03               	btfss	3,2
  3739  0DA2  2DAB               	goto	l3729
  3740                           
  3741                           ;Multi_RX_testjig_v1.c: 834: print_error("Comms Error", " 12");
  3742  0DA3  300E               	movlw	low (STR_37| (0+32768))
  3743  0DA4  00F8               	movwf	print_error@top
  3744  0DA5  3092               	movlw	high (STR_37| (0+32768))
  3745  0DA6  00F9               	movwf	print_error@top+1
  3746  0DA7  30EC               	movlw	low (STR_116| (0+32768))
  3747  0DA8  00FA               	movwf	print_error@bottom
  3748  0DA9  3092               	movlw	high (STR_116| (0+32768))
  3749  0DAA  2DCE               	goto	L9
  3750  0DAB                     l3729:	
  3751                           
  3752                           ;Multi_RX_testjig_v1.c: 835: else if(RX_data > 179)
  3753  0DAB  30B4               	movlw	180
  3754  0DAC  024E               	subwf	main@RX_data,w
  3755  0DAD  1C03               	skipc
  3756  0DAE  2DB7               	goto	l3733
  3757                           
  3758                           ;Multi_RX_testjig_v1.c: 836: print_error("Test RF 3v3", " Error - High");
  3759  0DAF  30DE               	movlw	low (STR_117| (0+32768))
  3760  0DB0  00F8               	movwf	print_error@top
  3761  0DB1  3091               	movlw	high (STR_117| (0+32768))
  3762  0DB2  00F9               	movwf	print_error@top+1
  3763  0DB3  3032               	movlw	low (STR_118| (0+32768))
  3764  0DB4  00FA               	movwf	print_error@bottom
  3765  0DB5  3091               	movlw	high (STR_118| (0+32768))
  3766  0DB6  2DCE               	goto	L9
  3767  0DB7                     l3733:	
  3768                           
  3769                           ;Multi_RX_testjig_v1.c: 837: else if(RX_data < 153)
  3770  0DB7  3099               	movlw	153
  3771  0DB8  024E               	subwf	main@RX_data,w
  3772  0DB9  1803               	skipnc
  3773  0DBA  2DC3               	goto	l3737
  3774                           
  3775                           ;Multi_RX_testjig_v1.c: 838: print_error("Test RF 3v3", " Error - Micrel");
  3776  0DBB  30DE               	movlw	low (STR_117| (0+32768))
  3777  0DBC  00F8               	movwf	print_error@top
  3778  0DBD  3091               	movlw	high (STR_117| (0+32768))
  3779  0DBE  00F9               	movwf	print_error@top+1
  3780  0DBF  30AB               	movlw	low (STR_120| (0+32768))
  3781  0DC0  00FA               	movwf	print_error@bottom
  3782  0DC1  3090               	movlw	high (STR_120| (0+32768))
  3783  0DC2  2DCE               	goto	L9
  3784  0DC3                     l3737:	
  3785                           
  3786                           ;Multi_RX_testjig_v1.c: 839: else if(RX_data < 158)
  3787  0DC3  309E               	movlw	158
  3788  0DC4  024E               	subwf	main@RX_data,w
  3789  0DC5  1803               	skipnc
  3790  0DC6  2DD1               	goto	l403
  3791                           
  3792                           ;Multi_RX_testjig_v1.c: 840: print_error("Test RF 3v3", " Error - Low");
  3793  0DC7  30DE               	movlw	low (STR_117| (0+32768))
  3794  0DC8  00F8               	movwf	print_error@top
  3795  0DC9  3091               	movlw	high (STR_117| (0+32768))
  3796  0DCA  00F9               	movwf	print_error@top+1
  3797  0DCB  30D1               	movlw	low (STR_122| (0+32768))
  3798  0DCC  00FA               	movwf	print_error@bottom
  3799  0DCD  3091               	movlw	high (STR_122| (0+32768))
  3800  0DCE                     L9:	
  3801  0DCE  00FB               	movwf	print_error@bottom+1
  3802  0DCF  2747  3188         	fcall	_print_error
  3803  0DD1                     l403:	
  3804                           
  3805                           ;Multi_RX_testjig_v1.c: 842: print_screen("Test RF", "3v3 - OK");
  3806  0DD1  30DC               	movlw	low (STR_111| (0+32768))
  3807  0DD2  00F4               	movwf	print_screen@top
  3808  0DD3  3092               	movlw	high (STR_111| (0+32768))
  3809  0DD4  00F5               	movwf	print_screen@top+1
  3810  0DD5  30A7               	movlw	low (STR_124| (0+32768))
  3811  0DD6  00F6               	movwf	print_screen@bottom
  3812  0DD7  3092               	movlw	high (STR_124| (0+32768))
  3813  0DD8  00F7               	movwf	print_screen@bottom+1
  3814  0DD9  2731  3188         	fcall	_print_screen
  3815                           
  3816                           ;Multi_RX_testjig_v1.c: 845: RE0 = 1;
  3817  0DDB  0020               	movlb	0	; select bank0
  3818  0DDC  1410               	bsf	16,0	;volatile
  3819                           
  3820                           ;Multi_RX_testjig_v1.c: 846: _delay((unsigned long)((150)*(16000000/4000.0)));
  3821  0DDD  3004               	movlw	4
  3822  0DDE  00CB               	movwf	??_main+2
  3823  0DDF  300C               	movlw	12
  3824  0DE0  00CA               	movwf	??_main+1
  3825  0DE1  3035               	movlw	53
  3826  0DE2  00C9               	movwf	??_main
  3827  0DE3                     u4287:	
  3828  0DE3  0BC9               	decfsz	??_main,f
  3829  0DE4  2DE3               	goto	u4287
  3830  0DE5  0BCA               	decfsz	??_main+1,f
  3831  0DE6  2DE3               	goto	u4287
  3832  0DE7  0BCB               	decfsz	??_main+2,f
  3833  0DE8  2DE3               	goto	u4287
  3834  0DE9  3200               	nop2
  3835                           
  3836                           ;Multi_RX_testjig_v1.c: 847: print_screen("Test RF", "RSSI");
  3837  0DEA  30DC               	movlw	low (STR_111| (0+32768))
  3838  0DEB  00F4               	movwf	print_screen@top
  3839  0DEC  3092               	movlw	high (STR_111| (0+32768))
  3840  0DED  00F5               	movwf	print_screen@top+1
  3841  0DEE  307E               	movlw	low ((STR_131+8)| (0+32768))
  3842  0DEF  00F6               	movwf	print_screen@bottom
  3843  0DF0  3091               	movlw	high ((STR_131+8)| (0+32768))
  3844  0DF1  00F7               	movwf	print_screen@bottom+1
  3845  0DF2  2731  3188         	fcall	_print_screen
  3846                           
  3847                           ;Multi_RX_testjig_v1.c: 848: TX_one(0x60);
  3848  0DF4  3060               	movlw	96
  3849  0DF5  26EF  3188         	fcall	_TX_one
  3850                           
  3851                           ;Multi_RX_testjig_v1.c: 849: RX_data = RX_one();
  3852  0DF7  2711  3188         	fcall	_RX_one
  3853  0DF9  0020               	movlb	0	; select bank0
  3854  0DFA  00CE               	movwf	main@RX_data
  3855                           
  3856                           ;Multi_RX_testjig_v1.c: 850: TX_one(0x60);
  3857  0DFB  3060               	movlw	96
  3858  0DFC  26EF  3188         	fcall	_TX_one
  3859                           
  3860                           ;Multi_RX_testjig_v1.c: 851: RX_data = RX_one();
  3861  0DFE  2711  3188         	fcall	_RX_one
  3862  0E00  0020               	movlb	0	; select bank0
  3863  0E01  00CE               	movwf	main@RX_data
  3864                           
  3865                           ;Multi_RX_testjig_v1.c: 852: if(RX_data == 0)
  3866  0E02  084E               	movf	main@RX_data,w
  3867  0E03  1D03               	btfss	3,2
  3868  0E04  2E0D               	goto	l3759
  3869                           
  3870                           ;Multi_RX_testjig_v1.c: 853: print_error("Comms Error", " 13");
  3871  0E05  300E               	movlw	low (STR_37| (0+32768))
  3872  0E06  00F8               	movwf	print_error@top
  3873  0E07  3092               	movlw	high (STR_37| (0+32768))
  3874  0E08  00F9               	movwf	print_error@top+1
  3875  0E09  30F0               	movlw	low (STR_128| (0+32768))
  3876  0E0A  00FA               	movwf	print_error@bottom
  3877  0E0B  3092               	movlw	high (STR_128| (0+32768))
  3878  0E0C  2E2F               	goto	L6
  3879  0E0D                     l3759:	
  3880                           
  3881                           ;Multi_RX_testjig_v1.c: 854: else if(RX_data == 0xFF)
  3882  0E0D  0A4E               	incf	main@RX_data,w
  3883  0E0E  1D03               	btfss	3,2
  3884  0E0F  2E18               	goto	l3763
  3885                           
  3886                           ;Multi_RX_testjig_v1.c: 855: print_error("Comms Error", " 14");
  3887  0E10  300E               	movlw	low (STR_37| (0+32768))
  3888  0E11  00F8               	movwf	print_error@top
  3889  0E12  3092               	movlw	high (STR_37| (0+32768))
  3890  0E13  00F9               	movwf	print_error@top+1
  3891  0E14  30F4               	movlw	low (STR_130| (0+32768))
  3892  0E15  00FA               	movwf	print_error@bottom
  3893  0E16  3092               	movlw	high (STR_130| (0+32768))
  3894  0E17  2E2F               	goto	L6
  3895  0E18                     l3763:	
  3896                           
  3897                           ;Multi_RX_testjig_v1.c: 856: else if(RX_data > 120)
  3898  0E18  3079               	movlw	121
  3899  0E19  024E               	subwf	main@RX_data,w
  3900  0E1A  1C03               	skipc
  3901  0E1B  2E24               	goto	l3767
  3902                           
  3903                           ;Multi_RX_testjig_v1.c: 857: print_error("Test RF RSSI", " Error - High");
  3904  0E1C  3076               	movlw	low (STR_131| (0+32768))
  3905  0E1D  00F8               	movwf	print_error@top
  3906  0E1E  3091               	movlw	high (STR_131| (0+32768))
  3907  0E1F  00F9               	movwf	print_error@top+1
  3908  0E20  3032               	movlw	low (STR_118| (0+32768))
  3909  0E21  00FA               	movwf	print_error@bottom
  3910  0E22  3091               	movlw	high (STR_118| (0+32768))
  3911  0E23  2E2F               	goto	L6
  3912  0E24                     l3767:	
  3913                           
  3914                           ;Multi_RX_testjig_v1.c: 858: else if(RX_data < 90)
  3915  0E24  305A               	movlw	90
  3916  0E25  024E               	subwf	main@RX_data,w
  3917  0E26  1803               	skipnc
  3918  0E27  2E32               	goto	l412
  3919                           
  3920                           ;Multi_RX_testjig_v1.c: 859: print_error("Test RF RSSI", " Error - Low");
  3921  0E28  3076               	movlw	low (STR_131| (0+32768))
  3922  0E29  00F8               	movwf	print_error@top
  3923  0E2A  3091               	movlw	high (STR_131| (0+32768))
  3924  0E2B  00F9               	movwf	print_error@top+1
  3925  0E2C  30D1               	movlw	low (STR_122| (0+32768))
  3926  0E2D  00FA               	movwf	print_error@bottom
  3927  0E2E  3091               	movlw	high (STR_122| (0+32768))
  3928  0E2F                     L6:	
  3929  0E2F  00FB               	movwf	print_error@bottom+1
  3930  0E30  2747  3188         	fcall	_print_error
  3931  0E32                     l412:	
  3932                           
  3933                           ;Multi_RX_testjig_v1.c: 860: print_screen("Test RF", "RSSI - OK");
  3934  0E32  30DC               	movlw	low (STR_111| (0+32768))
  3935  0E33  00F4               	movwf	print_screen@top
  3936  0E34  3092               	movlw	high (STR_111| (0+32768))
  3937  0E35  00F5               	movwf	print_screen@top+1
  3938  0E36  306F               	movlw	low (STR_136| (0+32768))
  3939  0E37  00F6               	movwf	print_screen@bottom
  3940  0E38  3092               	movlw	high (STR_136| (0+32768))
  3941  0E39  00F7               	movwf	print_screen@bottom+1
  3942  0E3A  2731  3188         	fcall	_print_screen
  3943                           
  3944                           ;Multi_RX_testjig_v1.c: 863: print_screen("Test RF", "Decode");
  3945  0E3C  30DC               	movlw	low (STR_111| (0+32768))
  3946  0E3D  00F4               	movwf	print_screen@top
  3947  0E3E  3092               	movlw	high (STR_111| (0+32768))
  3948  0E3F  00F5               	movwf	print_screen@top+1
  3949  0E40  30F1               	movlw	low ((STR_144+8)| (0+32768))
  3950  0E41  00F6               	movwf	print_screen@bottom
  3951  0E42  3090               	movlw	high ((STR_144+8)| (0+32768))
  3952  0E43  00F7               	movwf	print_screen@bottom+1
  3953  0E44  2731  3188         	fcall	_print_screen
  3954                           
  3955                           ;Multi_RX_testjig_v1.c: 864: TX_one(0x61);
  3956  0E46  3061               	movlw	97
  3957  0E47  26EF  3188         	fcall	_TX_one
  3958                           
  3959                           ;Multi_RX_testjig_v1.c: 865: RX_data = RX_one();
  3960  0E49  2711  3188         	fcall	_RX_one
  3961  0E4B  0020               	movlb	0	; select bank0
  3962  0E4C  00CE               	movwf	main@RX_data
  3963                           
  3964                           ;Multi_RX_testjig_v1.c: 866: if(RX_data == 1)
  3965  0E4D  034E               	decf	main@RX_data,w
  3966  0E4E  1D03               	btfss	3,2
  3967  0E4F  2E5B               	goto	l3779
  3968                           
  3969                           ;Multi_RX_testjig_v1.c: 867: print_screen("Test RF", "Decode New - OK");
  3970  0E50  30DC               	movlw	low (STR_111| (0+32768))
  3971  0E51  00F4               	movwf	print_screen@top
  3972  0E52  3092               	movlw	high (STR_111| (0+32768))
  3973  0E53  00F5               	movwf	print_screen@top+1
  3974  0E54  308B               	movlw	low (STR_140| (0+32768))
  3975  0E55  00F6               	movwf	print_screen@bottom
  3976  0E56  3090               	movlw	high (STR_140| (0+32768))
  3977  0E57  00F7               	movwf	print_screen@bottom+1
  3978  0E58  2731  3188         	fcall	_print_screen
  3979  0E5A  2E80               	goto	l3789
  3980  0E5B                     l3779:	
  3981                           
  3982                           ;Multi_RX_testjig_v1.c: 868: else if(RX_data == 2)
  3983  0E5B  3002               	movlw	2
  3984  0E5C  064E               	xorwf	main@RX_data,w
  3985  0E5D  1D03               	btfss	3,2
  3986  0E5E  2E6A               	goto	l3783
  3987                           
  3988                           ;Multi_RX_testjig_v1.c: 869: print_screen("Test RF", "Decode Old -Fail");
  3989  0E5F  30DC               	movlw	low (STR_111| (0+32768))
  3990  0E60  00F4               	movwf	print_screen@top
  3991  0E61  3092               	movlw	high (STR_111| (0+32768))
  3992  0E62  00F5               	movwf	print_screen@top+1
  3993  0E63  3037               	movlw	low (STR_142| (0+32768))
  3994  0E64  00F6               	movwf	print_screen@bottom
  3995  0E65  3090               	movlw	high (STR_142| (0+32768))
  3996  0E66  00F7               	movwf	print_screen@bottom+1
  3997  0E67  2731  3188         	fcall	_print_screen
  3998  0E69  2E80               	goto	l3789
  3999  0E6A                     l3783:	
  4000                           
  4001                           ;Multi_RX_testjig_v1.c: 870: else if(RX_data == 3)
  4002  0E6A  3003               	movlw	3
  4003  0E6B  064E               	xorwf	main@RX_data,w
  4004  0E6C  1D03               	btfss	3,2
  4005  0E6D  2E76               	goto	l3787
  4006                           
  4007                           ;Multi_RX_testjig_v1.c: 871: print_error("Test RF", "Error - Decode");
  4008  0E6E  30DC               	movlw	low (STR_111| (0+32768))
  4009  0E6F  00F8               	movwf	print_error@top
  4010  0E70  3092               	movlw	high (STR_111| (0+32768))
  4011  0E71  00F9               	movwf	print_error@top+1
  4012  0E72  30E9               	movlw	low (STR_144| (0+32768))
  4013  0E73  00FA               	movwf	print_error@bottom
  4014  0E74  3090               	movlw	high (STR_144| (0+32768))
  4015  0E75  2E7D               	goto	L7
  4016  0E76                     l3787:	
  4017                           
  4018                           ;Multi_RX_testjig_v1.c: 872: else
  4019                           ;Multi_RX_testjig_v1.c: 873: print_error("Comms Error", " 15");
  4020  0E76  300E               	movlw	low (STR_37| (0+32768))
  4021  0E77  00F8               	movwf	print_error@top
  4022  0E78  3092               	movlw	high (STR_37| (0+32768))
  4023  0E79  00F9               	movwf	print_error@top+1
  4024  0E7A  30F8               	movlw	low (STR_146| (0+32768))
  4025  0E7B  00FA               	movwf	print_error@bottom
  4026  0E7C  3092               	movlw	high (STR_146| (0+32768))
  4027  0E7D                     L7:	
  4028  0E7D  00FB               	movwf	print_error@bottom+1
  4029  0E7E  2747  3188         	fcall	_print_error
  4030  0E80                     l3789:	
  4031                           
  4032                           ;Multi_RX_testjig_v1.c: 875: RE0 = 0;
  4033  0E80  0020               	movlb	0	; select bank0
  4034  0E81  1010               	bcf	16,0	;volatile
  4035                           
  4036                           ;Multi_RX_testjig_v1.c: 878: print_screen("Factory reset ", " ");
  4037  0E82  30CB               	movlw	low (STR_147| (0+32768))
  4038  0E83  00F4               	movwf	print_screen@top
  4039  0E84  3090               	movlw	high (STR_147| (0+32768))
  4040  0E85  00F5               	movwf	print_screen@top+1
  4041  0E86  3089               	movlw	low ((STR_155+14)| (0+32768))
  4042  0E87  00F6               	movwf	print_screen@bottom
  4043  0E88  3090               	movlw	high ((STR_155+14)| (0+32768))
  4044  0E89  00F7               	movwf	print_screen@bottom+1
  4045  0E8A  2731  3188         	fcall	_print_screen
  4046                           
  4047                           ;Multi_RX_testjig_v1.c: 879: TX_one(0x82);
  4048  0E8C  3082               	movlw	130
  4049  0E8D  26EF  3188         	fcall	_TX_one
  4050                           
  4051                           ;Multi_RX_testjig_v1.c: 880: RX_data = RX_one();
  4052  0E8F  2711  3188         	fcall	_RX_one
  4053  0E91  0020               	movlb	0	; select bank0
  4054  0E92  00CE               	movwf	main@RX_data
  4055                           
  4056                           ;Multi_RX_testjig_v1.c: 881: if(RX_data != 0x8A)
  4057  0E93  3A8A               	xorlw	138
  4058  0E94  1903               	btfsc	3,2
  4059  0E95  2EA0               	goto	l424
  4060                           
  4061                           ;Multi_RX_testjig_v1.c: 882: print_error("Comms Error", " 17");
  4062  0E96  300E               	movlw	low (STR_37| (0+32768))
  4063  0E97  00F8               	movwf	print_error@top
  4064  0E98  3092               	movlw	high (STR_37| (0+32768))
  4065  0E99  00F9               	movwf	print_error@top+1
  4066  0E9A  3000               	movlw	low (STR_150| (0+32768))
  4067  0E9B  00FA               	movwf	print_error@bottom
  4068  0E9C  3093               	movlw	high (STR_150| (0+32768))
  4069  0E9D  00FB               	movwf	print_error@bottom+1
  4070  0E9E  2747  3188         	fcall	_print_error
  4071  0EA0                     l424:	
  4072                           
  4073                           ;Multi_RX_testjig_v1.c: 885: print_screen("Set # of ", " channels");
  4074  0EA0  3051               	movlw	low (STR_151| (0+32768))
  4075  0EA1  00F4               	movwf	print_screen@top
  4076  0EA2  3092               	movlw	high (STR_151| (0+32768))
  4077  0EA3  00F5               	movwf	print_screen@top+1
  4078  0EA4  3079               	movlw	low (STR_152| (0+32768))
  4079  0EA5  00F6               	movwf	print_screen@bottom
  4080  0EA6  3092               	movlw	high (STR_152| (0+32768))
  4081  0EA7  00F7               	movwf	print_screen@bottom+1
  4082  0EA8  2731  3188         	fcall	_print_screen
  4083                           
  4084                           ;Multi_RX_testjig_v1.c: 886: TX_one(0x81);
  4085  0EAA  3081               	movlw	129
  4086  0EAB  26EF  3188         	fcall	_TX_one
  4087                           
  4088                           ;Multi_RX_testjig_v1.c: 887: RX_data = RX_one();
  4089  0EAD  2711  3188         	fcall	_RX_one
  4090  0EAF  0020               	movlb	0	; select bank0
  4091  0EB0  00CE               	movwf	main@RX_data
  4092                           
  4093                           ;Multi_RX_testjig_v1.c: 888: if(RX_data != 0x8A)
  4094  0EB1  3A8A               	xorlw	138
  4095  0EB2  1903               	btfsc	3,2
  4096  0EB3  2EBE               	goto	l425
  4097                           
  4098                           ;Multi_RX_testjig_v1.c: 889: print_error("Comms Error", " 16");
  4099  0EB4  300E               	movlw	low (STR_37| (0+32768))
  4100  0EB5  00F8               	movwf	print_error@top
  4101  0EB6  3092               	movlw	high (STR_37| (0+32768))
  4102  0EB7  00F9               	movwf	print_error@top+1
  4103  0EB8  30FC               	movlw	low (STR_154| (0+32768))
  4104  0EB9  00FA               	movwf	print_error@bottom
  4105  0EBA  3092               	movlw	high (STR_154| (0+32768))
  4106  0EBB  00FB               	movwf	print_error@bottom+1
  4107  0EBC  2747  3188         	fcall	_print_error
  4108  0EBE                     l425:	
  4109                           
  4110                           ;Multi_RX_testjig_v1.c: 892: print_screen("7seg, buzzer,  ", " button test");
  4111  0EBE  307B               	movlw	low (STR_155| (0+32768))
  4112  0EBF  00F4               	movwf	print_screen@top
  4113  0EC0  3090               	movlw	high (STR_155| (0+32768))
  4114  0EC1  00F5               	movwf	print_screen@top+1
  4115  0EC2  30C4               	movlw	low (STR_156| (0+32768))
  4116  0EC3  00F6               	movwf	print_screen@bottom
  4117  0EC4  3091               	movlw	high (STR_156| (0+32768))
  4118  0EC5  00F7               	movwf	print_screen@bottom+1
  4119  0EC6  2731  3188         	fcall	_print_screen
  4120                           
  4121                           ;Multi_RX_testjig_v1.c: 893: TX_one(0x90);
  4122  0EC8  3090               	movlw	144
  4123  0EC9  26EF  3188         	fcall	_TX_one
  4124                           
  4125                           ;Multi_RX_testjig_v1.c: 894: TRISG0 = 1;
  4126  0ECB  0026               	movlb	6	; select bank6
  4127  0ECC  140D               	bsf	13,0	;volatile
  4128                           
  4129                           ;Multi_RX_testjig_v1.c: 895: _delay((unsigned long)((100)*(16000000/4000.0)));
  4130  0ECD  3003               	movlw	3
  4131  0ECE  0020               	movlb	0	; select bank0
  4132  0ECF  00CB               	movwf	??_main+2
  4133  0ED0  3008               	movlw	8
  4134  0ED1  00CA               	movwf	??_main+1
  4135  0ED2  3078               	movlw	120
  4136  0ED3  00C9               	movwf	??_main
  4137  0ED4                     u4297:	
  4138  0ED4  0BC9               	decfsz	??_main,f
  4139  0ED5  2ED4               	goto	u4297
  4140  0ED6  0BCA               	decfsz	??_main+1,f
  4141  0ED7  2ED4               	goto	u4297
  4142  0ED8  0BCB               	decfsz	??_main+2,f
  4143  0ED9  2ED4               	goto	u4297
  4144  0EDA                     l426:	
  4145                           ;Multi_RX_testjig_v1.c: 896: while(RG1== 1);
  4146                           
  4147  0EDA  0025               	movlb	5	; select bank5
  4148  0EDB  188D               	btfsc	13,1	;volatile
  4149  0EDC  2EDA               	goto	l426
  4150                           
  4151                           ;Multi_RX_testjig_v1.c: 897: print_screen("waiting  ", " for comms");
  4152  0EDD  3047               	movlw	low (STR_157| (0+32768))
  4153  0EDE  00F4               	movwf	print_screen@top
  4154  0EDF  3092               	movlw	high (STR_157| (0+32768))
  4155  0EE0  00F5               	movwf	print_screen@top+1
  4156  0EE1  3031               	movlw	low (STR_158| (0+32768))
  4157  0EE2  00F6               	movwf	print_screen@bottom
  4158  0EE3  3092               	movlw	high (STR_158| (0+32768))
  4159  0EE4  00F7               	movwf	print_screen@bottom+1
  4160  0EE5  2731               	fcall	_print_screen
  4161                           
  4162                           ;Multi_RX_testjig_v1.c: 904: testjig_done(1);
  4163  0EE6  3001               	movlw	1
  4164  0EE7  3184  2473  3188   	fcall	_testjig_done
  4165                           
  4166                           ;Multi_RX_testjig_v1.c: 917: testjig_done(1);
  4167  0EEA  3001               	movlw	1
  4168  0EEB  3184  2473         	fcall	_testjig_done
  4169  0EED  3180  2895         	ljmp	start
  4170  0EEF                     __end_of_main:	
  4171  0EEF                     __ptext33:	
  4172 ;; *************** function _TX_one *****************
  4173 ;; Defined at:
  4174 ;;		line 1992 in file "Multi_RX_testjig_v1.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  data            1    wreg     unsigned char 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  data            1    1[COMMON] unsigned char 
  4179 ;;  i               1    2[COMMON] unsigned char 
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      void 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4192 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4193 ;;Total ram usage:        3 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; Hardware stack levels required when called:    1
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_main
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           
  4204                           ;psect for function _TX_one
  4205  0EEF                     _TX_one:	
  4206                           
  4207                           ;incstack = 0
  4208                           ; Regs used in _TX_one: [wreg+status,2+status,0]
  4209                           ;TX_one@data stored from wreg
  4210  0EEF  00F1               	movwf	TX_one@data
  4211                           
  4212                           ;Multi_RX_testjig_v1.c: 1994: TRISG0 = 0;
  4213  0EF0  0026               	movlb	6	; select bank6
  4214  0EF1  100D               	bcf	13,0	;volatile
  4215                           
  4216                           ;Multi_RX_testjig_v1.c: 1995: LATG0 = 0;
  4217  0EF2  0027               	movlb	7	; select bank7
  4218  0EF3  100D               	bcf	13,0	;volatile
  4219                           
  4220                           ;Multi_RX_testjig_v1.c: 1996: _delay((unsigned long)((100)*(16000000/4000000.0)));
  4221  0EF4  3085               	movlw	133
  4222  0EF5  00F0               	movwf	??_TX_one
  4223  0EF6                     u4447:	
  4224  0EF6  0BF0               	decfsz	??_TX_one,f
  4225  0EF7  2EF6               	goto	u4447
  4226                           
  4227                           ;Multi_RX_testjig_v1.c: 1998: unsigned char i;
  4228                           ;Multi_RX_testjig_v1.c: 1999: for(i = 0; i < 8; i++)
  4229  0EF8  01F2               	clrf	TX_one@i
  4230  0EF9                     l674:	
  4231                           
  4232                           ;Multi_RX_testjig_v1.c: 2000: {
  4233                           ;Multi_RX_testjig_v1.c: 2001: LATG0 = data & 0x01;
  4234  0EF9  1C71               	btfss	TX_one@data,0
  4235  0EFA  2EFE               	goto	u2730
  4236  0EFB  0027               	movlb	7	; select bank7
  4237  0EFC  140D               	bsf	13,0	;volatile
  4238  0EFD  2F00               	goto	u2744
  4239  0EFE                     u2730:	
  4240  0EFE  0027               	movlb	7	; select bank7
  4241  0EFF  100D               	bcf	13,0	;volatile
  4242  0F00                     u2744:	
  4243  0F00  3085               	movlw	133
  4244                           
  4245                           ;Multi_RX_testjig_v1.c: 2002: data = data >> 1;
  4246  0F01  36F1               	lsrf	TX_one@data,f
  4247                           
  4248                           ;Multi_RX_testjig_v1.c: 2003: _delay((unsigned long)((100)*(16000000/4000000.0)));
  4249  0F02  00F0               	movwf	??_TX_one
  4250  0F03                     u4457:	
  4251  0F03  0BF0               	decfsz	??_TX_one,f
  4252  0F04  2F03               	goto	u4457
  4253  0F05  3008               	movlw	8
  4254  0F06  0AF2               	incf	TX_one@i,f
  4255  0F07  0272               	subwf	TX_one@i,w
  4256  0F08  1C03               	skipc
  4257  0F09  2EF9               	goto	l674
  4258                           
  4259                           ;Multi_RX_testjig_v1.c: 2004: }
  4260                           ;Multi_RX_testjig_v1.c: 2005: LATG0 = 1;
  4261  0F0A  0027               	movlb	7	; select bank7
  4262  0F0B  140D               	bsf	13,0	;volatile
  4263                           
  4264                           ;Multi_RX_testjig_v1.c: 2006: _delay((unsigned long)((100)*(16000000/4000000.0)));
  4265  0F0C  3085               	movlw	133
  4266  0F0D  00F0               	movwf	??_TX_one
  4267  0F0E                     u4467:	
  4268  0F0E  0BF0               	decfsz	??_TX_one,f
  4269  0F0F  2F0E               	goto	u4467
  4270  0F10  0008               	return
  4271  0F11                     __end_of_TX_one:	
  4272  0F11                     __ptext34:	
  4273 ;; *************** function _RX_one *****************
  4274 ;; Defined at:
  4275 ;;		line 2009 in file "Multi_RX_testjig_v1.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;		None
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;  data            1    2[COMMON] unsigned char 
  4280 ;;  i               1    1[COMMON] unsigned char 
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  1    wreg      unsigned char 
  4283 ;; Registers used:
  4284 ;;		wreg, status,2, status,0
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4292 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4293 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4294 ;;Total ram usage:        3 bytes
  4295 ;; Hardware stack levels used:    1
  4296 ;; Hardware stack levels required when called:    1
  4297 ;; This function calls:
  4298 ;;		Nothing
  4299 ;; This function is called by:
  4300 ;;		_main
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           
  4305                           ;psect for function _RX_one
  4306  0F11                     _RX_one:	
  4307  0F11                     l679:	
  4308                           ;Multi_RX_testjig_v1.c: 2012: while(RG3 == 1);
  4309                           
  4310                           ;incstack = 0
  4311                           ; Regs used in _RX_one: [wreg+status,2+status,0]
  4312                           
  4313  0F11  0025               	movlb	5	; select bank5
  4314  0F12  198D               	btfsc	13,3	;volatile
  4315  0F13  2F11               	goto	l679
  4316                           
  4317                           ;Multi_RX_testjig_v1.c: 2013: _delay((unsigned long)((150)*(16000000/4000000.0)));
  4318  0F14  30C7               	movlw	199
  4319  0F15  00F0               	movwf	??_RX_one
  4320  0F16                     u4477:	
  4321  0F16  0BF0               	decfsz	??_RX_one,f
  4322  0F17  2F16               	goto	u4477
  4323  0F18  3200               	nop2	;nop
  4324                           
  4325                           ;Multi_RX_testjig_v1.c: 2014: unsigned char i;
  4326                           ;Multi_RX_testjig_v1.c: 2015: unsigned char data = 0;
  4327  0F19  01F2               	clrf	RX_one@data
  4328                           
  4329                           ;Multi_RX_testjig_v1.c: 2016: for(i = 0; i < 8; i++)
  4330  0F1A  01F1               	clrf	RX_one@i
  4331  0F1B                     l682:	
  4332                           
  4333                           ;Multi_RX_testjig_v1.c: 2017: {
  4334                           ;Multi_RX_testjig_v1.c: 2018: if (RG3 == 0)
  4335  0F1B  0025               	movlb	5	; select bank5
  4336  0F1C  198D               	btfsc	13,3	;volatile
  4337  0F1D  2F20               	goto	l684
  4338                           
  4339                           ;Multi_RX_testjig_v1.c: 2019: data = data >> 1;
  4340  0F1E  36F2               	lsrf	RX_one@data,f
  4341  0F1F  2F22               	goto	l3097
  4342  0F20                     l684:	
  4343                           
  4344                           ;Multi_RX_testjig_v1.c: 2020: else
  4345                           ;Multi_RX_testjig_v1.c: 2021: data = (data >> 1) | 0x80 ;
  4346  0F20  1403               	setc
  4347  0F21  0CF2               	rrf	RX_one@data,f
  4348  0F22                     l3097:	
  4349                           
  4350                           ;Multi_RX_testjig_v1.c: 2022: _delay((unsigned long)((100)*(16000000/4000000.0)));
  4351  0F22  3085               	movlw	133
  4352  0F23  00F0               	movwf	??_RX_one
  4353  0F24                     u4487:	
  4354  0F24  0BF0               	decfsz	??_RX_one,f
  4355  0F25  2F24               	goto	u4487
  4356  0F26  3008               	movlw	8
  4357  0F27  0AF1               	incf	RX_one@i,f
  4358  0F28  0271               	subwf	RX_one@i,w
  4359  0F29  1C03               	skipc
  4360  0F2A  2F1B               	goto	l682
  4361                           
  4362                           ;Multi_RX_testjig_v1.c: 2023: }
  4363                           ;Multi_RX_testjig_v1.c: 2024: _delay((unsigned long)((100)*(16000000/4000000.0)));
  4364  0F2B  3085               	movlw	133
  4365  0F2C  00F0               	movwf	??_RX_one
  4366  0F2D                     u4497:	
  4367  0F2D  0BF0               	decfsz	??_RX_one,f
  4368  0F2E  2F2D               	goto	u4497
  4369                           
  4370                           ;Multi_RX_testjig_v1.c: 2026: return data;
  4371  0F2F  0872               	movf	RX_one@data,w
  4372  0F30  0008               	return
  4373  0F31                     __end_of_RX_one:	
  4374  0F31                     __ptext3:	
  4375 ;; *************** function _print_screen *****************
  4376 ;; Defined at:
  4377 ;;		line 1457 in file "Multi_RX_testjig_v1.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;  top             2    4[COMMON] PTR const unsigned char 
  4380 ;;		 -> STR_169(12), STR_167(17), STR_165(17), STR_163(17), 
  4381 ;;		 -> STR_161(9), STR_159(13), STR_157(10), STR_155(16), 
  4382 ;;		 -> STR_151(10), STR_147(15), STR_141(8), STR_139(8), 
  4383 ;;		 -> STR_137(8), STR_135(8), STR_125(8), STR_123(8), 
  4384 ;;		 -> STR_111(8), STR_89(9), STR_87(9), STR_65(9), 
  4385 ;;		 -> STR_63(9), STR_51(11), STR_49(11), STR_43(13), 
  4386 ;;		 -> STR_35(13), STR_33(19), STR_29(12), STR_27(19), 
  4387 ;;		 -> STR_5(15), STR_1(9), 
  4388 ;;  bottom          2    6[COMMON] PTR const unsigned char 
  4389 ;;		 -> STR_170(17), STR_168(13), STR_166(14), STR_164(8), 
  4390 ;;		 -> STR_162(8), STR_160(14), STR_158(11), STR_156(13), 
  4391 ;;		 -> STR_152(10), STR_148(2), STR_142(17), STR_140(16), 
  4392 ;;		 -> STR_138(7), STR_136(10), STR_126(5), STR_124(9), 
  4393 ;;		 -> STR_112(4), STR_90(3), STR_88(1), STR_66(3), 
  4394 ;;		 -> STR_64(1), STR_52(5), STR_50(1), STR_44(6), 
  4395 ;;		 -> STR_36(6), STR_34(9), STR_30(13), STR_28(1), 
  4396 ;;		 -> STR_6(1), STR_2(17), 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;		None
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      void 
  4401 ;; Registers used:
  4402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/4
  4405 ;;		On exit  : 1F/4
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4408 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4412 ;;Total ram usage:        4 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; Hardware stack levels required when called:    3
  4415 ;; This function calls:
  4416 ;;		_clear_lcd
  4417 ;;		_i2c_Write_string
  4418 ;;		_i2c_first_line
  4419 ;;		_i2c_second_line
  4420 ;; This function is called by:
  4421 ;;		_main
  4422 ;;		_testjig_done
  4423 ;;		_print_error
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           
  4428                           ;psect for function _print_screen
  4429  0F31                     _print_screen:	
  4430                           
  4431                           ;Multi_RX_testjig_v1.c: 1459: clear_lcd();
  4432                           
  4433                           ;incstack = 0
  4434                           ; Regs used in _print_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4435  0F31  3181  219A  3188   	fcall	_clear_lcd
  4436                           
  4437                           ;Multi_RX_testjig_v1.c: 1460: i2c_first_line();
  4438  0F34  3181  2189  3188   	fcall	_i2c_first_line
  4439                           
  4440                           ;Multi_RX_testjig_v1.c: 1461: i2c_Write_string(top);
  4441  0F37  0875               	movf	print_screen@top+1,w
  4442  0F38  00F2               	movwf	i2c_Write_string@data+1
  4443  0F39  0874               	movf	print_screen@top,w
  4444  0F3A  00F1               	movwf	i2c_Write_string@data
  4445  0F3B  3181  21C7  3188   	fcall	_i2c_Write_string
  4446                           
  4447                           ;Multi_RX_testjig_v1.c: 1462: i2c_second_line();
  4448  0F3E  3181  2178  3188   	fcall	_i2c_second_line
  4449                           
  4450                           ;Multi_RX_testjig_v1.c: 1463: i2c_Write_string(bottom);
  4451  0F41  0877               	movf	print_screen@bottom+1,w
  4452  0F42  00F2               	movwf	i2c_Write_string@data+1
  4453  0F43  0876               	movf	print_screen@bottom,w
  4454  0F44  00F1               	movwf	i2c_Write_string@data
  4455  0F45  3181  29C7         	ljmp	l2499
  4456  0F47                     __end_of_print_screen:	
  4457  0F47                     __ptext2:	
  4458 ;; *************** function _print_error *****************
  4459 ;; Defined at:
  4460 ;;		line 1434 in file "Multi_RX_testjig_v1.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  top             2    8[COMMON] PTR const unsigned char 
  4463 ;;		 -> STR_153(12), STR_149(12), STR_145(12), STR_143(8), 
  4464 ;;		 -> STR_133(13), STR_131(13), STR_129(12), STR_127(12), 
  4465 ;;		 -> STR_121(12), STR_119(12), STR_117(12), STR_115(12), 
  4466 ;;		 -> STR_113(12), STR_109(12), STR_107(10), STR_105(12), 
  4467 ;;		 -> STR_103(9), STR_101(12), STR_99(12), STR_97(9), 
  4468 ;;		 -> STR_95(9), STR_93(12), STR_91(10), STR_85(12), 
  4469 ;;		 -> STR_83(10), STR_81(12), STR_79(9), STR_77(12), 
  4470 ;;		 -> STR_75(12), STR_73(9), STR_71(9), STR_69(12), 
  4471 ;;		 -> STR_67(10), STR_61(19), STR_59(12), STR_57(16), 
  4472 ;;		 -> STR_55(12), STR_53(19), STR_47(12), STR_45(12), 
  4473 ;;		 -> STR_41(12), STR_39(13), STR_37(12), STR_31(12), 
  4474 ;;		 -> STR_25(14), STR_23(14), STR_21(15), STR_19(15), 
  4475 ;;		 -> STR_17(14), STR_15(14), STR_13(14), STR_11(14), 
  4476 ;;		 -> STR_9(14), STR_7(14), STR_3(9), 
  4477 ;;  bottom          2   10[COMMON] PTR const unsigned char 
  4478 ;;		 -> STR_154(4), STR_150(4), STR_146(4), STR_144(15), 
  4479 ;;		 -> STR_134(13), STR_132(14), STR_130(4), STR_128(4), 
  4480 ;;		 -> STR_122(13), STR_120(16), STR_118(14), STR_116(4), 
  4481 ;;		 -> STR_114(4), STR_110(4), STR_108(9), STR_106(3), 
  4482 ;;		 -> STR_104(7), STR_102(4), STR_100(4), STR_98(15), 
  4483 ;;		 -> STR_96(16), STR_94(3), STR_92(9), STR_86(3), 
  4484 ;;		 -> STR_84(9), STR_82(3), STR_80(7), STR_78(4), 
  4485 ;;		 -> STR_76(4), STR_74(15), STR_72(16), STR_70(3), 
  4486 ;;		 -> STR_68(9), STR_62(9), STR_60(3), STR_58(7), 
  4487 ;;		 -> STR_56(3), STR_54(9), STR_48(9), STR_46(9), 
  4488 ;;		 -> STR_42(3), STR_40(12), STR_38(3), STR_32(6), 
  4489 ;;		 -> STR_26(12), STR_24(11), STR_22(13), STR_20(13), 
  4490 ;;		 -> STR_18(13), STR_16(13), STR_14(12), STR_12(11), 
  4491 ;;		 -> STR_10(13), STR_8(13), STR_4(14), 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;		None
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/5
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4503 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4505 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4506 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4507 ;;Total ram usage:        7 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    4
  4510 ;; This function calls:
  4511 ;;		_buzz_one
  4512 ;;		_clear_lcd
  4513 ;;		_debug_fast_tx
  4514 ;;		_i2c_Write_string
  4515 ;;		_i2c_first_line
  4516 ;;		_i2c_second_line
  4517 ;;		_power_supply_set
  4518 ;;		_print_screen
  4519 ;; This function is called by:
  4520 ;;		_main
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           
  4525                           ;psect for function _print_error
  4526  0F47                     _print_error:	
  4527                           
  4528                           ;Multi_RX_testjig_v1.c: 1436: power_supply_set(3);
  4529                           
  4530                           ;incstack = 0
  4531                           ; Regs used in _print_error: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4532  0F47  3003               	movlw	3
  4533  0F48  3185  256C  3188   	fcall	_power_supply_set
  4534                           
  4535                           ;Multi_RX_testjig_v1.c: 1437: LATA7 = 0;
  4536  0F4B  0022               	movlb	2	; select bank2
  4537  0F4C  138C               	bcf	12,7	;volatile
  4538                           
  4539                           ;Multi_RX_testjig_v1.c: 1438: LATB5 = 0;
  4540  0F4D  128D               	bcf	13,5	;volatile
  4541                           
  4542                           ;Multi_RX_testjig_v1.c: 1439: LATA6 = 0;
  4543  0F4E  130C               	bcf	12,6	;volatile
  4544                           
  4545                           ;Multi_RX_testjig_v1.c: 1440: RE0 = 0;
  4546  0F4F  0020               	movlb	0	; select bank0
  4547  0F50  1010               	bcf	16,0	;volatile
  4548                           
  4549                           ;Multi_RX_testjig_v1.c: 1441: debug_fast_tx(12345);
  4550  0F51  3039               	movlw	57
  4551  0F52  00F0               	movwf	debug_fast_tx@data
  4552  0F53  3030               	movlw	48
  4553  0F54  00F1               	movwf	debug_fast_tx@data+1
  4554  0F55  3185  2537  3188   	fcall	_debug_fast_tx
  4555                           
  4556                           ;Multi_RX_testjig_v1.c: 1442: buzz_one(1000);
  4557  0F58  30E8               	movlw	232
  4558  0F59  00F0               	movwf	buzz_one@time
  4559  0F5A  3003               	movlw	3
  4560  0F5B  00F1               	movwf	buzz_one@time+1
  4561  0F5C  3185  2564  3188   	fcall	_buzz_one
  4562  0F5F                     l2993:	
  4563                           
  4564                           ;Multi_RX_testjig_v1.c: 1444: {
  4565                           ;Multi_RX_testjig_v1.c: 1445: clear_lcd();
  4566  0F5F  3181  219A  3188   	fcall	_clear_lcd
  4567                           
  4568                           ;Multi_RX_testjig_v1.c: 1446: i2c_first_line();
  4569  0F62  3181  2189  3188   	fcall	_i2c_first_line
  4570                           
  4571                           ;Multi_RX_testjig_v1.c: 1447: i2c_Write_string(top);
  4572  0F65  0879               	movf	print_error@top+1,w
  4573  0F66  00F2               	movwf	i2c_Write_string@data+1
  4574  0F67  0878               	movf	print_error@top,w
  4575  0F68  00F1               	movwf	i2c_Write_string@data
  4576  0F69  3181  21C7  3188   	fcall	_i2c_Write_string
  4577                           
  4578                           ;Multi_RX_testjig_v1.c: 1448: i2c_second_line();
  4579  0F6C  3181  2178  3188   	fcall	_i2c_second_line
  4580                           
  4581                           ;Multi_RX_testjig_v1.c: 1449: i2c_Write_string(bottom);
  4582  0F6F  087B               	movf	print_error@bottom+1,w
  4583  0F70  00F2               	movwf	i2c_Write_string@data+1
  4584  0F71  087A               	movf	print_error@bottom,w
  4585  0F72  00F1               	movwf	i2c_Write_string@data
  4586  0F73  3181  21C7  3188   	fcall	_i2c_Write_string
  4587                           
  4588                           ;Multi_RX_testjig_v1.c: 1450: _delay((unsigned long)((2000)*(16000000/4000.0)));
  4589  0F76  3029               	movlw	41
  4590  0F77  0020               	movlb	0	; select bank0
  4591  0F78  00A2               	movwf	??_print_error+2
  4592  0F79  3096               	movlw	150
  4593  0F7A  00A1               	movwf	??_print_error+1
  4594  0F7B  30A6               	movlw	166
  4595  0F7C  00A0               	movwf	??_print_error
  4596  0F7D                     u4367:	
  4597  0F7D  0BA0               	decfsz	??_print_error,f
  4598  0F7E  2F7D               	goto	u4367
  4599  0F7F  0BA1               	decfsz	??_print_error+1,f
  4600  0F80  2F7D               	goto	u4367
  4601  0F81  0BA2               	decfsz	??_print_error+2,f
  4602  0F82  2F7D               	goto	u4367
  4603                           
  4604                           ;Multi_RX_testjig_v1.c: 1451: print_screen("Press START", " to restart test");
  4605  0F83  3091               	movlw	low ((STR_168+1)| (0+32768))
  4606  0F84  00F4               	movwf	print_screen@top
  4607  0F85  3091               	movlw	high ((STR_168+1)| (0+32768))
  4608  0F86  00F5               	movwf	print_screen@top+1
  4609  0F87  306A               	movlw	low (STR_170| (0+32768))
  4610  0F88  00F6               	movwf	print_screen@bottom
  4611  0F89  3090               	movlw	high (STR_170| (0+32768))
  4612  0F8A  00F7               	movwf	print_screen@bottom+1
  4613  0F8B  2731  3188         	fcall	_print_screen
  4614                           
  4615                           ;Multi_RX_testjig_v1.c: 1453: _delay((unsigned long)((1200)*(16000000/4000.0)));
  4616  0F8D  3019               	movlw	25
  4617  0F8E  0020               	movlb	0	; select bank0
  4618  0F8F  00A2               	movwf	??_print_error+2
  4619  0F90  305A               	movlw	90
  4620  0F91  00A1               	movwf	??_print_error+1
  4621  0F92  30C8               	movlw	200
  4622  0F93  00A0               	movwf	??_print_error
  4623  0F94                     u4377:	
  4624  0F94  0BA0               	decfsz	??_print_error,f
  4625  0F95  2F94               	goto	u4377
  4626  0F96  0BA1               	decfsz	??_print_error+1,f
  4627  0F97  2F94               	goto	u4377
  4628  0F98  0BA2               	decfsz	??_print_error+2,f
  4629  0F99  2F94               	goto	u4377
  4630  0F9A  3200               	nop2
  4631  0F9B  2F5F               	goto	l2993
  4632  0F9C                     __end_of_print_error:	
  4633  0F9C                     __ptext27:	
  4634 ;; *************** function _ADC_get_val *****************
  4635 ;; Defined at:
  4636 ;;		line 1812 in file "Multi_RX_testjig_v1.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  channel         1    wreg     unsigned char 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  channel         1    3[COMMON] unsigned char 
  4641 ;;  return_val      2    4[COMMON] unsigned int 
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  2    0[COMMON] unsigned int 
  4644 ;; Registers used:
  4645 ;;		wreg
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/5
  4648 ;;		On exit  : 1F/1
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4651 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4652 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4654 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4655 ;;Total ram usage:        6 bytes
  4656 ;; Hardware stack levels used:    1
  4657 ;; Hardware stack levels required when called:    1
  4658 ;; This function calls:
  4659 ;;		Nothing
  4660 ;; This function is called by:
  4661 ;;		_main
  4662 ;;		_get_30v_current
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           
  4667                           ;psect for function _ADC_get_val
  4668  0F9C                     _ADC_get_val:	
  4669                           
  4670                           ;incstack = 0
  4671                           ; Regs used in _ADC_get_val: [wreg]
  4672                           ;ADC_get_val@channel stored from wreg
  4673  0F9C  00F3               	movwf	ADC_get_val@channel
  4674                           
  4675                           ;Multi_RX_testjig_v1.c: 1814: unsigned int return_val;
  4676                           ;Multi_RX_testjig_v1.c: 1815: GIE = 0;
  4677  0F9D  138B               	bcf	11,7	;volatile
  4678                           
  4679                           ;Multi_RX_testjig_v1.c: 1816: ADCON0 = channel;
  4680  0F9E  0873               	movf	ADC_get_val@channel,w
  4681  0F9F  0021               	movlb	1	; select bank1
  4682  0FA0  009D               	movwf	29	;volatile
  4683  0FA1                     l622:	
  4684                           ;Multi_RX_testjig_v1.c: 1817: while(ADCON0bits.GO_nDONE == 1);
  4685                           
  4686  0FA1  189D               	btfsc	29,1	;volatile
  4687  0FA2  2FA1               	goto	l622
  4688                           
  4689                           ;Multi_RX_testjig_v1.c: 1818: return_val = ADRESH << 8 | ADRESL;
  4690  0FA3  081C               	movf	28,w	;volatile
  4691  0FA4  00F5               	movwf	ADC_get_val@return_val+1
  4692  0FA5  01F4               	clrf	ADC_get_val@return_val
  4693  0FA6  081B               	movf	27,w	;volatile
  4694  0FA7  04F4               	iorwf	ADC_get_val@return_val,f
  4695                           
  4696                           ;Multi_RX_testjig_v1.c: 1819: GIE = 1;
  4697  0FA8  178B               	bsf	11,7	;volatile
  4698                           
  4699                           ;Multi_RX_testjig_v1.c: 1820: return return_val;
  4700  0FA9  0875               	movf	ADC_get_val@return_val+1,w
  4701  0FAA  00F1               	movwf	?_ADC_get_val+1
  4702  0FAB  0874               	movf	ADC_get_val@return_val,w
  4703  0FAC  00F0               	movwf	?_ADC_get_val
  4704  0FAD  0008               	return
  4705  0FAE                     __end_of_ADC_get_val:	
  4706  0FAE                     __ptext21:	
  4707 ;; *************** function _get_30v_current *****************
  4708 ;; Defined at:
  4709 ;;		line 1863 in file "Multi_RX_testjig_v1.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;		None
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;  temp            2   39[BANK0 ] unsigned int 
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  2   37[BANK0 ] unsigned int 
  4716 ;; Registers used:
  4717 ;;		wreg, status,2, status,0, pclath, cstack
  4718 ;; Tracked objects:
  4719 ;;		On entry : 1B/1
  4720 ;;		On exit  : 1F/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4723 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4724 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4726 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4727 ;;Total ram usage:        4 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; Hardware stack levels required when called:    3
  4730 ;; This function calls:
  4731 ;;		_ADC_get_val
  4732 ;;		___ftadd
  4733 ;;		___ftmul
  4734 ;;		___fttol
  4735 ;;		___lwtoft
  4736 ;; This function is called by:
  4737 ;;		_main
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           
  4742                           ;psect for function _get_30v_current
  4743  0FAE                     _get_30v_current:	
  4744                           
  4745                           ;Multi_RX_testjig_v1.c: 1865: unsigned int temp;
  4746                           ;Multi_RX_testjig_v1.c: 1866: temp = ADC_get_val(0b01010011);
  4747                           
  4748                           ;incstack = 0
  4749                           ; Regs used in _get_30v_current: [wreg+status,2+status,0+pclath+cstack]
  4750  0FAE  3053               	movlw	83
  4751  0FAF  279C  3188         	fcall	_ADC_get_val
  4752  0FB1  0871               	movf	?_ADC_get_val+1,w
  4753  0FB2  0020               	movlb	0	; select bank0
  4754  0FB3  00C8               	movwf	get_30v_current@temp+1
  4755  0FB4  0870               	movf	?_ADC_get_val,w
  4756  0FB5  00C7               	movwf	get_30v_current@temp
  4757                           
  4758                           ;Multi_RX_testjig_v1.c: 1867: if(temp > 4)
  4759  0FB6  3000               	movlw	0
  4760  0FB7  0248               	subwf	get_30v_current@temp+1,w
  4761  0FB8  3005               	movlw	5
  4762  0FB9  1903               	skipnz
  4763  0FBA  0247               	subwf	get_30v_current@temp,w
  4764  0FBB  1C03               	skipc
  4765  0FBC  2FEC               	goto	l3063
  4766                           
  4767                           ;Multi_RX_testjig_v1.c: 1868: return ( temp*3.4) - 16;
  4768  0FBD  0848               	movf	get_30v_current@temp+1,w
  4769  0FBE  00F9               	movwf	___lwtoft@c+1
  4770  0FBF  0847               	movf	get_30v_current@temp,w
  4771  0FC0  00F8               	movwf	___lwtoft@c
  4772  0FC1  27EF               	fcall	___lwtoft
  4773  0FC2  0878               	movf	?___lwtoft,w
  4774  0FC3  00A3               	movwf	___ftmul@f2
  4775  0FC4  0879               	movf	?___lwtoft+1,w
  4776  0FC5  00A4               	movwf	___ftmul@f2+1
  4777  0FC6  087A               	movf	?___lwtoft+2,w
  4778  0FC7  00A5               	movwf	___ftmul@f2+2
  4779  0FC8  309A               	movlw	154
  4780  0FC9  00A0               	movwf	___ftmul@f1
  4781  0FCA  3059               	movlw	89
  4782  0FCB  00A1               	movwf	___ftmul@f1+1
  4783  0FCC  3040               	movlw	64
  4784  0FCD  00A2               	movwf	___ftmul@f1+2
  4785  0FCE  3183  2317  3188   	fcall	___ftmul
  4786  0FD1  0820               	movf	?___ftmul,w
  4787  0FD2  00AF               	movwf	___ftadd@f2
  4788  0FD3  0821               	movf	?___ftmul+1,w
  4789  0FD4  00B0               	movwf	___ftadd@f2+1
  4790  0FD5  0822               	movf	?___ftmul+2,w
  4791  0FD6  00B1               	movwf	___ftadd@f2+2
  4792  0FD7  3080               	movlw	128
  4793  0FD8  01AC               	clrf	___ftadd@f1
  4794  0FD9  00AD               	movwf	___ftadd@f1+1
  4795  0FDA  30C1               	movlw	193
  4796  0FDB  00AE               	movwf	___ftadd@f1+2
  4797  0FDC  3183  2381  3188   	fcall	___ftadd
  4798  0FDF  082C               	movf	?___ftadd,w
  4799  0FE0  00B8               	movwf	___fttol@f1
  4800  0FE1  082D               	movf	?___ftadd+1,w
  4801  0FE2  00B9               	movwf	___fttol@f1+1
  4802  0FE3  082E               	movf	?___ftadd+2,w
  4803  0FE4  00BA               	movwf	___fttol@f1+2
  4804  0FE5  3185  258D         	fcall	___fttol
  4805  0FE7  0839               	movf	?___fttol+1,w
  4806  0FE8  00C6               	movwf	?_get_30v_current+1
  4807  0FE9  0838               	movf	?___fttol,w
  4808  0FEA  00C5               	movwf	?_get_30v_current
  4809  0FEB  0008               	return
  4810  0FEC                     l3063:	
  4811                           
  4812                           ;Multi_RX_testjig_v1.c: 1869: else
  4813                           ;Multi_RX_testjig_v1.c: 1870: return 0;
  4814  0FEC  01C5               	clrf	?_get_30v_current
  4815  0FED  01C6               	clrf	?_get_30v_current+1
  4816  0FEE  0008               	return
  4817  0FEF                     __end_of_get_30v_current:	
  4818  0FEF                     __ptext22:	
  4819 ;; *************** function ___lwtoft *****************
  4820 ;; Defined at:
  4821 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  c               2    8[COMMON] unsigned int 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  3    8[COMMON] float 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2, status,0, pclath, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 1F/0
  4832 ;;		On exit  : 1F/0
  4833 ;;		Unchanged: 1F/0
  4834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4835 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4838 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4839 ;;Total ram usage:        3 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    2
  4842 ;; This function calls:
  4843 ;;		___ftpack
  4844 ;; This function is called by:
  4845 ;;		_get_30v_current
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           
  4850                           ;psect for function ___lwtoft
  4851  0FEF                     ___lwtoft:	
  4852                           
  4853                           ;incstack = 0
  4854                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  4855  0FEF  0878               	movf	___lwtoft@c,w
  4856  0FF0  00F0               	movwf	___ftpack@arg
  4857  0FF1  0879               	movf	___lwtoft@c+1,w
  4858  0FF2  00F1               	movwf	___ftpack@arg+1
  4859  0FF3  308E               	movlw	142
  4860  0FF4  01F2               	clrf	___ftpack@arg+2
  4861  0FF5  00F3               	movwf	___ftpack@exp
  4862  0FF6  01F4               	clrf	___ftpack@sign
  4863  0FF7  3184  2435         	fcall	___ftpack
  4864  0FF9  0870               	movf	?___ftpack,w
  4865  0FFA  00F8               	movwf	?___lwtoft
  4866  0FFB  0871               	movf	?___ftpack+1,w
  4867  0FFC  00F9               	movwf	?___lwtoft+1
  4868  0FFD  0872               	movf	?___ftpack+2,w
  4869  0FFE  00FA               	movwf	?___lwtoft+2
  4870  0FFF  0008               	return
  4871  1000                     __end_of___lwtoft:	
  4872                           
  4873                           	psect	text1
  4874  0473                     __ptext1:	
  4875 ;; *************** function _testjig_done *****************
  4876 ;; Defined at:
  4877 ;;		line 920 in file "Multi_RX_testjig_v1.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  state           1    wreg     unsigned char 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  state           1   11[COMMON] unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    wreg      void 
  4884 ;; Registers used:
  4885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/4
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4893 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4894 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4895 ;;Total ram usage:        4 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    4
  4898 ;; This function calls:
  4899 ;;		_buzz_one
  4900 ;;		_debug_fast_tx
  4901 ;;		_power_supply_set
  4902 ;;		_print_screen
  4903 ;; This function is called by:
  4904 ;;		_main
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908                           
  4909                           ;psect for function _testjig_done
  4910  0473                     _testjig_done:	
  4911                           
  4912                           ;incstack = 0
  4913                           ; Regs used in _testjig_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4914                           ;testjig_done@state stored from wreg
  4915  0473  00FB               	movwf	testjig_done@state
  4916  0474                     l432:	
  4917                           ;Multi_RX_testjig_v1.c: 922: while(1)
  4918                           
  4919                           
  4920                           ;Multi_RX_testjig_v1.c: 923: {
  4921                           ;Multi_RX_testjig_v1.c: 924: power_supply_set(3);
  4922  0474  3003               	movlw	3
  4923  0475  256C  3184         	fcall	_power_supply_set
  4924                           
  4925                           ;Multi_RX_testjig_v1.c: 925: LATA7 = 0;
  4926  0477  0022               	movlb	2	; select bank2
  4927  0478  138C               	bcf	12,7	;volatile
  4928                           
  4929                           ;Multi_RX_testjig_v1.c: 926: LATB5 = 0;
  4930  0479  128D               	bcf	13,5	;volatile
  4931                           
  4932                           ;Multi_RX_testjig_v1.c: 927: LATA6 = 0;
  4933  047A  130C               	bcf	12,6	;volatile
  4934                           
  4935                           ;Multi_RX_testjig_v1.c: 928: debug_fast_tx(11110);
  4936  047B  3066               	movlw	102
  4937  047C  00F0               	movwf	debug_fast_tx@data
  4938  047D  302B               	movlw	43
  4939  047E  00F1               	movwf	debug_fast_tx@data+1
  4940  047F  2537  3184         	fcall	_debug_fast_tx
  4941                           
  4942                           ;Multi_RX_testjig_v1.c: 929: debug_fast_tx(state);
  4943  0481  087B               	movf	testjig_done@state,w
  4944  0482  00F0               	movwf	debug_fast_tx@data
  4945  0483  01F1               	clrf	debug_fast_tx@data+1
  4946  0484  2537  3184         	fcall	_debug_fast_tx
  4947                           
  4948                           ;Multi_RX_testjig_v1.c: 930: switch(state)
  4949  0486  2CF5               	goto	l3209
  4950  0487                     l3183:	
  4951                           
  4952                           ;Multi_RX_testjig_v1.c: 933: print_screen("Testjig Pass", " Remove board");
  4953  0487  30B7               	movlw	low (STR_159| (0+32768))
  4954  0488  00F4               	movwf	print_screen@top
  4955  0489  3091               	movlw	high (STR_159| (0+32768))
  4956  048A  00F5               	movwf	print_screen@top+1
  4957  048B  3024               	movlw	low (STR_160| (0+32768))
  4958  048C  00F6               	movwf	print_screen@bottom
  4959  048D  3091               	movlw	high (STR_160| (0+32768))
  4960  048E  00F7               	movwf	print_screen@bottom+1
  4961  048F  318F  2731  3184   	fcall	_print_screen
  4962                           
  4963                           ;Multi_RX_testjig_v1.c: 934: debug_fast_tx(11111);
  4964  0492  3067               	movlw	103
  4965  0493  00F0               	movwf	debug_fast_tx@data
  4966  0494  302B               	movlw	43
  4967  0495  00F1               	movwf	debug_fast_tx@data+1
  4968  0496  2537  3184         	fcall	_debug_fast_tx
  4969                           
  4970                           ;Multi_RX_testjig_v1.c: 935: buzz_one(100);
  4971  0498  3064               	movlw	100
  4972  0499  00F0               	movwf	buzz_one@time
  4973  049A  01F1               	clrf	buzz_one@time+1
  4974  049B  2564  3184         	fcall	_buzz_one
  4975                           
  4976                           ;Multi_RX_testjig_v1.c: 936: _delay((unsigned long)((200)*(16000000/4000.0)));
  4977  049D  3005               	movlw	5
  4978  049E  00FA               	movwf	??_testjig_done+2
  4979  049F  300F               	movlw	15
  4980  04A0  00F9               	movwf	??_testjig_done+1
  4981  04A1  30F4               	movlw	244
  4982  04A2  00F8               	movwf	??_testjig_done
  4983  04A3                     u4307:	
  4984  04A3  0BF8               	decfsz	??_testjig_done,f
  4985  04A4  2CA3               	goto	u4307
  4986  04A5  0BF9               	decfsz	??_testjig_done+1,f
  4987  04A6  2CA3               	goto	u4307
  4988  04A7  0BFA               	decfsz	??_testjig_done+2,f
  4989  04A8  2CA3               	goto	u4307
  4990                           
  4991                           ;Multi_RX_testjig_v1.c: 937: buzz_one(100);
  4992  04A9  3064               	movlw	100
  4993  04AA  00F0               	movwf	buzz_one@time
  4994  04AB  01F1               	clrf	buzz_one@time+1
  4995  04AC  2564  3184         	fcall	_buzz_one
  4996  04AE                     l435:	
  4997                           ;Multi_RX_testjig_v1.c: 938: while(RF3 == 0);
  4998                           
  4999  04AE  0025               	movlb	5	; select bank5
  5000  04AF  1D8C               	btfss	12,3	;volatile
  5001  04B0  2CAE               	goto	l435
  5002                           
  5003                           ;Multi_RX_testjig_v1.c: 939: _delay((unsigned long)((100)*(16000000/4000.0)));
  5004  04B1  3003               	movlw	3
  5005  04B2  00FA               	movwf	??_testjig_done+2
  5006  04B3  3008               	movlw	8
  5007  04B4  00F9               	movwf	??_testjig_done+1
  5008  04B5  3078               	movlw	120
  5009  04B6  00F8               	movwf	??_testjig_done
  5010  04B7                     u4317:	
  5011  04B7  0BF8               	decfsz	??_testjig_done,f
  5012  04B8  2CB7               	goto	u4317
  5013  04B9  0BF9               	decfsz	??_testjig_done+1,f
  5014  04BA  2CB7               	goto	u4317
  5015  04BB  0BFA               	decfsz	??_testjig_done+2,f
  5016  04BC  2CB7               	goto	u4317
  5017  04BD  2CF2               	goto	l3205
  5018  04BE                     l3195:	
  5019                           ;Multi_RX_testjig_v1.c: 941: break;
  5020                           
  5021                           ;Multi_RX_testjig_v1.c: 940: state = 0xFF;
  5022                           
  5023                           
  5024                           ;Multi_RX_testjig_v1.c: 943: debug_fast_tx(11112);
  5025  04BE  3068               	movlw	104
  5026  04BF  00F0               	movwf	debug_fast_tx@data
  5027  04C0  302B               	movlw	43
  5028  04C1  00F1               	movwf	debug_fast_tx@data+1
  5029  04C2  2537               	fcall	_debug_fast_tx
  5030                           
  5031                           ;Multi_RX_testjig_v1.c: 944: print_screen("Multi_RX", "Testjig");
  5032  04C3  30C2               	movlw	low (STR_1| (0+32768))
  5033  04C4  00F4               	movwf	print_screen@top
  5034  04C5  3092               	movlw	high (STR_1| (0+32768))
  5035  04C6  00F5               	movwf	print_screen@top+1
  5036  04C7  302F               	movlw	low ((STR_165+9)| (0+32768))
  5037  04C8  00F6               	movwf	print_screen@bottom
  5038  04C9  3090               	movlw	high ((STR_165+9)| (0+32768))
  5039  04CA  00F7               	movwf	print_screen@bottom+1
  5040  04CB  318F  2731  3184   	fcall	_print_screen
  5041                           
  5042                           ;Multi_RX_testjig_v1.c: 945: _delay((unsigned long)((2000)*(16000000/4000.0)));
  5043  04CE  3029               	movlw	41
  5044  04CF  00FA               	movwf	??_testjig_done+2
  5045  04D0  3096               	movlw	150
  5046  04D1  00F9               	movwf	??_testjig_done+1
  5047  04D2  30A6               	movlw	166
  5048  04D3  00F8               	movwf	??_testjig_done
  5049  04D4                     u4327:	
  5050  04D4  0BF8               	decfsz	??_testjig_done,f
  5051  04D5  2CD4               	goto	u4327
  5052  04D6  0BF9               	decfsz	??_testjig_done+1,f
  5053  04D7  2CD4               	goto	u4327
  5054  04D8  0BFA               	decfsz	??_testjig_done+2,f
  5055  04D9  2CD4               	goto	u4327
  5056                           
  5057                           ;Multi_RX_testjig_v1.c: 946: print_screen("Testjig Power-up", "wait...");
  5058  04DA  3048               	movlw	low (STR_163| (0+32768))
  5059  04DB  00F4               	movwf	print_screen@top
  5060  04DC  3090               	movlw	high (STR_163| (0+32768))
  5061  04DD  00F5               	movwf	print_screen@top+1
  5062  04DE  30D4               	movlw	low (STR_164| (0+32768))
  5063  04DF  00F6               	movwf	print_screen@bottom
  5064  04E0  3092               	movlw	high (STR_164| (0+32768))
  5065  04E1  00F7               	movwf	print_screen@bottom+1
  5066  04E2  318F  2731  3184   	fcall	_print_screen
  5067                           
  5068                           ;Multi_RX_testjig_v1.c: 947: _delay((unsigned long)((3000)*(16000000/4000.0)));
  5069  04E5  303D               	movlw	61
  5070  04E6  00FA               	movwf	??_testjig_done+2
  5071  04E7  30E1               	movlw	225
  5072  04E8  00F9               	movwf	??_testjig_done+1
  5073  04E9  307A               	movlw	122
  5074  04EA  00F8               	movwf	??_testjig_done
  5075  04EB                     u4337:	
  5076  04EB  0BF8               	decfsz	??_testjig_done,f
  5077  04EC  2CEB               	goto	u4337
  5078  04ED  0BF9               	decfsz	??_testjig_done+1,f
  5079  04EE  2CEB               	goto	u4337
  5080  04EF  0BFA               	decfsz	??_testjig_done+2,f
  5081  04F0  2CEB               	goto	u4337
  5082  04F1  3200               	nop2
  5083  04F2                     l3205:	
  5084                           
  5085                           ;Multi_RX_testjig_v1.c: 948: state = 0xFF;
  5086  04F2  30FF               	movlw	255
  5087  04F3  00FB               	movwf	testjig_done@state
  5088                           
  5089                           ;Multi_RX_testjig_v1.c: 949: break;
  5090  04F4  2CFD               	goto	l3211
  5091  04F5                     l3209:	
  5092  04F5  087B               	movf	testjig_done@state,w
  5093                           
  5094                           ; Switch size 1, requested type "speed"
  5095                           ; Number of cases is 2, Range of values is 1 to 2
  5096                           ; switch strategies available:
  5097                           ; Name         Instructions Cycles
  5098                           ; simple_byte            7     4 (average)
  5099                           ; direct_byte           13     9 (fixed)
  5100                           ; jumptable            263     9 (fixed)
  5101                           ;	Chosen strategy is simple_byte
  5102  04F6  3A01               	xorlw	1	; case 1
  5103  04F7  1903               	skipnz
  5104  04F8  2C87               	goto	l3183
  5105  04F9  3A03               	xorlw	3	; case 2
  5106  04FA  1903               	skipnz
  5107  04FB  2CBE               	goto	l3195
  5108  04FC  2CFD               	goto	l3211
  5109  04FD                     l3211:	
  5110                           
  5111                           ;Multi_RX_testjig_v1.c: 951: debug_fast_tx(11113);
  5112  04FD  3069               	movlw	105
  5113  04FE  00F0               	movwf	debug_fast_tx@data
  5114  04FF  302B               	movlw	43
  5115  0500  00F1               	movwf	debug_fast_tx@data+1
  5116  0501  2537               	fcall	_debug_fast_tx
  5117                           
  5118                           ;Multi_RX_testjig_v1.c: 952: print_screen("Multi_RX Testjig", "-> Insert PCB");
  5119  0502  3026               	movlw	low (STR_165| (0+32768))
  5120  0503  00F4               	movwf	print_screen@top
  5121  0504  3090               	movlw	high (STR_165| (0+32768))
  5122  0505  00F5               	movwf	print_screen@top+1
  5123  0506  3016               	movlw	low (STR_4| (0+32768))
  5124  0507  00F6               	movwf	print_screen@bottom
  5125  0508  3091               	movlw	high (STR_4| (0+32768))
  5126  0509  00F7               	movwf	print_screen@bottom+1
  5127  050A  318F  2731  3184   	fcall	_print_screen
  5128  050D                     l440:	
  5129                           ;Multi_RX_testjig_v1.c: 953: while(RF3 == 1);
  5130                           
  5131  050D  0025               	movlb	5	; select bank5
  5132  050E  198C               	btfsc	12,3	;volatile
  5133  050F  2D0D               	goto	l440
  5134                           
  5135                           ;Multi_RX_testjig_v1.c: 954: _delay((unsigned long)((100)*(16000000/4000.0)));
  5136  0510  3003               	movlw	3
  5137  0511  00FA               	movwf	??_testjig_done+2
  5138  0512  3008               	movlw	8
  5139  0513  00F9               	movwf	??_testjig_done+1
  5140  0514  3078               	movlw	120
  5141  0515  00F8               	movwf	??_testjig_done
  5142  0516                     u4347:	
  5143  0516  0BF8               	decfsz	??_testjig_done,f
  5144  0517  2D16               	goto	u4347
  5145  0518  0BF9               	decfsz	??_testjig_done+1,f
  5146  0519  2D16               	goto	u4347
  5147  051A  0BFA               	decfsz	??_testjig_done+2,f
  5148  051B  2D16               	goto	u4347
  5149                           
  5150                           ;Multi_RX_testjig_v1.c: 955: print_screen("Multi_RX Testjig", " Press START");
  5151  051C  3026               	movlw	low (STR_165| (0+32768))
  5152  051D  00F4               	movwf	print_screen@top
  5153  051E  3090               	movlw	high (STR_165| (0+32768))
  5154  051F  00F5               	movwf	print_screen@top+1
  5155  0520  3090               	movlw	low (STR_168| (0+32768))
  5156  0521  00F6               	movwf	print_screen@bottom
  5157  0522  3091               	movlw	high (STR_168| (0+32768))
  5158  0523  00F7               	movwf	print_screen@bottom+1
  5159  0524  318F  2731  3184   	fcall	_print_screen
  5160  0527                     l443:	
  5161                           ;Multi_RX_testjig_v1.c: 956: while(RF3 == 0);
  5162                           
  5163  0527  0025               	movlb	5	; select bank5
  5164  0528  1D8C               	btfss	12,3	;volatile
  5165  0529  2D27               	goto	l443
  5166                           
  5167                           ;Multi_RX_testjig_v1.c: 957: _delay((unsigned long)((100)*(16000000/4000.0)));
  5168  052A  3003               	movlw	3
  5169  052B  00FA               	movwf	??_testjig_done+2
  5170  052C  3008               	movlw	8
  5171  052D  00F9               	movwf	??_testjig_done+1
  5172  052E  3078               	movlw	120
  5173  052F  00F8               	movwf	??_testjig_done
  5174  0530                     u4357:	
  5175  0530  0BF8               	decfsz	??_testjig_done,f
  5176  0531  2D30               	goto	u4357
  5177  0532  0BF9               	decfsz	??_testjig_done+1,f
  5178  0533  2D30               	goto	u4357
  5179  0534  0BFA               	decfsz	??_testjig_done+2,f
  5180  0535  2D30               	goto	u4357
  5181  0536  2C74               	goto	l432
  5182  0537                     __end_of_testjig_done:	
  5183  0537                     __ptext9:	
  5184 ;; *************** function _debug_fast_tx *****************
  5185 ;; Defined at:
  5186 ;;		line 1950 in file "Multi_RX_testjig_v1.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  data            2    0[COMMON] unsigned int 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;  i               1    2[COMMON] unsigned char 
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg, status,2, status,0
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/2
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5203 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5204 ;;Total ram usage:        3 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:    1
  5207 ;; This function calls:
  5208 ;;		Nothing
  5209 ;; This function is called by:
  5210 ;;		_main
  5211 ;;		_testjig_done
  5212 ;;		_print_error
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           
  5217                           ;psect for function _debug_fast_tx
  5218  0537                     _debug_fast_tx:	
  5219                           
  5220                           ;Multi_RX_testjig_v1.c: 1952: GIE = 0;
  5221                           
  5222                           ;incstack = 0
  5223                           ; Regs used in _debug_fast_tx: [wreg+status,2+status,0]
  5224  0537  138B               	bcf	11,7	;volatile
  5225                           
  5226                           ;Multi_RX_testjig_v1.c: 1953: LATD2 = 0;
  5227  0538  0022               	movlb	2	; select bank2
  5228  0539  110F               	bcf	15,2	;volatile
  5229                           
  5230                           ;Multi_RX_testjig_v1.c: 1959: __nop();
  5231  053A  0000               	nop
  5232                           
  5233                           ;Multi_RX_testjig_v1.c: 1960: __nop();
  5234  053B  0000               	nop
  5235                           
  5236                           ;Multi_RX_testjig_v1.c: 1961: __nop();
  5237  053C  0000               	nop
  5238                           
  5239                           ;Multi_RX_testjig_v1.c: 1962: __nop();
  5240  053D  0000               	nop
  5241                           
  5242                           ;Multi_RX_testjig_v1.c: 1963: __nop();
  5243  053E  0000               	nop
  5244                           
  5245                           ;Multi_RX_testjig_v1.c: 1964: __nop();
  5246  053F  0000               	nop
  5247                           
  5248                           ;Multi_RX_testjig_v1.c: 1965: __nop();
  5249  0540  0000               	nop
  5250                           
  5251                           ;Multi_RX_testjig_v1.c: 1966: __nop();
  5252  0541  0000               	nop
  5253                           
  5254                           ;Multi_RX_testjig_v1.c: 1967: __nop();
  5255  0542  0000               	nop
  5256                           
  5257                           ;Multi_RX_testjig_v1.c: 1968: unsigned char i;
  5258                           ;Multi_RX_testjig_v1.c: 1969: for(i = 0; i < 16; i++)
  5259  0543  01F2               	clrf	debug_fast_tx@i
  5260  0544                     l669:	
  5261                           
  5262                           ;Multi_RX_testjig_v1.c: 1970: {
  5263                           ;Multi_RX_testjig_v1.c: 1971: LATD2 = data & 0x01;
  5264  0544  1C70               	btfss	debug_fast_tx@data,0
  5265  0545  2D49               	goto	u2260
  5266  0546  0022               	movlb	2	; select bank2
  5267  0547  150F               	bsf	15,2	;volatile
  5268  0548  2D4B               	goto	l2653
  5269  0549                     u2260:	
  5270  0549  0022               	movlb	2	; select bank2
  5271  054A  110F               	bcf	15,2	;volatile
  5272  054B                     l2653:	
  5273  054B  3010               	movlw	16
  5274                           
  5275                           ;Multi_RX_testjig_v1.c: 1972: data = data >> 1;
  5276  054C  36F1               	lsrf	debug_fast_tx@data+1,f
  5277  054D  0CF0               	rrf	debug_fast_tx@data,f
  5278  054E  0AF2               	incf	debug_fast_tx@i,f
  5279  054F  0272               	subwf	debug_fast_tx@i,w
  5280  0550  1C03               	skipc
  5281  0551  2D44               	goto	l669
  5282                           
  5283                           ;Multi_RX_testjig_v1.c: 1973: }
  5284                           ;Multi_RX_testjig_v1.c: 1974: __nop();
  5285  0552  0000               	nop
  5286                           
  5287                           ;Multi_RX_testjig_v1.c: 1975: __nop();
  5288  0553  0000               	nop
  5289                           
  5290                           ;Multi_RX_testjig_v1.c: 1976: __nop();
  5291  0554  0000               	nop
  5292                           
  5293                           ;Multi_RX_testjig_v1.c: 1977: __nop();
  5294  0555  0000               	nop
  5295                           
  5296                           ;Multi_RX_testjig_v1.c: 1978: __nop();
  5297  0556  0000               	nop
  5298                           
  5299                           ;Multi_RX_testjig_v1.c: 1979: __nop();
  5300  0557  0000               	nop
  5301                           
  5302                           ;Multi_RX_testjig_v1.c: 1980: LATD2 = 1;
  5303  0558  0022               	movlb	2	; select bank2
  5304  0559  150F               	bsf	15,2	;volatile
  5305                           
  5306                           ;Multi_RX_testjig_v1.c: 1981: __nop();
  5307  055A  0000               	nop
  5308                           
  5309                           ;Multi_RX_testjig_v1.c: 1982: __nop();
  5310  055B  0000               	nop
  5311                           
  5312                           ;Multi_RX_testjig_v1.c: 1983: __nop();
  5313  055C  0000               	nop
  5314                           
  5315                           ;Multi_RX_testjig_v1.c: 1984: __nop();
  5316  055D  0000               	nop
  5317                           
  5318                           ;Multi_RX_testjig_v1.c: 1985: __nop();
  5319  055E  0000               	nop
  5320                           
  5321                           ;Multi_RX_testjig_v1.c: 1986: __nop();
  5322  055F  0000               	nop
  5323                           
  5324                           ;Multi_RX_testjig_v1.c: 1987: __nop();
  5325  0560  0000               	nop
  5326                           
  5327                           ;Multi_RX_testjig_v1.c: 1988: __nop();
  5328  0561  0000               	nop
  5329                           
  5330                           ;Multi_RX_testjig_v1.c: 1989: GIE = 1;
  5331  0562  178B               	bsf	11,7	;volatile
  5332  0563  0008               	return
  5333  0564                     __end_of_debug_fast_tx:	
  5334  0564                     __ptext10:	
  5335 ;; *************** function _buzz_one *****************
  5336 ;; Defined at:
  5337 ;;		line 961 in file "Multi_RX_testjig_v1.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  time            2    0[COMMON] unsigned int 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;		None
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  1    wreg      void 
  5344 ;; Registers used:
  5345 ;;		wreg
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 1F/2
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5354 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5355 ;;Total ram usage:        2 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; Hardware stack levels required when called:    1
  5358 ;; This function calls:
  5359 ;;		Nothing
  5360 ;; This function is called by:
  5361 ;;		_main
  5362 ;;		_testjig_done
  5363 ;;		_print_error
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           
  5368                           ;psect for function _buzz_one
  5369  0564                     _buzz_one:	
  5370                           
  5371                           ;Multi_RX_testjig_v1.c: 963: buzz_timer = time;
  5372                           
  5373                           ;incstack = 0
  5374                           ; Regs used in _buzz_one: [wreg]
  5375  0564  0871               	movf	buzz_one@time+1,w
  5376  0565  0020               	movlb	0	; select bank0
  5377  0566  00E8               	movwf	_buzz_timer+1	;volatile
  5378  0567  0870               	movf	buzz_one@time,w
  5379  0568  00E7               	movwf	_buzz_timer	;volatile
  5380                           
  5381                           ;Multi_RX_testjig_v1.c: 964: LATC5 = 1;
  5382  0569  0022               	movlb	2	; select bank2
  5383  056A  168E               	bsf	14,5	;volatile
  5384  056B  0008               	return
  5385  056C                     __end_of_buzz_one:	
  5386  056C                     __ptext8:	
  5387 ;; *************** function _power_supply_set *****************
  5388 ;; Defined at:
  5389 ;;		line 1836 in file "Multi_RX_testjig_v1.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  supply          1    wreg     unsigned char 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  supply          1    0[COMMON] unsigned char 
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/4
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5407 ;;Total ram usage:        1 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    1
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_main
  5414 ;;		_testjig_done
  5415 ;;		_print_error
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           
  5420                           ;psect for function _power_supply_set
  5421  056C                     _power_supply_set:	
  5422                           
  5423                           ;incstack = 0
  5424                           ; Regs used in _power_supply_set: [wreg-fsr0h+status,2+status,0]
  5425                           ;power_supply_set@supply stored from wreg
  5426  056C  00F0               	movwf	power_supply_set@supply
  5427                           
  5428                           ;Multi_RX_testjig_v1.c: 1838: switch(supply)
  5429  056D  2D82               	goto	l2661
  5430  056E                     l632:	
  5431                           ;Multi_RX_testjig_v1.c: 1839: {
  5432                           ;Multi_RX_testjig_v1.c: 1840: case 0:
  5433                           
  5434                           
  5435                           ;Multi_RX_testjig_v1.c: 1841: LATD4 = 1;
  5436  056E  0022               	movlb	2	; select bank2
  5437  056F  160F               	bsf	15,4	;volatile
  5438                           
  5439                           ;Multi_RX_testjig_v1.c: 1842: LATD5 = 1;
  5440  0570  168F               	bsf	15,5	;volatile
  5441                           
  5442                           ;Multi_RX_testjig_v1.c: 1843: LATD6 = 1;
  5443  0571  170F               	bsf	15,6	;volatile
  5444                           
  5445                           ;Multi_RX_testjig_v1.c: 1844: break;
  5446  0572  0008               	return
  5447  0573                     l634:	
  5448                           ;Multi_RX_testjig_v1.c: 1845: case 1:
  5449                           
  5450                           
  5451                           ;Multi_RX_testjig_v1.c: 1846: LATD4 = 1;
  5452  0573  0022               	movlb	2	; select bank2
  5453  0574  160F               	bsf	15,4	;volatile
  5454                           
  5455                           ;Multi_RX_testjig_v1.c: 1847: LATD5 = 0;
  5456  0575  128F               	bcf	15,5	;volatile
  5457                           
  5458                           ;Multi_RX_testjig_v1.c: 1848: LATD6 = 1;
  5459  0576  170F               	bsf	15,6	;volatile
  5460                           
  5461                           ;Multi_RX_testjig_v1.c: 1849: break;
  5462  0577  0008               	return
  5463  0578                     l635:	
  5464                           ;Multi_RX_testjig_v1.c: 1850: case 2:
  5465                           
  5466                           
  5467                           ;Multi_RX_testjig_v1.c: 1851: LATD4 = 0;
  5468  0578  0022               	movlb	2	; select bank2
  5469  0579  120F               	bcf	15,4	;volatile
  5470                           
  5471                           ;Multi_RX_testjig_v1.c: 1852: LATD5 = 0;
  5472  057A  128F               	bcf	15,5	;volatile
  5473                           
  5474                           ;Multi_RX_testjig_v1.c: 1853: LATD6 = 0;
  5475  057B  130F               	bcf	15,6	;volatile
  5476                           
  5477                           ;Multi_RX_testjig_v1.c: 1854: break;
  5478  057C  0008               	return
  5479  057D                     l636:	
  5480                           ;Multi_RX_testjig_v1.c: 1855: case 3:
  5481                           
  5482                           
  5483                           ;Multi_RX_testjig_v1.c: 1856: LATD4 = 0;
  5484  057D  0022               	movlb	2	; select bank2
  5485  057E  120F               	bcf	15,4	;volatile
  5486                           
  5487                           ;Multi_RX_testjig_v1.c: 1857: LATD5 = 0;
  5488  057F  128F               	bcf	15,5	;volatile
  5489                           
  5490                           ;Multi_RX_testjig_v1.c: 1858: LATD6 = 1;
  5491  0580  170F               	bsf	15,6	;volatile
  5492                           
  5493                           ;Multi_RX_testjig_v1.c: 1859: break;
  5494  0581  0008               	return
  5495  0582                     l2661:	
  5496  0582  0870               	movf	power_supply_set@supply,w
  5497                           
  5498                           ; Switch size 1, requested type "speed"
  5499                           ; Number of cases is 4, Range of values is 0 to 3
  5500                           ; switch strategies available:
  5501                           ; Name         Instructions Cycles
  5502                           ; direct_byte           14     6 (fixed)
  5503                           ; simple_byte           13     7 (average)
  5504                           ; jumptable            260     6 (fixed)
  5505                           ;	Chosen strategy is direct_byte
  5506  0583  0084               	movwf	4
  5507  0584  3004               	movlw	4
  5508  0585  0204               	subwf	4,w
  5509  0586  1803               	skipnc
  5510  0587  0008               	return
  5511  0588  3185               	movlp	high S3895
  5512  0589  3504               	lslf	4,w
  5513  058A  3EF6               	addlw	low S3895
  5514  058B  0082               	movwf	2
  5515  058C  0008               	return
  5516  058D                     __end_of_power_supply_set:	
  5517                           
  5518                           	psect	swtext1
  5519  05F6                     __pswtext1:	
  5520  05F6                     S3895:	
  5521  05F6  3185  2D6E         	ljmp	l632
  5522  05F8  3185  2D73         	ljmp	l634
  5523  05FA  3185  2D78         	ljmp	l635
  5524  05FC  3185  2D7D         	ljmp	l636
  5525                           
  5526                           	psect	text18
  5527  0628                     __ptext18:	
  5528 ;; *************** function _init_i2c *****************
  5529 ;; Defined at:
  5530 ;;		line 1794 in file "Multi_RX_testjig_v1.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;		None
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;		None
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      void 
  5537 ;; Registers used:
  5538 ;;		wreg
  5539 ;; Tracked objects:
  5540 ;;		On entry : 1F/0
  5541 ;;		On exit  : 1F/4
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5546 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5547 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5548 ;;Total ram usage:        3 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    1
  5551 ;; This function calls:
  5552 ;;		Nothing
  5553 ;; This function is called by:
  5554 ;;		_main
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           
  5559                           ;psect for function _init_i2c
  5560  0628                     _init_i2c:	
  5561                           
  5562                           ;Multi_RX_testjig_v1.c: 1796: RA5 = 1;
  5563                           
  5564                           ;incstack = 0
  5565                           ; Regs used in _init_i2c: [wreg]
  5566  0628  168C               	bsf	12,5	;volatile
  5567                           
  5568                           ;Multi_RX_testjig_v1.c: 1797: _delay((unsigned long)((200)*(16000000/4000.0)));
  5569  0629  3005               	movlw	5
  5570  062A  00F2               	movwf	??_init_i2c+2
  5571  062B  300F               	movlw	15
  5572  062C  00F1               	movwf	??_init_i2c+1
  5573  062D  30F4               	movlw	244
  5574  062E  00F0               	movwf	??_init_i2c
  5575  062F                     u4427:	
  5576  062F  0BF0               	decfsz	??_init_i2c,f
  5577  0630  2E2F               	goto	u4427
  5578  0631  0BF1               	decfsz	??_init_i2c+1,f
  5579  0632  2E2F               	goto	u4427
  5580  0633  0BF2               	decfsz	??_init_i2c+2,f
  5581  0634  2E2F               	goto	u4427
  5582                           
  5583                           ;Multi_RX_testjig_v1.c: 1798: TRISC3 = 1;
  5584  0635  0021               	movlb	1	; select bank1
  5585  0636  158E               	bsf	14,3	;volatile
  5586                           
  5587                           ;Multi_RX_testjig_v1.c: 1799: TRISC4 = 1;
  5588  0637  160E               	bsf	14,4	;volatile
  5589                           
  5590                           ;Multi_RX_testjig_v1.c: 1800: SSP1STAT |= 0x80;
  5591  0638  0024               	movlb	4	; select bank4
  5592  0639  1794               	bsf	20,7	;volatile
  5593                           
  5594                           ;Multi_RX_testjig_v1.c: 1801: SSP1CON1 = 0x28;
  5595  063A  3028               	movlw	40
  5596  063B  0095               	movwf	21	;volatile
  5597                           
  5598                           ;Multi_RX_testjig_v1.c: 1802: SSP1ADD = 0x14;
  5599  063C  3014               	movlw	20
  5600  063D  0092               	movwf	18	;volatile
  5601  063E  0008               	return
  5602  063F                     __end_of_init_i2c:	
  5603                           
  5604                           	psect	text19
  5605  063F                     __ptext19:	
  5606 ;; *************** function _init_current_sink *****************
  5607 ;; Defined at:
  5608 ;;		line 1823 in file "Multi_RX_testjig_v1.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;		None
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;		None
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      void 
  5615 ;; Registers used:
  5616 ;;		wreg, status,2
  5617 ;; Tracked objects:
  5618 ;;		On entry : B1F/1
  5619 ;;		On exit  : B1F/C
  5620 ;;		Unchanged: B00/0
  5621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5626 ;;Total ram usage:        0 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    1
  5629 ;; This function calls:
  5630 ;;		Nothing
  5631 ;; This function is called by:
  5632 ;;		_main
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           
  5637                           ;psect for function _init_current_sink
  5638  063F                     _init_current_sink:	
  5639                           
  5640                           ;Multi_RX_testjig_v1.c: 1825: T2CON = 0b00000110;
  5641                           
  5642                           ;incstack = 0
  5643                           ; Regs used in _init_current_sink: [wreg+status,2]
  5644  063F  3006               	movlw	6
  5645  0640  0020               	movlb	0	; select bank0
  5646  0641  009C               	movwf	28	;volatile
  5647                           
  5648                           ;Multi_RX_testjig_v1.c: 1826: PR2 = 0xFA;
  5649  0642  30FA               	movlw	250
  5650  0643  009B               	movwf	27	;volatile
  5651                           
  5652                           ;Multi_RX_testjig_v1.c: 1827: PIE1bits.TMR2IE = 1;
  5653  0644  0021               	movlb	1	; select bank1
  5654  0645  1491               	bsf	17,1	;volatile
  5655                           
  5656                           ;Multi_RX_testjig_v1.c: 1829: T8CON = 0b00000100;
  5657  0646  3004               	movlw	4
  5658  0647  002B               	movlb	11	; select bank11
  5659  0648  0097               	movwf	23	;volatile
  5660                           
  5661                           ;Multi_RX_testjig_v1.c: 1830: PR8 = 0xFF;
  5662  0649  30FF               	movlw	255
  5663  064A  0096               	movwf	22	;volatile
  5664                           
  5665                           ;Multi_RX_testjig_v1.c: 1831: CCP9CON = 0b00001100;
  5666  064B  300C               	movlw	12
  5667  064C  002C               	movlb	12	; select bank12
  5668  064D  009C               	movwf	28	;volatile
  5669                           
  5670                           ;Multi_RX_testjig_v1.c: 1832: CCPTMRS2 = 0b00000001;
  5671  064E  3001               	movlw	1
  5672  064F  0025               	movlb	5	; select bank5
  5673  0650  009F               	movwf	31	;volatile
  5674                           
  5675                           ;Multi_RX_testjig_v1.c: 1833: CCPR9L = 0x00;
  5676  0651  002C               	movlb	12	; select bank12
  5677  0652  019A               	clrf	26	;volatile
  5678  0653  0008               	return
  5679  0654                     __end_of_init_current_sink:	
  5680                           
  5681                           	psect	text20
  5682  0654                     __ptext20:	
  5683 ;; *************** function _init_ADC *****************
  5684 ;; Defined at:
  5685 ;;		line 1805 in file "Multi_RX_testjig_v1.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;		None
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;		None
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1    wreg      void 
  5692 ;; Registers used:
  5693 ;;		wreg
  5694 ;; Tracked objects:
  5695 ;;		On entry : B1F/8
  5696 ;;		On exit  : B1F/1
  5697 ;;		Unchanged: B00/0
  5698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5703 ;;Total ram usage:        0 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:    1
  5706 ;; This function calls:
  5707 ;;		Nothing
  5708 ;; This function is called by:
  5709 ;;		_main
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           
  5714                           ;psect for function _init_ADC
  5715  0654                     _init_ADC:	
  5716                           
  5717                           ;Multi_RX_testjig_v1.c: 1807: FVRCON = 0b10000011;
  5718                           
  5719                           ;incstack = 0
  5720                           ; Regs used in _init_ADC: [wreg]
  5721  0654  3083               	movlw	131
  5722  0655  0022               	movlb	2	; select bank2
  5723  0656  0097               	movwf	23	;volatile
  5724                           
  5725                           ;Multi_RX_testjig_v1.c: 1809: ADCON1 = 0b10100011;
  5726  0657  30A3               	movlw	163
  5727  0658  0021               	movlb	1	; select bank1
  5728  0659  009E               	movwf	30	;volatile
  5729  065A  0008               	return
  5730  065B                     __end_of_init_ADC:	
  5731                           
  5732                           	psect	text23
  5733  058D                     __ptext23:	
  5734 ;; *************** function ___fttol *****************
  5735 ;; Defined at:
  5736 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;  f1              3   24[BANK0 ] float 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;  lval            4   32[BANK0 ] unsigned long 
  5741 ;;  exp1            1   36[BANK0 ] unsigned char 
  5742 ;;  sign1           1   31[BANK0 ] unsigned char 
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  4   24[BANK0 ] long 
  5745 ;; Registers used:
  5746 ;;		wreg, status,2, status,0
  5747 ;; Tracked objects:
  5748 ;;		On entry : 1F/0
  5749 ;;		On exit  : 1F/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5752 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5753 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5754 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5755 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5756 ;;Total ram usage:       13 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:    1
  5759 ;; This function calls:
  5760 ;;		Nothing
  5761 ;; This function is called by:
  5762 ;;		_get_30v_current
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           
  5767                           ;psect for function ___fttol
  5768  058D                     ___fttol:	
  5769                           
  5770                           ;incstack = 0
  5771                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5772  058D  0838               	movf	___fttol@f1,w
  5773  058E  00BC               	movwf	??___fttol
  5774  058F  0839               	movf	___fttol@f1+1,w
  5775  0590  00BD               	movwf	??___fttol+1
  5776  0591  083A               	movf	___fttol@f1+2,w
  5777  0592  00BE               	movwf	??___fttol+2
  5778  0593  1003               	clrc
  5779  0594  0D3D               	rlf	??___fttol+1,w
  5780  0595  0D3E               	rlf	??___fttol+2,w
  5781  0596  00C4               	movwf	___fttol@exp1
  5782  0597  0844               	movf	___fttol@exp1,w
  5783  0598  1D03               	btfss	3,2
  5784  0599  2D9F               	goto	l2895
  5785  059A                     l2893:	
  5786  059A  01B8               	clrf	?___fttol
  5787  059B  01B9               	clrf	?___fttol+1
  5788  059C  01BA               	clrf	?___fttol+2
  5789  059D  01BB               	clrf	?___fttol+3
  5790  059E  0008               	return
  5791  059F                     l2895:	
  5792  059F  0838               	movf	___fttol@f1,w
  5793  05A0  00BC               	movwf	??___fttol
  5794  05A1  0839               	movf	___fttol@f1+1,w
  5795  05A2  00BD               	movwf	??___fttol+1
  5796  05A3  083A               	movf	___fttol@f1+2,w
  5797  05A4  00BE               	movwf	??___fttol+2
  5798  05A5  3017               	movlw	23
  5799  05A6                     u2635:	
  5800  05A6  36BE               	lsrf	??___fttol+2,f
  5801  05A7  0CBD               	rrf	??___fttol+1,f
  5802  05A8  0CBC               	rrf	??___fttol,f
  5803  05A9  0B89               	decfsz	9,f
  5804  05AA  2DA6               	goto	u2635
  5805  05AB  083C               	movf	??___fttol,w
  5806  05AC  00BF               	movwf	___fttol@sign1
  5807  05AD  17B9               	bsf	___fttol@f1+1,7
  5808  05AE  01BA               	clrf	___fttol@f1+2
  5809  05AF  0838               	movf	___fttol@f1,w
  5810  05B0  00C0               	movwf	___fttol@lval
  5811  05B1  0839               	movf	___fttol@f1+1,w
  5812  05B2  00C1               	movwf	___fttol@lval+1
  5813  05B3  083A               	movf	___fttol@f1+2,w
  5814  05B4  00C2               	movwf	___fttol@lval+2
  5815  05B5  308E               	movlw	142
  5816  05B6  01C3               	clrf	___fttol@lval+3
  5817  05B7  02C4               	subwf	___fttol@exp1,f
  5818  05B8  1FC4               	btfss	___fttol@exp1,7
  5819  05B9  2DC6               	goto	l2915
  5820  05BA  0844               	movf	___fttol@exp1,w
  5821  05BB  3A80               	xorlw	128
  5822  05BC  3E8F               	addlw	143
  5823  05BD  1C03               	btfss	3,0
  5824  05BE  2D9A               	goto	l2893
  5825  05BF                     l2911:	
  5826  05BF  36C3               	lsrf	___fttol@lval+3,f
  5827  05C0  0CC2               	rrf	___fttol@lval+2,f
  5828  05C1  0CC1               	rrf	___fttol@lval+1,f
  5829  05C2  0CC0               	rrf	___fttol@lval,f
  5830  05C3  0FC4               	incfsz	___fttol@exp1,f
  5831  05C4  2DBF               	goto	l2911
  5832  05C5  2DD3               	goto	l2923
  5833  05C6                     l2915:	
  5834  05C6  3018               	movlw	24
  5835  05C7  0244               	subwf	___fttol@exp1,w
  5836  05C8  1803               	btfsc	3,0
  5837  05C9  2D9A               	goto	l2893
  5838  05CA                     l2921:	
  5839  05CA  0844               	movf	___fttol@exp1,w
  5840  05CB  1903               	btfsc	3,2
  5841  05CC  2DD3               	goto	l2923
  5842  05CD  35C0               	lslf	___fttol@lval,f
  5843  05CE  0DC1               	rlf	___fttol@lval+1,f
  5844  05CF  0DC2               	rlf	___fttol@lval+2,f
  5845  05D0  0DC3               	rlf	___fttol@lval+3,f
  5846  05D1  03C4               	decf	___fttol@exp1,f
  5847  05D2  2DCA               	goto	l2921
  5848  05D3                     l2923:	
  5849  05D3  083F               	movf	___fttol@sign1,w
  5850  05D4  1903               	btfsc	3,2
  5851  05D5  2DE1               	goto	l2927
  5852  05D6  09C0               	comf	___fttol@lval,f
  5853  05D7  09C1               	comf	___fttol@lval+1,f
  5854  05D8  09C2               	comf	___fttol@lval+2,f
  5855  05D9  09C3               	comf	___fttol@lval+3,f
  5856  05DA  0AC0               	incf	___fttol@lval,f
  5857  05DB  1903               	skipnz
  5858  05DC  0AC1               	incf	___fttol@lval+1,f
  5859  05DD  1903               	skipnz
  5860  05DE  0AC2               	incf	___fttol@lval+2,f
  5861  05DF  1903               	skipnz
  5862  05E0  0AC3               	incf	___fttol@lval+3,f
  5863  05E1                     l2927:	
  5864  05E1  0843               	movf	___fttol@lval+3,w
  5865  05E2  00BB               	movwf	?___fttol+3
  5866  05E3  0842               	movf	___fttol@lval+2,w
  5867  05E4  00BA               	movwf	?___fttol+2
  5868  05E5  0841               	movf	___fttol@lval+1,w
  5869  05E6  00B9               	movwf	?___fttol+1
  5870  05E7  0840               	movf	___fttol@lval,w
  5871  05E8  00B8               	movwf	?___fttol
  5872  05E9  0008               	return
  5873  05EA                     __end_of___fttol:	
  5874                           
  5875                           	psect	text24
  5876  0317                     __ptext24:	
  5877 ;; *************** function ___ftmul *****************
  5878 ;; Defined at:
  5879 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;  f1              3    0[BANK0 ] float 
  5882 ;;  f2              3    3[BANK0 ] float 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  5885 ;;  sign            1   11[BANK0 ] unsigned char 
  5886 ;;  cntr            1   10[BANK0 ] unsigned char 
  5887 ;;  exp             1    6[BANK0 ] unsigned char 
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  3    0[BANK0 ] float 
  5890 ;; Registers used:
  5891 ;;		wreg, status,2, status,0, pclath, cstack
  5892 ;; Tracked objects:
  5893 ;;		On entry : 1F/0
  5894 ;;		On exit  : 1F/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5897 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5898 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5899 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5900 ;;      Totals:         3      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5901 ;;Total ram usage:       15 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    2
  5904 ;; This function calls:
  5905 ;;		___ftpack
  5906 ;; This function is called by:
  5907 ;;		_get_30v_current
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           
  5912                           ;psect for function ___ftmul
  5913  0317                     ___ftmul:	
  5914                           
  5915                           ;incstack = 0
  5916                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5917  0317  0820               	movf	___ftmul@f1,w
  5918  0318  00FB               	movwf	??___ftmul
  5919  0319  0821               	movf	___ftmul@f1+1,w
  5920  031A  00FC               	movwf	??___ftmul+1
  5921  031B  0822               	movf	___ftmul@f1+2,w
  5922  031C  00FD               	movwf	??___ftmul+2
  5923  031D  1003               	clrc
  5924  031E  0D7C               	rlf	??___ftmul+1,w
  5925  031F  0D7D               	rlf	??___ftmul+2,w
  5926  0320  00A6               	movwf	___ftmul@exp
  5927  0321  0826               	movf	___ftmul@exp,w
  5928  0322  1D03               	btfss	3,2
  5929  0323  2B28               	goto	l2843
  5930  0324  01A0               	clrf	?___ftmul
  5931  0325  01A1               	clrf	?___ftmul+1
  5932  0326  01A2               	clrf	?___ftmul+2
  5933  0327  0008               	return
  5934  0328                     l2843:	
  5935  0328  0823               	movf	___ftmul@f2,w
  5936  0329  00FB               	movwf	??___ftmul
  5937  032A  0824               	movf	___ftmul@f2+1,w
  5938  032B  00FC               	movwf	??___ftmul+1
  5939  032C  0825               	movf	___ftmul@f2+2,w
  5940  032D  00FD               	movwf	??___ftmul+2
  5941  032E  1003               	clrc
  5942  032F  0D7C               	rlf	??___ftmul+1,w
  5943  0330  0D7D               	rlf	??___ftmul+2,w
  5944  0331  00AB               	movwf	___ftmul@sign
  5945  0332  082B               	movf	___ftmul@sign,w
  5946  0333  1D03               	btfss	3,2
  5947  0334  2B39               	goto	l2847
  5948  0335  01A0               	clrf	?___ftmul
  5949  0336  01A1               	clrf	?___ftmul+1
  5950  0337  01A2               	clrf	?___ftmul+2
  5951  0338  0008               	return
  5952  0339                     l2847:	
  5953  0339  082B               	movf	___ftmul@sign,w
  5954  033A  3E7B               	addlw	123
  5955  033B  07A6               	addwf	___ftmul@exp,f
  5956  033C  0822               	movf	___ftmul@f1+2,w
  5957  033D  00AB               	movwf	___ftmul@sign
  5958  033E  0825               	movf	___ftmul@f2+2,w
  5959  033F  06AB               	xorwf	___ftmul@sign,f
  5960  0340  3080               	movlw	128
  5961  0341  05AB               	andwf	___ftmul@sign,f
  5962  0342  30FF               	movlw	255
  5963  0343  17A1               	bsf	___ftmul@f1+1,7
  5964  0344  17A4               	bsf	___ftmul@f2+1,7
  5965  0345  05A3               	andwf	___ftmul@f2,f
  5966  0346  05A4               	andwf	___ftmul@f2+1,f
  5967  0347  3007               	movlw	7
  5968  0348  01A5               	clrf	___ftmul@f2+2
  5969  0349  01A7               	clrf	___ftmul@f3_as_product
  5970  034A  01A8               	clrf	___ftmul@f3_as_product+1
  5971  034B  01A9               	clrf	___ftmul@f3_as_product+2
  5972  034C  00AA               	movwf	___ftmul@cntr
  5973  034D                     l2865:	
  5974  034D  1C20               	btfss	___ftmul@f1,0
  5975  034E  2B55               	goto	l2869
  5976  034F  0823               	movf	___ftmul@f2,w
  5977  0350  07A7               	addwf	___ftmul@f3_as_product,f
  5978  0351  0824               	movf	___ftmul@f2+1,w
  5979  0352  3DA8               	addwfc	___ftmul@f3_as_product+1,f
  5980  0353  0825               	movf	___ftmul@f2+2,w
  5981  0354  3DA9               	addwfc	___ftmul@f3_as_product+2,f
  5982  0355                     l2869:	
  5983  0355  36A2               	lsrf	___ftmul@f1+2,f
  5984  0356  0CA1               	rrf	___ftmul@f1+1,f
  5985  0357  0CA0               	rrf	___ftmul@f1,f
  5986  0358  35A3               	lslf	___ftmul@f2,f
  5987  0359  0DA4               	rlf	___ftmul@f2+1,f
  5988  035A  0DA5               	rlf	___ftmul@f2+2,f
  5989  035B  0BAA               	decfsz	___ftmul@cntr,f
  5990  035C  2B4D               	goto	l2865
  5991  035D  3009               	movlw	9
  5992  035E  00AA               	movwf	___ftmul@cntr
  5993  035F                     l2877:	
  5994  035F  1C20               	btfss	___ftmul@f1,0
  5995  0360  2B67               	goto	l2881
  5996  0361  0823               	movf	___ftmul@f2,w
  5997  0362  07A7               	addwf	___ftmul@f3_as_product,f
  5998  0363  0824               	movf	___ftmul@f2+1,w
  5999  0364  3DA8               	addwfc	___ftmul@f3_as_product+1,f
  6000  0365  0825               	movf	___ftmul@f2+2,w
  6001  0366  3DA9               	addwfc	___ftmul@f3_as_product+2,f
  6002  0367                     l2881:	
  6003  0367  36A2               	lsrf	___ftmul@f1+2,f
  6004  0368  0CA1               	rrf	___ftmul@f1+1,f
  6005  0369  0CA0               	rrf	___ftmul@f1,f
  6006  036A  36A9               	lsrf	___ftmul@f3_as_product+2,f
  6007  036B  0CA8               	rrf	___ftmul@f3_as_product+1,f
  6008  036C  0CA7               	rrf	___ftmul@f3_as_product,f
  6009  036D  0BAA               	decfsz	___ftmul@cntr,f
  6010  036E  2B5F               	goto	l2877
  6011  036F  0827               	movf	___ftmul@f3_as_product,w
  6012  0370  00F0               	movwf	___ftpack@arg
  6013  0371  0828               	movf	___ftmul@f3_as_product+1,w
  6014  0372  00F1               	movwf	___ftpack@arg+1
  6015  0373  0829               	movf	___ftmul@f3_as_product+2,w
  6016  0374  00F2               	movwf	___ftpack@arg+2
  6017  0375  0826               	movf	___ftmul@exp,w
  6018  0376  00F3               	movwf	___ftpack@exp
  6019  0377  082B               	movf	___ftmul@sign,w
  6020  0378  00F4               	movwf	___ftpack@sign
  6021  0379  2435               	fcall	___ftpack
  6022  037A  0870               	movf	?___ftpack,w
  6023  037B  00A0               	movwf	?___ftmul
  6024  037C  0871               	movf	?___ftpack+1,w
  6025  037D  00A1               	movwf	?___ftmul+1
  6026  037E  0872               	movf	?___ftpack+2,w
  6027  037F  00A2               	movwf	?___ftmul+2
  6028  0380  0008               	return
  6029  0381                     __end_of___ftmul:	
  6030  0381                     __ptext25:	
  6031 ;; *************** function ___ftadd *****************
  6032 ;; Defined at:
  6033 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;  f1              3   12[BANK0 ] float 
  6036 ;;  f2              3   15[BANK0 ] float 
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;  exp1            1   23[BANK0 ] unsigned char 
  6039 ;;  exp2            1   22[BANK0 ] unsigned char 
  6040 ;;  sign            1   21[BANK0 ] unsigned char 
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  3   12[BANK0 ] float 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0, pclath, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 1F/0
  6047 ;;		On exit  : 1F/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6050 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6051 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6052 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6053 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6054 ;;Total ram usage:       12 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:    2
  6057 ;; This function calls:
  6058 ;;		___ftpack
  6059 ;; This function is called by:
  6060 ;;		_get_30v_current
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           
  6065                           ;psect for function ___ftadd
  6066  0381                     ___ftadd:	
  6067                           
  6068                           ;incstack = 0
  6069                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6070  0381  082C               	movf	___ftadd@f1,w
  6071  0382  00B2               	movwf	??___ftadd
  6072  0383  082D               	movf	___ftadd@f1+1,w
  6073  0384  00B3               	movwf	??___ftadd+1
  6074  0385  082E               	movf	___ftadd@f1+2,w
  6075  0386  00B4               	movwf	??___ftadd+2
  6076  0387  1003               	clrc
  6077  0388  0D33               	rlf	??___ftadd+1,w
  6078  0389  0D34               	rlf	??___ftadd+2,w
  6079  038A  00B7               	movwf	___ftadd@exp1
  6080  038B  082F               	movf	___ftadd@f2,w
  6081  038C  00B2               	movwf	??___ftadd
  6082  038D  0830               	movf	___ftadd@f2+1,w
  6083  038E  00B3               	movwf	??___ftadd+1
  6084  038F  0831               	movf	___ftadd@f2+2,w
  6085  0390  00B4               	movwf	??___ftadd+2
  6086  0391  1003               	clrc
  6087  0392  0D33               	rlf	??___ftadd+1,w
  6088  0393  0D34               	rlf	??___ftadd+2,w
  6089  0394  00B6               	movwf	___ftadd@exp2
  6090  0395  0837               	movf	___ftadd@exp1,w
  6091  0396  1903               	btfsc	3,2
  6092  0397  2BA4               	goto	l2769
  6093  0398  0836               	movf	___ftadd@exp2,w
  6094  0399  0237               	subwf	___ftadd@exp1,w
  6095  039A  0836               	movf	___ftadd@exp2,w
  6096  039B  1803               	skipnc
  6097  039C  2BAC               	goto	L16
  6098  039D  00B2               	movwf	??___ftadd
  6099  039E  0837               	movf	___ftadd@exp1,w
  6100  039F  02B2               	subwf	??___ftadd,f
  6101  03A0  3019               	movlw	25
  6102  03A1  0232               	subwf	??___ftadd,w
  6103  03A2  1C03               	skipc
  6104  03A3  2BAB               	goto	l2773
  6105  03A4                     l2769:	
  6106  03A4  082F               	movf	___ftadd@f2,w
  6107  03A5  00AC               	movwf	?___ftadd
  6108  03A6  0830               	movf	___ftadd@f2+1,w
  6109  03A7  00AD               	movwf	?___ftadd+1
  6110  03A8  0831               	movf	___ftadd@f2+2,w
  6111  03A9  00AE               	movwf	?___ftadd+2
  6112  03AA  0008               	return
  6113  03AB                     l2773:	
  6114  03AB  0836               	movf	___ftadd@exp2,w
  6115  03AC                     L16:	
  6116  03AC  1903               	btfsc	3,2
  6117  03AD  0008               	return
  6118  03AE  0837               	movf	___ftadd@exp1,w
  6119  03AF  0236               	subwf	___ftadd@exp2,w
  6120  03B0  1803               	skipnc
  6121  03B1  2BBA               	goto	l2779
  6122  03B2  0837               	movf	___ftadd@exp1,w
  6123  03B3  00B2               	movwf	??___ftadd
  6124  03B4  0836               	movf	___ftadd@exp2,w
  6125  03B5  02B2               	subwf	??___ftadd,f
  6126  03B6  3019               	movlw	25
  6127  03B7  0232               	subwf	??___ftadd,w
  6128  03B8  1803               	btfsc	3,0
  6129  03B9  0008               	return
  6130  03BA                     l2779:	
  6131  03BA  3006               	movlw	6
  6132  03BB  00B5               	movwf	___ftadd@sign
  6133  03BC  1BAE               	btfsc	___ftadd@f1+2,7
  6134  03BD  17B5               	bsf	___ftadd@sign,7
  6135  03BE  1BB1               	btfsc	___ftadd@f2+2,7
  6136  03BF  1735               	bsf	___ftadd@sign,6
  6137  03C0  17AD               	bsf	___ftadd@f1+1,7
  6138  03C1  01AE               	clrf	___ftadd@f1+2
  6139  03C2  17B0               	bsf	___ftadd@f2+1,7
  6140  03C3  01B1               	clrf	___ftadd@f2+2
  6141  03C4  0836               	movf	___ftadd@exp2,w
  6142  03C5  0237               	subwf	___ftadd@exp1,w
  6143  03C6  1803               	skipnc
  6144  03C7  2BDF               	goto	l2801
  6145  03C8                     l2791:	
  6146  03C8  35AF               	lslf	___ftadd@f2,f
  6147  03C9  0DB0               	rlf	___ftadd@f2+1,f
  6148  03CA  0DB1               	rlf	___ftadd@f2+2,f
  6149  03CB  03B6               	decf	___ftadd@exp2,f
  6150  03CC  0836               	movf	___ftadd@exp2,w
  6151  03CD  0637               	xorwf	___ftadd@exp1,w
  6152  03CE  1903               	skipnz
  6153  03CF  2BDA               	goto	l2799
  6154  03D0  03B5               	decf	___ftadd@sign,f
  6155  03D1  0835               	movf	___ftadd@sign,w
  6156  03D2  3907               	andlw	7
  6157  03D3  1903               	btfsc	3,2
  6158  03D4  2BDA               	goto	l2799
  6159  03D5  2BC8               	goto	l2791
  6160  03D6                     l2797:	
  6161  03D6  36AE               	lsrf	___ftadd@f1+2,f
  6162  03D7  0CAD               	rrf	___ftadd@f1+1,f
  6163  03D8  0CAC               	rrf	___ftadd@f1,f
  6164  03D9  0AB7               	incf	___ftadd@exp1,f
  6165  03DA                     l2799:	
  6166  03DA  0837               	movf	___ftadd@exp1,w
  6167  03DB  0636               	xorwf	___ftadd@exp2,w
  6168  03DC  1903               	btfsc	3,2
  6169  03DD  2BF9               	goto	l887
  6170  03DE  2BD6               	goto	l2797
  6171  03DF                     l2801:	
  6172  03DF  0837               	movf	___ftadd@exp1,w
  6173  03E0  0236               	subwf	___ftadd@exp2,w
  6174  03E1  1803               	skipnc
  6175  03E2  2BF9               	goto	l887
  6176  03E3                     l2803:	
  6177  03E3  35AC               	lslf	___ftadd@f1,f
  6178  03E4  0DAD               	rlf	___ftadd@f1+1,f
  6179  03E5  0DAE               	rlf	___ftadd@f1+2,f
  6180  03E6  03B7               	decf	___ftadd@exp1,f
  6181  03E7  0836               	movf	___ftadd@exp2,w
  6182  03E8  0637               	xorwf	___ftadd@exp1,w
  6183  03E9  1903               	skipnz
  6184  03EA  2BF5               	goto	l2811
  6185  03EB  03B5               	decf	___ftadd@sign,f
  6186  03EC  0835               	movf	___ftadd@sign,w
  6187  03ED  3907               	andlw	7
  6188  03EE  1903               	btfsc	3,2
  6189  03EF  2BF5               	goto	l2811
  6190  03F0  2BE3               	goto	l2803
  6191  03F1                     l2809:	
  6192  03F1  36B1               	lsrf	___ftadd@f2+2,f
  6193  03F2  0CB0               	rrf	___ftadd@f2+1,f
  6194  03F3  0CAF               	rrf	___ftadd@f2,f
  6195  03F4  0AB6               	incf	___ftadd@exp2,f
  6196  03F5                     l2811:	
  6197  03F5  0837               	movf	___ftadd@exp1,w
  6198  03F6  0636               	xorwf	___ftadd@exp2,w
  6199  03F7  1D03               	skipz
  6200  03F8  2BF1               	goto	l2809
  6201  03F9                     l887:	
  6202  03F9  1FB5               	btfss	___ftadd@sign,7
  6203  03FA  2C04               	goto	l2817
  6204  03FB  30FF               	movlw	255
  6205  03FC  06AC               	xorwf	___ftadd@f1,f
  6206  03FD  06AD               	xorwf	___ftadd@f1+1,f
  6207  03FE  06AE               	xorwf	___ftadd@f1+2,f
  6208  03FF  0AAC               	incf	___ftadd@f1,f
  6209  0400  1903               	skipnz
  6210  0401  0AAD               	incf	___ftadd@f1+1,f
  6211  0402  1903               	skipnz
  6212  0403  0AAE               	incf	___ftadd@f1+2,f
  6213  0404                     l2817:	
  6214  0404  1F35               	btfss	___ftadd@sign,6
  6215  0405  2C0F               	goto	l2823
  6216  0406  30FF               	movlw	255
  6217  0407  06AF               	xorwf	___ftadd@f2,f
  6218  0408  06B0               	xorwf	___ftadd@f2+1,f
  6219  0409  06B1               	xorwf	___ftadd@f2+2,f
  6220  040A  0AAF               	incf	___ftadd@f2,f
  6221  040B  1903               	skipnz
  6222  040C  0AB0               	incf	___ftadd@f2+1,f
  6223  040D  1903               	skipnz
  6224  040E  0AB1               	incf	___ftadd@f2+2,f
  6225  040F                     l2823:	
  6226  040F  01B5               	clrf	___ftadd@sign
  6227  0410  082C               	movf	___ftadd@f1,w
  6228  0411  07AF               	addwf	___ftadd@f2,f
  6229  0412  082D               	movf	___ftadd@f1+1,w
  6230  0413  3DB0               	addwfc	___ftadd@f2+1,f
  6231  0414  082E               	movf	___ftadd@f1+2,w
  6232  0415  3DB1               	addwfc	___ftadd@f2+2,f
  6233  0416  1FB1               	btfss	___ftadd@f2+2,7
  6234  0417  2C23               	goto	l2835
  6235  0418  30FF               	movlw	255
  6236  0419  06AF               	xorwf	___ftadd@f2,f
  6237  041A  06B0               	xorwf	___ftadd@f2+1,f
  6238  041B  06B1               	xorwf	___ftadd@f2+2,f
  6239  041C  0AAF               	incf	___ftadd@f2,f
  6240  041D  1903               	skipnz
  6241  041E  0AB0               	incf	___ftadd@f2+1,f
  6242  041F  1903               	skipnz
  6243  0420  0AB1               	incf	___ftadd@f2+2,f
  6244  0421  01B5               	clrf	___ftadd@sign
  6245  0422  0AB5               	incf	___ftadd@sign,f
  6246  0423                     l2835:	
  6247  0423  082F               	movf	___ftadd@f2,w
  6248  0424  00F0               	movwf	___ftpack@arg
  6249  0425  0830               	movf	___ftadd@f2+1,w
  6250  0426  00F1               	movwf	___ftpack@arg+1
  6251  0427  0831               	movf	___ftadd@f2+2,w
  6252  0428  00F2               	movwf	___ftpack@arg+2
  6253  0429  0837               	movf	___ftadd@exp1,w
  6254  042A  00F3               	movwf	___ftpack@exp
  6255  042B  0835               	movf	___ftadd@sign,w
  6256  042C  00F4               	movwf	___ftpack@sign
  6257  042D  2435               	fcall	___ftpack
  6258  042E  0870               	movf	?___ftpack,w
  6259  042F  00AC               	movwf	?___ftadd
  6260  0430  0871               	movf	?___ftpack+1,w
  6261  0431  00AD               	movwf	?___ftadd+1
  6262  0432  0872               	movf	?___ftpack+2,w
  6263  0433  00AE               	movwf	?___ftadd+2
  6264  0434  0008               	return
  6265  0435                     __end_of___ftadd:	
  6266  0435                     __ptext26:	
  6267 ;; *************** function ___ftpack *****************
  6268 ;; Defined at:
  6269 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;  arg             3    0[COMMON] unsigned um
  6272 ;;  exp             1    3[COMMON] unsigned char 
  6273 ;;  sign            1    4[COMMON] unsigned char 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  3    0[COMMON] float 
  6278 ;; Registers used:
  6279 ;;		wreg, status,2, status,0
  6280 ;; Tracked objects:
  6281 ;;		On entry : 1F/0
  6282 ;;		On exit  : 1F/0
  6283 ;;		Unchanged: 1F/0
  6284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6285 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6287 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6288 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6289 ;;Total ram usage:        8 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:    1
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		___ftadd
  6296 ;;		___ftmul
  6297 ;;		___lwtoft
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           
  6302                           ;psect for function ___ftpack
  6303  0435                     ___ftpack:	
  6304                           
  6305                           ;incstack = 0
  6306                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6307  0435  0873               	movf	___ftpack@exp,w
  6308  0436  1903               	btfsc	3,2
  6309  0437  2C3D               	goto	l851
  6310  0438  0872               	movf	___ftpack@arg+2,w
  6311  0439  0471               	iorwf	___ftpack@arg+1,w
  6312  043A  0470               	iorwf	___ftpack@arg,w
  6313  043B  1D03               	skipz
  6314  043C  2C45               	goto	l2617
  6315  043D                     l851:	
  6316  043D  01F0               	clrf	?___ftpack
  6317  043E  01F1               	clrf	?___ftpack+1
  6318  043F  01F2               	clrf	?___ftpack+2
  6319  0440  0008               	return
  6320  0441                     l2615:	
  6321  0441  0AF3               	incf	___ftpack@exp,f
  6322  0442  36F2               	lsrf	___ftpack@arg+2,f
  6323  0443  0CF1               	rrf	___ftpack@arg+1,f
  6324  0444  0CF0               	rrf	___ftpack@arg,f
  6325  0445                     l2617:	
  6326  0445  30FE               	movlw	254
  6327  0446  0572               	andwf	___ftpack@arg+2,w
  6328  0447  1903               	btfsc	3,2
  6329  0448  2C53               	goto	l2621
  6330  0449  2C41               	goto	l2615
  6331  044A                     l2619:	
  6332  044A  0AF3               	incf	___ftpack@exp,f
  6333  044B  0AF0               	incf	___ftpack@arg,f
  6334  044C  1903               	skipnz
  6335  044D  0AF1               	incf	___ftpack@arg+1,f
  6336  044E  1903               	skipnz
  6337  044F  0AF2               	incf	___ftpack@arg+2,f
  6338  0450  36F2               	lsrf	___ftpack@arg+2,f
  6339  0451  0CF1               	rrf	___ftpack@arg+1,f
  6340  0452  0CF0               	rrf	___ftpack@arg,f
  6341  0453                     l2621:	
  6342  0453  30FF               	movlw	255
  6343  0454  0572               	andwf	___ftpack@arg+2,w
  6344  0455  1903               	btfsc	3,2
  6345  0456  2C60               	goto	l2625
  6346  0457  2C4A               	goto	l2619
  6347  0458                     l2627:	
  6348  0458  3002               	movlw	2
  6349  0459  0273               	subwf	___ftpack@exp,w
  6350  045A  1C03               	btfss	3,0
  6351  045B  2C62               	goto	l863
  6352  045C  03F3               	decf	___ftpack@exp,f
  6353  045D  35F0               	lslf	___ftpack@arg,f
  6354  045E  0DF1               	rlf	___ftpack@arg+1,f
  6355  045F  0DF2               	rlf	___ftpack@arg+2,f
  6356  0460                     l2625:	
  6357  0460  1FF1               	btfss	___ftpack@arg+1,7
  6358  0461  2C58               	goto	l2627
  6359  0462                     l863:	
  6360  0462  1C73               	btfss	___ftpack@exp,0
  6361  0463  13F1               	bcf	___ftpack@arg+1,7
  6362  0464  36F3               	lsrf	___ftpack@exp,f
  6363  0465  0873               	movf	___ftpack@exp,w
  6364  0466  00F7               	movwf	??___ftpack+2
  6365  0467  01F6               	clrf	??___ftpack+1
  6366  0468  01F5               	clrf	??___ftpack
  6367  0469  0875               	movf	??___ftpack,w
  6368  046A  04F0               	iorwf	___ftpack@arg,f
  6369  046B  0876               	movf	??___ftpack+1,w
  6370  046C  04F1               	iorwf	___ftpack@arg+1,f
  6371  046D  0877               	movf	??___ftpack+2,w
  6372  046E  04F2               	iorwf	___ftpack@arg+2,f
  6373  046F  0874               	movf	___ftpack@sign,w
  6374  0470  1D03               	btfss	3,2
  6375  0471  17F2               	bsf	___ftpack@arg+2,7
  6376  0472  0008               	return
  6377  0473                     __end_of___ftpack:	
  6378                           
  6379                           	psect	text28
  6380  00A6                     __ptext28:	
  6381 ;; *************** function _Vout_set *****************
  6382 ;; Defined at:
  6383 ;;		line 1873 in file "Multi_RX_testjig_v1.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  Volts           2    4[COMMON] int 
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;  digi_step       4    6[COMMON] unsigned long 
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  1    wreg      void 
  6390 ;; Registers used:
  6391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/4
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6398 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6400 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6401 ;;Total ram usage:        6 bytes
  6402 ;; Hardware stack levels used:    1
  6403 ;; Hardware stack levels required when called:    3
  6404 ;; This function calls:
  6405 ;;		_digitalpot
  6406 ;; This function is called by:
  6407 ;;		_main
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           
  6412                           ;psect for function _Vout_set
  6413  00A6                     _Vout_set:	
  6414                           
  6415                           ;Multi_RX_testjig_v1.c: 1881: switch(Volts)
  6416                           
  6417                           ;incstack = 0
  6418                           ; Regs used in _Vout_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6419  00A6  28CB               	goto	l3041
  6420  00A7                     l3009:	
  6421                           
  6422                           ;Multi_RX_testjig_v1.c: 1884: digi_step = 20;
  6423  00A7  3014               	movlw	20
  6424  00A8  28C4               	goto	L30
  6425  00A9                     l3011:	
  6426                           ;Multi_RX_testjig_v1.c: 1885: break;
  6427                           
  6428                           
  6429                           ;Multi_RX_testjig_v1.c: 1887: digi_step = 39;
  6430  00A9  3027               	movlw	39
  6431  00AA  28C4               	goto	L30
  6432  00AB                     l3013:	
  6433                           ;Multi_RX_testjig_v1.c: 1888: break;
  6434                           
  6435                           
  6436                           ;Multi_RX_testjig_v1.c: 1890: digi_step = 52;
  6437  00AB  3034               	movlw	52
  6438  00AC  28C4               	goto	L30
  6439  00AD                     l3015:	
  6440                           ;Multi_RX_testjig_v1.c: 1891: break;
  6441                           
  6442                           
  6443                           ;Multi_RX_testjig_v1.c: 1893: digi_step = 62;
  6444  00AD  303E               	movlw	62
  6445  00AE  28C4               	goto	L30
  6446  00AF                     l3017:	
  6447                           ;Multi_RX_testjig_v1.c: 1894: break;
  6448                           
  6449                           
  6450                           ;Multi_RX_testjig_v1.c: 1896: digi_step = 70;
  6451  00AF  3046               	movlw	70
  6452  00B0  28C4               	goto	L30
  6453  00B1                     l3019:	
  6454                           ;Multi_RX_testjig_v1.c: 1897: break;
  6455                           
  6456                           
  6457                           ;Multi_RX_testjig_v1.c: 1899: digi_step = 76;
  6458  00B1  304C               	movlw	76
  6459  00B2  28C4               	goto	L30
  6460  00B3                     l3021:	
  6461                           ;Multi_RX_testjig_v1.c: 1900: break;
  6462                           
  6463                           
  6464                           ;Multi_RX_testjig_v1.c: 1902: digi_step = 81;
  6465  00B3  3051               	movlw	81
  6466  00B4  28C4               	goto	L30
  6467  00B5                     l3023:	
  6468                           ;Multi_RX_testjig_v1.c: 1903: break;
  6469                           
  6470                           
  6471                           ;Multi_RX_testjig_v1.c: 1905: digi_step = 85;
  6472  00B5  3055               	movlw	85
  6473  00B6  28C4               	goto	L30
  6474  00B7                     l3025:	
  6475                           ;Multi_RX_testjig_v1.c: 1906: break;
  6476                           
  6477                           
  6478                           ;Multi_RX_testjig_v1.c: 1908: digi_step = 88;
  6479  00B7  3058               	movlw	88
  6480  00B8  28C4               	goto	L30
  6481  00B9                     l3027:	
  6482                           ;Multi_RX_testjig_v1.c: 1909: break;
  6483                           
  6484                           
  6485                           ;Multi_RX_testjig_v1.c: 1911: digi_step = 91;
  6486  00B9  305B               	movlw	91
  6487  00BA  28C4               	goto	L30
  6488  00BB                     l3029:	
  6489                           ;Multi_RX_testjig_v1.c: 1912: break;
  6490                           
  6491                           
  6492                           ;Multi_RX_testjig_v1.c: 1914: digi_step = 94;
  6493  00BB  305E               	movlw	94
  6494  00BC  28C4               	goto	L30
  6495  00BD                     l3031:	
  6496                           ;Multi_RX_testjig_v1.c: 1915: break;
  6497                           
  6498                           
  6499                           ;Multi_RX_testjig_v1.c: 1917: digi_step = 96;
  6500  00BD  3060               	movlw	96
  6501  00BE  28C4               	goto	L30
  6502  00BF                     l3033:	
  6503                           ;Multi_RX_testjig_v1.c: 1918: break;
  6504                           
  6505                           
  6506                           ;Multi_RX_testjig_v1.c: 1920: digi_step = 98;
  6507  00BF  3062               	movlw	98
  6508  00C0  28C4               	goto	L30
  6509  00C1                     l3035:	
  6510                           ;Multi_RX_testjig_v1.c: 1921: break;
  6511                           
  6512                           
  6513                           ;Multi_RX_testjig_v1.c: 1923: digi_step = 102;
  6514  00C1  3066               	movlw	102
  6515  00C2  28C4               	goto	L30
  6516  00C3                     l3037:	
  6517                           ;Multi_RX_testjig_v1.c: 1924: break;
  6518                           
  6519                           
  6520                           ;Multi_RX_testjig_v1.c: 1926: digi_step = 112;
  6521  00C3  3070               	movlw	112
  6522  00C4                     L30:	
  6523  00C4  00F6               	movwf	Vout_set@digi_step
  6524  00C5  28C7               	goto	L31
  6525  00C6                     l662:	
  6526                           ;Multi_RX_testjig_v1.c: 1928: default:
  6527                           
  6528                           ;Multi_RX_testjig_v1.c: 1927: break;
  6529                           
  6530                           
  6531                           ;Multi_RX_testjig_v1.c: 1929: digi_step = 0;
  6532  00C6  01F6               	clrf	Vout_set@digi_step
  6533  00C7                     L31:	
  6534  00C7  01F7               	clrf	Vout_set@digi_step+1
  6535  00C8  01F8               	clrf	Vout_set@digi_step+2
  6536  00C9  01F9               	clrf	Vout_set@digi_step+3
  6537                           
  6538                           ;Multi_RX_testjig_v1.c: 1930: break;
  6539  00CA  28DD               	goto	l3043
  6540  00CB                     l3041:	
  6541                           
  6542                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6543                           ; Switch size 1, requested type "speed"
  6544                           ; Number of cases is 1, Range of values is 0 to 0
  6545                           ; switch strategies available:
  6546                           ; Name         Instructions Cycles
  6547                           ; simple_byte            4     3 (average)
  6548                           ; direct_byte            8     6 (fixed)
  6549                           ; jumptable            260     6 (fixed)
  6550                           ;	Chosen strategy is simple_byte
  6551  00CB  0875               	movf	Vout_set@Volts+1,w
  6552  00CC  3A00               	xorlw	0	; case 0
  6553  00CD  1903               	skipnz
  6554  00CE  28D0               	goto	l3897
  6555  00CF  28C6               	goto	l662
  6556  00D0                     l3897:	
  6557                           
  6558                           ; Switch size 1, requested type "speed"
  6559                           ; Number of cases is 15, Range of values is 6 to 25
  6560                           ; switch strategies available:
  6561                           ; Name         Instructions Cycles
  6562                           ; direct_byte           49     9 (fixed)
  6563                           ; simple_byte           46    24 (average)
  6564                           ; jumptable            263     9 (fixed)
  6565                           ;	Chosen strategy is direct_byte
  6566  00D0  0874               	movf	Vout_set@Volts,w
  6567  00D1  3EFA               	addlw	-6
  6568  00D2  1C03               	skipc
  6569  00D3  28C6               	goto	l662
  6570  00D4  0084               	movwf	4
  6571  00D5  3014               	movlw	20
  6572  00D6  0204               	subwf	4,w
  6573  00D7  1803               	skipnc
  6574  00D8  28C6               	goto	l662
  6575  00D9  3186               	movlp	high S3899
  6576  00DA  3504               	lslf	4,w
  6577  00DB  3E00               	addlw	low S3899
  6578  00DC  0082               	movwf	2
  6579  00DD                     l3043:	
  6580                           
  6581                           ;Multi_RX_testjig_v1.c: 1937: digitalpot((unsigned char)digi_step);
  6582  00DD  0876               	movf	Vout_set@digi_step,w
  6583  00DE  29AF               	ljmp	_digitalpot
  6584  00DF                     __end_of_Vout_set:	
  6585  00DF                     __ptext15:	
  6586 ;; *************** function _lcd_set_cursor *****************
  6587 ;; Defined at:
  6588 ;;		line 1092 in file "Multi_RX_testjig_v1.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;  row             1    wreg     unsigned char 
  6591 ;;  col             1    1[COMMON] unsigned char 
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;  row             1    2[COMMON] unsigned char 
  6594 ;;  LCD_position    1    3[COMMON] unsigned char 
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  1    wreg      void 
  6597 ;; Registers used:
  6598 ;;		wreg, status,2, status,0, pclath, cstack
  6599 ;; Tracked objects:
  6600 ;;		On entry : 1F/0
  6601 ;;		On exit  : 1F/4
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6604 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6607 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6608 ;;Total ram usage:        3 bytes
  6609 ;; Hardware stack levels used:    1
  6610 ;; Hardware stack levels required when called:    2
  6611 ;; This function calls:
  6612 ;;		_i2c_Start
  6613 ;;		_i2c_Stop
  6614 ;;		_i2c_Write
  6615 ;; This function is called by:
  6616 ;;		_lcd_print_int
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           
  6621                           ;psect for function _lcd_set_cursor
  6622  00DF                     _lcd_set_cursor:	
  6623                           
  6624                           ;incstack = 0
  6625                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  6626                           ;lcd_set_cursor@row stored from wreg
  6627  00DF  00F2               	movwf	lcd_set_cursor@row
  6628                           
  6629                           ;Multi_RX_testjig_v1.c: 1095: col--;
  6630  00E0  03F1               	decf	lcd_set_cursor@col,f
  6631                           
  6632                           ;Multi_RX_testjig_v1.c: 1096: i2c_Start();
  6633  00E1  2226  3180         	fcall	_i2c_Start
  6634                           
  6635                           ;Multi_RX_testjig_v1.c: 1097: i2c_Write(0x7C);
  6636  00E3  307C               	movlw	124
  6637  00E4  221A  3180         	fcall	_i2c_Write
  6638                           
  6639                           ;Multi_RX_testjig_v1.c: 1098: i2c_Write(0x00);
  6640  00E6  3000               	movlw	0
  6641  00E7  221A  3180         	fcall	_i2c_Write
  6642                           
  6643                           ;Multi_RX_testjig_v1.c: 1099: LCD_position = col & 0b11001111;
  6644  00E9  0871               	movf	lcd_set_cursor@col,w
  6645  00EA  00F3               	movwf	lcd_set_cursor@LCD_position
  6646  00EB  30CF               	movlw	207
  6647  00EC  05F3               	andwf	lcd_set_cursor@LCD_position,f
  6648                           
  6649                           ;Multi_RX_testjig_v1.c: 1100: if(row == 1)
  6650  00ED  0B72               	decfsz	lcd_set_cursor@row,w
  6651  00EE  28F1               	goto	l2705
  6652                           
  6653                           ;Multi_RX_testjig_v1.c: 1101: LCD_position |= 0b10000000;
  6654  00EF  17F3               	bsf	lcd_set_cursor@LCD_position,7
  6655  00F0  28F3               	goto	l2707
  6656  00F1                     l2705:	
  6657                           
  6658                           ;Multi_RX_testjig_v1.c: 1102: else
  6659                           ;Multi_RX_testjig_v1.c: 1103: LCD_position |= 0b11000000;
  6660  00F1  30C0               	movlw	192
  6661  00F2  04F3               	iorwf	lcd_set_cursor@LCD_position,f
  6662  00F3                     l2707:	
  6663                           
  6664                           ;Multi_RX_testjig_v1.c: 1104: i2c_Write(LCD_position);
  6665  00F3  0873               	movf	lcd_set_cursor@LCD_position,w
  6666  00F4  221A  3180         	fcall	_i2c_Write
  6667                           
  6668                           ;Multi_RX_testjig_v1.c: 1105: i2c_Stop();
  6669  00F6  2A2B               	ljmp	l2497
  6670  00F7                     __end_of_lcd_set_cursor:	
  6671  00F7                     __ptext11:	
  6672 ;; *************** function _lcd_print_int *****************
  6673 ;; Defined at:
  6674 ;;		line 1667 in file "Multi_RX_testjig_v1.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  number          2    0[BANK0 ] unsigned int 
  6677 ;;  pos             2    2[BANK0 ] unsigned int 
  6678 ;;  decimal         1    4[BANK0 ] unsigned char 
  6679 ;;  ten_thou_dig    1    5[BANK0 ] unsigned char 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;		None
  6682 ;; Return value:  Size  Location     Type
  6683 ;;                  1    wreg      void 
  6684 ;; Registers used:
  6685 ;;		wreg, status,2, status,0, pclath, cstack
  6686 ;; Tracked objects:
  6687 ;;		On entry : 1F/0
  6688 ;;		On exit  : 1F/4
  6689 ;;		Unchanged: 0/0
  6690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6691 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6694 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6695 ;;Total ram usage:        6 bytes
  6696 ;; Hardware stack levels used:    1
  6697 ;; Hardware stack levels required when called:    3
  6698 ;; This function calls:
  6699 ;;		_i2c_write_char
  6700 ;;		_lcd_set_cursor
  6701 ;;		_ten_thou_conv
  6702 ;; This function is called by:
  6703 ;;		_main
  6704 ;; This function uses a non-reentrant model
  6705 ;;
  6706                           
  6707                           
  6708                           ;psect for function _lcd_print_int
  6709  00F7                     _lcd_print_int:	
  6710                           
  6711                           ;Multi_RX_testjig_v1.c: 1669: lcd_set_cursor(2, pos + 1 - ten_thou_digit);
  6712                           
  6713                           ;incstack = 0
  6714                           ; Regs used in _lcd_print_int: [wreg+status,2+status,0+pclath+cstack]
  6715  00F7  0825               	movf	lcd_print_int@ten_thou_digit,w
  6716  00F8  0222               	subwf	lcd_print_int@pos,w
  6717  00F9  3E01               	addlw	1
  6718  00FA  00F1               	movwf	lcd_set_cursor@col
  6719  00FB  3002               	movlw	2
  6720  00FC  20DF  3180         	fcall	_lcd_set_cursor
  6721                           
  6722                           ;Multi_RX_testjig_v1.c: 1670: ten_thou_conv(number);
  6723  00FE  0020               	movlb	0	; select bank0
  6724  00FF  0821               	movf	lcd_print_int@number+1,w
  6725  0100  00F7               	movwf	ten_thou_conv@n+1
  6726  0101  0820               	movf	lcd_print_int@number,w
  6727  0102  00F6               	movwf	ten_thou_conv@n
  6728  0103  2230  3180         	fcall	_ten_thou_conv
  6729                           
  6730                           ;Multi_RX_testjig_v1.c: 1671: if(ten_thou_digit)
  6731  0105  0825               	movf	lcd_print_int@ten_thou_digit,w
  6732  0106  1903               	btfsc	3,2
  6733  0107  2913               	goto	l3119
  6734                           
  6735                           ;Multi_RX_testjig_v1.c: 1672: {
  6736                           ;Multi_RX_testjig_v1.c: 1673: if(ten_thou != 0 || decimal & 0x10)
  6737  0108  0864               	movf	_ten_thou,w
  6738  0109  1D03               	btfss	3,2
  6739  010A  290D               	goto	l3115
  6740  010B  1E24               	btfss	lcd_print_int@decimal,4
  6741  010C  2910               	goto	l3117
  6742  010D                     l3115:	
  6743                           
  6744                           ;Multi_RX_testjig_v1.c: 1674: i2c_write_char(ten_thou + 48);
  6745  010D  0864               	movf	_ten_thou,w
  6746  010E  3E30               	addlw	48
  6747  010F  2911               	goto	L12
  6748  0110                     l3117:	
  6749                           
  6750                           ;Multi_RX_testjig_v1.c: 1675: else i2c_write_char(' ');
  6751  0110  3020               	movlw	32
  6752  0111                     L12:	
  6753  0111  216B  3180         	fcall	_i2c_write_char
  6754  0113                     l3119:	
  6755                           
  6756                           ;Multi_RX_testjig_v1.c: 1676: }
  6757                           ;Multi_RX_testjig_v1.c: 1677: if(decimal & 0x10)i2c_write_char('.');
  6758  0113  0020               	movlb	0	; select bank0
  6759  0114  1E24               	btfss	lcd_print_int@decimal,4
  6760  0115  2919               	goto	l3123
  6761  0116  302E               	movlw	46
  6762  0117  216B  3180         	fcall	_i2c_write_char
  6763  0119                     l3123:	
  6764                           
  6765                           ;Multi_RX_testjig_v1.c: 1678: if(thou != 0 || ten_thou != 0 || decimal & 0x18)
  6766  0119  0020               	movlb	0	; select bank0
  6767  011A  0866               	movf	_thou,w
  6768  011B  1D03               	btfss	3,2
  6769  011C  2924               	goto	l3129
  6770  011D  0864               	movf	_ten_thou,w
  6771  011E  1D03               	btfss	3,2
  6772  011F  2924               	goto	l3129
  6773  0120  0824               	movf	lcd_print_int@decimal,w
  6774  0121  3918               	andlw	24
  6775  0122  1903               	btfsc	3,2
  6776  0123  2927               	goto	l3131
  6777  0124                     l3129:	
  6778                           
  6779                           ;Multi_RX_testjig_v1.c: 1679: i2c_write_char(thou + 48);
  6780  0124  0866               	movf	_thou,w
  6781  0125  3E30               	addlw	48
  6782  0126  2928               	goto	L13
  6783  0127                     l3131:	
  6784                           
  6785                           ;Multi_RX_testjig_v1.c: 1680: else i2c_write_char(' ');
  6786  0127  3020               	movlw	32
  6787  0128                     L13:	
  6788  0128  216B  3180         	fcall	_i2c_write_char
  6789                           
  6790                           ;Multi_RX_testjig_v1.c: 1681: if(decimal & 0x08)i2c_write_char('.');
  6791  012A  0020               	movlb	0	; select bank0
  6792  012B  1DA4               	btfss	lcd_print_int@decimal,3
  6793  012C  2930               	goto	l3137
  6794  012D  302E               	movlw	46
  6795  012E  216B  3180         	fcall	_i2c_write_char
  6796  0130                     l3137:	
  6797                           
  6798                           ;Multi_RX_testjig_v1.c: 1682: if(hund != 0 || thou != 0 || ten_thou != 0 || decimal & 0x
      +                          1C)
  6799  0130  0020               	movlb	0	; select bank0
  6800  0131  0861               	movf	_hund,w
  6801  0132  1D03               	btfss	3,2
  6802  0133  293E               	goto	l3145
  6803  0134  0866               	movf	_thou,w
  6804  0135  1D03               	btfss	3,2
  6805  0136  293E               	goto	l3145
  6806  0137  0864               	movf	_ten_thou,w
  6807  0138  1D03               	btfss	3,2
  6808  0139  293E               	goto	l3145
  6809  013A  0824               	movf	lcd_print_int@decimal,w
  6810  013B  391C               	andlw	28
  6811  013C  1903               	btfsc	3,2
  6812  013D  2941               	goto	l3147
  6813  013E                     l3145:	
  6814                           
  6815                           ;Multi_RX_testjig_v1.c: 1683: i2c_write_char(hund + 48);
  6816  013E  0861               	movf	_hund,w
  6817  013F  3E30               	addlw	48
  6818  0140  2942               	goto	L14
  6819  0141                     l3147:	
  6820                           
  6821                           ;Multi_RX_testjig_v1.c: 1684: else i2c_write_char(' ');
  6822  0141  3020               	movlw	32
  6823  0142                     L14:	
  6824  0142  216B  3180         	fcall	_i2c_write_char
  6825                           
  6826                           ;Multi_RX_testjig_v1.c: 1685: if(decimal & 0x04)i2c_write_char('.');
  6827  0144  0020               	movlb	0	; select bank0
  6828  0145  1D24               	btfss	lcd_print_int@decimal,2
  6829  0146  294A               	goto	l3153
  6830  0147  302E               	movlw	46
  6831  0148  216B  3180         	fcall	_i2c_write_char
  6832  014A                     l3153:	
  6833                           
  6834                           ;Multi_RX_testjig_v1.c: 1686: if(ten != 0 || hund != 0 || thou != 0 || ten_thou != 0 || 
      +                          decimal & 0x1E)
  6835  014A  0020               	movlb	0	; select bank0
  6836  014B  0863               	movf	_ten,w
  6837  014C  1D03               	btfss	3,2
  6838  014D  295B               	goto	l3163
  6839  014E  0861               	movf	_hund,w
  6840  014F  1D03               	btfss	3,2
  6841  0150  295B               	goto	l3163
  6842  0151  0866               	movf	_thou,w
  6843  0152  1D03               	btfss	3,2
  6844  0153  295B               	goto	l3163
  6845  0154  0864               	movf	_ten_thou,w
  6846  0155  1D03               	btfss	3,2
  6847  0156  295B               	goto	l3163
  6848  0157  0824               	movf	lcd_print_int@decimal,w
  6849  0158  391E               	andlw	30
  6850  0159  1903               	btfsc	3,2
  6851  015A  295E               	goto	l3165
  6852  015B                     l3163:	
  6853                           
  6854                           ;Multi_RX_testjig_v1.c: 1687: i2c_write_char(ten + 48);
  6855  015B  0863               	movf	_ten,w
  6856  015C  3E30               	addlw	48
  6857  015D  295F               	goto	L15
  6858  015E                     l3165:	
  6859                           
  6860                           ;Multi_RX_testjig_v1.c: 1688: else i2c_write_char(' ');
  6861  015E  3020               	movlw	32
  6862  015F                     L15:	
  6863  015F  216B  3180         	fcall	_i2c_write_char
  6864                           
  6865                           ;Multi_RX_testjig_v1.c: 1689: if(decimal & 0x02)i2c_write_char('.');
  6866  0161  0020               	movlb	0	; select bank0
  6867  0162  1CA4               	btfss	lcd_print_int@decimal,1
  6868  0163  2967               	goto	l581
  6869  0164  302E               	movlw	46
  6870  0165  216B  3180         	fcall	_i2c_write_char
  6871  0167                     l581:	
  6872                           
  6873                           ;Multi_RX_testjig_v1.c: 1690: i2c_write_char(unit + 48);
  6874  0167  0020               	movlb	0	; select bank0
  6875  0168  0865               	movf	_unit,w
  6876  0169  3E30               	addlw	48
  6877  016A  296B               	ljmp	_i2c_write_char
  6878  016B                     __end_of_lcd_print_int:	
  6879  016B                     __ptext16:	
  6880 ;; *************** function _i2c_write_char *****************
  6881 ;; Defined at:
  6882 ;;		line 1008 in file "Multi_RX_testjig_v1.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  char_data       1    wreg     unsigned char 
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  char_data       1    1[COMMON] unsigned char 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  1    wreg      void 
  6889 ;; Registers used:
  6890 ;;		wreg, status,2, status,0, pclath, cstack
  6891 ;; Tracked objects:
  6892 ;;		On entry : 1F/0
  6893 ;;		On exit  : 1F/4
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6900 ;;Total ram usage:        1 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; Hardware stack levels required when called:    2
  6903 ;; This function calls:
  6904 ;;		_i2c_Start
  6905 ;;		_i2c_Stop
  6906 ;;		_i2c_Write
  6907 ;; This function is called by:
  6908 ;;		_lcd_print_int
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           
  6913                           ;psect for function _i2c_write_char
  6914  016B                     _i2c_write_char:	
  6915                           
  6916                           ;incstack = 0
  6917                           ; Regs used in _i2c_write_char: [wreg+status,2+status,0+pclath+cstack]
  6918                           ;i2c_write_char@char_data stored from wreg
  6919  016B  00F1               	movwf	i2c_write_char@char_data
  6920                           
  6921                           ;Multi_RX_testjig_v1.c: 1010: i2c_Start();
  6922  016C  2226  3180         	fcall	_i2c_Start
  6923                           
  6924                           ;Multi_RX_testjig_v1.c: 1011: i2c_Write(0x7C);
  6925  016E  307C               	movlw	124
  6926  016F  221A  3180         	fcall	_i2c_Write
  6927                           
  6928                           ;Multi_RX_testjig_v1.c: 1012: i2c_Write(0x40);
  6929  0171  3040               	movlw	64
  6930  0172  221A  3180         	fcall	_i2c_Write
  6931                           
  6932                           ;Multi_RX_testjig_v1.c: 1013: i2c_Write(char_data);
  6933  0174  0871               	movf	i2c_write_char@char_data,w
  6934  0175  221A  3180         	fcall	_i2c_Write
  6935                           
  6936                           ;Multi_RX_testjig_v1.c: 1014: i2c_Stop();
  6937  0177  2A2B               	ljmp	l2497
  6938  0178                     __end_of_i2c_write_char:	
  6939  0178                     __ptext4:	
  6940 ;; *************** function _i2c_second_line *****************
  6941 ;; Defined at:
  6942 ;;		line 1082 in file "Multi_RX_testjig_v1.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;		None
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;		None
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  1    wreg      void 
  6949 ;; Registers used:
  6950 ;;		wreg, status,2, status,0, pclath, cstack
  6951 ;; Tracked objects:
  6952 ;;		On entry : 1F/4
  6953 ;;		On exit  : 1F/4
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6958 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6959 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6960 ;;Total ram usage:        1 bytes
  6961 ;; Hardware stack levels used:    1
  6962 ;; Hardware stack levels required when called:    2
  6963 ;; This function calls:
  6964 ;;		_i2c_Start
  6965 ;;		_i2c_Stop
  6966 ;;		_i2c_Write
  6967 ;; This function is called by:
  6968 ;;		_print_error
  6969 ;;		_print_screen
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           
  6974                           ;psect for function _i2c_second_line
  6975  0178                     _i2c_second_line:	
  6976                           
  6977                           ;Multi_RX_testjig_v1.c: 1084: i2c_Start();
  6978                           
  6979                           ;incstack = 0
  6980                           ; Regs used in _i2c_second_line: [wreg+status,2+status,0+pclath+cstack]
  6981  0178  2226  3180         	fcall	_i2c_Start
  6982                           
  6983                           ;Multi_RX_testjig_v1.c: 1085: i2c_Write(0x7C);
  6984  017A  307C               	movlw	124
  6985  017B  221A  3180         	fcall	_i2c_Write
  6986                           
  6987                           ;Multi_RX_testjig_v1.c: 1086: i2c_Write(0x00);
  6988  017D  3000               	movlw	0
  6989  017E  221A  3180         	fcall	_i2c_Write
  6990                           
  6991                           ;Multi_RX_testjig_v1.c: 1087: i2c_Write(0xC0);
  6992  0180  30C0               	movlw	192
  6993  0181  221A  3180         	fcall	_i2c_Write
  6994                           
  6995                           ;Multi_RX_testjig_v1.c: 1088: _delay((unsigned long)((27)*(16000000/4000000.0)));
  6996  0183  3023               	movlw	35
  6997  0184  00F1               	movwf	??_i2c_second_line
  6998  0185                     u4387:	
  6999  0185  0BF1               	decfsz	??_i2c_second_line,f
  7000  0186  2985               	goto	u4387
  7001  0187  3200               	nop2	;nop
  7002                           
  7003                           ;Multi_RX_testjig_v1.c: 1089: i2c_Stop();
  7004  0188  2A2B               	ljmp	l2497
  7005  0189                     __end_of_i2c_second_line:	
  7006  0189                     __ptext5:	
  7007 ;; *************** function _i2c_first_line *****************
  7008 ;; Defined at:
  7009 ;;		line 1072 in file "Multi_RX_testjig_v1.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;		None
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;		None
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      void 
  7016 ;; Registers used:
  7017 ;;		wreg, status,2, status,0, pclath, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 1F/4
  7020 ;;		On exit  : 1F/4
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7025 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7026 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7027 ;;Total ram usage:        1 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; Hardware stack levels required when called:    2
  7030 ;; This function calls:
  7031 ;;		_i2c_Start
  7032 ;;		_i2c_Stop
  7033 ;;		_i2c_Write
  7034 ;; This function is called by:
  7035 ;;		_print_error
  7036 ;;		_print_screen
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           
  7041                           ;psect for function _i2c_first_line
  7042  0189                     _i2c_first_line:	
  7043                           
  7044                           ;Multi_RX_testjig_v1.c: 1074: i2c_Start();
  7045                           
  7046                           ;incstack = 0
  7047                           ; Regs used in _i2c_first_line: [wreg+status,2+status,0+pclath+cstack]
  7048  0189  2226  3180         	fcall	_i2c_Start
  7049                           
  7050                           ;Multi_RX_testjig_v1.c: 1075: i2c_Write(0x7C);
  7051  018B  307C               	movlw	124
  7052  018C  221A  3180         	fcall	_i2c_Write
  7053                           
  7054                           ;Multi_RX_testjig_v1.c: 1076: i2c_Write(0x00);
  7055  018E  3000               	movlw	0
  7056  018F  221A  3180         	fcall	_i2c_Write
  7057                           
  7058                           ;Multi_RX_testjig_v1.c: 1077: i2c_Write(0x80);
  7059  0191  3080               	movlw	128
  7060  0192  221A  3180         	fcall	_i2c_Write
  7061                           
  7062                           ;Multi_RX_testjig_v1.c: 1078: _delay((unsigned long)((27)*(16000000/4000000.0)));
  7063  0194  3023               	movlw	35
  7064  0195  00F1               	movwf	??_i2c_first_line
  7065  0196                     u4397:	
  7066  0196  0BF1               	decfsz	??_i2c_first_line,f
  7067  0197  2996               	goto	u4397
  7068  0198  3200               	nop2	;nop
  7069                           
  7070                           ;Multi_RX_testjig_v1.c: 1079: i2c_Stop();
  7071  0199  2A2B               	ljmp	l2497
  7072  019A                     __end_of_i2c_first_line:	
  7073  019A                     __ptext7:	
  7074 ;; *************** function _clear_lcd *****************
  7075 ;; Defined at:
  7076 ;;		line 1062 in file "Multi_RX_testjig_v1.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;		None
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;		None
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  1    wreg      void 
  7083 ;; Registers used:
  7084 ;;		wreg, status,2, status,0, pclath, cstack
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/2
  7087 ;;		On exit  : 1F/4
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7092 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7093 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7094 ;;Total ram usage:        2 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; Hardware stack levels required when called:    2
  7097 ;; This function calls:
  7098 ;;		_i2c_Start
  7099 ;;		_i2c_Stop
  7100 ;;		_i2c_Write
  7101 ;; This function is called by:
  7102 ;;		_print_error
  7103 ;;		_print_screen
  7104 ;; This function uses a non-reentrant model
  7105 ;;
  7106                           
  7107                           
  7108                           ;psect for function _clear_lcd
  7109  019A                     _clear_lcd:	
  7110                           
  7111                           ;Multi_RX_testjig_v1.c: 1064: i2c_Start();
  7112                           
  7113                           ;incstack = 0
  7114                           ; Regs used in _clear_lcd: [wreg+status,2+status,0+pclath+cstack]
  7115  019A  2226  3180         	fcall	_i2c_Start
  7116                           
  7117                           ;Multi_RX_testjig_v1.c: 1065: i2c_Write(0x7C);
  7118  019C  307C               	movlw	124
  7119  019D  221A  3180         	fcall	_i2c_Write
  7120                           
  7121                           ;Multi_RX_testjig_v1.c: 1066: i2c_Write(0x00);
  7122  019F  3000               	movlw	0
  7123  01A0  221A  3180         	fcall	_i2c_Write
  7124                           
  7125                           ;Multi_RX_testjig_v1.c: 1067: i2c_Write(0x01);
  7126  01A2  3001               	movlw	1
  7127  01A3  221A  3180         	fcall	_i2c_Write
  7128                           
  7129                           ;Multi_RX_testjig_v1.c: 1068: _delay((unsigned long)((2)*(16000000/4000.0)));
  7130  01A5  300B               	movlw	11
  7131  01A6  00F2               	movwf	??_clear_lcd+1
  7132  01A7  3062               	movlw	98
  7133  01A8  00F1               	movwf	??_clear_lcd
  7134  01A9                     u4407:	
  7135  01A9  0BF1               	decfsz	??_clear_lcd,f
  7136  01AA  29A9               	goto	u4407
  7137  01AB  0BF2               	decfsz	??_clear_lcd+1,f
  7138  01AC  29A9               	goto	u4407
  7139  01AD  0000               	nop
  7140                           
  7141                           ;Multi_RX_testjig_v1.c: 1069: i2c_Stop();
  7142  01AE  2A2B               	ljmp	l2497
  7143  01AF                     __end_of_clear_lcd:	
  7144  01AF                     __ptext29:	
  7145 ;; *************** function _digitalpot *****************
  7146 ;; Defined at:
  7147 ;;		line 1940 in file "Multi_RX_testjig_v1.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;  value           1    wreg     unsigned char 
  7150 ;; Auto vars:     Size  Location     Type
  7151 ;;  value           1    3[COMMON] unsigned char 
  7152 ;; Return value:  Size  Location     Type
  7153 ;;                  1    wreg      void 
  7154 ;; Registers used:
  7155 ;;		wreg, status,2, status,0, pclath, cstack
  7156 ;; Tracked objects:
  7157 ;;		On entry : 0/4
  7158 ;;		On exit  : 0/0
  7159 ;;		Unchanged: 0/0
  7160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7163 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7164 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7165 ;;Total ram usage:        3 bytes
  7166 ;; Hardware stack levels used:    1
  7167 ;; Hardware stack levels required when called:    2
  7168 ;; This function calls:
  7169 ;;		_i2c_Start
  7170 ;;		_i2c_Stop
  7171 ;;		_i2c_Write
  7172 ;; This function is called by:
  7173 ;;		_Vout_set
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           
  7178                           ;psect for function _digitalpot
  7179  01AF                     _digitalpot:	
  7180                           
  7181                           ;incstack = 0
  7182                           ; Regs used in _digitalpot: [wreg+status,2+status,0+pclath+cstack]
  7183                           ;digitalpot@value stored from wreg
  7184  01AF  00F3               	movwf	digitalpot@value
  7185                           
  7186                           ;Multi_RX_testjig_v1.c: 1942: i2c_Start();
  7187  01B0  2226  3180         	fcall	_i2c_Start
  7188                           
  7189                           ;Multi_RX_testjig_v1.c: 1943: i2c_Write(0x5C);
  7190  01B2  305C               	movlw	92
  7191  01B3  221A  3180         	fcall	_i2c_Write
  7192                           
  7193                           ;Multi_RX_testjig_v1.c: 1944: i2c_Write(0b00000000);
  7194  01B5  3000               	movlw	0
  7195  01B6  221A  3180         	fcall	_i2c_Write
  7196                           
  7197                           ;Multi_RX_testjig_v1.c: 1945: i2c_Write(value);
  7198  01B8  0873               	movf	digitalpot@value,w
  7199  01B9  221A  3180         	fcall	_i2c_Write
  7200                           
  7201                           ;Multi_RX_testjig_v1.c: 1946: i2c_Stop();
  7202  01BB  222B  3180         	fcall	_i2c_Stop
  7203                           
  7204                           ;Multi_RX_testjig_v1.c: 1947: _delay((unsigned long)((20)*(16000000/4000.0)));
  7205  01BD  3068               	movlw	104
  7206  01BE  00F2               	movwf	??_digitalpot+1
  7207  01BF  30E4               	movlw	228
  7208  01C0  00F1               	movwf	??_digitalpot
  7209  01C1                     u4437:	
  7210  01C1  0BF1               	decfsz	??_digitalpot,f
  7211  01C2  29C1               	goto	u4437
  7212  01C3  0BF2               	decfsz	??_digitalpot+1,f
  7213  01C4  29C1               	goto	u4437
  7214  01C5  0000               	nop
  7215  01C6  0008               	return
  7216  01C7                     __end_of_digitalpot:	
  7217  01C7                     __ptext6:	
  7218 ;; *************** function _i2c_Write_string *****************
  7219 ;; Defined at:
  7220 ;;		line 994 in file "Multi_RX_testjig_v1.c"
  7221 ;; Parameters:    Size  Location     Type
  7222 ;;  data            2    1[COMMON] PTR const unsigned char 
  7223 ;;		 -> STR_170(17), STR_169(12), STR_168(13), STR_167(17), 
  7224 ;;		 -> STR_166(14), STR_165(17), STR_164(8), STR_163(17), 
  7225 ;;		 -> STR_162(8), STR_161(9), STR_160(14), STR_159(13), 
  7226 ;;		 -> STR_158(11), STR_157(10), STR_156(13), STR_155(16), 
  7227 ;;		 -> STR_154(4), STR_153(12), STR_152(10), STR_151(10), 
  7228 ;;		 -> STR_150(4), STR_149(12), STR_148(2), STR_147(15), 
  7229 ;;		 -> STR_146(4), STR_145(12), STR_144(15), STR_143(8), 
  7230 ;;		 -> STR_142(17), STR_141(8), STR_140(16), STR_139(8), 
  7231 ;;		 -> STR_138(7), STR_137(8), STR_136(10), STR_135(8), 
  7232 ;;		 -> STR_134(13), STR_133(13), STR_132(14), STR_131(13), 
  7233 ;;		 -> STR_130(4), STR_129(12), STR_128(4), STR_127(12), 
  7234 ;;		 -> STR_126(5), STR_125(8), STR_124(9), STR_123(8), 
  7235 ;;		 -> STR_122(13), STR_121(12), STR_120(16), STR_119(12), 
  7236 ;;		 -> STR_118(14), STR_117(12), STR_116(4), STR_115(12), 
  7237 ;;		 -> STR_114(4), STR_113(12), STR_112(4), STR_111(8), 
  7238 ;;		 -> STR_110(4), STR_109(12), STR_108(9), STR_107(10), 
  7239 ;;		 -> STR_106(3), STR_105(12), STR_104(7), STR_103(9), 
  7240 ;;		 -> STR_102(4), STR_101(12), STR_100(4), STR_99(12), 
  7241 ;;		 -> STR_98(15), STR_97(9), STR_96(16), STR_95(9), 
  7242 ;;		 -> STR_94(3), STR_93(12), STR_92(9), STR_91(10), 
  7243 ;;		 -> STR_90(3), STR_89(9), STR_88(1), STR_87(9), 
  7244 ;;		 -> STR_86(3), STR_85(12), STR_84(9), STR_83(10), 
  7245 ;;		 -> STR_82(3), STR_81(12), STR_80(7), STR_79(9), 
  7246 ;;		 -> STR_78(4), STR_77(12), STR_76(4), STR_75(12), 
  7247 ;;		 -> STR_74(15), STR_73(9), STR_72(16), STR_71(9), 
  7248 ;;		 -> STR_70(3), STR_69(12), STR_68(9), STR_67(10), 
  7249 ;;		 -> STR_66(3), STR_65(9), STR_64(1), STR_63(9), 
  7250 ;;		 -> STR_62(9), STR_61(19), STR_60(3), STR_59(12), 
  7251 ;;		 -> STR_58(7), STR_57(16), STR_56(3), STR_55(12), 
  7252 ;;		 -> STR_54(9), STR_53(19), STR_52(5), STR_51(11), 
  7253 ;;		 -> STR_50(1), STR_49(11), STR_48(9), STR_47(12), 
  7254 ;;		 -> STR_46(9), STR_45(12), STR_44(6), STR_43(13), 
  7255 ;;		 -> STR_42(3), STR_41(12), STR_40(12), STR_39(13), 
  7256 ;;		 -> STR_38(3), STR_37(12), STR_36(6), STR_35(13), 
  7257 ;;		 -> STR_34(9), STR_33(19), STR_32(6), STR_31(12), 
  7258 ;;		 -> STR_30(13), STR_29(12), STR_28(1), STR_27(19), 
  7259 ;;		 -> STR_26(12), STR_25(14), STR_24(11), STR_23(14), 
  7260 ;;		 -> STR_22(13), STR_21(15), STR_20(13), STR_19(15), 
  7261 ;;		 -> STR_18(13), STR_17(14), STR_16(13), STR_15(14), 
  7262 ;;		 -> STR_14(12), STR_13(14), STR_12(11), STR_11(14), 
  7263 ;;		 -> STR_10(13), STR_9(14), STR_8(13), STR_7(14), 
  7264 ;;		 -> STR_6(1), STR_5(15), STR_4(14), STR_3(9), 
  7265 ;;		 -> STR_2(17), STR_1(9), 
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;		None
  7268 ;; Return value:  Size  Location     Type
  7269 ;;                  1    wreg      void 
  7270 ;; Registers used:
  7271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7272 ;; Tracked objects:
  7273 ;;		On entry : 1F/4
  7274 ;;		On exit  : 1F/4
  7275 ;;		Unchanged: 0/0
  7276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7279 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7280 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7281 ;;Total ram usage:        3 bytes
  7282 ;; Hardware stack levels used:    1
  7283 ;; Hardware stack levels required when called:    2
  7284 ;; This function calls:
  7285 ;;		_i2c_Start
  7286 ;;		_i2c_Stop
  7287 ;;		_i2c_Write
  7288 ;; This function is called by:
  7289 ;;		_print_error
  7290 ;;		_print_screen
  7291 ;; This function uses a non-reentrant model
  7292 ;;
  7293                           
  7294                           
  7295                           ;psect for function _i2c_Write_string
  7296  01C7                     _i2c_Write_string:	
  7297  01C7                     l2499:	
  7298                           ;incstack = 0
  7299                           ; Regs used in _i2c_Write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7300                           
  7301                           
  7302                           ;Multi_RX_testjig_v1.c: 996: i2c_Start();
  7303  01C7  2226  3180         	fcall	_i2c_Start
  7304                           
  7305                           ;Multi_RX_testjig_v1.c: 997: i2c_Write(0x7C);
  7306  01C9  307C               	movlw	124
  7307  01CA  221A  3180         	fcall	_i2c_Write
  7308                           
  7309                           ;Multi_RX_testjig_v1.c: 998: i2c_Write(0x40);
  7310  01CC  3040               	movlw	64
  7311  01CD  221A  3180         	fcall	_i2c_Write
  7312  01CF                     l2509:	
  7313                           ;Multi_RX_testjig_v1.c: 1000: while(*data != (0))
  7314                           
  7315  01CF  0871               	movf	i2c_Write_string@data,w
  7316  01D0  0084               	movwf	4
  7317  01D1  0872               	movf	i2c_Write_string@data+1,w
  7318  01D2  0085               	movwf	5
  7319  01D3  0012               	moviw fsr0++
  7320  01D4  1903               	btfsc	3,2
  7321  01D5  29E1               	goto	l2511
  7322                           
  7323                           ;Multi_RX_testjig_v1.c: 1001: {
  7324                           ;Multi_RX_testjig_v1.c: 1002: i2c_Write(*data);
  7325  01D6  0871               	movf	i2c_Write_string@data,w
  7326  01D7  0084               	movwf	4
  7327  01D8  0872               	movf	i2c_Write_string@data+1,w
  7328  01D9  0085               	movwf	5
  7329  01DA  0800               	movf	0,w	;code access
  7330  01DB  221A  3180         	fcall	_i2c_Write
  7331                           
  7332                           ;Multi_RX_testjig_v1.c: 1003: data++;
  7333  01DD  0AF1               	incf	i2c_Write_string@data,f
  7334  01DE  1903               	skipnz
  7335  01DF  0AF2               	incf	i2c_Write_string@data+1,f
  7336  01E0  29CF               	goto	l2509
  7337  01E1                     l2511:	
  7338                           
  7339                           ;Multi_RX_testjig_v1.c: 1004: }
  7340                           ;Multi_RX_testjig_v1.c: 1005: i2c_Stop();
  7341  01E1  2A2B               	ljmp	l2497
  7342  01E2                     __end_of_i2c_Write_string:	
  7343  01E2                     __ptext17:	
  7344 ;; *************** function _init_i2c_lcd_5v *****************
  7345 ;; Defined at:
  7346 ;;		line 1018 in file "Multi_RX_testjig_v1.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;  contrast        1    wreg     unsigned char 
  7349 ;;  single1_doub    1    1[COMMON] unsigned char 
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;  contrast        1    4[COMMON] unsigned char 
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  1    wreg      void 
  7354 ;; Registers used:
  7355 ;;		wreg, status,2, status,0, pclath, cstack
  7356 ;; Tracked objects:
  7357 ;;		On entry : 1F/4
  7358 ;;		On exit  : 1F/4
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7361 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7363 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7364 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7365 ;;Total ram usage:        4 bytes
  7366 ;; Hardware stack levels used:    1
  7367 ;; Hardware stack levels required when called:    2
  7368 ;; This function calls:
  7369 ;;		_i2c_Start
  7370 ;;		_i2c_Stop
  7371 ;;		_i2c_Write
  7372 ;; This function is called by:
  7373 ;;		_main
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           
  7378                           ;psect for function _init_i2c_lcd_5v
  7379  01E2                     _init_i2c_lcd_5v:	
  7380                           
  7381                           ;incstack = 0
  7382                           ; Regs used in _init_i2c_lcd_5v: [wreg+status,2+status,0+pclath+cstack]
  7383                           ;init_i2c_lcd_5v@contrast stored from wreg
  7384  01E2  00F4               	movwf	init_i2c_lcd_5v@contrast
  7385                           
  7386                           ;Multi_RX_testjig_v1.c: 1020: i2c_Start();
  7387  01E3  2226  3180         	fcall	_i2c_Start
  7388                           
  7389                           ;Multi_RX_testjig_v1.c: 1021: i2c_Write(0x7C);
  7390  01E5  307C               	movlw	124
  7391  01E6  221A  3180         	fcall	_i2c_Write
  7392                           
  7393                           ;Multi_RX_testjig_v1.c: 1022: i2c_Write(0x00);
  7394  01E8  3000               	movlw	0
  7395  01E9  221A  3180         	fcall	_i2c_Write
  7396                           
  7397                           ;Multi_RX_testjig_v1.c: 1023: i2c_Write(0x39);
  7398  01EB  3039               	movlw	57
  7399  01EC  221A  3180         	fcall	_i2c_Write
  7400                           
  7401                           ;Multi_RX_testjig_v1.c: 1024: i2c_Write(0x1C);
  7402  01EE  301C               	movlw	28
  7403  01EF  221A  3180         	fcall	_i2c_Write
  7404                           
  7405                           ;Multi_RX_testjig_v1.c: 1025: i2c_Write(0x70 | contrast);
  7406  01F1  0874               	movf	init_i2c_lcd_5v@contrast,w
  7407  01F2  3870               	iorlw	112
  7408  01F3  221A  3180         	fcall	_i2c_Write
  7409                           
  7410                           ;Multi_RX_testjig_v1.c: 1026: i2c_Write(0x50);
  7411  01F5  3050               	movlw	80
  7412  01F6  221A  3180         	fcall	_i2c_Write
  7413                           
  7414                           ;Multi_RX_testjig_v1.c: 1027: i2c_Write(0x6C);
  7415  01F8  306C               	movlw	108
  7416  01F9  221A  3180         	fcall	_i2c_Write
  7417                           
  7418                           ;Multi_RX_testjig_v1.c: 1028: if(single1_double2 == 1)
  7419  01FB  0B71               	decfsz	init_i2c_lcd_5v@single1_double2,w
  7420  01FC  2A00               	goto	l2973
  7421                           
  7422                           ;Multi_RX_testjig_v1.c: 1029: i2c_Write(0x38);
  7423  01FD  3038               	movlw	56
  7424  01FE  221A  3180         	fcall	_i2c_Write
  7425  0200                     l2973:	
  7426                           
  7427                           ;Multi_RX_testjig_v1.c: 1030: if(single1_double2 == 2)
  7428  0200  3002               	movlw	2
  7429  0201  0671               	xorwf	init_i2c_lcd_5v@single1_double2,w
  7430  0202  1D03               	btfss	3,2
  7431  0203  2A07               	goto	l485
  7432                           
  7433                           ;Multi_RX_testjig_v1.c: 1031: i2c_Write(0x34);
  7434  0204  3034               	movlw	52
  7435  0205  221A  3180         	fcall	_i2c_Write
  7436  0207                     l485:	
  7437                           
  7438                           ;Multi_RX_testjig_v1.c: 1032: i2c_Write(0x0C);
  7439  0207  300C               	movlw	12
  7440  0208  221A  3180         	fcall	_i2c_Write
  7441                           
  7442                           ;Multi_RX_testjig_v1.c: 1033: i2c_Write(0x06);
  7443  020A  3006               	movlw	6
  7444  020B  221A  3180         	fcall	_i2c_Write
  7445                           
  7446                           ;Multi_RX_testjig_v1.c: 1034: i2c_Write(0x01);
  7447  020D  3001               	movlw	1
  7448  020E  221A  3180         	fcall	_i2c_Write
  7449                           
  7450                           ;Multi_RX_testjig_v1.c: 1035: _delay((unsigned long)((2)*(16000000/4000.0)));
  7451  0210  300B               	movlw	11
  7452  0211  00F3               	movwf	??_init_i2c_lcd_5v+1
  7453  0212  3062               	movlw	98
  7454  0213  00F2               	movwf	??_init_i2c_lcd_5v
  7455  0214                     u4417:	
  7456  0214  0BF2               	decfsz	??_init_i2c_lcd_5v,f
  7457  0215  2A14               	goto	u4417
  7458  0216  0BF3               	decfsz	??_init_i2c_lcd_5v+1,f
  7459  0217  2A14               	goto	u4417
  7460  0218  0000               	nop
  7461                           
  7462                           ;Multi_RX_testjig_v1.c: 1036: i2c_Stop();
  7463  0219  2A2B               	ljmp	l2497
  7464  021A                     __end_of_init_i2c_lcd_5v:	
  7465  021A                     __ptext30:	
  7466 ;; *************** function _i2c_Write *****************
  7467 ;; Defined at:
  7468 ;;		line 980 in file "Multi_RX_testjig_v1.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  data            1    wreg     unsigned char 
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  data            1    0[COMMON] unsigned char 
  7473 ;; Return value:  Size  Location     Type
  7474 ;;                  1    wreg      void 
  7475 ;; Registers used:
  7476 ;;		wreg, status,2
  7477 ;; Tracked objects:
  7478 ;;		On entry : 1F/4
  7479 ;;		On exit  : 1F/4
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7483 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7485 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7486 ;;Total ram usage:        1 bytes
  7487 ;; Hardware stack levels used:    1
  7488 ;; Hardware stack levels required when called:    1
  7489 ;; This function calls:
  7490 ;;		Nothing
  7491 ;; This function is called by:
  7492 ;;		_i2c_Write_string
  7493 ;;		_i2c_write_char
  7494 ;;		_init_i2c_lcd_5v
  7495 ;;		_clear_lcd
  7496 ;;		_i2c_first_line
  7497 ;;		_i2c_second_line
  7498 ;;		_lcd_set_cursor
  7499 ;;		_digitalpot
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           
  7504                           ;psect for function _i2c_Write
  7505  021A                     _i2c_Write:	
  7506                           
  7507                           ;incstack = 0
  7508                           ; Regs used in _i2c_Write: [wreg+status,2]
  7509                           ;i2c_Write@data stored from wreg
  7510  021A  00F0               	movwf	i2c_Write@data
  7511                           
  7512                           ;Multi_RX_testjig_v1.c: 982: SSP1BUF = data;
  7513  021B  0870               	movf	i2c_Write@data,w
  7514  021C  0091               	movwf	17	;volatile
  7515  021D                     l460:	
  7516                           ;Multi_RX_testjig_v1.c: 983: while(SSP1STATbits.BF == 1);
  7517                           
  7518  021D  1814               	btfsc	20,0	;volatile
  7519  021E  2A1D               	goto	l460
  7520  021F                     l2493:	
  7521  021F  0816               	movf	22,w	;volatile
  7522  0220  391F               	andlw	31
  7523  0221  1D03               	btfss	3,2
  7524  0222  2A1F               	goto	l2493
  7525  0223  1D14               	btfss	20,2	;volatile
  7526  0224  0008               	return
  7527  0225  2A1F               	goto	l2493
  7528  0226                     __end_of_i2c_Write:	
  7529  0226                     __ptext32:	
  7530 ;; *************** function _i2c_Start *****************
  7531 ;; Defined at:
  7532 ;;		line 971 in file "Multi_RX_testjig_v1.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;		None
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;		None
  7537 ;; Return value:  Size  Location     Type
  7538 ;;                  1    wreg      void 
  7539 ;; Registers used:
  7540 ;;		None
  7541 ;; Tracked objects:
  7542 ;;		On entry : 0/4
  7543 ;;		On exit  : 1F/4
  7544 ;;		Unchanged: 0/0
  7545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7550 ;;Total ram usage:        0 bytes
  7551 ;; Hardware stack levels used:    1
  7552 ;; Hardware stack levels required when called:    1
  7553 ;; This function calls:
  7554 ;;		Nothing
  7555 ;; This function is called by:
  7556 ;;		_i2c_Write_string
  7557 ;;		_i2c_write_char
  7558 ;;		_init_i2c_lcd_5v
  7559 ;;		_clear_lcd
  7560 ;;		_i2c_first_line
  7561 ;;		_i2c_second_line
  7562 ;;		_lcd_set_cursor
  7563 ;;		_digitalpot
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           
  7568                           ;psect for function _i2c_Start
  7569  0226                     _i2c_Start:	
  7570                           
  7571                           ;Multi_RX_testjig_v1.c: 974: SSP1CON2bits.SEN = 1;
  7572                           
  7573                           ;incstack = 0
  7574                           ; Regs used in _i2c_Start: []
  7575  0226  0024               	movlb	4	; select bank4
  7576  0227  1416               	bsf	22,0	;volatile
  7577  0228                     l454:	
  7578                           ;Multi_RX_testjig_v1.c: 976: while(SSP1CON2bits.SEN == 1);
  7579                           
  7580  0228  1C16               	btfss	22,0	;volatile
  7581  0229  0008               	return
  7582  022A  2A28               	goto	l454
  7583  022B                     __end_of_i2c_Start:	
  7584  022B                     __ptext31:	
  7585 ;; *************** function _i2c_Stop *****************
  7586 ;; Defined at:
  7587 ;;		line 987 in file "Multi_RX_testjig_v1.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;		None
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		None
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/4
  7598 ;;		On exit  : 1F/4
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7605 ;;Total ram usage:        0 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; Hardware stack levels required when called:    1
  7608 ;; This function calls:
  7609 ;;		Nothing
  7610 ;; This function is called by:
  7611 ;;		_i2c_Write_string
  7612 ;;		_i2c_write_char
  7613 ;;		_init_i2c_lcd_5v
  7614 ;;		_clear_lcd
  7615 ;;		_i2c_first_line
  7616 ;;		_i2c_second_line
  7617 ;;		_lcd_set_cursor
  7618 ;;		_digitalpot
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622                           
  7623                           ;psect for function _i2c_Stop
  7624  022B                     _i2c_Stop:	
  7625  022B                     l2497:	
  7626                           ;incstack = 0
  7627                           ; Regs used in _i2c_Stop: []
  7628                           
  7629                           
  7630                           ;Multi_RX_testjig_v1.c: 989: SSP1CON2bits.PEN = 1;
  7631  022B  0024               	movlb	4	; select bank4
  7632  022C  1516               	bsf	22,2	;volatile
  7633  022D                     l469:	
  7634                           ;Multi_RX_testjig_v1.c: 990: while(SSP1CON2bits.PEN == 1);
  7635                           
  7636  022D  1D16               	btfss	22,2	;volatile
  7637  022E  0008               	return
  7638  022F  2A2D               	goto	l469
  7639  0230                     __end_of_i2c_Stop:	
  7640  0230                     __ptext12:	
  7641 ;; *************** function _ten_thou_conv *****************
  7642 ;; Defined at:
  7643 ;;		line 1347 in file "Multi_RX_testjig_v1.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;  n               2    6[COMMON] int 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  1    wreg      void 
  7650 ;; Registers used:
  7651 ;;		wreg, status,2, status,0, pclath, cstack
  7652 ;; Tracked objects:
  7653 ;;		On entry : 1F/0
  7654 ;;		On exit  : 1F/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7659 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7660 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7661 ;;Total ram usage:        5 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; Hardware stack levels required when called:    2
  7664 ;; This function calls:
  7665 ;;		___bmul
  7666 ;;		___wmul
  7667 ;; This function is called by:
  7668 ;;		_lcd_print_int
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672                           
  7673                           ;psect for function _ten_thou_conv
  7674  0230                     _ten_thou_conv:	
  7675                           
  7676                           ;Multi_RX_testjig_v1.c: 1349: unit = n & 0x1F;
  7677                           
  7678                           ;incstack = 0
  7679                           ; Regs used in _ten_thou_conv: [wreg+status,2+status,0+pclath+cstack]
  7680  0230  0876               	movf	ten_thou_conv@n,w
  7681  0231  00E5               	movwf	_unit
  7682  0232  301F               	movlw	31
  7683  0233  05E5               	andwf	_unit,f
  7684                           
  7685                           ;Multi_RX_testjig_v1.c: 1350: ten = (n >> 5) & 0xF;
  7686  0234  0877               	movf	ten_thou_conv@n+1,w
  7687  0235  00F9               	movwf	??_ten_thou_conv+1
  7688  0236  0876               	movf	ten_thou_conv@n,w
  7689  0237  00F8               	movwf	??_ten_thou_conv
  7690  0238  3005               	movlw	5
  7691  0239  00FA               	movwf	??_ten_thou_conv+2
  7692  023A                     u2315:	
  7693  023A  0D79               	rlf	??_ten_thou_conv+1,w
  7694  023B  0CF9               	rrf	??_ten_thou_conv+1,f
  7695  023C  0CF8               	rrf	??_ten_thou_conv,f
  7696  023D  0BFA               	decfsz	??_ten_thou_conv+2,f
  7697  023E  2A3A               	goto	u2315
  7698  023F  0878               	movf	??_ten_thou_conv,w
  7699  0240  00E3               	movwf	_ten
  7700  0241  300F               	movlw	15
  7701  0242  05E3               	andwf	_ten,f
  7702                           
  7703                           ;Multi_RX_testjig_v1.c: 1351: hund = (n >> 9) & 0xF;
  7704  0243  0877               	movf	ten_thou_conv@n+1,w
  7705  0244  00F9               	movwf	??_ten_thou_conv+1
  7706  0245  0876               	movf	ten_thou_conv@n,w
  7707  0246  00F8               	movwf	??_ten_thou_conv
  7708  0247  3009               	movlw	9
  7709  0248  00FA               	movwf	??_ten_thou_conv+2
  7710  0249                     u2325:	
  7711  0249  0D79               	rlf	??_ten_thou_conv+1,w
  7712  024A  0CF9               	rrf	??_ten_thou_conv+1,f
  7713  024B  0CF8               	rrf	??_ten_thou_conv,f
  7714  024C  0BFA               	decfsz	??_ten_thou_conv+2,f
  7715  024D  2A49               	goto	u2325
  7716  024E  0878               	movf	??_ten_thou_conv,w
  7717  024F  00E1               	movwf	_hund
  7718  0250  300F               	movlw	15
  7719  0251  05E1               	andwf	_hund,f
  7720                           
  7721                           ;Multi_RX_testjig_v1.c: 1352: thou = (n >> 13) & 0x7;
  7722  0252  0877               	movf	ten_thou_conv@n+1,w
  7723  0253  00F9               	movwf	??_ten_thou_conv+1
  7724  0254  0876               	movf	ten_thou_conv@n,w
  7725  0255  00F8               	movwf	??_ten_thou_conv
  7726  0256  300D               	movlw	13
  7727  0257  00FA               	movwf	??_ten_thou_conv+2
  7728  0258                     u2335:	
  7729  0258  0D79               	rlf	??_ten_thou_conv+1,w
  7730  0259  0CF9               	rrf	??_ten_thou_conv+1,f
  7731  025A  0CF8               	rrf	??_ten_thou_conv,f
  7732  025B  0BFA               	decfsz	??_ten_thou_conv+2,f
  7733  025C  2A58               	goto	u2335
  7734  025D  0878               	movf	??_ten_thou_conv,w
  7735  025E  00E6               	movwf	_thou
  7736  025F  3007               	movlw	7
  7737  0260  05E6               	andwf	_thou,f
  7738                           
  7739                           ;Multi_RX_testjig_v1.c: 1354: unit = 2 * (thou + hund + ten) + unit;
  7740  0261  0866               	movf	_thou,w
  7741  0262  0761               	addwf	_hund,w
  7742  0263  0763               	addwf	_ten,w
  7743  0264  0709               	addwf	9,w
  7744  0265  07E5               	addwf	_unit,f
  7745                           
  7746                           ;Multi_RX_testjig_v1.c: 1355: ten_thou = (unit * 0x67) >> 10;
  7747  0266  0865               	movf	_unit,w
  7748  0267  00F0               	movwf	___wmul@multiplier
  7749  0268  3067               	movlw	103
  7750  0269  01F1               	clrf	___wmul@multiplier+1
  7751  026A  00F2               	movwf	___wmul@multiplicand
  7752  026B  01F3               	clrf	___wmul@multiplicand+1
  7753  026C  2302  3180         	fcall	___wmul
  7754  026E  0870               	movf	?___wmul,w
  7755  026F  00F8               	movwf	??_ten_thou_conv
  7756  0270  0871               	movf	?___wmul+1,w
  7757  0271  00F9               	movwf	??_ten_thou_conv+1
  7758  0272  300A               	movlw	10
  7759  0273  00FA               	movwf	??_ten_thou_conv+2
  7760  0274                     u2345:	
  7761  0274  0D79               	rlf	??_ten_thou_conv+1,w
  7762  0275  0CF9               	rrf	??_ten_thou_conv+1,f
  7763  0276  0CF8               	rrf	??_ten_thou_conv,f
  7764  0277  0BFA               	decfsz	??_ten_thou_conv+2,f
  7765  0278  2A74               	goto	u2345
  7766  0279  0878               	movf	??_ten_thou_conv,w
  7767  027A  00E4               	movwf	_ten_thou
  7768                           
  7769                           ;Multi_RX_testjig_v1.c: 1356: unit = unit - 10 * ten_thou;
  7770  027B  30F6               	movlw	246
  7771  027C  00F0               	movwf	___bmul@multiplicand
  7772  027D  0864               	movf	_ten_thou,w
  7773  027E  22DF  3180         	fcall	___bmul
  7774  0280  07E5               	addwf	_unit,f
  7775                           
  7776                           ;Multi_RX_testjig_v1.c: 1358: ten = 9 * thou + hund + 3 * ten + ten_thou;
  7777  0281  3009               	movlw	9
  7778  0282  00F0               	movwf	___bmul@multiplicand
  7779  0283  0866               	movf	_thou,w
  7780  0284  22DF  3180         	fcall	___bmul
  7781  0286  00F8               	movwf	??_ten_thou_conv
  7782  0287  0863               	movf	_ten,w
  7783  0288  0763               	addwf	_ten,w
  7784  0289  0763               	addwf	_ten,w
  7785  028A  0778               	addwf	??_ten_thou_conv,w
  7786  028B  0761               	addwf	_hund,w
  7787  028C  0764               	addwf	_ten_thou,w
  7788  028D  00E3               	movwf	_ten
  7789                           
  7790                           ;Multi_RX_testjig_v1.c: 1359: ten_thou = (ten * 0x67) >> 10;
  7791  028E  00F0               	movwf	___wmul@multiplier
  7792  028F  3067               	movlw	103
  7793  0290  01F1               	clrf	___wmul@multiplier+1
  7794  0291  00F2               	movwf	___wmul@multiplicand
  7795  0292  01F3               	clrf	___wmul@multiplicand+1
  7796  0293  2302  3180         	fcall	___wmul
  7797  0295  0870               	movf	?___wmul,w
  7798  0296  00F8               	movwf	??_ten_thou_conv
  7799  0297  0871               	movf	?___wmul+1,w
  7800  0298  00F9               	movwf	??_ten_thou_conv+1
  7801  0299  300A               	movlw	10
  7802  029A  00FA               	movwf	??_ten_thou_conv+2
  7803  029B                     u2355:	
  7804  029B  0D79               	rlf	??_ten_thou_conv+1,w
  7805  029C  0CF9               	rrf	??_ten_thou_conv+1,f
  7806  029D  0CF8               	rrf	??_ten_thou_conv,f
  7807  029E  0BFA               	decfsz	??_ten_thou_conv+2,f
  7808  029F  2A9B               	goto	u2355
  7809  02A0  0878               	movf	??_ten_thou_conv,w
  7810  02A1  00E4               	movwf	_ten_thou
  7811                           
  7812                           ;Multi_RX_testjig_v1.c: 1360: ten = ten - 10 * ten_thou;
  7813  02A2  30F6               	movlw	246
  7814  02A3  00F0               	movwf	___bmul@multiplicand
  7815  02A4  0864               	movf	_ten_thou,w
  7816  02A5  22DF  3180         	fcall	___bmul
  7817  02A7  07E3               	addwf	_ten,f
  7818                           
  7819                           ;Multi_RX_testjig_v1.c: 1362: hund = thou + 5 * hund + ten_thou;
  7820  02A8  3005               	movlw	5
  7821  02A9  00F0               	movwf	___bmul@multiplicand
  7822  02AA  0861               	movf	_hund,w
  7823  02AB  22DF  3180         	fcall	___bmul
  7824  02AD  0766               	addwf	_thou,w
  7825  02AE  0764               	addwf	_ten_thou,w
  7826  02AF  00E1               	movwf	_hund
  7827                           
  7828                           ;Multi_RX_testjig_v1.c: 1363: ten_thou = (hund * 0x67) >> 10;
  7829  02B0  00F0               	movwf	___wmul@multiplier
  7830  02B1  3067               	movlw	103
  7831  02B2  01F1               	clrf	___wmul@multiplier+1
  7832  02B3  00F2               	movwf	___wmul@multiplicand
  7833  02B4  01F3               	clrf	___wmul@multiplicand+1
  7834  02B5  2302  3180         	fcall	___wmul
  7835  02B7  0870               	movf	?___wmul,w
  7836  02B8  00F8               	movwf	??_ten_thou_conv
  7837  02B9  0871               	movf	?___wmul+1,w
  7838  02BA  00F9               	movwf	??_ten_thou_conv+1
  7839  02BB  300A               	movlw	10
  7840  02BC  00FA               	movwf	??_ten_thou_conv+2
  7841  02BD                     u2365:	
  7842  02BD  0D79               	rlf	??_ten_thou_conv+1,w
  7843  02BE  0CF9               	rrf	??_ten_thou_conv+1,f
  7844  02BF  0CF8               	rrf	??_ten_thou_conv,f
  7845  02C0  0BFA               	decfsz	??_ten_thou_conv+2,f
  7846  02C1  2ABD               	goto	u2365
  7847  02C2  0878               	movf	??_ten_thou_conv,w
  7848  02C3  00E4               	movwf	_ten_thou
  7849                           
  7850                           ;Multi_RX_testjig_v1.c: 1364: hund = hund - 10 * ten_thou;
  7851  02C4  30F6               	movlw	246
  7852  02C5  00F0               	movwf	___bmul@multiplicand
  7853  02C6  0864               	movf	_ten_thou,w
  7854  02C7  22DF  3180         	fcall	___bmul
  7855  02C9  07E1               	addwf	_hund,f
  7856                           
  7857                           ;Multi_RX_testjig_v1.c: 1366: thou = 8 * thou + ten_thou;
  7858  02CA  0866               	movf	_thou,w
  7859  02CB  0709               	addwf	9,w
  7860  02CC  0709               	addwf	9,w
  7861  02CD  0709               	addwf	9,w
  7862  02CE  0764               	addwf	_ten_thou,w
  7863  02CF  00E6               	movwf	_thou
  7864                           
  7865                           ;Multi_RX_testjig_v1.c: 1367: ten_thou = (thou * 0x1A) >> 8;
  7866  02D0  00F0               	movwf	___wmul@multiplier
  7867  02D1  301A               	movlw	26
  7868  02D2  01F1               	clrf	___wmul@multiplier+1
  7869  02D3  00F2               	movwf	___wmul@multiplicand
  7870  02D4  01F3               	clrf	___wmul@multiplicand+1
  7871  02D5  2302  3180         	fcall	___wmul
  7872  02D7  0871               	movf	?___wmul+1,w
  7873  02D8  00E4               	movwf	_ten_thou
  7874                           
  7875                           ;Multi_RX_testjig_v1.c: 1368: thou = thou - 10 * ten_thou;
  7876  02D9  30F6               	movlw	246
  7877  02DA  00F0               	movwf	___bmul@multiplicand
  7878  02DB  0864               	movf	_ten_thou,w
  7879  02DC  22DF               	fcall	___bmul
  7880  02DD  07E6               	addwf	_thou,f
  7881  02DE  0008               	return
  7882  02DF                     __end_of_ten_thou_conv:	
  7883  02DF                     __ptext14:	
  7884 ;; *************** function ___bmul *****************
  7885 ;; Defined at:
  7886 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;  multiplier      1    wreg     unsigned char 
  7889 ;;  multiplicand    1    0[COMMON] unsigned char 
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;  multiplier      1    2[COMMON] unsigned char 
  7892 ;;  product         1    1[COMMON] unsigned char 
  7893 ;; Return value:  Size  Location     Type
  7894 ;;                  1    wreg      unsigned char 
  7895 ;; Registers used:
  7896 ;;		wreg, status,2, status,0
  7897 ;; Tracked objects:
  7898 ;;		On entry : 1F/0
  7899 ;;		On exit  : 1F/0
  7900 ;;		Unchanged: 1F/0
  7901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7902 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7903 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7905 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7906 ;;Total ram usage:        3 bytes
  7907 ;; Hardware stack levels used:    1
  7908 ;; Hardware stack levels required when called:    1
  7909 ;; This function calls:
  7910 ;;		Nothing
  7911 ;; This function is called by:
  7912 ;;		_ten_thou_conv
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916                           
  7917                           ;psect for function ___bmul
  7918  02DF                     ___bmul:	
  7919                           
  7920                           ;incstack = 0
  7921                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7922                           ;___bmul@multiplier stored from wreg
  7923  02DF  00F2               	movwf	___bmul@multiplier
  7924  02E0  01F1               	clrf	___bmul@product
  7925  02E1  0870               	movf	___bmul@multiplicand,w
  7926  02E2  1872               	btfsc	___bmul@multiplier,0
  7927  02E3  07F1               	addwf	___bmul@product,f
  7928  02E4  35F0               	lslf	___bmul@multiplicand,f
  7929  02E5  0870               	movf	___bmul@multiplicand,w
  7930  02E6  18F2               	btfsc	___bmul@multiplier,1
  7931  02E7  07F1               	addwf	___bmul@product,f
  7932  02E8  35F0               	lslf	___bmul@multiplicand,f
  7933  02E9  0870               	movf	___bmul@multiplicand,w
  7934  02EA  1972               	btfsc	___bmul@multiplier,2
  7935  02EB  07F1               	addwf	___bmul@product,f
  7936  02EC  35F0               	lslf	___bmul@multiplicand,f
  7937  02ED  0870               	movf	___bmul@multiplicand,w
  7938  02EE  19F2               	btfsc	___bmul@multiplier,3
  7939  02EF  07F1               	addwf	___bmul@product,f
  7940  02F0  35F0               	lslf	___bmul@multiplicand,f
  7941  02F1  0870               	movf	___bmul@multiplicand,w
  7942  02F2  1A72               	btfsc	___bmul@multiplier,4
  7943  02F3  07F1               	addwf	___bmul@product,f
  7944  02F4  35F0               	lslf	___bmul@multiplicand,f
  7945  02F5  0870               	movf	___bmul@multiplicand,w
  7946  02F6  1AF2               	btfsc	___bmul@multiplier,5
  7947  02F7  07F1               	addwf	___bmul@product,f
  7948  02F8  35F0               	lslf	___bmul@multiplicand,f
  7949  02F9  0870               	movf	___bmul@multiplicand,w
  7950  02FA  1B72               	btfsc	___bmul@multiplier,6
  7951  02FB  07F1               	addwf	___bmul@product,f
  7952  02FC  35F0               	lslf	___bmul@multiplicand,f
  7953  02FD  0870               	movf	___bmul@multiplicand,w
  7954  02FE  1BF2               	btfsc	___bmul@multiplier,7
  7955  02FF  07F1               	addwf	___bmul@product,f
  7956  0300  0871               	movf	___bmul@product,w
  7957  0301  0008               	return
  7958  0302                     __end_of___bmul:	
  7959  0302                     __ptext13:	
  7960 ;; *************** function ___wmul *****************
  7961 ;; Defined at:
  7962 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  multiplier      2    0[COMMON] unsigned int 
  7965 ;;  multiplicand    2    2[COMMON] unsigned int 
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;  product         2    4[COMMON] unsigned int 
  7968 ;; Return value:  Size  Location     Type
  7969 ;;                  2    0[COMMON] unsigned int 
  7970 ;; Registers used:
  7971 ;;		wreg, status,2, status,0
  7972 ;; Tracked objects:
  7973 ;;		On entry : 1F/0
  7974 ;;		On exit  : 1F/0
  7975 ;;		Unchanged: 1F/0
  7976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7980 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7981 ;;Total ram usage:        6 bytes
  7982 ;; Hardware stack levels used:    1
  7983 ;; Hardware stack levels required when called:    1
  7984 ;; This function calls:
  7985 ;;		Nothing
  7986 ;; This function is called by:
  7987 ;;		_ten_thou_conv
  7988 ;; This function uses a non-reentrant model
  7989 ;;
  7990                           
  7991                           
  7992                           ;psect for function ___wmul
  7993  0302                     ___wmul:	
  7994                           
  7995                           ;incstack = 0
  7996                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7997  0302  01F4               	clrf	___wmul@product
  7998  0303  01F5               	clrf	___wmul@product+1
  7999  0304                     l2545:	
  8000  0304  1C70               	btfss	___wmul@multiplier,0
  8001  0305  2B0A               	goto	l2549
  8002  0306  0872               	movf	___wmul@multiplicand,w
  8003  0307  07F4               	addwf	___wmul@product,f
  8004  0308  0873               	movf	___wmul@multiplicand+1,w
  8005  0309  3DF5               	addwfc	___wmul@product+1,f
  8006  030A                     l2549:	
  8007  030A  35F2               	lslf	___wmul@multiplicand,f
  8008  030B  0DF3               	rlf	___wmul@multiplicand+1,f
  8009  030C  36F1               	lsrf	___wmul@multiplier+1,f
  8010  030D  0CF0               	rrf	___wmul@multiplier,f
  8011  030E  0870               	movf	___wmul@multiplier,w
  8012  030F  0471               	iorwf	___wmul@multiplier+1,w
  8013  0310  1D03               	btfss	3,2
  8014  0311  2B04               	goto	l2545
  8015  0312  0875               	movf	___wmul@product+1,w
  8016  0313  00F1               	movwf	?___wmul+1
  8017  0314  0874               	movf	___wmul@product,w
  8018  0315  00F0               	movwf	?___wmul
  8019  0316  0008               	return
  8020  0317                     __end_of___wmul:	
  8021                           
  8022                           	psect	swtext2
  8023  0600                     __pswtext2:	
  8024  0600                     S3899:	
  8025  0600  3180  28A7         	ljmp	l3009
  8026  0602  3180  28A9         	ljmp	l3011
  8027  0604  3180  28AB         	ljmp	l3013
  8028  0606  3180  28AD         	ljmp	l3015
  8029  0608  3180  28AF         	ljmp	l3017
  8030  060A  3180  28B1         	ljmp	l3019
  8031  060C  3180  28B3         	ljmp	l3021
  8032  060E  3180  28B5         	ljmp	l3023
  8033  0610  3180  28B7         	ljmp	l3025
  8034  0612  3180  28B9         	ljmp	l3027
  8035  0614  3180  28BB         	ljmp	l3029
  8036  0616  3180  28BD         	ljmp	l3031
  8037  0618  3180  28BF         	ljmp	l3033
  8038  061A  3180  28C6         	ljmp	l662
  8039  061C  3180  28C1         	ljmp	l3035
  8040  061E  3180  28C6         	ljmp	l662
  8041  0620  3180  28C6         	ljmp	l662
  8042  0622  3180  28C6         	ljmp	l662
  8043  0624  3180  28C6         	ljmp	l662
  8044  0626  3180  28C3         	ljmp	l3037
  8045                           
  8046                           	psect	intentry
  8047  0004                     __pintentry:	
  8048 ;; *************** function _isr *****************
  8049 ;; Defined at:
  8050 ;;		line 308 in file "Multi_RX_testjig_v1.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;		None
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;		None
  8055 ;; Return value:  Size  Location     Type
  8056 ;;                  1    wreg      void 
  8057 ;; Registers used:
  8058 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 1F/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8068 ;;Total ram usage:        0 bytes
  8069 ;; Hardware stack levels used:    1
  8070 ;; This function calls:
  8071 ;;		Nothing
  8072 ;; This function is called by:
  8073 ;;		Interrupt level 1
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077  0004                     _isr:	
  8078                           
  8079                           ;incstack = 0
  8080  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8081                           
  8082                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  8083  0005  3180               	pagesel	$
  8084                           
  8085                           ;Multi_RX_testjig_v1.c: 310: if(INTCONbits.TMR0IF == 1)
  8086  0006  1D0B               	btfss	11,2	;volatile
  8087  0007  2822               	goto	i1l3235
  8088                           
  8089                           ;Multi_RX_testjig_v1.c: 311: {
  8090                           ;Multi_RX_testjig_v1.c: 313: if(testjig_timer)
  8091  0008  0020               	movlb	0	; select bank0
  8092  0009  085B               	movf	_testjig_timer,w	;volatile
  8093  000A  045C               	iorwf	_testjig_timer+1,w	;volatile
  8094  000B  1903               	btfsc	3,2
  8095  000C  2811               	goto	i1l3227
  8096                           
  8097                           ;Multi_RX_testjig_v1.c: 314: testjig_timer--;
  8098  000D  3001               	movlw	1
  8099  000E  02DB               	subwf	_testjig_timer,f	;volatile
  8100  000F  3000               	movlw	0
  8101  0010  3BDC               	subwfb	_testjig_timer+1,f	;volatile
  8102  0011                     i1l3227:	
  8103                           
  8104                           ;Multi_RX_testjig_v1.c: 315: if(uart_receive_timer)
  8105  0011  085F               	movf	_uart_receive_timer,w	;volatile
  8106  0012  0460               	iorwf	_uart_receive_timer+1,w	;volatile
  8107  0013  1903               	btfsc	3,2
  8108  0014  2819               	goto	i1l269
  8109                           
  8110                           ;Multi_RX_testjig_v1.c: 316: uart_receive_timer--;
  8111  0015  30FF               	movlw	-1
  8112  0016  07DF               	addwf	_uart_receive_timer,f	;volatile
  8113  0017  1C03               	skipc
  8114  0018  03E0               	decf	_uart_receive_timer+1,f	;volatile
  8115  0019                     i1l269:	
  8116                           
  8117                           ;Multi_RX_testjig_v1.c: 317: if(motor_direction_timer)
  8118  0019  0857               	movf	_motor_direction_timer,w	;volatile
  8119  001A  0458               	iorwf	_motor_direction_timer+1,w	;volatile
  8120  001B  1903               	btfsc	3,2
  8121  001C  2821               	goto	i1l3233
  8122                           
  8123                           ;Multi_RX_testjig_v1.c: 318: motor_direction_timer--;
  8124  001D  30FF               	movlw	-1
  8125  001E  07D7               	addwf	_motor_direction_timer,f	;volatile
  8126  001F  1C03               	skipc
  8127  0020  03D8               	decf	_motor_direction_timer+1,f	;volatile
  8128  0021                     i1l3233:	
  8129                           
  8130                           ;Multi_RX_testjig_v1.c: 320: INTCONbits.TMR0IF = 0;
  8131  0021  110B               	bcf	11,2	;volatile
  8132  0022                     i1l3235:	
  8133                           
  8134                           ;Multi_RX_testjig_v1.c: 322: }
  8135                           ;Multi_RX_testjig_v1.c: 323: if(PIR1bits.TMR2IF == 1)
  8136  0022  0020               	movlb	0	; select bank0
  8137  0023  1C91               	btfss	17,1	;volatile
  8138  0024  2893               	goto	i1l293
  8139                           
  8140                           ;Multi_RX_testjig_v1.c: 324: {
  8141                           ;Multi_RX_testjig_v1.c: 326: if(pickit_timer)
  8142  0025  0859               	movf	_pickit_timer,w	;volatile
  8143  0026  045A               	iorwf	_pickit_timer+1,w	;volatile
  8144  0027  1903               	btfsc	3,2
  8145  0028  2866               	goto	i1l3267
  8146                           
  8147                           ;Multi_RX_testjig_v1.c: 327: pickit_timer--;
  8148  0029  3001               	movlw	1
  8149  002A  02D9               	subwf	_pickit_timer,f	;volatile
  8150  002B  3000               	movlw	0
  8151  002C  3BDA               	subwfb	_pickit_timer+1,f	;volatile
  8152  002D  2870               	goto	i1l3269
  8153  002E                     i1l275:	
  8154                           ;Multi_RX_testjig_v1.c: 331: {
  8155                           ;Multi_RX_testjig_v1.c: 332: case pickit_start:
  8156                           
  8157                           
  8158                           ;Multi_RX_testjig_v1.c: 333: LATC2 = 1;
  8159  002E  0022               	movlb	2	; select bank2
  8160  002F  150E               	bsf	14,2	;volatile
  8161                           
  8162                           ;Multi_RX_testjig_v1.c: 334: LATC7 = 1;
  8163  0030  178E               	bsf	14,7	;volatile
  8164                           
  8165                           ;Multi_RX_testjig_v1.c: 335: pickit_timer = 10;
  8166  0031  300A               	movlw	10
  8167  0032  0020               	movlb	0	; select bank0
  8168  0033  00D9               	movwf	_pickit_timer	;volatile
  8169  0034  01DA               	clrf	_pickit_timer+1	;volatile
  8170                           
  8171                           ;Multi_RX_testjig_v1.c: 336: pickit_state = pickit_push_button;
  8172  0035  3002               	movlw	2
  8173  0036  2864               	goto	L33
  8174  0037                     i1l3243:	
  8175                           ;Multi_RX_testjig_v1.c: 337: break;
  8176                           
  8177                           
  8178                           ;Multi_RX_testjig_v1.c: 339: pickit_timer = 1000;
  8179  0037  30E8               	movlw	232
  8180  0038  00D9               	movwf	_pickit_timer	;volatile
  8181  0039  3003               	movlw	3
  8182  003A  00DA               	movwf	_pickit_timer+1	;volatile
  8183                           
  8184                           ;Multi_RX_testjig_v1.c: 340: LATC6 = 1;
  8185  003B  0022               	movlb	2	; select bank2
  8186  003C  170E               	bsf	14,6	;volatile
  8187                           
  8188                           ;Multi_RX_testjig_v1.c: 341: pickit_state = pickit_busy;
  8189  003D  2863               	goto	L34
  8190  003E                     i1l278:	
  8191                           ;Multi_RX_testjig_v1.c: 343: case pickit_busy:
  8192                           
  8193                           ;Multi_RX_testjig_v1.c: 342: break;
  8194                           
  8195                           
  8196                           ;Multi_RX_testjig_v1.c: 344: LATC6 = 0;
  8197  003E  0022               	movlb	2	; select bank2
  8198  003F  130E               	bcf	14,6	;volatile
  8199                           
  8200                           ;Multi_RX_testjig_v1.c: 345: if(RE6 == 0)
  8201  0040  0020               	movlb	0	; select bank0
  8202  0041  1B10               	btfsc	16,6	;volatile
  8203  0042  284A               	goto	i1l3253
  8204  0043  3065               	movlw	101
  8205                           
  8206                           ;Multi_RX_testjig_v1.c: 346: {
  8207                           ;Multi_RX_testjig_v1.c: 347: pickit_red_counter++;
  8208  0044  0AE2               	incf	_pickit_red_counter,f
  8209                           
  8210                           ;Multi_RX_testjig_v1.c: 348: if(pickit_red_counter > 100)
  8211  0045  0262               	subwf	_pickit_red_counter,w
  8212  0046  1C03               	skipc
  8213  0047  284B               	goto	i1l3255
  8214                           
  8215                           ;Multi_RX_testjig_v1.c: 349: pickit_state = pickit_finish;
  8216  0048  01E9               	clrf	_pickit_state
  8217  0049  284B               	goto	i1l3255
  8218  004A                     i1l3253:	
  8219                           
  8220                           ;Multi_RX_testjig_v1.c: 351: else
  8221                           ;Multi_RX_testjig_v1.c: 352: pickit_red_counter = 0;
  8222  004A  01E2               	clrf	_pickit_red_counter
  8223  004B                     i1l3255:	
  8224                           
  8225                           ;Multi_RX_testjig_v1.c: 353: if(RE5 == 0)
  8226  004B  1A90               	btfsc	16,5	;volatile
  8227  004C  2854               	goto	i1l282
  8228                           
  8229                           ;Multi_RX_testjig_v1.c: 354: {
  8230                           ;Multi_RX_testjig_v1.c: 355: pickit_state = pickit_error;
  8231  004D  3004               	movlw	4
  8232  004E  00E9               	movwf	_pickit_state
  8233                           
  8234                           ;Multi_RX_testjig_v1.c: 356: pickit_timer = 1000;
  8235  004F  30E8               	movlw	232
  8236  0050  00D9               	movwf	_pickit_timer	;volatile
  8237  0051  3003               	movlw	3
  8238  0052  00DA               	movwf	_pickit_timer+1	;volatile
  8239                           
  8240                           ;Multi_RX_testjig_v1.c: 357: }
  8241  0053  2857               	goto	i1l3261
  8242  0054                     i1l282:	
  8243                           
  8244                           ;Multi_RX_testjig_v1.c: 358: else if(RE4 == 0)
  8245  0054  1A10               	btfsc	16,4	;volatile
  8246  0055  2857               	goto	i1l3261
  8247                           
  8248                           ;Multi_RX_testjig_v1.c: 359: {
  8249                           ;Multi_RX_testjig_v1.c: 360: pickit_state = pickit_finish;
  8250  0056  01E9               	clrf	_pickit_state
  8251  0057                     i1l3261:	
  8252                           
  8253                           ;Multi_RX_testjig_v1.c: 361: }
  8254                           ;Multi_RX_testjig_v1.c: 362: pickit_timer = 1;
  8255  0057  3001               	movlw	1
  8256  0058  00D9               	movwf	_pickit_timer	;volatile
  8257  0059  01DA               	clrf	_pickit_timer+1	;volatile
  8258                           
  8259                           ;Multi_RX_testjig_v1.c: 363: break;
  8260  005A  2870               	goto	i1l3269
  8261  005B                     i1l285:	
  8262                           ;Multi_RX_testjig_v1.c: 364: case pickit_error:
  8263                           
  8264                           
  8265                           ;Multi_RX_testjig_v1.c: 365: LATC2 = 0;
  8266  005B  0022               	movlb	2	; select bank2
  8267  005C  110E               	bcf	14,2	;volatile
  8268                           
  8269                           ;Multi_RX_testjig_v1.c: 366: LATC7 = 0;
  8270  005D  138E               	bcf	14,7	;volatile
  8271                           
  8272                           ;Multi_RX_testjig_v1.c: 367: break;
  8273  005E  2870               	goto	i1l3269
  8274  005F                     i1l286:	
  8275                           ;Multi_RX_testjig_v1.c: 368: case pickit_finish:
  8276                           
  8277                           
  8278                           ;Multi_RX_testjig_v1.c: 369: LATC2 = 0;
  8279  005F  0022               	movlb	2	; select bank2
  8280  0060  110E               	bcf	14,2	;volatile
  8281                           
  8282                           ;Multi_RX_testjig_v1.c: 370: LATC7 = 0;
  8283  0061  138E               	bcf	14,7	;volatile
  8284                           
  8285                           ;Multi_RX_testjig_v1.c: 371: pickit_state = pickit_idle;
  8286  0062  3005               	movlw	5
  8287  0063                     L34:	
  8288  0063  0020               	movlb	0	; select bank0
  8289  0064                     L33:	
  8290  0064  00E9               	movwf	_pickit_state
  8291                           
  8292                           ;Multi_RX_testjig_v1.c: 372: break;
  8293  0065  2870               	goto	i1l3269
  8294  0066                     i1l3267:	
  8295  0066  0869               	movf	_pickit_state,w
  8296                           
  8297                           ; Switch size 1, requested type "speed"
  8298                           ; Number of cases is 6, Range of values is 0 to 5
  8299                           ; switch strategies available:
  8300                           ; Name         Instructions Cycles
  8301                           ; direct_byte           18     6 (fixed)
  8302                           ; simple_byte           19    10 (average)
  8303                           ; jumptable            260     6 (fixed)
  8304                           ;	Chosen strategy is direct_byte
  8305  0067  0084               	movwf	4
  8306  0068  3006               	movlw	6
  8307  0069  0204               	subwf	4,w
  8308  006A  1803               	skipnc
  8309  006B  2870               	goto	i1l3269
  8310  006C  3185               	movlp	high i1S3901
  8311  006D  3504               	lslf	4,w
  8312  006E  3EEA               	addlw	low i1S3901
  8313  006F  0082               	movwf	2
  8314  0070                     i1l3269:	
  8315                           
  8316                           ;Multi_RX_testjig_v1.c: 376: }
  8317                           ;Multi_RX_testjig_v1.c: 438: if(buzz_timer)
  8318  0070  0020               	movlb	0	; select bank0
  8319  0071  0867               	movf	_buzz_timer,w	;volatile
  8320  0072  0468               	iorwf	_buzz_timer+1,w	;volatile
  8321  0073  1903               	btfsc	3,2
  8322  0074  287A               	goto	i1l288
  8323                           
  8324                           ;Multi_RX_testjig_v1.c: 439: buzz_timer--;
  8325  0075  3001               	movlw	1
  8326  0076  02E7               	subwf	_buzz_timer,f	;volatile
  8327  0077  3000               	movlw	0
  8328  0078  3BE8               	subwfb	_buzz_timer+1,f	;volatile
  8329  0079  287C               	goto	i1l3273
  8330  007A                     i1l288:	
  8331                           
  8332                           ;Multi_RX_testjig_v1.c: 440: else
  8333                           ;Multi_RX_testjig_v1.c: 441: LATC5 = 0;
  8334  007A  0022               	movlb	2	; select bank2
  8335  007B  128E               	bcf	14,5	;volatile
  8336  007C                     i1l3273:	
  8337                           
  8338                           ;Multi_RX_testjig_v1.c: 442: if(one_second_timer)
  8339  007C  0020               	movlb	0	; select bank0
  8340  007D  086A               	movf	_one_second_timer,w	;volatile
  8341  007E  046B               	iorwf	_one_second_timer+1,w	;volatile
  8342  007F  1903               	btfsc	3,2
  8343  0080  2886               	goto	i1l3277
  8344                           
  8345                           ;Multi_RX_testjig_v1.c: 443: one_second_timer--;
  8346  0081  3001               	movlw	1
  8347  0082  02EA               	subwf	_one_second_timer,f	;volatile
  8348  0083  3000               	movlw	0
  8349  0084  3BEB               	subwfb	_one_second_timer+1,f	;volatile
  8350  0085  288A               	goto	i1l3279
  8351  0086                     i1l3277:	
  8352                           
  8353                           ;Multi_RX_testjig_v1.c: 444: else
  8354                           ;Multi_RX_testjig_v1.c: 445: {
  8355                           ;Multi_RX_testjig_v1.c: 446: one_second_timer = 1000;
  8356  0086  30E8               	movlw	232
  8357  0087  00EA               	movwf	_one_second_timer	;volatile
  8358  0088  3003               	movlw	3
  8359  0089  00EB               	movwf	_one_second_timer+1	;volatile
  8360  008A                     i1l3279:	
  8361                           
  8362                           ;Multi_RX_testjig_v1.c: 447: }
  8363                           ;Multi_RX_testjig_v1.c: 448: if(tj_timer)
  8364  008A  085D               	movf	_tj_timer,w
  8365  008B  045E               	iorwf	_tj_timer+1,w
  8366  008C  1903               	btfsc	3,2
  8367  008D  2892               	goto	i1l3283
  8368                           
  8369                           ;Multi_RX_testjig_v1.c: 449: tj_timer--;
  8370  008E  3001               	movlw	1
  8371  008F  02DD               	subwf	_tj_timer,f
  8372  0090  3000               	movlw	0
  8373  0091  3BDE               	subwfb	_tj_timer+1,f
  8374  0092                     i1l3283:	
  8375                           
  8376                           ;Multi_RX_testjig_v1.c: 450: PIR1bits.TMR2IF = 0;
  8377  0092  1091               	bcf	17,1	;volatile
  8378  0093                     i1l293:	
  8379  0093  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8380  0094  0009               	retfie
  8381  0095                     __end_of_isr:	
  8382  007E                     btemp	set	126	;btemp
  8383  007E                     int$flags	set	126
  8384  007E                     wtemp	set	126
  8385  007E                     wtemp0	set	126
  8386  0080                     wtemp1	set	128
  8387  0082                     wtemp2	set	130
  8388  0084                     wtemp3	set	132
  8389  0086                     wtemp4	set	134
  8390  0088                     wtemp5	set	136
  8391  007F                     wtemp6	set	127
  8392  007E                     ttemp	set	126
  8393  007E                     ttemp0	set	126
  8394  0081                     ttemp1	set	129
  8395  0084                     ttemp2	set	132
  8396  0087                     ttemp3	set	135
  8397  007F                     ttemp4	set	127
  8398  007E                     ltemp	set	126
  8399  007E                     ltemp0	set	126
  8400  0082                     ltemp1	set	130
  8401  0086                     ltemp2	set	134
  8402  0080                     ltemp3	set	128
  8403                           
  8404                           	psect	swtext3
  8405  05EA                     __pswtext3:	
  8406  05EA                     i1S3901:	
  8407  05EA  3180  285F         	ljmp	i1l286
  8408  05EC  3180  282E         	ljmp	i1l275
  8409  05EE  3180  2837         	ljmp	i1l3243
  8410  05F0  3180  283E         	ljmp	i1l278
  8411  05F2  3180  285B         	ljmp	i1l285
  8412  05F4  3180  2870         	ljmp	i1l3269


Data Sizes:
    Strings     812
    Constant    0
    Data        2
    BSS         24
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     47      76
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0

Pointer List with Targets:

    print_screen@bottom	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_170(CODE[17]), STR_168(CODE[13]), STR_166(CODE[14]), STR_164(CODE[8]), 
		 -> STR_162(CODE[8]), STR_160(CODE[14]), STR_158(CODE[11]), STR_156(CODE[13]), 
		 -> STR_152(CODE[10]), STR_148(CODE[2]), STR_142(CODE[17]), STR_140(CODE[16]), 
		 -> STR_138(CODE[7]), STR_136(CODE[10]), STR_126(CODE[5]), STR_124(CODE[9]), 
		 -> STR_112(CODE[4]), STR_90(CODE[3]), STR_88(CODE[1]), STR_66(CODE[3]), 
		 -> STR_64(CODE[1]), STR_52(CODE[5]), STR_50(CODE[1]), STR_44(CODE[6]), 
		 -> STR_36(CODE[6]), STR_34(CODE[9]), STR_30(CODE[13]), STR_28(CODE[1]), 
		 -> STR_6(CODE[1]), STR_2(CODE[17]), 

    print_screen@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_169(CODE[12]), STR_167(CODE[17]), STR_165(CODE[17]), STR_163(CODE[17]), 
		 -> STR_161(CODE[9]), STR_159(CODE[13]), STR_157(CODE[10]), STR_155(CODE[16]), 
		 -> STR_151(CODE[10]), STR_147(CODE[15]), STR_141(CODE[8]), STR_139(CODE[8]), 
		 -> STR_137(CODE[8]), STR_135(CODE[8]), STR_125(CODE[8]), STR_123(CODE[8]), 
		 -> STR_111(CODE[8]), STR_89(CODE[9]), STR_87(CODE[9]), STR_65(CODE[9]), 
		 -> STR_63(CODE[9]), STR_51(CODE[11]), STR_49(CODE[11]), STR_43(CODE[13]), 
		 -> STR_35(CODE[13]), STR_33(CODE[19]), STR_29(CODE[12]), STR_27(CODE[19]), 
		 -> STR_5(CODE[15]), STR_1(CODE[9]), 

    print_error@bottom	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_154(CODE[4]), STR_150(CODE[4]), STR_146(CODE[4]), STR_144(CODE[15]), 
		 -> STR_134(CODE[13]), STR_132(CODE[14]), STR_130(CODE[4]), STR_128(CODE[4]), 
		 -> STR_122(CODE[13]), STR_120(CODE[16]), STR_118(CODE[14]), STR_116(CODE[4]), 
		 -> STR_114(CODE[4]), STR_110(CODE[4]), STR_108(CODE[9]), STR_106(CODE[3]), 
		 -> STR_104(CODE[7]), STR_102(CODE[4]), STR_100(CODE[4]), STR_98(CODE[15]), 
		 -> STR_96(CODE[16]), STR_94(CODE[3]), STR_92(CODE[9]), STR_86(CODE[3]), 
		 -> STR_84(CODE[9]), STR_82(CODE[3]), STR_80(CODE[7]), STR_78(CODE[4]), 
		 -> STR_76(CODE[4]), STR_74(CODE[15]), STR_72(CODE[16]), STR_70(CODE[3]), 
		 -> STR_68(CODE[9]), STR_62(CODE[9]), STR_60(CODE[3]), STR_58(CODE[7]), 
		 -> STR_56(CODE[3]), STR_54(CODE[9]), STR_48(CODE[9]), STR_46(CODE[9]), 
		 -> STR_42(CODE[3]), STR_40(CODE[12]), STR_38(CODE[3]), STR_32(CODE[6]), 
		 -> STR_26(CODE[12]), STR_24(CODE[11]), STR_22(CODE[13]), STR_20(CODE[13]), 
		 -> STR_18(CODE[13]), STR_16(CODE[13]), STR_14(CODE[12]), STR_12(CODE[11]), 
		 -> STR_10(CODE[13]), STR_8(CODE[13]), STR_4(CODE[14]), 

    print_error@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_153(CODE[12]), STR_149(CODE[12]), STR_145(CODE[12]), STR_143(CODE[8]), 
		 -> STR_133(CODE[13]), STR_131(CODE[13]), STR_129(CODE[12]), STR_127(CODE[12]), 
		 -> STR_121(CODE[12]), STR_119(CODE[12]), STR_117(CODE[12]), STR_115(CODE[12]), 
		 -> STR_113(CODE[12]), STR_109(CODE[12]), STR_107(CODE[10]), STR_105(CODE[12]), 
		 -> STR_103(CODE[9]), STR_101(CODE[12]), STR_99(CODE[12]), STR_97(CODE[9]), 
		 -> STR_95(CODE[9]), STR_93(CODE[12]), STR_91(CODE[10]), STR_85(CODE[12]), 
		 -> STR_83(CODE[10]), STR_81(CODE[12]), STR_79(CODE[9]), STR_77(CODE[12]), 
		 -> STR_75(CODE[12]), STR_73(CODE[9]), STR_71(CODE[9]), STR_69(CODE[12]), 
		 -> STR_67(CODE[10]), STR_61(CODE[19]), STR_59(CODE[12]), STR_57(CODE[16]), 
		 -> STR_55(CODE[12]), STR_53(CODE[19]), STR_47(CODE[12]), STR_45(CODE[12]), 
		 -> STR_41(CODE[12]), STR_39(CODE[13]), STR_37(CODE[12]), STR_31(CODE[12]), 
		 -> STR_25(CODE[14]), STR_23(CODE[14]), STR_21(CODE[15]), STR_19(CODE[15]), 
		 -> STR_17(CODE[14]), STR_15(CODE[14]), STR_13(CODE[14]), STR_11(CODE[14]), 
		 -> STR_9(CODE[14]), STR_7(CODE[14]), STR_3(CODE[9]), 

    i2c_Write_string@data	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_170(CODE[17]), STR_169(CODE[12]), STR_168(CODE[13]), STR_167(CODE[17]), 
		 -> STR_166(CODE[14]), STR_165(CODE[17]), STR_164(CODE[8]), STR_163(CODE[17]), 
		 -> STR_162(CODE[8]), STR_161(CODE[9]), STR_160(CODE[14]), STR_159(CODE[13]), 
		 -> STR_158(CODE[11]), STR_157(CODE[10]), STR_156(CODE[13]), STR_155(CODE[16]), 
		 -> STR_154(CODE[4]), STR_153(CODE[12]), STR_152(CODE[10]), STR_151(CODE[10]), 
		 -> STR_150(CODE[4]), STR_149(CODE[12]), STR_148(CODE[2]), STR_147(CODE[15]), 
		 -> STR_146(CODE[4]), STR_145(CODE[12]), STR_144(CODE[15]), STR_143(CODE[8]), 
		 -> STR_142(CODE[17]), STR_141(CODE[8]), STR_140(CODE[16]), STR_139(CODE[8]), 
		 -> STR_138(CODE[7]), STR_137(CODE[8]), STR_136(CODE[10]), STR_135(CODE[8]), 
		 -> STR_134(CODE[13]), STR_133(CODE[13]), STR_132(CODE[14]), STR_131(CODE[13]), 
		 -> STR_130(CODE[4]), STR_129(CODE[12]), STR_128(CODE[4]), STR_127(CODE[12]), 
		 -> STR_126(CODE[5]), STR_125(CODE[8]), STR_124(CODE[9]), STR_123(CODE[8]), 
		 -> STR_122(CODE[13]), STR_121(CODE[12]), STR_120(CODE[16]), STR_119(CODE[12]), 
		 -> STR_118(CODE[14]), STR_117(CODE[12]), STR_116(CODE[4]), STR_115(CODE[12]), 
		 -> STR_114(CODE[4]), STR_113(CODE[12]), STR_112(CODE[4]), STR_111(CODE[8]), 
		 -> STR_110(CODE[4]), STR_109(CODE[12]), STR_108(CODE[9]), STR_107(CODE[10]), 
		 -> STR_106(CODE[3]), STR_105(CODE[12]), STR_104(CODE[7]), STR_103(CODE[9]), 
		 -> STR_102(CODE[4]), STR_101(CODE[12]), STR_100(CODE[4]), STR_99(CODE[12]), 
		 -> STR_98(CODE[15]), STR_97(CODE[9]), STR_96(CODE[16]), STR_95(CODE[9]), 
		 -> STR_94(CODE[3]), STR_93(CODE[12]), STR_92(CODE[9]), STR_91(CODE[10]), 
		 -> STR_90(CODE[3]), STR_89(CODE[9]), STR_88(CODE[1]), STR_87(CODE[9]), 
		 -> STR_86(CODE[3]), STR_85(CODE[12]), STR_84(CODE[9]), STR_83(CODE[10]), 
		 -> STR_82(CODE[3]), STR_81(CODE[12]), STR_80(CODE[7]), STR_79(CODE[9]), 
		 -> STR_78(CODE[4]), STR_77(CODE[12]), STR_76(CODE[4]), STR_75(CODE[12]), 
		 -> STR_74(CODE[15]), STR_73(CODE[9]), STR_72(CODE[16]), STR_71(CODE[9]), 
		 -> STR_70(CODE[3]), STR_69(CODE[12]), STR_68(CODE[9]), STR_67(CODE[10]), 
		 -> STR_66(CODE[3]), STR_65(CODE[9]), STR_64(CODE[1]), STR_63(CODE[9]), 
		 -> STR_62(CODE[9]), STR_61(CODE[19]), STR_60(CODE[3]), STR_59(CODE[12]), 
		 -> STR_58(CODE[7]), STR_57(CODE[16]), STR_56(CODE[3]), STR_55(CODE[12]), 
		 -> STR_54(CODE[9]), STR_53(CODE[19]), STR_52(CODE[5]), STR_51(CODE[11]), 
		 -> STR_50(CODE[1]), STR_49(CODE[11]), STR_48(CODE[9]), STR_47(CODE[12]), 
		 -> STR_46(CODE[9]), STR_45(CODE[12]), STR_44(CODE[6]), STR_43(CODE[13]), 
		 -> STR_42(CODE[3]), STR_41(CODE[12]), STR_40(CODE[12]), STR_39(CODE[13]), 
		 -> STR_38(CODE[3]), STR_37(CODE[12]), STR_36(CODE[6]), STR_35(CODE[13]), 
		 -> STR_34(CODE[9]), STR_33(CODE[19]), STR_32(CODE[6]), STR_31(CODE[12]), 
		 -> STR_30(CODE[13]), STR_29(CODE[12]), STR_28(CODE[1]), STR_27(CODE[19]), 
		 -> STR_26(CODE[12]), STR_25(CODE[14]), STR_24(CODE[11]), STR_23(CODE[14]), 
		 -> STR_22(CODE[13]), STR_21(CODE[15]), STR_20(CODE[13]), STR_19(CODE[15]), 
		 -> STR_18(CODE[13]), STR_17(CODE[14]), STR_16(CODE[13]), STR_15(CODE[14]), 
		 -> STR_14(CODE[12]), STR_13(CODE[14]), STR_12(CODE[11]), STR_11(CODE[14]), 
		 -> STR_10(CODE[13]), STR_9(CODE[14]), STR_8(CODE[13]), STR_7(CODE[14]), 
		 -> STR_6(CODE[1]), STR_5(CODE[15]), STR_4(CODE[14]), STR_3(CODE[9]), 
		 -> STR_2(CODE[17]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _testjig_done->_print_screen
    _print_error->_print_screen
    _print_screen->_i2c_Write_string
    _i2c_second_line->_i2c_Write
    _i2c_first_line->_i2c_Write
    _i2c_Write_string->_i2c_Write
    _clear_lcd->_i2c_Write
    _lcd_print_int->_ten_thou_conv
    _ten_thou_conv->___wmul
    _lcd_set_cursor->_i2c_Write
    _i2c_write_char->_i2c_Write
    _init_i2c_lcd_5v->_i2c_Write
    _get_30v_current->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    ___ftadd->___ftmul
    _Vout_set->_digitalpot
    _digitalpot->_i2c_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_get_30v_current
    _get_30v_current->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   29736
                                             41 BANK0      6     6      0
                        _ADC_get_val
                             _RX_one
                             _TX_one
                           _Vout_set
                           _buzz_one
                      _debug_fast_tx
                    _get_30v_current
                           _init_ADC
                  _init_current_sink
                           _init_i2c
                    _init_i2c_lcd_5v
                      _lcd_print_int
                   _power_supply_set
                        _print_error
                       _print_screen
                       _testjig_done
 ---------------------------------------------------------------------------------
 (1) _testjig_done                                         4     4      0    4364
                                              8 COMMON     4     4      0
                           _buzz_one
                      _debug_fast_tx
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (1) _print_error                                          7     3      4   10537
                                              8 COMMON     4     0      4
                                              0 BANK0      3     3      0
                           _buzz_one
                          _clear_lcd
                      _debug_fast_tx
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (2) _print_screen                                         4     0      4    3569
                                              4 COMMON     4     0      4
                          _clear_lcd
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
 ---------------------------------------------------------------------------------
 (3) _i2c_second_line                                      1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_first_line                                       1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write_string                                     3     1      2     279
                                              1 COMMON     3     1      2
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _clear_lcd                                            2     2      0      22
                                              1 COMMON     2     2      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _power_supply_set                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _debug_fast_tx                                        3     1      2     493
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _buzz_one                                             2     0      2     234
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd_print_int                                        6     0      6    2472
                                              0 BANK0      6     0      6
                     _i2c_write_char
                     _lcd_set_cursor
                      _ten_thou_conv
 ---------------------------------------------------------------------------------
 (2) _ten_thou_conv                                        5     3      2    1805
                                              6 COMMON     5     3      2
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     756
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     908
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       3     2      1     147
                                              1 COMMON     3     2      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_write_char                                       1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c_lcd_5v                                      4     3      1     141
                                              1 COMMON     4     3      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init_current_sink                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_30v_current                                      4     2      2    6935
                                             37 BANK0      4     2      2
                        _ADC_get_val
                            ___ftadd
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    1743
                                              8 COMMON     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             13     9      4     305
                                             24 BANK0     13     9      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2102
                                             11 COMMON     3     3      0
                                              0 BANK0     12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    2694
                                             12 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _ADC_get_val                                          6     3      3      46
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Vout_set                                             6     4      2     264
                                              4 COMMON     6     4      2
                         _digitalpot
 ---------------------------------------------------------------------------------
 (2) _digitalpot                                           3     3      0      44
                                              1 COMMON     3     3      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (4) _i2c_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TX_one                                               3     3      0      69
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one                                               3     3      0      93
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_get_val
   _RX_one
   _TX_one
   _Vout_set
     _digitalpot
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _buzz_one
   _debug_fast_tx
   _get_30v_current
     _ADC_get_val
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _init_ADC
   _init_current_sink
   _init_i2c
   _init_i2c_lcd_5v
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _lcd_print_int
     _i2c_write_char
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _lcd_set_cursor
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _ten_thou_conv
       ___bmul
       ___wmul
   _power_supply_set
   _print_error
     _buzz_one
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _debug_fast_tx
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
   _print_screen
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _testjig_done
     _buzz_one
     _debug_fast_tx
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2F      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0      5A      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      5A      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Oct 11 11:48:48 2016

         _motor_direction_timer 0057                      __CFG_CP$ON 0000             ??_init_current_sink 0070  
                   main@RX_data 004E                               pc 0002                  ___bmul@product 0071  
              _power_supply_set 056C             ___wmul@multiplicand 0072                      TX_one@data 0071  
                  ___ftadd@exp1 0037                    ___ftadd@exp2 0036                    ___ftadd@sign 0035  
                           l303 091E                             l401 0D7D                             l403 0DD1  
                           l412 0E32                             l341 0ADC                             l351 0B59  
                           l440 050D                             l432 0474                             l424 0EA0  
                           l425 0EBE                             l426 0EDA                             l362 0BCB  
                           l338 0AAB                             l443 0527                             l435 04AE  
                           l460 021D                             l454 0228                             l622 0FA1  
                           l632 056E                             l376 0C6C                             l296 0891  
                           l634 0573                             l635 0578                             l387 0CDE  
                           l636 057D                             l469 022D                             l485 0207  
                           l581 0167                             l662 00C6                             l682 0F1B  
                           l674 0EF9                             l851 043D                             l684 0F20  
                           l669 0544                             l679 0F11                             l863 0462  
                           l887 03F9                             _GIE 005F                             _RA2 0062  
                           _RA4 0064                             _RA5 0065               ??_i2c_second_line 0071  
                           _RE0 0080                             _RF0 1460                             _RF1 1461  
                           _RF2 1462                             _RE4 0084                             _RG1 1469  
                           _RF3 1463                             _RE5 0085                             _RE6 0086  
                           _RG3 146B                             _RF5 1465                             _PR2 001B  
                           _PR8 0596                             _isr 0004                             _ten 0063  
                  __CFG_BORV$HI 0000                             wreg 0009                  ?_lcd_print_int 0020  
       __size_of_i2c_write_char 000D                            S3895 05F6                            S3899 0600  
               ?_lcd_set_cursor 0071                    __CFG_LVP$OFF 0000       __end_of_init_current_sink 0654  
                          l3011 00A9                            l3021 00B3                            l3013 00AB  
                          l3031 00BD                            l3023 00B5                            l3015 00AD  
                          l3033 00BF                            l3025 00B7                            l3017 00AF  
                          l3009 00A7                            l3041 00CB                            l3035 00C1  
                          l3027 00B9                            l3019 00B1                            l3043 00DD  
                          l3131 0127                            l3123 0119                            l3115 010D  
                          l3211 04FD                            l3037 00C3                            l3029 00BB  
                          l3117 0110                            l3205 04F2                            l3063 0FEC  
                          l3119 0113                            l2511 01E1                            l3153 014A  
                          l3145 013E                            l3137 0130                            l3129 0124  
                          l3209 04F5                            l3401 0967                            l3163 015B  
                          l3147 0141                            l3403 093C                            l2621 0453  
                          l3165 015E                            l2509 01CF                            l3421 098D  
                          l3413 0971                            l2615 0441                            l3183 0487  
                          l3097 0F22                            l2625 0460                            l2617 0445  
                          l2801 03DF                            l2705 00F1                            l2545 0304  
                          l3433 09C2                            l3425 099F                            l3417 097F  
                          l2627 0458                            l2619 044A                            l2811 03F5  
                          l2803 03E3                            l2707 00F3                            l3195 04BE  
                          l3611 0C20                            l3507 0AC9                            l3451 09FE  
                          l2493 021F                            l2549 030A                            l2653 054B  
                          l2661 0582                            l3701 0D4B                            l3613 0C28  
                          l3621 0C42                            l3541 0B3F                            l3461 0A2E  
                          l3453 0A07                            l3429 09B1                            l3437 09D0  
                          l3381 08DC                            l3373 08D2                            l2823 040F  
                          l2911 05BF                            l3703 0D53                            l3711 0D73  
                          l3615 0C30                            l3623 0C4A                            l3543 0B47  
                          l3375 08BB                            l2497 022B                            l2817 0404  
                          l2809 03F1                            l2921 05CA                            l3705 0D5B  
                          l3609 0C18                            l3625 0C52                            l3537 0B2F  
                          l3545 0B4F                            l3481 0A77                            l3465 0A48  
                          l3449 0A02                            l3457 0A16                            l3393 0911  
                          l3385 08EE                            l2835 0423                            l2843 0328  
                          l2923 05D3                            l2915 05C6                            l2499 01C7  
                          l3707 0D63                            l3619 0C3A                            l3627 0C5A  
                          l3539 0B37                            l2773 03AB                            l3733 0DB7  
                          l3725 0DA0                            l3661 0CD9                            l3709 0D6B  
                          l3629 0C62                            l3485 0A89                            l3389 0900  
                          l2791 03C8                            l2847 0339                            l2927 05E1  
                          l3663 0CD6                            l3495 0A9D                            l2769 03A4  
                          l2881 0367                            l2865 034D                            l3737 0DC3  
                          l3729 0DAB                            l3577 0BC6                            l2779 03BA  
                          l3763 0E18                            l3579 0BC3                            l2797 03D6  
                          l2877 035F                            l2869 0355                            l2893 059A  
                          l2973 0200                            l3693 0D2B                            l2799 03DA  
                          l2895 059F                            l3783 0E6A                            l3767 0E24  
                          l3759 0E0D                            l3695 0D33                            l2993 0F5F  
                          l3697 0D3B                            l3787 0E76                            l3779 0E5B  
                          l3699 0D43                            l3789 0E80                            l3897 00D0  
                          ?_isr 0070                            STR_1 12C2                            STR_2 1059  
                          STR_3 12C2                            STR_4 1116                            STR_5 10DA  
                          STR_6 108A                            STR_7 1140                            STR_8 1183  
                          STR_9 1140                            u2315 023A                            u2260 0549  
                          u2325 0249                            u2335 0258                            u2345 0274  
                          u2355 029B                            u4107 0A35                            u2365 02BD  
                          u4117 0A6B                            u4037 0868                            u4207 0C04  
                          u4127 0AFF                            u4047 0877                            u4217 0C83  
                          u4137 0B19                            u4057 0882                            u2730 0EFE  
                          u2635 05A6                            u4307 04A3                            u4227 0C99  
                          u4147 0B70                            u4067 08AB                            u4317 04B7  
                          u4237 0CB3                            u4157 0B86                            u4077 092F  
                          u4407 01A9                            u4327 04D4                            u4247 0CC9  
                          u4167 0BA0                            u4087 09EA                            u2744 0F00  
                          u4417 0214                            u4337 04EB                            u4257 0CF0  
                          u4177 0BB6                            u4097 0A27                            u4427 062F  
                          u4347 0516                            u4267 0D01                            u4187 0BDD  
                          u4437 01C1                            u4357 0530                            u4277 0D17  
                          u4197 0BEE                            u4447 0EF6                            u4367 0F7D  
                          u4287 0DE3                            u4457 0F03                            u4377 0F94  
                          u4297 0ED4                            u4467 0F0E                            u4387 0185  
                          u4477 0F16                            u4397 0196                            u4487 0F24  
                          u4497 0F2D                            _TMR0 0015                            _WPUB 020D  
                          _WPUD 020F                            _WPUE 0210                    __CFG_WRT$OFF 0000  
                          _main 0805                    ___ftpack@arg 0070                            _hund 0061  
                  ___ftpack@exp 0073                            _thou 0066                            fsr0h 0005  
                          fsr0l 0004                            indf0 0000                            _unit 0065  
                          btemp 007E               ??_get_30v_current 007E                   __CFG_BOREN$ON 0000  
                          ltemp 007E                            start 0095                            ttemp 007E  
                          wtemp 007E                   __CFG_IESO$OFF 0000         i2c_write_char@char_data 0071  
             ___bmul@multiplier 0072                   __CFG_MCLRE$ON 0000                    ___ftmul@cntr 002A  
                  ___ftmul@sign 002B                 digitalpot@value 0073            __size_of_ADC_get_val 0012  
       __end_of_init_i2c_lcd_5v 021A                    ___fttol@exp1 0044                    ___fttol@lval 0040  
                         ??_isr 0070                  _i2c_first_line 0189                           ?_main 0070  
               __end_of___ftadd 0435                           STR_10 1169                           STR_11 1140  
                         STR_20 1183                           STR_12 1226                           STR_21 1107  
                         STR_13 1140                           STR_22 1169                           STR_30 1019  
                         STR_14 121A                           STR_31 101A                           STR_23 114E  
                         STR_15 114E                           STR_16 1183                           STR_32 122B  
                         STR_24 1226                           STR_40 11EA                           STR_33 1013  
                         STR_41 120E                           STR_25 114E                           STR_17 114E  
                         STR_50 108A                           STR_42 1292                           STR_18 1169  
                         STR_26 121A                           STR_34 12CB                           STR_51 123C  
                         STR_35 119D                           STR_43 115C                           STR_19 1107  
                         STR_27 1013                           STR_28 108A                           STR_44 11FC  
                         STR_36 1236                           STR_52 11BF                           STR_60 1317  
                         STR_61 1000                           STR_37 120E                           STR_29 1202  
                         STR_45 11F6                           STR_53 1000                           STR_38 1289  
                         STR_62 1283                           STR_54 128C                           STR_70 131A  
                         STR_46 1283                           STR_47 11F6                           STR_55 120E  
                         STR_71 12B0                           STR_63 1295                           STR_39 11AA  
                         STR_64 108A                           STR_80 122A                           STR_56 1314  
                         STR_48 128C                           STR_72 10BB                           STR_65 1295  
                         STR_73 12B0                           STR_81 120E                           STR_49 123C  
                         STR_57 109B                           STR_90 1329                           STR_58 122A  
                         STR_66 1329                           STR_82 131D                           STR_74 10F8  
                         STR_83 125B                           STR_75 120E                           STR_59 120E  
                         STR_91 1265                           STR_67 125B                           STR_84 1283  
                         STR_92 128C                           STR_68 128C                           STR_76 1304  
                         STR_93 120E                           STR_85 120E                           STR_77 120E  
                         STR_69 120E                           STR_94 1323                           STR_86 1320  
                         STR_78 130C                           STR_79 12B0                           STR_95 12B9  
                         STR_87 129E                           STR_88 108A                           STR_96 10BB  
                         STR_89 129E                           STR_97 12B9                           STR_98 10F8  
                         STR_99 120E                 __end_of___ftmul 0381                 __end_of___fttol 05EA  
                         _T2CON 001C                           _LATC2 0872                           _LATA6 0866  
                         _LATB5 086D                           _LATA7 0867                           _LATD2 087A  
                         _LATC5 0875                           _LATD4 087C                           _LATC6 0876  
                         _LATD5 087D                           _LATC7 0877                           _LATG0 1C68  
                         _LATD6 087E           __end_of_debug_fast_tx 0564                           _T8CON 0597  
                         i1l282 0054                           i1l275 002E                           i1l285 005B  
                         i1l293 0093                           i1l269 0019                           i1l286 005F  
                         i1l278 003E                           i1l288 007A                           _PORTA 000C  
                         _PORTB 000D                           _PORTC 000E                           _PORTD 000F  
                         _PORTE 0010                           _PORTF 028C                           _PORTG 028D  
                         _TRISA 008C                           _TRISB 008D                           _TRISC 008E  
                         _TRISD 008F                           _TRISE 0090                           _TRISF 030C  
                         _TRISG 030D                   __CFG_PWRTE$ON 0000                  __CFG_FCMEN$OFF 0000  
            _current_sink_timer 0055        __end_of_i2c_Write_string 01E2                   ___ftpack@sign 0074  
                         main@i 004C                           ltemp0 007E                           ltemp1 0082  
                         ltemp2 0086                           ltemp3 0080                           ttemp0 007E  
                         ttemp1 0081                           ttemp2 0084                           ttemp3 0087  
                         ttemp4 007F                           status 0003                           wtemp0 007E  
                         wtemp1 0080                           wtemp2 0082                           wtemp3 0084  
                         wtemp4 0086                           wtemp5 0088                           wtemp6 007F  
               __initialization 0097      lcd_set_cursor@LCD_position 0073                    __end_of_main 0EEF  
        __end_of_i2c_first_line 019A                __end_of_i2c_Stop 0230                  __CFG_LPBOR$OFF 0000  
                        ??_main 0049                   ___fttol@sign1 003F                 ??_lcd_print_int 007B  
           lcd_print_int@number 0020                          _ADCON0 009D                          _ADCON1 009E  
                        i1S3901 05EA                          STR_100 1310                          STR_101 120E  
                        STR_102 1308                          STR_110 12E4                          STR_103 12B9  
                        STR_111 12DC                          STR_112 11E6                          STR_104 122A  
                        STR_120 10AB                          STR_121 11DE                          STR_113 120E  
                        STR_105 120E                          STR_106 1326                          STR_130 12F4  
                        STR_114 12E8                          STR_122 11D1                          _ADRESH 009C  
                        STR_107 1265                          STR_123 12DC                          STR_115 120E  
                        STR_131 1176                          STR_108 1283                          STR_132 1132  
                        STR_116 12EC                          STR_124 12A7                          STR_140 108B  
                        STR_141 12DC                          STR_125 12DC                          STR_133 1176  
                        STR_109 120E                          STR_117 11DE                          STR_126 117E  
                        STR_134 11D1                          STR_150 1300                          STR_118 1132  
                        STR_142 1037                          _ADRESL 009B                          STR_119 11DE  
                        STR_143 12DC                          STR_135 12DC                          STR_127 120E  
                        STR_151 1251                          STR_128 12F0                          STR_152 1279  
                        STR_136 126F                          STR_160 1124                          STR_144 10E9  
                        STR_137 12DC                          STR_161 12C2                          STR_153 120E  
                        STR_145 120E                          STR_129 120E                          STR_138 10F1  
                        STR_162 102F                          STR_154 12FC                          STR_146 12F8  
                        STR_170 106A                          STR_139 12DC                          STR_147 10CB  
                        STR_155 107B                          STR_163 1048                          STR_148 1089  
                        STR_164 12D4                          STR_156 11C4                          STR_149 120E  
                        STR_157 1247                          STR_165 1026                          STR_166 1116  
                        STR_158 1231                          STR_167 1026                          STR_159 11B7  
                        STR_168 1190                          STR_169 1191      __size_of_init_current_sink 0015  
                        _CCPR9L 061A                          _ANSELA 018C                          _ANSELB 018D  
                        _ANSELD 018F                          _ANSELE 0190                          _ANSELF 040C  
              __end_of___ftpack 0473                          _ANSELG 040D              __size_of_i2c_Start 0005  
                        i1l3233 0021                          i1l3243 0037                          i1l3227 0011  
                        i1l3235 0022                          i1l3261 0057                          i1l3253 004A  
                        i1l3255 004B                          i1l3273 007C                          i1l3283 0092  
                        i1l3267 0066                          i1l3277 0086                          i1l3269 0070  
                        i1l3279 008A              __size_of_i2c_Write 000C                          _FVRCON 0117  
              __end_of_Vout_set 00DF                __end_of___lwtoft 1000                          _OSCCON 0099  
                        _TMR0IE 005D                          _TMR0IF 005A                          _TRISC3 0473  
                        _TRISC4 0474                          _TRISG0 1868               print_error@bottom 007A  
                        _RX_one 0F11                          _TX_one 0EEF             _current_sink_stable 0053  
                        ___bmul 02DF                 ?_i2c_first_line 0070                          ___wmul 0302  
                     ??___ftadd 0032                  __CFG_STVREN$ON 0000                       ??___ftmul 007B  
                     ??___fttol 003C                __end_of_init_ADC 065B                ?_init_i2c_lcd_5v 0071  
              __end_of_init_i2c 063F                __end_of_buzz_one 056C                _ADC_cur_sink_val 004F  
         ___ftmul@f3_as_product 0027                   i2c_Write@data 0070                  _i2c_write_char 016B  
             debug_fast_tx@data 0070        __end_of_power_supply_set 058D                    ?_print_error 0078  
       __end_of__initialization 00A2                      ___ftadd@f1 002C                      ___ftadd@f2 002F  
           ___bmul@multiplicand 0070                      ___ftmul@f1 0020                      ___ftmul@f2 0023  
               _i2c_second_line 0178                      ___fttol@f1 0038                  __pcstackCOMMON 0070  
                  __pidataBANK0 0000                  print_error@top 0078           __end_of_ten_thou_conv 02DF  
             __end_of_i2c_Start 022B               __end_of_i2c_Write 0226              __size_of_clear_lcd 0015  
                    ___lwtoft@c 0078                ??_lcd_set_cursor 0072          __end_of_i2c_write_char 0178  
               _get_30v_current 0FAE            i2c_Write_string@data 0071            lcd_print_int@decimal 0024  
              _one_second_timer 006A                      __pbssBANK0 004F                       ?_i2c_Stop 0070  
   lcd_print_int@ten_thou_digit 0025                         ?_RX_one 0070              ADC_get_val@channel 0073  
                       ?_TX_one 0070                      __pmaintext 0805                         ?___bmul 0070  
                       ?___wmul 0070                      __pintentry 0004                      _digitalpot 01AF  
                       _CCP9CON 061C                       ?___ftpack 0070                       ?_Vout_set 0074  
                     ?___lwtoft 0078                 ?_i2c_write_char 0070                         _SSP1ADD 0212  
                       _SSP1BUF 0211               ?_i2c_Write_string 0071                         RX_one@i 0071  
                       TX_one@i 0072              ??_i2c_Write_string 0073                      ??_i2c_Stop 0070  
                     ?_init_ADC 0070         __end_of_i2c_second_line 0189                       ?_init_i2c 0070  
             __end_of_clear_lcd 01AF                       ?_buzz_one 0070                   ??_ADC_get_val 0073  
               __size_of_RX_one 0020                 __size_of_TX_one 0022                 __size_of___bmul 0023  
                       ___ftadd 0381                 __size_of___wmul 0015                         ___ftmul 0317  
                       ___fttol 058D                      ??___ftpack 0075         __end_of_get_30v_current 0FEF  
                       __ptext1 0473                         __ptext2 0F47                         __ptext3 0F31  
                       __ptext4 0178                         __ptext5 0189                         __ptext6 01C7  
                       __ptext7 019A                         __ptext8 056C                         __ptext9 0537  
                    ??_Vout_set 0076                      ??___lwtoft 007B                    __size_of_isr 0091  
                    _buzz_timer 0067  init_i2c_lcd_5v@single1_double2 0071                         clrloop0 065C  
          end_of_initialization 00A2                      ??_init_ADC 0070                      ??_init_i2c 0070  
                    ??_buzz_one 0072                ??_i2c_first_line 0071            __size_of_print_error 0055  
        __size_of_debug_fast_tx 002D                    __pstringtext 1000                     ?_digitalpot 0070  
           __end_of_ADC_get_val 0FAE                __CFG_FOSC$INTOSC 0000           __end_of_lcd_print_int 016B  
                 ?_print_screen 0074                   ?_testjig_done 0070               ?_power_supply_set 0070  
              ?_i2c_second_line 0070              ??_power_supply_set 0070                  ten_thou_conv@n 0076  
                   ___ftmul@exp 0026                  __end_of_RX_one 0F31                  __end_of_TX_one 0F11  
                __end_of___bmul 0302                  __end_of___wmul 0317                    buzz_one@time 0070  
              ?_get_30v_current 0045                   _debug_fast_tx 0537                       _i2c_Start 0226  
                     _i2c_Write 021A             start_initialization 0097        __size_of_init_i2c_lcd_5v 0038  
                ??_print_screen 0078                     __end_of_isr 0095                  ??_testjig_done 0078  
           __size_of_digitalpot 0018               __size_of_i2c_Stop 0005                 print_screen@top 0074  
                      ??_RX_one 0070                        ??_TX_one 0070                     _ADC_get_val 0F9C  
                      ??___bmul 0071                        ??___wmul 0074                     __pdataBANK0 006A  
              ??_i2c_write_char 0071                  ?_debug_fast_tx 0070               __size_of___ftpack 003E  
                    ?_i2c_Start 0070                      ?_i2c_Write 0070               __size_of_Vout_set 0039  
                     ___latbits 0003               __size_of___lwtoft 0011                   __pcstackBANK0 0020  
            _pickit_red_counter 0062                lcd_print_int@pos 0022          __size_of_ten_thou_conv 00AF  
                     __pnvBANK0 0067               __size_of_init_ADC 0007               __size_of_init_i2c 0017  
                     _clear_lcd 019A               __size_of_buzz_one 0008       __size_of_i2c_Write_string 001B  
                      ?___ftadd 002C                        ?___ftmul 0020                        ?___fttol 0038  
                     __pswtext1 05F6                       __pswtext2 0600                       __pswtext3 05EA  
                      _CCPTMRS2 029F                __CFG_WDTE$SWDTEN 0000               ??_init_i2c_lcd_5v 0072  
       __size_of_lcd_set_cursor 0018                  ___wmul@product 0074                       clear_ram0 065B  
                      _PIE1bits 0091                        _PIR1bits 0011                      ?_clear_lcd 0070  
          __end_of_print_screen 0F47              print_screen@bottom 0076                        _SSP1CON1 0215  
                      _SSP1CON2 0216            __end_of_testjig_done 0537                    ??_digitalpot 0071  
                      _SSP1STAT 0214                    _pickit_timer 0059                    _pickit_state 0069  
                 _ten_thou_conv 0230                 ??_debug_fast_tx 0072                      _ADCON0bits 009D  
             ___wmul@multiplier 0070                     ??_i2c_Start 0070                     ??_i2c_Write 0070  
                debug_fast_tx@i 0072               testjig_done@state 007B                        _i2c_Stop 022B  
                 ??_print_error 0020              __end_of_digitalpot 01C7           ADC_get_val@return_val 0074  
                 Vout_set@Volts 0074                  ?_ten_thou_conv 0076                __size_of___ftadd 00B4  
              __size_of___ftmul 006A                __size_of___fttol 005D       __size_of_power_supply_set 0021  
                      ___ftpack 0435                        _Vout_set 00A6                        ___lwtoft 0FEF  
       init_i2c_lcd_5v@contrast 0074               Vout_set@digi_step 0076                        __ptext10 0564  
                      __ptext11 00F7                        __ptext20 0654                        __ptext12 0230  
                      __ptext21 0FAE                        __ptext13 0302                        __ptext30 021A  
                      __ptext22 0FEF                        __ptext14 02DF                        __ptext31 022B  
                      __ptext23 058D                        __ptext15 00DF                        __ptext32 0226  
                      __ptext24 0317                        __ptext16 016B                        __ptext33 0EEF  
                      __ptext25 0381                        __ptext17 01E2                        __ptext34 0F11  
                      __ptext26 0435                        __ptext18 0628                        __ptext27 0F9C  
                      __ptext19 063F                        __ptext28 00A6                        __ptext29 01AF  
                  _SSP1CON2bits 0216                        _init_ADC 0654                        _init_i2c 0628  
                 __size_of_main 06EA                        _buzz_one 0564                    ?_ADC_get_val 0070  
                   ??_clear_lcd 0071             __end_of_print_error 0F9C                _i2c_Write_string 01C7  
                      _ten_thou 0064                        _tj_timer 005D          __size_of_lcd_print_int 0074  
      __size_of_i2c_second_line 0011                        int$flags 007E                    _SSP1STATbits 0214  
       __size_of_i2c_first_line 0011              _uart_receive_timer 005F             get_30v_current@temp 0047  
                    _INTCONbits 000B        __size_of_get_30v_current 0041                        intlevel1 0000  
                _lcd_set_cursor 00DF               lcd_set_cursor@col 0071               lcd_set_cursor@row 0072  
         __size_of_print_screen 0016               __CFG_CLKOUTEN$OFF 0000           __size_of_testjig_done 00C4  
        power_supply_set@supply 0070                 ??_ten_thou_conv 0078                      _OPTION_REG 0095  
                 _testjig_timer 005B                 _init_i2c_lcd_5v 01E2                   _lcd_print_int 00F7  
               _curent_sink_val 0051                    _print_screen 0F31          __end_of_lcd_set_cursor 00F7  
                  _testjig_done 0473               _init_current_sink 063F                      RX_one@data 0072  
                   _print_error 0F47              ?_init_current_sink 0070  
