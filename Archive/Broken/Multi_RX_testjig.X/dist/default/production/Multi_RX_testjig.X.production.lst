

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Tue Nov 07 12:11:19 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	stringtext12,global,class=STRCODE,delta=2
    20                           	psect	stringtext13,global,class=STRCODE,delta=2
    21                           	psect	stringtext14,global,class=STRCODE,delta=2
    22                           	psect	stringtext15,global,class=STRCODE,delta=2
    23                           	psect	stringtext16,global,class=STRCODE,delta=2
    24                           	psect	stringtext17,global,class=STRCODE,delta=2
    25                           	psect	stringtext18,global,class=STRCODE,delta=2
    26                           	psect	stringtext19,global,class=STRCODE,delta=2
    27                           	psect	stringtext20,global,class=STRCODE,delta=2
    28                           	psect	stringtext21,global,class=STRCODE,delta=2
    29                           	psect	stringtext22,global,class=STRCODE,delta=2
    30                           	psect	stringtext23,global,class=STRCODE,delta=2
    31                           	psect	stringtext24,global,class=STRCODE,delta=2
    32                           	psect	stringtext25,global,class=STRCODE,delta=2
    33                           	psect	stringtext26,global,class=STRCODE,delta=2
    34                           	psect	stringtext27,global,class=STRCODE,delta=2
    35                           	psect	stringtext28,global,class=STRCODE,delta=2
    36                           	psect	stringtext29,global,class=STRCODE,delta=2
    37                           	psect	stringtext30,global,class=STRCODE,delta=2
    38                           	psect	stringtext31,global,class=STRCODE,delta=2
    39                           	psect	stringtext32,global,class=STRCODE,delta=2
    40                           	psect	stringtext33,global,class=STRCODE,delta=2
    41                           	psect	stringtext34,global,class=STRCODE,delta=2
    42                           	psect	stringtext35,global,class=STRCODE,delta=2
    43                           	psect	stringtext36,global,class=STRCODE,delta=2
    44                           	psect	stringtext37,global,class=STRCODE,delta=2
    45                           	psect	stringtext38,global,class=STRCODE,delta=2
    46                           	psect	stringtext39,global,class=STRCODE,delta=2
    47                           	psect	stringtext40,global,class=STRCODE,delta=2
    48                           	psect	stringtext41,global,class=STRCODE,delta=2
    49                           	psect	stringtext42,global,class=STRCODE,delta=2
    50                           	psect	stringtext43,global,class=STRCODE,delta=2
    51                           	psect	stringtext44,global,class=STRCODE,delta=2
    52                           	psect	stringtext45,global,class=STRCODE,delta=2
    53                           	psect	stringtext46,global,class=STRCODE,delta=2
    54                           	psect	stringtext47,global,class=STRCODE,delta=2
    55                           	psect	stringtext48,global,class=STRCODE,delta=2
    56                           	psect	stringtext49,global,class=STRCODE,delta=2
    57                           	psect	stringtext50,global,class=STRCODE,delta=2
    58                           	psect	stringtext51,global,class=STRCODE,delta=2
    59                           	psect	cinit,global,class=CODE,merge=1,delta=2
    60                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    61                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    62                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    63                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    64                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    65                           	psect	inittext,global,class=CODE,delta=2
    66                           	psect	clrtext,global,class=CODE,delta=2
    67                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    68                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    69                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    70                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    71                           	psect	text1,local,class=CODE,merge=1,delta=2
    72                           	psect	text2,local,class=CODE,merge=1,delta=2
    73                           	psect	text3,local,class=CODE,merge=1,delta=2
    74                           	psect	text4,local,class=CODE,merge=1,delta=2
    75                           	psect	text5,local,class=CODE,merge=1,delta=2
    76                           	psect	text6,local,class=CODE,merge=1,delta=2
    77                           	psect	text7,local,class=CODE,merge=1,delta=2
    78                           	psect	text8,local,class=CODE,merge=1,delta=2
    79                           	psect	text9,local,class=CODE,merge=1,delta=2
    80                           	psect	text10,local,class=CODE,merge=1,delta=2
    81                           	psect	text11,local,class=CODE,merge=1,delta=2
    82                           	psect	text12,local,class=CODE,merge=1,delta=2
    83                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    84                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text15,local,class=CODE,merge=1,delta=2
    86                           	psect	text16,local,class=CODE,merge=1,delta=2
    87                           	psect	text17,local,class=CODE,merge=1,delta=2
    88                           	psect	text18,local,class=CODE,merge=1,delta=2
    89                           	psect	text19,local,class=CODE,merge=1,delta=2
    90                           	psect	text20,local,class=CODE,merge=1,delta=2
    91                           	psect	text21,local,class=CODE,merge=1,delta=2
    92                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    93                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    94                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    95                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    96                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    97                           	psect	text27,local,class=CODE,merge=1,delta=2
    98                           	psect	text28,local,class=CODE,merge=1,delta=2
    99                           	psect	text29,local,class=CODE,merge=1,delta=2
   100                           	psect	text30,local,class=CODE,merge=1,delta=2
   101                           	psect	text31,local,class=CODE,merge=1,delta=2
   102                           	psect	text32,local,class=CODE,merge=1,delta=2
   103                           	psect	text33,local,class=CODE,merge=1,delta=2
   104                           	psect	text34,local,class=CODE,merge=1,delta=2
   105                           	psect	text35,local,class=CODE,merge=1,delta=2
   106                           	psect	intentry,global,class=CODE,delta=2
   107                           	psect	swtext1,local,class=CONST,delta=2
   108                           	dabs	1,0x7E,2
   109  0000                     
   110                           ; Version 1.42
   111                           ; Generated 13/04/2017 GMT
   112                           ; 
   113                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC16F1527 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0110                     	;# 
   198  0116                     	;# 
   199  0117                     	;# 
   200  011D                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  018F                     	;# 
   204  0190                     	;# 
   205  0191                     	;# 
   206  0191                     	;# 
   207  0192                     	;# 
   208  0193                     	;# 
   209  0193                     	;# 
   210  0194                     	;# 
   211  0195                     	;# 
   212  0196                     	;# 
   213  0197                     	;# 
   214  0199                     	;# 
   215  0199                     	;# 
   216  0199                     	;# 
   217  019A                     	;# 
   218  019A                     	;# 
   219  019A                     	;# 
   220  019B                     	;# 
   221  019B                     	;# 
   222  019B                     	;# 
   223  019B                     	;# 
   224  019B                     	;# 
   225  019C                     	;# 
   226  019C                     	;# 
   227  019C                     	;# 
   228  019D                     	;# 
   229  019D                     	;# 
   230  019D                     	;# 
   231  019E                     	;# 
   232  019E                     	;# 
   233  019E                     	;# 
   234  019F                     	;# 
   235  019F                     	;# 
   236  019F                     	;# 
   237  020D                     	;# 
   238  020F                     	;# 
   239  0210                     	;# 
   240  0211                     	;# 
   241  0211                     	;# 
   242  0212                     	;# 
   243  0212                     	;# 
   244  0213                     	;# 
   245  0213                     	;# 
   246  0214                     	;# 
   247  0214                     	;# 
   248  0215                     	;# 
   249  0215                     	;# 
   250  0215                     	;# 
   251  0216                     	;# 
   252  0216                     	;# 
   253  0217                     	;# 
   254  0217                     	;# 
   255  0219                     	;# 
   256  021A                     	;# 
   257  021B                     	;# 
   258  021C                     	;# 
   259  021D                     	;# 
   260  021E                     	;# 
   261  021F                     	;# 
   262  028C                     	;# 
   263  028D                     	;# 
   264  0291                     	;# 
   265  0291                     	;# 
   266  0292                     	;# 
   267  0293                     	;# 
   268  0298                     	;# 
   269  0298                     	;# 
   270  0299                     	;# 
   271  029A                     	;# 
   272  029D                     	;# 
   273  029E                     	;# 
   274  029F                     	;# 
   275  030C                     	;# 
   276  030D                     	;# 
   277  0311                     	;# 
   278  0311                     	;# 
   279  0312                     	;# 
   280  0313                     	;# 
   281  0318                     	;# 
   282  0318                     	;# 
   283  0319                     	;# 
   284  031A                     	;# 
   285  031C                     	;# 
   286  031C                     	;# 
   287  031D                     	;# 
   288  031E                     	;# 
   289  038C                     	;# 
   290  038D                     	;# 
   291  0394                     	;# 
   292  0395                     	;# 
   293  0396                     	;# 
   294  040C                     	;# 
   295  040D                     	;# 
   296  0411                     	;# 
   297  0411                     	;# 
   298  0412                     	;# 
   299  0413                     	;# 
   300  0414                     	;# 
   301  0415                     	;# 
   302  0416                     	;# 
   303  0417                     	;# 
   304  0418                     	;# 
   305  0418                     	;# 
   306  0419                     	;# 
   307  041A                     	;# 
   308  041B                     	;# 
   309  041C                     	;# 
   310  041D                     	;# 
   311  041E                     	;# 
   312  048D                     	;# 
   313  0491                     	;# 
   314  0491                     	;# 
   315  0492                     	;# 
   316  0492                     	;# 
   317  0493                     	;# 
   318  0493                     	;# 
   319  0493                     	;# 
   320  0494                     	;# 
   321  0494                     	;# 
   322  0495                     	;# 
   323  0495                     	;# 
   324  0496                     	;# 
   325  0496                     	;# 
   326  0497                     	;# 
   327  0497                     	;# 
   328  0595                     	;# 
   329  0596                     	;# 
   330  0597                     	;# 
   331  059C                     	;# 
   332  059D                     	;# 
   333  059E                     	;# 
   334  0611                     	;# 
   335  0611                     	;# 
   336  0612                     	;# 
   337  0613                     	;# 
   338  0614                     	;# 
   339  0614                     	;# 
   340  0615                     	;# 
   341  0616                     	;# 
   342  0617                     	;# 
   343  0617                     	;# 
   344  0618                     	;# 
   345  0619                     	;# 
   346  061A                     	;# 
   347  061A                     	;# 
   348  061B                     	;# 
   349  061C                     	;# 
   350  061D                     	;# 
   351  061D                     	;# 
   352  061E                     	;# 
   353  061F                     	;# 
   354  0FE4                     	;# 
   355  0FE5                     	;# 
   356  0FE6                     	;# 
   357  0FE7                     	;# 
   358  0FE8                     	;# 
   359  0FE9                     	;# 
   360  0FEA                     	;# 
   361  0FEB                     	;# 
   362  0FED                     	;# 
   363  0FEE                     	;# 
   364  0FEF                     	;# 
   365                           
   366                           	psect	idataBANK0
   367  0889                     __pidataBANK0:	
   368                           
   369                           ;initializer for _one_second_timer
   370  0889  34E8               	retlw	232
   371  088A  3403               	retlw	3
   372                           
   373                           ;initializer for _button_beep_delay
   374  088B  3402               	retlw	2
   375                           
   376                           	psect	idataBANK1
   377  0AFD                     __pidataBANK1:	
   378                           
   379                           ;initializer for lcd_bar_create@F3820
   380  0AFD  341F               	retlw	31
   381  0AFE  341F               	retlw	31
   382  0AFF  341F               	retlw	31
   383  0B00  341F               	retlw	31
   384  0B01  341F               	retlw	31
   385  0B02  341F               	retlw	31
   386  0B03  341F               	retlw	31
   387  0B04  341F               	retlw	31
   388                           
   389                           ;initializer for lcd_bar_create@F3818
   390  0B05  3400               	retlw	0
   391  0B06  341F               	retlw	31
   392  0B07  341F               	retlw	31
   393  0B08  341F               	retlw	31
   394  0B09  341F               	retlw	31
   395  0B0A  341F               	retlw	31
   396  0B0B  341F               	retlw	31
   397  0B0C  341F               	retlw	31
   398                           
   399                           ;initializer for lcd_bar_create@F3816
   400  0B0D  3400               	retlw	0
   401  0B0E  3400               	retlw	0
   402  0B0F  341F               	retlw	31
   403  0B10  341F               	retlw	31
   404  0B11  341F               	retlw	31
   405  0B12  341F               	retlw	31
   406  0B13  341F               	retlw	31
   407  0B14  341F               	retlw	31
   408                           
   409                           ;initializer for lcd_bar_create@F3814
   410  0B15  3400               	retlw	0
   411  0B16  3400               	retlw	0
   412  0B17  3400               	retlw	0
   413  0B18  341F               	retlw	31
   414  0B19  341F               	retlw	31
   415  0B1A  341F               	retlw	31
   416  0B1B  341F               	retlw	31
   417  0B1C  341F               	retlw	31
   418                           
   419                           ;initializer for lcd_bar_create@F3812
   420  0B1D  3400               	retlw	0
   421  0B1E  3400               	retlw	0
   422  0B1F  3400               	retlw	0
   423  0B20  3400               	retlw	0
   424  0B21  341F               	retlw	31
   425  0B22  341F               	retlw	31
   426  0B23  341F               	retlw	31
   427  0B24  341F               	retlw	31
   428                           
   429                           ;initializer for lcd_bar_create@F3810
   430  0B25  3400               	retlw	0
   431  0B26  3400               	retlw	0
   432  0B27  3400               	retlw	0
   433  0B28  3400               	retlw	0
   434  0B29  3400               	retlw	0
   435  0B2A  341F               	retlw	31
   436  0B2B  341F               	retlw	31
   437  0B2C  341F               	retlw	31
   438                           
   439                           ;initializer for lcd_bar_create@F3808
   440  0B2D  3400               	retlw	0
   441  0B2E  3400               	retlw	0
   442  0B2F  3400               	retlw	0
   443  0B30  3400               	retlw	0
   444  0B31  3400               	retlw	0
   445  0B32  3400               	retlw	0
   446  0B33  341F               	retlw	31
   447  0B34  341F               	retlw	31
   448                           
   449                           ;initializer for lcd_bar_create@F3806
   450  0B35  3400               	retlw	0
   451  0B36  3400               	retlw	0
   452  0B37  3400               	retlw	0
   453  0B38  3400               	retlw	0
   454  0B39  3400               	retlw	0
   455  0B3A  3400               	retlw	0
   456  0B3B  3400               	retlw	0
   457  0B3C  341F               	retlw	31
   458                           
   459                           	psect	stringtext1
   460  123C                     __pstringtext1:	
   461  123C                     _popup_delay:	
   462  123C  340F               	retlw	15
   463  123D  3400               	retlw	0
   464  123E                     __end_of_popup_delay:	
   465                           
   466                           	psect	nvBANK0
   467  006C                     __pnvBANK0:	
   468  006C                     _pickit_state:	
   469  006C                     	ds	1
   470                           
   471                           	psect	nvBANK1
   472  00ED                     __pnvBANK1:	
   473  00ED                     _buzz_timer:	
   474  00ED                     	ds	2
   475  001B                     _PR2	set	27
   476  001C                     _T2CON	set	28
   477  0010                     _PORTE	set	16
   478  000F                     _PORTD	set	15
   479  000E                     _PORTC	set	14
   480  000D                     _PORTB	set	13
   481  000C                     _PORTA	set	12
   482  0015                     _TMR0	set	21
   483  0011                     _PIR1bits	set	17
   484  000B                     _INTCONbits	set	11
   485  00A5                     _RC2IF	set	165
   486  0080                     _RE0	set	128
   487  0062                     _RA2	set	98
   488  005F                     _GIE	set	95
   489  0064                     _RA4	set	100
   490  0065                     _RA5	set	101
   491  005D                     _TMR0IE	set	93
   492  005A                     _TMR0IF	set	90
   493  0084                     _RE4	set	132
   494  0085                     _RE5	set	133
   495  0086                     _RE6	set	134
   496  0091                     _PIE1bits	set	145
   497  009B                     _ADRESL	set	155
   498  009C                     _ADRESH	set	156
   499  009D                     _ADCON0bits	set	157
   500  009D                     _ADCON0	set	157
   501  009E                     _ADCON1	set	158
   502  0096                     _PCONbits	set	150
   503  0090                     _TRISE	set	144
   504  008F                     _TRISD	set	143
   505  008E                     _TRISC	set	142
   506  008D                     _TRISB	set	141
   507  008C                     _TRISA	set	140
   508  0095                     _OPTION_REG	set	149
   509  0099                     _OSCCON	set	153
   510  0474                     _TRISC4	set	1140
   511  0473                     _TRISC3	set	1139
   512  0117                     _FVRCON	set	279
   513  087A                     _LATD2	set	2170
   514  087E                     _LATD6	set	2174
   515  087D                     _LATD5	set	2173
   516  087C                     _LATD4	set	2172
   517  0866                     _LATA6	set	2150
   518  086D                     _LATB5	set	2157
   519  0867                     _LATA7	set	2151
   520  0875                     _LATC5	set	2165
   521  0876                     _LATC6	set	2166
   522  0877                     _LATC7	set	2167
   523  0872                     _LATC2	set	2162
   524  0190                     _ANSELE	set	400
   525  018F                     _ANSELD	set	399
   526  018D                     _ANSELB	set	397
   527  018C                     _ANSELA	set	396
   528  0212                     _SSP1ADD	set	530
   529  0215                     _SSP1CON1	set	533
   530  0214                     _SSP1STAT	set	532
   531  0216                     _SSP1CON2	set	534
   532  0214                     _SSP1STATbits	set	532
   533  0211                     _SSP1BUF	set	529
   534  0216                     _SSP1CON2bits	set	534
   535  0210                     _WPUE	set	528
   536  020F                     _WPUD	set	527
   537  020D                     _WPUB	set	525
   538  029F                     _CCPTMRS2	set	671
   539  028D                     _PORTG	set	653
   540  028C                     _PORTF	set	652
   541  146B                     _RG3	set	5227
   542  1463                     _RF3	set	5219
   543  030D                     _TRISG	set	781
   544  030C                     _TRISF	set	780
   545  1868                     _TRISG0	set	6248
   546  1C68                     _LATG0	set	7272
   547  1C64                     _LATF4	set	7268
   548  040D                     _ANSELG	set	1037
   549  040C                     _ANSELF	set	1036
   550  0491                     _RC2REG	set	1169
   551  0495                     _RC2STAbits	set	1173
   552  0492                     _TX2REG	set	1170
   553  0496                     _TX2STAbits	set	1174
   554  0596                     _PR8	set	1430
   555  0597                     _T8CON	set	1431
   556  061A                     _CCPR9L	set	1562
   557  061C                     _CCP9CON	set	1564
   558                           
   559                           	psect	stringtext2
   560  1000                     __pstringtext2:	
   561  1000                     STR_27:	
   562  1000  3450               	retlw	80	;'P'
   563  1001  3469               	retlw	105	;'i'
   564  1002  3463               	retlw	99	;'c'
   565  1003  346B               	retlw	107	;'k'
   566  1004  3469               	retlw	105	;'i'
   567  1005  3474               	retlw	116	;'t'
   568  1006  3420               	retlw	32	;' '
   569  1007  3450               	retlw	80	;'P'
   570  1008  3472               	retlw	114	;'r'
   571  1009  346F               	retlw	111	;'o'
   572  100A  3467               	retlw	103	;'g'
   573  100B  3472               	retlw	114	;'r'
   574  100C  3461               	retlw	97	;'a'
   575  100D  346D               	retlw	109	;'m'
   576  100E  346D               	retlw	109	;'m'
   577  100F  3469               	retlw	105	;'i'
   578  1010  346E               	retlw	110	;'n'
   579  1011  3467               	retlw	103	;'g'
   580  1012  3400               	retlw	0
   581                           
   582                           	psect	stringtext3
   583  1013                     __pstringtext3:	
   584  1013                     STR_97:	
   585  1013  344D               	retlw	77	;'M'
   586  1014  3475               	retlw	117	;'u'
   587  1015  346C               	retlw	108	;'l'
   588  1016  3474               	retlw	116	;'t'
   589  1017  3469               	retlw	105	;'i'
   590  1018  345F               	retlw	95	;'_'
   591  1019  3452               	retlw	82	;'R'
   592  101A  3458               	retlw	88	;'X'
   593  101B  3420               	retlw	32	;' '
   594  101C  3454               	retlw	84	;'T'
   595  101D  3465               	retlw	101	;'e'
   596  101E  3473               	retlw	115	;'s'
   597  101F  3474               	retlw	116	;'t'
   598  1020  346A               	retlw	106	;'j'
   599  1021  3469               	retlw	105	;'i'
   600  1022  3467               	retlw	103	;'g'
   601  1023  3400               	retlw	0
   602                           
   603                           	psect	stringtext4
   604  1024                     __pstringtext4:	
   605  1024                     STR_68:	
   606  1024  3444               	retlw	68	;'D'
   607  1025  3465               	retlw	101	;'e'
   608  1026  3463               	retlw	99	;'c'
   609  1027  346F               	retlw	111	;'o'
   610  1028  3464               	retlw	100	;'d'
   611  1029  3465               	retlw	101	;'e'
   612  102A  3420               	retlw	32	;' '
   613  102B  344F               	retlw	79	;'O'
   614  102C  346C               	retlw	108	;'l'
   615  102D  3464               	retlw	100	;'d'
   616  102E  3420               	retlw	32	;' '
   617  102F  342D               	retlw	45	;'-'
   618  1030  3446               	retlw	70	;'F'
   619  1031  3461               	retlw	97	;'a'
   620  1032  3469               	retlw	105	;'i'
   621  1033  346C               	retlw	108	;'l'
   622  1034  3400               	retlw	0
   623                           
   624                           	psect	stringtext5
   625  1035                     __pstringtext5:	
   626  1035                     STR_89:	
   627  1035  3454               	retlw	84	;'T'
   628  1036  3465               	retlw	101	;'e'
   629  1037  3473               	retlw	115	;'s'
   630  1038  3474               	retlw	116	;'t'
   631  1039  346A               	retlw	106	;'j'
   632  103A  3469               	retlw	105	;'i'
   633  103B  3467               	retlw	103	;'g'
   634  103C  3420               	retlw	32	;' '
   635  103D  3450               	retlw	80	;'P'
   636  103E  346F               	retlw	111	;'o'
   637  103F  3477               	retlw	119	;'w'
   638  1040  3465               	retlw	101	;'e'
   639  1041  3472               	retlw	114	;'r'
   640  1042  342D               	retlw	45	;'-'
   641  1043  3475               	retlw	117	;'u'
   642  1044  3470               	retlw	112	;'p'
   643  1045  3400               	retlw	0
   644                           
   645                           	psect	stringtext6
   646  1046                     __pstringtext6:	
   647  1046                     STR_2:	
   648  1046  3454               	retlw	84	;'T'
   649  1047  3465               	retlw	101	;'e'
   650  1048  3473               	retlw	115	;'s'
   651  1049  3474               	retlw	116	;'t'
   652  104A  342D               	retlw	45	;'-'
   653  104B  344A               	retlw	74	;'J'
   654  104C  3469               	retlw	105	;'i'
   655  104D  3467               	retlw	103	;'g'
   656  104E  347C               	retlw	124	;'|'
   657  104F  3453               	retlw	83	;'S'
   658  1050  3474               	retlw	116	;'t'
   659  1051  3461               	retlw	97	;'a'
   660  1052  3472               	retlw	114	;'r'
   661  1053  3474               	retlw	116	;'t'
   662  1054  3475               	retlw	117	;'u'
   663  1055  3470               	retlw	112	;'p'
   664  1056  3400               	retlw	0
   665                           
   666                           	psect	stringtext7
   667  1057                     __pstringtext7:	
   668  1057                     STR_108:	
   669  1057  3420               	retlw	32	;' '
   670  1058  3474               	retlw	116	;'t'
   671  1059  346F               	retlw	111	;'o'
   672  105A  3420               	retlw	32	;' '
   673  105B  3472               	retlw	114	;'r'
   674  105C  3465               	retlw	101	;'e'
   675  105D  3473               	retlw	115	;'s'
   676  105E  3474               	retlw	116	;'t'
   677  105F  3461               	retlw	97	;'a'
   678  1060  3472               	retlw	114	;'r'
   679  1061  3474               	retlw	116	;'t'
   680  1062  3420               	retlw	32	;' '
   681  1063  3474               	retlw	116	;'t'
   682  1064  3465               	retlw	101	;'e'
   683  1065  3473               	retlw	115	;'s'
   684  1066  3474               	retlw	116	;'t'
   685  1067  3400               	retlw	0
   686                           
   687                           	psect	stringtext8
   688  1068                     __pstringtext8:	
   689  1068                     STR_66:	
   690  1068  3444               	retlw	68	;'D'
   691  1069  3465               	retlw	101	;'e'
   692  106A  3463               	retlw	99	;'c'
   693  106B  346F               	retlw	111	;'o'
   694  106C  3464               	retlw	100	;'d'
   695  106D  3465               	retlw	101	;'e'
   696  106E  3420               	retlw	32	;' '
   697  106F  344E               	retlw	78	;'N'
   698  1070  3465               	retlw	101	;'e'
   699  1071  3477               	retlw	119	;'w'
   700  1072  3420               	retlw	32	;' '
   701  1073  342D               	retlw	45	;'-'
   702  1074  3420               	retlw	32	;' '
   703  1075  344F               	retlw	79	;'O'
   704  1076  344B               	retlw	75	;'K'
   705  1077  3400               	retlw	0
   706                           
   707                           	psect	stringtext9
   708  1078                     __pstringtext9:	
   709  1078                     STR_46:	
   710  1078  3420               	retlw	32	;' '
   711  1079  3445               	retlw	69	;'E'
   712  107A  3472               	retlw	114	;'r'
   713  107B  3472               	retlw	114	;'r'
   714  107C  346F               	retlw	111	;'o'
   715  107D  3472               	retlw	114	;'r'
   716  107E  3420               	retlw	32	;' '
   717  107F  342D               	retlw	45	;'-'
   718  1080  3420               	retlw	32	;' '
   719  1081  344D               	retlw	77	;'M'
   720  1082  3469               	retlw	105	;'i'
   721  1083  3463               	retlw	99	;'c'
   722  1084  3472               	retlw	114	;'r'
   723  1085  3465               	retlw	101	;'e'
   724  1086  346C               	retlw	108	;'l'
   725  1087  3400               	retlw	0
   726                           
   727                           	psect	stringtext10
   728  1088                     __pstringtext10:	
   729  1088                     STR_77:	
   730  1088  344D               	retlw	77	;'M'
   731  1089  3465               	retlw	101	;'e'
   732  108A  346D               	retlw	109	;'m'
   733  108B  345F               	retlw	95	;'_'
   734  108C  3443               	retlw	67	;'C'
   735  108D  346F               	retlw	111	;'o'
   736  108E  3470               	retlw	112	;'p'
   737  108F  3469               	retlw	105	;'i'
   738  1090  3465               	retlw	101	;'e'
   739  1091  3472               	retlw	114	;'r'
   740  1092  3420               	retlw	32	;' '
   741  1093  3450               	retlw	80	;'P'
   742  1094  3461               	retlw	97	;'a'
   743  1095  3473               	retlw	115	;'s'
   744  1096  3473               	retlw	115	;'s'
   745  1097  3400               	retlw	0
   746                           
   747                           	psect	stringtext11
   748  1098                     __pstringtext11:	
   749  1098                     STR_5:	
   750  1098  3450               	retlw	80	;'P'
   751  1099  346F               	retlw	111	;'o'
   752  109A  3477               	retlw	119	;'w'
   753  109B  3465               	retlw	101	;'e'
   754  109C  3472               	retlw	114	;'r'
   755  109D  3469               	retlw	105	;'i'
   756  109E  346E               	retlw	110	;'n'
   757  109F  3467               	retlw	103	;'g'
   758  10A0  3420               	retlw	32	;' '
   759  10A1  3462               	retlw	98	;'b'
   760  10A2  346F               	retlw	111	;'o'
   761  10A3  3461               	retlw	97	;'a'
   762  10A4  3472               	retlw	114	;'r'
   763  10A5  3464               	retlw	100	;'d'
   764  10A6  3400               	retlw	0
   765                           
   766                           	psect	stringtext12
   767  10A7                     __pstringtext12:	
   768  10A7                     STR_70:	
   769  10A7  3445               	retlw	69	;'E'
   770  10A8  3472               	retlw	114	;'r'
   771  10A9  3472               	retlw	114	;'r'
   772  10AA  346F               	retlw	111	;'o'
   773  10AB  3472               	retlw	114	;'r'
   774  10AC  3420               	retlw	32	;' '
   775  10AD  342D               	retlw	45	;'-'
   776  10AE  3420               	retlw	32	;' '
   777  10AF  3444               	retlw	68	;'D'
   778  10B0  3465               	retlw	101	;'e'
   779  10B1  3463               	retlw	99	;'c'
   780  10B2  346F               	retlw	111	;'o'
   781  10B3  3464               	retlw	100	;'d'
   782  10B4  3465               	retlw	101	;'e'
   783  10B5  3400               	retlw	0
   784                           
   785                           	psect	stringtext13
   786  10B6                     __pstringtext13:	
   787  10B6                     STR_91:	
   788  10B6  3443               	retlw	67	;'C'
   789  10B7  346F               	retlw	111	;'o'
   790  10B8  346E               	retlw	110	;'n'
   791  10B9  3464               	retlw	100	;'d'
   792  10BA  346F               	retlw	111	;'o'
   793  10BB  3433               	retlw	51	;'3'
   794  10BC  3420               	retlw	32	;' '
   795  10BD  3454               	retlw	84	;'T'
   796  10BE  3465               	retlw	101	;'e'
   797  10BF  3473               	retlw	115	;'s'
   798  10C0  3474               	retlw	116	;'t'
   799  10C1  346A               	retlw	106	;'j'
   800  10C2  3469               	retlw	105	;'i'
   801  10C3  3467               	retlw	103	;'g'
   802  10C4  3400               	retlw	0
   803                           
   804                           	psect	stringtext14
   805  10C5                     __pstringtext14:	
   806  10C5                     STR_19:	
   807  10C5  3431               	retlw	49	;'1'
   808  10C6  3436               	retlw	54	;'6'
   809  10C7  3476               	retlw	118	;'v'
   810  10C8  342D               	retlw	45	;'-'
   811  10C9  3431               	retlw	49	;'1'
   812  10CA  3432               	retlw	50	;'2'
   813  10CB  3476               	retlw	118	;'v'
   814  10CC  3420               	retlw	32	;' '
   815  10CD  3473               	retlw	115	;'s'
   816  10CE  3475               	retlw	117	;'u'
   817  10CF  3470               	retlw	112	;'p'
   818  10D0  3470               	retlw	112	;'p'
   819  10D1  346C               	retlw	108	;'l'
   820  10D2  3479               	retlw	121	;'y'
   821  10D3  3400               	retlw	0
   822                           
   823                           	psect	stringtext15
   824  10D4                     __pstringtext15:	
   825  10D4                     STR_4:	
   826  10D4  342D               	retlw	45	;'-'
   827  10D5  343E               	retlw	62	;'>'
   828  10D6  3420               	retlw	32	;' '
   829  10D7  3449               	retlw	73	;'I'
   830  10D8  346E               	retlw	110	;'n'
   831  10D9  3473               	retlw	115	;'s'
   832  10DA  3465               	retlw	101	;'e'
   833  10DB  3472               	retlw	114	;'r'
   834  10DC  3474               	retlw	116	;'t'
   835  10DD  3420               	retlw	32	;' '
   836  10DE  3450               	retlw	80	;'P'
   837  10DF  3443               	retlw	67	;'C'
   838  10E0  3442               	retlw	66	;'B'
   839  10E1  3400               	retlw	0
   840                           
   841                           	psect	stringtext16
   842  10E2                     __pstringtext16:	
   843  10E2                     STR_74:	
   844  10E2  3420               	retlw	32	;' '
   845  10E3  3452               	retlw	82	;'R'
   846  10E4  3465               	retlw	101	;'e'
   847  10E5  346D               	retlw	109	;'m'
   848  10E6  346F               	retlw	111	;'o'
   849  10E7  3476               	retlw	118	;'v'
   850  10E8  3465               	retlw	101	;'e'
   851  10E9  3420               	retlw	32	;' '
   852  10EA  3462               	retlw	98	;'b'
   853  10EB  346F               	retlw	111	;'o'
   854  10EC  3461               	retlw	97	;'a'
   855  10ED  3472               	retlw	114	;'r'
   856  10EE  3464               	retlw	100	;'d'
   857  10EF  3400               	retlw	0
   858                           
   859                           	psect	stringtext17
   860  10F0                     __pstringtext17:	
   861  10F0                     STR_44:	
   862  10F0  3420               	retlw	32	;' '
   863  10F1  3445               	retlw	69	;'E'
   864  10F2  3472               	retlw	114	;'r'
   865  10F3  3472               	retlw	114	;'r'
   866  10F4  346F               	retlw	111	;'o'
   867  10F5  3472               	retlw	114	;'r'
   868  10F6  3420               	retlw	32	;' '
   869  10F7  342D               	retlw	45	;'-'
   870  10F8  3420               	retlw	32	;' '
   871  10F9  3448               	retlw	72	;'H'
   872  10FA  3469               	retlw	105	;'i'
   873  10FB  3467               	retlw	103	;'g'
   874  10FC  3468               	retlw	104	;'h'
   875  10FD  3400               	retlw	0
   876                           
   877                           	psect	stringtext18
   878  10FE                     __pstringtext18:	
   879  10FE                     STR_79:	
   880  10FE  344D               	retlw	77	;'M'
   881  10FF  3475               	retlw	117	;'u'
   882  1100  346C               	retlw	108	;'l'
   883  1101  3474               	retlw	116	;'t'
   884  1102  3469               	retlw	105	;'i'
   885  1103  345F               	retlw	95	;'_'
   886  1104  3452               	retlw	82	;'R'
   887  1105  3458               	retlw	88	;'X'
   888  1106  3420               	retlw	32	;' '
   889  1107  3450               	retlw	80	;'P'
   890  1108  3461               	retlw	97	;'a'
   891  1109  3473               	retlw	115	;'s'
   892  110A  3473               	retlw	115	;'s'
   893  110B  3400               	retlw	0
   894                           
   895                           	psect	stringtext19
   896  110C                     __pstringtext19:	
   897  110C                     STR_7:	
   898  110C  3431               	retlw	49	;'1'
   899  110D  3432               	retlw	50	;'2'
   900  110E  3476               	retlw	118	;'v'
   901  110F  342D               	retlw	45	;'-'
   902  1110  3435               	retlw	53	;'5'
   903  1111  3476               	retlw	118	;'v'
   904  1112  3420               	retlw	32	;' '
   905  1113  3473               	retlw	115	;'s'
   906  1114  3475               	retlw	117	;'u'
   907  1115  3470               	retlw	112	;'p'
   908  1116  3470               	retlw	112	;'p'
   909  1117  346C               	retlw	108	;'l'
   910  1118  3479               	retlw	121	;'y'
   911  1119  3400               	retlw	0
   912                           
   913                           	psect	stringtext20
   914  111A                     __pstringtext20:	
   915  111A                     STR_15:	
   916  111A  3431               	retlw	49	;'1'
   917  111B  3436               	retlw	54	;'6'
   918  111C  3476               	retlw	118	;'v'
   919  111D  342D               	retlw	45	;'-'
   920  111E  3435               	retlw	53	;'5'
   921  111F  3476               	retlw	118	;'v'
   922  1120  3420               	retlw	32	;' '
   923  1121  3473               	retlw	115	;'s'
   924  1122  3475               	retlw	117	;'u'
   925  1123  3470               	retlw	112	;'p'
   926  1124  3470               	retlw	112	;'p'
   927  1125  346C               	retlw	108	;'l'
   928  1126  3479               	retlw	121	;'y'
   929  1127  3400               	retlw	0
   930                           
   931                           	psect	stringtext21
   932  1128                     __pstringtext21:	
   933  1128                     STR_10:	
   934  1128  3456               	retlw	86	;'V'
   935  1129  346F               	retlw	111	;'o'
   936  112A  346C               	retlw	108	;'l'
   937  112B  3474               	retlw	116	;'t'
   938  112C  3420               	retlw	32	;' '
   939  112D  3445               	retlw	69	;'E'
   940  112E  3472               	retlw	114	;'r'
   941  112F  3472               	retlw	114	;'r'
   942  1130  346F               	retlw	111	;'o'
   943  1131  3472               	retlw	114	;'r'
   944  1132  3420               	retlw	32	;' '
   945  1133  3448               	retlw	72	;'H'
   946  1134  3400               	retlw	0
   947                           
   948                           	psect	stringtext22
   949  1135                     __pstringtext22:	
   950  1135                     STR_57:	
   951  1135  3454               	retlw	84	;'T'
   952  1136  3465               	retlw	101	;'e'
   953  1137  3473               	retlw	115	;'s'
   954  1138  3474               	retlw	116	;'t'
   955  1139  3420               	retlw	32	;' '
   956  113A  3452               	retlw	82	;'R'
   957  113B  3446               	retlw	70	;'F'
   958  113C  3420               	retlw	32	;' '
   959  113D  3452               	retlw	82	;'R'
   960  113E  3453               	retlw	83	;'S'
   961  113F  3453               	retlw	83	;'S'
   962  1140  3449               	retlw	73	;'I'
   963  1141  3400               	retlw	0
   964                           
   965                           	psect	stringtext23
   966  1142                     __pstringtext23:	
   967  1142                     STR_8:	
   968  1142  3456               	retlw	86	;'V'
   969  1143  346F               	retlw	111	;'o'
   970  1144  346C               	retlw	108	;'l'
   971  1145  3474               	retlw	116	;'t'
   972  1146  3420               	retlw	32	;' '
   973  1147  3445               	retlw	69	;'E'
   974  1148  3472               	retlw	114	;'r'
   975  1149  3472               	retlw	114	;'r'
   976  114A  346F               	retlw	111	;'o'
   977  114B  3472               	retlw	114	;'r'
   978  114C  3420               	retlw	32	;' '
   979  114D  344C               	retlw	76	;'L'
   980  114E  3400               	retlw	0
   981                           
   982                           	psect	stringtext24
   983  114F                     __pstringtext24:	
   984  114F                     STR_100:	
   985  114F  3420               	retlw	32	;' '
   986  1150  3450               	retlw	80	;'P'
   987  1151  3472               	retlw	114	;'r'
   988  1152  3465               	retlw	101	;'e'
   989  1153  3473               	retlw	115	;'s'
   990  1154  3473               	retlw	115	;'s'
   991  1155  3420               	retlw	32	;' '
   992  1156  3453               	retlw	83	;'S'
   993  1157  3454               	retlw	84	;'T'
   994  1158  3441               	retlw	65	;'A'
   995  1159  3452               	retlw	82	;'R'
   996  115A  3454               	retlw	84	;'T'
   997  115B  3400               	retlw	0
   998                           
   999                           	psect	stringtext25
  1000  115C                     __pstringtext25:	
  1001  115C                     STR_33:	
  1002  115C  3445               	retlw	69	;'E'
  1003  115D  3473               	retlw	115	;'s'
  1004  115E  3474               	retlw	116	;'t'
  1005  115F  3461               	retlw	97	;'a'
  1006  1160  3462               	retlw	98	;'b'
  1007  1161  346C               	retlw	108	;'l'
  1008  1162  3469               	retlw	105	;'i'
  1009  1163  3473               	retlw	115	;'s'
  1010  1164  3468               	retlw	104	;'h'
  1011  1165  3469               	retlw	105	;'i'
  1012  1166  346E               	retlw	110	;'n'
  1013  1167  3467               	retlw	103	;'g'
  1014  1168  3400               	retlw	0
  1015                           
  1016                           	psect	stringtext26
  1017  1169                     __pstringtext26:	
  1018  1169                     STR_48:	
  1019  1169  3420               	retlw	32	;' '
  1020  116A  3445               	retlw	69	;'E'
  1021  116B  3472               	retlw	114	;'r'
  1022  116C  3472               	retlw	114	;'r'
  1023  116D  346F               	retlw	111	;'o'
  1024  116E  3472               	retlw	114	;'r'
  1025  116F  3420               	retlw	32	;' '
  1026  1170  342D               	retlw	45	;'-'
  1027  1171  3420               	retlw	32	;' '
  1028  1172  344C               	retlw	76	;'L'
  1029  1173  346F               	retlw	111	;'o'
  1030  1174  3477               	retlw	119	;'w'
  1031  1175  3400               	retlw	0
  1032                           
  1033                           	psect	stringtext27
  1034  1176                     __pstringtext27:	
  1035  1176                     STR_43:	
  1036  1176  3454               	retlw	84	;'T'
  1037  1177  3465               	retlw	101	;'e'
  1038  1178  3473               	retlw	115	;'s'
  1039  1179  3474               	retlw	116	;'t'
  1040  117A  3420               	retlw	32	;' '
  1041  117B  3452               	retlw	82	;'R'
  1042  117C  3446               	retlw	70	;'F'
  1043  117D  3420               	retlw	32	;' '
  1044  117E  3433               	retlw	51	;'3'
  1045  117F  3476               	retlw	118	;'v'
  1046  1180  3433               	retlw	51	;'3'
  1047  1181  3400               	retlw	0
  1048                           
  1049                           	psect	stringtext28
  1050  1182                     __pstringtext28:	
  1051  1182                     STR_93:	
  1052  1182  3452               	retlw	82	;'R'
  1053  1183  3458               	retlw	88	;'X'
  1054  1184  3433               	retlw	51	;'3'
  1055  1185  3420               	retlw	32	;' '
  1056  1186  3454               	retlw	84	;'T'
  1057  1187  3465               	retlw	101	;'e'
  1058  1188  3473               	retlw	115	;'s'
  1059  1189  3474               	retlw	116	;'t'
  1060  118A  346A               	retlw	106	;'j'
  1061  118B  3469               	retlw	105	;'i'
  1062  118C  3467               	retlw	103	;'g'
  1063  118D  3400               	retlw	0
  1064                           
  1065                           	psect	stringtext29
  1066  118E                     __pstringtext29:	
  1067  118E                     STR_29:	
  1068  118E  3457               	retlw	87	;'W'
  1069  118F  3461               	retlw	97	;'a'
  1070  1190  3469               	retlw	105	;'i'
  1071  1191  3474               	retlw	116	;'t'
  1072  1192  3469               	retlw	105	;'i'
  1073  1193  346E               	retlw	110	;'n'
  1074  1194  3467               	retlw	103	;'g'
  1075  1195  3420               	retlw	32	;' '
  1076  1196  3466               	retlw	102	;'f'
  1077  1197  346F               	retlw	111	;'o'
  1078  1198  3472               	retlw	114	;'r'
  1079  1199  3400               	retlw	0
  1080                           
  1081                           	psect	stringtext30
  1082  119A                     __pstringtext30:	
  1083  119A                     STR_35:	
  1084  119A  3443               	retlw	67	;'C'
  1085  119B  346F               	retlw	111	;'o'
  1086  119C  346D               	retlw	109	;'m'
  1087  119D  346D               	retlw	109	;'m'
  1088  119E  3473               	retlw	115	;'s'
  1089  119F  3420               	retlw	32	;' '
  1090  11A0  3445               	retlw	69	;'E'
  1091  11A1  3472               	retlw	114	;'r'
  1092  11A2  3472               	retlw	114	;'r'
  1093  11A3  346F               	retlw	111	;'o'
  1094  11A4  3472               	retlw	114	;'r'
  1095  11A5  3400               	retlw	0
  1096                           
  1097                           	psect	stringtext31
  1098  11A6                     __pstringtext31:	
  1099  11A6                     STR_14:	
  1100  11A6  3454               	retlw	84	;'T'
  1101  11A7  342D               	retlw	45	;'-'
  1102  11A8  346F               	retlw	111	;'o'
  1103  11A9  3475               	retlw	117	;'u'
  1104  11AA  3474               	retlw	116	;'t'
  1105  11AB  3420               	retlw	32	;' '
  1106  11AC  3445               	retlw	69	;'E'
  1107  11AD  3472               	retlw	114	;'r'
  1108  11AE  3472               	retlw	114	;'r'
  1109  11AF  346F               	retlw	111	;'o'
  1110  11B0  3472               	retlw	114	;'r'
  1111  11B1  3400               	retlw	0
  1112                           
  1113                           	psect	stringtext32
  1114  11B2                     __pstringtext32:	
  1115  11B2                     STR_73:	
  1116  11B2  3443               	retlw	67	;'C'
  1117  11B3  346F               	retlw	111	;'o'
  1118  11B4  346E               	retlw	110	;'n'
  1119  11B5  3464               	retlw	100	;'d'
  1120  11B6  346F               	retlw	111	;'o'
  1121  11B7  3433               	retlw	51	;'3'
  1122  11B8  3420               	retlw	32	;' '
  1123  11B9  3450               	retlw	80	;'P'
  1124  11BA  3461               	retlw	97	;'a'
  1125  11BB  3473               	retlw	115	;'s'
  1126  11BC  3473               	retlw	115	;'s'
  1127  11BD  3400               	retlw	0
  1128                           
  1129                           	psect	stringtext33
  1130  11BE                     __pstringtext33:	
  1131  11BE                     STR_12:	
  1132  11BE  3443               	retlw	67	;'C'
  1133  11BF  3475               	retlw	117	;'u'
  1134  11C0  3472               	retlw	114	;'r'
  1135  11C1  3472               	retlw	114	;'r'
  1136  11C2  3420               	retlw	32	;' '
  1137  11C3  3445               	retlw	69	;'E'
  1138  11C4  3472               	retlw	114	;'r'
  1139  11C5  3472               	retlw	114	;'r'
  1140  11C6  346F               	retlw	111	;'o'
  1141  11C7  3472               	retlw	114	;'r'
  1142  11C8  3400               	retlw	0
  1143                           
  1144                           	psect	stringtext34
  1145  11C9                     __pstringtext34:	
  1146  11C9                     STR_23:	
  1147  11C9  3431               	retlw	49	;'1'
  1148  11CA  3436               	retlw	54	;'6'
  1149  11CB  3476               	retlw	118	;'v'
  1150  11CC  3420               	retlw	32	;' '
  1151  11CD  3473               	retlw	115	;'s'
  1152  11CE  3475               	retlw	117	;'u'
  1153  11CF  3470               	retlw	112	;'p'
  1154  11D0  3470               	retlw	112	;'p'
  1155  11D1  346C               	retlw	108	;'l'
  1156  11D2  3479               	retlw	121	;'y'
  1157  11D3  3400               	retlw	0
  1158                           
  1159                           	psect	stringtext35
  1160  11D4                     __pstringtext35:	
  1161  11D4                     STR_62:	
  1162  11D4  3452               	retlw	82	;'R'
  1163  11D5  3453               	retlw	83	;'S'
  1164  11D6  3453               	retlw	83	;'S'
  1165  11D7  3449               	retlw	73	;'I'
  1166  11D8  3420               	retlw	32	;' '
  1167  11D9  342D               	retlw	45	;'-'
  1168  11DA  3420               	retlw	32	;' '
  1169  11DB  344F               	retlw	79	;'O'
  1170  11DC  344B               	retlw	75	;'K'
  1171  11DD  3400               	retlw	0
  1172                           
  1173                           	psect	stringtext36
  1174  11DE                     __pstringtext36:	
  1175  11DE                     STR_50:	
  1176  11DE  3433               	retlw	51	;'3'
  1177  11DF  3476               	retlw	118	;'v'
  1178  11E0  3433               	retlw	51	;'3'
  1179  11E1  3420               	retlw	32	;' '
  1180  11E2  342D               	retlw	45	;'-'
  1181  11E3  3420               	retlw	32	;' '
  1182  11E4  344F               	retlw	79	;'O'
  1183  11E5  344B               	retlw	75	;'K'
  1184  11E6  3400               	retlw	0
  1185                           
  1186                           	psect	stringtext37
  1187  11E7                     __pstringtext37:	
  1188  11E7                     STR_1:	
  1189  11E7  344D               	retlw	77	;'M'
  1190  11E8  3475               	retlw	117	;'u'
  1191  11E9  346C               	retlw	108	;'l'
  1192  11EA  3474               	retlw	116	;'t'
  1193  11EB  3469               	retlw	105	;'i'
  1194  11EC  345F               	retlw	95	;'_'
  1195  11ED  3452               	retlw	82	;'R'
  1196  11EE  3458               	retlw	88	;'X'
  1197  11EF  3400               	retlw	0
  1198                           
  1199                           	psect	stringtext38
  1200  11F0                     __pstringtext38:	
  1201  11F0                     STR_32:	
  1202  11F0  3420               	retlw	32	;' '
  1203  11F1  3473               	retlw	115	;'s'
  1204  11F2  346B               	retlw	107	;'k'
  1205  11F3  3469               	retlw	105	;'i'
  1206  11F4  3470               	retlw	112	;'p'
  1207  11F5  3470               	retlw	112	;'p'
  1208  11F6  3465               	retlw	101	;'e'
  1209  11F7  3464               	retlw	100	;'d'
  1210  11F8  3400               	retlw	0
  1211                           
  1212                           	psect	stringtext39
  1213  11F9                     __pstringtext39:	
  1214  11F9                     STR_75:	
  1215  11F9  3452               	retlw	82	;'R'
  1216  11FA  3458               	retlw	88	;'X'
  1217  11FB  3433               	retlw	51	;'3'
  1218  11FC  3420               	retlw	32	;' '
  1219  11FD  3450               	retlw	80	;'P'
  1220  11FE  3461               	retlw	97	;'a'
  1221  11FF  3473               	retlw	115	;'s'
  1222  1200  3473               	retlw	115	;'s'
  1223  1201  3400               	retlw	0
  1224                           
  1225                           	psect	stringtext40
  1226  1202                     __pstringtext40:	
  1227  1202                     STR_81:	
  1228  1202  3443               	retlw	67	;'C'
  1229  1203  346F               	retlw	111	;'o'
  1230  1204  346E               	retlw	110	;'n'
  1231  1205  3464               	retlw	100	;'d'
  1232  1206  346F               	retlw	111	;'o'
  1233  1207  3433               	retlw	51	;'3'
  1234  1208  3420               	retlw	32	;' '
  1235  1209  3400               	retlw	0
  1236                           
  1237                           	psect	stringtext41
  1238  120A                     __pstringtext41:	
  1239  120A                     STR_90:	
  1240  120A  3477               	retlw	119	;'w'
  1241  120B  3461               	retlw	97	;'a'
  1242  120C  3469               	retlw	105	;'i'
  1243  120D  3474               	retlw	116	;'t'
  1244  120E  342E               	retlw	46	;'.'
  1245  120F  342E               	retlw	46	;'.'
  1246  1210  342E               	retlw	46	;'.'
  1247  1211  3400               	retlw	0
  1248                           
  1249                           	psect	stringtext42
  1250  1212                     __pstringtext42:	
  1251  1212                     STR_37:	
  1252  1212  3454               	retlw	84	;'T'
  1253  1213  3465               	retlw	101	;'e'
  1254  1214  3473               	retlw	115	;'s'
  1255  1215  3474               	retlw	116	;'t'
  1256  1216  3420               	retlw	32	;' '
  1257  1217  3452               	retlw	82	;'R'
  1258  1218  3446               	retlw	70	;'F'
  1259  1219  3400               	retlw	0
  1260                           
  1261                           	psect	stringtext43
  1262  121A                     __pstringtext43:	
  1263  121A                     STR_34:	
  1264  121A  3463               	retlw	99	;'c'
  1265  121B  346F               	retlw	111	;'o'
  1266  121C  346D               	retlw	109	;'m'
  1267  121D  346D               	retlw	109	;'m'
  1268  121E  3473               	retlw	115	;'s'
  1269  121F  3400               	retlw	0
  1270                           
  1271                           	psect	stringtext44
  1272  1220                     __pstringtext44:	
  1273  1220                     STR_83:	
  1274  1220  3452               	retlw	82	;'R'
  1275  1221  3458               	retlw	88	;'X'
  1276  1222  3433               	retlw	51	;'3'
  1277  1223  3420               	retlw	32	;' '
  1278  1224  3400               	retlw	0
  1279                           
  1280                           	psect	stringtext45
  1281  1225                     __pstringtext45:	
  1282  1225                     STR_40:	
  1283  1225  3420               	retlw	32	;' '
  1284  1226  3431               	retlw	49	;'1'
  1285  1227  3431               	retlw	49	;'1'
  1286  1228  3400               	retlw	0
  1287                           
  1288                           	psect	stringtext46
  1289  1229                     __pstringtext46:	
  1290  1229                     STR_42:	
  1291  1229  3420               	retlw	32	;' '
  1292  122A  3431               	retlw	49	;'1'
  1293  122B  3432               	retlw	50	;'2'
  1294  122C  3400               	retlw	0
  1295                           
  1296                           	psect	stringtext47
  1297  122D                     __pstringtext47:	
  1298  122D                     STR_54:	
  1299  122D  3420               	retlw	32	;' '
  1300  122E  3431               	retlw	49	;'1'
  1301  122F  3433               	retlw	51	;'3'
  1302  1230  3400               	retlw	0
  1303                           
  1304                           	psect	stringtext48
  1305  1231                     __pstringtext48:	
  1306  1231                     STR_56:	
  1307  1231  3420               	retlw	32	;' '
  1308  1232  3431               	retlw	49	;'1'
  1309  1233  3434               	retlw	52	;'4'
  1310  1234  3400               	retlw	0
  1311                           
  1312                           	psect	stringtext49
  1313  1235                     __pstringtext49:	
  1314  1235                     STR_72:	
  1315  1235  3420               	retlw	32	;' '
  1316  1236  3431               	retlw	49	;'1'
  1317  1237  3435               	retlw	53	;'5'
  1318  1238  3400               	retlw	0
  1319                           
  1320                           	psect	stringtext50
  1321  1239                     __pstringtext50:	
  1322  1239                     STR_36:	
  1323  1239  3420               	retlw	32	;' '
  1324  123A  3431               	retlw	49	;'1'
  1325  123B  3400               	retlw	0
  1326                           
  1327                           	psect	stringtext51
  1328  0000                     __pstringtext51:	
  1329  1224                     
  1330                           ; #config settings
  1331  0000                     
  1332                           	psect	cinit
  1333  00A6                     start_initialization:	
  1334  00A6                     __initialization:	
  1335                           
  1336                           ; Initialize objects allocated to BANK0
  1337  00A6  3089               	movlw	low __pidataBANK0
  1338  00A7  0084               	movwf	4
  1339  00A8  3088               	movlw	(high __pidataBANK0)| (0+128)
  1340  00A9  0085               	movwf	5
  1341  00AA  3069               	movlw	low __pdataBANK0
  1342  00AB  0086               	movwf	6
  1343  00AC  3000               	movlw	high __pdataBANK0
  1344  00AD  0087               	movwf	7
  1345  00AE  3003               	movlw	3
  1346  00AF  3188  209C  3180   	fcall	init_ram
  1347                           
  1348                           ; Initialize objects allocated to BANK1
  1349  00B2  30FD               	movlw	low __pidataBANK1
  1350  00B3  0084               	movwf	4
  1351  00B4  308A               	movlw	(high __pidataBANK1)| (0+128)
  1352  00B5  0085               	movwf	5
  1353  00B6  30A0               	movlw	low __pdataBANK1
  1354  00B7  0086               	movwf	6
  1355  00B8  3000               	movlw	high __pdataBANK1
  1356  00B9  0087               	movwf	7
  1357  00BA  3040               	movlw	64
  1358  00BB  3188  209C  3180   	fcall	init_ram
  1359                           
  1360                           ; Clear objects allocated to COMMON
  1361  00BE  01FA               	clrf	__pbssCOMMON& (0+127)
  1362  00BF  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1363                           
  1364                           ; Clear objects allocated to BANK0
  1365  00C0  3055               	movlw	low __pbssBANK0
  1366  00C1  0084               	movwf	4
  1367  00C2  3000               	movlw	high __pbssBANK0
  1368  00C3  0085               	movwf	5
  1369  00C4  3014               	movlw	20
  1370  00C5  3188  2096  3180   	fcall	clear_ram0
  1371                           
  1372                           ; Clear objects allocated to BANK1
  1373  00C8  30E0               	movlw	low __pbssBANK1
  1374  00C9  0084               	movwf	4
  1375  00CA  3000               	movlw	high __pbssBANK1
  1376  00CB  0085               	movwf	5
  1377  00CC  300D               	movlw	13
  1378  00CD  3188  2096         	fcall	clear_ram0
  1379  00CF                     end_of_initialization:	
  1380                           ;End of C runtime variable initialization code
  1381                           
  1382  00CF                     __end_of__initialization:	
  1383  00CF  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1384  00D0  0020               	movlb	0
  1385  00D1  3180  28D3         	ljmp	_main	;jump to C main() function
  1386                           
  1387                           	psect	bssCOMMON
  1388  007A                     __pbssCOMMON:	
  1389  007A                     _ten_thou:	
  1390  007A                     	ds	1
  1391  007B                     _thou:	
  1392  007B                     	ds	1
  1393                           
  1394                           	psect	bssBANK0
  1395  0055                     __pbssBANK0:	
  1396  0055                     _tj_timer:	
  1397  0055                     	ds	2
  1398  0057                     _testjig_timer:	
  1399  0057                     	ds	2
  1400  0059                     _current_sink_timer:	
  1401  0059                     	ds	2
  1402  005B                     _pickit_timer:	
  1403  005B                     	ds	2
  1404  005D                     _motor_direction_timer:	
  1405  005D                     	ds	2
  1406  005F                     _uart_receive_timer:	
  1407  005F                     	ds	2
  1408  0061                     _pickit_red_counter:	
  1409  0061                     	ds	1
  1410  0062                     _ADC_val:	
  1411  0062                     	ds	1
  1412  0063                     _RelayVsDiodes:	
  1413  0063                     	ds	1
  1414  0064                     _return_data:	
  1415  0064                     	ds	1
  1416  0065                     _current_sink_state:	
  1417  0065                     	ds	1
  1418  0066                     _unit:	
  1419  0066                     	ds	1
  1420  0067                     _ten:	
  1421  0067                     	ds	1
  1422  0068                     _hund:	
  1423  0068                     	ds	1
  1424                           
  1425                           	psect	dataBANK0
  1426  0069                     __pdataBANK0:	
  1427  0069                     _one_second_timer:	
  1428  0069                     	ds	2
  1429  006B                     _button_beep_delay:	
  1430  006B                     	ds	1
  1431                           
  1432                           	psect	bssBANK1
  1433  00E0                     __pbssBANK1:	
  1434  00E0                     _uart_buff_work_recieve:	
  1435  00E0                     	ds	5
  1436  00E5                     _trip_current:	
  1437  00E5                     	ds	2
  1438  00E7                     _current_sink_stable:	
  1439  00E7                     	ds	2
  1440  00E9                     _curent_sink_val:	
  1441  00E9                     	ds	2
  1442  00EB                     _ADC_cur_sink_val:	
  1443  00EB                     	ds	2
  1444                           
  1445                           	psect	dataBANK1
  1446  00A0                     __pdataBANK1:	
  1447  00A0                     lcd_bar_create@F3820:	
  1448  00A0                     	ds	8
  1449  00A8                     lcd_bar_create@F3818:	
  1450  00A8                     	ds	8
  1451  00B0                     lcd_bar_create@F3816:	
  1452  00B0                     	ds	8
  1453  00B8                     lcd_bar_create@F3814:	
  1454  00B8                     	ds	8
  1455  00C0                     lcd_bar_create@F3812:	
  1456  00C0                     	ds	8
  1457  00C8                     lcd_bar_create@F3810:	
  1458  00C8                     	ds	8
  1459  00D0                     lcd_bar_create@F3808:	
  1460  00D0                     	ds	8
  1461  00D8                     lcd_bar_create@F3806:	
  1462  00D8                     	ds	8
  1463                           
  1464                           	psect	inittext
  1465  089C                     init_ram:	
  1466  089C  00FE               	movwf	126
  1467  089D                     initloop:	
  1468  089D  0012               	moviw fsr0++
  1469  089E  001E               	movwi fsr1++
  1470  089F  0BFE               	decfsz	126,f
  1471  08A0  289D               	goto	initloop
  1472  08A1  3400               	retlw	0
  1473                           
  1474                           	psect	clrtext
  1475  0896                     clear_ram0:	
  1476                           ;	Called with FSR0 containing the base address, and
  1477                           ;	WREG with the size to clear
  1478                           
  1479  0896  0064               	clrwdt	;clear the watchdog before getting into this loop
  1480  0897                     clrloop0:	
  1481  0897  0180               	clrf	0	;clear RAM location pointed to by FSR
  1482  0898  3101               	addfsr 0,1
  1483  0899  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1484  089A  2897               	goto	clrloop0	;have we reached the end yet?
  1485  089B  3400               	retlw	0	;all done for this memory range, return
  1486                           
  1487                           	psect	cstackBANK2
  1488  0120                     __pcstackBANK2:	
  1489  0120                     main@i:	
  1490                           
  1491                           ; 2 bytes @ 0x0
  1492  0120                     	ds	2
  1493  0122                     main@device_type:	
  1494                           
  1495                           ; 1 bytes @ 0x2
  1496  0122                     	ds	1
  1497  0123                     main@RX_data:	
  1498                           
  1499                           ; 1 bytes @ 0x3
  1500  0123                     	ds	1
  1501                           
  1502                           	psect	cstackCOMMON
  1503  0070                     __pcstackCOMMON:	
  1504  0070                     ?_init_ADC:	
  1505  0070                     ?_init_current_sink:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ?_init_i2c:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ?_power_supply_set:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ?_TX_one:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ?_RX_one_timeout:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ?_RX_one:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ?_digitalpot:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ?_isr:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ??_isr:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ?_main:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ?_i2c_Start:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ?_i2c_Write:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_i2c_Stop:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ?_i2c_write_char:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_clear_lcd:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_i2c_first_line:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_i2c_second_line:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556                           
  1557                           ; 1 bytes @ 0x0
  1558  0070                     	ds	2
  1559  0072                     ??_init_ADC:	
  1560  0072                     ??_init_current_sink:	
  1561                           ; 1 bytes @ 0x2
  1562                           
  1563  0072                     ?_buzz_one:	
  1564                           ; 1 bytes @ 0x2
  1565                           
  1566  0072                     ??_init_i2c:	
  1567                           ; 1 bytes @ 0x2
  1568                           
  1569  0072                     ?_debug_fast_tx:	
  1570                           ; 1 bytes @ 0x2
  1571                           
  1572  0072                     ??_power_supply_set:	
  1573                           ; 1 bytes @ 0x2
  1574                           
  1575  0072                     ??_TX_one:	
  1576                           ; 1 bytes @ 0x2
  1577                           
  1578  0072                     ??_RX_one_timeout:	
  1579                           ; 1 bytes @ 0x2
  1580                           
  1581  0072                     ??_RX_one:	
  1582                           ; 1 bytes @ 0x2
  1583                           
  1584  0072                     ??_i2c_Start:	
  1585                           ; 1 bytes @ 0x2
  1586                           
  1587  0072                     ??_i2c_Write:	
  1588                           ; 1 bytes @ 0x2
  1589                           
  1590  0072                     ??_i2c_Stop:	
  1591                           ; 1 bytes @ 0x2
  1592                           
  1593  0072                     ?___bmul:	
  1594                           ; 1 bytes @ 0x2
  1595                           
  1596  0072                     ?_ADC_get_val:	
  1597                           ; 1 bytes @ 0x2
  1598                           
  1599  0072                     ?___wmul:	
  1600                           ; 2 bytes @ 0x2
  1601                           
  1602  0072                     ?___ftpack:	
  1603                           ; 2 bytes @ 0x2
  1604                           
  1605  0072                     i2c_Write@data:	
  1606                           ; 3 bytes @ 0x2
  1607                           
  1608  0072                     power_supply_set@supply:	
  1609                           ; 1 bytes @ 0x2
  1610                           
  1611  0072                     ___bmul@multiplicand:	
  1612                           ; 1 bytes @ 0x2
  1613                           
  1614  0072                     buzz_one@time:	
  1615                           ; 1 bytes @ 0x2
  1616                           
  1617  0072                     debug_fast_tx@data:	
  1618                           ; 2 bytes @ 0x2
  1619                           
  1620  0072                     ___wmul@multiplier:	
  1621                           ; 2 bytes @ 0x2
  1622                           
  1623  0072                     ___ftpack@arg:	
  1624                           ; 2 bytes @ 0x2
  1625                           
  1626                           
  1627                           ; 3 bytes @ 0x2
  1628  0072                     	ds	1
  1629  0073                     ?_init_i2c_lcd_5v:	
  1630  0073                     ??_digitalpot:	
  1631                           ; 1 bytes @ 0x3
  1632                           
  1633  0073                     ?_i2c_Write_string:	
  1634                           ; 1 bytes @ 0x3
  1635                           
  1636  0073                     ??_i2c_write_char:	
  1637                           ; 1 bytes @ 0x3
  1638                           
  1639  0073                     ??_clear_lcd:	
  1640                           ; 1 bytes @ 0x3
  1641                           
  1642  0073                     ??_i2c_first_line:	
  1643                           ; 1 bytes @ 0x3
  1644                           
  1645  0073                     ??_i2c_second_line:	
  1646                           ; 1 bytes @ 0x3
  1647                           
  1648  0073                     ?_lcd_set_cursor:	
  1649                           ; 1 bytes @ 0x3
  1650                           
  1651  0073                     ??___bmul:	
  1652                           ; 1 bytes @ 0x3
  1653                           
  1654  0073                     i2c_write_char@char_data:	
  1655                           ; 1 bytes @ 0x3
  1656                           
  1657  0073                     init_i2c_lcd_5v@single1_double2:	
  1658                           ; 1 bytes @ 0x3
  1659                           
  1660  0073                     lcd_set_cursor@col:	
  1661                           ; 1 bytes @ 0x3
  1662                           
  1663  0073                     TX_one@data:	
  1664                           ; 1 bytes @ 0x3
  1665                           
  1666  0073                     RX_one@i:	
  1667                           ; 1 bytes @ 0x3
  1668                           
  1669  0073                     RX_one_timeout@i:	
  1670                           ; 1 bytes @ 0x3
  1671                           
  1672  0073                     i2c_Write_string@data:	
  1673                           ; 1 bytes @ 0x3
  1674                           
  1675                           
  1676                           ; 2 bytes @ 0x3
  1677  0073                     	ds	1
  1678  0074                     ??_buzz_one:	
  1679  0074                     ??_init_i2c_lcd_5v:	
  1680                           ; 1 bytes @ 0x4
  1681                           
  1682  0074                     ??_debug_fast_tx:	
  1683                           ; 1 bytes @ 0x4
  1684                           
  1685  0074                     ??_lcd_set_cursor:	
  1686                           ; 1 bytes @ 0x4
  1687                           
  1688  0074                     digitalpot@value:	
  1689                           ; 1 bytes @ 0x4
  1690                           
  1691  0074                     TX_one@i:	
  1692                           ; 1 bytes @ 0x4
  1693                           
  1694  0074                     RX_one@data:	
  1695                           ; 1 bytes @ 0x4
  1696                           
  1697  0074                     RX_one_timeout@data:	
  1698                           ; 1 bytes @ 0x4
  1699                           
  1700  0074                     ___bmul@product:	
  1701                           ; 1 bytes @ 0x4
  1702                           
  1703  0074                     ___wmul@multiplicand:	
  1704                           ; 1 bytes @ 0x4
  1705                           
  1706                           
  1707                           ; 2 bytes @ 0x4
  1708  0074                     	ds	1
  1709  0075                     ?_Vout_set:	
  1710  0075                     ??_ADC_get_val:	
  1711                           ; 1 bytes @ 0x5
  1712                           
  1713  0075                     ??_i2c_Write_string:	
  1714                           ; 1 bytes @ 0x5
  1715                           
  1716  0075                     init_i2c_lcd_5v@contrast:	
  1717                           ; 1 bytes @ 0x5
  1718                           
  1719  0075                     lcd_set_cursor@row:	
  1720                           ; 1 bytes @ 0x5
  1721                           
  1722  0075                     ADC_get_val@channel:	
  1723                           ; 1 bytes @ 0x5
  1724                           
  1725  0075                     ___bmul@multiplier:	
  1726                           ; 1 bytes @ 0x5
  1727                           
  1728  0075                     ___ftpack@exp:	
  1729                           ; 1 bytes @ 0x5
  1730                           
  1731  0075                     Vout_set@Volts:	
  1732                           ; 1 bytes @ 0x5
  1733                           
  1734                           
  1735                           ; 2 bytes @ 0x5
  1736  0075                     	ds	1
  1737  0076                     ?_print_screen:	
  1738  0076                     ??___wmul:	
  1739                           ; 1 bytes @ 0x6
  1740                           
  1741  0076                     lcd_set_cursor@LCD_position:	
  1742                           ; 1 bytes @ 0x6
  1743                           
  1744  0076                     debug_fast_tx@i:	
  1745                           ; 1 bytes @ 0x6
  1746                           
  1747  0076                     ___ftpack@sign:	
  1748                           ; 1 bytes @ 0x6
  1749                           
  1750  0076                     print_screen@top:	
  1751                           ; 1 bytes @ 0x6
  1752                           
  1753  0076                     ADC_get_val@return_val:	
  1754                           ; 2 bytes @ 0x6
  1755                           
  1756  0076                     ___wmul@product:	
  1757                           ; 2 bytes @ 0x6
  1758                           
  1759                           
  1760                           ; 2 bytes @ 0x6
  1761  0076                     	ds	1
  1762  0077                     ??_Vout_set:	
  1763  0077                     ??___ftpack:	
  1764                           ; 1 bytes @ 0x7
  1765                           
  1766                           
  1767                           ; 1 bytes @ 0x7
  1768  0077                     	ds	1
  1769  0078                     ?_ten_thou_conv:	
  1770  0078                     ten_thou_conv@n:	
  1771                           ; 1 bytes @ 0x8
  1772                           
  1773  0078                     print_screen@bottom:	
  1774                           ; 2 bytes @ 0x8
  1775                           
  1776                           
  1777                           ; 2 bytes @ 0x8
  1778  0078                     	ds	2
  1779  007A                     ??_print_screen:	
  1780  007A                     ??_get_30v_current:	
  1781                           ; 1 bytes @ 0xA
  1782                           
  1783                           
  1784                           	psect	cstackBANK0
  1785  0020                     __pcstackBANK0:	
  1786                           ; 1 bytes @ 0xA
  1787                           
  1788  0020                     ?_testjig_done:	
  1789  0020                     ?_print_error:	
  1790                           ; 1 bytes @ 0x0
  1791                           
  1792  0020                     ??_ten_thou_conv:	
  1793                           ; 1 bytes @ 0x0
  1794                           
  1795  0020                     ?___lwtoft:	
  1796                           ; 1 bytes @ 0x0
  1797                           
  1798  0020                     testjig_done@device_type:	
  1799                           ; 3 bytes @ 0x0
  1800                           
  1801  0020                     print_error@top:	
  1802                           ; 1 bytes @ 0x0
  1803                           
  1804  0020                     ___lwtoft@c:	
  1805                           ; 2 bytes @ 0x0
  1806                           
  1807  0020                     Vout_set@digi_step:	
  1808                           ; 2 bytes @ 0x0
  1809                           
  1810                           
  1811                           ; 4 bytes @ 0x0
  1812  0020                     	ds	1
  1813  0021                     ??_testjig_done:	
  1814                           
  1815                           ; 1 bytes @ 0x1
  1816  0021                     	ds	1
  1817  0022                     print_error@bottom:	
  1818                           
  1819                           ; 2 bytes @ 0x2
  1820  0022                     	ds	1
  1821  0023                     ??___lwtoft:	
  1822  0023                     testjig_done@state:	
  1823                           ; 1 bytes @ 0x3
  1824                           
  1825                           
  1826                           ; 1 bytes @ 0x3
  1827  0023                     	ds	1
  1828  0024                     ??_print_error:	
  1829  0024                     ?___ftmul:	
  1830                           ; 1 bytes @ 0x4
  1831                           
  1832  0024                     ___ftmul@f1:	
  1833                           ; 3 bytes @ 0x4
  1834                           
  1835                           
  1836                           ; 3 bytes @ 0x4
  1837  0024                     	ds	2
  1838  0026                     ?_lcd_print_int:	
  1839  0026                     lcd_print_int@number:	
  1840                           ; 1 bytes @ 0x6
  1841                           
  1842                           
  1843                           ; 2 bytes @ 0x6
  1844  0026                     	ds	1
  1845  0027                     ___ftmul@f2:	
  1846                           
  1847                           ; 3 bytes @ 0x7
  1848  0027                     	ds	1
  1849  0028                     lcd_print_int@pos:	
  1850                           
  1851                           ; 2 bytes @ 0x8
  1852  0028                     	ds	2
  1853  002A                     ??___ftmul:	
  1854  002A                     lcd_print_int@decimal:	
  1855                           ; 1 bytes @ 0xA
  1856                           
  1857                           
  1858                           ; 1 bytes @ 0xA
  1859  002A                     	ds	1
  1860  002B                     lcd_print_int@ten_thou_digit:	
  1861                           
  1862                           ; 1 bytes @ 0xB
  1863  002B                     	ds	1
  1864  002C                     ??_lcd_print_int:	
  1865                           
  1866                           ; 1 bytes @ 0xC
  1867  002C                     	ds	2
  1868  002E                     ___ftmul@exp:	
  1869                           
  1870                           ; 1 bytes @ 0xE
  1871  002E                     	ds	1
  1872  002F                     ___ftmul@f3_as_product:	
  1873                           
  1874                           ; 3 bytes @ 0xF
  1875  002F                     	ds	3
  1876  0032                     ___ftmul@cntr:	
  1877                           
  1878                           ; 1 bytes @ 0x12
  1879  0032                     	ds	1
  1880  0033                     ___ftmul@sign:	
  1881                           
  1882                           ; 1 bytes @ 0x13
  1883  0033                     	ds	1
  1884  0034                     ?___ftadd:	
  1885  0034                     ___ftadd@f1:	
  1886                           ; 3 bytes @ 0x14
  1887                           
  1888                           
  1889                           ; 3 bytes @ 0x14
  1890  0034                     	ds	3
  1891  0037                     ___ftadd@f2:	
  1892                           
  1893                           ; 3 bytes @ 0x17
  1894  0037                     	ds	3
  1895  003A                     ??___ftadd:	
  1896                           
  1897                           ; 1 bytes @ 0x1A
  1898  003A                     	ds	4
  1899  003E                     ___ftadd@sign:	
  1900                           
  1901                           ; 1 bytes @ 0x1E
  1902  003E                     	ds	1
  1903  003F                     ___ftadd@exp2:	
  1904                           
  1905                           ; 1 bytes @ 0x1F
  1906  003F                     	ds	1
  1907  0040                     ___ftadd@exp1:	
  1908                           
  1909                           ; 1 bytes @ 0x20
  1910  0040                     	ds	1
  1911  0041                     ?___fttol:	
  1912  0041                     ___fttol@f1:	
  1913                           ; 4 bytes @ 0x21
  1914                           
  1915                           
  1916                           ; 3 bytes @ 0x21
  1917  0041                     	ds	4
  1918  0045                     ??___fttol:	
  1919                           
  1920                           ; 1 bytes @ 0x25
  1921  0045                     	ds	4
  1922  0049                     ___fttol@sign1:	
  1923                           
  1924                           ; 1 bytes @ 0x29
  1925  0049                     	ds	1
  1926  004A                     ___fttol@lval:	
  1927                           
  1928                           ; 4 bytes @ 0x2A
  1929  004A                     	ds	4
  1930  004E                     ___fttol@exp1:	
  1931                           
  1932                           ; 1 bytes @ 0x2E
  1933  004E                     	ds	1
  1934  004F                     ?_get_30v_current:	
  1935                           
  1936                           ; 2 bytes @ 0x2F
  1937  004F                     	ds	2
  1938  0051                     get_30v_current@temp:	
  1939                           
  1940                           ; 2 bytes @ 0x31
  1941  0051                     	ds	2
  1942  0053                     ??_main:	
  1943                           
  1944                           ; 1 bytes @ 0x33
  1945  0053                     	ds	2
  1946                           
  1947                           	psect	maintext
  1948  00D3                     __pmaintext:	
  1949 ;;
  1950 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1951 ;;
  1952 ;; *************** function _main *****************
  1953 ;; Defined at:
  1954 ;;		line 469 in file "Multi_RX_testjig_v1.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  i               2    0[BANK2 ] unsigned int 
  1959 ;;  RX_data         1    3[BANK2 ] unsigned char 
  1960 ;;  device_type     1    2[BANK2 ] unsigned char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : B1F/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  1970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1971 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1972 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1973 ;;      Totals:         0       2       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1974 ;;Total ram usage:        6 bytes
  1975 ;; Hardware stack levels required when called:    5
  1976 ;; This function calls:
  1977 ;;		_ADC_get_val
  1978 ;;		_RX_one
  1979 ;;		_RX_one_timeout
  1980 ;;		_TX_one
  1981 ;;		_Vout_set
  1982 ;;		_buzz_one
  1983 ;;		_debug_fast_tx
  1984 ;;		_get_30v_current
  1985 ;;		_init_ADC
  1986 ;;		_init_current_sink
  1987 ;;		_init_i2c
  1988 ;;		_init_i2c_lcd_5v
  1989 ;;		_lcd_print_int
  1990 ;;		_power_supply_set
  1991 ;;		_print_error
  1992 ;;		_print_screen
  1993 ;;		_testjig_done
  1994 ;; This function is called by:
  1995 ;;		Startup code after reset
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           
  2000                           ;psect for function _main
  2001  00D3                     _main:	
  2002                           
  2003                           ;Multi_RX_testjig_v1.c: 472: OSCCON = 0x7A;
  2004                           
  2005                           ;incstack = 0
  2006                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2007  00D3  307A               	movlw	122
  2008  00D4  0021               	movlb	1	; select bank1
  2009  00D5  0099               	movwf	25	;volatile
  2010                           
  2011                           ;Multi_RX_testjig_v1.c: 474: OPTION_REG = 0b11010000;
  2012  00D6  30D0               	movlw	208
  2013  00D7  0095               	movwf	21	;volatile
  2014                           
  2015                           ;Multi_RX_testjig_v1.c: 475: TMR0 = 0x00;
  2016  00D8  0020               	movlb	0	; select bank0
  2017  00D9  0195               	clrf	21	;volatile
  2018                           
  2019                           ;Multi_RX_testjig_v1.c: 476: TMR0IF = 0;
  2020  00DA  110B               	bcf	11,2	;volatile
  2021                           
  2022                           ;Multi_RX_testjig_v1.c: 477: TMR0IE = 1;
  2023  00DB  168B               	bsf	11,5	;volatile
  2024                           
  2025                           ;Multi_RX_testjig_v1.c: 480: TRISA = 0b00001111;
  2026  00DC  300F               	movlw	15
  2027  00DD  0021               	movlb	1	; select bank1
  2028  00DE  008C               	movwf	12	;volatile
  2029                           
  2030                           ;Multi_RX_testjig_v1.c: 481: TRISB = 0b11001111;
  2031  00DF  30CF               	movlw	207
  2032  00E0  008D               	movwf	13	;volatile
  2033                           
  2034                           ;Multi_RX_testjig_v1.c: 482: TRISC = 0b00011010;
  2035  00E1  301A               	movlw	26
  2036  00E2  008E               	movwf	14	;volatile
  2037                           
  2038                           ;Multi_RX_testjig_v1.c: 483: TRISD = 0b10001011;
  2039  00E3  308B               	movlw	139
  2040  00E4  008F               	movwf	15	;volatile
  2041                           
  2042                           ;Multi_RX_testjig_v1.c: 484: TRISE = 0b11110110;
  2043  00E5  30F6               	movlw	246
  2044  00E6  0090               	movwf	16	;volatile
  2045                           
  2046                           ;Multi_RX_testjig_v1.c: 485: TRISF = 0b00101111;
  2047  00E7  302F               	movlw	47
  2048  00E8  0026               	movlb	6	; select bank6
  2049  00E9  008C               	movwf	12	;volatile
  2050                           
  2051                           ;Multi_RX_testjig_v1.c: 486: TRISG = 0b11101111;
  2052  00EA  30EF               	movlw	239
  2053  00EB  008D               	movwf	13	;volatile
  2054                           
  2055                           ;Multi_RX_testjig_v1.c: 488: PORTA = 0b00000000;
  2056  00EC  0020               	movlb	0	; select bank0
  2057  00ED  018C               	clrf	12	;volatile
  2058                           
  2059                           ;Multi_RX_testjig_v1.c: 489: PORTB = 0b00000000;
  2060  00EE  018D               	clrf	13	;volatile
  2061                           
  2062                           ;Multi_RX_testjig_v1.c: 490: PORTC = 0b00000000;
  2063  00EF  018E               	clrf	14	;volatile
  2064                           
  2065                           ;Multi_RX_testjig_v1.c: 491: PORTD = 0b01000000;
  2066  00F0  3040               	movlw	64
  2067  00F1  008F               	movwf	15	;volatile
  2068                           
  2069                           ;Multi_RX_testjig_v1.c: 492: PORTE = 0b00000000;
  2070  00F2  0190               	clrf	16	;volatile
  2071                           
  2072                           ;Multi_RX_testjig_v1.c: 493: PORTF = 0b00000000;
  2073  00F3  0025               	movlb	5	; select bank5
  2074  00F4  018C               	clrf	12	;volatile
  2075                           
  2076                           ;Multi_RX_testjig_v1.c: 494: PORTG = 0b00000000;
  2077  00F5  018D               	clrf	13	;volatile
  2078                           
  2079                           ;Multi_RX_testjig_v1.c: 496: WPUB = 0b00000000;
  2080  00F6  0024               	movlb	4	; select bank4
  2081  00F7  018D               	clrf	13	;volatile
  2082                           
  2083                           ;Multi_RX_testjig_v1.c: 497: WPUD = 0b00000000;
  2084  00F8  018F               	clrf	15	;volatile
  2085                           
  2086                           ;Multi_RX_testjig_v1.c: 498: WPUE = 0b00000000;
  2087  00F9  0190               	clrf	16	;volatile
  2088                           
  2089                           ;Multi_RX_testjig_v1.c: 500: ANSELA = 0b00000000;
  2090  00FA  0023               	movlb	3	; select bank3
  2091  00FB  018C               	clrf	12	;volatile
  2092                           
  2093                           ;Multi_RX_testjig_v1.c: 501: ANSELB = 0b00001100;
  2094  00FC  300C               	movlw	12
  2095  00FD  008D               	movwf	13	;volatile
  2096                           
  2097                           ;Multi_RX_testjig_v1.c: 502: ANSELD = 0b00001111;
  2098  00FE  300F               	movlw	15
  2099  00FF  008F               	movwf	15	;volatile
  2100                           
  2101                           ;Multi_RX_testjig_v1.c: 503: ANSELE = 0b00000100;
  2102  0100  3004               	movlw	4
  2103  0101  0090               	movwf	16	;volatile
  2104                           
  2105                           ;Multi_RX_testjig_v1.c: 504: ANSELF = 0b00000000;
  2106  0102  0028               	movlb	8	; select bank8
  2107  0103  018C               	clrf	12	;volatile
  2108                           
  2109                           ;Multi_RX_testjig_v1.c: 505: ANSELG = 0b00000000;
  2110  0104  018D               	clrf	13	;volatile
  2111                           
  2112                           ;Multi_RX_testjig_v1.c: 508: init_ADC();
  2113  0105  3188  20A2  3180   	fcall	_init_ADC
  2114                           
  2115                           ;Multi_RX_testjig_v1.c: 509: init_current_sink();
  2116  0108  3189  2108  3180   	fcall	_init_current_sink
  2117                           
  2118                           ;Multi_RX_testjig_v1.c: 510: pickit_state = pickit_idle;
  2119  010B  3005               	movlw	5
  2120  010C  0020               	movlb	0	; select bank0
  2121  010D  00D3               	movwf	??_main
  2122  010E  0853               	movf	??_main,w
  2123  010F  00EC               	movwf	_pickit_state
  2124                           
  2125                           ;Multi_RX_testjig_v1.c: 512: RA5 = 0;
  2126  0110  128C               	bcf	12,5	;volatile
  2127                           
  2128                           ;Multi_RX_testjig_v1.c: 513: buzz_one(200);
  2129  0111  30C8               	movlw	200
  2130  0112  00F2               	movwf	buzz_one@time
  2131  0113  3000               	movlw	0
  2132  0114  00F3               	movwf	buzz_one@time+1
  2133  0115  3188  20A9  3180   	fcall	_buzz_one
  2134                           
  2135                           ;Multi_RX_testjig_v1.c: 514: RA5 = 1;
  2136  0118  0020               	movlb	0	; select bank0
  2137  0119  168C               	bsf	12,5	;volatile
  2138                           
  2139                           ;Multi_RX_testjig_v1.c: 515: init_i2c();
  2140  011A  3189  215E  3180   	fcall	_init_i2c
  2141                           
  2142                           ;Multi_RX_testjig_v1.c: 522: init_i2c_lcd_5v(8, 0x38);
  2143  011D  3038               	movlw	56
  2144  011E  0020               	movlb	0	; select bank0
  2145  011F  00D3               	movwf	??_main
  2146  0120  0853               	movf	??_main,w
  2147  0121  00F3               	movwf	init_i2c_lcd_5v@single1_double2
  2148  0122  3008               	movlw	8
  2149  0123  318B  233D  3180   	fcall	_init_i2c_lcd_5v
  2150                           
  2151                           ;Multi_RX_testjig_v1.c: 523: print_screen("Multi_RX", "Test-Jig|Startup");
  2152  0126  30E7               	movlw	low (STR_1| (0+32768))
  2153  0127  00F6               	movwf	print_screen@top
  2154  0128  3091               	movlw	high (STR_1| (0+32768))
  2155  0129  00F7               	movwf	print_screen@top+1
  2156  012A  3046               	movlw	low (STR_2| (0+32768))
  2157  012B  00F8               	movwf	print_screen@bottom
  2158  012C  3090               	movlw	high (STR_2| (0+32768))
  2159  012D  00F9               	movwf	print_screen@bottom+1
  2160  012E  3189  2147  3180   	fcall	_print_screen
  2161                           
  2162                           ;Multi_RX_testjig_v1.c: 524: RA4 = 1;
  2163  0131  0020               	movlb	0	; select bank0
  2164  0132  160C               	bsf	12,4	;volatile
  2165                           
  2166                           ;Multi_RX_testjig_v1.c: 525: GIE = 1;
  2167  0133  178B               	bsf	11,7	;volatile
  2168                           
  2169                           ;Multi_RX_testjig_v1.c: 526: LATC7 = 1;
  2170  0134  0022               	movlb	2	; select bank2
  2171  0135  178E               	bsf	14,7	;volatile
  2172                           
  2173                           ;Multi_RX_testjig_v1.c: 527: _delay((unsigned long)((100)*(16000000/4000.0)));
  2174  0136  3003               	movlw	3
  2175  0137  0020               	movlb	0	; select bank0
  2176  0138  00D4               	movwf	??_main+1
  2177  0139  3008               	movlw	8
  2178  013A  00D3               	movwf	??_main
  2179  013B  3077               	movlw	119
  2180  013C                     u6447:	
  2181  013C  0B89               	decfsz	9,f
  2182  013D  293C               	goto	u6447
  2183  013E  0BD3               	decfsz	??_main,f
  2184  013F  293C               	goto	u6447
  2185  0140  0BD4               	decfsz	??_main+1,f
  2186  0141  293C               	goto	u6447
  2187                           
  2188                           ;Multi_RX_testjig_v1.c: 528: debug_fast_tx(0xAAAA);
  2189  0142  30AA               	movlw	170
  2190  0143  00F2               	movwf	debug_fast_tx@data
  2191  0144  30AA               	movlw	170
  2192  0145  00F3               	movwf	debug_fast_tx@data+1
  2193  0146  318A  22C1  3180   	fcall	_debug_fast_tx
  2194                           
  2195                           ;Multi_RX_testjig_v1.c: 529: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2196  0149  3085               	movlw	133
  2197  014A                     u6457:	
  2198  014A  0B89               	decfsz	9,f
  2199  014B  294A               	goto	u6457
  2200  014C  0000               	nop
  2201                           
  2202                           ;Multi_RX_testjig_v1.c: 530: debug_fast_tx(0x5555);
  2203  014D  3055               	movlw	85
  2204  014E  00F2               	movwf	debug_fast_tx@data
  2205  014F  3055               	movlw	85
  2206  0150  00F3               	movwf	debug_fast_tx@data+1
  2207  0151  318A  22C1  3180   	fcall	_debug_fast_tx
  2208                           
  2209                           ;Multi_RX_testjig_v1.c: 531: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2210  0154  3085               	movlw	133
  2211  0155                     u6467:	
  2212  0155  0B89               	decfsz	9,f
  2213  0156  2955               	goto	u6467
  2214  0157  0000               	nop
  2215                           
  2216                           ;Multi_RX_testjig_v1.c: 533: if(PCONbits.nRMCLR == 1)
  2217  0158  0021               	movlb	1	; select bank1
  2218  0159  1D96               	btfss	22,3	;volatile
  2219  015A  2961               	goto	l4612
  2220                           
  2221                           ;Multi_RX_testjig_v1.c: 534: testjig_done(2, 0);
  2222  015B  0020               	movlb	0	; select bank0
  2223  015C  01A0               	clrf	testjig_done@device_type
  2224  015D  3002               	movlw	2
  2225  015E  3185  259A  3180   	fcall	_testjig_done
  2226  0161                     l4612:	
  2227                           
  2228                           ;Multi_RX_testjig_v1.c: 537: if(RF3 == 1)
  2229  0161  0025               	movlb	5	; select bank5
  2230  0162  1D8C               	btfss	12,3	;volatile
  2231  0163  2970               	goto	l297
  2232                           
  2233                           ;Multi_RX_testjig_v1.c: 538: print_error("Multi_RX", "-> Insert PCB");
  2234  0164  30E7               	movlw	low (STR_1| (0+32768))
  2235  0165  0020               	movlb	0	; select bank0
  2236  0166  00A0               	movwf	print_error@top
  2237  0167  3091               	movlw	high (STR_1| (0+32768))
  2238  0168  00A1               	movwf	print_error@top+1
  2239  0169  30D4               	movlw	low (STR_4| (0+32768))
  2240  016A  00A2               	movwf	print_error@bottom
  2241  016B  3090               	movlw	high (STR_4| (0+32768))
  2242  016C  00A3               	movwf	print_error@bottom+1
  2243  016D  318B  23CD  3180   	fcall	_print_error
  2244  0170                     l297:	
  2245                           
  2246                           ;Multi_RX_testjig_v1.c: 541: print_screen("Powering board", "");
  2247  0170  3098               	movlw	low (STR_5| (0+32768))
  2248  0171  00F6               	movwf	print_screen@top
  2249  0172  3090               	movlw	high (STR_5| (0+32768))
  2250  0173  00F7               	movwf	print_screen@top+1
  2251  0174  3024               	movlw	low ((STR_83+4)| (0+32768))
  2252  0175  00F8               	movwf	print_screen@bottom
  2253  0176  3092               	movlw	high ((STR_83+4)| (0+32768))
  2254  0177  00F9               	movwf	print_screen@bottom+1
  2255  0178  3189  2147  3180   	fcall	_print_screen
  2256                           
  2257                           ;Multi_RX_testjig_v1.c: 544: Vout_set(12);
  2258  017B  300C               	movlw	12
  2259  017C  00F5               	movwf	Vout_set@Volts
  2260  017D  3000               	movlw	0
  2261  017E  00F6               	movwf	Vout_set@Volts+1
  2262  017F  318E  2647  3180   	fcall	_Vout_set
  2263                           
  2264                           ;Multi_RX_testjig_v1.c: 545: power_supply_set(0);
  2265  0182  3000               	movlw	0
  2266  0183  318A  220E  3180   	fcall	_power_supply_set
  2267                           
  2268                           ;Multi_RX_testjig_v1.c: 546: _delay((unsigned long)((50)*(16000000/4000.0)));
  2269  0186  3002               	movlw	2
  2270  0187  0020               	movlb	0	; select bank0
  2271  0188  00D4               	movwf	??_main+1
  2272  0189  3004               	movlw	4
  2273  018A  00D3               	movwf	??_main
  2274  018B  30BA               	movlw	186
  2275  018C                     u6477:	
  2276  018C  0B89               	decfsz	9,f
  2277  018D  298C               	goto	u6477
  2278  018E  0BD3               	decfsz	??_main,f
  2279  018F  298C               	goto	u6477
  2280  0190  0BD4               	decfsz	??_main+1,f
  2281  0191  298C               	goto	u6477
  2282  0192  0000               	nop
  2283                           
  2284                           ;Multi_RX_testjig_v1.c: 547: ADC_val = ADC_get_val(0b01011111);
  2285  0193  305F               	movlw	95
  2286  0194  3188  20BE  3180   	fcall	_ADC_get_val
  2287  0197  0872               	movf	?_ADC_get_val,w
  2288  0198  0020               	movlb	0	; select bank0
  2289  0199  00D3               	movwf	??_main
  2290  019A  0853               	movf	??_main,w
  2291  019B  00E2               	movwf	_ADC_val
  2292                           
  2293                           ;Multi_RX_testjig_v1.c: 548: testjig_timer = (unsigned int)(7518.8/2);
  2294  019C  30AF               	movlw	175
  2295  019D  00D7               	movwf	_testjig_timer	;volatile
  2296  019E  300E               	movlw	14
  2297  019F  00D8               	movwf	_testjig_timer+1	;volatile
  2298  01A0                     l4622:	
  2299                           ;Multi_RX_testjig_v1.c: 549: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08)) && (get_30v_current() < 30) && testjig_timer);
  2300                           
  2301  01A0  305F               	movlw	95
  2302  01A1  3188  20BE  3180   	fcall	_ADC_get_val
  2303  01A4  3000               	movlw	0
  2304  01A5  0273               	subwf	?_ADC_get_val+1,w
  2305  01A6  3068               	movlw	104
  2306  01A7  1903               	skipnz
  2307  01A8  0272               	subwf	?_ADC_get_val,w
  2308  01A9  1803               	skipnc
  2309  01AA  29C5               	goto	l4630
  2310  01AB  305F               	movlw	95
  2311  01AC  3188  20BE  3180   	fcall	_ADC_get_val
  2312  01AF  3000               	movlw	0
  2313  01B0  0273               	subwf	?_ADC_get_val+1,w
  2314  01B1  307B               	movlw	123
  2315  01B2  1903               	skipnz
  2316  01B3  0272               	subwf	?_ADC_get_val,w
  2317  01B4  1C03               	skipc
  2318  01B5  29C5               	goto	l4630
  2319  01B6  318B  2384  3180   	fcall	_get_30v_current
  2320  01B9  3000               	movlw	0
  2321  01BA  0020               	movlb	0	; select bank0
  2322  01BB  0250               	subwf	?_get_30v_current+1,w
  2323  01BC  301E               	movlw	30
  2324  01BD  1903               	skipnz
  2325  01BE  024F               	subwf	?_get_30v_current,w
  2326  01BF  1803               	skipnc
  2327  01C0  29C5               	goto	l4630
  2328  01C1  0857               	movf	_testjig_timer,w	;volatile
  2329  01C2  0458               	iorwf	_testjig_timer+1,w	;volatile
  2330  01C3  1D03               	btfss	3,2
  2331  01C4  29A0               	goto	l4622
  2332  01C5                     l4630:	
  2333                           
  2334                           ;Multi_RX_testjig_v1.c: 550: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  2335  01C5  305F               	movlw	95
  2336  01C6  3188  20BE  3180   	fcall	_ADC_get_val
  2337  01C9  3000               	movlw	0
  2338  01CA  0273               	subwf	?_ADC_get_val+1,w
  2339  01CB  3068               	movlw	104
  2340  01CC  1903               	skipnz
  2341  01CD  0272               	subwf	?_ADC_get_val,w
  2342  01CE  1803               	skipnc
  2343  01CF  29D9               	goto	l4634
  2344                           
  2345                           ;Multi_RX_testjig_v1.c: 551: print_error("12v-5v supply", "Volt Error L");
  2346  01D0  300C               	movlw	low (STR_7| (0+32768))
  2347  01D1  0020               	movlb	0	; select bank0
  2348  01D2  00A0               	movwf	print_error@top
  2349  01D3  3091               	movlw	high (STR_7| (0+32768))
  2350  01D4  00A1               	movwf	print_error@top+1
  2351  01D5  3042               	movlw	low (STR_8| (0+32768))
  2352  01D6  00A2               	movwf	print_error@bottom
  2353  01D7  3091               	movlw	high (STR_8| (0+32768))
  2354  01D8  2A0C               	goto	L1
  2355  01D9                     l4634:	
  2356                           
  2357                           ;Multi_RX_testjig_v1.c: 552: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  2358  01D9  305F               	movlw	95
  2359  01DA  3188  20BE  3180   	fcall	_ADC_get_val
  2360  01DD  3000               	movlw	0
  2361  01DE  0273               	subwf	?_ADC_get_val+1,w
  2362  01DF  307B               	movlw	123
  2363  01E0  1903               	skipnz
  2364  01E1  0272               	subwf	?_ADC_get_val,w
  2365  01E2  1C03               	skipc
  2366  01E3  29ED               	goto	l4638
  2367                           
  2368                           ;Multi_RX_testjig_v1.c: 553: print_error("12v-5v supply", "Volt Error H");
  2369  01E4  300C               	movlw	low (STR_7| (0+32768))
  2370  01E5  0020               	movlb	0	; select bank0
  2371  01E6  00A0               	movwf	print_error@top
  2372  01E7  3091               	movlw	high (STR_7| (0+32768))
  2373  01E8  00A1               	movwf	print_error@top+1
  2374  01E9  3028               	movlw	low (STR_10| (0+32768))
  2375  01EA  00A2               	movwf	print_error@bottom
  2376  01EB  3091               	movlw	high (STR_10| (0+32768))
  2377  01EC  2A0C               	goto	L1
  2378  01ED                     l4638:	
  2379                           
  2380                           ;Multi_RX_testjig_v1.c: 554: else if((get_30v_current() >= 60))
  2381  01ED  318B  2384  3180   	fcall	_get_30v_current
  2382  01F0  3000               	movlw	0
  2383  01F1  0020               	movlb	0	; select bank0
  2384  01F2  0250               	subwf	?_get_30v_current+1,w
  2385  01F3  303C               	movlw	60
  2386  01F4  1903               	skipnz
  2387  01F5  024F               	subwf	?_get_30v_current,w
  2388  01F6  1C03               	skipc
  2389  01F7  2A00               	goto	l4642
  2390                           
  2391                           ;Multi_RX_testjig_v1.c: 555: print_error("12v supply", "Curr Error");
  2392  01F8  30C9               	movlw	low ((STR_19+4)| (0+32768))
  2393  01F9  00A0               	movwf	print_error@top
  2394  01FA  3090               	movlw	high ((STR_19+4)| (0+32768))
  2395  01FB  00A1               	movwf	print_error@top+1
  2396  01FC  30BE               	movlw	low (STR_12| (0+32768))
  2397  01FD  00A2               	movwf	print_error@bottom
  2398  01FE  3091               	movlw	high (STR_12| (0+32768))
  2399  01FF  2A0C               	goto	L1
  2400  0200                     l4642:	
  2401                           
  2402                           ;Multi_RX_testjig_v1.c: 556: else if(testjig_timer == 0)
  2403  0200  0020               	movlb	0	; select bank0
  2404  0201  0857               	movf	_testjig_timer,w	;volatile
  2405  0202  0458               	iorwf	_testjig_timer+1,w	;volatile
  2406  0203  1D03               	btfss	3,2
  2407  0204  2A10               	goto	l304
  2408                           
  2409                           ;Multi_RX_testjig_v1.c: 557: print_error("12v-5v supply", "T-out Error");
  2410  0205  300C               	movlw	low (STR_7| (0+32768))
  2411  0206  00A0               	movwf	print_error@top
  2412  0207  3091               	movlw	high (STR_7| (0+32768))
  2413  0208  00A1               	movwf	print_error@top+1
  2414  0209  30A6               	movlw	low (STR_14| (0+32768))
  2415  020A  00A2               	movwf	print_error@bottom
  2416  020B  3091               	movlw	high (STR_14| (0+32768))
  2417  020C                     L1:	
  2418  020C  00A3               	movwf	print_error@bottom+1
  2419  020D  318B  23CD  3180   	fcall	_print_error
  2420  0210                     l304:	
  2421                           
  2422                           ;Multi_RX_testjig_v1.c: 562: power_supply_set(1);
  2423  0210  3001               	movlw	1
  2424  0211  318A  220E  3180   	fcall	_power_supply_set
  2425                           
  2426                           ;Multi_RX_testjig_v1.c: 563: Vout_set(16);
  2427  0214  3010               	movlw	16
  2428  0215  00F5               	movwf	Vout_set@Volts
  2429  0216  3000               	movlw	0
  2430  0217  00F6               	movwf	Vout_set@Volts+1
  2431  0218  318E  2647  3180   	fcall	_Vout_set
  2432                           
  2433                           ;Multi_RX_testjig_v1.c: 564: _delay((unsigned long)((150)*(16000000/4000.0)));
  2434  021B  3004               	movlw	4
  2435  021C  0020               	movlb	0	; select bank0
  2436  021D  00D4               	movwf	??_main+1
  2437  021E  300C               	movlw	12
  2438  021F  00D3               	movwf	??_main
  2439  0220  3033               	movlw	51
  2440  0221                     u6487:	
  2441  0221  0B89               	decfsz	9,f
  2442  0222  2A21               	goto	u6487
  2443  0223  0BD3               	decfsz	??_main,f
  2444  0224  2A21               	goto	u6487
  2445  0225  0BD4               	decfsz	??_main+1,f
  2446  0226  2A21               	goto	u6487
  2447  0227  3200               	nop2
  2448                           
  2449                           ;Multi_RX_testjig_v1.c: 565: testjig_timer = (unsigned int)(7518.8/2);
  2450  0228  30AF               	movlw	175
  2451  0229  0020               	movlb	0	; select bank0
  2452  022A  00D7               	movwf	_testjig_timer	;volatile
  2453  022B  300E               	movlw	14
  2454  022C  00D8               	movwf	_testjig_timer+1	;volatile
  2455  022D                     l4650:	
  2456                           ;Multi_RX_testjig_v1.c: 566: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08))&&(ADC_get_val(0b01100011) < (unsigned int)((((12/11.0)*1024)/4.096)*0.9)) && (AD
      +                          C_get_val(0b011
  2457                           
  2458  022D  305F               	movlw	95
  2459  022E  3188  20BE  3180   	fcall	_ADC_get_val
  2460  0231  3000               	movlw	0
  2461  0232  0273               	subwf	?_ADC_get_val+1,w
  2462  0233  3068               	movlw	104
  2463  0234  1903               	skipnz
  2464  0235  0272               	subwf	?_ADC_get_val,w
  2465  0236  1803               	skipnc
  2466  0237  2A68               	goto	l4662
  2467  0238  305F               	movlw	95
  2468  0239  3188  20BE  3180   	fcall	_ADC_get_val
  2469  023C  3000               	movlw	0
  2470  023D  0273               	subwf	?_ADC_get_val+1,w
  2471  023E  307B               	movlw	123
  2472  023F  1903               	skipnz
  2473  0240  0272               	subwf	?_ADC_get_val,w
  2474  0241  1C03               	skipc
  2475  0242  2A68               	goto	l4662
  2476  0243  3063               	movlw	99
  2477  0244  3188  20BE  3180   	fcall	_ADC_get_val
  2478  0247  3000               	movlw	0
  2479  0248  0273               	subwf	?_ADC_get_val+1,w
  2480  0249  30F5               	movlw	245
  2481  024A  1903               	skipnz
  2482  024B  0272               	subwf	?_ADC_get_val,w
  2483  024C  1803               	skipnc
  2484  024D  2A68               	goto	l4662
  2485  024E  3063               	movlw	99
  2486  024F  3188  20BE  3180   	fcall	_ADC_get_val
  2487  0252  3001               	movlw	1
  2488  0253  0273               	subwf	?_ADC_get_val+1,w
  2489  0254  3048               	movlw	72
  2490  0255  1903               	skipnz
  2491  0256  0272               	subwf	?_ADC_get_val,w
  2492  0257  1C03               	skipc
  2493  0258  2A68               	goto	l4662
  2494  0259  318B  2384  3180   	fcall	_get_30v_current
  2495  025C  3000               	movlw	0
  2496  025D  0020               	movlb	0	; select bank0
  2497  025E  0250               	subwf	?_get_30v_current+1,w
  2498  025F  3032               	movlw	50
  2499  0260  1903               	skipnz
  2500  0261  024F               	subwf	?_get_30v_current,w
  2501  0262  1803               	skipnc
  2502  0263  2A68               	goto	l4662
  2503  0264  0857               	movf	_testjig_timer,w	;volatile
  2504  0265  0458               	iorwf	_testjig_timer+1,w	;volatile
  2505  0266  1D03               	btfss	3,2
  2506  0267  2A2D               	goto	l4650
  2507  0268                     l4662:	
  2508                           
  2509                           ;Multi_RX_testjig_v1.c: 567: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  2510  0268  305F               	movlw	95
  2511  0269  3188  20BE  3180   	fcall	_ADC_get_val
  2512  026C  3000               	movlw	0
  2513  026D  0273               	subwf	?_ADC_get_val+1,w
  2514  026E  3068               	movlw	104
  2515  026F  1903               	skipnz
  2516  0270  0272               	subwf	?_ADC_get_val,w
  2517  0271  1803               	skipnc
  2518  0272  2A78               	goto	l4666
  2519                           
  2520                           ;Multi_RX_testjig_v1.c: 568: print_error("16v-5v supply", "Volt Error L");
  2521  0273  301A               	movlw	low (STR_15| (0+32768))
  2522  0274  0020               	movlb	0	; select bank0
  2523  0275  00A0               	movwf	print_error@top
  2524  0276  3091               	movlw	high (STR_15| (0+32768))
  2525  0277  2A97               	goto	L6
  2526  0278                     l4666:	
  2527                           
  2528                           ;Multi_RX_testjig_v1.c: 569: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  2529  0278  305F               	movlw	95
  2530  0279  3188  20BE  3180   	fcall	_ADC_get_val
  2531  027C  3000               	movlw	0
  2532  027D  0273               	subwf	?_ADC_get_val+1,w
  2533  027E  307B               	movlw	123
  2534  027F  1903               	skipnz
  2535  0280  0272               	subwf	?_ADC_get_val,w
  2536  0281  1C03               	skipc
  2537  0282  2A88               	goto	l4670
  2538                           
  2539                           ;Multi_RX_testjig_v1.c: 570: print_error("16v-5v supply", "Volt Error H");
  2540  0283  301A               	movlw	low (STR_15| (0+32768))
  2541  0284  0020               	movlb	0	; select bank0
  2542  0285  00A0               	movwf	print_error@top
  2543  0286  3091               	movlw	high (STR_15| (0+32768))
  2544  0287  2AAB               	goto	L7
  2545  0288                     l4670:	
  2546                           
  2547                           ;Multi_RX_testjig_v1.c: 571: else if((ADC_get_val(0b01100011) < (unsigned int)((((12/11.
      +                          0)*1024)/4.096)*0.9)))
  2548  0288  3063               	movlw	99
  2549  0289  3188  20BE  3180   	fcall	_ADC_get_val
  2550  028C  3000               	movlw	0
  2551  028D  0273               	subwf	?_ADC_get_val+1,w
  2552  028E  30F5               	movlw	245
  2553  028F  1903               	skipnz
  2554  0290  0272               	subwf	?_ADC_get_val,w
  2555  0291  1803               	skipnc
  2556  0292  2A9C               	goto	l4674
  2557                           
  2558                           ;Multi_RX_testjig_v1.c: 572: print_error("16v-12v supply", "Volt Error L");
  2559  0293  30C5               	movlw	low (STR_19| (0+32768))
  2560  0294  0020               	movlb	0	; select bank0
  2561  0295  00A0               	movwf	print_error@top
  2562  0296  3090               	movlw	high (STR_19| (0+32768))
  2563  0297                     L6:	
  2564  0297  00A1               	movwf	print_error@top+1
  2565  0298  3042               	movlw	low (STR_8| (0+32768))
  2566  0299  00A2               	movwf	print_error@bottom
  2567  029A  3091               	movlw	high (STR_8| (0+32768))
  2568  029B  2ACF               	goto	L2
  2569  029C                     l4674:	
  2570                           
  2571                           ;Multi_RX_testjig_v1.c: 573: else if((ADC_get_val(0b01100011) > (unsigned int)((((12/11.
      +                          0)*1024)/4.096)*1.2)))
  2572  029C  3063               	movlw	99
  2573  029D  3188  20BE  3180   	fcall	_ADC_get_val
  2574  02A0  3001               	movlw	1
  2575  02A1  0273               	subwf	?_ADC_get_val+1,w
  2576  02A2  3048               	movlw	72
  2577  02A3  1903               	skipnz
  2578  02A4  0272               	subwf	?_ADC_get_val,w
  2579  02A5  1C03               	skipc
  2580  02A6  2AB0               	goto	l4678
  2581                           
  2582                           ;Multi_RX_testjig_v1.c: 574: print_error("16v-12v supply", "Volt Error H");
  2583  02A7  30C5               	movlw	low (STR_19| (0+32768))
  2584  02A8  0020               	movlb	0	; select bank0
  2585  02A9  00A0               	movwf	print_error@top
  2586  02AA  3090               	movlw	high (STR_19| (0+32768))
  2587  02AB                     L7:	
  2588  02AB  00A1               	movwf	print_error@top+1
  2589  02AC  3028               	movlw	low (STR_10| (0+32768))
  2590  02AD  00A2               	movwf	print_error@bottom
  2591  02AE  3091               	movlw	high (STR_10| (0+32768))
  2592  02AF  2ACF               	goto	L2
  2593  02B0                     l4678:	
  2594                           
  2595                           ;Multi_RX_testjig_v1.c: 575: else if((get_30v_current() >= 60))
  2596  02B0  318B  2384  3180   	fcall	_get_30v_current
  2597  02B3  3000               	movlw	0
  2598  02B4  0020               	movlb	0	; select bank0
  2599  02B5  0250               	subwf	?_get_30v_current+1,w
  2600  02B6  303C               	movlw	60
  2601  02B7  1903               	skipnz
  2602  02B8  024F               	subwf	?_get_30v_current,w
  2603  02B9  1C03               	skipc
  2604  02BA  2AC3               	goto	l4682
  2605                           
  2606                           ;Multi_RX_testjig_v1.c: 576: print_error("16v supply", "Curr Error");
  2607  02BB  30C9               	movlw	low (STR_23| (0+32768))
  2608  02BC  00A0               	movwf	print_error@top
  2609  02BD  3091               	movlw	high (STR_23| (0+32768))
  2610  02BE  00A1               	movwf	print_error@top+1
  2611  02BF  30BE               	movlw	low (STR_12| (0+32768))
  2612  02C0  00A2               	movwf	print_error@bottom
  2613  02C1  3091               	movlw	high (STR_12| (0+32768))
  2614  02C2  2ACF               	goto	L2
  2615  02C3                     l4682:	
  2616                           
  2617                           ;Multi_RX_testjig_v1.c: 577: else if(testjig_timer == 0)
  2618  02C3  0020               	movlb	0	; select bank0
  2619  02C4  0857               	movf	_testjig_timer,w	;volatile
  2620  02C5  0458               	iorwf	_testjig_timer+1,w	;volatile
  2621  02C6  1D03               	btfss	3,2
  2622  02C7  2AD3               	goto	l4686
  2623                           
  2624                           ;Multi_RX_testjig_v1.c: 578: print_error("16v-5v supply", "T-out Error");
  2625  02C8  301A               	movlw	low (STR_15| (0+32768))
  2626  02C9  00A0               	movwf	print_error@top
  2627  02CA  3091               	movlw	high (STR_15| (0+32768))
  2628  02CB  00A1               	movwf	print_error@top+1
  2629  02CC  30A6               	movlw	low (STR_14| (0+32768))
  2630  02CD  00A2               	movwf	print_error@bottom
  2631  02CE  3091               	movlw	high (STR_14| (0+32768))
  2632  02CF                     L2:	
  2633  02CF  00A3               	movwf	print_error@bottom+1
  2634  02D0  318B  23CD  3180   	fcall	_print_error
  2635  02D3                     l4686:	
  2636                           
  2637                           ;Multi_RX_testjig_v1.c: 584: if(RA2 == 1)
  2638  02D3  0020               	movlb	0	; select bank0
  2639  02D4  1D0C               	btfss	12,2	;volatile
  2640  02D5  2B3B               	goto	l4708
  2641                           
  2642                           ;Multi_RX_testjig_v1.c: 585: {
  2643                           ;Multi_RX_testjig_v1.c: 586: power_supply_set(0);
  2644  02D6  3000               	movlw	0
  2645  02D7  318A  220E  3180   	fcall	_power_supply_set
  2646                           
  2647                           ;Multi_RX_testjig_v1.c: 588: print_screen("Pickit Programming", "");
  2648  02DA  3000               	movlw	low (STR_27| (0+32768))
  2649  02DB  00F6               	movwf	print_screen@top
  2650  02DC  3090               	movlw	high (STR_27| (0+32768))
  2651  02DD  00F7               	movwf	print_screen@top+1
  2652  02DE  3024               	movlw	low ((STR_83+4)| (0+32768))
  2653  02DF  00F8               	movwf	print_screen@bottom
  2654  02E0  3092               	movlw	high ((STR_83+4)| (0+32768))
  2655  02E1  00F9               	movwf	print_screen@bottom+1
  2656  02E2  3189  2147  3180   	fcall	_print_screen
  2657                           
  2658                           ;Multi_RX_testjig_v1.c: 589: LATA7 = 1;
  2659  02E5  0022               	movlb	2	; select bank2
  2660  02E6  178C               	bsf	12,7	;volatile
  2661                           
  2662                           ;Multi_RX_testjig_v1.c: 590: _delay((unsigned long)((100)*(16000000/4000.0)));
  2663  02E7  3003               	movlw	3
  2664  02E8  0020               	movlb	0	; select bank0
  2665  02E9  00D4               	movwf	??_main+1
  2666  02EA  3008               	movlw	8
  2667  02EB  00D3               	movwf	??_main
  2668  02EC  3077               	movlw	119
  2669  02ED                     u6497:	
  2670  02ED  0B89               	decfsz	9,f
  2671  02EE  2AED               	goto	u6497
  2672  02EF  0BD3               	decfsz	??_main,f
  2673  02F0  2AED               	goto	u6497
  2674  02F1  0BD4               	decfsz	??_main+1,f
  2675  02F2  2AED               	goto	u6497
  2676                           
  2677                           ;Multi_RX_testjig_v1.c: 591: print_screen("Waiting for", " Programming");
  2678  02F3  308E               	movlw	low (STR_29| (0+32768))
  2679  02F4  00F6               	movwf	print_screen@top
  2680  02F5  3091               	movlw	high (STR_29| (0+32768))
  2681  02F6  00F7               	movwf	print_screen@top+1
  2682  02F7  3006               	movlw	low ((STR_27+6)| (0+32768))
  2683  02F8  00F8               	movwf	print_screen@bottom
  2684  02F9  3090               	movlw	high ((STR_27+6)| (0+32768))
  2685  02FA  00F9               	movwf	print_screen@bottom+1
  2686  02FB  3189  2147  3180   	fcall	_print_screen
  2687                           
  2688                           ;Multi_RX_testjig_v1.c: 594: LATC2 = 1;
  2689  02FE  0022               	movlb	2	; select bank2
  2690  02FF  150E               	bsf	14,2	;volatile
  2691                           
  2692                           ;Multi_RX_testjig_v1.c: 595: LATC7 = 1;
  2693  0300  178E               	bsf	14,7	;volatile
  2694                           
  2695                           ;Multi_RX_testjig_v1.c: 596: _delay((unsigned long)((100)*(16000000/4000.0)));
  2696  0301  3003               	movlw	3
  2697  0302  0020               	movlb	0	; select bank0
  2698  0303  00D4               	movwf	??_main+1
  2699  0304  3008               	movlw	8
  2700  0305  00D3               	movwf	??_main
  2701  0306  3077               	movlw	119
  2702  0307                     u6507:	
  2703  0307  0B89               	decfsz	9,f
  2704  0308  2B07               	goto	u6507
  2705  0309  0BD3               	decfsz	??_main,f
  2706  030A  2B07               	goto	u6507
  2707  030B  0BD4               	decfsz	??_main+1,f
  2708  030C  2B07               	goto	u6507
  2709                           
  2710                           ;Multi_RX_testjig_v1.c: 597: LATC6 = 1;
  2711  030D  0022               	movlb	2	; select bank2
  2712  030E  170E               	bsf	14,6	;volatile
  2713                           
  2714                           ;Multi_RX_testjig_v1.c: 598: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2715  030F  3015               	movlw	21
  2716  0310  0020               	movlb	0	; select bank0
  2717  0311  00D4               	movwf	??_main+1
  2718  0312  304B               	movlw	75
  2719  0313  00D3               	movwf	??_main
  2720  0314  30BE               	movlw	190
  2721  0315                     u6517:	
  2722  0315  0B89               	decfsz	9,f
  2723  0316  2B15               	goto	u6517
  2724  0317  0BD3               	decfsz	??_main,f
  2725  0318  2B15               	goto	u6517
  2726  0319  0BD4               	decfsz	??_main+1,f
  2727  031A  2B15               	goto	u6517
  2728  031B  0000               	nop
  2729                           
  2730                           ;Multi_RX_testjig_v1.c: 599: LATC6 = 0;
  2731  031C  0022               	movlb	2	; select bank2
  2732  031D  130E               	bcf	14,6	;volatile
  2733                           
  2734                           ;Multi_RX_testjig_v1.c: 600: _delay((unsigned long)((4500)*(16000000/4000.0)));
  2735  031E  305C               	movlw	92
  2736  031F  0020               	movlb	0	; select bank0
  2737  0320  00D4               	movwf	??_main+1
  2738  0321  3051               	movlw	81
  2739  0322  00D3               	movwf	??_main
  2740  0323  3060               	movlw	96
  2741  0324                     u6527:	
  2742  0324  0B89               	decfsz	9,f
  2743  0325  2B24               	goto	u6527
  2744  0326  0BD3               	decfsz	??_main,f
  2745  0327  2B24               	goto	u6527
  2746  0328  0BD4               	decfsz	??_main+1,f
  2747  0329  2B24               	goto	u6527
  2748  032A  0000               	nop
  2749                           
  2750                           ;Multi_RX_testjig_v1.c: 601: LATC2 = 0;
  2751  032B  0022               	movlb	2	; select bank2
  2752  032C  110E               	bcf	14,2	;volatile
  2753                           
  2754                           ;Multi_RX_testjig_v1.c: 602: LATC7 = 0;
  2755  032D  138E               	bcf	14,7	;volatile
  2756                           
  2757                           ;Multi_RX_testjig_v1.c: 603: _delay((unsigned long)((100)*(16000000/4000.0)));
  2758  032E  3003               	movlw	3
  2759  032F  0020               	movlb	0	; select bank0
  2760  0330  00D4               	movwf	??_main+1
  2761  0331  3008               	movlw	8
  2762  0332  00D3               	movwf	??_main
  2763  0333  3077               	movlw	119
  2764  0334                     u6537:	
  2765  0334  0B89               	decfsz	9,f
  2766  0335  2B34               	goto	u6537
  2767  0336  0BD3               	decfsz	??_main,f
  2768  0337  2B34               	goto	u6537
  2769  0338  0BD4               	decfsz	??_main+1,f
  2770  0339  2B34               	goto	u6537
  2771                           
  2772                           ;Multi_RX_testjig_v1.c: 610: }
  2773  033A  2B53               	goto	l4712
  2774  033B                     l4708:	
  2775                           
  2776                           ;Multi_RX_testjig_v1.c: 611: else
  2777                           ;Multi_RX_testjig_v1.c: 612: {
  2778                           ;Multi_RX_testjig_v1.c: 613: print_screen("Pickit Programming", " skipped");
  2779  033B  3000               	movlw	low (STR_27| (0+32768))
  2780  033C  00F6               	movwf	print_screen@top
  2781  033D  3090               	movlw	high (STR_27| (0+32768))
  2782  033E  00F7               	movwf	print_screen@top+1
  2783  033F  30F0               	movlw	low (STR_32| (0+32768))
  2784  0340  00F8               	movwf	print_screen@bottom
  2785  0341  3091               	movlw	high (STR_32| (0+32768))
  2786  0342  00F9               	movwf	print_screen@bottom+1
  2787  0343  3189  2147  3180   	fcall	_print_screen
  2788                           
  2789                           ;Multi_RX_testjig_v1.c: 614: _delay((unsigned long)((300)*(16000000/4000.0)));
  2790  0346  3007               	movlw	7
  2791  0347  0020               	movlb	0	; select bank0
  2792  0348  00D4               	movwf	??_main+1
  2793  0349  3017               	movlw	23
  2794  034A  00D3               	movwf	??_main
  2795  034B  306A               	movlw	106
  2796  034C                     u6547:	
  2797  034C  0B89               	decfsz	9,f
  2798  034D  2B4C               	goto	u6547
  2799  034E  0BD3               	decfsz	??_main,f
  2800  034F  2B4C               	goto	u6547
  2801  0350  0BD4               	decfsz	??_main+1,f
  2802  0351  2B4C               	goto	u6547
  2803  0352  0000               	nop
  2804  0353                     l4712:	
  2805                           
  2806                           ;Multi_RX_testjig_v1.c: 615: }
  2807                           ;Multi_RX_testjig_v1.c: 630: LATF4 = 0;
  2808  0353  0027               	movlb	7	; select bank7
  2809  0354  120C               	bcf	12,4	;volatile
  2810                           
  2811                           ;Multi_RX_testjig_v1.c: 631: _delay((unsigned long)((100)*(16000000/4000.0)));
  2812  0355  3003               	movlw	3
  2813  0356  0020               	movlb	0	; select bank0
  2814  0357  00D4               	movwf	??_main+1
  2815  0358  3008               	movlw	8
  2816  0359  00D3               	movwf	??_main
  2817  035A  3077               	movlw	119
  2818  035B                     u6557:	
  2819  035B  0B89               	decfsz	9,f
  2820  035C  2B5B               	goto	u6557
  2821  035D  0BD3               	decfsz	??_main,f
  2822  035E  2B5B               	goto	u6557
  2823  035F  0BD4               	decfsz	??_main+1,f
  2824  0360  2B5B               	goto	u6557
  2825                           
  2826                           ;Multi_RX_testjig_v1.c: 632: LATF4 = 1;
  2827  0361  0027               	movlb	7	; select bank7
  2828  0362  160C               	bsf	12,4	;volatile
  2829                           
  2830                           ;Multi_RX_testjig_v1.c: 633: _delay((unsigned long)((100)*(16000000/4000.0)));
  2831  0363  3003               	movlw	3
  2832  0364  0020               	movlb	0	; select bank0
  2833  0365  00D4               	movwf	??_main+1
  2834  0366  3008               	movlw	8
  2835  0367  00D3               	movwf	??_main
  2836  0368  3077               	movlw	119
  2837  0369                     u6567:	
  2838  0369  0B89               	decfsz	9,f
  2839  036A  2B69               	goto	u6567
  2840  036B  0BD3               	decfsz	??_main,f
  2841  036C  2B69               	goto	u6567
  2842  036D  0BD4               	decfsz	??_main+1,f
  2843  036E  2B69               	goto	u6567
  2844                           
  2845                           ;Multi_RX_testjig_v1.c: 634: LATF4 = 0;
  2846  036F  0027               	movlb	7	; select bank7
  2847  0370  120C               	bcf	12,4	;volatile
  2848                           
  2849                           ;Multi_RX_testjig_v1.c: 635: print_screen("Establishing", "comms");
  2850  0371  305C               	movlw	low (STR_33| (0+32768))
  2851  0372  00F6               	movwf	print_screen@top
  2852  0373  3091               	movlw	high (STR_33| (0+32768))
  2853  0374  00F7               	movwf	print_screen@top+1
  2854  0375  301A               	movlw	low (STR_34| (0+32768))
  2855  0376  00F8               	movwf	print_screen@bottom
  2856  0377  3092               	movlw	high (STR_34| (0+32768))
  2857  0378  00F9               	movwf	print_screen@bottom+1
  2858  0379  3189  2147  3180   	fcall	_print_screen
  2859                           
  2860                           ;Multi_RX_testjig_v1.c: 636: unsigned char device_type;
  2861                           ;Multi_RX_testjig_v1.c: 637: unsigned char RX_data = 0;
  2862  037C  0022               	movlb	2	; select bank2
  2863  037D  01A3               	clrf	main@RX_data^(0+256)
  2864                           
  2865                           ;Multi_RX_testjig_v1.c: 638: unsigned int i;
  2866                           ;Multi_RX_testjig_v1.c: 639: for(i = 0; i < 100; i++)
  2867  037E  01A0               	clrf	main@i^(0+256)
  2868  037F  01A1               	clrf	(main@i+1)^(0+256)
  2869  0380  3000               	movlw	0
  2870  0381  0221               	subwf	(main@i+1)^(0+256),w
  2871  0382  3064               	movlw	100
  2872  0383  1903               	skipnz
  2873  0384  0220               	subwf	main@i^(0+256),w
  2874  0385  1803               	btfsc	3,0
  2875  0386  2BDA               	goto	l4746
  2876  0387                     l4730:	
  2877                           
  2878                           ;Multi_RX_testjig_v1.c: 640: {
  2879                           ;Multi_RX_testjig_v1.c: 641: TX_one(0x01);
  2880  0387  3001               	movlw	1
  2881  0388  318A  225F  3180   	fcall	_TX_one
  2882                           
  2883                           ;Multi_RX_testjig_v1.c: 642: device_type = RX_one_timeout();
  2884  038B  318A  228B  3180   	fcall	_RX_one_timeout
  2885  038E  0020               	movlb	0	; select bank0
  2886  038F  00D3               	movwf	??_main
  2887  0390  0853               	movf	??_main,w
  2888  0391  0022               	movlb	2	; select bank2
  2889  0392  00A2               	movwf	main@device_type^(0+256)
  2890                           
  2891                           ;Multi_RX_testjig_v1.c: 643: if((device_type == 0xAA) || (device_type == 0xA1) || (devic
      +                          e_type == 0xA2))
  2892  0393  30AA               	movlw	170
  2893  0394  0622               	xorwf	main@device_type^(0+256),w
  2894  0395  1903               	btfsc	3,2
  2895  0396  2BDA               	goto	l4746
  2896  0397  30A1               	movlw	161
  2897  0398  0622               	xorwf	main@device_type^(0+256),w
  2898  0399  1903               	btfsc	3,2
  2899  039A  2BDA               	goto	l4746
  2900  039B  30A2               	movlw	162
  2901  039C  0622               	xorwf	main@device_type^(0+256),w
  2902  039D  1903               	btfsc	3,2
  2903  039E  2BDA               	goto	l4746
  2904                           
  2905                           ;Multi_RX_testjig_v1.c: 645: lcd_print_int(i, 11, 0, 0);
  2906                           
  2907                           ;Multi_RX_testjig_v1.c: 644: break;
  2908  039F  0821               	movf	(main@i+1)^(0+256),w
  2909  03A0  0020               	movlb	0	; select bank0
  2910  03A1  00A7               	movwf	lcd_print_int@number+1
  2911  03A2  0022               	movlb	2	; select bank2
  2912  03A3  0820               	movf	main@i^(0+256),w
  2913  03A4  0020               	movlb	0	; select bank0
  2914  03A5  00A6               	movwf	lcd_print_int@number
  2915  03A6  300B               	movlw	11
  2916  03A7  00A8               	movwf	lcd_print_int@pos
  2917  03A8  3000               	movlw	0
  2918  03A9  00A9               	movwf	lcd_print_int@pos+1
  2919  03AA  01AA               	clrf	lcd_print_int@decimal
  2920  03AB  01AB               	clrf	lcd_print_int@ten_thou_digit
  2921  03AC  318C  2487  3180   	fcall	_lcd_print_int
  2922                           
  2923                           ;Multi_RX_testjig_v1.c: 646: lcd_print_int(device_type, 5, 0, 0);
  2924  03AF  0022               	movlb	2	; select bank2
  2925  03B0  0822               	movf	main@device_type^(0+256),w
  2926  03B1  0020               	movlb	0	; select bank0
  2927  03B2  00D3               	movwf	??_main
  2928  03B3  01D4               	clrf	??_main+1
  2929  03B4  0853               	movf	??_main,w
  2930  03B5  00A6               	movwf	lcd_print_int@number
  2931  03B6  0854               	movf	??_main+1,w
  2932  03B7  00A7               	movwf	lcd_print_int@number+1
  2933  03B8  3005               	movlw	5
  2934  03B9  00A8               	movwf	lcd_print_int@pos
  2935  03BA  3000               	movlw	0
  2936  03BB  00A9               	movwf	lcd_print_int@pos+1
  2937  03BC  01AA               	clrf	lcd_print_int@decimal
  2938  03BD  01AB               	clrf	lcd_print_int@ten_thou_digit
  2939  03BE  318C  2487  3180   	fcall	_lcd_print_int
  2940                           
  2941                           ;Multi_RX_testjig_v1.c: 647: _delay((unsigned long)((50)*(16000000/4000.0)));
  2942  03C1  3002               	movlw	2
  2943  03C2  0020               	movlb	0	; select bank0
  2944  03C3  00D4               	movwf	??_main+1
  2945  03C4  3004               	movlw	4
  2946  03C5  00D3               	movwf	??_main
  2947  03C6  30BA               	movlw	186
  2948  03C7                     u6577:	
  2949  03C7  0B89               	decfsz	9,f
  2950  03C8  2BC7               	goto	u6577
  2951  03C9  0BD3               	decfsz	??_main,f
  2952  03CA  2BC7               	goto	u6577
  2953  03CB  0BD4               	decfsz	??_main+1,f
  2954  03CC  2BC7               	goto	u6577
  2955  03CD  0000               	nop
  2956  03CE  3001               	movlw	1
  2957  03CF  0022               	movlb	2	; select bank2
  2958  03D0  07A0               	addwf	main@i^(0+256),f
  2959  03D1  3000               	movlw	0
  2960  03D2  3DA1               	addwfc	(main@i+1)^(0+256),f
  2961  03D3  3000               	movlw	0
  2962  03D4  0221               	subwf	(main@i+1)^(0+256),w
  2963  03D5  3064               	movlw	100
  2964  03D6  1903               	skipnz
  2965  03D7  0220               	subwf	main@i^(0+256),w
  2966  03D8  1C03               	skipc
  2967  03D9  2B87               	goto	l4730
  2968  03DA                     l4746:	
  2969                           
  2970                           ;Multi_RX_testjig_v1.c: 648: }
  2971                           ;Multi_RX_testjig_v1.c: 649: if(i >= 10)
  2972  03DA  3000               	movlw	0
  2973  03DB  0221               	subwf	(main@i+1)^(0+256),w
  2974  03DC  300A               	movlw	10
  2975  03DD  1903               	skipnz
  2976  03DE  0220               	subwf	main@i^(0+256),w
  2977  03DF  1C03               	skipc
  2978  03E0  2BEE               	goto	l4750
  2979                           
  2980                           ;Multi_RX_testjig_v1.c: 650: {
  2981                           ;Multi_RX_testjig_v1.c: 653: print_error("Comms Error", " 1");
  2982  03E1  309A               	movlw	low (STR_35| (0+32768))
  2983  03E2  0020               	movlb	0	; select bank0
  2984  03E3  00A0               	movwf	print_error@top
  2985  03E4  3091               	movlw	high (STR_35| (0+32768))
  2986  03E5  00A1               	movwf	print_error@top+1
  2987  03E6  3039               	movlw	low (STR_36| (0+32768))
  2988  03E7  00A2               	movwf	print_error@bottom
  2989  03E8  3092               	movlw	high (STR_36| (0+32768))
  2990  03E9  00A3               	movwf	print_error@bottom+1
  2991  03EA  318B  23CD  3180   	fcall	_print_error
  2992                           
  2993                           ;Multi_RX_testjig_v1.c: 654: }
  2994  03ED  2C1E               	goto	l4754
  2995  03EE                     l4750:	
  2996                           
  2997                           ;Multi_RX_testjig_v1.c: 655: else
  2998                           ;Multi_RX_testjig_v1.c: 656: {
  2999                           ;Multi_RX_testjig_v1.c: 657: lcd_print_int(i, 11, 0, 0);
  3000  03EE  0022               	movlb	2	; select bank2
  3001  03EF  0821               	movf	(main@i+1)^(0+256),w
  3002  03F0  0020               	movlb	0	; select bank0
  3003  03F1  00A7               	movwf	lcd_print_int@number+1
  3004  03F2  0022               	movlb	2	; select bank2
  3005  03F3  0820               	movf	main@i^(0+256),w
  3006  03F4  0020               	movlb	0	; select bank0
  3007  03F5  00A6               	movwf	lcd_print_int@number
  3008  03F6  300B               	movlw	11
  3009  03F7  00A8               	movwf	lcd_print_int@pos
  3010  03F8  3000               	movlw	0
  3011  03F9  00A9               	movwf	lcd_print_int@pos+1
  3012  03FA  01AA               	clrf	lcd_print_int@decimal
  3013  03FB  01AB               	clrf	lcd_print_int@ten_thou_digit
  3014  03FC  318C  2487  3180   	fcall	_lcd_print_int
  3015                           
  3016                           ;Multi_RX_testjig_v1.c: 658: lcd_print_int(device_type, 5, 0, 0);
  3017  03FF  0022               	movlb	2	; select bank2
  3018  0400  0822               	movf	main@device_type^(0+256),w
  3019  0401  0020               	movlb	0	; select bank0
  3020  0402  00D3               	movwf	??_main
  3021  0403  01D4               	clrf	??_main+1
  3022  0404  0853               	movf	??_main,w
  3023  0405  00A6               	movwf	lcd_print_int@number
  3024  0406  0854               	movf	??_main+1,w
  3025  0407  00A7               	movwf	lcd_print_int@number+1
  3026  0408  3005               	movlw	5
  3027  0409  00A8               	movwf	lcd_print_int@pos
  3028  040A  3000               	movlw	0
  3029  040B  00A9               	movwf	lcd_print_int@pos+1
  3030  040C  01AA               	clrf	lcd_print_int@decimal
  3031  040D  01AB               	clrf	lcd_print_int@ten_thou_digit
  3032  040E  318C  2487  3180   	fcall	_lcd_print_int
  3033                           
  3034                           ;Multi_RX_testjig_v1.c: 659: _delay((unsigned long)((50)*(16000000/4000.0)));
  3035  0411  3002               	movlw	2
  3036  0412  0020               	movlb	0	; select bank0
  3037  0413  00D4               	movwf	??_main+1
  3038  0414  3004               	movlw	4
  3039  0415  00D3               	movwf	??_main
  3040  0416  30BA               	movlw	186
  3041  0417                     u6587:	
  3042  0417  0B89               	decfsz	9,f
  3043  0418  2C17               	goto	u6587
  3044  0419  0BD3               	decfsz	??_main,f
  3045  041A  2C17               	goto	u6587
  3046  041B  0BD4               	decfsz	??_main+1,f
  3047  041C  2C17               	goto	u6587
  3048  041D  0000               	nop
  3049  041E                     l4754:	
  3050                           
  3051                           ;Multi_RX_testjig_v1.c: 660: }
  3052                           ;Multi_RX_testjig_v1.c: 667: if((device_type == 0xAA)|| (device_type == 0xA1))
  3053  041E  30AA               	movlw	170
  3054  041F  0022               	movlb	2	; select bank2
  3055  0420  0622               	xorwf	main@device_type^(0+256),w
  3056  0421  1903               	btfsc	3,2
  3057  0422  2C27               	goto	l4758
  3058  0423  30A1               	movlw	161
  3059  0424  0622               	xorwf	main@device_type^(0+256),w
  3060  0425  1D03               	btfss	3,2
  3061  0426  2D85               	goto	l335
  3062  0427                     l4758:	
  3063                           
  3064                           ;Multi_RX_testjig_v1.c: 668: {
  3065                           ;Multi_RX_testjig_v1.c: 670: print_screen("Test RF", "3v3");
  3066  0427  3012               	movlw	low (STR_37| (0+32768))
  3067  0428  00F6               	movwf	print_screen@top
  3068  0429  3092               	movlw	high (STR_37| (0+32768))
  3069  042A  00F7               	movwf	print_screen@top+1
  3070  042B  307E               	movlw	low ((STR_43+8)| (0+32768))
  3071  042C  00F8               	movwf	print_screen@bottom
  3072  042D  3091               	movlw	high ((STR_43+8)| (0+32768))
  3073  042E  00F9               	movwf	print_screen@bottom+1
  3074  042F  3189  2147  3180   	fcall	_print_screen
  3075                           
  3076                           ;Multi_RX_testjig_v1.c: 671: TX_one(0x70);
  3077  0432  3070               	movlw	112
  3078  0433  318A  225F  3180   	fcall	_TX_one
  3079                           
  3080                           ;Multi_RX_testjig_v1.c: 672: RX_data = RX_one();
  3081  0436  318A  2233  3180   	fcall	_RX_one
  3082  0439  0020               	movlb	0	; select bank0
  3083  043A  00D3               	movwf	??_main
  3084  043B  0853               	movf	??_main,w
  3085  043C  0022               	movlb	2	; select bank2
  3086  043D  00A3               	movwf	main@RX_data^(0+256)
  3087                           
  3088                           ;Multi_RX_testjig_v1.c: 673: TX_one(0x70);
  3089  043E  3070               	movlw	112
  3090  043F  318A  225F  3180   	fcall	_TX_one
  3091                           
  3092                           ;Multi_RX_testjig_v1.c: 674: RX_data = RX_one();
  3093  0442  318A  2233  3180   	fcall	_RX_one
  3094  0445  0020               	movlb	0	; select bank0
  3095  0446  00D3               	movwf	??_main
  3096  0447  0853               	movf	??_main,w
  3097  0448  0022               	movlb	2	; select bank2
  3098  0449  00A3               	movwf	main@RX_data^(0+256)
  3099                           
  3100                           ;Multi_RX_testjig_v1.c: 675: if(RX_data == 0)
  3101  044A  0823               	movf	main@RX_data^(0+256),w
  3102  044B  1D03               	btfss	3,2
  3103  044C  2C56               	goto	l4772
  3104                           
  3105                           ;Multi_RX_testjig_v1.c: 676: print_error("Comms Error", " 11");
  3106  044D  309A               	movlw	low (STR_35| (0+32768))
  3107  044E  0020               	movlb	0	; select bank0
  3108  044F  00A0               	movwf	print_error@top
  3109  0450  3091               	movlw	high (STR_35| (0+32768))
  3110  0451  00A1               	movwf	print_error@top+1
  3111  0452  3025               	movlw	low (STR_40| (0+32768))
  3112  0453  00A2               	movwf	print_error@bottom
  3113  0454  3092               	movlw	high (STR_40| (0+32768))
  3114  0455  2C8C               	goto	L3
  3115  0456                     l4772:	
  3116                           
  3117                           ;Multi_RX_testjig_v1.c: 677: else if(RX_data == 0xFF)
  3118  0456  0022               	movlb	2	; select bank2
  3119  0457  0A23               	incf	main@RX_data^(0+256),w
  3120  0458  1D03               	btfss	3,2
  3121  0459  2C63               	goto	l4776
  3122                           
  3123                           ;Multi_RX_testjig_v1.c: 678: print_error("Comms Error", " 12");
  3124  045A  309A               	movlw	low (STR_35| (0+32768))
  3125  045B  0020               	movlb	0	; select bank0
  3126  045C  00A0               	movwf	print_error@top
  3127  045D  3091               	movlw	high (STR_35| (0+32768))
  3128  045E  00A1               	movwf	print_error@top+1
  3129  045F  3029               	movlw	low (STR_42| (0+32768))
  3130  0460  00A2               	movwf	print_error@bottom
  3131  0461  3092               	movlw	high (STR_42| (0+32768))
  3132  0462  2C8C               	goto	L3
  3133  0463                     l4776:	
  3134                           
  3135                           ;Multi_RX_testjig_v1.c: 679: else if(RX_data > 179)
  3136  0463  30B4               	movlw	180
  3137  0464  0022               	movlb	2	; select bank2
  3138  0465  0223               	subwf	main@RX_data^(0+256),w
  3139  0466  1C03               	skipc
  3140  0467  2C71               	goto	l4780
  3141                           
  3142                           ;Multi_RX_testjig_v1.c: 680: print_error("Test RF 3v3", " Error - High");
  3143  0468  3076               	movlw	low (STR_43| (0+32768))
  3144  0469  0020               	movlb	0	; select bank0
  3145  046A  00A0               	movwf	print_error@top
  3146  046B  3091               	movlw	high (STR_43| (0+32768))
  3147  046C  00A1               	movwf	print_error@top+1
  3148  046D  30F0               	movlw	low (STR_44| (0+32768))
  3149  046E  00A2               	movwf	print_error@bottom
  3150  046F  3090               	movlw	high (STR_44| (0+32768))
  3151  0470  2C8C               	goto	L3
  3152  0471                     l4780:	
  3153                           
  3154                           ;Multi_RX_testjig_v1.c: 681: else if(RX_data < 153)
  3155  0471  3099               	movlw	153
  3156  0472  0022               	movlb	2	; select bank2
  3157  0473  0223               	subwf	main@RX_data^(0+256),w
  3158  0474  1803               	skipnc
  3159  0475  2C7F               	goto	l4784
  3160                           
  3161                           ;Multi_RX_testjig_v1.c: 682: print_error("Test RF 3v3", " Error - Micrel");
  3162  0476  3076               	movlw	low (STR_43| (0+32768))
  3163  0477  0020               	movlb	0	; select bank0
  3164  0478  00A0               	movwf	print_error@top
  3165  0479  3091               	movlw	high (STR_43| (0+32768))
  3166  047A  00A1               	movwf	print_error@top+1
  3167  047B  3078               	movlw	low (STR_46| (0+32768))
  3168  047C  00A2               	movwf	print_error@bottom
  3169  047D  3090               	movlw	high (STR_46| (0+32768))
  3170  047E  2C8C               	goto	L3
  3171  047F                     l4784:	
  3172                           
  3173                           ;Multi_RX_testjig_v1.c: 683: else if(RX_data < 158)
  3174  047F  309E               	movlw	158
  3175  0480  0022               	movlb	2	; select bank2
  3176  0481  0223               	subwf	main@RX_data^(0+256),w
  3177  0482  1803               	skipnc
  3178  0483  2C90               	goto	l339
  3179                           
  3180                           ;Multi_RX_testjig_v1.c: 684: print_error("Test RF 3v3", " Error - Low");
  3181  0484  3076               	movlw	low (STR_43| (0+32768))
  3182  0485  0020               	movlb	0	; select bank0
  3183  0486  00A0               	movwf	print_error@top
  3184  0487  3091               	movlw	high (STR_43| (0+32768))
  3185  0488  00A1               	movwf	print_error@top+1
  3186  0489  3069               	movlw	low (STR_48| (0+32768))
  3187  048A  00A2               	movwf	print_error@bottom
  3188  048B  3091               	movlw	high (STR_48| (0+32768))
  3189  048C                     L3:	
  3190  048C  00A3               	movwf	print_error@bottom+1
  3191  048D  318B  23CD  3180   	fcall	_print_error
  3192  0490                     l339:	
  3193                           
  3194                           ;Multi_RX_testjig_v1.c: 686: print_screen("Test RF", "3v3 - OK");
  3195  0490  3012               	movlw	low (STR_37| (0+32768))
  3196  0491  00F6               	movwf	print_screen@top
  3197  0492  3092               	movlw	high (STR_37| (0+32768))
  3198  0493  00F7               	movwf	print_screen@top+1
  3199  0494  30DE               	movlw	low (STR_50| (0+32768))
  3200  0495  00F8               	movwf	print_screen@bottom
  3201  0496  3091               	movlw	high (STR_50| (0+32768))
  3202  0497  00F9               	movwf	print_screen@bottom+1
  3203  0498  3189  2147  3180   	fcall	_print_screen
  3204                           
  3205                           ;Multi_RX_testjig_v1.c: 689: RE0 = 1;
  3206  049B  0020               	movlb	0	; select bank0
  3207  049C  1410               	bsf	16,0	;volatile
  3208                           
  3209                           ;Multi_RX_testjig_v1.c: 690: _delay((unsigned long)((150)*(16000000/4000.0)));
  3210  049D  3004               	movlw	4
  3211  049E  0020               	movlb	0	; select bank0
  3212  049F  00D4               	movwf	??_main+1
  3213  04A0  300C               	movlw	12
  3214  04A1  00D3               	movwf	??_main
  3215  04A2  3033               	movlw	51
  3216  04A3                     u6597:	
  3217  04A3  0B89               	decfsz	9,f
  3218  04A4  2CA3               	goto	u6597
  3219  04A5  0BD3               	decfsz	??_main,f
  3220  04A6  2CA3               	goto	u6597
  3221  04A7  0BD4               	decfsz	??_main+1,f
  3222  04A8  2CA3               	goto	u6597
  3223  04A9  3200               	nop2
  3224                           
  3225                           ;Multi_RX_testjig_v1.c: 691: print_screen("Test RF", "RSSI");
  3226  04AA  3012               	movlw	low (STR_37| (0+32768))
  3227  04AB  00F6               	movwf	print_screen@top
  3228  04AC  3092               	movlw	high (STR_37| (0+32768))
  3229  04AD  00F7               	movwf	print_screen@top+1
  3230  04AE  303D               	movlw	low ((STR_57+8)| (0+32768))
  3231  04AF  00F8               	movwf	print_screen@bottom
  3232  04B0  3091               	movlw	high ((STR_57+8)| (0+32768))
  3233  04B1  00F9               	movwf	print_screen@bottom+1
  3234  04B2  3189  2147  3180   	fcall	_print_screen
  3235                           
  3236                           ;Multi_RX_testjig_v1.c: 692: TX_one(0x60);
  3237  04B5  3060               	movlw	96
  3238  04B6  318A  225F  3180   	fcall	_TX_one
  3239                           
  3240                           ;Multi_RX_testjig_v1.c: 693: RX_data = RX_one();
  3241  04B9  318A  2233  3180   	fcall	_RX_one
  3242  04BC  0020               	movlb	0	; select bank0
  3243  04BD  00D3               	movwf	??_main
  3244  04BE  0853               	movf	??_main,w
  3245  04BF  0022               	movlb	2	; select bank2
  3246  04C0  00A3               	movwf	main@RX_data^(0+256)
  3247                           
  3248                           ;Multi_RX_testjig_v1.c: 694: TX_one(0x60);
  3249  04C1  3060               	movlw	96
  3250  04C2  318A  225F  3180   	fcall	_TX_one
  3251                           
  3252                           ;Multi_RX_testjig_v1.c: 695: RX_data = RX_one();
  3253  04C5  318A  2233  3180   	fcall	_RX_one
  3254  04C8  0020               	movlb	0	; select bank0
  3255  04C9  00D3               	movwf	??_main
  3256  04CA  0853               	movf	??_main,w
  3257  04CB  0022               	movlb	2	; select bank2
  3258  04CC  00A3               	movwf	main@RX_data^(0+256)
  3259                           
  3260                           ;Multi_RX_testjig_v1.c: 696: if(RX_data == 0)
  3261  04CD  0823               	movf	main@RX_data^(0+256),w
  3262  04CE  1D03               	btfss	3,2
  3263  04CF  2CD9               	goto	l4806
  3264                           
  3265                           ;Multi_RX_testjig_v1.c: 697: print_error("Comms Error", " 13");
  3266  04D0  309A               	movlw	low (STR_35| (0+32768))
  3267  04D1  0020               	movlb	0	; select bank0
  3268  04D2  00A0               	movwf	print_error@top
  3269  04D3  3091               	movlw	high (STR_35| (0+32768))
  3270  04D4  00A1               	movwf	print_error@top+1
  3271  04D5  302D               	movlw	low (STR_54| (0+32768))
  3272  04D6  00A2               	movwf	print_error@bottom
  3273  04D7  3092               	movlw	high (STR_54| (0+32768))
  3274  04D8  2D01               	goto	L4
  3275  04D9                     l4806:	
  3276                           
  3277                           ;Multi_RX_testjig_v1.c: 698: else if(RX_data == 0xFF)
  3278  04D9  0022               	movlb	2	; select bank2
  3279  04DA  0A23               	incf	main@RX_data^(0+256),w
  3280  04DB  1D03               	btfss	3,2
  3281  04DC  2CE6               	goto	l4810
  3282                           
  3283                           ;Multi_RX_testjig_v1.c: 699: print_error("Comms Error", " 14");
  3284  04DD  309A               	movlw	low (STR_35| (0+32768))
  3285  04DE  0020               	movlb	0	; select bank0
  3286  04DF  00A0               	movwf	print_error@top
  3287  04E0  3091               	movlw	high (STR_35| (0+32768))
  3288  04E1  00A1               	movwf	print_error@top+1
  3289  04E2  3031               	movlw	low (STR_56| (0+32768))
  3290  04E3  00A2               	movwf	print_error@bottom
  3291  04E4  3092               	movlw	high (STR_56| (0+32768))
  3292  04E5  2D01               	goto	L4
  3293  04E6                     l4810:	
  3294                           
  3295                           ;Multi_RX_testjig_v1.c: 700: else if(RX_data > 120)
  3296  04E6  3079               	movlw	121
  3297  04E7  0022               	movlb	2	; select bank2
  3298  04E8  0223               	subwf	main@RX_data^(0+256),w
  3299  04E9  1C03               	skipc
  3300  04EA  2CF4               	goto	l4814
  3301                           
  3302                           ;Multi_RX_testjig_v1.c: 701: print_error("Test RF RSSI", " Error - High");
  3303  04EB  3035               	movlw	low (STR_57| (0+32768))
  3304  04EC  0020               	movlb	0	; select bank0
  3305  04ED  00A0               	movwf	print_error@top
  3306  04EE  3091               	movlw	high (STR_57| (0+32768))
  3307  04EF  00A1               	movwf	print_error@top+1
  3308  04F0  30F0               	movlw	low (STR_44| (0+32768))
  3309  04F1  00A2               	movwf	print_error@bottom
  3310  04F2  3090               	movlw	high (STR_44| (0+32768))
  3311  04F3  2D01               	goto	L4
  3312  04F4                     l4814:	
  3313                           
  3314                           ;Multi_RX_testjig_v1.c: 702: else if(RX_data < 90)
  3315  04F4  305A               	movlw	90
  3316  04F5  0022               	movlb	2	; select bank2
  3317  04F6  0223               	subwf	main@RX_data^(0+256),w
  3318  04F7  1803               	skipnc
  3319  04F8  2D05               	goto	l348
  3320                           
  3321                           ;Multi_RX_testjig_v1.c: 703: print_error("Test RF RSSI", " Error - Low");
  3322  04F9  3035               	movlw	low (STR_57| (0+32768))
  3323  04FA  0020               	movlb	0	; select bank0
  3324  04FB  00A0               	movwf	print_error@top
  3325  04FC  3091               	movlw	high (STR_57| (0+32768))
  3326  04FD  00A1               	movwf	print_error@top+1
  3327  04FE  3069               	movlw	low (STR_48| (0+32768))
  3328  04FF  00A2               	movwf	print_error@bottom
  3329  0500  3091               	movlw	high (STR_48| (0+32768))
  3330  0501                     L4:	
  3331  0501  00A3               	movwf	print_error@bottom+1
  3332  0502  318B  23CD  3180   	fcall	_print_error
  3333  0505                     l348:	
  3334                           
  3335                           ;Multi_RX_testjig_v1.c: 704: print_screen("Test RF", "RSSI - OK");
  3336  0505  3012               	movlw	low (STR_37| (0+32768))
  3337  0506  00F6               	movwf	print_screen@top
  3338  0507  3092               	movlw	high (STR_37| (0+32768))
  3339  0508  00F7               	movwf	print_screen@top+1
  3340  0509  30D4               	movlw	low (STR_62| (0+32768))
  3341  050A  00F8               	movwf	print_screen@bottom
  3342  050B  3091               	movlw	high (STR_62| (0+32768))
  3343  050C  00F9               	movwf	print_screen@bottom+1
  3344  050D  3189  2147  3180   	fcall	_print_screen
  3345                           
  3346                           ;Multi_RX_testjig_v1.c: 707: print_screen("Test RF", "Decode");
  3347  0510  3012               	movlw	low (STR_37| (0+32768))
  3348  0511  00F6               	movwf	print_screen@top
  3349  0512  3092               	movlw	high (STR_37| (0+32768))
  3350  0513  00F7               	movwf	print_screen@top+1
  3351  0514  30AF               	movlw	low ((STR_70+8)| (0+32768))
  3352  0515  00F8               	movwf	print_screen@bottom
  3353  0516  3090               	movlw	high ((STR_70+8)| (0+32768))
  3354  0517  00F9               	movwf	print_screen@bottom+1
  3355  0518  3189  2147  3180   	fcall	_print_screen
  3356                           
  3357                           ;Multi_RX_testjig_v1.c: 708: for(i = 0; i < 10; i++)
  3358  051B  0022               	movlb	2	; select bank2
  3359  051C  01A0               	clrf	main@i^(0+256)
  3360  051D  01A1               	clrf	(main@i+1)^(0+256)
  3361  051E  3000               	movlw	0
  3362  051F  0221               	subwf	(main@i+1)^(0+256),w
  3363  0520  300A               	movlw	10
  3364  0521  1903               	skipnz
  3365  0522  0220               	subwf	main@i^(0+256),w
  3366  0523  1803               	btfsc	3,0
  3367  0524  2D4C               	goto	l4832
  3368  0525                     l4824:	
  3369                           
  3370                           ;Multi_RX_testjig_v1.c: 709: {
  3371                           ;Multi_RX_testjig_v1.c: 710: TX_one(0x61);
  3372  0525  3061               	movlw	97
  3373  0526  318A  225F  3180   	fcall	_TX_one
  3374                           
  3375                           ;Multi_RX_testjig_v1.c: 711: RX_data = RX_one();
  3376  0529  318A  2233  3180   	fcall	_RX_one
  3377  052C  0020               	movlb	0	; select bank0
  3378  052D  00D3               	movwf	??_main
  3379  052E  0853               	movf	??_main,w
  3380  052F  0022               	movlb	2	; select bank2
  3381  0530  00A3               	movwf	main@RX_data^(0+256)
  3382                           
  3383                           ;Multi_RX_testjig_v1.c: 712: if(RX_data == 1)
  3384  0531  0323               	decf	main@RX_data^(0+256),w
  3385  0532  1903               	btfsc	3,2
  3386  0533  2D4C               	goto	l4832
  3387                           
  3388                           ;Multi_RX_testjig_v1.c: 714: _delay((unsigned long)((200)*(16000000/4000.0)));
  3389                           
  3390                           ;Multi_RX_testjig_v1.c: 713: break;
  3391  0534  3005               	movlw	5
  3392  0535  0020               	movlb	0	; select bank0
  3393  0536  00D4               	movwf	??_main+1
  3394  0537  300F               	movlw	15
  3395  0538  00D3               	movwf	??_main
  3396  0539  30F1               	movlw	241
  3397  053A                     u6607:	
  3398  053A  0B89               	decfsz	9,f
  3399  053B  2D3A               	goto	u6607
  3400  053C  0BD3               	decfsz	??_main,f
  3401  053D  2D3A               	goto	u6607
  3402  053E  0BD4               	decfsz	??_main+1,f
  3403  053F  2D3A               	goto	u6607
  3404  0540  3001               	movlw	1
  3405  0541  0022               	movlb	2	; select bank2
  3406  0542  07A0               	addwf	main@i^(0+256),f
  3407  0543  3000               	movlw	0
  3408  0544  3DA1               	addwfc	(main@i+1)^(0+256),f
  3409  0545  3000               	movlw	0
  3410  0546  0221               	subwf	(main@i+1)^(0+256),w
  3411  0547  300A               	movlw	10
  3412  0548  1903               	skipnz
  3413  0549  0220               	subwf	main@i^(0+256),w
  3414  054A  1C03               	skipc
  3415  054B  2D25               	goto	l4824
  3416  054C                     l4832:	
  3417                           
  3418                           ;Multi_RX_testjig_v1.c: 715: }
  3419                           ;Multi_RX_testjig_v1.c: 717: if(RX_data == 1)
  3420  054C  0323               	decf	main@RX_data^(0+256),w
  3421  054D  1D03               	btfss	3,2
  3422  054E  2D5B               	goto	l4836
  3423                           
  3424                           ;Multi_RX_testjig_v1.c: 718: print_screen("Test RF", "Decode New - OK");
  3425  054F  3012               	movlw	low (STR_37| (0+32768))
  3426  0550  00F6               	movwf	print_screen@top
  3427  0551  3092               	movlw	high (STR_37| (0+32768))
  3428  0552  00F7               	movwf	print_screen@top+1
  3429  0553  3068               	movlw	low (STR_66| (0+32768))
  3430  0554  00F8               	movwf	print_screen@bottom
  3431  0555  3090               	movlw	high (STR_66| (0+32768))
  3432  0556  00F9               	movwf	print_screen@bottom+1
  3433  0557  3189  2147  3180   	fcall	_print_screen
  3434  055A  2D83               	goto	l4846
  3435  055B                     l4836:	
  3436                           
  3437                           ;Multi_RX_testjig_v1.c: 719: else if(RX_data == 2)
  3438  055B  3002               	movlw	2
  3439  055C  0022               	movlb	2	; select bank2
  3440  055D  0623               	xorwf	main@RX_data^(0+256),w
  3441  055E  1D03               	btfss	3,2
  3442  055F  2D69               	goto	l4840
  3443                           
  3444                           ;Multi_RX_testjig_v1.c: 720: print_error("Test RF", "Decode Old -Fail");
  3445  0560  3012               	movlw	low (STR_37| (0+32768))
  3446  0561  0020               	movlb	0	; select bank0
  3447  0562  00A0               	movwf	print_error@top
  3448  0563  3092               	movlw	high (STR_37| (0+32768))
  3449  0564  00A1               	movwf	print_error@top+1
  3450  0565  3024               	movlw	low (STR_68| (0+32768))
  3451  0566  00A2               	movwf	print_error@bottom
  3452  0567  3090               	movlw	high (STR_68| (0+32768))
  3453  0568  2D7F               	goto	L5
  3454  0569                     l4840:	
  3455                           
  3456                           ;Multi_RX_testjig_v1.c: 721: else if(RX_data == 3)
  3457  0569  3003               	movlw	3
  3458  056A  0022               	movlb	2	; select bank2
  3459  056B  0623               	xorwf	main@RX_data^(0+256),w
  3460  056C  1D03               	btfss	3,2
  3461  056D  2D77               	goto	l4844
  3462                           
  3463                           ;Multi_RX_testjig_v1.c: 722: print_error("Test RF", "Error - Decode");
  3464  056E  3012               	movlw	low (STR_37| (0+32768))
  3465  056F  0020               	movlb	0	; select bank0
  3466  0570  00A0               	movwf	print_error@top
  3467  0571  3092               	movlw	high (STR_37| (0+32768))
  3468  0572  00A1               	movwf	print_error@top+1
  3469  0573  30A7               	movlw	low (STR_70| (0+32768))
  3470  0574  00A2               	movwf	print_error@bottom
  3471  0575  3090               	movlw	high (STR_70| (0+32768))
  3472  0576  2D7F               	goto	L5
  3473  0577                     l4844:	
  3474                           
  3475                           ;Multi_RX_testjig_v1.c: 723: else
  3476                           ;Multi_RX_testjig_v1.c: 724: print_error("Comms Error", " 15");
  3477  0577  309A               	movlw	low (STR_35| (0+32768))
  3478  0578  0020               	movlb	0	; select bank0
  3479  0579  00A0               	movwf	print_error@top
  3480  057A  3091               	movlw	high (STR_35| (0+32768))
  3481  057B  00A1               	movwf	print_error@top+1
  3482  057C  3035               	movlw	low (STR_72| (0+32768))
  3483  057D  00A2               	movwf	print_error@bottom
  3484  057E  3092               	movlw	high (STR_72| (0+32768))
  3485  057F                     L5:	
  3486  057F  00A3               	movwf	print_error@bottom+1
  3487  0580  318B  23CD  3180   	fcall	_print_error
  3488  0583                     l4846:	
  3489                           
  3490                           ;Multi_RX_testjig_v1.c: 726: RE0 = 0;
  3491  0583  0020               	movlb	0	; select bank0
  3492  0584  1010               	bcf	16,0	;volatile
  3493  0585                     l335:	
  3494                           
  3495                           ;Multi_RX_testjig_v1.c: 727: }
  3496                           ;Multi_RX_testjig_v1.c: 729: testjig_done(1, device_type);
  3497  0585  0022               	movlb	2	; select bank2
  3498  0586  0822               	movf	main@device_type^(0+256),w
  3499  0587  0020               	movlb	0	; select bank0
  3500  0588  00D3               	movwf	??_main
  3501  0589  0853               	movf	??_main,w
  3502  058A  00A0               	movwf	testjig_done@device_type
  3503  058B  3001               	movlw	1
  3504  058C  3185  259A  3180   	fcall	_testjig_done
  3505                           
  3506                           ;Multi_RX_testjig_v1.c: 739: testjig_done(1, device_type);
  3507  058F  0022               	movlb	2	; select bank2
  3508  0590  0822               	movf	main@device_type^(0+256),w
  3509  0591  0020               	movlb	0	; select bank0
  3510  0592  00D3               	movwf	??_main
  3511  0593  0853               	movf	??_main,w
  3512  0594  00A0               	movwf	testjig_done@device_type
  3513  0595  3001               	movlw	1
  3514  0596  3185  259A         	fcall	_testjig_done
  3515  0598  3180  28A4         	ljmp	start
  3516  059A                     __end_of_main:	
  3517                           
  3518                           	psect	text1
  3519  059A                     __ptext1:	
  3520 ;; *************** function _testjig_done *****************
  3521 ;; Defined at:
  3522 ;;		line 742 in file "Multi_RX_testjig_v1.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  state           1    wreg     unsigned char 
  3525 ;;  device_type     1    0[BANK0 ] unsigned char 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  state           1    3[BANK0 ] unsigned char 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3537 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3539 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3540 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3541 ;;Total ram usage:        4 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    4
  3544 ;; This function calls:
  3545 ;;		_buzz_one
  3546 ;;		_debug_fast_tx
  3547 ;;		_power_supply_set
  3548 ;;		_print_screen
  3549 ;; This function is called by:
  3550 ;;		_main
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           
  3555                           ;psect for function _testjig_done
  3556  059A                     _testjig_done:	
  3557                           
  3558                           ;incstack = 0
  3559                           ; Regs used in _testjig_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3560                           ;testjig_done@state stored from wreg
  3561  059A  0020               	movlb	0	; select bank0
  3562  059B  00A3               	movwf	testjig_done@state
  3563  059C                     l366:	
  3564                           ;Multi_RX_testjig_v1.c: 744: while(1)
  3565                           
  3566                           
  3567                           ;Multi_RX_testjig_v1.c: 745: {
  3568                           ;Multi_RX_testjig_v1.c: 746: power_supply_set(3);
  3569  059C  3003               	movlw	3
  3570  059D  318A  220E  3185   	fcall	_power_supply_set
  3571                           
  3572                           ;Multi_RX_testjig_v1.c: 747: LATA7 = 0;
  3573  05A0  0022               	movlb	2	; select bank2
  3574  05A1  138C               	bcf	12,7	;volatile
  3575                           
  3576                           ;Multi_RX_testjig_v1.c: 748: LATB5 = 0;
  3577  05A2  128D               	bcf	13,5	;volatile
  3578                           
  3579                           ;Multi_RX_testjig_v1.c: 749: LATA6 = 0;
  3580  05A3  130C               	bcf	12,6	;volatile
  3581                           
  3582                           ;Multi_RX_testjig_v1.c: 750: debug_fast_tx(11110);
  3583  05A4  3066               	movlw	102
  3584  05A5  00F2               	movwf	debug_fast_tx@data
  3585  05A6  302B               	movlw	43
  3586  05A7  00F3               	movwf	debug_fast_tx@data+1
  3587  05A8  318A  22C1  3185   	fcall	_debug_fast_tx
  3588                           
  3589                           ;Multi_RX_testjig_v1.c: 751: debug_fast_tx(state);
  3590  05AB  0020               	movlb	0	; select bank0
  3591  05AC  0823               	movf	testjig_done@state,w
  3592  05AD  00A1               	movwf	??_testjig_done
  3593  05AE  01A2               	clrf	??_testjig_done+1
  3594  05AF  0821               	movf	??_testjig_done,w
  3595  05B0  00F2               	movwf	debug_fast_tx@data
  3596  05B1  0822               	movf	??_testjig_done+1,w
  3597  05B2  00F3               	movwf	debug_fast_tx@data+1
  3598  05B3  318A  22C1  3185   	fcall	_debug_fast_tx
  3599                           
  3600                           ;Multi_RX_testjig_v1.c: 752: switch(state)
  3601  05B6  2E69               	goto	l4280
  3602  05B7                     l4234:	
  3603                           ;Multi_RX_testjig_v1.c: 753: {
  3604                           ;Multi_RX_testjig_v1.c: 754: case 1:
  3605                           
  3606                           
  3607                           ;Multi_RX_testjig_v1.c: 755: if(device_type == 0xAA)
  3608  05B7  30AA               	movlw	170
  3609  05B8  0020               	movlb	0	; select bank0
  3610  05B9  0620               	xorwf	testjig_done@device_type,w
  3611  05BA  1D03               	btfss	3,2
  3612  05BB  2DC0               	goto	l4238
  3613                           
  3614                           ;Multi_RX_testjig_v1.c: 756: print_screen("Condo3 Pass", " Remove board");
  3615  05BC  30B2               	movlw	low (STR_73| (0+32768))
  3616  05BD  00F6               	movwf	print_screen@top
  3617  05BE  3091               	movlw	high (STR_73| (0+32768))
  3618  05BF  2DD5               	goto	L9
  3619  05C0                     l4238:	
  3620                           
  3621                           ;Multi_RX_testjig_v1.c: 757: else if(device_type == 0xA1)
  3622  05C0  30A1               	movlw	161
  3623  05C1  0020               	movlb	0	; select bank0
  3624  05C2  0620               	xorwf	testjig_done@device_type,w
  3625  05C3  1D03               	btfss	3,2
  3626  05C4  2DC9               	goto	l4242
  3627                           
  3628                           ;Multi_RX_testjig_v1.c: 758: print_screen("RX3 Pass", " Remove board");
  3629  05C5  30F9               	movlw	low (STR_75| (0+32768))
  3630  05C6  00F6               	movwf	print_screen@top
  3631  05C7  3091               	movlw	high (STR_75| (0+32768))
  3632  05C8  2DD5               	goto	L9
  3633  05C9                     l4242:	
  3634                           
  3635                           ;Multi_RX_testjig_v1.c: 759: else if(device_type == 0xA2)
  3636  05C9  30A2               	movlw	162
  3637  05CA  0020               	movlb	0	; select bank0
  3638  05CB  0620               	xorwf	testjig_done@device_type,w
  3639  05CC  1D03               	btfss	3,2
  3640  05CD  2DD2               	goto	l4246
  3641                           
  3642                           ;Multi_RX_testjig_v1.c: 760: print_screen("Mem_Copier Pass", " Remove board");
  3643  05CE  3088               	movlw	low (STR_77| (0+32768))
  3644  05CF  00F6               	movwf	print_screen@top
  3645  05D0  3090               	movlw	high (STR_77| (0+32768))
  3646  05D1  2DD5               	goto	L9
  3647  05D2                     l4246:	
  3648                           
  3649                           ;Multi_RX_testjig_v1.c: 761: else
  3650                           ;Multi_RX_testjig_v1.c: 762: print_screen("Multi_RX Pass", " Remove board");
  3651  05D2  30FE               	movlw	low (STR_79| (0+32768))
  3652  05D3  00F6               	movwf	print_screen@top
  3653  05D4  3090               	movlw	high (STR_79| (0+32768))
  3654  05D5                     L9:	
  3655  05D5  00F7               	movwf	print_screen@top+1
  3656  05D6  30E2               	movlw	low (STR_74| (0+32768))
  3657  05D7  00F8               	movwf	print_screen@bottom
  3658  05D8  3090               	movlw	high (STR_74| (0+32768))
  3659  05D9  00F9               	movwf	print_screen@bottom+1
  3660  05DA  3189  2147  3185   	fcall	_print_screen
  3661                           
  3662                           ;Multi_RX_testjig_v1.c: 763: debug_fast_tx(11111);
  3663  05DD  3067               	movlw	103
  3664  05DE  00F2               	movwf	debug_fast_tx@data
  3665  05DF  302B               	movlw	43
  3666  05E0  00F3               	movwf	debug_fast_tx@data+1
  3667  05E1  318A  22C1  3185   	fcall	_debug_fast_tx
  3668                           
  3669                           ;Multi_RX_testjig_v1.c: 764: buzz_one(100);
  3670  05E4  3064               	movlw	100
  3671  05E5  00F2               	movwf	buzz_one@time
  3672  05E6  3000               	movlw	0
  3673  05E7  00F3               	movwf	buzz_one@time+1
  3674  05E8  3188  20A9  3185   	fcall	_buzz_one
  3675                           
  3676                           ;Multi_RX_testjig_v1.c: 765: _delay((unsigned long)((200)*(16000000/4000.0)));
  3677  05EB  3005               	movlw	5
  3678  05EC  0020               	movlb	0	; select bank0
  3679  05ED  00A2               	movwf	??_testjig_done+1
  3680  05EE  300F               	movlw	15
  3681  05EF  00A1               	movwf	??_testjig_done
  3682  05F0  30F1               	movlw	241
  3683  05F1                     u6617:	
  3684  05F1  0B89               	decfsz	9,f
  3685  05F2  2DF1               	goto	u6617
  3686  05F3  0BA1               	decfsz	??_testjig_done,f
  3687  05F4  2DF1               	goto	u6617
  3688  05F5  0BA2               	decfsz	??_testjig_done+1,f
  3689  05F6  2DF1               	goto	u6617
  3690                           
  3691                           ;Multi_RX_testjig_v1.c: 766: buzz_one(100);
  3692  05F7  3064               	movlw	100
  3693  05F8  00F2               	movwf	buzz_one@time
  3694  05F9  3000               	movlw	0
  3695  05FA  00F3               	movwf	buzz_one@time+1
  3696  05FB  3188  20A9  3185   	fcall	_buzz_one
  3697  05FE                     l375:	
  3698                           ;Multi_RX_testjig_v1.c: 767: while(RF3 == 0);
  3699                           
  3700  05FE  0025               	movlb	5	; select bank5
  3701  05FF  1D8C               	btfss	12,3	;volatile
  3702  0600  2DFE               	goto	l375
  3703                           
  3704                           ;Multi_RX_testjig_v1.c: 768: _delay((unsigned long)((100)*(16000000/4000.0)));
  3705  0601  3003               	movlw	3
  3706  0602  0020               	movlb	0	; select bank0
  3707  0603  00A2               	movwf	??_testjig_done+1
  3708  0604  3008               	movlw	8
  3709  0605  00A1               	movwf	??_testjig_done
  3710  0606  3077               	movlw	119
  3711  0607                     u6627:	
  3712  0607  0B89               	decfsz	9,f
  3713  0608  2E07               	goto	u6627
  3714  0609  0BA1               	decfsz	??_testjig_done,f
  3715  060A  2E07               	goto	u6627
  3716  060B  0BA2               	decfsz	??_testjig_done+1,f
  3717  060C  2E07               	goto	u6627
  3718  060D  2E63               	goto	L8
  3719  060E                     l4258:	
  3720                           ;Multi_RX_testjig_v1.c: 771: case 2:
  3721                           
  3722                           ;Multi_RX_testjig_v1.c: 770: break;
  3723                           
  3724                           ;Multi_RX_testjig_v1.c: 769: state = 0xFF;
  3725                           
  3726                           
  3727                           ;Multi_RX_testjig_v1.c: 772: debug_fast_tx(11112);
  3728  060E  3068               	movlw	104
  3729  060F  00F2               	movwf	debug_fast_tx@data
  3730  0610  302B               	movlw	43
  3731  0611  00F3               	movwf	debug_fast_tx@data+1
  3732  0612  318A  22C1  3185   	fcall	_debug_fast_tx
  3733                           
  3734                           ;Multi_RX_testjig_v1.c: 774: if(device_type == 0xAA)
  3735  0615  30AA               	movlw	170
  3736  0616  0020               	movlb	0	; select bank0
  3737  0617  0620               	xorwf	testjig_done@device_type,w
  3738  0618  1D03               	btfss	3,2
  3739  0619  2E1E               	goto	l4264
  3740                           
  3741                           ;Multi_RX_testjig_v1.c: 775: print_screen("Condo3 ", " Testjig");
  3742  061A  3002               	movlw	low (STR_81| (0+32768))
  3743  061B  00F6               	movwf	print_screen@top
  3744  061C  3092               	movlw	high (STR_81| (0+32768))
  3745  061D  2E2F               	goto	L14
  3746  061E                     l4264:	
  3747                           
  3748                           ;Multi_RX_testjig_v1.c: 776: else if(device_type == 0xA1)
  3749  061E  30A1               	movlw	161
  3750  061F  0020               	movlb	0	; select bank0
  3751  0620  0620               	xorwf	testjig_done@device_type,w
  3752  0621  1D03               	btfss	3,2
  3753  0622  2E27               	goto	l4268
  3754                           
  3755                           ;Multi_RX_testjig_v1.c: 777: print_screen("RX3 ", " Testjig");
  3756  0623  3020               	movlw	low (STR_83| (0+32768))
  3757  0624  00F6               	movwf	print_screen@top
  3758  0625  3092               	movlw	high (STR_83| (0+32768))
  3759  0626  2E2F               	goto	L14
  3760  0627                     l4268:	
  3761                           
  3762                           ;Multi_RX_testjig_v1.c: 778: else if(device_type == 0xA2)
  3763  0627  30A2               	movlw	162
  3764  0628  0020               	movlb	0	; select bank0
  3765  0629  0620               	xorwf	testjig_done@device_type,w
  3766  062A  1D03               	btfss	3,2
  3767  062B  2E34               	goto	l4272
  3768                           
  3769                           ;Multi_RX_testjig_v1.c: 779: print_screen("Mem_Copier Pass", " Testjig");
  3770  062C  3088               	movlw	low (STR_77| (0+32768))
  3771  062D  00F6               	movwf	print_screen@top
  3772  062E  3090               	movlw	high (STR_77| (0+32768))
  3773  062F                     L14:	
  3774  062F  00F7               	movwf	print_screen@top+1
  3775  0630  3085               	movlw	low ((STR_93+3)| (0+32768))
  3776  0631  00F8               	movwf	print_screen@bottom
  3777  0632  3091               	movlw	high ((STR_93+3)| (0+32768))
  3778  0633  2E3B               	goto	L10
  3779  0634                     l4272:	
  3780                           
  3781                           ;Multi_RX_testjig_v1.c: 780: else
  3782                           ;Multi_RX_testjig_v1.c: 781: print_screen("Multi_RX", "Testjig");
  3783  0634  30E7               	movlw	low (STR_1| (0+32768))
  3784  0635  00F6               	movwf	print_screen@top
  3785  0636  3091               	movlw	high (STR_1| (0+32768))
  3786  0637  00F7               	movwf	print_screen@top+1
  3787  0638  3086               	movlw	low ((STR_93+4)| (0+32768))
  3788  0639  00F8               	movwf	print_screen@bottom
  3789  063A  3091               	movlw	high ((STR_93+4)| (0+32768))
  3790  063B                     L10:	
  3791  063B  00F9               	movwf	print_screen@bottom+1
  3792  063C  3189  2147  3185   	fcall	_print_screen
  3793                           
  3794                           ;Multi_RX_testjig_v1.c: 782: _delay((unsigned long)((2000)*(16000000/4000.0)));
  3795  063F  3029               	movlw	41
  3796  0640  0020               	movlb	0	; select bank0
  3797  0641  00A2               	movwf	??_testjig_done+1
  3798  0642  3096               	movlw	150
  3799  0643  00A1               	movwf	??_testjig_done
  3800  0644  307F               	movlw	127
  3801  0645                     u6637:	
  3802  0645  0B89               	decfsz	9,f
  3803  0646  2E45               	goto	u6637
  3804  0647  0BA1               	decfsz	??_testjig_done,f
  3805  0648  2E45               	goto	u6637
  3806  0649  0BA2               	decfsz	??_testjig_done+1,f
  3807  064A  2E45               	goto	u6637
  3808                           
  3809                           ;Multi_RX_testjig_v1.c: 783: print_screen("Testjig Power-up", "wait...");
  3810  064B  3035               	movlw	low (STR_89| (0+32768))
  3811  064C  00F6               	movwf	print_screen@top
  3812  064D  3090               	movlw	high (STR_89| (0+32768))
  3813  064E  00F7               	movwf	print_screen@top+1
  3814  064F  300A               	movlw	low (STR_90| (0+32768))
  3815  0650  00F8               	movwf	print_screen@bottom
  3816  0651  3092               	movlw	high (STR_90| (0+32768))
  3817  0652  00F9               	movwf	print_screen@bottom+1
  3818  0653  3189  2147  3185   	fcall	_print_screen
  3819                           
  3820                           ;Multi_RX_testjig_v1.c: 784: _delay((unsigned long)((3000)*(16000000/4000.0)));
  3821  0656  303D               	movlw	61
  3822  0657  0020               	movlb	0	; select bank0
  3823  0658  00A2               	movwf	??_testjig_done+1
  3824  0659  30E1               	movlw	225
  3825  065A  00A1               	movwf	??_testjig_done
  3826  065B  303F               	movlw	63
  3827  065C                     u6647:	
  3828  065C  0B89               	decfsz	9,f
  3829  065D  2E5C               	goto	u6647
  3830  065E  0BA1               	decfsz	??_testjig_done,f
  3831  065F  2E5C               	goto	u6647
  3832  0660  0BA2               	decfsz	??_testjig_done+1,f
  3833  0661  2E5C               	goto	u6647
  3834  0662  3200               	nop2
  3835  0663                     L8:	
  3836                           
  3837                           ;Multi_RX_testjig_v1.c: 785: state = 0xFF;
  3838  0663  30FF               	movlw	255
  3839  0664  0020               	movlb	0	; select bank0
  3840  0665  00A1               	movwf	??_testjig_done
  3841  0666  0821               	movf	??_testjig_done,w
  3842  0667  00A3               	movwf	testjig_done@state
  3843                           
  3844                           ;Multi_RX_testjig_v1.c: 787: }
  3845                           
  3846                           ;Multi_RX_testjig_v1.c: 786: break;
  3847  0668  2E72               	goto	l4282
  3848  0669                     l4280:	
  3849  0669  0020               	movlb	0	; select bank0
  3850  066A  0823               	movf	testjig_done@state,w
  3851                           
  3852                           ; Switch size 1, requested type "space"
  3853                           ; Number of cases is 2, Range of values is 1 to 2
  3854                           ; switch strategies available:
  3855                           ; Name         Instructions Cycles
  3856                           ; simple_byte            7     4 (average)
  3857                           ; direct_byte           13     9 (fixed)
  3858                           ; jumptable            263     9 (fixed)
  3859                           ;	Chosen strategy is simple_byte
  3860  066B  3A01               	xorlw	1	; case 1
  3861  066C  1903               	skipnz
  3862  066D  2DB7               	goto	l4234
  3863  066E  3A03               	xorlw	3	; case 2
  3864  066F  1903               	skipnz
  3865  0670  2E0E               	goto	l4258
  3866  0671  2E72               	goto	l4282
  3867  0672                     l4282:	
  3868                           
  3869                           ;Multi_RX_testjig_v1.c: 788: debug_fast_tx(11113);
  3870  0672  3069               	movlw	105
  3871  0673  00F2               	movwf	debug_fast_tx@data
  3872  0674  302B               	movlw	43
  3873  0675  00F3               	movwf	debug_fast_tx@data+1
  3874  0676  318A  22C1  3185   	fcall	_debug_fast_tx
  3875                           
  3876                           ;Multi_RX_testjig_v1.c: 789: if(device_type == 0xAA)
  3877  0679  30AA               	movlw	170
  3878  067A  0020               	movlb	0	; select bank0
  3879  067B  0620               	xorwf	testjig_done@device_type,w
  3880  067C  1D03               	btfss	3,2
  3881  067D  2E82               	goto	l4288
  3882                           
  3883                           ;Multi_RX_testjig_v1.c: 790: print_screen("Condo3 Testjig", "-> Insert PCB");
  3884  067E  30B6               	movlw	low (STR_91| (0+32768))
  3885  067F  00F6               	movwf	print_screen@top
  3886  0680  3090               	movlw	high (STR_91| (0+32768))
  3887  0681  2E97               	goto	L11
  3888  0682                     l4288:	
  3889                           
  3890                           ;Multi_RX_testjig_v1.c: 791: else if(device_type == 0xA1)
  3891  0682  30A1               	movlw	161
  3892  0683  0020               	movlb	0	; select bank0
  3893  0684  0620               	xorwf	testjig_done@device_type,w
  3894  0685  1D03               	btfss	3,2
  3895  0686  2E8B               	goto	l4292
  3896                           
  3897                           ;Multi_RX_testjig_v1.c: 792: print_screen("RX3 Testjig", "-> Insert PCB");
  3898  0687  3082               	movlw	low (STR_93| (0+32768))
  3899  0688  00F6               	movwf	print_screen@top
  3900  0689  3091               	movlw	high (STR_93| (0+32768))
  3901  068A  2E97               	goto	L11
  3902  068B                     l4292:	
  3903                           
  3904                           ;Multi_RX_testjig_v1.c: 793: else if(device_type == 0xA2)
  3905  068B  30A2               	movlw	162
  3906  068C  0020               	movlb	0	; select bank0
  3907  068D  0620               	xorwf	testjig_done@device_type,w
  3908  068E  1D03               	btfss	3,2
  3909  068F  2E94               	goto	l4296
  3910                           
  3911                           ;Multi_RX_testjig_v1.c: 794: print_screen("Mem_Copier Pass", "-> Insert PCB");
  3912  0690  3088               	movlw	low (STR_77| (0+32768))
  3913  0691  00F6               	movwf	print_screen@top
  3914  0692  3090               	movlw	high (STR_77| (0+32768))
  3915  0693  2E97               	goto	L11
  3916  0694                     l4296:	
  3917                           
  3918                           ;Multi_RX_testjig_v1.c: 795: else
  3919                           ;Multi_RX_testjig_v1.c: 796: print_screen("Multi_RX Testjig", "-> Insert PCB");
  3920  0694  3013               	movlw	low (STR_97| (0+32768))
  3921  0695  00F6               	movwf	print_screen@top
  3922  0696  3090               	movlw	high (STR_97| (0+32768))
  3923  0697                     L11:	
  3924  0697  00F7               	movwf	print_screen@top+1
  3925  0698  30D4               	movlw	low (STR_4| (0+32768))
  3926  0699  00F8               	movwf	print_screen@bottom
  3927  069A  3090               	movlw	high (STR_4| (0+32768))
  3928  069B  00F9               	movwf	print_screen@bottom+1
  3929  069C  3189  2147  3185   	fcall	_print_screen
  3930  069F                     l392:	
  3931                           ;Multi_RX_testjig_v1.c: 797: while(RF3 == 1);
  3932                           
  3933  069F  0025               	movlb	5	; select bank5
  3934  06A0  198C               	btfsc	12,3	;volatile
  3935  06A1  2E9F               	goto	l392
  3936                           
  3937                           ;Multi_RX_testjig_v1.c: 798: _delay((unsigned long)((100)*(16000000/4000.0)));
  3938  06A2  3003               	movlw	3
  3939  06A3  0020               	movlb	0	; select bank0
  3940  06A4  00A2               	movwf	??_testjig_done+1
  3941  06A5  3008               	movlw	8
  3942  06A6  00A1               	movwf	??_testjig_done
  3943  06A7  3077               	movlw	119
  3944  06A8                     u6657:	
  3945  06A8  0B89               	decfsz	9,f
  3946  06A9  2EA8               	goto	u6657
  3947  06AA  0BA1               	decfsz	??_testjig_done,f
  3948  06AB  2EA8               	goto	u6657
  3949  06AC  0BA2               	decfsz	??_testjig_done+1,f
  3950  06AD  2EA8               	goto	u6657
  3951                           
  3952                           ;Multi_RX_testjig_v1.c: 799: if(device_type == 0xAA)
  3953  06AE  30AA               	movlw	170
  3954  06AF  0020               	movlb	0	; select bank0
  3955  06B0  0620               	xorwf	testjig_done@device_type,w
  3956  06B1  1D03               	btfss	3,2
  3957  06B2  2EB7               	goto	l4304
  3958                           
  3959                           ;Multi_RX_testjig_v1.c: 800: print_screen("Condo3 Testjig", " Press START");
  3960  06B3  30B6               	movlw	low (STR_91| (0+32768))
  3961  06B4  00F6               	movwf	print_screen@top
  3962  06B5  3090               	movlw	high (STR_91| (0+32768))
  3963  06B6  2ECC               	goto	L12
  3964  06B7                     l4304:	
  3965                           
  3966                           ;Multi_RX_testjig_v1.c: 801: else if(device_type == 0xA1)
  3967  06B7  30A1               	movlw	161
  3968  06B8  0020               	movlb	0	; select bank0
  3969  06B9  0620               	xorwf	testjig_done@device_type,w
  3970  06BA  1D03               	btfss	3,2
  3971  06BB  2EC0               	goto	l4308
  3972                           
  3973                           ;Multi_RX_testjig_v1.c: 802: print_screen("RX3 Testjig", " Press START");
  3974  06BC  3082               	movlw	low (STR_93| (0+32768))
  3975  06BD  00F6               	movwf	print_screen@top
  3976  06BE  3091               	movlw	high (STR_93| (0+32768))
  3977  06BF  2ECC               	goto	L12
  3978  06C0                     l4308:	
  3979                           
  3980                           ;Multi_RX_testjig_v1.c: 803: else if(device_type == 0xA2)
  3981  06C0  30A2               	movlw	162
  3982  06C1  0020               	movlb	0	; select bank0
  3983  06C2  0620               	xorwf	testjig_done@device_type,w
  3984  06C3  1D03               	btfss	3,2
  3985  06C4  2EC9               	goto	l4312
  3986                           
  3987                           ;Multi_RX_testjig_v1.c: 804: print_screen("Mem_Copier Pass", " Press START");
  3988  06C5  3088               	movlw	low (STR_77| (0+32768))
  3989  06C6  00F6               	movwf	print_screen@top
  3990  06C7  3090               	movlw	high (STR_77| (0+32768))
  3991  06C8  2ECC               	goto	L12
  3992  06C9                     l4312:	
  3993                           
  3994                           ;Multi_RX_testjig_v1.c: 805: else
  3995                           ;Multi_RX_testjig_v1.c: 806: print_screen("Multi_RX Testjig", " Press START");
  3996  06C9  3013               	movlw	low (STR_97| (0+32768))
  3997  06CA  00F6               	movwf	print_screen@top
  3998  06CB  3090               	movlw	high (STR_97| (0+32768))
  3999  06CC                     L12:	
  4000  06CC  00F7               	movwf	print_screen@top+1
  4001  06CD  304F               	movlw	low (STR_100| (0+32768))
  4002  06CE  00F8               	movwf	print_screen@bottom
  4003  06CF  3091               	movlw	high (STR_100| (0+32768))
  4004  06D0  00F9               	movwf	print_screen@bottom+1
  4005  06D1  3189  2147  3185   	fcall	_print_screen
  4006  06D4                     l401:	
  4007                           ;Multi_RX_testjig_v1.c: 807: while(RF3 == 0);
  4008                           
  4009  06D4  0025               	movlb	5	; select bank5
  4010  06D5  1D8C               	btfss	12,3	;volatile
  4011  06D6  2ED4               	goto	l401
  4012                           
  4013                           ;Multi_RX_testjig_v1.c: 808: _delay((unsigned long)((100)*(16000000/4000.0)));
  4014  06D7  3003               	movlw	3
  4015  06D8  0020               	movlb	0	; select bank0
  4016  06D9  00A2               	movwf	??_testjig_done+1
  4017  06DA  3008               	movlw	8
  4018  06DB  00A1               	movwf	??_testjig_done
  4019  06DC  3077               	movlw	119
  4020  06DD                     u6667:	
  4021  06DD  0B89               	decfsz	9,f
  4022  06DE  2EDD               	goto	u6667
  4023  06DF  0BA1               	decfsz	??_testjig_done,f
  4024  06E0  2EDD               	goto	u6667
  4025  06E1  0BA2               	decfsz	??_testjig_done+1,f
  4026  06E2  2EDD               	goto	u6667
  4027  06E3  0020               	movlb	0	; select bank0
  4028  06E4  2D9C               	goto	l366
  4029  06E5                     __end_of_testjig_done:	
  4030                           
  4031                           	psect	text2
  4032  0BCD                     __ptext2:	
  4033 ;; *************** function _print_error *****************
  4034 ;; Defined at:
  4035 ;;		line 1285 in file "Multi_RX_testjig_v1.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  top             2    0[BANK0 ] PTR const unsigned char 
  4038 ;;		 -> STR_71(12), STR_69(8), STR_67(8), STR_59(13), 
  4039 ;;		 -> STR_57(13), STR_55(12), STR_53(12), STR_47(12), 
  4040 ;;		 -> STR_45(12), STR_43(12), STR_41(12), STR_39(12), 
  4041 ;;		 -> STR_35(12), STR_25(14), STR_23(11), STR_21(15), 
  4042 ;;		 -> STR_19(15), STR_17(14), STR_15(14), STR_13(14), 
  4043 ;;		 -> STR_11(11), STR_9(14), STR_7(14), STR_3(9), 
  4044 ;;  bottom          2    2[BANK0 ] PTR const unsigned char 
  4045 ;;		 -> STR_72(4), STR_70(15), STR_68(17), STR_60(13), 
  4046 ;;		 -> STR_58(14), STR_56(4), STR_54(4), STR_48(13), 
  4047 ;;		 -> STR_46(16), STR_44(14), STR_42(4), STR_40(4), 
  4048 ;;		 -> STR_36(3), STR_26(12), STR_24(11), STR_22(13), 
  4049 ;;		 -> STR_20(13), STR_18(13), STR_16(13), STR_14(12), 
  4050 ;;		 -> STR_12(11), STR_10(13), STR_8(13), STR_4(14), 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;		None
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      void 
  4055 ;; Registers used:
  4056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4062 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4064 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4065 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4066 ;;Total ram usage:        6 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; Hardware stack levels required when called:    4
  4069 ;; This function calls:
  4070 ;;		_buzz_one
  4071 ;;		_clear_lcd
  4072 ;;		_debug_fast_tx
  4073 ;;		_i2c_Write_string
  4074 ;;		_i2c_first_line
  4075 ;;		_i2c_second_line
  4076 ;;		_power_supply_set
  4077 ;;		_print_screen
  4078 ;; This function is called by:
  4079 ;;		_main
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           
  4084                           ;psect for function _print_error
  4085  0BCD                     _print_error:	
  4086                           
  4087                           ;Multi_RX_testjig_v1.c: 1287: power_supply_set(3);
  4088                           
  4089                           ;incstack = 0
  4090                           ; Regs used in _print_error: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4091  0BCD  3003               	movlw	3
  4092  0BCE  318A  220E  318B   	fcall	_power_supply_set
  4093                           
  4094                           ;Multi_RX_testjig_v1.c: 1288: LATA7 = 0;
  4095  0BD1  0022               	movlb	2	; select bank2
  4096  0BD2  138C               	bcf	12,7	;volatile
  4097                           
  4098                           ;Multi_RX_testjig_v1.c: 1289: LATB5 = 0;
  4099  0BD3  128D               	bcf	13,5	;volatile
  4100                           
  4101                           ;Multi_RX_testjig_v1.c: 1290: LATA6 = 0;
  4102  0BD4  130C               	bcf	12,6	;volatile
  4103                           
  4104                           ;Multi_RX_testjig_v1.c: 1291: RE0 = 0;
  4105  0BD5  0020               	movlb	0	; select bank0
  4106  0BD6  1010               	bcf	16,0	;volatile
  4107                           
  4108                           ;Multi_RX_testjig_v1.c: 1292: debug_fast_tx(12345);
  4109  0BD7  3039               	movlw	57
  4110  0BD8  00F2               	movwf	debug_fast_tx@data
  4111  0BD9  3030               	movlw	48
  4112  0BDA  00F3               	movwf	debug_fast_tx@data+1
  4113  0BDB  318A  22C1  318B   	fcall	_debug_fast_tx
  4114                           
  4115                           ;Multi_RX_testjig_v1.c: 1293: buzz_one(1000);
  4116  0BDE  30E8               	movlw	232
  4117  0BDF  00F2               	movwf	buzz_one@time
  4118  0BE0  3003               	movlw	3
  4119  0BE1  00F3               	movwf	buzz_one@time+1
  4120  0BE2  3188  20A9  318B   	fcall	_buzz_one
  4121  0BE5                     l4330:	
  4122                           ;Multi_RX_testjig_v1.c: 1294: while(1)
  4123                           
  4124                           
  4125                           ;Multi_RX_testjig_v1.c: 1295: {
  4126                           ;Multi_RX_testjig_v1.c: 1296: clear_lcd();
  4127  0BE5  3189  2176  318B   	fcall	_clear_lcd
  4128                           
  4129                           ;Multi_RX_testjig_v1.c: 1297: i2c_first_line();
  4130  0BE8  3189  211D  318B   	fcall	_i2c_first_line
  4131                           
  4132                           ;Multi_RX_testjig_v1.c: 1298: i2c_Write_string(top);
  4133  0BEB  0020               	movlb	0	; select bank0
  4134  0BEC  0821               	movf	print_error@top+1,w
  4135  0BED  00F4               	movwf	i2c_Write_string@data+1
  4136  0BEE  0820               	movf	print_error@top,w
  4137  0BEF  00F3               	movwf	i2c_Write_string@data
  4138  0BF0  3189  21C7  318B   	fcall	_i2c_Write_string
  4139                           
  4140                           ;Multi_RX_testjig_v1.c: 1299: i2c_second_line();
  4141  0BF3  3189  2132  318B   	fcall	_i2c_second_line
  4142                           
  4143                           ;Multi_RX_testjig_v1.c: 1300: i2c_Write_string(bottom);
  4144  0BF6  0020               	movlb	0	; select bank0
  4145  0BF7  0823               	movf	print_error@bottom+1,w
  4146  0BF8  00F4               	movwf	i2c_Write_string@data+1
  4147  0BF9  0822               	movf	print_error@bottom,w
  4148  0BFA  00F3               	movwf	i2c_Write_string@data
  4149  0BFB  3189  21C7  318B   	fcall	_i2c_Write_string
  4150                           
  4151                           ;Multi_RX_testjig_v1.c: 1301: _delay((unsigned long)((2000)*(16000000/4000.0)));
  4152  0BFE  3029               	movlw	41
  4153  0BFF  0020               	movlb	0	; select bank0
  4154  0C00  00A5               	movwf	??_print_error+1
  4155  0C01  3096               	movlw	150
  4156  0C02  00A4               	movwf	??_print_error
  4157  0C03  307F               	movlw	127
  4158  0C04                     u6677:	
  4159  0C04  0B89               	decfsz	9,f
  4160  0C05  2C04               	goto	u6677
  4161  0C06  0BA4               	decfsz	??_print_error,f
  4162  0C07  2C04               	goto	u6677
  4163  0C08  0BA5               	decfsz	??_print_error+1,f
  4164  0C09  2C04               	goto	u6677
  4165                           
  4166                           ;Multi_RX_testjig_v1.c: 1302: print_screen("Press START", " to restart test");
  4167  0C0A  3050               	movlw	low ((STR_100+1)| (0+32768))
  4168  0C0B  00F6               	movwf	print_screen@top
  4169  0C0C  3091               	movlw	high ((STR_100+1)| (0+32768))
  4170  0C0D  00F7               	movwf	print_screen@top+1
  4171  0C0E  3057               	movlw	low (STR_108| (0+32768))
  4172  0C0F  00F8               	movwf	print_screen@bottom
  4173  0C10  3090               	movlw	high (STR_108| (0+32768))
  4174  0C11  00F9               	movwf	print_screen@bottom+1
  4175  0C12  3189  2147  318B   	fcall	_print_screen
  4176                           
  4177                           ;Multi_RX_testjig_v1.c: 1304: _delay((unsigned long)((1200)*(16000000/4000.0)));
  4178  0C15  3019               	movlw	25
  4179  0C16  0020               	movlb	0	; select bank0
  4180  0C17  00A5               	movwf	??_print_error+1
  4181  0C18  305A               	movlw	90
  4182  0C19  00A4               	movwf	??_print_error
  4183  0C1A  30B1               	movlw	177
  4184  0C1B                     u6687:	
  4185  0C1B  0B89               	decfsz	9,f
  4186  0C1C  2C1B               	goto	u6687
  4187  0C1D  0BA4               	decfsz	??_print_error,f
  4188  0C1E  2C1B               	goto	u6687
  4189  0C1F  0BA5               	decfsz	??_print_error+1,f
  4190  0C20  2C1B               	goto	u6687
  4191  0C21  3200               	nop2
  4192  0C22  2BE5               	goto	l4330
  4193  0C23                     __end_of_print_error:	
  4194                           
  4195                           	psect	text3
  4196  0947                     __ptext3:	
  4197 ;; *************** function _print_screen *****************
  4198 ;; Defined at:
  4199 ;;		line 1308 in file "Multi_RX_testjig_v1.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;  top             2    6[COMMON] PTR const unsigned char 
  4202 ;;		 -> STR_107(12), STR_105(17), STR_103(16), STR_101(12), 
  4203 ;;		 -> STR_99(15), STR_97(17), STR_95(16), STR_93(12), 
  4204 ;;		 -> STR_91(15), STR_89(17), STR_87(9), STR_85(16), 
  4205 ;;		 -> STR_83(5), STR_81(8), STR_79(14), STR_77(16), 
  4206 ;;		 -> STR_75(9), STR_73(12), STR_65(8), STR_63(8), 
  4207 ;;		 -> STR_61(8), STR_51(8), STR_49(8), STR_37(8), 
  4208 ;;		 -> STR_33(13), STR_31(19), STR_29(12), STR_27(19), 
  4209 ;;		 -> STR_5(15), STR_1(9), 
  4210 ;;  bottom          2    8[COMMON] PTR const unsigned char 
  4211 ;;		 -> STR_108(17), STR_106(13), STR_104(13), STR_102(13), 
  4212 ;;		 -> STR_100(13), STR_98(14), STR_96(14), STR_94(14), 
  4213 ;;		 -> STR_92(14), STR_90(8), STR_88(8), STR_86(9), 
  4214 ;;		 -> STR_84(9), STR_82(9), STR_80(14), STR_78(14), 
  4215 ;;		 -> STR_76(14), STR_74(14), STR_66(16), STR_64(7), 
  4216 ;;		 -> STR_62(10), STR_52(5), STR_50(9), STR_38(4), 
  4217 ;;		 -> STR_34(6), STR_32(9), STR_30(13), STR_28(1), 
  4218 ;;		 -> STR_6(1), STR_2(17), 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;		None
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  1    wreg      void 
  4223 ;; Registers used:
  4224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4234 ;;Total ram usage:        4 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; Hardware stack levels required when called:    3
  4237 ;; This function calls:
  4238 ;;		_clear_lcd
  4239 ;;		_i2c_Write_string
  4240 ;;		_i2c_first_line
  4241 ;;		_i2c_second_line
  4242 ;; This function is called by:
  4243 ;;		_main
  4244 ;;		_testjig_done
  4245 ;;		_print_error
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           
  4250                           ;psect for function _print_screen
  4251  0947                     _print_screen:	
  4252                           
  4253                           ;Multi_RX_testjig_v1.c: 1310: clear_lcd();
  4254                           
  4255                           ;incstack = 0
  4256                           ; Regs used in _print_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4257  0947  3189  2176  3189   	fcall	_clear_lcd
  4258                           
  4259                           ;Multi_RX_testjig_v1.c: 1311: i2c_first_line();
  4260  094A  3189  211D  3189   	fcall	_i2c_first_line
  4261                           
  4262                           ;Multi_RX_testjig_v1.c: 1312: i2c_Write_string(top);
  4263  094D  0877               	movf	print_screen@top+1,w
  4264  094E  00F4               	movwf	i2c_Write_string@data+1
  4265  094F  0876               	movf	print_screen@top,w
  4266  0950  00F3               	movwf	i2c_Write_string@data
  4267  0951  3189  21C7  3189   	fcall	_i2c_Write_string
  4268                           
  4269                           ;Multi_RX_testjig_v1.c: 1313: i2c_second_line();
  4270  0954  3189  2132  3189   	fcall	_i2c_second_line
  4271                           
  4272                           ;Multi_RX_testjig_v1.c: 1314: i2c_Write_string(bottom);
  4273  0957  0879               	movf	print_screen@bottom+1,w
  4274  0958  00F4               	movwf	i2c_Write_string@data+1
  4275  0959  0878               	movf	print_screen@bottom,w
  4276  095A  00F3               	movwf	i2c_Write_string@data
  4277  095B  3189  21C7         	fcall	_i2c_Write_string
  4278  095D  0008               	return
  4279  095E                     __end_of_print_screen:	
  4280                           
  4281                           	psect	text4
  4282  0932                     __ptext4:	
  4283 ;; *************** function _i2c_second_line *****************
  4284 ;; Defined at:
  4285 ;;		line 933 in file "Multi_RX_testjig_v1.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      void 
  4292 ;; Registers used:
  4293 ;;		wreg, status,2, status,0, pclath, cstack
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4303 ;;Total ram usage:        0 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; Hardware stack levels required when called:    2
  4306 ;; This function calls:
  4307 ;;		_i2c_Start
  4308 ;;		_i2c_Stop
  4309 ;;		_i2c_Write
  4310 ;; This function is called by:
  4311 ;;		_print_error
  4312 ;;		_print_screen
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           
  4317                           ;psect for function _i2c_second_line
  4318  0932                     _i2c_second_line:	
  4319                           
  4320                           ;Multi_RX_testjig_v1.c: 935: i2c_Start();
  4321                           
  4322                           ;incstack = 0
  4323                           ; Regs used in _i2c_second_line: [wreg+status,2+status,0+pclath+cstack]
  4324  0932  3188  208C  3189   	fcall	_i2c_Start
  4325                           
  4326                           ;Multi_RX_testjig_v1.c: 936: i2c_Write(0x7C);
  4327  0935  307C               	movlw	124
  4328  0936  3188  20B1  3189   	fcall	_i2c_Write
  4329                           
  4330                           ;Multi_RX_testjig_v1.c: 937: i2c_Write(0x00);
  4331  0939  3000               	movlw	0
  4332  093A  3188  20B1  3189   	fcall	_i2c_Write
  4333                           
  4334                           ;Multi_RX_testjig_v1.c: 938: i2c_Write(0xC0);
  4335  093D  30C0               	movlw	192
  4336  093E  3188  20B1  3189   	fcall	_i2c_Write
  4337                           
  4338                           ;Multi_RX_testjig_v1.c: 939: _delay((unsigned long)((27)*(16000000/4000000.0)));
  4339  0941  3024               	movlw	36
  4340  0942                     u6697:	
  4341  0942  0B89               	decfsz	9,f
  4342  0943  2942               	goto	u6697
  4343                           
  4344                           ;Multi_RX_testjig_v1.c: 940: i2c_Stop();
  4345  0944  3188  2091         	fcall	_i2c_Stop
  4346  0946  0008               	return
  4347  0947                     __end_of_i2c_second_line:	
  4348                           
  4349                           	psect	text5
  4350  091D                     __ptext5:	
  4351 ;; *************** function _i2c_first_line *****************
  4352 ;; Defined at:
  4353 ;;		line 923 in file "Multi_RX_testjig_v1.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, status,2, status,0, pclath, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4371 ;;Total ram usage:        0 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    2
  4374 ;; This function calls:
  4375 ;;		_i2c_Start
  4376 ;;		_i2c_Stop
  4377 ;;		_i2c_Write
  4378 ;; This function is called by:
  4379 ;;		_print_error
  4380 ;;		_print_screen
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           
  4385                           ;psect for function _i2c_first_line
  4386  091D                     _i2c_first_line:	
  4387                           
  4388                           ;Multi_RX_testjig_v1.c: 925: i2c_Start();
  4389                           
  4390                           ;incstack = 0
  4391                           ; Regs used in _i2c_first_line: [wreg+status,2+status,0+pclath+cstack]
  4392  091D  3188  208C  3189   	fcall	_i2c_Start
  4393                           
  4394                           ;Multi_RX_testjig_v1.c: 926: i2c_Write(0x7C);
  4395  0920  307C               	movlw	124
  4396  0921  3188  20B1  3189   	fcall	_i2c_Write
  4397                           
  4398                           ;Multi_RX_testjig_v1.c: 927: i2c_Write(0x00);
  4399  0924  3000               	movlw	0
  4400  0925  3188  20B1  3189   	fcall	_i2c_Write
  4401                           
  4402                           ;Multi_RX_testjig_v1.c: 928: i2c_Write(0x80);
  4403  0928  3080               	movlw	128
  4404  0929  3188  20B1  3189   	fcall	_i2c_Write
  4405                           
  4406                           ;Multi_RX_testjig_v1.c: 929: _delay((unsigned long)((27)*(16000000/4000000.0)));
  4407  092C  3024               	movlw	36
  4408  092D                     u6707:	
  4409  092D  0B89               	decfsz	9,f
  4410  092E  292D               	goto	u6707
  4411                           
  4412                           ;Multi_RX_testjig_v1.c: 930: i2c_Stop();
  4413  092F  3188  2091         	fcall	_i2c_Stop
  4414  0931  0008               	return
  4415  0932                     __end_of_i2c_first_line:	
  4416                           
  4417                           	psect	text6
  4418  09C7                     __ptext6:	
  4419 ;; *************** function _i2c_Write_string *****************
  4420 ;; Defined at:
  4421 ;;		line 845 in file "Multi_RX_testjig_v1.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  data            2    3[COMMON] PTR const unsigned char 
  4424 ;;		 -> STR_108(17), STR_107(12), STR_106(13), STR_105(17), 
  4425 ;;		 -> STR_104(13), STR_103(16), STR_102(13), STR_101(12), 
  4426 ;;		 -> STR_100(13), STR_99(15), STR_98(14), STR_97(17), 
  4427 ;;		 -> STR_96(14), STR_95(16), STR_94(14), STR_93(12), 
  4428 ;;		 -> STR_92(14), STR_91(15), STR_90(8), STR_89(17), 
  4429 ;;		 -> STR_88(8), STR_87(9), STR_86(9), STR_85(16), 
  4430 ;;		 -> STR_84(9), STR_83(5), STR_82(9), STR_81(8), 
  4431 ;;		 -> STR_80(14), STR_79(14), STR_78(14), STR_77(16), 
  4432 ;;		 -> STR_76(14), STR_75(9), STR_74(14), STR_73(12), 
  4433 ;;		 -> STR_72(4), STR_71(12), STR_70(15), STR_69(8), 
  4434 ;;		 -> STR_68(17), STR_67(8), STR_66(16), STR_65(8), 
  4435 ;;		 -> STR_64(7), STR_63(8), STR_62(10), STR_61(8), 
  4436 ;;		 -> STR_60(13), STR_59(13), STR_58(14), STR_57(13), 
  4437 ;;		 -> STR_56(4), STR_55(12), STR_54(4), STR_53(12), 
  4438 ;;		 -> STR_52(5), STR_51(8), STR_50(9), STR_49(8), 
  4439 ;;		 -> STR_48(13), STR_47(12), STR_46(16), STR_45(12), 
  4440 ;;		 -> STR_44(14), STR_43(12), STR_42(4), STR_41(12), 
  4441 ;;		 -> STR_40(4), STR_39(12), STR_38(4), STR_37(8), 
  4442 ;;		 -> STR_36(3), STR_35(12), STR_34(6), STR_33(13), 
  4443 ;;		 -> STR_32(9), STR_31(19), STR_30(13), STR_29(12), 
  4444 ;;		 -> STR_28(1), STR_27(19), STR_26(12), STR_25(14), 
  4445 ;;		 -> STR_24(11), STR_23(11), STR_22(13), STR_21(15), 
  4446 ;;		 -> STR_20(13), STR_19(15), STR_18(13), STR_17(14), 
  4447 ;;		 -> STR_16(13), STR_15(14), STR_14(12), STR_13(14), 
  4448 ;;		 -> STR_12(11), STR_11(11), STR_10(13), STR_9(14), 
  4449 ;;		 -> STR_8(13), STR_7(14), STR_6(1), STR_5(15), 
  4450 ;;		 -> STR_4(14), STR_3(9), STR_2(17), STR_1(9), 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4464 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4465 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4466 ;;Total ram usage:        3 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    2
  4469 ;; This function calls:
  4470 ;;		_i2c_Start
  4471 ;;		_i2c_Stop
  4472 ;;		_i2c_Write
  4473 ;; This function is called by:
  4474 ;;		_print_error
  4475 ;;		_print_screen
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           
  4480                           ;psect for function _i2c_Write_string
  4481  09C7                     _i2c_Write_string:	
  4482                           
  4483                           ;Multi_RX_testjig_v1.c: 847: i2c_Start();
  4484                           
  4485                           ;incstack = 0
  4486                           ; Regs used in _i2c_Write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4487  09C7  3188  208C  3189   	fcall	_i2c_Start
  4488                           
  4489                           ;Multi_RX_testjig_v1.c: 848: i2c_Write(0x7C);
  4490  09CA  307C               	movlw	124
  4491  09CB  3188  20B1  3189   	fcall	_i2c_Write
  4492                           
  4493                           ;Multi_RX_testjig_v1.c: 849: i2c_Write(0x40);
  4494  09CE  3040               	movlw	64
  4495  09CF  3188  20B1  3189   	fcall	_i2c_Write
  4496  09D2                     l3804:	
  4497                           ;Multi_RX_testjig_v1.c: 851: while(*data != (0))
  4498                           
  4499  09D2  0873               	movf	i2c_Write_string@data,w
  4500  09D3  0084               	movwf	4
  4501  09D4  0874               	movf	i2c_Write_string@data+1,w
  4502  09D5  0085               	movwf	5
  4503  09D6  0012               	moviw fsr0++
  4504  09D7  1903               	btfsc	3,2
  4505  09D8  29E6               	goto	l3806
  4506                           
  4507                           ;Multi_RX_testjig_v1.c: 852: {
  4508                           ;Multi_RX_testjig_v1.c: 853: i2c_Write(*data);
  4509  09D9  0873               	movf	i2c_Write_string@data,w
  4510  09DA  0084               	movwf	4
  4511  09DB  0874               	movf	i2c_Write_string@data+1,w
  4512  09DC  0085               	movwf	5
  4513  09DD  0800               	movf	0,w	;code access
  4514  09DE  3188  20B1  3189   	fcall	_i2c_Write
  4515                           
  4516                           ;Multi_RX_testjig_v1.c: 854: data++;
  4517  09E1  3001               	movlw	1
  4518  09E2  07F3               	addwf	i2c_Write_string@data,f
  4519  09E3  3000               	movlw	0
  4520  09E4  3DF4               	addwfc	i2c_Write_string@data+1,f
  4521  09E5  29D2               	goto	l3804
  4522  09E6                     l3806:	
  4523                           
  4524                           ;Multi_RX_testjig_v1.c: 855: }
  4525                           ;Multi_RX_testjig_v1.c: 856: i2c_Stop();
  4526  09E6  3188  2091         	fcall	_i2c_Stop
  4527  09E8  0008               	return
  4528  09E9                     __end_of_i2c_Write_string:	
  4529                           
  4530                           	psect	text7
  4531  0976                     __ptext7:	
  4532 ;; *************** function _clear_lcd *****************
  4533 ;; Defined at:
  4534 ;;		line 913 in file "Multi_RX_testjig_v1.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;		None
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0, pclath, cstack
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4550 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4552 ;;Total ram usage:        1 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; Hardware stack levels required when called:    2
  4555 ;; This function calls:
  4556 ;;		_i2c_Start
  4557 ;;		_i2c_Stop
  4558 ;;		_i2c_Write
  4559 ;; This function is called by:
  4560 ;;		_print_error
  4561 ;;		_print_screen
  4562 ;;		_lcd_createChar
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           
  4567                           ;psect for function _clear_lcd
  4568  0976                     _clear_lcd:	
  4569                           
  4570                           ;Multi_RX_testjig_v1.c: 915: i2c_Start();
  4571                           
  4572                           ;incstack = 0
  4573                           ; Regs used in _clear_lcd: [wreg+status,2+status,0+pclath+cstack]
  4574  0976  3188  208C  3189   	fcall	_i2c_Start
  4575                           
  4576                           ;Multi_RX_testjig_v1.c: 916: i2c_Write(0x7C);
  4577  0979  307C               	movlw	124
  4578  097A  3188  20B1  3189   	fcall	_i2c_Write
  4579                           
  4580                           ;Multi_RX_testjig_v1.c: 917: i2c_Write(0x00);
  4581  097D  3000               	movlw	0
  4582  097E  3188  20B1  3189   	fcall	_i2c_Write
  4583                           
  4584                           ;Multi_RX_testjig_v1.c: 918: i2c_Write(0x01);
  4585  0981  3001               	movlw	1
  4586  0982  3188  20B1  3189   	fcall	_i2c_Write
  4587                           
  4588                           ;Multi_RX_testjig_v1.c: 919: _delay((unsigned long)((2)*(16000000/4000.0)));
  4589  0985  300B               	movlw	11
  4590  0986  00F3               	movwf	??_clear_lcd
  4591  0987  3062               	movlw	98
  4592  0988                     u6717:	
  4593  0988  0B89               	decfsz	9,f
  4594  0989  2988               	goto	u6717
  4595  098A  0BF3               	decfsz	??_clear_lcd,f
  4596  098B  2988               	goto	u6717
  4597  098C  3200               	nop2
  4598                           
  4599                           ;Multi_RX_testjig_v1.c: 920: i2c_Stop();
  4600  098D  3188  2091         	fcall	_i2c_Stop
  4601  098F  0008               	return
  4602  0990                     __end_of_clear_lcd:	
  4603                           
  4604                           	psect	text8
  4605  0A0E                     __ptext8:	
  4606 ;; *************** function _power_supply_set *****************
  4607 ;; Defined at:
  4608 ;;		line 1687 in file "Multi_RX_testjig_v1.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  supply          1    wreg     unsigned char 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;  supply          1    2[COMMON] unsigned char 
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  1    wreg      void 
  4615 ;; Registers used:
  4616 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4626 ;;Total ram usage:        1 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; Hardware stack levels required when called:    1
  4629 ;; This function calls:
  4630 ;;		Nothing
  4631 ;; This function is called by:
  4632 ;;		_main
  4633 ;;		_testjig_done
  4634 ;;		_print_error
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           
  4639                           ;psect for function _power_supply_set
  4640  0A0E                     _power_supply_set:	
  4641                           
  4642                           ;incstack = 0
  4643                           ; Regs used in _power_supply_set: [wreg-fsr0h+status,2+status,0]
  4644                           ;power_supply_set@supply stored from wreg
  4645  0A0E  00F2               	movwf	power_supply_set@supply
  4646                           
  4647                           ;Multi_RX_testjig_v1.c: 1689: switch(supply)
  4648  0A0F  2A24               	goto	l3924
  4649  0A10                     l590:	
  4650                           ;Multi_RX_testjig_v1.c: 1690: {
  4651                           ;Multi_RX_testjig_v1.c: 1691: case 0:
  4652                           
  4653                           
  4654                           ;Multi_RX_testjig_v1.c: 1692: LATD4 = 1;
  4655  0A10  0022               	movlb	2	; select bank2
  4656  0A11  160F               	bsf	15,4	;volatile
  4657                           
  4658                           ;Multi_RX_testjig_v1.c: 1693: LATD5 = 1;
  4659  0A12  168F               	bsf	15,5	;volatile
  4660                           
  4661                           ;Multi_RX_testjig_v1.c: 1694: LATD6 = 1;
  4662  0A13  170F               	bsf	15,6	;volatile
  4663                           
  4664                           ;Multi_RX_testjig_v1.c: 1695: break;
  4665  0A14  0008               	return
  4666  0A15                     l592:	
  4667                           ;Multi_RX_testjig_v1.c: 1696: case 1:
  4668                           
  4669                           
  4670                           ;Multi_RX_testjig_v1.c: 1697: LATD4 = 1;
  4671  0A15  0022               	movlb	2	; select bank2
  4672  0A16  160F               	bsf	15,4	;volatile
  4673                           
  4674                           ;Multi_RX_testjig_v1.c: 1698: LATD5 = 0;
  4675  0A17  128F               	bcf	15,5	;volatile
  4676                           
  4677                           ;Multi_RX_testjig_v1.c: 1699: LATD6 = 1;
  4678  0A18  170F               	bsf	15,6	;volatile
  4679                           
  4680                           ;Multi_RX_testjig_v1.c: 1700: break;
  4681  0A19  0008               	return
  4682  0A1A                     l593:	
  4683                           ;Multi_RX_testjig_v1.c: 1701: case 2:
  4684                           
  4685                           
  4686                           ;Multi_RX_testjig_v1.c: 1702: LATD4 = 0;
  4687  0A1A  0022               	movlb	2	; select bank2
  4688  0A1B  120F               	bcf	15,4	;volatile
  4689                           
  4690                           ;Multi_RX_testjig_v1.c: 1703: LATD5 = 0;
  4691  0A1C  128F               	bcf	15,5	;volatile
  4692                           
  4693                           ;Multi_RX_testjig_v1.c: 1704: LATD6 = 0;
  4694  0A1D  130F               	bcf	15,6	;volatile
  4695                           
  4696                           ;Multi_RX_testjig_v1.c: 1705: break;
  4697  0A1E  0008               	return
  4698  0A1F                     l594:	
  4699                           ;Multi_RX_testjig_v1.c: 1706: case 3:
  4700                           
  4701                           
  4702                           ;Multi_RX_testjig_v1.c: 1707: LATD4 = 0;
  4703  0A1F  0022               	movlb	2	; select bank2
  4704  0A20  120F               	bcf	15,4	;volatile
  4705                           
  4706                           ;Multi_RX_testjig_v1.c: 1708: LATD5 = 0;
  4707  0A21  128F               	bcf	15,5	;volatile
  4708                           
  4709                           ;Multi_RX_testjig_v1.c: 1709: LATD6 = 1;
  4710  0A22  170F               	bsf	15,6	;volatile
  4711                           
  4712                           ;Multi_RX_testjig_v1.c: 1711: }
  4713                           
  4714                           ;Multi_RX_testjig_v1.c: 1710: break;
  4715  0A23  0008               	return
  4716  0A24                     l3924:	
  4717  0A24  0872               	movf	power_supply_set@supply,w
  4718                           
  4719                           ; Switch size 1, requested type "space"
  4720                           ; Number of cases is 4, Range of values is 0 to 3
  4721                           ; switch strategies available:
  4722                           ; Name         Instructions Cycles
  4723                           ; simple_byte           13     7 (average)
  4724                           ; direct_byte           14     6 (fixed)
  4725                           ; jumptable            260     6 (fixed)
  4726                           ;	Chosen strategy is simple_byte
  4727  0A25  3A00               	xorlw	0	; case 0
  4728  0A26  1903               	skipnz
  4729  0A27  2A10               	goto	l590
  4730  0A28  3A01               	xorlw	1	; case 1
  4731  0A29  1903               	skipnz
  4732  0A2A  2A15               	goto	l592
  4733  0A2B  3A03               	xorlw	3	; case 2
  4734  0A2C  1903               	skipnz
  4735  0A2D  2A1A               	goto	l593
  4736  0A2E  3A01               	xorlw	1	; case 3
  4737  0A2F  1903               	skipnz
  4738  0A30  2A1F               	goto	l594
  4739  0A31  2A32               	goto	l595
  4740  0A32                     l595:	
  4741  0A32  0008               	return
  4742  0A33                     __end_of_power_supply_set:	
  4743                           
  4744                           	psect	text9
  4745  0AC1                     __ptext9:	
  4746 ;; *************** function _debug_fast_tx *****************
  4747 ;; Defined at:
  4748 ;;		line 1801 in file "Multi_RX_testjig_v1.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  data            2    2[COMMON] unsigned int 
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;  i               1    6[COMMON] unsigned char 
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  1    wreg      void 
  4755 ;; Registers used:
  4756 ;;		wreg, status,2, status,0
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4764 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4765 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4766 ;;Total ram usage:        5 bytes
  4767 ;; Hardware stack levels used:    1
  4768 ;; Hardware stack levels required when called:    1
  4769 ;; This function calls:
  4770 ;;		Nothing
  4771 ;; This function is called by:
  4772 ;;		_main
  4773 ;;		_testjig_done
  4774 ;;		_print_error
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           
  4779                           ;psect for function _debug_fast_tx
  4780  0AC1                     _debug_fast_tx:	
  4781                           
  4782                           ;Multi_RX_testjig_v1.c: 1803: GIE = 0;
  4783                           
  4784                           ;incstack = 0
  4785                           ; Regs used in _debug_fast_tx: [wreg+status,2+status,0]
  4786  0AC1  138B               	bcf	11,7	;volatile
  4787                           
  4788                           ;Multi_RX_testjig_v1.c: 1804: LATD2 = 0;
  4789  0AC2  0022               	movlb	2	; select bank2
  4790  0AC3  110F               	bcf	15,2	;volatile
  4791                           
  4792                           ;Multi_RX_testjig_v1.c: 1810: __nop();
  4793  0AC4  0000               	nop
  4794                           
  4795                           ;Multi_RX_testjig_v1.c: 1811: __nop();
  4796  0AC5  0000               	nop
  4797                           
  4798                           ;Multi_RX_testjig_v1.c: 1812: __nop();
  4799  0AC6  0000               	nop
  4800                           
  4801                           ;Multi_RX_testjig_v1.c: 1813: __nop();
  4802  0AC7  0000               	nop
  4803                           
  4804                           ;Multi_RX_testjig_v1.c: 1814: __nop();
  4805  0AC8  0000               	nop
  4806                           
  4807                           ;Multi_RX_testjig_v1.c: 1815: __nop();
  4808  0AC9  0000               	nop
  4809                           
  4810                           ;Multi_RX_testjig_v1.c: 1816: __nop();
  4811  0ACA  0000               	nop
  4812                           
  4813                           ;Multi_RX_testjig_v1.c: 1817: __nop();
  4814  0ACB  0000               	nop
  4815                           
  4816                           ;Multi_RX_testjig_v1.c: 1818: __nop();
  4817  0ACC  0000               	nop
  4818                           
  4819                           ;Multi_RX_testjig_v1.c: 1819: unsigned char i;
  4820                           ;Multi_RX_testjig_v1.c: 1820: for(i = 0; i < 16; i++)
  4821  0ACD  01F6               	clrf	debug_fast_tx@i
  4822  0ACE  3010               	movlw	16
  4823  0ACF  0276               	subwf	debug_fast_tx@i,w
  4824  0AD0  1803               	btfsc	3,0
  4825  0AD1  2AEB               	goto	l628
  4826  0AD2                     l627:	
  4827                           
  4828                           ;Multi_RX_testjig_v1.c: 1821: {
  4829                           ;Multi_RX_testjig_v1.c: 1822: LATD2 = data & 0x01;
  4830  0AD2  1C72               	btfss	debug_fast_tx@data,0
  4831  0AD3  2AD7               	goto	u4690
  4832  0AD4  0022               	movlb	2	; select bank2
  4833  0AD5  150F               	bsf	15,2	;volatile
  4834  0AD6  2AD9               	goto	l3916
  4835  0AD7                     u4690:	
  4836  0AD7  0022               	movlb	2	; select bank2
  4837  0AD8  110F               	bcf	15,2	;volatile
  4838  0AD9                     l3916:	
  4839                           
  4840                           ;Multi_RX_testjig_v1.c: 1823: data = data >> 1;
  4841  0AD9  0873               	movf	debug_fast_tx@data+1,w
  4842  0ADA  00F5               	movwf	??_debug_fast_tx+1
  4843  0ADB  0872               	movf	debug_fast_tx@data,w
  4844  0ADC  00F4               	movwf	??_debug_fast_tx
  4845  0ADD  36F5               	lsrf	??_debug_fast_tx+1,f
  4846  0ADE  0CF4               	rrf	??_debug_fast_tx,f
  4847  0ADF  0874               	movf	??_debug_fast_tx,w
  4848  0AE0  00F2               	movwf	debug_fast_tx@data
  4849  0AE1  0875               	movf	??_debug_fast_tx+1,w
  4850  0AE2  00F3               	movwf	debug_fast_tx@data+1
  4851  0AE3  3001               	movlw	1
  4852  0AE4  00F4               	movwf	??_debug_fast_tx
  4853  0AE5  0874               	movf	??_debug_fast_tx,w
  4854  0AE6  07F6               	addwf	debug_fast_tx@i,f
  4855  0AE7  3010               	movlw	16
  4856  0AE8  0276               	subwf	debug_fast_tx@i,w
  4857  0AE9  1C03               	skipc
  4858  0AEA  2AD2               	goto	l627
  4859  0AEB                     l628:	
  4860                           
  4861                           ;Multi_RX_testjig_v1.c: 1824: }
  4862                           ;Multi_RX_testjig_v1.c: 1825: __nop();
  4863  0AEB  0000               	nop
  4864                           
  4865                           ;Multi_RX_testjig_v1.c: 1826: __nop();
  4866  0AEC  0000               	nop
  4867                           
  4868                           ;Multi_RX_testjig_v1.c: 1827: __nop();
  4869  0AED  0000               	nop
  4870                           
  4871                           ;Multi_RX_testjig_v1.c: 1828: __nop();
  4872  0AEE  0000               	nop
  4873                           
  4874                           ;Multi_RX_testjig_v1.c: 1829: __nop();
  4875  0AEF  0000               	nop
  4876                           
  4877                           ;Multi_RX_testjig_v1.c: 1830: __nop();
  4878  0AF0  0000               	nop
  4879                           
  4880                           ;Multi_RX_testjig_v1.c: 1831: LATD2 = 1;
  4881  0AF1  0022               	movlb	2	; select bank2
  4882  0AF2  150F               	bsf	15,2	;volatile
  4883                           
  4884                           ;Multi_RX_testjig_v1.c: 1832: __nop();
  4885  0AF3  0000               	nop
  4886                           
  4887                           ;Multi_RX_testjig_v1.c: 1833: __nop();
  4888  0AF4  0000               	nop
  4889                           
  4890                           ;Multi_RX_testjig_v1.c: 1834: __nop();
  4891  0AF5  0000               	nop
  4892                           
  4893                           ;Multi_RX_testjig_v1.c: 1835: __nop();
  4894  0AF6  0000               	nop
  4895                           
  4896                           ;Multi_RX_testjig_v1.c: 1836: __nop();
  4897  0AF7  0000               	nop
  4898                           
  4899                           ;Multi_RX_testjig_v1.c: 1837: __nop();
  4900  0AF8  0000               	nop
  4901                           
  4902                           ;Multi_RX_testjig_v1.c: 1838: __nop();
  4903  0AF9  0000               	nop
  4904                           
  4905                           ;Multi_RX_testjig_v1.c: 1839: __nop();
  4906  0AFA  0000               	nop
  4907                           
  4908                           ;Multi_RX_testjig_v1.c: 1840: GIE = 1;
  4909  0AFB  178B               	bsf	11,7	;volatile
  4910  0AFC  0008               	return
  4911  0AFD                     __end_of_debug_fast_tx:	
  4912                           
  4913                           	psect	text10
  4914  08A9                     __ptext10:	
  4915 ;; *************** function _buzz_one *****************
  4916 ;; Defined at:
  4917 ;;		line 812 in file "Multi_RX_testjig_v1.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  time            2    2[COMMON] unsigned int 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      void 
  4924 ;; Registers used:
  4925 ;;		wreg
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4934 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4935 ;;Total ram usage:        2 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; Hardware stack levels required when called:    1
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		_main
  4942 ;;		_testjig_done
  4943 ;;		_print_error
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947                           
  4948                           ;psect for function _buzz_one
  4949  08A9                     _buzz_one:	
  4950                           
  4951                           ;Multi_RX_testjig_v1.c: 814: buzz_timer = time;
  4952                           
  4953                           ;incstack = 0
  4954                           ; Regs used in _buzz_one: [wreg]
  4955  08A9  0873               	movf	buzz_one@time+1,w
  4956  08AA  0021               	movlb	1	; select bank1
  4957  08AB  00EE               	movwf	(_buzz_timer+1)^(0+128)	;volatile
  4958  08AC  0872               	movf	buzz_one@time,w
  4959  08AD  00ED               	movwf	_buzz_timer^(0+128)	;volatile
  4960                           
  4961                           ;Multi_RX_testjig_v1.c: 815: LATC5 = 1;
  4962  08AE  0022               	movlb	2	; select bank2
  4963  08AF  168E               	bsf	14,5	;volatile
  4964  08B0  0008               	return
  4965  08B1                     __end_of_buzz_one:	
  4966                           
  4967                           	psect	text11
  4968  0C87                     __ptext11:	
  4969 ;; *************** function _lcd_print_int *****************
  4970 ;; Defined at:
  4971 ;;		line 1518 in file "Multi_RX_testjig_v1.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  number          2    6[BANK0 ] unsigned int 
  4974 ;;  pos             2    8[BANK0 ] unsigned int 
  4975 ;;  decimal         1   10[BANK0 ] unsigned char 
  4976 ;;  ten_thou_dig    1   11[BANK0 ] unsigned char 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;		None
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  1    wreg      void 
  4981 ;; Registers used:
  4982 ;;		wreg, status,2, status,0, pclath, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4988 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4991 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4992 ;;Total ram usage:        7 bytes
  4993 ;; Hardware stack levels used:    1
  4994 ;; Hardware stack levels required when called:    3
  4995 ;; This function calls:
  4996 ;;		_i2c_write_char
  4997 ;;		_lcd_set_cursor
  4998 ;;		_ten_thou_conv
  4999 ;; This function is called by:
  5000 ;;		_main
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           
  5005                           ;psect for function _lcd_print_int
  5006  0C87                     _lcd_print_int:	
  5007                           
  5008                           ;Multi_RX_testjig_v1.c: 1520: lcd_set_cursor(2, pos + 1 - ten_thou_digit);
  5009                           
  5010                           ;incstack = 0
  5011                           ; Regs used in _lcd_print_int: [wreg+status,2+status,0+pclath+cstack]
  5012  0C87  0020               	movlb	0	; select bank0
  5013  0C88  032B               	decf	lcd_print_int@ten_thou_digit,w
  5014  0C89  3AFF               	xorlw	255
  5015  0C8A  0728               	addwf	lcd_print_int@pos,w
  5016  0C8B  3E01               	addlw	1
  5017  0C8C  00AC               	movwf	??_lcd_print_int
  5018  0C8D  082C               	movf	??_lcd_print_int,w
  5019  0C8E  00F3               	movwf	lcd_set_cursor@col
  5020  0C8F  3002               	movlw	2
  5021  0C90  3189  21E9  318C   	fcall	_lcd_set_cursor
  5022                           
  5023                           ;Multi_RX_testjig_v1.c: 1521: ten_thou_conv(number);
  5024  0C93  0020               	movlb	0	; select bank0
  5025  0C94  0827               	movf	lcd_print_int@number+1,w
  5026  0C95  00F9               	movwf	ten_thou_conv@n+1
  5027  0C96  0826               	movf	lcd_print_int@number,w
  5028  0C97  00F8               	movwf	ten_thou_conv@n
  5029  0C98  3186  26E5  318C   	fcall	_ten_thou_conv
  5030                           
  5031                           ;Multi_RX_testjig_v1.c: 1522: if(ten_thou_digit)
  5032  0C9B  0020               	movlb	0	; select bank0
  5033  0C9C  082B               	movf	lcd_print_int@ten_thou_digit,w
  5034  0C9D  1903               	btfsc	3,2
  5035  0C9E  2CAB               	goto	l4458
  5036                           
  5037                           ;Multi_RX_testjig_v1.c: 1523: {
  5038                           ;Multi_RX_testjig_v1.c: 1524: if(ten_thou != 0 || decimal & 0x10)
  5039  0C9F  087A               	movf	_ten_thou,w
  5040  0CA0  1D03               	btfss	3,2
  5041  0CA1  2CA4               	goto	l4454
  5042  0CA2  1E2A               	btfss	lcd_print_int@decimal,4
  5043  0CA3  2CA7               	goto	l4456
  5044  0CA4                     l4454:	
  5045                           
  5046                           ;Multi_RX_testjig_v1.c: 1525: i2c_write_char(ten_thou + 48);
  5047  0CA4  087A               	movf	_ten_thou,w
  5048  0CA5  3E30               	addlw	48
  5049  0CA6  2CA8               	goto	L15
  5050  0CA7                     l4456:	
  5051                           
  5052                           ;Multi_RX_testjig_v1.c: 1526: else i2c_write_char(' ');
  5053  0CA7  3020               	movlw	32
  5054  0CA8                     L15:	
  5055  0CA8  3188  20E0  318C   	fcall	_i2c_write_char
  5056  0CAB                     l4458:	
  5057                           
  5058                           ;Multi_RX_testjig_v1.c: 1527: }
  5059                           ;Multi_RX_testjig_v1.c: 1528: if(decimal & 0x10)i2c_write_char('.');
  5060  0CAB  0020               	movlb	0	; select bank0
  5061  0CAC  1E2A               	btfss	lcd_print_int@decimal,4
  5062  0CAD  2CB2               	goto	l4462
  5063  0CAE  302E               	movlw	46
  5064  0CAF  3188  20E0  318C   	fcall	_i2c_write_char
  5065  0CB2                     l4462:	
  5066                           
  5067                           ;Multi_RX_testjig_v1.c: 1529: if(thou != 0 || ten_thou != 0 || decimal & 0x18)
  5068  0CB2  087B               	movf	_thou,w
  5069  0CB3  1D03               	btfss	3,2
  5070  0CB4  2CBD               	goto	l4468
  5071  0CB5  087A               	movf	_ten_thou,w
  5072  0CB6  1D03               	btfss	3,2
  5073  0CB7  2CBD               	goto	l4468
  5074  0CB8  0020               	movlb	0	; select bank0
  5075  0CB9  082A               	movf	lcd_print_int@decimal,w
  5076  0CBA  3918               	andlw	24
  5077  0CBB  1903               	btfsc	3,2
  5078  0CBC  2CC0               	goto	l4470
  5079  0CBD                     l4468:	
  5080                           
  5081                           ;Multi_RX_testjig_v1.c: 1530: i2c_write_char(thou + 48);
  5082  0CBD  087B               	movf	_thou,w
  5083  0CBE  3E30               	addlw	48
  5084  0CBF  2CC1               	goto	L16
  5085  0CC0                     l4470:	
  5086                           
  5087                           ;Multi_RX_testjig_v1.c: 1531: else i2c_write_char(' ');
  5088  0CC0  3020               	movlw	32
  5089  0CC1                     L16:	
  5090  0CC1  3188  20E0  318C   	fcall	_i2c_write_char
  5091                           
  5092                           ;Multi_RX_testjig_v1.c: 1532: if(decimal & 0x08)i2c_write_char('.');
  5093  0CC4  0020               	movlb	0	; select bank0
  5094  0CC5  1DAA               	btfss	lcd_print_int@decimal,3
  5095  0CC6  2CCB               	goto	l4476
  5096  0CC7  302E               	movlw	46
  5097  0CC8  3188  20E0  318C   	fcall	_i2c_write_char
  5098  0CCB                     l4476:	
  5099                           
  5100                           ;Multi_RX_testjig_v1.c: 1533: if(hund != 0 || thou != 0 || ten_thou != 0 || decimal & 0x
      +                          1C)
  5101  0CCB  0020               	movlb	0	; select bank0
  5102  0CCC  0868               	movf	_hund,w
  5103  0CCD  1D03               	btfss	3,2
  5104  0CCE  2CD9               	goto	l4484
  5105  0CCF  087B               	movf	_thou,w
  5106  0CD0  1D03               	btfss	3,2
  5107  0CD1  2CD9               	goto	l4484
  5108  0CD2  087A               	movf	_ten_thou,w
  5109  0CD3  1D03               	btfss	3,2
  5110  0CD4  2CD9               	goto	l4484
  5111  0CD5  082A               	movf	lcd_print_int@decimal,w
  5112  0CD6  391C               	andlw	28
  5113  0CD7  1903               	btfsc	3,2
  5114  0CD8  2CDC               	goto	l4486
  5115  0CD9                     l4484:	
  5116                           
  5117                           ;Multi_RX_testjig_v1.c: 1534: i2c_write_char(hund + 48);
  5118  0CD9  0868               	movf	_hund,w
  5119  0CDA  3E30               	addlw	48
  5120  0CDB  2CDD               	goto	L17
  5121  0CDC                     l4486:	
  5122                           
  5123                           ;Multi_RX_testjig_v1.c: 1535: else i2c_write_char(' ');
  5124  0CDC  3020               	movlw	32
  5125  0CDD                     L17:	
  5126  0CDD  3188  20E0  318C   	fcall	_i2c_write_char
  5127                           
  5128                           ;Multi_RX_testjig_v1.c: 1536: if(decimal & 0x04)i2c_write_char('.');
  5129  0CE0  0020               	movlb	0	; select bank0
  5130  0CE1  1D2A               	btfss	lcd_print_int@decimal,2
  5131  0CE2  2CE7               	goto	l4492
  5132  0CE3  302E               	movlw	46
  5133  0CE4  3188  20E0  318C   	fcall	_i2c_write_char
  5134  0CE7                     l4492:	
  5135                           
  5136                           ;Multi_RX_testjig_v1.c: 1537: if(ten != 0 || hund != 0 || thou != 0 || ten_thou != 0 || 
      +                          decimal & 0x1E)
  5137  0CE7  0020               	movlb	0	; select bank0
  5138  0CE8  0867               	movf	_ten,w
  5139  0CE9  1D03               	btfss	3,2
  5140  0CEA  2CF8               	goto	l4502
  5141  0CEB  0868               	movf	_hund,w
  5142  0CEC  1D03               	btfss	3,2
  5143  0CED  2CF8               	goto	l4502
  5144  0CEE  087B               	movf	_thou,w
  5145  0CEF  1D03               	btfss	3,2
  5146  0CF0  2CF8               	goto	l4502
  5147  0CF1  087A               	movf	_ten_thou,w
  5148  0CF2  1D03               	btfss	3,2
  5149  0CF3  2CF8               	goto	l4502
  5150  0CF4  082A               	movf	lcd_print_int@decimal,w
  5151  0CF5  391E               	andlw	30
  5152  0CF6  1903               	btfsc	3,2
  5153  0CF7  2CFB               	goto	l4504
  5154  0CF8                     l4502:	
  5155                           
  5156                           ;Multi_RX_testjig_v1.c: 1538: i2c_write_char(ten + 48);
  5157  0CF8  0867               	movf	_ten,w
  5158  0CF9  3E30               	addlw	48
  5159  0CFA  2CFC               	goto	L18
  5160  0CFB                     l4504:	
  5161                           
  5162                           ;Multi_RX_testjig_v1.c: 1539: else i2c_write_char(' ');
  5163  0CFB  3020               	movlw	32
  5164  0CFC                     L18:	
  5165  0CFC  3188  20E0  318C   	fcall	_i2c_write_char
  5166                           
  5167                           ;Multi_RX_testjig_v1.c: 1540: if(decimal & 0x02)i2c_write_char('.');
  5168  0CFF  0020               	movlb	0	; select bank0
  5169  0D00  1CAA               	btfss	lcd_print_int@decimal,1
  5170  0D01  2D06               	goto	l539
  5171  0D02  302E               	movlw	46
  5172  0D03  3188  20E0  318C   	fcall	_i2c_write_char
  5173  0D06                     l539:	
  5174                           
  5175                           ;Multi_RX_testjig_v1.c: 1541: i2c_write_char(unit + 48);
  5176  0D06  0020               	movlb	0	; select bank0
  5177  0D07  0866               	movf	_unit,w
  5178  0D08  3E30               	addlw	48
  5179  0D09  3188  20E0         	fcall	_i2c_write_char
  5180  0D0B  0008               	return
  5181  0D0C                     __end_of_lcd_print_int:	
  5182                           
  5183                           	psect	text12
  5184  06E5                     __ptext12:	
  5185 ;; *************** function _ten_thou_conv *****************
  5186 ;; Defined at:
  5187 ;;		line 1198 in file "Multi_RX_testjig_v1.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;  n               2    8[COMMON] int 
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;		None
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      void 
  5194 ;; Registers used:
  5195 ;;		wreg, status,2, status,0, pclath, cstack
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5203 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5204 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5205 ;;Total ram usage:        8 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    2
  5208 ;; This function calls:
  5209 ;;		___bmul
  5210 ;;		___wmul
  5211 ;; This function is called by:
  5212 ;;		_lcd_print_int
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           
  5217                           ;psect for function _ten_thou_conv
  5218  06E5                     _ten_thou_conv:	
  5219                           
  5220                           ;Multi_RX_testjig_v1.c: 1200: unit = n & 0x1F;
  5221                           
  5222                           ;incstack = 0
  5223                           ; Regs used in _ten_thou_conv: [wreg+status,2+status,0+pclath+cstack]
  5224  06E5  0878               	movf	ten_thou_conv@n,w
  5225  06E6  391F               	andlw	31
  5226  06E7  0020               	movlb	0	; select bank0
  5227  06E8  00A0               	movwf	??_ten_thou_conv
  5228  06E9  0820               	movf	??_ten_thou_conv,w
  5229  06EA  00E6               	movwf	_unit
  5230                           
  5231                           ;Multi_RX_testjig_v1.c: 1201: ten = (n >> 5) & 0xF;
  5232  06EB  0879               	movf	ten_thou_conv@n+1,w
  5233  06EC  00A1               	movwf	??_ten_thou_conv+1
  5234  06ED  0878               	movf	ten_thou_conv@n,w
  5235  06EE  00A0               	movwf	??_ten_thou_conv
  5236  06EF  3005               	movlw	5
  5237  06F0  00A2               	movwf	??_ten_thou_conv+2
  5238  06F1                     u4745:	
  5239  06F1  0D21               	rlf	??_ten_thou_conv+1,w
  5240  06F2  0CA1               	rrf	??_ten_thou_conv+1,f
  5241  06F3  0CA0               	rrf	??_ten_thou_conv,f
  5242  06F4  0BA2               	decfsz	??_ten_thou_conv+2,f
  5243  06F5  2EF1               	goto	u4745
  5244  06F6  0820               	movf	??_ten_thou_conv,w
  5245  06F7  390F               	andlw	15
  5246  06F8  00A3               	movwf	??_ten_thou_conv+3
  5247  06F9  0823               	movf	??_ten_thou_conv+3,w
  5248  06FA  00E7               	movwf	_ten
  5249                           
  5250                           ;Multi_RX_testjig_v1.c: 1202: hund = (n >> 9) & 0xF;
  5251  06FB  0879               	movf	ten_thou_conv@n+1,w
  5252  06FC  00A1               	movwf	??_ten_thou_conv+1
  5253  06FD  0878               	movf	ten_thou_conv@n,w
  5254  06FE  00A0               	movwf	??_ten_thou_conv
  5255  06FF  3009               	movlw	9
  5256  0700  00A2               	movwf	??_ten_thou_conv+2
  5257  0701                     u4755:	
  5258  0701  0D21               	rlf	??_ten_thou_conv+1,w
  5259  0702  0CA1               	rrf	??_ten_thou_conv+1,f
  5260  0703  0CA0               	rrf	??_ten_thou_conv,f
  5261  0704  0BA2               	decfsz	??_ten_thou_conv+2,f
  5262  0705  2F01               	goto	u4755
  5263  0706  0820               	movf	??_ten_thou_conv,w
  5264  0707  390F               	andlw	15
  5265  0708  00A3               	movwf	??_ten_thou_conv+3
  5266  0709  0823               	movf	??_ten_thou_conv+3,w
  5267  070A  00E8               	movwf	_hund
  5268                           
  5269                           ;Multi_RX_testjig_v1.c: 1203: thou = (n >> 13) & 0x7;
  5270  070B  0879               	movf	ten_thou_conv@n+1,w
  5271  070C  00A1               	movwf	??_ten_thou_conv+1
  5272  070D  0878               	movf	ten_thou_conv@n,w
  5273  070E  00A0               	movwf	??_ten_thou_conv
  5274  070F  300D               	movlw	13
  5275  0710  00A2               	movwf	??_ten_thou_conv+2
  5276  0711                     u4765:	
  5277  0711  0D21               	rlf	??_ten_thou_conv+1,w
  5278  0712  0CA1               	rrf	??_ten_thou_conv+1,f
  5279  0713  0CA0               	rrf	??_ten_thou_conv,f
  5280  0714  0BA2               	decfsz	??_ten_thou_conv+2,f
  5281  0715  2F11               	goto	u4765
  5282  0716  0820               	movf	??_ten_thou_conv,w
  5283  0717  3907               	andlw	7
  5284  0718  00A3               	movwf	??_ten_thou_conv+3
  5285  0719  0823               	movf	??_ten_thou_conv+3,w
  5286  071A  00FB               	movwf	_thou
  5287                           
  5288                           ;Multi_RX_testjig_v1.c: 1205: unit = 2 * (thou + hund + ten) + unit;
  5289  071B  087B               	movf	_thou,w
  5290  071C  0768               	addwf	_hund,w
  5291  071D  0767               	addwf	_ten,w
  5292  071E  0709               	addwf	9,w
  5293  071F  0766               	addwf	_unit,w
  5294  0720  00A0               	movwf	??_ten_thou_conv
  5295  0721  0820               	movf	??_ten_thou_conv,w
  5296  0722  00E6               	movwf	_unit
  5297                           
  5298                           ;Multi_RX_testjig_v1.c: 1206: ten_thou = (unit * 0x67) >> 10;
  5299  0723  0866               	movf	_unit,w
  5300  0724  00A0               	movwf	??_ten_thou_conv
  5301  0725  01A1               	clrf	??_ten_thou_conv+1
  5302  0726  0820               	movf	??_ten_thou_conv,w
  5303  0727  00F2               	movwf	___wmul@multiplier
  5304  0728  0821               	movf	??_ten_thou_conv+1,w
  5305  0729  00F3               	movwf	___wmul@multiplier+1
  5306  072A  3067               	movlw	103
  5307  072B  00F4               	movwf	___wmul@multiplicand
  5308  072C  3000               	movlw	0
  5309  072D  00F5               	movwf	___wmul@multiplicand+1
  5310  072E  3189  2190  3186   	fcall	___wmul
  5311  0731  0872               	movf	?___wmul,w
  5312  0732  0020               	movlb	0	; select bank0
  5313  0733  00A2               	movwf	??_ten_thou_conv+2
  5314  0734  0873               	movf	?___wmul+1,w
  5315  0735  00A3               	movwf	??_ten_thou_conv+3
  5316  0736  300A               	movlw	10
  5317  0737  00A4               	movwf	??_ten_thou_conv+4
  5318  0738                     u4775:	
  5319  0738  0D23               	rlf	??_ten_thou_conv+3,w
  5320  0739  0CA3               	rrf	??_ten_thou_conv+3,f
  5321  073A  0CA2               	rrf	??_ten_thou_conv+2,f
  5322  073B  0BA4               	decfsz	??_ten_thou_conv+4,f
  5323  073C  2F38               	goto	u4775
  5324  073D  0822               	movf	??_ten_thou_conv+2,w
  5325  073E  00A5               	movwf	??_ten_thou_conv+5
  5326  073F  0825               	movf	??_ten_thou_conv+5,w
  5327  0740  00FA               	movwf	_ten_thou
  5328                           
  5329                           ;Multi_RX_testjig_v1.c: 1207: unit = unit - 10 * ten_thou;
  5330  0741  300A               	movlw	10
  5331  0742  00A0               	movwf	??_ten_thou_conv
  5332  0743  0820               	movf	??_ten_thou_conv,w
  5333  0744  00F2               	movwf	___bmul@multiplicand
  5334  0745  087A               	movf	_ten_thou,w
  5335  0746  3188  20CF  3186   	fcall	___bmul
  5336  0749  3AFF               	xorlw	255
  5337  074A  3E01               	addlw	1
  5338  074B  0020               	movlb	0	; select bank0
  5339  074C  0766               	addwf	_unit,w
  5340  074D  00A1               	movwf	??_ten_thou_conv+1
  5341  074E  0821               	movf	??_ten_thou_conv+1,w
  5342  074F  00E6               	movwf	_unit
  5343                           
  5344                           ;Multi_RX_testjig_v1.c: 1209: ten = 9 * thou + hund + 3 * ten + ten_thou;
  5345  0750  3003               	movlw	3
  5346  0751  00A0               	movwf	??_ten_thou_conv
  5347  0752  0820               	movf	??_ten_thou_conv,w
  5348  0753  00F2               	movwf	___bmul@multiplicand
  5349  0754  0867               	movf	_ten,w
  5350  0755  3188  20CF  3186   	fcall	___bmul
  5351  0758  0020               	movlb	0	; select bank0
  5352  0759  00A1               	movwf	??_ten_thou_conv+1
  5353  075A  3009               	movlw	9
  5354  075B  00A2               	movwf	??_ten_thou_conv+2
  5355  075C  0822               	movf	??_ten_thou_conv+2,w
  5356  075D  00F2               	movwf	___bmul@multiplicand
  5357  075E  087B               	movf	_thou,w
  5358  075F  3188  20CF  3186   	fcall	___bmul
  5359  0762  0020               	movlb	0	; select bank0
  5360  0763  0721               	addwf	??_ten_thou_conv+1,w
  5361  0764  0768               	addwf	_hund,w
  5362  0765  077A               	addwf	_ten_thou,w
  5363  0766  00A3               	movwf	??_ten_thou_conv+3
  5364  0767  0823               	movf	??_ten_thou_conv+3,w
  5365  0768  00E7               	movwf	_ten
  5366                           
  5367                           ;Multi_RX_testjig_v1.c: 1210: ten_thou = (ten * 0x67) >> 10;
  5368  0769  0867               	movf	_ten,w
  5369  076A  00A0               	movwf	??_ten_thou_conv
  5370  076B  01A1               	clrf	??_ten_thou_conv+1
  5371  076C  0820               	movf	??_ten_thou_conv,w
  5372  076D  00F2               	movwf	___wmul@multiplier
  5373  076E  0821               	movf	??_ten_thou_conv+1,w
  5374  076F  00F3               	movwf	___wmul@multiplier+1
  5375  0770  3067               	movlw	103
  5376  0771  00F4               	movwf	___wmul@multiplicand
  5377  0772  3000               	movlw	0
  5378  0773  00F5               	movwf	___wmul@multiplicand+1
  5379  0774  3189  2190  3186   	fcall	___wmul
  5380  0777  0872               	movf	?___wmul,w
  5381  0778  0020               	movlb	0	; select bank0
  5382  0779  00A2               	movwf	??_ten_thou_conv+2
  5383  077A  0873               	movf	?___wmul+1,w
  5384  077B  00A3               	movwf	??_ten_thou_conv+3
  5385  077C  300A               	movlw	10
  5386  077D  00A4               	movwf	??_ten_thou_conv+4
  5387  077E                     u4785:	
  5388  077E  0D23               	rlf	??_ten_thou_conv+3,w
  5389  077F  0CA3               	rrf	??_ten_thou_conv+3,f
  5390  0780  0CA2               	rrf	??_ten_thou_conv+2,f
  5391  0781  0BA4               	decfsz	??_ten_thou_conv+4,f
  5392  0782  2F7E               	goto	u4785
  5393  0783  0822               	movf	??_ten_thou_conv+2,w
  5394  0784  00A5               	movwf	??_ten_thou_conv+5
  5395  0785  0825               	movf	??_ten_thou_conv+5,w
  5396  0786  00FA               	movwf	_ten_thou
  5397                           
  5398                           ;Multi_RX_testjig_v1.c: 1211: ten = ten - 10 * ten_thou;
  5399  0787  300A               	movlw	10
  5400  0788  00A0               	movwf	??_ten_thou_conv
  5401  0789  0820               	movf	??_ten_thou_conv,w
  5402  078A  00F2               	movwf	___bmul@multiplicand
  5403  078B  087A               	movf	_ten_thou,w
  5404  078C  3188  20CF  3186   	fcall	___bmul
  5405  078F  3AFF               	xorlw	255
  5406  0790  3E01               	addlw	1
  5407  0791  0020               	movlb	0	; select bank0
  5408  0792  0767               	addwf	_ten,w
  5409  0793  00A1               	movwf	??_ten_thou_conv+1
  5410  0794  0821               	movf	??_ten_thou_conv+1,w
  5411  0795  00E7               	movwf	_ten
  5412                           
  5413                           ;Multi_RX_testjig_v1.c: 1213: hund = thou + 5 * hund + ten_thou;
  5414  0796  3005               	movlw	5
  5415  0797  00A0               	movwf	??_ten_thou_conv
  5416  0798  0820               	movf	??_ten_thou_conv,w
  5417  0799  00F2               	movwf	___bmul@multiplicand
  5418  079A  0868               	movf	_hund,w
  5419  079B  3188  20CF  3186   	fcall	___bmul
  5420  079E  077B               	addwf	_thou,w
  5421  079F  077A               	addwf	_ten_thou,w
  5422  07A0  0020               	movlb	0	; select bank0
  5423  07A1  00A1               	movwf	??_ten_thou_conv+1
  5424  07A2  0821               	movf	??_ten_thou_conv+1,w
  5425  07A3  00E8               	movwf	_hund
  5426                           
  5427                           ;Multi_RX_testjig_v1.c: 1214: ten_thou = (hund * 0x67) >> 10;
  5428  07A4  0868               	movf	_hund,w
  5429  07A5  00A0               	movwf	??_ten_thou_conv
  5430  07A6  01A1               	clrf	??_ten_thou_conv+1
  5431  07A7  0820               	movf	??_ten_thou_conv,w
  5432  07A8  00F2               	movwf	___wmul@multiplier
  5433  07A9  0821               	movf	??_ten_thou_conv+1,w
  5434  07AA  00F3               	movwf	___wmul@multiplier+1
  5435  07AB  3067               	movlw	103
  5436  07AC  00F4               	movwf	___wmul@multiplicand
  5437  07AD  3000               	movlw	0
  5438  07AE  00F5               	movwf	___wmul@multiplicand+1
  5439  07AF  3189  2190  3186   	fcall	___wmul
  5440  07B2  0872               	movf	?___wmul,w
  5441  07B3  0020               	movlb	0	; select bank0
  5442  07B4  00A2               	movwf	??_ten_thou_conv+2
  5443  07B5  0873               	movf	?___wmul+1,w
  5444  07B6  00A3               	movwf	??_ten_thou_conv+3
  5445  07B7  300A               	movlw	10
  5446  07B8  00A4               	movwf	??_ten_thou_conv+4
  5447  07B9                     u4795:	
  5448  07B9  0D23               	rlf	??_ten_thou_conv+3,w
  5449  07BA  0CA3               	rrf	??_ten_thou_conv+3,f
  5450  07BB  0CA2               	rrf	??_ten_thou_conv+2,f
  5451  07BC  0BA4               	decfsz	??_ten_thou_conv+4,f
  5452  07BD  2FB9               	goto	u4795
  5453  07BE  0822               	movf	??_ten_thou_conv+2,w
  5454  07BF  00A5               	movwf	??_ten_thou_conv+5
  5455  07C0  0825               	movf	??_ten_thou_conv+5,w
  5456  07C1  00FA               	movwf	_ten_thou
  5457                           
  5458                           ;Multi_RX_testjig_v1.c: 1215: hund = hund - 10 * ten_thou;
  5459  07C2  300A               	movlw	10
  5460  07C3  00A0               	movwf	??_ten_thou_conv
  5461  07C4  0820               	movf	??_ten_thou_conv,w
  5462  07C5  00F2               	movwf	___bmul@multiplicand
  5463  07C6  087A               	movf	_ten_thou,w
  5464  07C7  3188  20CF  3186   	fcall	___bmul
  5465  07CA  3AFF               	xorlw	255
  5466  07CB  3E01               	addlw	1
  5467  07CC  0020               	movlb	0	; select bank0
  5468  07CD  0768               	addwf	_hund,w
  5469  07CE  00A1               	movwf	??_ten_thou_conv+1
  5470  07CF  0821               	movf	??_ten_thou_conv+1,w
  5471  07D0  00E8               	movwf	_hund
  5472                           
  5473                           ;Multi_RX_testjig_v1.c: 1217: thou = 8 * thou + ten_thou;
  5474  07D1  087B               	movf	_thou,w
  5475  07D2  00A0               	movwf	??_ten_thou_conv
  5476  07D3  3002               	movlw	2
  5477  07D4                     u4805:	
  5478  07D4  35A0               	lslf	??_ten_thou_conv,f
  5479  07D5  3EFF               	addlw	-1
  5480  07D6  1D03               	skipz
  5481  07D7  2FD4               	goto	u4805
  5482  07D8  3520               	lslf	??_ten_thou_conv,w
  5483  07D9  077A               	addwf	_ten_thou,w
  5484  07DA  00A1               	movwf	??_ten_thou_conv+1
  5485  07DB  0821               	movf	??_ten_thou_conv+1,w
  5486  07DC  00FB               	movwf	_thou
  5487                           
  5488                           ;Multi_RX_testjig_v1.c: 1218: ten_thou = (thou * 0x1A) >> 8;
  5489  07DD  087B               	movf	_thou,w
  5490  07DE  00A0               	movwf	??_ten_thou_conv
  5491  07DF  01A1               	clrf	??_ten_thou_conv+1
  5492  07E0  0820               	movf	??_ten_thou_conv,w
  5493  07E1  00F2               	movwf	___wmul@multiplier
  5494  07E2  0821               	movf	??_ten_thou_conv+1,w
  5495  07E3  00F3               	movwf	___wmul@multiplier+1
  5496  07E4  301A               	movlw	26
  5497  07E5  00F4               	movwf	___wmul@multiplicand
  5498  07E6  3000               	movlw	0
  5499  07E7  00F5               	movwf	___wmul@multiplicand+1
  5500  07E8  3189  2190  3186   	fcall	___wmul
  5501  07EB  0873               	movf	?___wmul+1,w
  5502  07EC  0020               	movlb	0	; select bank0
  5503  07ED  00A2               	movwf	??_ten_thou_conv+2
  5504  07EE  0822               	movf	??_ten_thou_conv+2,w
  5505  07EF  00FA               	movwf	_ten_thou
  5506                           
  5507                           ;Multi_RX_testjig_v1.c: 1219: thou = thou - 10 * ten_thou;
  5508  07F0  300A               	movlw	10
  5509  07F1  00A0               	movwf	??_ten_thou_conv
  5510  07F2  0820               	movf	??_ten_thou_conv,w
  5511  07F3  00F2               	movwf	___bmul@multiplicand
  5512  07F4  087A               	movf	_ten_thou,w
  5513  07F5  3188  20CF         	fcall	___bmul
  5514  07F7  3AFF               	xorlw	255
  5515  07F8  3E01               	addlw	1
  5516  07F9  077B               	addwf	_thou,w
  5517  07FA  0020               	movlb	0	; select bank0
  5518  07FB  00A1               	movwf	??_ten_thou_conv+1
  5519  07FC  0821               	movf	??_ten_thou_conv+1,w
  5520  07FD  00FB               	movwf	_thou
  5521  07FE  0008               	return
  5522  07FF                     __end_of_ten_thou_conv:	
  5523                           
  5524                           	psect	text13
  5525  0990                     __ptext13:	
  5526 ;; *************** function ___wmul *****************
  5527 ;; Defined at:
  5528 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;  multiplier      2    2[COMMON] unsigned int 
  5531 ;;  multiplicand    2    4[COMMON] unsigned int 
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;  product         2    6[COMMON] unsigned int 
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  2    2[COMMON] unsigned int 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5544 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5546 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5547 ;;Total ram usage:        6 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; Hardware stack levels required when called:    1
  5550 ;; This function calls:
  5551 ;;		Nothing
  5552 ;; This function is called by:
  5553 ;;		_ten_thou_conv
  5554 ;;		_hund_conv
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           
  5559                           ;psect for function ___wmul
  5560  0990                     ___wmul:	
  5561                           
  5562                           ;incstack = 0
  5563                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5564  0990  01F6               	clrf	___wmul@product
  5565  0991  01F7               	clrf	___wmul@product+1
  5566  0992                     l3840:	
  5567  0992  1C72               	btfss	___wmul@multiplier,0
  5568  0993  2998               	goto	l660
  5569  0994  0874               	movf	___wmul@multiplicand,w
  5570  0995  07F6               	addwf	___wmul@product,f
  5571  0996  0875               	movf	___wmul@multiplicand+1,w
  5572  0997  3DF7               	addwfc	___wmul@product+1,f
  5573  0998                     l660:	
  5574  0998  3001               	movlw	1
  5575  0999                     u4515:	
  5576  0999  35F4               	lslf	___wmul@multiplicand,f
  5577  099A  0DF5               	rlf	___wmul@multiplicand+1,f
  5578  099B  0B89               	decfsz	9,f
  5579  099C  2999               	goto	u4515
  5580  099D  3001               	movlw	1
  5581  099E                     u4525:	
  5582  099E  36F3               	lsrf	___wmul@multiplier+1,f
  5583  099F  0CF2               	rrf	___wmul@multiplier,f
  5584  09A0  0B89               	decfsz	9,f
  5585  09A1  299E               	goto	u4525
  5586  09A2  0872               	movf	___wmul@multiplier,w
  5587  09A3  0473               	iorwf	___wmul@multiplier+1,w
  5588  09A4  1D03               	btfss	3,2
  5589  09A5  2992               	goto	l3840
  5590  09A6  0877               	movf	___wmul@product+1,w
  5591  09A7  00F3               	movwf	?___wmul+1
  5592  09A8  0876               	movf	___wmul@product,w
  5593  09A9  00F2               	movwf	?___wmul
  5594  09AA  0008               	return
  5595  09AB                     __end_of___wmul:	
  5596                           
  5597                           	psect	text14
  5598  08CF                     __ptext14:	
  5599 ;; *************** function ___bmul *****************
  5600 ;; Defined at:
  5601 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul8.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  multiplier      1    wreg     unsigned char 
  5604 ;;  multiplicand    1    2[COMMON] unsigned char 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  multiplier      1    5[COMMON] unsigned char 
  5607 ;;  product         1    4[COMMON] unsigned char 
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  1    wreg      unsigned char 
  5610 ;; Registers used:
  5611 ;;		wreg, status,2, status,0
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5617 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5618 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5619 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5620 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5621 ;;Total ram usage:        4 bytes
  5622 ;; Hardware stack levels used:    1
  5623 ;; Hardware stack levels required when called:    1
  5624 ;; This function calls:
  5625 ;;		Nothing
  5626 ;; This function is called by:
  5627 ;;		_ten_thou_conv
  5628 ;;		_hund_conv
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           
  5633                           ;psect for function ___bmul
  5634  08CF                     ___bmul:	
  5635                           
  5636                           ;incstack = 0
  5637                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5638                           ;___bmul@multiplier stored from wreg
  5639  08CF  00F5               	movwf	___bmul@multiplier
  5640  08D0  01F4               	clrf	___bmul@product
  5641  08D1                     l3854:	
  5642  08D1  1C75               	btfss	___bmul@multiplier,0
  5643  08D2  28D7               	goto	l3858
  5644  08D3  0872               	movf	___bmul@multiplicand,w
  5645  08D4  00F3               	movwf	??___bmul
  5646  08D5  0873               	movf	??___bmul,w
  5647  08D6  07F4               	addwf	___bmul@product,f
  5648  08D7                     l3858:	
  5649  08D7  1003               	clrc
  5650  08D8  0DF2               	rlf	___bmul@multiplicand,f
  5651  08D9  1003               	clrc
  5652  08DA  0CF5               	rrf	___bmul@multiplier,f
  5653  08DB  0875               	movf	___bmul@multiplier,w
  5654  08DC  1D03               	btfss	3,2
  5655  08DD  28D1               	goto	l3854
  5656  08DE  0874               	movf	___bmul@product,w
  5657  08DF  0008               	return
  5658  08E0                     __end_of___bmul:	
  5659                           
  5660                           	psect	text15
  5661  09E9                     __ptext15:	
  5662 ;; *************** function _lcd_set_cursor *****************
  5663 ;; Defined at:
  5664 ;;		line 943 in file "Multi_RX_testjig_v1.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;  row             1    wreg     unsigned char 
  5667 ;;  col             1    3[COMMON] unsigned char 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;  row             1    5[COMMON] unsigned char 
  5670 ;;  LCD_position    1    6[COMMON] unsigned char 
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  1    wreg      void 
  5673 ;; Registers used:
  5674 ;;		wreg, status,2, status,0, pclath, cstack
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5680 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5683 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5684 ;;Total ram usage:        4 bytes
  5685 ;; Hardware stack levels used:    1
  5686 ;; Hardware stack levels required when called:    2
  5687 ;; This function calls:
  5688 ;;		_i2c_Start
  5689 ;;		_i2c_Stop
  5690 ;;		_i2c_Write
  5691 ;; This function is called by:
  5692 ;;		_lcd_print_int
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           
  5697                           ;psect for function _lcd_set_cursor
  5698  09E9                     _lcd_set_cursor:	
  5699                           
  5700                           ;incstack = 0
  5701                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  5702                           ;lcd_set_cursor@row stored from wreg
  5703  09E9  00F5               	movwf	lcd_set_cursor@row
  5704                           
  5705                           ;Multi_RX_testjig_v1.c: 945: unsigned char LCD_position = 1;
  5706  09EA  01F6               	clrf	lcd_set_cursor@LCD_position
  5707  09EB  0AF6               	incf	lcd_set_cursor@LCD_position,f
  5708                           
  5709                           ;Multi_RX_testjig_v1.c: 946: col--;
  5710  09EC  3001               	movlw	1
  5711  09ED  02F3               	subwf	lcd_set_cursor@col,f
  5712                           
  5713                           ;Multi_RX_testjig_v1.c: 947: i2c_Start();
  5714  09EE  3188  208C  3189   	fcall	_i2c_Start
  5715                           
  5716                           ;Multi_RX_testjig_v1.c: 948: i2c_Write(0x7C);
  5717  09F1  307C               	movlw	124
  5718  09F2  3188  20B1  3189   	fcall	_i2c_Write
  5719                           
  5720                           ;Multi_RX_testjig_v1.c: 949: i2c_Write(0x00);
  5721  09F5  3000               	movlw	0
  5722  09F6  3188  20B1  3189   	fcall	_i2c_Write
  5723                           
  5724                           ;Multi_RX_testjig_v1.c: 950: LCD_position = col & 0b11001111;
  5725  09F9  0873               	movf	lcd_set_cursor@col,w
  5726  09FA  39CF               	andlw	207
  5727  09FB  00F4               	movwf	??_lcd_set_cursor
  5728  09FC  0874               	movf	??_lcd_set_cursor,w
  5729  09FD  00F6               	movwf	lcd_set_cursor@LCD_position
  5730                           
  5731                           ;Multi_RX_testjig_v1.c: 951: if(row == 1)
  5732  09FE  0375               	decf	lcd_set_cursor@row,w
  5733  09FF  1D03               	btfss	3,2
  5734  0A00  2A03               	goto	l3962
  5735                           
  5736                           ;Multi_RX_testjig_v1.c: 952: LCD_position |= 0b10000000;
  5737  0A01  17F6               	bsf	lcd_set_cursor@LCD_position,7
  5738  0A02  2A07               	goto	l3964
  5739  0A03                     l3962:	
  5740                           
  5741                           ;Multi_RX_testjig_v1.c: 953: else
  5742                           ;Multi_RX_testjig_v1.c: 954: LCD_position |= 0b11000000;
  5743  0A03  30C0               	movlw	192
  5744  0A04  00F4               	movwf	??_lcd_set_cursor
  5745  0A05  0874               	movf	??_lcd_set_cursor,w
  5746  0A06  04F6               	iorwf	lcd_set_cursor@LCD_position,f
  5747  0A07                     l3964:	
  5748                           
  5749                           ;Multi_RX_testjig_v1.c: 955: i2c_Write(LCD_position);
  5750  0A07  0876               	movf	lcd_set_cursor@LCD_position,w
  5751  0A08  3188  20B1  3189   	fcall	_i2c_Write
  5752                           
  5753                           ;Multi_RX_testjig_v1.c: 956: i2c_Stop();
  5754  0A0B  3188  2091         	fcall	_i2c_Stop
  5755  0A0D  0008               	return
  5756  0A0E                     __end_of_lcd_set_cursor:	
  5757                           
  5758                           	psect	text16
  5759  08E0                     __ptext16:	
  5760 ;; *************** function _i2c_write_char *****************
  5761 ;; Defined at:
  5762 ;;		line 859 in file "Multi_RX_testjig_v1.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  char_data       1    wreg     unsigned char 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  char_data       1    3[COMMON] unsigned char 
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2, status,0, pclath, cstack
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5780 ;;Total ram usage:        1 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:    2
  5783 ;; This function calls:
  5784 ;;		_i2c_Start
  5785 ;;		_i2c_Stop
  5786 ;;		_i2c_Write
  5787 ;; This function is called by:
  5788 ;;		_lcd_print_int
  5789 ;;		_lcd_print_bar
  5790 ;;		_lcd_createChar
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           
  5795                           ;psect for function _i2c_write_char
  5796  08E0                     _i2c_write_char:	
  5797                           
  5798                           ;incstack = 0
  5799                           ; Regs used in _i2c_write_char: [wreg+status,2+status,0+pclath+cstack]
  5800                           ;i2c_write_char@char_data stored from wreg
  5801  08E0  00F3               	movwf	i2c_write_char@char_data
  5802                           
  5803                           ;Multi_RX_testjig_v1.c: 861: i2c_Start();
  5804  08E1  3188  208C  3188   	fcall	_i2c_Start
  5805                           
  5806                           ;Multi_RX_testjig_v1.c: 862: i2c_Write(0x7C);
  5807  08E4  307C               	movlw	124
  5808  08E5  3188  20B1  3188   	fcall	_i2c_Write
  5809                           
  5810                           ;Multi_RX_testjig_v1.c: 863: i2c_Write(0x40);
  5811  08E8  3040               	movlw	64
  5812  08E9  3188  20B1  3188   	fcall	_i2c_Write
  5813                           
  5814                           ;Multi_RX_testjig_v1.c: 864: i2c_Write(char_data);
  5815  08EC  0873               	movf	i2c_write_char@char_data,w
  5816  08ED  3188  20B1  3188   	fcall	_i2c_Write
  5817                           
  5818                           ;Multi_RX_testjig_v1.c: 865: i2c_Stop();
  5819  08F0  3188  2091         	fcall	_i2c_Stop
  5820  08F2  0008               	return
  5821  08F3                     __end_of_i2c_write_char:	
  5822                           
  5823                           	psect	text17
  5824  0B3D                     __ptext17:	
  5825 ;; *************** function _init_i2c_lcd_5v *****************
  5826 ;; Defined at:
  5827 ;;		line 869 in file "Multi_RX_testjig_v1.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;  contrast        1    wreg     unsigned char 
  5830 ;;  single1_doub    1    3[COMMON] unsigned char 
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;  contrast        1    5[COMMON] unsigned char 
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  1    wreg      void 
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0, pclath, cstack
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5842 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5844 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5845 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5846 ;;Total ram usage:        3 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:    2
  5849 ;; This function calls:
  5850 ;;		_i2c_Start
  5851 ;;		_i2c_Stop
  5852 ;;		_i2c_Write
  5853 ;; This function is called by:
  5854 ;;		_main
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           
  5859                           ;psect for function _init_i2c_lcd_5v
  5860  0B3D                     _init_i2c_lcd_5v:	
  5861                           
  5862                           ;incstack = 0
  5863                           ; Regs used in _init_i2c_lcd_5v: [wreg+status,2+status,0+pclath+cstack]
  5864                           ;init_i2c_lcd_5v@contrast stored from wreg
  5865  0B3D  00F5               	movwf	init_i2c_lcd_5v@contrast
  5866                           
  5867                           ;Multi_RX_testjig_v1.c: 871: i2c_Start();
  5868  0B3E  3188  208C  318B   	fcall	_i2c_Start
  5869                           
  5870                           ;Multi_RX_testjig_v1.c: 872: i2c_Write(0x7C);
  5871  0B41  307C               	movlw	124
  5872  0B42  3188  20B1  318B   	fcall	_i2c_Write
  5873                           
  5874                           ;Multi_RX_testjig_v1.c: 873: i2c_Write(0x00);
  5875  0B45  3000               	movlw	0
  5876  0B46  3188  20B1  318B   	fcall	_i2c_Write
  5877                           
  5878                           ;Multi_RX_testjig_v1.c: 874: i2c_Write(0x39);
  5879  0B49  3039               	movlw	57
  5880  0B4A  3188  20B1  318B   	fcall	_i2c_Write
  5881                           
  5882                           ;Multi_RX_testjig_v1.c: 875: i2c_Write(0x1C);
  5883  0B4D  301C               	movlw	28
  5884  0B4E  3188  20B1  318B   	fcall	_i2c_Write
  5885                           
  5886                           ;Multi_RX_testjig_v1.c: 876: i2c_Write(0x70 | contrast);
  5887  0B51  0875               	movf	init_i2c_lcd_5v@contrast,w
  5888  0B52  3870               	iorlw	112
  5889  0B53  3188  20B1  318B   	fcall	_i2c_Write
  5890                           
  5891                           ;Multi_RX_testjig_v1.c: 877: i2c_Write(0x50);
  5892  0B56  3050               	movlw	80
  5893  0B57  3188  20B1  318B   	fcall	_i2c_Write
  5894                           
  5895                           ;Multi_RX_testjig_v1.c: 878: i2c_Write(0x6C);
  5896  0B5A  306C               	movlw	108
  5897  0B5B  3188  20B1  318B   	fcall	_i2c_Write
  5898                           
  5899                           ;Multi_RX_testjig_v1.c: 879: if(single1_double2 == 1)
  5900  0B5E  0373               	decf	init_i2c_lcd_5v@single1_double2,w
  5901  0B5F  1D03               	btfss	3,2
  5902  0B60  2B65               	goto	l4216
  5903                           
  5904                           ;Multi_RX_testjig_v1.c: 880: i2c_Write(0x38);
  5905  0B61  3038               	movlw	56
  5906  0B62  3188  20B1  318B   	fcall	_i2c_Write
  5907  0B65                     l4216:	
  5908                           
  5909                           ;Multi_RX_testjig_v1.c: 881: if(single1_double2 == 2)
  5910  0B65  3002               	movlw	2
  5911  0B66  0673               	xorwf	init_i2c_lcd_5v@single1_double2,w
  5912  0B67  1D03               	btfss	3,2
  5913  0B68  2B6D               	goto	l443
  5914                           
  5915                           ;Multi_RX_testjig_v1.c: 882: i2c_Write(0x34);
  5916  0B69  3034               	movlw	52
  5917  0B6A  3188  20B1  318B   	fcall	_i2c_Write
  5918  0B6D                     l443:	
  5919                           
  5920                           ;Multi_RX_testjig_v1.c: 883: i2c_Write(0x0C);
  5921  0B6D  300C               	movlw	12
  5922  0B6E  3188  20B1  318B   	fcall	_i2c_Write
  5923                           
  5924                           ;Multi_RX_testjig_v1.c: 884: i2c_Write(0x06);
  5925  0B71  3006               	movlw	6
  5926  0B72  3188  20B1  318B   	fcall	_i2c_Write
  5927                           
  5928                           ;Multi_RX_testjig_v1.c: 885: i2c_Write(0x01);
  5929  0B75  3001               	movlw	1
  5930  0B76  3188  20B1  318B   	fcall	_i2c_Write
  5931                           
  5932                           ;Multi_RX_testjig_v1.c: 886: _delay((unsigned long)((2)*(16000000/4000.0)));
  5933  0B79  300B               	movlw	11
  5934  0B7A  00F4               	movwf	??_init_i2c_lcd_5v
  5935  0B7B  3062               	movlw	98
  5936  0B7C                     u6727:	
  5937  0B7C  0B89               	decfsz	9,f
  5938  0B7D  2B7C               	goto	u6727
  5939  0B7E  0BF4               	decfsz	??_init_i2c_lcd_5v,f
  5940  0B7F  2B7C               	goto	u6727
  5941  0B80  3200               	nop2
  5942                           
  5943                           ;Multi_RX_testjig_v1.c: 887: i2c_Stop();
  5944  0B81  3188  2091         	fcall	_i2c_Stop
  5945  0B83  0008               	return
  5946  0B84                     __end_of_init_i2c_lcd_5v:	
  5947                           
  5948                           	psect	text18
  5949  095E                     __ptext18:	
  5950 ;; *************** function _init_i2c *****************
  5951 ;; Defined at:
  5952 ;;		line 1645 in file "Multi_RX_testjig_v1.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;		None
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;		None
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  1    wreg      void 
  5959 ;; Registers used:
  5960 ;;		wreg
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5968 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5970 ;;Total ram usage:        2 bytes
  5971 ;; Hardware stack levels used:    1
  5972 ;; Hardware stack levels required when called:    1
  5973 ;; This function calls:
  5974 ;;		Nothing
  5975 ;; This function is called by:
  5976 ;;		_main
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           
  5981                           ;psect for function _init_i2c
  5982  095E                     _init_i2c:	
  5983                           
  5984                           ;Multi_RX_testjig_v1.c: 1647: RA5 = 1;
  5985                           
  5986                           ;incstack = 0
  5987                           ; Regs used in _init_i2c: [wreg]
  5988  095E  0020               	movlb	0	; select bank0
  5989  095F  168C               	bsf	12,5	;volatile
  5990                           
  5991                           ;Multi_RX_testjig_v1.c: 1648: _delay((unsigned long)((200)*(16000000/4000.0)));
  5992  0960  3005               	movlw	5
  5993  0961  00F3               	movwf	??_init_i2c+1
  5994  0962  300F               	movlw	15
  5995  0963  00F2               	movwf	??_init_i2c
  5996  0964  30F1               	movlw	241
  5997  0965                     u6737:	
  5998  0965  0B89               	decfsz	9,f
  5999  0966  2965               	goto	u6737
  6000  0967  0BF2               	decfsz	??_init_i2c,f
  6001  0968  2965               	goto	u6737
  6002  0969  0BF3               	decfsz	??_init_i2c+1,f
  6003  096A  2965               	goto	u6737
  6004  096B  0000               	nop
  6005                           
  6006                           ;Multi_RX_testjig_v1.c: 1649: TRISC3 = 1;
  6007  096C  0021               	movlb	1	; select bank1
  6008  096D  158E               	bsf	14,3	;volatile
  6009                           
  6010                           ;Multi_RX_testjig_v1.c: 1650: TRISC4 = 1;
  6011  096E  160E               	bsf	14,4	;volatile
  6012                           
  6013                           ;Multi_RX_testjig_v1.c: 1651: SSP1STAT |= 0x80;
  6014  096F  0024               	movlb	4	; select bank4
  6015  0970  1794               	bsf	20,7	;volatile
  6016                           
  6017                           ;Multi_RX_testjig_v1.c: 1652: SSP1CON1 = 0x28;
  6018  0971  3028               	movlw	40
  6019  0972  0095               	movwf	21	;volatile
  6020                           
  6021                           ;Multi_RX_testjig_v1.c: 1653: SSP1ADD = 0x14;
  6022  0973  3014               	movlw	20
  6023  0974  0092               	movwf	18	;volatile
  6024  0975  0008               	return
  6025  0976                     __end_of_init_i2c:	
  6026                           
  6027                           	psect	text19
  6028  0908                     __ptext19:	
  6029 ;; *************** function _init_current_sink *****************
  6030 ;; Defined at:
  6031 ;;		line 1674 in file "Multi_RX_testjig_v1.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;		None
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;		None
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1    wreg      void 
  6038 ;; Registers used:
  6039 ;;		wreg, status,2
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6049 ;;Total ram usage:        0 bytes
  6050 ;; Hardware stack levels used:    1
  6051 ;; Hardware stack levels required when called:    1
  6052 ;; This function calls:
  6053 ;;		Nothing
  6054 ;; This function is called by:
  6055 ;;		_main
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           
  6060                           ;psect for function _init_current_sink
  6061  0908                     _init_current_sink:	
  6062                           
  6063                           ;Multi_RX_testjig_v1.c: 1676: T2CON = 0b00000110;
  6064                           
  6065                           ;incstack = 0
  6066                           ; Regs used in _init_current_sink: [wreg+status,2]
  6067  0908  3006               	movlw	6
  6068  0909  0020               	movlb	0	; select bank0
  6069  090A  009C               	movwf	28	;volatile
  6070                           
  6071                           ;Multi_RX_testjig_v1.c: 1677: PR2 = 0xFA;
  6072  090B  30FA               	movlw	250
  6073  090C  009B               	movwf	27	;volatile
  6074                           
  6075                           ;Multi_RX_testjig_v1.c: 1678: PIE1bits.TMR2IE = 1;
  6076  090D  0021               	movlb	1	; select bank1
  6077  090E  1491               	bsf	17,1	;volatile
  6078                           
  6079                           ;Multi_RX_testjig_v1.c: 1680: T8CON = 0b00000100;
  6080  090F  3004               	movlw	4
  6081  0910  002B               	movlb	11	; select bank11
  6082  0911  0097               	movwf	23	;volatile
  6083                           
  6084                           ;Multi_RX_testjig_v1.c: 1681: PR8 = 0xFF;
  6085  0912  30FF               	movlw	255
  6086  0913  0096               	movwf	22	;volatile
  6087                           
  6088                           ;Multi_RX_testjig_v1.c: 1682: CCP9CON = 0b00001100;
  6089  0914  300C               	movlw	12
  6090  0915  002C               	movlb	12	; select bank12
  6091  0916  009C               	movwf	28	;volatile
  6092                           
  6093                           ;Multi_RX_testjig_v1.c: 1683: CCPTMRS2 = 0b00000001;
  6094  0917  3001               	movlw	1
  6095  0918  0025               	movlb	5	; select bank5
  6096  0919  009F               	movwf	31	;volatile
  6097                           
  6098                           ;Multi_RX_testjig_v1.c: 1684: CCPR9L = 0x00;
  6099  091A  002C               	movlb	12	; select bank12
  6100  091B  019A               	clrf	26	;volatile
  6101  091C  0008               	return
  6102  091D                     __end_of_init_current_sink:	
  6103                           
  6104                           	psect	text20
  6105  08A2                     __ptext20:	
  6106 ;; *************** function _init_ADC *****************
  6107 ;; Defined at:
  6108 ;;		line 1656 in file "Multi_RX_testjig_v1.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;		None
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;		None
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  1    wreg      void 
  6115 ;; Registers used:
  6116 ;;		wreg
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6126 ;;Total ram usage:        0 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; Hardware stack levels required when called:    1
  6129 ;; This function calls:
  6130 ;;		Nothing
  6131 ;; This function is called by:
  6132 ;;		_main
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           
  6137                           ;psect for function _init_ADC
  6138  08A2                     _init_ADC:	
  6139                           
  6140                           ;Multi_RX_testjig_v1.c: 1658: FVRCON = 0b10000011;
  6141                           
  6142                           ;incstack = 0
  6143                           ; Regs used in _init_ADC: [wreg]
  6144  08A2  3083               	movlw	131
  6145  08A3  0022               	movlb	2	; select bank2
  6146  08A4  0097               	movwf	23	;volatile
  6147                           
  6148                           ;Multi_RX_testjig_v1.c: 1660: ADCON1 = 0b10100011;
  6149  08A5  30A3               	movlw	163
  6150  08A6  0021               	movlb	1	; select bank1
  6151  08A7  009E               	movwf	30	;volatile
  6152  08A8  0008               	return
  6153  08A9                     __end_of_init_ADC:	
  6154                           
  6155                           	psect	text21
  6156  0B84                     __ptext21:	
  6157 ;; *************** function _get_30v_current *****************
  6158 ;; Defined at:
  6159 ;;		line 1714 in file "Multi_RX_testjig_v1.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;		None
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;  temp            2   49[BANK0 ] unsigned int 
  6164 ;; Return value:  Size  Location     Type
  6165 ;;                  2   47[BANK0 ] unsigned int 
  6166 ;; Registers used:
  6167 ;;		wreg, status,2, status,0, pclath, cstack
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6174 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6176 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6177 ;;Total ram usage:        4 bytes
  6178 ;; Hardware stack levels used:    1
  6179 ;; Hardware stack levels required when called:    3
  6180 ;; This function calls:
  6181 ;;		_ADC_get_val
  6182 ;;		___ftadd
  6183 ;;		___ftmul
  6184 ;;		___fttol
  6185 ;;		___lwtoft
  6186 ;; This function is called by:
  6187 ;;		_main
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           
  6192                           ;psect for function _get_30v_current
  6193  0B84                     _get_30v_current:	
  6194                           
  6195                           ;Multi_RX_testjig_v1.c: 1716: unsigned int temp;
  6196                           ;Multi_RX_testjig_v1.c: 1717: temp = ADC_get_val(0b01010011);
  6197                           
  6198                           ;incstack = 0
  6199                           ; Regs used in _get_30v_current: [wreg+status,2+status,0+pclath+cstack]
  6200  0B84  3053               	movlw	83
  6201  0B85  3188  20BE  318B   	fcall	_ADC_get_val
  6202  0B88  0873               	movf	?_ADC_get_val+1,w
  6203  0B89  0020               	movlb	0	; select bank0
  6204  0B8A  00D2               	movwf	get_30v_current@temp+1
  6205  0B8B  0872               	movf	?_ADC_get_val,w
  6206  0B8C  00D1               	movwf	get_30v_current@temp
  6207                           
  6208                           ;Multi_RX_testjig_v1.c: 1718: if(temp > 4)
  6209  0B8D  3000               	movlw	0
  6210  0B8E  0252               	subwf	get_30v_current@temp+1,w
  6211  0B8F  3005               	movlw	5
  6212  0B90  1903               	skipnz
  6213  0B91  0251               	subwf	get_30v_current@temp,w
  6214  0B92  1C03               	skipc
  6215  0B93  2BCA               	goto	l4398
  6216                           
  6217                           ;Multi_RX_testjig_v1.c: 1719: return ( temp * 3.4) - 16;
  6218  0B94  0852               	movf	get_30v_current@temp+1,w
  6219  0B95  00A1               	movwf	___lwtoft@c+1
  6220  0B96  0851               	movf	get_30v_current@temp,w
  6221  0B97  00A0               	movwf	___lwtoft@c
  6222  0B98  3188  20F3  318B   	fcall	___lwtoft
  6223  0B9B  0020               	movlb	0	; select bank0
  6224  0B9C  0820               	movf	?___lwtoft,w
  6225  0B9D  00A7               	movwf	___ftmul@f2
  6226  0B9E  0821               	movf	?___lwtoft+1,w
  6227  0B9F  00A8               	movwf	___ftmul@f2+1
  6228  0BA0  0822               	movf	?___lwtoft+2,w
  6229  0BA1  00A9               	movwf	___ftmul@f2+2
  6230  0BA2  309A               	movlw	154
  6231  0BA3  00A4               	movwf	___ftmul@f1
  6232  0BA4  3059               	movlw	89
  6233  0BA5  00A5               	movwf	___ftmul@f1+1
  6234  0BA6  3040               	movlw	64
  6235  0BA7  00A6               	movwf	___ftmul@f1+2
  6236  0BA8  318D  2593  318B   	fcall	___ftmul
  6237  0BAB  0020               	movlb	0	; select bank0
  6238  0BAC  0824               	movf	?___ftmul,w
  6239  0BAD  00B7               	movwf	___ftadd@f2
  6240  0BAE  0825               	movf	?___ftmul+1,w
  6241  0BAF  00B8               	movwf	___ftadd@f2+1
  6242  0BB0  0826               	movf	?___ftmul+2,w
  6243  0BB1  00B9               	movwf	___ftadd@f2+2
  6244  0BB2  3000               	movlw	0
  6245  0BB3  00B4               	movwf	___ftadd@f1
  6246  0BB4  3080               	movlw	128
  6247  0BB5  00B5               	movwf	___ftadd@f1+1
  6248  0BB6  30C1               	movlw	193
  6249  0BB7  00B6               	movwf	___ftadd@f1+2
  6250  0BB8  318F  270A  318B   	fcall	___ftadd
  6251  0BBB  0020               	movlb	0	; select bank0
  6252  0BBC  0834               	movf	?___ftadd,w
  6253  0BBD  00C1               	movwf	___fttol@f1
  6254  0BBE  0835               	movf	?___ftadd+1,w
  6255  0BBF  00C2               	movwf	___fttol@f1+1
  6256  0BC0  0836               	movf	?___ftadd+2,w
  6257  0BC1  00C3               	movwf	___fttol@f1+2
  6258  0BC2  318D  250C         	fcall	___fttol
  6259  0BC4  0020               	movlb	0	; select bank0
  6260  0BC5  0842               	movf	?___fttol+1,w
  6261  0BC6  00D0               	movwf	?_get_30v_current+1
  6262  0BC7  0841               	movf	?___fttol,w
  6263  0BC8  00CF               	movwf	?_get_30v_current
  6264  0BC9  0008               	return
  6265  0BCA                     l4398:	
  6266                           
  6267                           ;Multi_RX_testjig_v1.c: 1720: else
  6268                           ;Multi_RX_testjig_v1.c: 1721: return 0;
  6269  0BCA  01CF               	clrf	?_get_30v_current
  6270  0BCB  01D0               	clrf	?_get_30v_current+1
  6271  0BCC  0008               	return
  6272  0BCD                     __end_of_get_30v_current:	
  6273                           
  6274                           	psect	text22
  6275  08F3                     __ptext22:	
  6276 ;; *************** function ___lwtoft *****************
  6277 ;; Defined at:
  6278 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwtoft.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  c               2    0[BANK0 ] unsigned int 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;		None
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  3    0[BANK0 ] float 
  6285 ;; Registers used:
  6286 ;;		wreg, status,2, status,0, pclath, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6292 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6294 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6295 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6296 ;;Total ram usage:        4 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:    2
  6299 ;; This function calls:
  6300 ;;		___ftpack
  6301 ;; This function is called by:
  6302 ;;		_get_30v_current
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           
  6307                           ;psect for function ___lwtoft
  6308  08F3                     ___lwtoft:	
  6309                           
  6310                           ;incstack = 0
  6311                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6312  08F3  0020               	movlb	0	; select bank0
  6313  08F4  0820               	movf	___lwtoft@c,w
  6314  08F5  00F2               	movwf	___ftpack@arg
  6315  08F6  0821               	movf	___lwtoft@c+1,w
  6316  08F7  00F3               	movwf	___ftpack@arg+1
  6317  08F8  01F4               	clrf	___ftpack@arg+2
  6318  08F9  308E               	movlw	142
  6319  08FA  00A3               	movwf	??___lwtoft
  6320  08FB  0823               	movf	??___lwtoft,w
  6321  08FC  00F5               	movwf	___ftpack@exp
  6322  08FD  01F6               	clrf	___ftpack@sign
  6323  08FE  318C  2423         	fcall	___ftpack
  6324  0900  0872               	movf	?___ftpack,w
  6325  0901  0020               	movlb	0	; select bank0
  6326  0902  00A0               	movwf	?___lwtoft
  6327  0903  0873               	movf	?___ftpack+1,w
  6328  0904  00A1               	movwf	?___lwtoft+1
  6329  0905  0874               	movf	?___ftpack+2,w
  6330  0906  00A2               	movwf	?___lwtoft+2
  6331  0907  0008               	return
  6332  0908                     __end_of___lwtoft:	
  6333                           
  6334                           	psect	text23
  6335  0D0C                     __ptext23:	
  6336 ;; *************** function ___fttol *****************
  6337 ;; Defined at:
  6338 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;  f1              3   33[BANK0 ] float 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;  lval            4   42[BANK0 ] unsigned long 
  6343 ;;  exp1            1   46[BANK0 ] unsigned char 
  6344 ;;  sign1           1   41[BANK0 ] unsigned char 
  6345 ;; Return value:  Size  Location     Type
  6346 ;;                  4   33[BANK0 ] long 
  6347 ;; Registers used:
  6348 ;;		wreg, status,2, status,0
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6354 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6355 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6356 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6357 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6358 ;;Total ram usage:       14 bytes
  6359 ;; Hardware stack levels used:    1
  6360 ;; Hardware stack levels required when called:    1
  6361 ;; This function calls:
  6362 ;;		Nothing
  6363 ;; This function is called by:
  6364 ;;		_get_30v_current
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           
  6369                           ;psect for function ___fttol
  6370  0D0C                     ___fttol:	
  6371                           
  6372                           ;incstack = 0
  6373                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6374  0D0C  0020               	movlb	0	; select bank0
  6375  0D0D  0841               	movf	___fttol@f1,w
  6376  0D0E  00C5               	movwf	??___fttol
  6377  0D0F  0842               	movf	___fttol@f1+1,w
  6378  0D10  00C6               	movwf	??___fttol+1
  6379  0D11  0843               	movf	___fttol@f1+2,w
  6380  0D12  00C7               	movwf	??___fttol+2
  6381  0D13  1003               	clrc
  6382  0D14  0D46               	rlf	??___fttol+1,w
  6383  0D15  0D47               	rlf	??___fttol+2,w
  6384  0D16  00C8               	movwf	??___fttol+3
  6385  0D17  0848               	movf	??___fttol+3,w
  6386  0D18  00CE               	movwf	___fttol@exp1
  6387  0D19  084E               	movf	___fttol@exp1,w
  6388  0D1A  1D03               	btfss	3,2
  6389  0D1B  2D25               	goto	l4138
  6390  0D1C  3000               	movlw	0
  6391  0D1D  00C4               	movwf	?___fttol+3
  6392  0D1E  3000               	movlw	0
  6393  0D1F  00C3               	movwf	?___fttol+2
  6394  0D20  3000               	movlw	0
  6395  0D21  00C2               	movwf	?___fttol+1
  6396  0D22  3000               	movlw	0
  6397  0D23  00C1               	movwf	?___fttol
  6398  0D24  0008               	return
  6399  0D25                     l4138:	
  6400  0D25  0841               	movf	___fttol@f1,w
  6401  0D26  00C5               	movwf	??___fttol
  6402  0D27  0842               	movf	___fttol@f1+1,w
  6403  0D28  00C6               	movwf	??___fttol+1
  6404  0D29  0843               	movf	___fttol@f1+2,w
  6405  0D2A  00C7               	movwf	??___fttol+2
  6406  0D2B  3017               	movlw	23
  6407  0D2C                     u5175:	
  6408  0D2C  36C7               	lsrf	??___fttol+2,f
  6409  0D2D  0CC6               	rrf	??___fttol+1,f
  6410  0D2E  0CC5               	rrf	??___fttol,f
  6411  0D2F  0B89               	decfsz	9,f
  6412  0D30  2D2C               	goto	u5175
  6413  0D31  0845               	movf	??___fttol,w
  6414  0D32  00C8               	movwf	??___fttol+3
  6415  0D33  0848               	movf	??___fttol+3,w
  6416  0D34  00C9               	movwf	___fttol@sign1
  6417  0D35  17C2               	bsf	___fttol@f1+1,7
  6418  0D36  30FF               	movlw	255
  6419  0D37  05C1               	andwf	___fttol@f1,f
  6420  0D38  30FF               	movlw	255
  6421  0D39  05C2               	andwf	___fttol@f1+1,f
  6422  0D3A  3000               	movlw	0
  6423  0D3B  05C3               	andwf	___fttol@f1+2,f
  6424  0D3C  0841               	movf	___fttol@f1,w
  6425  0D3D  00CA               	movwf	___fttol@lval
  6426  0D3E  0842               	movf	___fttol@f1+1,w
  6427  0D3F  00CB               	movwf	___fttol@lval+1
  6428  0D40  0843               	movf	___fttol@f1+2,w
  6429  0D41  00CC               	movwf	___fttol@lval+2
  6430  0D42  01CD               	clrf	___fttol@lval+3
  6431  0D43  308E               	movlw	142
  6432  0D44  02CE               	subwf	___fttol@exp1,f
  6433  0D45  1FCE               	btfss	___fttol@exp1,7
  6434  0D46  2D63               	goto	l4158
  6435  0D47  084E               	movf	___fttol@exp1,w
  6436  0D48  3A80               	xorlw	128
  6437  0D49  3E8F               	addlw	143
  6438  0D4A  1803               	skipnc
  6439  0D4B  2D55               	goto	l4156
  6440  0D4C  3000               	movlw	0
  6441  0D4D  00C4               	movwf	?___fttol+3
  6442  0D4E  3000               	movlw	0
  6443  0D4F  00C3               	movwf	?___fttol+2
  6444  0D50  3000               	movlw	0
  6445  0D51  00C2               	movwf	?___fttol+1
  6446  0D52  3000               	movlw	0
  6447  0D53  00C1               	movwf	?___fttol
  6448  0D54  0008               	return
  6449  0D55                     l4156:	
  6450  0D55  3001               	movlw	1
  6451  0D56                     u5205:	
  6452  0D56  36CD               	lsrf	___fttol@lval+3,f
  6453  0D57  0CCC               	rrf	___fttol@lval+2,f
  6454  0D58  0CCB               	rrf	___fttol@lval+1,f
  6455  0D59  0CCA               	rrf	___fttol@lval,f
  6456  0D5A  0B89               	decfsz	9,f
  6457  0D5B  2D56               	goto	u5205
  6458  0D5C  3001               	movlw	1
  6459  0D5D  00C5               	movwf	??___fttol
  6460  0D5E  0845               	movf	??___fttol,w
  6461  0D5F  07CE               	addwf	___fttol@exp1,f
  6462  0D60  1903               	btfsc	3,2
  6463  0D61  2D7C               	goto	l4166
  6464  0D62  2D55               	goto	l4156
  6465  0D63                     l4158:	
  6466  0D63  3018               	movlw	24
  6467  0D64  024E               	subwf	___fttol@exp1,w
  6468  0D65  1C03               	skipc
  6469  0D66  2D79               	goto	l912
  6470  0D67  3000               	movlw	0
  6471  0D68  00C4               	movwf	?___fttol+3
  6472  0D69  3000               	movlw	0
  6473  0D6A  00C3               	movwf	?___fttol+2
  6474  0D6B  3000               	movlw	0
  6475  0D6C  00C2               	movwf	?___fttol+1
  6476  0D6D  3000               	movlw	0
  6477  0D6E  00C1               	movwf	?___fttol
  6478  0D6F  0008               	return
  6479  0D70                     l4164:	
  6480  0D70  3001               	movlw	1
  6481  0D71                     u5235:	
  6482  0D71  35CA               	lslf	___fttol@lval,f
  6483  0D72  0DCB               	rlf	___fttol@lval+1,f
  6484  0D73  0DCC               	rlf	___fttol@lval+2,f
  6485  0D74  0DCD               	rlf	___fttol@lval+3,f
  6486  0D75  0B89               	decfsz	9,f
  6487  0D76  2D71               	goto	u5235
  6488  0D77  3001               	movlw	1
  6489  0D78  02CE               	subwf	___fttol@exp1,f
  6490  0D79                     l912:	
  6491  0D79  084E               	movf	___fttol@exp1,w
  6492  0D7A  1D03               	btfss	3,2
  6493  0D7B  2D70               	goto	l4164
  6494  0D7C                     l4166:	
  6495  0D7C  0849               	movf	___fttol@sign1,w
  6496  0D7D  1903               	btfsc	3,2
  6497  0D7E  2D8A               	goto	l4170
  6498  0D7F  09CA               	comf	___fttol@lval,f
  6499  0D80  09CB               	comf	___fttol@lval+1,f
  6500  0D81  09CC               	comf	___fttol@lval+2,f
  6501  0D82  09CD               	comf	___fttol@lval+3,f
  6502  0D83  0ACA               	incf	___fttol@lval,f
  6503  0D84  1903               	skipnz
  6504  0D85  0ACB               	incf	___fttol@lval+1,f
  6505  0D86  1903               	skipnz
  6506  0D87  0ACC               	incf	___fttol@lval+2,f
  6507  0D88  1903               	skipnz
  6508  0D89  0ACD               	incf	___fttol@lval+3,f
  6509  0D8A                     l4170:	
  6510  0D8A  084D               	movf	___fttol@lval+3,w
  6511  0D8B  00C4               	movwf	?___fttol+3
  6512  0D8C  084C               	movf	___fttol@lval+2,w
  6513  0D8D  00C3               	movwf	?___fttol+2
  6514  0D8E  084B               	movf	___fttol@lval+1,w
  6515  0D8F  00C2               	movwf	?___fttol+1
  6516  0D90  084A               	movf	___fttol@lval,w
  6517  0D91  00C1               	movwf	?___fttol
  6518  0D92  0008               	return
  6519  0D93                     __end_of___fttol:	
  6520                           
  6521                           	psect	text24
  6522  0D93                     __ptext24:	
  6523 ;; *************** function ___ftmul *****************
  6524 ;; Defined at:
  6525 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;  f1              3    4[BANK0 ] float 
  6528 ;;  f2              3    7[BANK0 ] float 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  f3_as_produc    3   15[BANK0 ] unsigned um
  6531 ;;  sign            1   19[BANK0 ] unsigned char 
  6532 ;;  cntr            1   18[BANK0 ] unsigned char 
  6533 ;;  exp             1   14[BANK0 ] unsigned char 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  3    4[BANK0 ] float 
  6536 ;; Registers used:
  6537 ;;		wreg, status,2, status,0, pclath, cstack
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6543 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6544 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6545 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6546 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6547 ;;Total ram usage:       16 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; Hardware stack levels required when called:    2
  6550 ;; This function calls:
  6551 ;;		___ftpack
  6552 ;; This function is called by:
  6553 ;;		_get_30v_current
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           
  6558                           ;psect for function ___ftmul
  6559  0D93                     ___ftmul:	
  6560                           
  6561                           ;incstack = 0
  6562                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6563  0D93  0020               	movlb	0	; select bank0
  6564  0D94  0824               	movf	___ftmul@f1,w
  6565  0D95  00AA               	movwf	??___ftmul
  6566  0D96  0825               	movf	___ftmul@f1+1,w
  6567  0D97  00AB               	movwf	??___ftmul+1
  6568  0D98  0826               	movf	___ftmul@f1+2,w
  6569  0D99  00AC               	movwf	??___ftmul+2
  6570  0D9A  1003               	clrc
  6571  0D9B  0D2B               	rlf	??___ftmul+1,w
  6572  0D9C  0D2C               	rlf	??___ftmul+2,w
  6573  0D9D  00AD               	movwf	??___ftmul+3
  6574  0D9E  082D               	movf	??___ftmul+3,w
  6575  0D9F  00AE               	movwf	___ftmul@exp
  6576  0DA0  082E               	movf	___ftmul@exp,w
  6577  0DA1  1D03               	btfss	3,2
  6578  0DA2  2DAA               	goto	l4088
  6579  0DA3  3000               	movlw	0
  6580  0DA4  00A4               	movwf	?___ftmul
  6581  0DA5  3000               	movlw	0
  6582  0DA6  00A5               	movwf	?___ftmul+1
  6583  0DA7  3000               	movlw	0
  6584  0DA8  00A6               	movwf	?___ftmul+2
  6585  0DA9  0008               	return
  6586  0DAA                     l4088:	
  6587  0DAA  0827               	movf	___ftmul@f2,w
  6588  0DAB  00AA               	movwf	??___ftmul
  6589  0DAC  0828               	movf	___ftmul@f2+1,w
  6590  0DAD  00AB               	movwf	??___ftmul+1
  6591  0DAE  0829               	movf	___ftmul@f2+2,w
  6592  0DAF  00AC               	movwf	??___ftmul+2
  6593  0DB0  1003               	clrc
  6594  0DB1  0D2B               	rlf	??___ftmul+1,w
  6595  0DB2  0D2C               	rlf	??___ftmul+2,w
  6596  0DB3  00AD               	movwf	??___ftmul+3
  6597  0DB4  082D               	movf	??___ftmul+3,w
  6598  0DB5  00B3               	movwf	___ftmul@sign
  6599  0DB6  0833               	movf	___ftmul@sign,w
  6600  0DB7  1D03               	btfss	3,2
  6601  0DB8  2DC0               	goto	l4094
  6602  0DB9  3000               	movlw	0
  6603  0DBA  00A4               	movwf	?___ftmul
  6604  0DBB  3000               	movlw	0
  6605  0DBC  00A5               	movwf	?___ftmul+1
  6606  0DBD  3000               	movlw	0
  6607  0DBE  00A6               	movwf	?___ftmul+2
  6608  0DBF  0008               	return
  6609  0DC0                     l4094:	
  6610  0DC0  0833               	movf	___ftmul@sign,w
  6611  0DC1  3E7B               	addlw	123
  6612  0DC2  00AA               	movwf	??___ftmul
  6613  0DC3  082A               	movf	??___ftmul,w
  6614  0DC4  07AE               	addwf	___ftmul@exp,f
  6615  0DC5  0824               	movf	___ftmul@f1,w
  6616  0DC6  00AA               	movwf	??___ftmul
  6617  0DC7  0825               	movf	___ftmul@f1+1,w
  6618  0DC8  00AB               	movwf	??___ftmul+1
  6619  0DC9  0826               	movf	___ftmul@f1+2,w
  6620  0DCA  00AC               	movwf	??___ftmul+2
  6621  0DCB  3010               	movlw	16
  6622  0DCC                     u5065:	
  6623  0DCC  36AC               	lsrf	??___ftmul+2,f
  6624  0DCD  0CAB               	rrf	??___ftmul+1,f
  6625  0DCE  0CAA               	rrf	??___ftmul,f
  6626  0DCF  0B89               	decfsz	9,f
  6627  0DD0  2DCC               	goto	u5065
  6628  0DD1  082A               	movf	??___ftmul,w
  6629  0DD2  00AD               	movwf	??___ftmul+3
  6630  0DD3  082D               	movf	??___ftmul+3,w
  6631  0DD4  00B3               	movwf	___ftmul@sign
  6632  0DD5  0827               	movf	___ftmul@f2,w
  6633  0DD6  00AA               	movwf	??___ftmul
  6634  0DD7  0828               	movf	___ftmul@f2+1,w
  6635  0DD8  00AB               	movwf	??___ftmul+1
  6636  0DD9  0829               	movf	___ftmul@f2+2,w
  6637  0DDA  00AC               	movwf	??___ftmul+2
  6638  0DDB  3010               	movlw	16
  6639  0DDC                     u5075:	
  6640  0DDC  36AC               	lsrf	??___ftmul+2,f
  6641  0DDD  0CAB               	rrf	??___ftmul+1,f
  6642  0DDE  0CAA               	rrf	??___ftmul,f
  6643  0DDF  0B89               	decfsz	9,f
  6644  0DE0  2DDC               	goto	u5075
  6645  0DE1  082A               	movf	??___ftmul,w
  6646  0DE2  00AD               	movwf	??___ftmul+3
  6647  0DE3  082D               	movf	??___ftmul+3,w
  6648  0DE4  06B3               	xorwf	___ftmul@sign,f
  6649  0DE5  3080               	movlw	128
  6650  0DE6  00AA               	movwf	??___ftmul
  6651  0DE7  082A               	movf	??___ftmul,w
  6652  0DE8  05B3               	andwf	___ftmul@sign,f
  6653  0DE9  17A5               	bsf	___ftmul@f1+1,7
  6654  0DEA  17A8               	bsf	___ftmul@f2+1,7
  6655  0DEB  30FF               	movlw	255
  6656  0DEC  05A7               	andwf	___ftmul@f2,f
  6657  0DED  30FF               	movlw	255
  6658  0DEE  05A8               	andwf	___ftmul@f2+1,f
  6659  0DEF  3000               	movlw	0
  6660  0DF0  05A9               	andwf	___ftmul@f2+2,f
  6661  0DF1  3000               	movlw	0
  6662  0DF2  00AF               	movwf	___ftmul@f3_as_product
  6663  0DF3  3000               	movlw	0
  6664  0DF4  00B0               	movwf	___ftmul@f3_as_product+1
  6665  0DF5  3000               	movlw	0
  6666  0DF6  00B1               	movwf	___ftmul@f3_as_product+2
  6667  0DF7  3007               	movlw	7
  6668  0DF8  00AA               	movwf	??___ftmul
  6669  0DF9  082A               	movf	??___ftmul,w
  6670  0DFA  00B2               	movwf	___ftmul@cntr
  6671  0DFB                     l4106:	
  6672  0DFB  1C24               	btfss	___ftmul@f1,0
  6673  0DFC  2E03               	goto	l4110
  6674  0DFD  0827               	movf	___ftmul@f2,w
  6675  0DFE  07AF               	addwf	___ftmul@f3_as_product,f
  6676  0DFF  0828               	movf	___ftmul@f2+1,w
  6677  0E00  3DB0               	addwfc	___ftmul@f3_as_product+1,f
  6678  0E01  0829               	movf	___ftmul@f2+2,w
  6679  0E02  3DB1               	addwfc	___ftmul@f3_as_product+2,f
  6680  0E03                     l4110:	
  6681  0E03  3001               	movlw	1
  6682  0E04                     u5095:	
  6683  0E04  36A6               	lsrf	___ftmul@f1+2,f
  6684  0E05  0CA5               	rrf	___ftmul@f1+1,f
  6685  0E06  0CA4               	rrf	___ftmul@f1,f
  6686  0E07  0B89               	decfsz	9,f
  6687  0E08  2E04               	goto	u5095
  6688  0E09  3001               	movlw	1
  6689  0E0A                     u5105:	
  6690  0E0A  35A7               	lslf	___ftmul@f2,f
  6691  0E0B  0DA8               	rlf	___ftmul@f2+1,f
  6692  0E0C  0DA9               	rlf	___ftmul@f2+2,f
  6693  0E0D  0B89               	decfsz	9,f
  6694  0E0E  2E0A               	goto	u5105
  6695  0E0F  3001               	movlw	1
  6696  0E10  02B2               	subwf	___ftmul@cntr,f
  6697  0E11  1D03               	btfss	3,2
  6698  0E12  2DFB               	goto	l4106
  6699  0E13  3009               	movlw	9
  6700  0E14  00AA               	movwf	??___ftmul
  6701  0E15  082A               	movf	??___ftmul,w
  6702  0E16  00B2               	movwf	___ftmul@cntr
  6703  0E17                     l4118:	
  6704  0E17  1C24               	btfss	___ftmul@f1,0
  6705  0E18  2E1F               	goto	l4122
  6706  0E19  0827               	movf	___ftmul@f2,w
  6707  0E1A  07AF               	addwf	___ftmul@f3_as_product,f
  6708  0E1B  0828               	movf	___ftmul@f2+1,w
  6709  0E1C  3DB0               	addwfc	___ftmul@f3_as_product+1,f
  6710  0E1D  0829               	movf	___ftmul@f2+2,w
  6711  0E1E  3DB1               	addwfc	___ftmul@f3_as_product+2,f
  6712  0E1F                     l4122:	
  6713  0E1F  3001               	movlw	1
  6714  0E20                     u5135:	
  6715  0E20  36A6               	lsrf	___ftmul@f1+2,f
  6716  0E21  0CA5               	rrf	___ftmul@f1+1,f
  6717  0E22  0CA4               	rrf	___ftmul@f1,f
  6718  0E23  0B89               	decfsz	9,f
  6719  0E24  2E20               	goto	u5135
  6720  0E25  3001               	movlw	1
  6721  0E26                     u5145:	
  6722  0E26  36B1               	lsrf	___ftmul@f3_as_product+2,f
  6723  0E27  0CB0               	rrf	___ftmul@f3_as_product+1,f
  6724  0E28  0CAF               	rrf	___ftmul@f3_as_product,f
  6725  0E29  0B89               	decfsz	9,f
  6726  0E2A  2E26               	goto	u5145
  6727  0E2B  3001               	movlw	1
  6728  0E2C  02B2               	subwf	___ftmul@cntr,f
  6729  0E2D  1D03               	btfss	3,2
  6730  0E2E  2E17               	goto	l4118
  6731  0E2F  082F               	movf	___ftmul@f3_as_product,w
  6732  0E30  00F2               	movwf	___ftpack@arg
  6733  0E31  0830               	movf	___ftmul@f3_as_product+1,w
  6734  0E32  00F3               	movwf	___ftpack@arg+1
  6735  0E33  0831               	movf	___ftmul@f3_as_product+2,w
  6736  0E34  00F4               	movwf	___ftpack@arg+2
  6737  0E35  082E               	movf	___ftmul@exp,w
  6738  0E36  00AA               	movwf	??___ftmul
  6739  0E37  082A               	movf	??___ftmul,w
  6740  0E38  00F5               	movwf	___ftpack@exp
  6741  0E39  0833               	movf	___ftmul@sign,w
  6742  0E3A  00AB               	movwf	??___ftmul+1
  6743  0E3B  082B               	movf	??___ftmul+1,w
  6744  0E3C  00F6               	movwf	___ftpack@sign
  6745  0E3D  318C  2423         	fcall	___ftpack
  6746  0E3F  0872               	movf	?___ftpack,w
  6747  0E40  0020               	movlb	0	; select bank0
  6748  0E41  00A4               	movwf	?___ftmul
  6749  0E42  0873               	movf	?___ftpack+1,w
  6750  0E43  00A5               	movwf	?___ftmul+1
  6751  0E44  0874               	movf	?___ftpack+2,w
  6752  0E45  00A6               	movwf	?___ftmul+2
  6753  0E46  0008               	return
  6754  0E47                     __end_of___ftmul:	
  6755                           
  6756                           	psect	text25
  6757  0F0A                     __ptext25:	
  6758 ;; *************** function ___ftadd *****************
  6759 ;; Defined at:
  6760 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
  6761 ;; Parameters:    Size  Location     Type
  6762 ;;  f1              3   20[BANK0 ] float 
  6763 ;;  f2              3   23[BANK0 ] float 
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;  exp1            1   32[BANK0 ] unsigned char 
  6766 ;;  exp2            1   31[BANK0 ] unsigned char 
  6767 ;;  sign            1   30[BANK0 ] unsigned char 
  6768 ;; Return value:  Size  Location     Type
  6769 ;;                  3   20[BANK0 ] float 
  6770 ;; Registers used:
  6771 ;;		wreg, status,2, status,0, pclath, cstack
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6777 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6778 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6779 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6780 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6781 ;;Total ram usage:       13 bytes
  6782 ;; Hardware stack levels used:    1
  6783 ;; Hardware stack levels required when called:    2
  6784 ;; This function calls:
  6785 ;;		___ftpack
  6786 ;; This function is called by:
  6787 ;;		_get_30v_current
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791                           
  6792                           ;psect for function ___ftadd
  6793  0F0A                     ___ftadd:	
  6794                           
  6795                           ;incstack = 0
  6796                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6797  0F0A  0020               	movlb	0	; select bank0
  6798  0F0B  0834               	movf	___ftadd@f1,w
  6799  0F0C  00BA               	movwf	??___ftadd
  6800  0F0D  0835               	movf	___ftadd@f1+1,w
  6801  0F0E  00BB               	movwf	??___ftadd+1
  6802  0F0F  0836               	movf	___ftadd@f1+2,w
  6803  0F10  00BC               	movwf	??___ftadd+2
  6804  0F11  1003               	clrc
  6805  0F12  0D3B               	rlf	??___ftadd+1,w
  6806  0F13  0D3C               	rlf	??___ftadd+2,w
  6807  0F14  00BD               	movwf	??___ftadd+3
  6808  0F15  083D               	movf	??___ftadd+3,w
  6809  0F16  00C0               	movwf	___ftadd@exp1
  6810  0F17  0837               	movf	___ftadd@f2,w
  6811  0F18  00BA               	movwf	??___ftadd
  6812  0F19  0838               	movf	___ftadd@f2+1,w
  6813  0F1A  00BB               	movwf	??___ftadd+1
  6814  0F1B  0839               	movf	___ftadd@f2+2,w
  6815  0F1C  00BC               	movwf	??___ftadd+2
  6816  0F1D  1003               	clrc
  6817  0F1E  0D3B               	rlf	??___ftadd+1,w
  6818  0F1F  0D3C               	rlf	??___ftadd+2,w
  6819  0F20  00BD               	movwf	??___ftadd+3
  6820  0F21  083D               	movf	??___ftadd+3,w
  6821  0F22  00BF               	movwf	___ftadd@exp2
  6822  0F23  0840               	movf	___ftadd@exp1,w
  6823  0F24  1903               	btfsc	3,2
  6824  0F25  2F32               	goto	l4018
  6825  0F26  083F               	movf	___ftadd@exp2,w
  6826  0F27  0240               	subwf	___ftadd@exp1,w
  6827  0F28  1803               	skipnc
  6828  0F29  2F39               	goto	l4022
  6829  0F2A  0340               	decf	___ftadd@exp1,w
  6830  0F2B  3AFF               	xorlw	255
  6831  0F2C  073F               	addwf	___ftadd@exp2,w
  6832  0F2D  00BA               	movwf	??___ftadd
  6833  0F2E  3019               	movlw	25
  6834  0F2F  023A               	subwf	??___ftadd,w
  6835  0F30  1C03               	skipc
  6836  0F31  2F39               	goto	l4022
  6837  0F32                     l4018:	
  6838  0F32  0837               	movf	___ftadd@f2,w
  6839  0F33  00B4               	movwf	?___ftadd
  6840  0F34  0838               	movf	___ftadd@f2+1,w
  6841  0F35  00B5               	movwf	?___ftadd+1
  6842  0F36  0839               	movf	___ftadd@f2+2,w
  6843  0F37  00B6               	movwf	?___ftadd+2
  6844  0F38  0008               	return
  6845  0F39                     l4022:	
  6846  0F39  083F               	movf	___ftadd@exp2,w
  6847  0F3A  1903               	btfsc	3,2
  6848  0F3B  0008               	return
  6849  0F3C  0840               	movf	___ftadd@exp1,w
  6850  0F3D  023F               	subwf	___ftadd@exp2,w
  6851  0F3E  1803               	skipnc
  6852  0F3F  2F48               	goto	l4028
  6853  0F40  033F               	decf	___ftadd@exp2,w
  6854  0F41  3AFF               	xorlw	255
  6855  0F42  0740               	addwf	___ftadd@exp1,w
  6856  0F43  00BA               	movwf	??___ftadd
  6857  0F44  3019               	movlw	25
  6858  0F45  023A               	subwf	??___ftadd,w
  6859  0F46  1803               	btfsc	3,0
  6860  0F47  0008               	return
  6861  0F48                     l4028:	
  6862  0F48  3006               	movlw	6
  6863  0F49  00BA               	movwf	??___ftadd
  6864  0F4A  083A               	movf	??___ftadd,w
  6865  0F4B  00BE               	movwf	___ftadd@sign
  6866  0F4C  1BB6               	btfsc	___ftadd@f1+2,7
  6867  0F4D  17BE               	bsf	___ftadd@sign,7
  6868  0F4E  1BB9               	btfsc	___ftadd@f2+2,7
  6869  0F4F  173E               	bsf	___ftadd@sign,6
  6870  0F50  17B5               	bsf	___ftadd@f1+1,7
  6871  0F51  30FF               	movlw	255
  6872  0F52  05B4               	andwf	___ftadd@f1,f
  6873  0F53  30FF               	movlw	255
  6874  0F54  05B5               	andwf	___ftadd@f1+1,f
  6875  0F55  3000               	movlw	0
  6876  0F56  05B6               	andwf	___ftadd@f1+2,f
  6877  0F57  17B8               	bsf	___ftadd@f2+1,7
  6878  0F58  30FF               	movlw	255
  6879  0F59  05B7               	andwf	___ftadd@f2,f
  6880  0F5A  30FF               	movlw	255
  6881  0F5B  05B8               	andwf	___ftadd@f2+1,f
  6882  0F5C  3000               	movlw	0
  6883  0F5D  05B9               	andwf	___ftadd@f2+2,f
  6884  0F5E  083F               	movf	___ftadd@exp2,w
  6885  0F5F  0240               	subwf	___ftadd@exp1,w
  6886  0F60  1803               	skipnc
  6887  0F61  2F84               	goto	l4050
  6888  0F62                     l4040:	
  6889  0F62  3001               	movlw	1
  6890  0F63                     u4905:	
  6891  0F63  35B7               	lslf	___ftadd@f2,f
  6892  0F64  0DB8               	rlf	___ftadd@f2+1,f
  6893  0F65  0DB9               	rlf	___ftadd@f2+2,f
  6894  0F66  0B89               	decfsz	9,f
  6895  0F67  2F63               	goto	u4905
  6896  0F68  3001               	movlw	1
  6897  0F69  02BF               	subwf	___ftadd@exp2,f
  6898  0F6A  083F               	movf	___ftadd@exp2,w
  6899  0F6B  0640               	xorwf	___ftadd@exp1,w
  6900  0F6C  1903               	skipnz
  6901  0F6D  2F7F               	goto	l4048
  6902  0F6E  3001               	movlw	1
  6903  0F6F  02BE               	subwf	___ftadd@sign,f
  6904  0F70  083E               	movf	___ftadd@sign,w
  6905  0F71  3907               	andlw	7
  6906  0F72  1903               	btfsc	3,2
  6907  0F73  2F7F               	goto	l4048
  6908  0F74  2F62               	goto	l4040
  6909  0F75                     l4046:	
  6910  0F75  3001               	movlw	1
  6911  0F76                     u4935:	
  6912  0F76  36B6               	lsrf	___ftadd@f1+2,f
  6913  0F77  0CB5               	rrf	___ftadd@f1+1,f
  6914  0F78  0CB4               	rrf	___ftadd@f1,f
  6915  0F79  0B89               	decfsz	9,f
  6916  0F7A  2F76               	goto	u4935
  6917  0F7B  3001               	movlw	1
  6918  0F7C  00BA               	movwf	??___ftadd
  6919  0F7D  083A               	movf	??___ftadd,w
  6920  0F7E  07C0               	addwf	___ftadd@exp1,f
  6921  0F7F                     l4048:	
  6922  0F7F  0840               	movf	___ftadd@exp1,w
  6923  0F80  063F               	xorwf	___ftadd@exp2,w
  6924  0F81  1903               	btfsc	3,2
  6925  0F82  2FA9               	goto	l852
  6926  0F83  2F75               	goto	l4046
  6927  0F84                     l4050:	
  6928  0F84  0840               	movf	___ftadd@exp1,w
  6929  0F85  023F               	subwf	___ftadd@exp2,w
  6930  0F86  1803               	skipnc
  6931  0F87  2FA9               	goto	l852
  6932  0F88                     l4052:	
  6933  0F88  3001               	movlw	1
  6934  0F89                     u4965:	
  6935  0F89  35B4               	lslf	___ftadd@f1,f
  6936  0F8A  0DB5               	rlf	___ftadd@f1+1,f
  6937  0F8B  0DB6               	rlf	___ftadd@f1+2,f
  6938  0F8C  0B89               	decfsz	9,f
  6939  0F8D  2F89               	goto	u4965
  6940  0F8E  3001               	movlw	1
  6941  0F8F  02C0               	subwf	___ftadd@exp1,f
  6942  0F90  083F               	movf	___ftadd@exp2,w
  6943  0F91  0640               	xorwf	___ftadd@exp1,w
  6944  0F92  1903               	skipnz
  6945  0F93  2FA5               	goto	l4060
  6946  0F94  3001               	movlw	1
  6947  0F95  02BE               	subwf	___ftadd@sign,f
  6948  0F96  083E               	movf	___ftadd@sign,w
  6949  0F97  3907               	andlw	7
  6950  0F98  1903               	btfsc	3,2
  6951  0F99  2FA5               	goto	l4060
  6952  0F9A  2F88               	goto	l4052
  6953  0F9B                     l4058:	
  6954  0F9B  3001               	movlw	1
  6955  0F9C                     u4995:	
  6956  0F9C  36B9               	lsrf	___ftadd@f2+2,f
  6957  0F9D  0CB8               	rrf	___ftadd@f2+1,f
  6958  0F9E  0CB7               	rrf	___ftadd@f2,f
  6959  0F9F  0B89               	decfsz	9,f
  6960  0FA0  2F9C               	goto	u4995
  6961  0FA1  3001               	movlw	1
  6962  0FA2  00BA               	movwf	??___ftadd
  6963  0FA3  083A               	movf	??___ftadd,w
  6964  0FA4  07BF               	addwf	___ftadd@exp2,f
  6965  0FA5                     l4060:	
  6966  0FA5  0840               	movf	___ftadd@exp1,w
  6967  0FA6  063F               	xorwf	___ftadd@exp2,w
  6968  0FA7  1D03               	skipz
  6969  0FA8  2F9B               	goto	l4058
  6970  0FA9                     l852:	
  6971  0FA9  1FBE               	btfss	___ftadd@sign,7
  6972  0FAA  2FBB               	goto	l4064
  6973  0FAB  30FF               	movlw	255
  6974  0FAC  06B4               	xorwf	___ftadd@f1,f
  6975  0FAD  30FF               	movlw	255
  6976  0FAE  06B5               	xorwf	___ftadd@f1+1,f
  6977  0FAF  30FF               	movlw	255
  6978  0FB0  06B6               	xorwf	___ftadd@f1+2,f
  6979  0FB1  3001               	movlw	1
  6980  0FB2  07B4               	addwf	___ftadd@f1,f
  6981  0FB3  3000               	movlw	0
  6982  0FB4  1803               	skipnc
  6983  0FB5  3001               	movlw	1
  6984  0FB6  07B5               	addwf	___ftadd@f1+1,f
  6985  0FB7  3000               	movlw	0
  6986  0FB8  1803               	skipnc
  6987  0FB9  3001               	movlw	1
  6988  0FBA  07B6               	addwf	___ftadd@f1+2,f
  6989  0FBB                     l4064:	
  6990  0FBB  1F3E               	btfss	___ftadd@sign,6
  6991  0FBC  2FCD               	goto	l4068
  6992  0FBD  30FF               	movlw	255
  6993  0FBE  06B7               	xorwf	___ftadd@f2,f
  6994  0FBF  30FF               	movlw	255
  6995  0FC0  06B8               	xorwf	___ftadd@f2+1,f
  6996  0FC1  30FF               	movlw	255
  6997  0FC2  06B9               	xorwf	___ftadd@f2+2,f
  6998  0FC3  3001               	movlw	1
  6999  0FC4  07B7               	addwf	___ftadd@f2,f
  7000  0FC5  3000               	movlw	0
  7001  0FC6  1803               	skipnc
  7002  0FC7  3001               	movlw	1
  7003  0FC8  07B8               	addwf	___ftadd@f2+1,f
  7004  0FC9  3000               	movlw	0
  7005  0FCA  1803               	skipnc
  7006  0FCB  3001               	movlw	1
  7007  0FCC  07B9               	addwf	___ftadd@f2+2,f
  7008  0FCD                     l4068:	
  7009  0FCD  01BE               	clrf	___ftadd@sign
  7010  0FCE  0834               	movf	___ftadd@f1,w
  7011  0FCF  07B7               	addwf	___ftadd@f2,f
  7012  0FD0  0835               	movf	___ftadd@f1+1,w
  7013  0FD1  3DB8               	addwfc	___ftadd@f2+1,f
  7014  0FD2  0836               	movf	___ftadd@f1+2,w
  7015  0FD3  3DB9               	addwfc	___ftadd@f2+2,f
  7016  0FD4  1FB9               	btfss	___ftadd@f2+2,7
  7017  0FD5  2FE8               	goto	l4078
  7018  0FD6  30FF               	movlw	255
  7019  0FD7  06B7               	xorwf	___ftadd@f2,f
  7020  0FD8  30FF               	movlw	255
  7021  0FD9  06B8               	xorwf	___ftadd@f2+1,f
  7022  0FDA  30FF               	movlw	255
  7023  0FDB  06B9               	xorwf	___ftadd@f2+2,f
  7024  0FDC  3001               	movlw	1
  7025  0FDD  07B7               	addwf	___ftadd@f2,f
  7026  0FDE  3000               	movlw	0
  7027  0FDF  1803               	skipnc
  7028  0FE0  3001               	movlw	1
  7029  0FE1  07B8               	addwf	___ftadd@f2+1,f
  7030  0FE2  3000               	movlw	0
  7031  0FE3  1803               	skipnc
  7032  0FE4  3001               	movlw	1
  7033  0FE5  07B9               	addwf	___ftadd@f2+2,f
  7034  0FE6  01BE               	clrf	___ftadd@sign
  7035  0FE7  0ABE               	incf	___ftadd@sign,f
  7036  0FE8                     l4078:	
  7037  0FE8  0837               	movf	___ftadd@f2,w
  7038  0FE9  00F2               	movwf	___ftpack@arg
  7039  0FEA  0838               	movf	___ftadd@f2+1,w
  7040  0FEB  00F3               	movwf	___ftpack@arg+1
  7041  0FEC  0839               	movf	___ftadd@f2+2,w
  7042  0FED  00F4               	movwf	___ftpack@arg+2
  7043  0FEE  0840               	movf	___ftadd@exp1,w
  7044  0FEF  00BA               	movwf	??___ftadd
  7045  0FF0  083A               	movf	??___ftadd,w
  7046  0FF1  00F5               	movwf	___ftpack@exp
  7047  0FF2  083E               	movf	___ftadd@sign,w
  7048  0FF3  00BB               	movwf	??___ftadd+1
  7049  0FF4  083B               	movf	??___ftadd+1,w
  7050  0FF5  00F6               	movwf	___ftpack@sign
  7051  0FF6  318C  2423         	fcall	___ftpack
  7052  0FF8  0872               	movf	?___ftpack,w
  7053  0FF9  0020               	movlb	0	; select bank0
  7054  0FFA  00B4               	movwf	?___ftadd
  7055  0FFB  0873               	movf	?___ftpack+1,w
  7056  0FFC  00B5               	movwf	?___ftadd+1
  7057  0FFD  0874               	movf	?___ftpack+2,w
  7058  0FFE  00B6               	movwf	?___ftadd+2
  7059  0FFF  0008               	return
  7060  1000                     __end_of___ftadd:	
  7061                           
  7062                           	psect	text26
  7063  0C23                     __ptext26:	
  7064 ;; *************** function ___ftpack *****************
  7065 ;; Defined at:
  7066 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  arg             3    2[COMMON] unsigned um
  7069 ;;  exp             1    5[COMMON] unsigned char 
  7070 ;;  sign            1    6[COMMON] unsigned char 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;		None
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  3    2[COMMON] float 
  7075 ;; Registers used:
  7076 ;;		wreg, status,2, status,0
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7082 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7084 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7085 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7086 ;;Total ram usage:        8 bytes
  7087 ;; Hardware stack levels used:    1
  7088 ;; Hardware stack levels required when called:    1
  7089 ;; This function calls:
  7090 ;;		Nothing
  7091 ;; This function is called by:
  7092 ;;		___ftadd
  7093 ;;		___ftmul
  7094 ;;		___lwtoft
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           
  7099                           ;psect for function ___ftpack
  7100  0C23                     ___ftpack:	
  7101                           
  7102                           ;incstack = 0
  7103                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7104  0C23  0875               	movf	___ftpack@exp,w
  7105  0C24  1903               	btfsc	3,2
  7106  0C25  2C2B               	goto	l3870
  7107  0C26  0874               	movf	___ftpack@arg+2,w
  7108  0C27  0473               	iorwf	___ftpack@arg+1,w
  7109  0C28  0472               	iorwf	___ftpack@arg,w
  7110  0C29  1D03               	skipz
  7111  0C2A  2C3C               	goto	l3876
  7112  0C2B                     l3870:	
  7113  0C2B  3000               	movlw	0
  7114  0C2C  00F2               	movwf	?___ftpack
  7115  0C2D  3000               	movlw	0
  7116  0C2E  00F3               	movwf	?___ftpack+1
  7117  0C2F  3000               	movlw	0
  7118  0C30  00F4               	movwf	?___ftpack+2
  7119  0C31  0008               	return
  7120  0C32                     l3874:	
  7121  0C32  3001               	movlw	1
  7122  0C33  00F7               	movwf	??___ftpack
  7123  0C34  0877               	movf	??___ftpack,w
  7124  0C35  07F5               	addwf	___ftpack@exp,f
  7125  0C36  3001               	movlw	1
  7126  0C37                     u4585:	
  7127  0C37  36F4               	lsrf	___ftpack@arg+2,f
  7128  0C38  0CF3               	rrf	___ftpack@arg+1,f
  7129  0C39  0CF2               	rrf	___ftpack@arg,f
  7130  0C3A  0B89               	decfsz	9,f
  7131  0C3B  2C37               	goto	u4585
  7132  0C3C                     l3876:	
  7133  0C3C  30FE               	movlw	254
  7134  0C3D  0574               	andwf	___ftpack@arg+2,w
  7135  0C3E  1903               	btfsc	3,2
  7136  0C3F  2C55               	goto	l821
  7137  0C40  2C32               	goto	l3874
  7138  0C41                     l3878:	
  7139  0C41  3001               	movlw	1
  7140  0C42  00F7               	movwf	??___ftpack
  7141  0C43  0877               	movf	??___ftpack,w
  7142  0C44  07F5               	addwf	___ftpack@exp,f
  7143  0C45  3001               	movlw	1
  7144  0C46  07F2               	addwf	___ftpack@arg,f
  7145  0C47  3000               	movlw	0
  7146  0C48  1803               	skipnc
  7147  0C49  3001               	movlw	1
  7148  0C4A  07F3               	addwf	___ftpack@arg+1,f
  7149  0C4B  3000               	movlw	0
  7150  0C4C  1803               	skipnc
  7151  0C4D  3001               	movlw	1
  7152  0C4E  07F4               	addwf	___ftpack@arg+2,f
  7153  0C4F  3001               	movlw	1
  7154  0C50                     u4605:	
  7155  0C50  36F4               	lsrf	___ftpack@arg+2,f
  7156  0C51  0CF3               	rrf	___ftpack@arg+1,f
  7157  0C52  0CF2               	rrf	___ftpack@arg,f
  7158  0C53  0B89               	decfsz	9,f
  7159  0C54  2C50               	goto	u4605
  7160  0C55                     l821:	
  7161  0C55  30FF               	movlw	255
  7162  0C56  0574               	andwf	___ftpack@arg+2,w
  7163  0C57  1903               	btfsc	3,2
  7164  0C58  2C62               	goto	l3886
  7165  0C59  2C41               	goto	l3878
  7166  0C5A                     l3884:	
  7167  0C5A  3001               	movlw	1
  7168  0C5B  02F5               	subwf	___ftpack@exp,f
  7169  0C5C  3001               	movlw	1
  7170  0C5D                     u4625:	
  7171  0C5D  35F2               	lslf	___ftpack@arg,f
  7172  0C5E  0DF3               	rlf	___ftpack@arg+1,f
  7173  0C5F  0DF4               	rlf	___ftpack@arg+2,f
  7174  0C60  0B89               	decfsz	9,f
  7175  0C61  2C5D               	goto	u4625
  7176  0C62                     l3886:	
  7177  0C62  1BF3               	btfsc	___ftpack@arg+1,7
  7178  0C63  2C68               	goto	l828
  7179  0C64  3002               	movlw	2
  7180  0C65  0275               	subwf	___ftpack@exp,w
  7181  0C66  1803               	skipnc
  7182  0C67  2C5A               	goto	l3884
  7183  0C68                     l828:	
  7184  0C68  1875               	btfsc	___ftpack@exp,0
  7185  0C69  2C70               	goto	l829
  7186  0C6A  30FF               	movlw	255
  7187  0C6B  05F2               	andwf	___ftpack@arg,f
  7188  0C6C  307F               	movlw	127
  7189  0C6D  05F3               	andwf	___ftpack@arg+1,f
  7190  0C6E  30FF               	movlw	255
  7191  0C6F  05F4               	andwf	___ftpack@arg+2,f
  7192  0C70                     l829:	
  7193  0C70  1003               	clrc
  7194  0C71  0CF5               	rrf	___ftpack@exp,f
  7195  0C72  0875               	movf	___ftpack@exp,w
  7196  0C73  00F7               	movwf	??___ftpack
  7197  0C74  01F8               	clrf	??___ftpack+1
  7198  0C75  01F9               	clrf	??___ftpack+2
  7199  0C76  3010               	movlw	16
  7200  0C77                     u4665:	
  7201  0C77  35F7               	lslf	??___ftpack,f
  7202  0C78  0DF8               	rlf	??___ftpack+1,f
  7203  0C79  0DF9               	rlf	??___ftpack+2,f
  7204  0C7A  0B89               	decfsz	9,f
  7205  0C7B  2C77               	goto	u4665
  7206  0C7C  0877               	movf	??___ftpack,w
  7207  0C7D  04F2               	iorwf	___ftpack@arg,f
  7208  0C7E  0878               	movf	??___ftpack+1,w
  7209  0C7F  04F3               	iorwf	___ftpack@arg+1,f
  7210  0C80  0879               	movf	??___ftpack+2,w
  7211  0C81  04F4               	iorwf	___ftpack@arg+2,f
  7212  0C82  0876               	movf	___ftpack@sign,w
  7213  0C83  1903               	btfsc	3,2
  7214  0C84  0008               	return
  7215  0C85  17F4               	bsf	___ftpack@arg+2,7
  7216  0C86  0008               	return
  7217  0C87                     __end_of___ftpack:	
  7218                           
  7219                           	psect	text27
  7220  08BE                     __ptext27:	
  7221 ;; *************** function _ADC_get_val *****************
  7222 ;; Defined at:
  7223 ;;		line 1663 in file "Multi_RX_testjig_v1.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;  channel         1    wreg     unsigned char 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;  channel         1    5[COMMON] unsigned char 
  7228 ;;  return_val      2    6[COMMON] unsigned int 
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  2    2[COMMON] unsigned int 
  7231 ;; Registers used:
  7232 ;;		wreg
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7238 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7239 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7241 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7242 ;;Total ram usage:        6 bytes
  7243 ;; Hardware stack levels used:    1
  7244 ;; Hardware stack levels required when called:    1
  7245 ;; This function calls:
  7246 ;;		Nothing
  7247 ;; This function is called by:
  7248 ;;		_main
  7249 ;;		_get_30v_current
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           
  7254                           ;psect for function _ADC_get_val
  7255  08BE                     _ADC_get_val:	
  7256                           
  7257                           ;incstack = 0
  7258                           ; Regs used in _ADC_get_val: [wreg]
  7259                           ;ADC_get_val@channel stored from wreg
  7260  08BE  00F5               	movwf	ADC_get_val@channel
  7261                           
  7262                           ;Multi_RX_testjig_v1.c: 1665: unsigned int return_val;
  7263                           ;Multi_RX_testjig_v1.c: 1666: GIE = 0;
  7264  08BF  138B               	bcf	11,7	;volatile
  7265                           
  7266                           ;Multi_RX_testjig_v1.c: 1667: ADCON0 = channel;
  7267  08C0  0875               	movf	ADC_get_val@channel,w
  7268  08C1  0021               	movlb	1	; select bank1
  7269  08C2  009D               	movwf	29	;volatile
  7270  08C3                     l580:	
  7271                           ;Multi_RX_testjig_v1.c: 1668: while(ADCON0bits.GO_nDONE == 1);
  7272                           
  7273  08C3  189D               	btfsc	29,1	;volatile
  7274  08C4  28C3               	goto	l580
  7275                           
  7276                           ;Multi_RX_testjig_v1.c: 1669: return_val = ADRESH << 8 | ADRESL;
  7277  08C5  081C               	movf	28,w	;volatile
  7278  08C6  00F7               	movwf	ADC_get_val@return_val+1
  7279  08C7  081B               	movf	27,w	;volatile
  7280  08C8  00F6               	movwf	ADC_get_val@return_val
  7281                           
  7282                           ;Multi_RX_testjig_v1.c: 1670: GIE = 1;
  7283  08C9  178B               	bsf	11,7	;volatile
  7284                           
  7285                           ;Multi_RX_testjig_v1.c: 1671: return return_val;
  7286  08CA  0877               	movf	ADC_get_val@return_val+1,w
  7287  08CB  00F3               	movwf	?_ADC_get_val+1
  7288  08CC  0876               	movf	ADC_get_val@return_val,w
  7289  08CD  00F2               	movwf	?_ADC_get_val
  7290  08CE  0008               	return
  7291  08CF                     __end_of_ADC_get_val:	
  7292                           
  7293                           	psect	text28
  7294  0E47                     __ptext28:	
  7295 ;; *************** function _Vout_set *****************
  7296 ;; Defined at:
  7297 ;;		line 1724 in file "Multi_RX_testjig_v1.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  Volts           2    5[COMMON] int 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  digi_step       4    0[BANK0 ] unsigned long 
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      void 
  7304 ;; Registers used:
  7305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7312 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7314 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7315 ;;Total ram usage:        6 bytes
  7316 ;; Hardware stack levels used:    1
  7317 ;; Hardware stack levels required when called:    3
  7318 ;; This function calls:
  7319 ;;		_digitalpot
  7320 ;; This function is called by:
  7321 ;;		_main
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           
  7326                           ;psect for function _Vout_set
  7327  0E47                     _Vout_set:	
  7328                           
  7329                           ;Multi_RX_testjig_v1.c: 1726: unsigned long digi_step = 0;
  7330                           
  7331                           ;incstack = 0
  7332                           ; Regs used in _Vout_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7333  0E47  3000               	movlw	0
  7334  0E48  0020               	movlb	0	; select bank0
  7335  0E49  00A3               	movwf	Vout_set@digi_step+3
  7336  0E4A  3000               	movlw	0
  7337  0E4B  00A2               	movwf	Vout_set@digi_step+2
  7338  0E4C  3000               	movlw	0
  7339  0E4D  00A1               	movwf	Vout_set@digi_step+1
  7340  0E4E  3000               	movlw	0
  7341  0E4F  00A0               	movwf	Vout_set@digi_step
  7342                           
  7343                           ;Multi_RX_testjig_v1.c: 1732: switch(Volts)
  7344  0E50  2ED2               	goto	l4380
  7345  0E51                     l4346:	
  7346                           ;Multi_RX_testjig_v1.c: 1733: {
  7347                           ;Multi_RX_testjig_v1.c: 1734: case 6:
  7348                           
  7349                           
  7350                           ;Multi_RX_testjig_v1.c: 1735: digi_step = 20;
  7351  0E51  3000               	movlw	0
  7352  0E52  00A3               	movwf	Vout_set@digi_step+3
  7353  0E53  3000               	movlw	0
  7354  0E54  00A2               	movwf	Vout_set@digi_step+2
  7355  0E55  3000               	movlw	0
  7356  0E56  00A1               	movwf	Vout_set@digi_step+1
  7357  0E57  3014               	movlw	20
  7358  0E58  2ED0               	goto	L33
  7359  0E59                     l4348:	
  7360                           ;Multi_RX_testjig_v1.c: 1737: case 7:
  7361                           
  7362                           ;Multi_RX_testjig_v1.c: 1736: break;
  7363                           
  7364                           
  7365                           ;Multi_RX_testjig_v1.c: 1738: digi_step = 39;
  7366  0E59  3000               	movlw	0
  7367  0E5A  00A3               	movwf	Vout_set@digi_step+3
  7368  0E5B  3000               	movlw	0
  7369  0E5C  00A2               	movwf	Vout_set@digi_step+2
  7370  0E5D  3000               	movlw	0
  7371  0E5E  00A1               	movwf	Vout_set@digi_step+1
  7372  0E5F  3027               	movlw	39
  7373  0E60  2ED0               	goto	L33
  7374  0E61                     l4350:	
  7375                           ;Multi_RX_testjig_v1.c: 1740: case 8:
  7376                           
  7377                           ;Multi_RX_testjig_v1.c: 1739: break;
  7378                           
  7379                           
  7380                           ;Multi_RX_testjig_v1.c: 1741: digi_step = 52;
  7381  0E61  3000               	movlw	0
  7382  0E62  00A3               	movwf	Vout_set@digi_step+3
  7383  0E63  3000               	movlw	0
  7384  0E64  00A2               	movwf	Vout_set@digi_step+2
  7385  0E65  3000               	movlw	0
  7386  0E66  00A1               	movwf	Vout_set@digi_step+1
  7387  0E67  3034               	movlw	52
  7388  0E68  2ED0               	goto	L33
  7389  0E69                     l4352:	
  7390                           ;Multi_RX_testjig_v1.c: 1743: case 9:
  7391                           
  7392                           ;Multi_RX_testjig_v1.c: 1742: break;
  7393                           
  7394                           
  7395                           ;Multi_RX_testjig_v1.c: 1744: digi_step = 62;
  7396  0E69  3000               	movlw	0
  7397  0E6A  00A3               	movwf	Vout_set@digi_step+3
  7398  0E6B  3000               	movlw	0
  7399  0E6C  00A2               	movwf	Vout_set@digi_step+2
  7400  0E6D  3000               	movlw	0
  7401  0E6E  00A1               	movwf	Vout_set@digi_step+1
  7402  0E6F  303E               	movlw	62
  7403  0E70  2ED0               	goto	L33
  7404  0E71                     l4354:	
  7405                           ;Multi_RX_testjig_v1.c: 1746: case 10:
  7406                           
  7407                           ;Multi_RX_testjig_v1.c: 1745: break;
  7408                           
  7409                           
  7410                           ;Multi_RX_testjig_v1.c: 1747: digi_step = 70;
  7411  0E71  3000               	movlw	0
  7412  0E72  00A3               	movwf	Vout_set@digi_step+3
  7413  0E73  3000               	movlw	0
  7414  0E74  00A2               	movwf	Vout_set@digi_step+2
  7415  0E75  3000               	movlw	0
  7416  0E76  00A1               	movwf	Vout_set@digi_step+1
  7417  0E77  3046               	movlw	70
  7418  0E78  2ED0               	goto	L33
  7419  0E79                     l4356:	
  7420                           ;Multi_RX_testjig_v1.c: 1749: case 11:
  7421                           
  7422                           ;Multi_RX_testjig_v1.c: 1748: break;
  7423                           
  7424                           
  7425                           ;Multi_RX_testjig_v1.c: 1750: digi_step = 76;
  7426  0E79  3000               	movlw	0
  7427  0E7A  00A3               	movwf	Vout_set@digi_step+3
  7428  0E7B  3000               	movlw	0
  7429  0E7C  00A2               	movwf	Vout_set@digi_step+2
  7430  0E7D  3000               	movlw	0
  7431  0E7E  00A1               	movwf	Vout_set@digi_step+1
  7432  0E7F  304C               	movlw	76
  7433  0E80  2ED0               	goto	L33
  7434  0E81                     l4358:	
  7435                           ;Multi_RX_testjig_v1.c: 1752: case 12:
  7436                           
  7437                           ;Multi_RX_testjig_v1.c: 1751: break;
  7438                           
  7439                           
  7440                           ;Multi_RX_testjig_v1.c: 1753: digi_step = 81;
  7441  0E81  3000               	movlw	0
  7442  0E82  00A3               	movwf	Vout_set@digi_step+3
  7443  0E83  3000               	movlw	0
  7444  0E84  00A2               	movwf	Vout_set@digi_step+2
  7445  0E85  3000               	movlw	0
  7446  0E86  00A1               	movwf	Vout_set@digi_step+1
  7447  0E87  3051               	movlw	81
  7448  0E88  2ED0               	goto	L33
  7449  0E89                     l4360:	
  7450                           ;Multi_RX_testjig_v1.c: 1755: case 13:
  7451                           
  7452                           ;Multi_RX_testjig_v1.c: 1754: break;
  7453                           
  7454                           
  7455                           ;Multi_RX_testjig_v1.c: 1756: digi_step = 85;
  7456  0E89  3000               	movlw	0
  7457  0E8A  00A3               	movwf	Vout_set@digi_step+3
  7458  0E8B  3000               	movlw	0
  7459  0E8C  00A2               	movwf	Vout_set@digi_step+2
  7460  0E8D  3000               	movlw	0
  7461  0E8E  00A1               	movwf	Vout_set@digi_step+1
  7462  0E8F  3055               	movlw	85
  7463  0E90  2ED0               	goto	L33
  7464  0E91                     l4362:	
  7465                           ;Multi_RX_testjig_v1.c: 1758: case 14:
  7466                           
  7467                           ;Multi_RX_testjig_v1.c: 1757: break;
  7468                           
  7469                           
  7470                           ;Multi_RX_testjig_v1.c: 1759: digi_step = 88;
  7471  0E91  3000               	movlw	0
  7472  0E92  00A3               	movwf	Vout_set@digi_step+3
  7473  0E93  3000               	movlw	0
  7474  0E94  00A2               	movwf	Vout_set@digi_step+2
  7475  0E95  3000               	movlw	0
  7476  0E96  00A1               	movwf	Vout_set@digi_step+1
  7477  0E97  3058               	movlw	88
  7478  0E98  2ED0               	goto	L33
  7479  0E99                     l4364:	
  7480                           ;Multi_RX_testjig_v1.c: 1761: case 15:
  7481                           
  7482                           ;Multi_RX_testjig_v1.c: 1760: break;
  7483                           
  7484                           
  7485                           ;Multi_RX_testjig_v1.c: 1762: digi_step = 91;
  7486  0E99  3000               	movlw	0
  7487  0E9A  00A3               	movwf	Vout_set@digi_step+3
  7488  0E9B  3000               	movlw	0
  7489  0E9C  00A2               	movwf	Vout_set@digi_step+2
  7490  0E9D  3000               	movlw	0
  7491  0E9E  00A1               	movwf	Vout_set@digi_step+1
  7492  0E9F  305B               	movlw	91
  7493  0EA0  2ED0               	goto	L33
  7494  0EA1                     l4366:	
  7495                           ;Multi_RX_testjig_v1.c: 1764: case 16:
  7496                           
  7497                           ;Multi_RX_testjig_v1.c: 1763: break;
  7498                           
  7499                           
  7500                           ;Multi_RX_testjig_v1.c: 1765: digi_step = 94;
  7501  0EA1  3000               	movlw	0
  7502  0EA2  00A3               	movwf	Vout_set@digi_step+3
  7503  0EA3  3000               	movlw	0
  7504  0EA4  00A2               	movwf	Vout_set@digi_step+2
  7505  0EA5  3000               	movlw	0
  7506  0EA6  00A1               	movwf	Vout_set@digi_step+1
  7507  0EA7  305E               	movlw	94
  7508  0EA8  2ED0               	goto	L33
  7509  0EA9                     l4368:	
  7510                           ;Multi_RX_testjig_v1.c: 1767: case 17:
  7511                           
  7512                           ;Multi_RX_testjig_v1.c: 1766: break;
  7513                           
  7514                           
  7515                           ;Multi_RX_testjig_v1.c: 1768: digi_step = 96;
  7516  0EA9  3000               	movlw	0
  7517  0EAA  00A3               	movwf	Vout_set@digi_step+3
  7518  0EAB  3000               	movlw	0
  7519  0EAC  00A2               	movwf	Vout_set@digi_step+2
  7520  0EAD  3000               	movlw	0
  7521  0EAE  00A1               	movwf	Vout_set@digi_step+1
  7522  0EAF  3060               	movlw	96
  7523  0EB0  2ED0               	goto	L33
  7524  0EB1                     l4370:	
  7525                           ;Multi_RX_testjig_v1.c: 1770: case 18:
  7526                           
  7527                           ;Multi_RX_testjig_v1.c: 1769: break;
  7528                           
  7529                           
  7530                           ;Multi_RX_testjig_v1.c: 1771: digi_step = 98;
  7531  0EB1  3000               	movlw	0
  7532  0EB2  00A3               	movwf	Vout_set@digi_step+3
  7533  0EB3  3000               	movlw	0
  7534  0EB4  00A2               	movwf	Vout_set@digi_step+2
  7535  0EB5  3000               	movlw	0
  7536  0EB6  00A1               	movwf	Vout_set@digi_step+1
  7537  0EB7  3062               	movlw	98
  7538  0EB8  2ED0               	goto	L33
  7539  0EB9                     l4372:	
  7540                           ;Multi_RX_testjig_v1.c: 1773: case 20:
  7541                           
  7542                           ;Multi_RX_testjig_v1.c: 1772: break;
  7543                           
  7544                           
  7545                           ;Multi_RX_testjig_v1.c: 1774: digi_step = 102;
  7546  0EB9  3000               	movlw	0
  7547  0EBA  00A3               	movwf	Vout_set@digi_step+3
  7548  0EBB  3000               	movlw	0
  7549  0EBC  00A2               	movwf	Vout_set@digi_step+2
  7550  0EBD  3000               	movlw	0
  7551  0EBE  00A1               	movwf	Vout_set@digi_step+1
  7552  0EBF  3066               	movlw	102
  7553  0EC0  2ED0               	goto	L33
  7554  0EC1                     l4374:	
  7555                           ;Multi_RX_testjig_v1.c: 1776: case 25:
  7556                           
  7557                           ;Multi_RX_testjig_v1.c: 1775: break;
  7558                           
  7559                           
  7560                           ;Multi_RX_testjig_v1.c: 1777: digi_step = 112;
  7561  0EC1  3000               	movlw	0
  7562  0EC2  00A3               	movwf	Vout_set@digi_step+3
  7563  0EC3  3000               	movlw	0
  7564  0EC4  00A2               	movwf	Vout_set@digi_step+2
  7565  0EC5  3000               	movlw	0
  7566  0EC6  00A1               	movwf	Vout_set@digi_step+1
  7567  0EC7  3070               	movlw	112
  7568  0EC8  2ED0               	goto	L33
  7569  0EC9                     l4376:	
  7570                           ;Multi_RX_testjig_v1.c: 1779: default:
  7571                           
  7572                           ;Multi_RX_testjig_v1.c: 1778: break;
  7573                           
  7574                           
  7575                           ;Multi_RX_testjig_v1.c: 1780: digi_step = 0;
  7576  0EC9  3000               	movlw	0
  7577  0ECA  00A3               	movwf	Vout_set@digi_step+3
  7578  0ECB  3000               	movlw	0
  7579  0ECC  00A2               	movwf	Vout_set@digi_step+2
  7580  0ECD  3000               	movlw	0
  7581  0ECE  00A1               	movwf	Vout_set@digi_step+1
  7582  0ECF  3000               	movlw	0
  7583  0ED0                     L33:	
  7584  0ED0  00A0               	movwf	Vout_set@digi_step
  7585                           
  7586                           ;Multi_RX_testjig_v1.c: 1782: }
  7587                           
  7588                           ;Multi_RX_testjig_v1.c: 1781: break;
  7589  0ED1  2F06               	goto	l4382
  7590  0ED2                     l4380:	
  7591                           
  7592                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7593                           ; Switch size 1, requested type "space"
  7594                           ; Number of cases is 1, Range of values is 0 to 0
  7595                           ; switch strategies available:
  7596                           ; Name         Instructions Cycles
  7597                           ; simple_byte            4     3 (average)
  7598                           ; direct_byte            8     6 (fixed)
  7599                           ; jumptable            260     6 (fixed)
  7600                           ;	Chosen strategy is simple_byte
  7601  0ED2  0876               	movf	Vout_set@Volts+1,w
  7602  0ED3  3A00               	xorlw	0	; case 0
  7603  0ED4  1903               	skipnz
  7604  0ED5  2ED7               	goto	l5030
  7605  0ED6  2EC9               	goto	l4376
  7606  0ED7                     l5030:	
  7607                           
  7608                           ; Switch size 1, requested type "space"
  7609                           ; Number of cases is 15, Range of values is 6 to 25
  7610                           ; switch strategies available:
  7611                           ; Name         Instructions Cycles
  7612                           ; simple_byte           46    24 (average)
  7613                           ; direct_byte           49     9 (fixed)
  7614                           ; jumptable            263     9 (fixed)
  7615                           ;	Chosen strategy is simple_byte
  7616  0ED7  0875               	movf	Vout_set@Volts,w
  7617  0ED8  3A06               	xorlw	6	; case 6
  7618  0ED9  1903               	skipnz
  7619  0EDA  2E51               	goto	l4346
  7620  0EDB  3A01               	xorlw	1	; case 7
  7621  0EDC  1903               	skipnz
  7622  0EDD  2E59               	goto	l4348
  7623  0EDE  3A0F               	xorlw	15	; case 8
  7624  0EDF  1903               	skipnz
  7625  0EE0  2E61               	goto	l4350
  7626  0EE1  3A01               	xorlw	1	; case 9
  7627  0EE2  1903               	skipnz
  7628  0EE3  2E69               	goto	l4352
  7629  0EE4  3A03               	xorlw	3	; case 10
  7630  0EE5  1903               	skipnz
  7631  0EE6  2E71               	goto	l4354
  7632  0EE7  3A01               	xorlw	1	; case 11
  7633  0EE8  1903               	skipnz
  7634  0EE9  2E79               	goto	l4356
  7635  0EEA  3A07               	xorlw	7	; case 12
  7636  0EEB  1903               	skipnz
  7637  0EEC  2E81               	goto	l4358
  7638  0EED  3A01               	xorlw	1	; case 13
  7639  0EEE  1903               	skipnz
  7640  0EEF  2E89               	goto	l4360
  7641  0EF0  3A03               	xorlw	3	; case 14
  7642  0EF1  1903               	skipnz
  7643  0EF2  2E91               	goto	l4362
  7644  0EF3  3A01               	xorlw	1	; case 15
  7645  0EF4  1903               	skipnz
  7646  0EF5  2E99               	goto	l4364
  7647  0EF6  3A1F               	xorlw	31	; case 16
  7648  0EF7  1903               	skipnz
  7649  0EF8  2EA1               	goto	l4366
  7650  0EF9  3A01               	xorlw	1	; case 17
  7651  0EFA  1903               	skipnz
  7652  0EFB  2EA9               	goto	l4368
  7653  0EFC  3A03               	xorlw	3	; case 18
  7654  0EFD  1903               	skipnz
  7655  0EFE  2EB1               	goto	l4370
  7656  0EFF  3A06               	xorlw	6	; case 20
  7657  0F00  1903               	skipnz
  7658  0F01  2EB9               	goto	l4372
  7659  0F02  3A0D               	xorlw	13	; case 25
  7660  0F03  1903               	skipnz
  7661  0F04  2EC1               	goto	l4374
  7662  0F05  2EC9               	goto	l4376
  7663  0F06                     l4382:	
  7664                           
  7665                           ;Multi_RX_testjig_v1.c: 1788: digitalpot((unsigned char) digi_step);
  7666  0F06  0820               	movf	Vout_set@digi_step,w
  7667  0F07  3189  21AB         	fcall	_digitalpot
  7668  0F09  0008               	return
  7669  0F0A                     __end_of_Vout_set:	
  7670                           
  7671                           	psect	text29
  7672  09AB                     __ptext29:	
  7673 ;; *************** function _digitalpot *****************
  7674 ;; Defined at:
  7675 ;;		line 1791 in file "Multi_RX_testjig_v1.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;  value           1    wreg     unsigned char 
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;  value           1    4[COMMON] unsigned char 
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  1    wreg      void 
  7682 ;; Registers used:
  7683 ;;		wreg, status,2, status,0, pclath, cstack
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7692 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7693 ;;Total ram usage:        2 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; Hardware stack levels required when called:    2
  7696 ;; This function calls:
  7697 ;;		_i2c_Start
  7698 ;;		_i2c_Stop
  7699 ;;		_i2c_Write
  7700 ;; This function is called by:
  7701 ;;		_Vout_set
  7702 ;; This function uses a non-reentrant model
  7703 ;;
  7704                           
  7705                           
  7706                           ;psect for function _digitalpot
  7707  09AB                     _digitalpot:	
  7708                           
  7709                           ;incstack = 0
  7710                           ; Regs used in _digitalpot: [wreg+status,2+status,0+pclath+cstack]
  7711                           ;digitalpot@value stored from wreg
  7712  09AB  00F4               	movwf	digitalpot@value
  7713                           
  7714                           ;Multi_RX_testjig_v1.c: 1793: i2c_Start();
  7715  09AC  3188  208C  3189   	fcall	_i2c_Start
  7716                           
  7717                           ;Multi_RX_testjig_v1.c: 1794: i2c_Write(0x5C);
  7718  09AF  305C               	movlw	92
  7719  09B0  3188  20B1  3189   	fcall	_i2c_Write
  7720                           
  7721                           ;Multi_RX_testjig_v1.c: 1795: i2c_Write(0b00000000);
  7722  09B3  3000               	movlw	0
  7723  09B4  3188  20B1  3189   	fcall	_i2c_Write
  7724                           
  7725                           ;Multi_RX_testjig_v1.c: 1796: i2c_Write(value);
  7726  09B7  0874               	movf	digitalpot@value,w
  7727  09B8  3188  20B1  3189   	fcall	_i2c_Write
  7728                           
  7729                           ;Multi_RX_testjig_v1.c: 1797: i2c_Stop();
  7730  09BB  3188  2091  3189   	fcall	_i2c_Stop
  7731                           
  7732                           ;Multi_RX_testjig_v1.c: 1798: _delay((unsigned long)((20)*(16000000/4000.0)));
  7733  09BE  3068               	movlw	104
  7734  09BF  00F3               	movwf	??_digitalpot
  7735  09C0  30E4               	movlw	228
  7736  09C1                     u6747:	
  7737  09C1  0B89               	decfsz	9,f
  7738  09C2  29C1               	goto	u6747
  7739  09C3  0BF3               	decfsz	??_digitalpot,f
  7740  09C4  29C1               	goto	u6747
  7741  09C5  3200               	nop2
  7742  09C6  0008               	return
  7743  09C7                     __end_of_digitalpot:	
  7744                           
  7745                           	psect	text30
  7746  08B1                     __ptext30:	
  7747 ;; *************** function _i2c_Write *****************
  7748 ;; Defined at:
  7749 ;;		line 831 in file "Multi_RX_testjig_v1.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;  data            1    wreg     unsigned char 
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  data            1    2[COMMON] unsigned char 
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  1    wreg      void 
  7756 ;; Registers used:
  7757 ;;		wreg, status,2
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7767 ;;Total ram usage:        1 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; Hardware stack levels required when called:    1
  7770 ;; This function calls:
  7771 ;;		Nothing
  7772 ;; This function is called by:
  7773 ;;		_i2c_Write_string
  7774 ;;		_i2c_write_char
  7775 ;;		_init_i2c_lcd_5v
  7776 ;;		_clear_lcd
  7777 ;;		_i2c_first_line
  7778 ;;		_i2c_second_line
  7779 ;;		_lcd_set_cursor
  7780 ;;		_digitalpot
  7781 ;;		_lcd_blink_cursor
  7782 ;;		_contrast_set
  7783 ;;		_print_second_line
  7784 ;;		_lcd_createChar
  7785 ;; This function uses a non-reentrant model
  7786 ;;
  7787                           
  7788                           
  7789                           ;psect for function _i2c_Write
  7790  08B1                     _i2c_Write:	
  7791                           
  7792                           ;incstack = 0
  7793                           ; Regs used in _i2c_Write: [wreg+status,2]
  7794                           ;i2c_Write@data stored from wreg
  7795  08B1  00F2               	movwf	i2c_Write@data
  7796                           
  7797                           ;Multi_RX_testjig_v1.c: 833: SSP1BUF = data;
  7798  08B2  0872               	movf	i2c_Write@data,w
  7799  08B3  0024               	movlb	4	; select bank4
  7800  08B4  0091               	movwf	17	;volatile
  7801  08B5                     l418:	
  7802                           ;Multi_RX_testjig_v1.c: 834: while(SSP1STATbits.BF == 1);
  7803                           
  7804  08B5  1814               	btfsc	20,0	;volatile
  7805  08B6  28B5               	goto	l418
  7806  08B7                     l3788:	
  7807                           ;Multi_RX_testjig_v1.c: 835: while((SSP1CON2 & 0x1F) || (SSP1STAT & 0x04));
  7808                           
  7809  08B7  0816               	movf	22,w	;volatile
  7810  08B8  391F               	andlw	31
  7811  08B9  1D03               	btfss	3,2
  7812  08BA  28B7               	goto	l3788
  7813  08BB  1D14               	btfss	20,2	;volatile
  7814  08BC  0008               	return
  7815  08BD  28B7               	goto	l3788
  7816  08BE                     __end_of_i2c_Write:	
  7817                           
  7818                           	psect	text31
  7819  0891                     __ptext31:	
  7820 ;; *************** function _i2c_Stop *****************
  7821 ;; Defined at:
  7822 ;;		line 838 in file "Multi_RX_testjig_v1.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;		None
  7825 ;; Auto vars:     Size  Location     Type
  7826 ;;		None
  7827 ;; Return value:  Size  Location     Type
  7828 ;;                  1    wreg      void 
  7829 ;; Registers used:
  7830 ;;		None
  7831 ;; Tracked objects:
  7832 ;;		On entry : 0/0
  7833 ;;		On exit  : 0/0
  7834 ;;		Unchanged: 0/0
  7835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7840 ;;Total ram usage:        0 bytes
  7841 ;; Hardware stack levels used:    1
  7842 ;; Hardware stack levels required when called:    1
  7843 ;; This function calls:
  7844 ;;		Nothing
  7845 ;; This function is called by:
  7846 ;;		_i2c_Write_string
  7847 ;;		_i2c_write_char
  7848 ;;		_init_i2c_lcd_5v
  7849 ;;		_clear_lcd
  7850 ;;		_i2c_first_line
  7851 ;;		_i2c_second_line
  7852 ;;		_lcd_set_cursor
  7853 ;;		_digitalpot
  7854 ;;		_lcd_blink_cursor
  7855 ;;		_contrast_set
  7856 ;;		_print_second_line
  7857 ;;		_lcd_createChar
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           
  7862                           ;psect for function _i2c_Stop
  7863  0891                     _i2c_Stop:	
  7864                           
  7865                           ;Multi_RX_testjig_v1.c: 840: SSP1CON2bits.PEN = 1;
  7866                           
  7867                           ;incstack = 0
  7868                           ; Regs used in _i2c_Stop: []
  7869  0891  0024               	movlb	4	; select bank4
  7870  0892  1516               	bsf	22,2	;volatile
  7871  0893                     l427:	
  7872                           ;Multi_RX_testjig_v1.c: 841: while(SSP1CON2bits.PEN == 1);
  7873                           
  7874  0893  1D16               	btfss	22,2	;volatile
  7875  0894  0008               	return
  7876  0895  2893               	goto	l427
  7877  0896                     __end_of_i2c_Stop:	
  7878                           
  7879                           	psect	text32
  7880  088C                     __ptext32:	
  7881 ;; *************** function _i2c_Start *****************
  7882 ;; Defined at:
  7883 ;;		line 822 in file "Multi_RX_testjig_v1.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;		None
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;		None
  7888 ;; Return value:  Size  Location     Type
  7889 ;;                  1    wreg      void 
  7890 ;; Registers used:
  7891 ;;		None
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7901 ;;Total ram usage:        0 bytes
  7902 ;; Hardware stack levels used:    1
  7903 ;; Hardware stack levels required when called:    1
  7904 ;; This function calls:
  7905 ;;		Nothing
  7906 ;; This function is called by:
  7907 ;;		_i2c_Write_string
  7908 ;;		_i2c_write_char
  7909 ;;		_init_i2c_lcd_5v
  7910 ;;		_clear_lcd
  7911 ;;		_i2c_first_line
  7912 ;;		_i2c_second_line
  7913 ;;		_lcd_set_cursor
  7914 ;;		_digitalpot
  7915 ;;		_lcd_blink_cursor
  7916 ;;		_contrast_set
  7917 ;;		_print_second_line
  7918 ;;		_lcd_createChar
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922                           
  7923                           ;psect for function _i2c_Start
  7924  088C                     _i2c_Start:	
  7925                           
  7926                           ;Multi_RX_testjig_v1.c: 825: SSP1CON2bits.SEN = 1;
  7927                           
  7928                           ;incstack = 0
  7929                           ; Regs used in _i2c_Start: []
  7930  088C  0024               	movlb	4	; select bank4
  7931  088D  1416               	bsf	22,0	;volatile
  7932  088E                     l412:	
  7933                           ;Multi_RX_testjig_v1.c: 827: while(SSP1CON2bits.SEN == 1);
  7934                           
  7935  088E  1C16               	btfss	22,0	;volatile
  7936  088F  0008               	return
  7937  0890  288E               	goto	l412
  7938  0891                     __end_of_i2c_Start:	
  7939                           
  7940                           	psect	text33
  7941  0A5F                     __ptext33:	
  7942 ;; *************** function _TX_one *****************
  7943 ;; Defined at:
  7944 ;;		line 1843 in file "Multi_RX_testjig_v1.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;  data            1    wreg     unsigned char 
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;  data            1    3[COMMON] unsigned char 
  7949 ;;  i               1    4[COMMON] unsigned char 
  7950 ;; Return value:  Size  Location     Type
  7951 ;;                  1    wreg      void 
  7952 ;; Registers used:
  7953 ;;		wreg, status,2, status,0
  7954 ;; Tracked objects:
  7955 ;;		On entry : 0/0
  7956 ;;		On exit  : 0/0
  7957 ;;		Unchanged: 0/0
  7958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  7959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7960 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7961 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7962 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  7963 ;;Total ram usage:        3 bytes
  7964 ;; Hardware stack levels used:    1
  7965 ;; Hardware stack levels required when called:    1
  7966 ;; This function calls:
  7967 ;;		Nothing
  7968 ;; This function is called by:
  7969 ;;		_main
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           
  7974                           ;psect for function _TX_one
  7975  0A5F                     _TX_one:	
  7976                           
  7977                           ;incstack = 0
  7978                           ; Regs used in _TX_one: [wreg+status,2+status,0]
  7979                           ;TX_one@data stored from wreg
  7980  0A5F  00F3               	movwf	TX_one@data
  7981                           
  7982                           ;Multi_RX_testjig_v1.c: 1845: TRISG0 = 0;
  7983  0A60  0026               	movlb	6	; select bank6
  7984  0A61  100D               	bcf	13,0	;volatile
  7985                           
  7986                           ;Multi_RX_testjig_v1.c: 1846: LATG0 = 0;
  7987  0A62  0027               	movlb	7	; select bank7
  7988  0A63  100D               	bcf	13,0	;volatile
  7989                           
  7990                           ;Multi_RX_testjig_v1.c: 1847: _delay((unsigned long)((100)*(16000000/4000000.0)));
  7991  0A64  3085               	movlw	133
  7992  0A65                     u6757:	
  7993  0A65  0B89               	decfsz	9,f
  7994  0A66  2A65               	goto	u6757
  7995  0A67  0000               	nop
  7996                           
  7997                           ;Multi_RX_testjig_v1.c: 1849: unsigned char i;
  7998                           ;Multi_RX_testjig_v1.c: 1850: for(i = 0; i < 8; i++)
  7999  0A68  01F4               	clrf	TX_one@i
  8000  0A69  3008               	movlw	8
  8001  0A6A  0274               	subwf	TX_one@i,w
  8002  0A6B  1803               	btfsc	3,0
  8003  0A6C  2A84               	goto	l633
  8004  0A6D                     l632:	
  8005                           
  8006                           ;Multi_RX_testjig_v1.c: 1851: {
  8007                           ;Multi_RX_testjig_v1.c: 1852: LATG0 = data & 0x01;
  8008  0A6D  1C73               	btfss	TX_one@data,0
  8009  0A6E  2A72               	goto	u5450
  8010  0A6F  0027               	movlb	7	; select bank7
  8011  0A70  140D               	bsf	13,0	;volatile
  8012  0A71  2A74               	goto	l4412
  8013  0A72                     u5450:	
  8014  0A72  0027               	movlb	7	; select bank7
  8015  0A73  100D               	bcf	13,0	;volatile
  8016  0A74                     l4412:	
  8017                           
  8018                           ;Multi_RX_testjig_v1.c: 1853: data = data >> 1;
  8019  0A74  3673               	lsrf	TX_one@data,w
  8020  0A75  00F2               	movwf	??_TX_one
  8021  0A76  0872               	movf	??_TX_one,w
  8022  0A77  00F3               	movwf	TX_one@data
  8023                           
  8024                           ;Multi_RX_testjig_v1.c: 1854: _delay((unsigned long)((100)*(16000000/4000000.0)));
  8025  0A78  3085               	movlw	133
  8026  0A79                     u6767:	
  8027  0A79  0B89               	decfsz	9,f
  8028  0A7A  2A79               	goto	u6767
  8029  0A7B  0000               	nop
  8030  0A7C  3001               	movlw	1
  8031  0A7D  00F2               	movwf	??_TX_one
  8032  0A7E  0872               	movf	??_TX_one,w
  8033  0A7F  07F4               	addwf	TX_one@i,f
  8034  0A80  3008               	movlw	8
  8035  0A81  0274               	subwf	TX_one@i,w
  8036  0A82  1C03               	skipc
  8037  0A83  2A6D               	goto	l632
  8038  0A84                     l633:	
  8039                           
  8040                           ;Multi_RX_testjig_v1.c: 1855: }
  8041                           ;Multi_RX_testjig_v1.c: 1856: LATG0 = 1;
  8042  0A84  0027               	movlb	7	; select bank7
  8043  0A85  140D               	bsf	13,0	;volatile
  8044                           
  8045                           ;Multi_RX_testjig_v1.c: 1857: _delay((unsigned long)((100)*(16000000/4000000.0)));
  8046  0A86  3085               	movlw	133
  8047  0A87                     u6777:	
  8048  0A87  0B89               	decfsz	9,f
  8049  0A88  2A87               	goto	u6777
  8050  0A89  0000               	nop
  8051  0A8A  0008               	return
  8052  0A8B                     __end_of_TX_one:	
  8053                           
  8054                           	psect	text34
  8055  0A8B                     __ptext34:	
  8056 ;; *************** function _RX_one_timeout *****************
  8057 ;; Defined at:
  8058 ;;		line 1882 in file "Multi_RX_testjig_v1.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;		None
  8061 ;; Auto vars:     Size  Location     Type
  8062 ;;  data            1    4[COMMON] unsigned char 
  8063 ;;  i               1    3[COMMON] unsigned char 
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  1    wreg      unsigned char 
  8066 ;; Registers used:
  8067 ;;		wreg, status,2, status,0
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8074 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8076 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8077 ;;Total ram usage:        3 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:    1
  8080 ;; This function calls:
  8081 ;;		Nothing
  8082 ;; This function is called by:
  8083 ;;		_main
  8084 ;; This function uses a non-reentrant model
  8085 ;;
  8086                           
  8087                           
  8088                           ;psect for function _RX_one_timeout
  8089  0A8B                     _RX_one_timeout:	
  8090                           
  8091                           ;Multi_RX_testjig_v1.c: 1885: uart_receive_timer = 500;
  8092                           
  8093                           ;incstack = 0
  8094                           ; Regs used in _RX_one_timeout: [wreg+status,2+status,0]
  8095  0A8B  30F4               	movlw	244
  8096  0A8C  0020               	movlb	0	; select bank0
  8097  0A8D  00DF               	movwf	_uart_receive_timer	;volatile
  8098  0A8E  3001               	movlw	1
  8099  0A8F  00E0               	movwf	_uart_receive_timer+1	;volatile
  8100  0A90                     l647:	
  8101                           ;Multi_RX_testjig_v1.c: 1886: while(RG3 == 1 && uart_receive_timer);
  8102                           
  8103  0A90  0025               	movlb	5	; select bank5
  8104  0A91  1D8D               	btfss	13,3	;volatile
  8105  0A92  2A98               	goto	l4424
  8106  0A93  0020               	movlb	0	; select bank0
  8107  0A94  085F               	movf	_uart_receive_timer,w	;volatile
  8108  0A95  0460               	iorwf	_uart_receive_timer+1,w	;volatile
  8109  0A96  1D03               	btfss	3,2
  8110  0A97  2A90               	goto	l647
  8111  0A98                     l4424:	
  8112                           
  8113                           ;Multi_RX_testjig_v1.c: 1887: _delay((unsigned long)((150)*(16000000/4000000.0)));
  8114  0A98  30C8               	movlw	200
  8115  0A99                     u6787:	
  8116  0A99  0B89               	decfsz	9,f
  8117  0A9A  2A99               	goto	u6787
  8118                           
  8119                           ;Multi_RX_testjig_v1.c: 1888: unsigned char i;
  8120                           ;Multi_RX_testjig_v1.c: 1889: unsigned char data = 0;
  8121  0A9B  01F4               	clrf	RX_one_timeout@data
  8122                           
  8123                           ;Multi_RX_testjig_v1.c: 1890: for(i = 0; i < 8; i++)
  8124  0A9C  01F3               	clrf	RX_one_timeout@i
  8125  0A9D  3008               	movlw	8
  8126  0A9E  0273               	subwf	RX_one_timeout@i,w
  8127  0A9F  1803               	btfsc	3,0
  8128  0AA0  2ABB               	goto	l4442
  8129  0AA1                     l652:	
  8130                           
  8131                           ;Multi_RX_testjig_v1.c: 1891: {
  8132                           ;Multi_RX_testjig_v1.c: 1892: LATF4 = 1;
  8133  0AA1  0027               	movlb	7	; select bank7
  8134  0AA2  160C               	bsf	12,4	;volatile
  8135                           
  8136                           ;Multi_RX_testjig_v1.c: 1893: if(RG3 == 0)
  8137  0AA3  0025               	movlb	5	; select bank5
  8138  0AA4  198D               	btfsc	13,3	;volatile
  8139  0AA5  2AA8               	goto	l4434
  8140                           
  8141                           ;Multi_RX_testjig_v1.c: 1894: data = data >> 1;
  8142  0AA6  3674               	lsrf	RX_one_timeout@data,w
  8143  0AA7  2AAA               	goto	L34
  8144  0AA8                     l4434:	
  8145                           
  8146                           ;Multi_RX_testjig_v1.c: 1895: else
  8147                           ;Multi_RX_testjig_v1.c: 1896: data = (data >> 1) | 0x80;
  8148  0AA8  3674               	lsrf	RX_one_timeout@data,w
  8149  0AA9  3880               	iorlw	128
  8150  0AAA                     L34:	
  8151  0AAA  00F2               	movwf	??_RX_one_timeout
  8152  0AAB  0872               	movf	??_RX_one_timeout,w
  8153  0AAC  00F4               	movwf	RX_one_timeout@data
  8154                           
  8155                           ;Multi_RX_testjig_v1.c: 1897: LATF4 = 0;
  8156  0AAD  0027               	movlb	7	; select bank7
  8157  0AAE  120C               	bcf	12,4	;volatile
  8158                           
  8159                           ;Multi_RX_testjig_v1.c: 1898: _delay((unsigned long)((100)*(16000000/4000000.0)));
  8160  0AAF  3085               	movlw	133
  8161  0AB0                     u6797:	
  8162  0AB0  0B89               	decfsz	9,f
  8163  0AB1  2AB0               	goto	u6797
  8164  0AB2  0000               	nop
  8165  0AB3  3001               	movlw	1
  8166  0AB4  00F2               	movwf	??_RX_one_timeout
  8167  0AB5  0872               	movf	??_RX_one_timeout,w
  8168  0AB6  07F3               	addwf	RX_one_timeout@i,f
  8169  0AB7  3008               	movlw	8
  8170  0AB8  0273               	subwf	RX_one_timeout@i,w
  8171  0AB9  1C03               	skipc
  8172  0ABA  2AA1               	goto	l652
  8173  0ABB                     l4442:	
  8174                           
  8175                           ;Multi_RX_testjig_v1.c: 1899: }
  8176                           ;Multi_RX_testjig_v1.c: 1900: _delay((unsigned long)((100)*(16000000/4000000.0)));
  8177  0ABB  3085               	movlw	133
  8178  0ABC                     u6807:	
  8179  0ABC  0B89               	decfsz	9,f
  8180  0ABD  2ABC               	goto	u6807
  8181  0ABE  0000               	nop
  8182                           
  8183                           ;Multi_RX_testjig_v1.c: 1902: return data;
  8184  0ABF  0874               	movf	RX_one_timeout@data,w
  8185  0AC0  0008               	return
  8186  0AC1                     __end_of_RX_one_timeout:	
  8187                           
  8188                           	psect	text35
  8189  0A33                     __ptext35:	
  8190 ;; *************** function _RX_one *****************
  8191 ;; Defined at:
  8192 ;;		line 1860 in file "Multi_RX_testjig_v1.c"
  8193 ;; Parameters:    Size  Location     Type
  8194 ;;		None
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;  data            1    4[COMMON] unsigned char 
  8197 ;;  i               1    3[COMMON] unsigned char 
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  1    wreg      unsigned char 
  8200 ;; Registers used:
  8201 ;;		wreg, status,2, status,0
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8208 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8210 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8211 ;;Total ram usage:        3 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; Hardware stack levels required when called:    1
  8214 ;; This function calls:
  8215 ;;		Nothing
  8216 ;; This function is called by:
  8217 ;;		_main
  8218 ;; This function uses a non-reentrant model
  8219 ;;
  8220                           
  8221                           
  8222                           ;psect for function _RX_one
  8223  0A33                     _RX_one:	
  8224  0A33                     l637:	
  8225                           ;Multi_RX_testjig_v1.c: 1863: while(RG3 == 1);
  8226                           
  8227                           ;incstack = 0
  8228                           ; Regs used in _RX_one: [wreg+status,2+status,0]
  8229                           
  8230  0A33  0025               	movlb	5	; select bank5
  8231  0A34  198D               	btfsc	13,3	;volatile
  8232  0A35  2A33               	goto	l637
  8233                           
  8234                           ;Multi_RX_testjig_v1.c: 1864: _delay((unsigned long)((150)*(16000000/4000000.0)));
  8235  0A36  30C8               	movlw	200
  8236  0A37                     u6817:	
  8237  0A37  0B89               	decfsz	9,f
  8238  0A38  2A37               	goto	u6817
  8239                           
  8240                           ;Multi_RX_testjig_v1.c: 1865: unsigned char i;
  8241                           ;Multi_RX_testjig_v1.c: 1866: unsigned char data = 0;
  8242  0A39  01F4               	clrf	RX_one@data
  8243                           
  8244                           ;Multi_RX_testjig_v1.c: 1867: for(i = 0; i < 8; i++)
  8245  0A3A  01F3               	clrf	RX_one@i
  8246  0A3B  3008               	movlw	8
  8247  0A3C  0273               	subwf	RX_one@i,w
  8248  0A3D  1803               	btfsc	3,0
  8249  0A3E  2A59               	goto	l4530
  8250  0A3F                     l640:	
  8251                           
  8252                           ;Multi_RX_testjig_v1.c: 1868: {
  8253                           ;Multi_RX_testjig_v1.c: 1869: LATF4 = 1;
  8254  0A3F  0027               	movlb	7	; select bank7
  8255  0A40  160C               	bsf	12,4	;volatile
  8256                           
  8257                           ;Multi_RX_testjig_v1.c: 1870: if(RG3 == 0)
  8258  0A41  0025               	movlb	5	; select bank5
  8259  0A42  198D               	btfsc	13,3	;volatile
  8260  0A43  2A46               	goto	l4522
  8261                           
  8262                           ;Multi_RX_testjig_v1.c: 1871: data = data >> 1;
  8263  0A44  3674               	lsrf	RX_one@data,w
  8264  0A45  2A48               	goto	L35
  8265  0A46                     l4522:	
  8266                           
  8267                           ;Multi_RX_testjig_v1.c: 1872: else
  8268                           ;Multi_RX_testjig_v1.c: 1873: data = (data >> 1) | 0x80;
  8269  0A46  3674               	lsrf	RX_one@data,w
  8270  0A47  3880               	iorlw	128
  8271  0A48                     L35:	
  8272  0A48  00F2               	movwf	??_RX_one
  8273  0A49  0872               	movf	??_RX_one,w
  8274  0A4A  00F4               	movwf	RX_one@data
  8275                           
  8276                           ;Multi_RX_testjig_v1.c: 1874: LATF4 = 0;
  8277  0A4B  0027               	movlb	7	; select bank7
  8278  0A4C  120C               	bcf	12,4	;volatile
  8279                           
  8280                           ;Multi_RX_testjig_v1.c: 1875: _delay((unsigned long)((100)*(16000000/4000000.0)));
  8281  0A4D  3085               	movlw	133
  8282  0A4E                     u6827:	
  8283  0A4E  0B89               	decfsz	9,f
  8284  0A4F  2A4E               	goto	u6827
  8285  0A50  0000               	nop
  8286  0A51  3001               	movlw	1
  8287  0A52  00F2               	movwf	??_RX_one
  8288  0A53  0872               	movf	??_RX_one,w
  8289  0A54  07F3               	addwf	RX_one@i,f
  8290  0A55  3008               	movlw	8
  8291  0A56  0273               	subwf	RX_one@i,w
  8292  0A57  1C03               	skipc
  8293  0A58  2A3F               	goto	l640
  8294  0A59                     l4530:	
  8295                           
  8296                           ;Multi_RX_testjig_v1.c: 1876: }
  8297                           ;Multi_RX_testjig_v1.c: 1877: _delay((unsigned long)((100)*(16000000/4000000.0)));
  8298  0A59  3085               	movlw	133
  8299  0A5A                     u6837:	
  8300  0A5A  0B89               	decfsz	9,f
  8301  0A5B  2A5A               	goto	u6837
  8302  0A5C  0000               	nop
  8303                           
  8304                           ;Multi_RX_testjig_v1.c: 1879: return data;
  8305  0A5D  0874               	movf	RX_one@data,w
  8306  0A5E  0008               	return
  8307  0A5F                     __end_of_RX_one:	
  8308                           
  8309                           	psect	intentry
  8310  0004                     __pintentry:	
  8311 ;; *************** function _isr *****************
  8312 ;; Defined at:
  8313 ;;		line 322 in file "Multi_RX_testjig_v1.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;		None
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;		None
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  1    wreg      void 
  8320 ;; Registers used:
  8321 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  8327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8329 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  8331 ;;Total ram usage:        2 bytes
  8332 ;; Hardware stack levels used:    1
  8333 ;; This function calls:
  8334 ;;		Nothing
  8335 ;; This function is called by:
  8336 ;;		Interrupt level 1
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340  0004                     _isr:	
  8341                           
  8342                           ;incstack = 0
  8343  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8344                           
  8345                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  8346  0005  3180               	pagesel	$
  8347  0006  0020               	movlb	0	; select bank0
  8348  0007  087F               	movf	127,w
  8349  0008  00F1               	movwf	??_isr+1
  8350                           
  8351                           ;Multi_RX_testjig_v1.c: 324: if(INTCONbits.TMR0IF == 1)
  8352  0009  1D0B               	btfss	11,2	;volatile
  8353  000A  2824               	goto	i1l3220
  8354                           
  8355                           ;Multi_RX_testjig_v1.c: 325: {
  8356                           ;Multi_RX_testjig_v1.c: 327: if(testjig_timer)
  8357  000B  0857               	movf	_testjig_timer,w	;volatile
  8358  000C  0458               	iorwf	_testjig_timer+1,w	;volatile
  8359  000D  1903               	btfsc	3,2
  8360  000E  2813               	goto	i1l3210
  8361                           
  8362                           ;Multi_RX_testjig_v1.c: 328: testjig_timer--;
  8363  000F  3001               	movlw	1
  8364  0010  02D7               	subwf	_testjig_timer,f	;volatile
  8365  0011  3000               	movlw	0
  8366  0012  3BD8               	subwfb	_testjig_timer+1,f	;volatile
  8367  0013                     i1l3210:	
  8368                           
  8369                           ;Multi_RX_testjig_v1.c: 329: if(uart_receive_timer)
  8370  0013  085F               	movf	_uart_receive_timer,w	;volatile
  8371  0014  0460               	iorwf	_uart_receive_timer+1,w	;volatile
  8372  0015  1903               	btfsc	3,2
  8373  0016  281B               	goto	i1l3214
  8374                           
  8375                           ;Multi_RX_testjig_v1.c: 330: uart_receive_timer--;
  8376  0017  30FF               	movlw	255
  8377  0018  07DF               	addwf	_uart_receive_timer,f	;volatile
  8378  0019  30FF               	movlw	255
  8379  001A  3DE0               	addwfc	_uart_receive_timer+1,f	;volatile
  8380  001B                     i1l3214:	
  8381                           
  8382                           ;Multi_RX_testjig_v1.c: 331: if(motor_direction_timer)
  8383  001B  085D               	movf	_motor_direction_timer,w	;volatile
  8384  001C  045E               	iorwf	_motor_direction_timer+1,w	;volatile
  8385  001D  1903               	btfsc	3,2
  8386  001E  2823               	goto	i1l3218
  8387                           
  8388                           ;Multi_RX_testjig_v1.c: 332: motor_direction_timer--;
  8389  001F  30FF               	movlw	255
  8390  0020  07DD               	addwf	_motor_direction_timer,f	;volatile
  8391  0021  30FF               	movlw	255
  8392  0022  3DDE               	addwfc	_motor_direction_timer+1,f	;volatile
  8393  0023                     i1l3218:	
  8394                           
  8395                           ;Multi_RX_testjig_v1.c: 334: INTCONbits.TMR0IF = 0;
  8396  0023  110B               	bcf	11,2	;volatile
  8397  0024                     i1l3220:	
  8398                           
  8399                           ;Multi_RX_testjig_v1.c: 336: }
  8400                           ;Multi_RX_testjig_v1.c: 337: if(PIR1bits.TMR2IF == 1)
  8401  0024  1C91               	btfss	17,1	;volatile
  8402  0025  28A0               	goto	i1l291
  8403                           
  8404                           ;Multi_RX_testjig_v1.c: 338: {
  8405                           ;Multi_RX_testjig_v1.c: 340: if(pickit_timer)
  8406  0026  085B               	movf	_pickit_timer,w	;volatile
  8407  0027  045C               	iorwf	_pickit_timer+1,w	;volatile
  8408  0028  1903               	btfsc	3,2
  8409  0029  2873               	goto	i1l3252
  8410                           
  8411                           ;Multi_RX_testjig_v1.c: 341: pickit_timer--;
  8412  002A  3001               	movlw	1
  8413  002B  02DB               	subwf	_pickit_timer,f	;volatile
  8414  002C  3000               	movlw	0
  8415  002D  3BDC               	subwfb	_pickit_timer+1,f	;volatile
  8416  002E  287D               	goto	i1l3254
  8417  002F                     i1l273:	
  8418                           ;Multi_RX_testjig_v1.c: 345: {
  8419                           ;Multi_RX_testjig_v1.c: 346: case pickit_start:
  8420                           
  8421                           ;Multi_RX_testjig_v1.c: 342: else
  8422                           ;Multi_RX_testjig_v1.c: 343: {
  8423                           ;Multi_RX_testjig_v1.c: 344: switch(pickit_state)
  8424                           
  8425                           
  8426                           ;Multi_RX_testjig_v1.c: 347: LATC2 = 1;
  8427  002F  0022               	movlb	2	; select bank2
  8428  0030  150E               	bsf	14,2	;volatile
  8429                           
  8430                           ;Multi_RX_testjig_v1.c: 348: LATC7 = 1;
  8431  0031  178E               	bsf	14,7	;volatile
  8432                           
  8433                           ;Multi_RX_testjig_v1.c: 349: pickit_timer = 10;
  8434  0032  300A               	movlw	10
  8435  0033  0020               	movlb	0	; select bank0
  8436  0034  00DB               	movwf	_pickit_timer	;volatile
  8437  0035  3000               	movlw	0
  8438  0036  00DC               	movwf	_pickit_timer+1	;volatile
  8439                           
  8440                           ;Multi_RX_testjig_v1.c: 350: pickit_state = pickit_push_button;
  8441  0037  3002               	movlw	2
  8442  0038  00F0               	movwf	??_isr
  8443  0039  0870               	movf	??_isr,w
  8444  003A  2871               	goto	L37
  8445  003B                     i1l3228:	
  8446                           ;Multi_RX_testjig_v1.c: 352: case pickit_push_button:
  8447                           
  8448                           ;Multi_RX_testjig_v1.c: 351: break;
  8449                           
  8450                           
  8451                           ;Multi_RX_testjig_v1.c: 353: pickit_timer = 1000;
  8452  003B  30E8               	movlw	232
  8453  003C  00DB               	movwf	_pickit_timer	;volatile
  8454  003D  3003               	movlw	3
  8455  003E  00DC               	movwf	_pickit_timer+1	;volatile
  8456                           
  8457                           ;Multi_RX_testjig_v1.c: 354: LATC6 = 1;
  8458  003F  0022               	movlb	2	; select bank2
  8459  0040  170E               	bsf	14,6	;volatile
  8460                           
  8461                           ;Multi_RX_testjig_v1.c: 355: pickit_state = pickit_busy;
  8462  0041  3003               	movlw	3
  8463  0042  286E               	goto	L38
  8464  0043                     i1l276:	
  8465                           ;Multi_RX_testjig_v1.c: 357: case pickit_busy:
  8466                           
  8467                           ;Multi_RX_testjig_v1.c: 356: break;
  8468                           
  8469                           
  8470                           ;Multi_RX_testjig_v1.c: 358: LATC6 = 0;
  8471  0043  0022               	movlb	2	; select bank2
  8472  0044  130E               	bcf	14,6	;volatile
  8473                           
  8474                           ;Multi_RX_testjig_v1.c: 359: if(RE6 == 0)
  8475  0045  0020               	movlb	0	; select bank0
  8476  0046  1B10               	btfsc	16,6	;volatile
  8477  0047  2852               	goto	i1l3238
  8478                           
  8479                           ;Multi_RX_testjig_v1.c: 360: {
  8480                           ;Multi_RX_testjig_v1.c: 361: pickit_red_counter++;
  8481  0048  3001               	movlw	1
  8482  0049  00F0               	movwf	??_isr
  8483  004A  0870               	movf	??_isr,w
  8484  004B  07E1               	addwf	_pickit_red_counter,f
  8485                           
  8486                           ;Multi_RX_testjig_v1.c: 362: if(pickit_red_counter > 100)
  8487  004C  3065               	movlw	101
  8488  004D  0261               	subwf	_pickit_red_counter,w
  8489  004E  1C03               	skipc
  8490  004F  2853               	goto	i1l3240
  8491                           
  8492                           ;Multi_RX_testjig_v1.c: 363: pickit_state = pickit_finish;
  8493  0050  01EC               	clrf	_pickit_state
  8494                           
  8495                           ;Multi_RX_testjig_v1.c: 364: }
  8496  0051  2853               	goto	i1l3240
  8497  0052                     i1l3238:	
  8498                           
  8499                           ;Multi_RX_testjig_v1.c: 365: else
  8500                           ;Multi_RX_testjig_v1.c: 366: pickit_red_counter = 0;
  8501  0052  01E1               	clrf	_pickit_red_counter
  8502  0053                     i1l3240:	
  8503                           
  8504                           ;Multi_RX_testjig_v1.c: 367: if(RE5 == 0)
  8505  0053  1A90               	btfsc	16,5	;volatile
  8506  0054  285E               	goto	i1l280
  8507                           
  8508                           ;Multi_RX_testjig_v1.c: 368: {
  8509                           ;Multi_RX_testjig_v1.c: 369: pickit_state = pickit_error;
  8510  0055  3004               	movlw	4
  8511  0056  00F0               	movwf	??_isr
  8512  0057  0870               	movf	??_isr,w
  8513  0058  00EC               	movwf	_pickit_state
  8514                           
  8515                           ;Multi_RX_testjig_v1.c: 370: pickit_timer = 1000;
  8516  0059  30E8               	movlw	232
  8517  005A  00DB               	movwf	_pickit_timer	;volatile
  8518  005B  3003               	movlw	3
  8519  005C  00DC               	movwf	_pickit_timer+1	;volatile
  8520                           
  8521                           ;Multi_RX_testjig_v1.c: 371: }
  8522  005D  2861               	goto	i1l3246
  8523  005E                     i1l280:	
  8524                           
  8525                           ;Multi_RX_testjig_v1.c: 372: else if(RE4 == 0)
  8526  005E  1A10               	btfsc	16,4	;volatile
  8527  005F  2861               	goto	i1l3246
  8528                           
  8529                           ;Multi_RX_testjig_v1.c: 373: {
  8530                           ;Multi_RX_testjig_v1.c: 374: pickit_state = pickit_finish;
  8531  0060  01EC               	clrf	_pickit_state
  8532  0061                     i1l3246:	
  8533                           
  8534                           ;Multi_RX_testjig_v1.c: 375: }
  8535                           ;Multi_RX_testjig_v1.c: 376: pickit_timer = 1;
  8536  0061  3001               	movlw	1
  8537  0062  00DB               	movwf	_pickit_timer	;volatile
  8538  0063  3000               	movlw	0
  8539  0064  00DC               	movwf	_pickit_timer+1	;volatile
  8540                           
  8541                           ;Multi_RX_testjig_v1.c: 377: break;
  8542  0065  287D               	goto	i1l3254
  8543  0066                     i1l283:	
  8544                           ;Multi_RX_testjig_v1.c: 378: case pickit_error:
  8545                           
  8546                           
  8547                           ;Multi_RX_testjig_v1.c: 379: LATC2 = 0;
  8548  0066  0022               	movlb	2	; select bank2
  8549  0067  110E               	bcf	14,2	;volatile
  8550                           
  8551                           ;Multi_RX_testjig_v1.c: 380: LATC7 = 0;
  8552  0068  138E               	bcf	14,7	;volatile
  8553                           
  8554                           ;Multi_RX_testjig_v1.c: 381: break;
  8555  0069  287D               	goto	i1l3254
  8556  006A                     i1l284:	
  8557                           ;Multi_RX_testjig_v1.c: 382: case pickit_finish:
  8558                           
  8559                           
  8560                           ;Multi_RX_testjig_v1.c: 383: LATC2 = 0;
  8561  006A  0022               	movlb	2	; select bank2
  8562  006B  110E               	bcf	14,2	;volatile
  8563                           
  8564                           ;Multi_RX_testjig_v1.c: 384: LATC7 = 0;
  8565  006C  138E               	bcf	14,7	;volatile
  8566                           
  8567                           ;Multi_RX_testjig_v1.c: 385: pickit_state = pickit_idle;
  8568  006D  3005               	movlw	5
  8569  006E                     L38:	
  8570  006E  00F0               	movwf	??_isr
  8571  006F  0870               	movf	??_isr,w
  8572  0070  0020               	movlb	0	; select bank0
  8573  0071                     L37:	
  8574  0071  00EC               	movwf	_pickit_state
  8575                           
  8576                           ;Multi_RX_testjig_v1.c: 389: }
  8577                           
  8578                           ;Multi_RX_testjig_v1.c: 388: break;
  8579                           
  8580                           ;Multi_RX_testjig_v1.c: 387: case pickit_idle:
  8581                           
  8582                           ;Multi_RX_testjig_v1.c: 386: break;
  8583  0072  287D               	goto	i1l3254
  8584  0073                     i1l3252:	
  8585  0073  086C               	movf	_pickit_state,w
  8586                           
  8587                           ; Switch size 1, requested type "space"
  8588                           ; Number of cases is 6, Range of values is 0 to 5
  8589                           ; switch strategies available:
  8590                           ; Name         Instructions Cycles
  8591                           ; direct_byte           18     6 (fixed)
  8592                           ; simple_byte           19    10 (average)
  8593                           ; jumptable            260     6 (fixed)
  8594                           ;	Chosen strategy is direct_byte
  8595  0074  0084               	movwf	4
  8596  0075  3006               	movlw	6
  8597  0076  0204               	subwf	4,w
  8598  0077  1803               	skipnc
  8599  0078  287D               	goto	i1l3254
  8600  0079  3188               	movlp	high i1S5032
  8601  007A  3504               	lslf	4,w
  8602  007B  3E00               	addlw	low i1S5032
  8603  007C  0082               	movwf	2
  8604  007D                     i1l3254:	
  8605                           
  8606                           ;Multi_RX_testjig_v1.c: 390: }
  8607                           ;Multi_RX_testjig_v1.c: 452: if(buzz_timer)
  8608  007D  0021               	movlb	1	; select bank1
  8609  007E  086D               	movf	_buzz_timer^(0+128),w	;volatile
  8610  007F  046E               	iorwf	(_buzz_timer+1)^(0+128),w	;volatile
  8611  0080  1903               	btfsc	3,2
  8612  0081  2887               	goto	i1l286
  8613                           
  8614                           ;Multi_RX_testjig_v1.c: 453: buzz_timer--;
  8615  0082  3001               	movlw	1
  8616  0083  02ED               	subwf	_buzz_timer^(0+128),f	;volatile
  8617  0084  3000               	movlw	0
  8618  0085  3BEE               	subwfb	(_buzz_timer+1)^(0+128),f	;volatile
  8619  0086  2889               	goto	i1l3258
  8620  0087                     i1l286:	
  8621                           
  8622                           ;Multi_RX_testjig_v1.c: 454: else
  8623                           ;Multi_RX_testjig_v1.c: 455: LATC5 = 0;
  8624  0087  0022               	movlb	2	; select bank2
  8625  0088  128E               	bcf	14,5	;volatile
  8626  0089                     i1l3258:	
  8627                           
  8628                           ;Multi_RX_testjig_v1.c: 456: if(one_second_timer)
  8629  0089  0020               	movlb	0	; select bank0
  8630  008A  0869               	movf	_one_second_timer,w	;volatile
  8631  008B  046A               	iorwf	_one_second_timer+1,w	;volatile
  8632  008C  1903               	btfsc	3,2
  8633  008D  2893               	goto	i1l3262
  8634                           
  8635                           ;Multi_RX_testjig_v1.c: 457: one_second_timer--;
  8636  008E  3001               	movlw	1
  8637  008F  02E9               	subwf	_one_second_timer,f	;volatile
  8638  0090  3000               	movlw	0
  8639  0091  3BEA               	subwfb	_one_second_timer+1,f	;volatile
  8640  0092  2897               	goto	i1l3264
  8641  0093                     i1l3262:	
  8642                           
  8643                           ;Multi_RX_testjig_v1.c: 458: else
  8644                           ;Multi_RX_testjig_v1.c: 459: {
  8645                           ;Multi_RX_testjig_v1.c: 460: one_second_timer = 1000;
  8646  0093  30E8               	movlw	232
  8647  0094  00E9               	movwf	_one_second_timer	;volatile
  8648  0095  3003               	movlw	3
  8649  0096  00EA               	movwf	_one_second_timer+1	;volatile
  8650  0097                     i1l3264:	
  8651                           
  8652                           ;Multi_RX_testjig_v1.c: 461: }
  8653                           ;Multi_RX_testjig_v1.c: 462: if(tj_timer)
  8654  0097  0855               	movf	_tj_timer,w
  8655  0098  0456               	iorwf	_tj_timer+1,w
  8656  0099  1903               	btfsc	3,2
  8657  009A  289F               	goto	i1l3268
  8658                           
  8659                           ;Multi_RX_testjig_v1.c: 463: tj_timer--;
  8660  009B  3001               	movlw	1
  8661  009C  02D5               	subwf	_tj_timer,f
  8662  009D  3000               	movlw	0
  8663  009E  3BD6               	subwfb	_tj_timer+1,f
  8664  009F                     i1l3268:	
  8665                           
  8666                           ;Multi_RX_testjig_v1.c: 464: PIR1bits.TMR2IF = 0;
  8667  009F  1091               	bcf	17,1	;volatile
  8668  00A0                     i1l291:	
  8669  00A0  0871               	movf	??_isr+1,w
  8670  00A1  00FF               	movwf	127
  8671  00A2  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8672  00A3  0009               	retfie
  8673  00A4                     __end_of_isr:	
  8674  007E                     btemp	set	126	;btemp
  8675  007E                     int$flags	set	126
  8676  007E                     wtemp0	set	126
  8677                           
  8678                           	psect	swtext1
  8679  0800                     __pswtext1:	
  8680  0800                     i1S5032:	
  8681  0800  3180  286A         	ljmp	i1l284
  8682  0802  3180  282F         	ljmp	i1l273
  8683  0804  3180  283B         	ljmp	i1l3228
  8684  0806  3180  2843         	ljmp	i1l276
  8685  0808  3180  2866         	ljmp	i1l283
  8686  080A  3180  287D         	ljmp	i1l3254


Data Sizes:
    Strings     572
    Constant    2
    Data        67
    BSS         35
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     53      77
    BANK1            80      0      79
    BANK2            80      4       4
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0

Pointer List with Targets:

    print_screen@bottom	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_108(CODE[17]), STR_106(CODE[13]), STR_104(CODE[13]), STR_102(CODE[13]), 
		 -> STR_100(CODE[13]), STR_98(CODE[14]), STR_96(CODE[14]), STR_94(CODE[14]), 
		 -> STR_92(CODE[14]), STR_90(CODE[8]), STR_88(CODE[8]), STR_86(CODE[9]), 
		 -> STR_84(CODE[9]), STR_82(CODE[9]), STR_80(CODE[14]), STR_78(CODE[14]), 
		 -> STR_76(CODE[14]), STR_74(CODE[14]), STR_66(CODE[16]), STR_64(CODE[7]), 
		 -> STR_62(CODE[10]), STR_52(CODE[5]), STR_50(CODE[9]), STR_38(CODE[4]), 
		 -> STR_34(CODE[6]), STR_32(CODE[9]), STR_30(CODE[13]), STR_28(CODE[1]), 
		 -> STR_6(CODE[1]), STR_2(CODE[17]), 

    print_screen@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_107(CODE[12]), STR_105(CODE[17]), STR_103(CODE[16]), STR_101(CODE[12]), 
		 -> STR_99(CODE[15]), STR_97(CODE[17]), STR_95(CODE[16]), STR_93(CODE[12]), 
		 -> STR_91(CODE[15]), STR_89(CODE[17]), STR_87(CODE[9]), STR_85(CODE[16]), 
		 -> STR_83(CODE[5]), STR_81(CODE[8]), STR_79(CODE[14]), STR_77(CODE[16]), 
		 -> STR_75(CODE[9]), STR_73(CODE[12]), STR_65(CODE[8]), STR_63(CODE[8]), 
		 -> STR_61(CODE[8]), STR_51(CODE[8]), STR_49(CODE[8]), STR_37(CODE[8]), 
		 -> STR_33(CODE[13]), STR_31(CODE[19]), STR_29(CODE[12]), STR_27(CODE[19]), 
		 -> STR_5(CODE[15]), STR_1(CODE[9]), 

    print_error@bottom	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_72(CODE[4]), STR_70(CODE[15]), STR_68(CODE[17]), STR_60(CODE[13]), 
		 -> STR_58(CODE[14]), STR_56(CODE[4]), STR_54(CODE[4]), STR_48(CODE[13]), 
		 -> STR_46(CODE[16]), STR_44(CODE[14]), STR_42(CODE[4]), STR_40(CODE[4]), 
		 -> STR_36(CODE[3]), STR_26(CODE[12]), STR_24(CODE[11]), STR_22(CODE[13]), 
		 -> STR_20(CODE[13]), STR_18(CODE[13]), STR_16(CODE[13]), STR_14(CODE[12]), 
		 -> STR_12(CODE[11]), STR_10(CODE[13]), STR_8(CODE[13]), STR_4(CODE[14]), 

    print_error@top	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_71(CODE[12]), STR_69(CODE[8]), STR_67(CODE[8]), STR_59(CODE[13]), 
		 -> STR_57(CODE[13]), STR_55(CODE[12]), STR_53(CODE[12]), STR_47(CODE[12]), 
		 -> STR_45(CODE[12]), STR_43(CODE[12]), STR_41(CODE[12]), STR_39(CODE[12]), 
		 -> STR_35(CODE[12]), STR_25(CODE[14]), STR_23(CODE[11]), STR_21(CODE[15]), 
		 -> STR_19(CODE[15]), STR_17(CODE[14]), STR_15(CODE[14]), STR_13(CODE[14]), 
		 -> STR_11(CODE[11]), STR_9(CODE[14]), STR_7(CODE[14]), STR_3(CODE[9]), 

    i2c_Write_string@data	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_108(CODE[17]), STR_107(CODE[12]), STR_106(CODE[13]), STR_105(CODE[17]), 
		 -> STR_104(CODE[13]), STR_103(CODE[16]), STR_102(CODE[13]), STR_101(CODE[12]), 
		 -> STR_100(CODE[13]), STR_99(CODE[15]), STR_98(CODE[14]), STR_97(CODE[17]), 
		 -> STR_96(CODE[14]), STR_95(CODE[16]), STR_94(CODE[14]), STR_93(CODE[12]), 
		 -> STR_92(CODE[14]), STR_91(CODE[15]), STR_90(CODE[8]), STR_89(CODE[17]), 
		 -> STR_88(CODE[8]), STR_87(CODE[9]), STR_86(CODE[9]), STR_85(CODE[16]), 
		 -> STR_84(CODE[9]), STR_83(CODE[5]), STR_82(CODE[9]), STR_81(CODE[8]), 
		 -> STR_80(CODE[14]), STR_79(CODE[14]), STR_78(CODE[14]), STR_77(CODE[16]), 
		 -> STR_76(CODE[14]), STR_75(CODE[9]), STR_74(CODE[14]), STR_73(CODE[12]), 
		 -> STR_72(CODE[4]), STR_71(CODE[12]), STR_70(CODE[15]), STR_69(CODE[8]), 
		 -> STR_68(CODE[17]), STR_67(CODE[8]), STR_66(CODE[16]), STR_65(CODE[8]), 
		 -> STR_64(CODE[7]), STR_63(CODE[8]), STR_62(CODE[10]), STR_61(CODE[8]), 
		 -> STR_60(CODE[13]), STR_59(CODE[13]), STR_58(CODE[14]), STR_57(CODE[13]), 
		 -> STR_56(CODE[4]), STR_55(CODE[12]), STR_54(CODE[4]), STR_53(CODE[12]), 
		 -> STR_52(CODE[5]), STR_51(CODE[8]), STR_50(CODE[9]), STR_49(CODE[8]), 
		 -> STR_48(CODE[13]), STR_47(CODE[12]), STR_46(CODE[16]), STR_45(CODE[12]), 
		 -> STR_44(CODE[14]), STR_43(CODE[12]), STR_42(CODE[4]), STR_41(CODE[12]), 
		 -> STR_40(CODE[4]), STR_39(CODE[12]), STR_38(CODE[4]), STR_37(CODE[8]), 
		 -> STR_36(CODE[3]), STR_35(CODE[12]), STR_34(CODE[6]), STR_33(CODE[13]), 
		 -> STR_32(CODE[9]), STR_31(CODE[19]), STR_30(CODE[13]), STR_29(CODE[12]), 
		 -> STR_28(CODE[1]), STR_27(CODE[19]), STR_26(CODE[12]), STR_25(CODE[14]), 
		 -> STR_24(CODE[11]), STR_23(CODE[11]), STR_22(CODE[13]), STR_21(CODE[15]), 
		 -> STR_20(CODE[13]), STR_19(CODE[15]), STR_18(CODE[13]), STR_17(CODE[14]), 
		 -> STR_16(CODE[13]), STR_15(CODE[14]), STR_14(CODE[12]), STR_13(CODE[14]), 
		 -> STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[13]), STR_9(CODE[14]), 
		 -> STR_8(CODE[13]), STR_7(CODE[14]), STR_6(CODE[1]), STR_5(CODE[15]), 
		 -> STR_4(CODE[14]), STR_3(CODE[9]), STR_2(CODE[17]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_print_screen
    _testjig_done->_print_screen
    _print_error->_print_screen
    _print_screen->_i2c_Write_string
    _i2c_second_line->_i2c_Write
    _i2c_first_line->_i2c_Write
    _i2c_Write_string->_i2c_Write
    _clear_lcd->_i2c_Write
    _lcd_print_int->_ten_thou_conv
    _ten_thou_conv->___wmul
    _lcd_set_cursor->_i2c_Write
    _i2c_write_char->_i2c_Write
    _init_i2c_lcd_5v->_i2c_Write
    ___lwtoft->___ftpack
    ___ftmul->___ftpack
    ___ftadd->___ftpack
    _Vout_set->_digitalpot
    _digitalpot->_i2c_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_get_30v_current
    _lcd_print_int->_ten_thou_conv
    _get_30v_current->___fttol
    ___fttol->___ftadd
    ___ftmul->___lwtoft
    ___ftadd->___ftmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   35031
                                             51 BANK0      2     2      0
                                              0 BANK2      4     4      0
                        _ADC_get_val
                             _RX_one
                     _RX_one_timeout
                             _TX_one
                           _Vout_set
                           _buzz_one
                      _debug_fast_tx
                    _get_30v_current
                           _init_ADC
                  _init_current_sink
                           _init_i2c
                    _init_i2c_lcd_5v
                      _lcd_print_int
                   _power_supply_set
                        _print_error
                       _print_screen
                       _testjig_done
 ---------------------------------------------------------------------------------
 (1) _testjig_done                                         4     3      1    6021
                                              0 BANK0      4     3      1
                           _buzz_one
                      _debug_fast_tx
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (1) _print_error                                          6     2      4    9017
                                              0 BANK0      6     2      4
                           _buzz_one
                          _clear_lcd
                      _debug_fast_tx
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (2) _print_screen                                         4     0      4    4411
                                              6 COMMON     4     0      4
                          _clear_lcd
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
 ---------------------------------------------------------------------------------
 (3) _i2c_second_line                                      0     0      0      31
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_first_line                                       0     0      0      31
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write_string                                     3     1      2     356
                                              3 COMMON     3     1      2
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _clear_lcd                                            1     1      0      31
                                              3 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _power_supply_set                                     1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _debug_fast_tx                                        5     3      2     653
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _buzz_one                                             2     0      2     291
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd_print_int                                        7     1      6    3894
                                              6 BANK0      7     1      6
                     _i2c_write_char
                     _lcd_set_cursor
                      _ten_thou_conv
 ---------------------------------------------------------------------------------
 (2) _ten_thou_conv                                        8     6      2    2216
                                              8 COMMON     2     0      2
                                              0 BANK0      6     6      0
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1046
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     981
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       4     3      1     204
                                              3 COMMON     4     3      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_write_char                                       1     1      0      62
                                              3 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c_lcd_5v                                      3     2      1     189
                                              3 COMMON     3     2      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_current_sink                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_30v_current                                      4     2      2    8749
                                             47 BANK0      4     2      2
                        _ADC_get_val
                            ___ftadd
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2104
                                              0 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     436
                                             33 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2626
                                              4 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3453
                                             20 BANK0     13     7      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2008
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _ADC_get_val                                          6     3      3      65
                                              2 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Vout_set                                             6     4      2     305
                                              5 COMMON     2     0      2
                                              0 BANK0      4     4      0
                         _digitalpot
 ---------------------------------------------------------------------------------
 (2) _digitalpot                                           2     2      0      62
                                              3 COMMON     2     2      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (4) _i2c_Write                                            1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TX_one                                               3     3      0     133
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one_timeout                                       3     3      0     170
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one                                               3     3      0     170
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_get_val
   _RX_one
   _RX_one_timeout
   _TX_one
   _Vout_set
     _digitalpot
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _buzz_one
   _debug_fast_tx
   _get_30v_current
     _ADC_get_val
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _init_ADC
   _init_current_sink
   _init_i2c
   _init_i2c_lcd_5v
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _lcd_print_int
     _i2c_write_char
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _lcd_set_cursor
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _ten_thou_conv
       ___bmul
       ___wmul
   _power_supply_set
   _print_error
     _buzz_one
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _debug_fast_tx
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
   _print_screen
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _testjig_done
     _buzz_one
     _debug_fast_tx
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     35      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      4       4       9        5.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0      AC      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      AC      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Tue Nov 07 12:11:19 2017

         _motor_direction_timer 005D                      __CFG_CP$ON 0000             ??_init_current_sink 0072  
                   main@RX_data 0123                               pc 0002                  ___bmul@product 0074  
              _power_supply_set 0A0E             ___wmul@multiplicand 0074                      TX_one@data 0073  
                  ___ftadd@exp1 0040                    ___ftadd@exp2 003F                    ___ftadd@sign 003E  
                           l304 0210                             l401 06D4                             l412 088E  
                           l335 0585                             l418 08B5                             l427 0893  
                           l443 0B6D                             l339 0490                             l348 0505  
                           l366 059C                             l375 05FE                             l640 0A3F  
                           l632 0A6D                             l392 069F                             l633 0A84  
                           l297 0170                             l539 0D06                             l627 0AD2  
                           l652 0AA1                             l580 08C3                             l660 0998  
                           l628 0AEB                             l637 0A33                             l821 0C55  
                           l590 0A10                             l647 0A90                             l912 0D79  
                           l592 0A15                             l593 0A1A                             l594 0A1F  
                           l595 0A32                             l828 0C68                             l852 0FA9  
                           l829 0C70                             _GIE 005F                             _RA2 0062  
                           _RA4 0064                             _RA5 0065               ??_i2c_second_line 0073  
                           _RE0 0080                             _RE4 0084                             _RF3 1463  
                           _RE5 0085                             _RE6 0086                             _RG3 146B  
                           _PR2 001B                             _PR8 0596                             _isr 0004  
                           _ten 0067                    __CFG_BORV$HI 0000                             wreg 0009  
                ?_lcd_print_int 0026         __size_of_i2c_write_char 0013                 ?_lcd_set_cursor 0073  
                  __CFG_LVP$OFF 0000       __end_of_init_current_sink 091D                            l4022 0F39  
                          l4110 0E03                            l4040 0F62                            l4050 0F84  
                          l4018 0F32                            l4122 0E1F                            l4106 0DFB  
                          l4060 0FA5                            l4052 0F88                            l4028 0F48  
                          l5030 0ED7                            l4046 0F75                            l4118 0E17  
                          l4064 0FBB                            l4048 0F7F                            l4216 0B65  
                          l4312 06C9                            l4304 06B7                            l4058 0F9B  
                          l4170 0D8A                            l4138 0D25                            l4330 0BE5  
                          l4242 05C9                            l4234 05B7                            l4412 0A74  
                          l4068 0FCD                            l4164 0D70                            l4156 0D55  
                          l4308 06C0                            l4350 0E61                            l4078 0FE8  
                          l4094 0DC0                            l4166 0D7C                            l4158 0D63  
                          l4502 0CF8                            l4246 05D2                            l4238 05C0  
                          l4424 0A98                            l4360 0E89                            l4352 0E69  
                          l4088 0DAA                            l4504 0CFB                            l4272 0634  
                          l4264 061E                            l4280 0669                            l4522 0A46  
                          l4530 0A59                            l4434 0AA8                            l4442 0ABB  
                          l4370 0EB1                            l4362 0E91                            l4354 0E71  
                          l4346 0E51                            l4258 060E                            l4282 0672  
                          l4372 0EB9                            l4364 0E99                            l4356 0E79  
                          l4348 0E59                            l4380 0ED2                            l3804 09D2  
                          l4292 068B                            l4268 0627                            l4612 0161  
                          l4374 0EC1                            l4366 0EA1                            l4358 0E81  
                          l4382 0F06                            l4470 0CC0                            l4462 0CB2  
                          l4454 0CA4                            l3806 09E6                            l4630 01C5  
                          l4622 01A0                            l4376 0EC9                            l4368 0EA9  
                          l3840 0992                            l4456 0CA7                            l4296 0694  
                          l4288 0682                            l4712 0353                            l4458 0CAB  
                          l4810 04E6                            l4730 0387                            l4650 022D  
                          l4642 0200                            l4634 01D9                            l4492 0CE7  
                          l4484 0CD9                            l4476 0CCB                            l4468 0CBD  
                          l3916 0AD9                            l3924 0A24                            l4708 033B  
                          l3870 0C2B                            l4398 0BCA                            l3854 08D1  
                          l4486 0CDC                            l4814 04F4                            l4806 04D9  
                          l4750 03EE                            l4670 0288                            l4662 0268  
                          l4638 01ED                            l4840 0569                            l4832 054C  
                          l4824 0525                            l3874 0C32                            l3962 0A03  
                          l3858 08D7                            l4754 041E                            l4746 03DA  
                          l4682 02C3                            l4674 029C                            l4666 0278  
                          l3788 08B7                            l3884 0C5A                            l3876 0C3C  
                          l3964 0A07                            l4844 0577                            l4836 055B  
                          l4780 0471                            l4772 0456                            l3886 0C62  
                          l3878 0C41                            l4846 0583                            l4758 0427  
                          l4678 02B0                            l4686 02D3                            l4784 047F  
                          l4776 0463                            ?_isr 0070                            STR_1 11E7  
                          STR_2 1046                            STR_3 11E7                            STR_4 10D4  
                          STR_5 1098                            STR_6 1224                            STR_7 110C  
                          STR_8 1142                            STR_9 110C                            u5105 0E0A  
                          u5205 0D56                            u5135 0E20                            u5145 0E26  
                          u5065 0DCC                            u5075 0DDC                            u5235 0D71  
                          u4515 0999                            u4605 0C50                            u4525 099E  
                          u5095 0E04                            u5175 0D2C                            u4625 0C5D  
                          u5450 0A72                            u4805 07D4                            u4665 0C77  
                          u4585 0C37                            u4905 0F63                            u4745 06F1  
                          u4690 0AD7                            u4755 0701                            u6507 0307  
                          u4765 0711                            u6517 0315                            u4935 0F76  
                          u4775 0738                            u6607 053A                            u6527 0324  
                          u6447 013C                            u4785 077E                            u6617 05F1  
                          u6537 0334                            u6457 014A                            u4795 07B9  
                          u6707 092D                            u6627 0607                            u6547 034C  
                          u6467 0155                            u4965 0F89                            u6717 0988  
                          u6637 0645                            u6557 035B                            u6477 018C  
                          u6807 0ABC                            u6727 0B7C                            u6647 065C  
                          u6567 0369                            u6487 0221                            u6817 0A37  
                          u6737 0965                            u6657 06A8                            u6577 03C7  
                          u6497 02ED                            u6827 0A4E                            u6747 09C1  
                          u4995 0F9C                            u6667 06DD                            u6587 0417  
                          u6837 0A5A                            u6757 0A65                            u6677 0C04  
                          u6597 04A3                            u6767 0A79                            u6687 0C1B  
                          u6777 0A87                            u6697 0942                            u6787 0A99  
                          u6797 0AB0                            _TMR0 0015                            _WPUB 020D  
                          _WPUD 020F                            _WPUE 0210                    __CFG_WRT$OFF 0000  
                          _main 00D3                    ___ftpack@arg 0072               _button_beep_delay 006B  
                          _hund 0068                    ___ftpack@exp 0075                            _thou 007B  
                          fsr0h 0005                            fsr1h 0007                            indf0 0000  
                          fsr0l 0004                            fsr1l 0006                            _unit 0066  
                          btemp 007E               ??_get_30v_current 007A                   __CFG_BOREN$ON 0000  
                          start 00A4                ??_RX_one_timeout 0072                   __CFG_IESO$OFF 0000  
       i2c_write_char@char_data 0073               ___bmul@multiplier 0075                   __CFG_MCLRE$ON 0000  
                  ___ftmul@cntr 0032                    ___ftmul@sign 0033                 digitalpot@value 0074  
          __size_of_ADC_get_val 0011         __end_of_init_i2c_lcd_5v 0B84                    ___fttol@exp1 004E  
                  ___fttol@lval 004A                           ??_isr 0070                    _trip_current 00E5  
                _i2c_first_line 091D          _uart_buff_work_recieve 00E0                           ?_main 0070  
               __end_of___ftadd 1000                           STR_10 1128                           STR_11 10C9  
                         STR_20 1142                           STR_12 11BE                           STR_21 10C5  
                         STR_13 110C                           STR_22 1128                           STR_30 1006  
                         STR_14 11A6                           STR_31 1000                           STR_23 11C9  
                         STR_15 111A                           STR_16 1142                           STR_24 11BE  
                         STR_40 1225                           STR_32 11F0                           STR_41 119A  
                         STR_25 111A                           STR_17 111A                           STR_33 115C  
                         STR_18 1128                           STR_26 11A6                           STR_42 1229  
                         STR_34 121A                           STR_50 11DE                           STR_51 1212  
                         STR_35 119A                           STR_43 1176                           STR_19 10C5  
                         STR_27 1000                           STR_28 1224                           STR_52 113D  
                         STR_60 1169                           STR_36 1239                           STR_44 10F0  
                         STR_45 1176                           STR_61 1212                           STR_53 119A  
                         STR_37 1212                           STR_29 118E                           STR_38 117E  
                         STR_54 122D                           STR_62 11D4                           STR_70 10A7  
                         STR_46 1078                           STR_47 1176                           STR_63 1212  
                         STR_71 119A                           STR_55 119A                           STR_39 119A  
                         STR_80 10E2                           STR_64 10AF                           STR_72 1235  
                         STR_56 1231                           STR_48 1169                           STR_65 1212  
                         STR_49 1212                           STR_81 1202                           STR_73 11B2  
                         STR_57 1135                           STR_82 1185                           STR_58 10F0  
                         STR_90 120A                           STR_74 10E2                           STR_66 1068  
                         STR_67 1212                           STR_59 1135                           STR_83 1220  
                         STR_75 11F9                           STR_91 10B6                           STR_92 10D4  
                         STR_76 10E2                           STR_84 1185                           STR_68 1024  
                         STR_69 1212                           STR_85 1088                           STR_93 1182  
                         STR_77 1088                           STR_94 10D4                           STR_78 10E2  
                         STR_86 1185                           STR_87 11E7                           STR_95 1088  
                         STR_79 10FE                           STR_96 10D4                           STR_88 1186  
                         STR_89 1035                           STR_97 1013                           STR_98 10D4  
                         STR_99 10B6                 __end_of___ftmul 0E47                 __end_of___fttol 0D93  
                         _T2CON 001C                           _LATC2 0872                           _LATA6 0866  
                         _LATA7 0867                           _LATB5 086D                           _LATD2 087A  
                         _LATC5 0875                           _LATC6 0876                           _LATD4 087C  
                         _LATC7 0877                           _LATD5 087D                           _LATG0 1C68  
                         _LATD6 087E                           _LATF4 1C64                           _RC2IF 00A5  
         __end_of_debug_fast_tx 0AFD                           _T8CON 0597                           i1l280 005E  
                         i1l273 002F                           i1l283 0066                           i1l291 00A0  
                         i1l284 006A                           i1l276 0043                           i1l286 0087  
                         _PORTA 000C                           _PORTB 000D                           _PORTC 000E  
                         _PORTD 000F                           _PORTE 0010                           _PORTF 028C  
                         _PORTG 028D                           _TRISA 008C                           _TRISB 008D  
                         _TRISC 008E                           _TRISD 008F                           _TRISE 0090  
                         _TRISF 030C                           _TRISG 030D                   __CFG_PWRTE$ON 0000  
                __CFG_FCMEN$OFF 0000              _current_sink_timer 0059              _current_sink_state 0065  
      __end_of_i2c_Write_string 09E9                   ___ftpack@sign 0076                           main@i 0120  
                         status 0003                           wtemp0 007E                 __initialization 00A6  
    lcd_set_cursor@LCD_position 0076                    __end_of_main 059A          __end_of_i2c_first_line 0932  
              __end_of_i2c_Stop 0896                  __CFG_LPBOR$OFF 0000                          ??_main 0053  
                 ___fttol@sign1 0049                 ??_lcd_print_int 002C             lcd_print_int@number 0026  
                        _ADCON0 009D                          _ADCON1 009E                          i1S5032 0800  
                        STR_100 114F                          STR_101 1182                          STR_102 114F  
                        STR_103 1088                          STR_104 114F                          STR_105 1013  
                        STR_106 114F                          _ADRESH 009C                          STR_107 1150  
                        STR_108 1057                          _ADRESL 009B      __size_of_init_current_sink 0015  
                        _CCPR9L 061A                          _ANSELA 018C                          _ANSELB 018D  
                        _ANSELD 018F                          _ANSELE 0190                          _ANSELF 040C  
              __end_of___ftpack 0C87                          _ANSELG 040D                          _RC2REG 0491  
            __size_of_i2c_Start 0005                          i1l3210 0013                          i1l3220 0024  
                        i1l3214 001B                          i1l3240 0053                          i1l3218 0023  
                        i1l3228 003B                          i1l3252 0073                          i1l3262 0093  
                        i1l3246 0061                          i1l3238 0052                          i1l3254 007D  
                        i1l3264 0097                          i1l3258 0089                          i1l3268 009F  
            __size_of_i2c_Write 000D                          _FVRCON 0117                __end_of_Vout_set 0F0A  
              __end_of___lwtoft 0908                          _OSCCON 0099                          _TMR0IE 005D  
                        _TMR0IF 005A                          _TX2REG 0492                          _TRISC3 0473  
                        _TRISC4 0474                          _TRISG0 1868               print_error@bottom 0022  
                        _RX_one 0A33                          _TX_one 0A5F             _current_sink_stable 00E7  
                        ___bmul 08CF                 ?_i2c_first_line 0070                          ___wmul 0990  
                     ??___ftadd 003A                  __CFG_STVREN$ON 0000                       ??___ftmul 002A  
                     ??___fttol 0045                __end_of_init_ADC 08A9                ?_init_i2c_lcd_5v 0073  
              __end_of_init_i2c 0976                __end_of_buzz_one 08B1                _ADC_cur_sink_val 00EB  
         ___ftmul@f3_as_product 002F                   i2c_Write@data 0072                  _i2c_write_char 08E0  
             debug_fast_tx@data 0072        __end_of_power_supply_set 0A33                    ?_print_error 0020  
       __end_of__initialization 00CF                      ___ftadd@f1 0034                      ___ftadd@f2 0037  
           ___bmul@multiplicand 0072                      ___ftmul@f1 0024                      ___ftmul@f2 0027  
               _i2c_second_line 0932                      ___fttol@f1 0041                  __pcstackCOMMON 0070  
                  __pidataBANK0 0889                    __pidataBANK1 0AFD                  print_error@top 0020  
         __end_of_ten_thou_conv 07FF               __end_of_i2c_Start 0891               __end_of_i2c_Write 08BE  
            __size_of_clear_lcd 001A                      ___lwtoft@c 0020                ??_lcd_set_cursor 0074  
        __end_of_i2c_write_char 08F3                 _get_30v_current 0B84            i2c_Write_string@data 0073  
          lcd_print_int@decimal 002A                _one_second_timer 0069                      __pbssBANK0 0055  
                    __pbssBANK1 00E0                       ?_i2c_Stop 0070     lcd_print_int@ten_thou_digit 002B  
                       ?_RX_one 0070              ADC_get_val@channel 0075                         ?_TX_one 0070  
                    __pmaintext 00D3                         ?___bmul 0072                         ?___wmul 0072  
                    __pintentry 0004                      _digitalpot 09AB                         _CCP9CON 061C  
                     ?___ftpack 0072                         _ADC_val 0062                       ?_Vout_set 0075  
                     ?___lwtoft 0020                 ?_i2c_write_char 0070                         _SSP1ADD 0212  
                       _SSP1BUF 0211               ?_i2c_Write_string 0073                         RX_one@i 0073  
                       TX_one@i 0074              ??_i2c_Write_string 0075                      ??_i2c_Stop 0072  
                     ?_init_ADC 0070         __end_of_i2c_second_line 0947                       ?_init_i2c 0070  
             __end_of_clear_lcd 0990                       ?_buzz_one 0072                   _RelayVsDiodes 0063  
                 ??_ADC_get_val 0075                 __size_of_RX_one 002C                 __size_of_TX_one 002C  
               __size_of___bmul 0011                         ___ftadd 0F0A                 __size_of___wmul 001B  
                       ___ftmul 0D93                         ___fttol 0D0C                      ??___ftpack 0077  
       __end_of_get_30v_current 0BCD                         __ptext1 059A                         __ptext2 0BCD  
                       __ptext3 0947                         __ptext4 0932                         __ptext5 091D  
                       __ptext6 09C7                         __ptext7 0976                         __ptext8 0A0E  
                       __ptext9 0AC1                      ??_Vout_set 0077                      ??___lwtoft 0023  
                  __size_of_isr 00A0                      _buzz_timer 00ED  init_i2c_lcd_5v@single1_double2 0073  
                       clrloop0 0897            end_of_initialization 00CF                      ??_init_ADC 0072  
                    ??_init_i2c 0072                         init_ram 089C                         initloop 089D  
                    ??_buzz_one 0074                ??_i2c_first_line 0073            __size_of_print_error 0056  
        __size_of_debug_fast_tx 003C                     ?_digitalpot 0070             __end_of_ADC_get_val 08CF  
            RX_one_timeout@data 0074         __size_of_RX_one_timeout 0036                __CFG_FOSC$INTOSC 0000  
         __end_of_lcd_print_int 0D0C                   ?_print_screen 0076                   ?_testjig_done 0020  
             ?_power_supply_set 0070                ?_i2c_second_line 0070              ??_power_supply_set 0072  
                ten_thou_conv@n 0078                     ___ftmul@exp 002E                  __end_of_RX_one 0A5F  
                __end_of_TX_one 0A8B                  __end_of___bmul 08E0                  __end_of___wmul 09AB  
                  buzz_one@time 0072                ?_get_30v_current 004F                   _debug_fast_tx 0AC1  
                     _i2c_Start 088C                       _i2c_Write 08B1             start_initialization 00A6  
      __size_of_init_i2c_lcd_5v 0047                  ??_print_screen 007A                     __end_of_isr 00A4  
                ??_testjig_done 0021             __size_of_digitalpot 001C               __size_of_i2c_Stop 0005  
               print_screen@top 0076                        ??_RX_one 0072                        ??_TX_one 0072  
                   _ADC_get_val 08BE         testjig_done@device_type 0020                        ??___bmul 0073  
                      ??___wmul 0076                     __pdataBANK0 0069                     __pdataBANK1 00A0  
              ??_i2c_write_char 0073                  ?_debug_fast_tx 0072               __size_of___ftpack 0064  
                    ?_i2c_Start 0070                      ?_i2c_Write 0070                     __pbssCOMMON 007A  
             __size_of_Vout_set 00C3                       ___latbits 0003               __size_of___lwtoft 0015  
               main@device_type 0122                   __pcstackBANK0 0020                   __pcstackBANK2 0120  
            _pickit_red_counter 0061                lcd_print_int@pos 0028          __size_of_ten_thou_conv 011A  
                     __pnvBANK0 006C                       __pnvBANK1 00ED               __size_of_init_ADC 0007  
             __size_of_init_i2c 0018                       _clear_lcd 0976               __size_of_buzz_one 0008  
     __size_of_i2c_Write_string 0022                        ?___ftadd 0034                        ?___ftmul 0024  
                      ?___fttol 0041                  _RX_one_timeout 0A8B                       __pswtext1 0800  
                      _CCPTMRS2 029F                __CFG_WDTE$SWDTEN 0000               ??_init_i2c_lcd_5v 0074  
       __size_of_lcd_set_cursor 0025                  ___wmul@product 0076                       clear_ram0 0896  
                      _PIE1bits 0091                        _PCONbits 0096                        _PIR1bits 0011  
                    ?_clear_lcd 0070            __end_of_print_screen 095E              print_screen@bottom 0078  
                      _SSP1CON1 0215                        _SSP1CON2 0216            __end_of_testjig_done 06E5  
        __end_of_RX_one_timeout 0AC1                    ??_digitalpot 0073                        _SSP1STAT 0214  
                  _pickit_timer 005B                    _pickit_state 006C                   _ten_thou_conv 06E5  
               ??_debug_fast_tx 0074                      _ADCON0bits 009D               ___wmul@multiplier 0072  
                   ??_i2c_Start 0072                     ??_i2c_Write 0072                  debug_fast_tx@i 0076  
             testjig_done@state 0023                        _i2c_Stop 0891                   ??_print_error 0024  
            __end_of_digitalpot 09C7           ADC_get_val@return_val 0076                   Vout_set@Volts 0075  
               ?_RX_one_timeout 0070                 RX_one_timeout@i 0073                  ?_ten_thou_conv 0078  
              __size_of___ftadd 00F6                __size_of___ftmul 00B4                __size_of___fttol 0087  
     __size_of_power_supply_set 0025                        ___ftpack 0C23                        _Vout_set 0E47  
                      ___lwtoft 08F3         init_i2c_lcd_5v@contrast 0075             lcd_bar_create@F3810 00C8  
           lcd_bar_create@F3812 00C0             lcd_bar_create@F3820 00A0             lcd_bar_create@F3806 00D8  
           lcd_bar_create@F3814 00B8             lcd_bar_create@F3808 00D0             lcd_bar_create@F3816 00B0  
           lcd_bar_create@F3818 00A8               Vout_set@digi_step 0020                        __ptext10 08A9  
                      __ptext11 0C87                        __ptext20 08A2                        __ptext12 06E5  
                      __ptext21 0B84                        __ptext13 0990                        __ptext30 08B1  
                      __ptext22 08F3                        __ptext14 08CF                        __ptext31 0891  
                      __ptext23 0D0C                        __ptext15 09E9                        __ptext32 088C  
                      __ptext24 0D93                        __ptext16 08E0                        __ptext33 0A5F  
                      __ptext25 0F0A                        __ptext17 0B3D                        __ptext34 0A8B  
                      __ptext26 0C23                        __ptext18 095E                        __ptext35 0A33  
                      __ptext27 08BE                        __ptext19 0908                        __ptext28 0E47  
                      __ptext29 09AB                    _SSP1CON2bits 0216                        _init_ADC 08A2  
                      _init_i2c 095E                   __size_of_main 04C7                        _buzz_one 08A9  
                  ?_ADC_get_val 0072                     ??_clear_lcd 0073             __end_of_print_error 0C23  
              _i2c_Write_string 09C7                        _ten_thou 007A                      _RC2STAbits 0495  
                      _tj_timer 0055          __size_of_lcd_print_int 0085        __size_of_i2c_second_line 0015  
                      int$flags 007E             __end_of_popup_delay 123E                    _SSP1STATbits 0214  
       __size_of_i2c_first_line 0015              _uart_receive_timer 005F             get_30v_current@temp 0051  
                    _INTCONbits 000B                  __pstringtext10 1088                  __pstringtext11 1098  
                __pstringtext20 111A                  __pstringtext12 10A7                  __pstringtext21 1128  
                __pstringtext13 10B6                  __pstringtext30 119A                  __pstringtext22 1135  
                __pstringtext14 10C5                  __pstringtext31 11A6                  __pstringtext23 1142  
                __pstringtext15 10D4                  __pstringtext40 1202                  __pstringtext32 11B2  
                __pstringtext24 114F                  __pstringtext16 10E2                  __pstringtext41 120A  
                __pstringtext33 11BE                  __pstringtext25 115C                  __pstringtext17 10F0  
                __pstringtext50 1239                  __pstringtext42 1212                  __pstringtext34 11C9  
                __pstringtext26 1169                  __pstringtext18 10FE                  __pstringtext51 0000  
                __pstringtext43 121A                  __pstringtext35 11D4                  __pstringtext27 1176  
                __pstringtext19 110C                  __pstringtext44 1220                  __pstringtext36 11DE  
                __pstringtext28 1182                  __pstringtext45 1225                  __pstringtext37 11E7  
                __pstringtext29 118E                  __pstringtext46 1229                  __pstringtext38 11F0  
                __pstringtext47 122D                  __pstringtext39 11F9                  __pstringtext48 1231  
                __pstringtext49 1235        __size_of_get_30v_current 0049                        intlevel1 0000  
                _lcd_set_cursor 09E9               lcd_set_cursor@col 0073               lcd_set_cursor@row 0075  
         __size_of_print_screen 0017               __CFG_CLKOUTEN$OFF 0000           __size_of_testjig_done 014B  
        power_supply_set@supply 0072                 ??_ten_thou_conv 0020                   __pstringtext1 123C  
                 __pstringtext2 1000                   __pstringtext3 1013                   __pstringtext4 1024  
                 __pstringtext5 1035                   __pstringtext6 1046                   __pstringtext7 1057  
                 __pstringtext8 1068                   __pstringtext9 1078                      _OPTION_REG 0095  
                 _testjig_timer 0057                 _init_i2c_lcd_5v 0B3D                   _lcd_print_int 0C87  
               _curent_sink_val 00E9                    _print_screen 0947                     _return_data 0064  
        __end_of_lcd_set_cursor 0A0E                      _TX2STAbits 0496                    _testjig_done 059A  
             _init_current_sink 0908                      RX_one@data 0074                     _print_error 0BCD  
            ?_init_current_sink 0070                     _popup_delay 123C  
