

Microchip Technology PIC PRO Macro Assembler V1.38 build -256452561 
                                                                                               Wed Jun 21 13:20:55 2017

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	16F1527
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text12,local,class=CODE,merge=1,delta=2
    16                           	psect	text18,local,class=CODE,merge=1,delta=2
    17                           	psect	text19,local,class=CODE,merge=1,delta=2
    18                           	psect	text20,local,class=CODE,merge=1,delta=2
    19                           	psect	text21,local,class=CODE,merge=1,delta=2
    20                           	psect	text28,local,class=CODE,merge=1,delta=2
    21                           	psect	swtext2,local,class=CONST,delta=2
    22                           	psect	text33,local,class=CODE,merge=1,delta=2
    23                           	psect	text34,local,class=CODE,merge=1,delta=2
    24                           	psect	text35,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	swtext3,local,class=CONST,delta=2
    27                           	psect	pa_nodes,global,class=CODE,delta=2
    28                           	psect	maintext_split_1,global,class=CODE,merge=1,split=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0008                     	;# 
    39  0009                     	;# 
    40  000A                     	;# 
    41  000B                     	;# 
    42  000C                     	;# 
    43  000D                     	;# 
    44  000E                     	;# 
    45  000F                     	;# 
    46  0010                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0013                     	;# 
    50  0014                     	;# 
    51  0015                     	;# 
    52  0016                     	;# 
    53  0016                     	;# 
    54  0017                     	;# 
    55  0018                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001C                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  008F                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0094                     	;# 
    69  0095                     	;# 
    70  0096                     	;# 
    71  0097                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  0110                     	;# 
    84  0116                     	;# 
    85  0117                     	;# 
    86  011D                     	;# 
    87  018C                     	;# 
    88  018D                     	;# 
    89  018F                     	;# 
    90  0190                     	;# 
    91  0191                     	;# 
    92  0191                     	;# 
    93  0192                     	;# 
    94  0193                     	;# 
    95  0193                     	;# 
    96  0194                     	;# 
    97  0195                     	;# 
    98  0196                     	;# 
    99  0197                     	;# 
   100  0199                     	;# 
   101  0199                     	;# 
   102  0199                     	;# 
   103  019A                     	;# 
   104  019A                     	;# 
   105  019A                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019B                     	;# 
   110  019B                     	;# 
   111  019C                     	;# 
   112  019C                     	;# 
   113  019C                     	;# 
   114  019D                     	;# 
   115  019D                     	;# 
   116  019D                     	;# 
   117  019E                     	;# 
   118  019E                     	;# 
   119  019E                     	;# 
   120  019F                     	;# 
   121  019F                     	;# 
   122  019F                     	;# 
   123  020D                     	;# 
   124  020F                     	;# 
   125  0210                     	;# 
   126  0211                     	;# 
   127  0211                     	;# 
   128  0212                     	;# 
   129  0212                     	;# 
   130  0213                     	;# 
   131  0213                     	;# 
   132  0214                     	;# 
   133  0214                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0216                     	;# 
   138  0216                     	;# 
   139  0217                     	;# 
   140  0217                     	;# 
   141  0219                     	;# 
   142  021A                     	;# 
   143  021B                     	;# 
   144  021C                     	;# 
   145  021D                     	;# 
   146  021E                     	;# 
   147  021F                     	;# 
   148  028C                     	;# 
   149  028D                     	;# 
   150  0291                     	;# 
   151  0291                     	;# 
   152  0292                     	;# 
   153  0293                     	;# 
   154  0298                     	;# 
   155  0298                     	;# 
   156  0299                     	;# 
   157  029A                     	;# 
   158  029D                     	;# 
   159  029E                     	;# 
   160  029F                     	;# 
   161  030C                     	;# 
   162  030D                     	;# 
   163  0311                     	;# 
   164  0311                     	;# 
   165  0312                     	;# 
   166  0313                     	;# 
   167  0318                     	;# 
   168  0318                     	;# 
   169  0319                     	;# 
   170  031A                     	;# 
   171  031C                     	;# 
   172  031C                     	;# 
   173  031D                     	;# 
   174  031E                     	;# 
   175  038C                     	;# 
   176  038D                     	;# 
   177  0394                     	;# 
   178  0395                     	;# 
   179  0396                     	;# 
   180  040C                     	;# 
   181  040D                     	;# 
   182  0411                     	;# 
   183  0411                     	;# 
   184  0412                     	;# 
   185  0413                     	;# 
   186  0414                     	;# 
   187  0415                     	;# 
   188  0416                     	;# 
   189  0417                     	;# 
   190  0418                     	;# 
   191  0418                     	;# 
   192  0419                     	;# 
   193  041A                     	;# 
   194  041B                     	;# 
   195  041C                     	;# 
   196  041D                     	;# 
   197  041E                     	;# 
   198  048D                     	;# 
   199  0491                     	;# 
   200  0491                     	;# 
   201  0492                     	;# 
   202  0492                     	;# 
   203  0493                     	;# 
   204  0493                     	;# 
   205  0493                     	;# 
   206  0494                     	;# 
   207  0494                     	;# 
   208  0495                     	;# 
   209  0495                     	;# 
   210  0496                     	;# 
   211  0496                     	;# 
   212  0497                     	;# 
   213  0497                     	;# 
   214  0595                     	;# 
   215  0596                     	;# 
   216  0597                     	;# 
   217  059C                     	;# 
   218  059D                     	;# 
   219  059E                     	;# 
   220  0611                     	;# 
   221  0611                     	;# 
   222  0612                     	;# 
   223  0613                     	;# 
   224  0614                     	;# 
   225  0614                     	;# 
   226  0615                     	;# 
   227  0616                     	;# 
   228  0617                     	;# 
   229  0617                     	;# 
   230  0618                     	;# 
   231  0619                     	;# 
   232  061A                     	;# 
   233  061A                     	;# 
   234  061B                     	;# 
   235  061C                     	;# 
   236  061D                     	;# 
   237  061D                     	;# 
   238  061E                     	;# 
   239  061F                     	;# 
   240  0FE4                     	;# 
   241  0FE5                     	;# 
   242  0FE6                     	;# 
   243  0FE7                     	;# 
   244  0FE8                     	;# 
   245  0FE9                     	;# 
   246  0FEA                     	;# 
   247  0FEB                     	;# 
   248  0FED                     	;# 
   249  0FEE                     	;# 
   250  0FEF                     	;# 
   251                           
   252                           	psect	idataBANK0
   253  0000                     __pidataBANK0:	
   254                           
   255                           	psect	nvBANK0
   256  006A                     __pnvBANK0:	
   257  006A                     _buzz_timer:	
   258  006A                     	ds	2
   259  006C                     _pickit_state:	
   260  006C                     	ds	1
   261  000B                     _INTCONbits	set	11
   262  0011                     _PIR1bits	set	17
   263  000C                     _PORTA	set	12
   264  000D                     _PORTB	set	13
   265  000E                     _PORTC	set	14
   266  000F                     _PORTD	set	15
   267  0010                     _PORTE	set	16
   268  001B                     _PR2	set	27
   269  001C                     _T2CON	set	28
   270  0015                     _TMR0	set	21
   271  005F                     _GIE	set	95
   272  0062                     _RA2	set	98
   273  0064                     _RA4	set	100
   274  0065                     _RA5	set	101
   275  0080                     _RE0	set	128
   276  0084                     _RE4	set	132
   277  0085                     _RE5	set	133
   278  0086                     _RE6	set	134
   279  005D                     _TMR0IE	set	93
   280  005A                     _TMR0IF	set	90
   281  009D                     _ADCON0	set	157
   282  009D                     _ADCON0bits	set	157
   283  009E                     _ADCON1	set	158
   284  009C                     _ADRESH	set	156
   285  009B                     _ADRESL	set	155
   286  0095                     _OPTION_REG	set	149
   287  0099                     _OSCCON	set	153
   288  0091                     _PIE1bits	set	145
   289  008C                     _TRISA	set	140
   290  008D                     _TRISB	set	141
   291  008E                     _TRISC	set	142
   292  008F                     _TRISD	set	143
   293  0090                     _TRISE	set	144
   294  0473                     _TRISC3	set	1139
   295  0474                     _TRISC4	set	1140
   296  0117                     _FVRCON	set	279
   297  0866                     _LATA6	set	2150
   298  0867                     _LATA7	set	2151
   299  086D                     _LATB5	set	2157
   300  0872                     _LATC2	set	2162
   301  0875                     _LATC5	set	2165
   302  0876                     _LATC6	set	2166
   303  0877                     _LATC7	set	2167
   304  087A                     _LATD2	set	2170
   305  087C                     _LATD4	set	2172
   306  087D                     _LATD5	set	2173
   307  087E                     _LATD6	set	2174
   308  018C                     _ANSELA	set	396
   309  018D                     _ANSELB	set	397
   310  018F                     _ANSELD	set	399
   311  0190                     _ANSELE	set	400
   312  0212                     _SSP1ADD	set	530
   313  0211                     _SSP1BUF	set	529
   314  0215                     _SSP1CON1	set	533
   315  0216                     _SSP1CON2	set	534
   316  0216                     _SSP1CON2bits	set	534
   317  0214                     _SSP1STAT	set	532
   318  0214                     _SSP1STATbits	set	532
   319  020D                     _WPUB	set	525
   320  020F                     _WPUD	set	527
   321  0210                     _WPUE	set	528
   322  029F                     _CCPTMRS2	set	671
   323  028C                     _PORTF	set	652
   324  028D                     _PORTG	set	653
   325  1460                     _RF0	set	5216
   326  1461                     _RF1	set	5217
   327  1462                     _RF2	set	5218
   328  1463                     _RF3	set	5219
   329  1465                     _RF5	set	5221
   330  1469                     _RG1	set	5225
   331  146B                     _RG3	set	5227
   332  030C                     _TRISF	set	780
   333  030D                     _TRISG	set	781
   334  1868                     _TRISG0	set	6248
   335  1C64                     _LATF4	set	7268
   336  1C68                     _LATG0	set	7272
   337  040C                     _ANSELF	set	1036
   338  040D                     _ANSELG	set	1037
   339  0596                     _PR8	set	1430
   340  0597                     _T8CON	set	1431
   341  061C                     _CCP9CON	set	1564
   342  061A                     _CCPR9L	set	1562
   343                           
   344                           	psect	stringtext
   345  07A4                     __pstringtext:	
   346  07A4                     STR_51:	
   347  07A4  3452               	retlw	82	;'R'
   348  07A5  3465               	retlw	101	;'e'
   349  07A6  346C               	retlw	108	;'l'
   350  07A7  3461               	retlw	97	;'a'
   351  07A8  3479               	retlw	121	;'y'
   352  07A9  3420               	retlw	32	;' '
   353  07AA  3464               	retlw	100	;'d'
   354  07AB  3465               	retlw	101	;'e'
   355  07AC  342D               	retlw	45	;'-'
   356  07AD  3465               	retlw	101	;'e'
   357  07AE  346E               	retlw	110	;'n'
   358  07AF  3465               	retlw	101	;'e'
   359  07B0  3472               	retlw	114	;'r'
   360  07B1  3467               	retlw	103	;'g'
   361  07B2  3469               	retlw	105	;'i'
   362  07B3  347A               	retlw	122	;'z'
   363  07B4  3465               	retlw	101	;'e'
   364  07B5  3464               	retlw	100	;'d'
   365  07B6  3400               	retlw	0
   366  07B7                     STR_27:	
   367  07B7  3450               	retlw	80	;'P'
   368  07B8  3469               	retlw	105	;'i'
   369  07B9  3463               	retlw	99	;'c'
   370  07BA  346B               	retlw	107	;'k'
   371  07BB  3469               	retlw	105	;'i'
   372  07BC  3474               	retlw	116	;'t'
   373  07BD  3420               	retlw	32	;' '
   374  07BE  3450               	retlw	80	;'P'
   375  07BF  3472               	retlw	114	;'r'
   376  07C0  346F               	retlw	111	;'o'
   377  07C1  3467               	retlw	103	;'g'
   378  07C2  3472               	retlw	114	;'r'
   379  07C3  3461               	retlw	97	;'a'
   380  07C4  346D               	retlw	109	;'m'
   381  07C5  346D               	retlw	109	;'m'
   382  07C6  3469               	retlw	105	;'i'
   383  07C7  346E               	retlw	110	;'n'
   384  07C8  3467               	retlw	103	;'g'
   385  07C9  3400               	retlw	0
   386  07CA                     STR_46:	
   387  07CA  3420               	retlw	32	;' '
   388  07CB  3445               	retlw	69	;'E'
   389  07CC  3472               	retlw	114	;'r'
   390  07CD  3472               	retlw	114	;'r'
   391  07CE  346F               	retlw	111	;'o'
   392  07CF  3472               	retlw	114	;'r'
   393  07D0  3420               	retlw	32	;' '
   394  07D1  344D               	retlw	77	;'M'
   395  07D2  3465               	retlw	101	;'e'
   396  07D3  346D               	retlw	109	;'m'
   397  07D4  345F               	retlw	95	;'_'
   398  07D5  3463               	retlw	99	;'c'
   399  07D6  346F               	retlw	111	;'o'
   400  07D7  3470               	retlw	112	;'p'
   401  07D8  3469               	retlw	105	;'i'
   402  07D9  3465               	retlw	101	;'e'
   403  07DA  3472               	retlw	114	;'r'
   404  07DB  3400               	retlw	0
   405  07DC                     STR_185:	
   406  07DC  344D               	retlw	77	;'M'
   407  07DD  3475               	retlw	117	;'u'
   408  07DE  346C               	retlw	108	;'l'
   409  07DF  3474               	retlw	116	;'t'
   410  07E0  3469               	retlw	105	;'i'
   411  07E1  345F               	retlw	95	;'_'
   412  07E2  3452               	retlw	82	;'R'
   413  07E3  3458               	retlw	88	;'X'
   414  07E4  3420               	retlw	32	;' '
   415  07E5  3454               	retlw	84	;'T'
   416  07E6  3465               	retlw	101	;'e'
   417  07E7  3473               	retlw	115	;'s'
   418  07E8  3474               	retlw	116	;'t'
   419  07E9  346A               	retlw	106	;'j'
   420  07EA  3469               	retlw	105	;'i'
   421  07EB  3467               	retlw	103	;'g'
   422  07EC  3400               	retlw	0
   423  07ED                     STR_140:	
   424  07ED  3444               	retlw	68	;'D'
   425  07EE  3465               	retlw	101	;'e'
   426  07EF  3463               	retlw	99	;'c'
   427  07F0  346F               	retlw	111	;'o'
   428  07F1  3464               	retlw	100	;'d'
   429  07F2  3465               	retlw	101	;'e'
   430  07F3  3420               	retlw	32	;' '
   431  07F4  344F               	retlw	79	;'O'
   432  07F5  346C               	retlw	108	;'l'
   433  07F6  3464               	retlw	100	;'d'
   434  07F7  3420               	retlw	32	;' '
   435  07F8  342D               	retlw	45	;'-'
   436  07F9  3446               	retlw	70	;'F'
   437  07FA  3461               	retlw	97	;'a'
   438  07FB  3469               	retlw	105	;'i'
   439  07FC  346C               	retlw	108	;'l'
   440  07FD  3400               	retlw	0
   441  07FE                     STR_177:	
   442  07FE  3454               	retlw	84	;'T'
   443  07FF  3465               	retlw	101	;'e'
   444  0800  3473               	retlw	115	;'s'
   445  0801  3474               	retlw	116	;'t'
   446  0802  346A               	retlw	106	;'j'
   447  0803  3469               	retlw	105	;'i'
   448  0804  3467               	retlw	103	;'g'
   449  0805  3420               	retlw	32	;' '
   450  0806  3450               	retlw	80	;'P'
   451  0807  346F               	retlw	111	;'o'
   452  0808  3477               	retlw	119	;'w'
   453  0809  3465               	retlw	101	;'e'
   454  080A  3472               	retlw	114	;'r'
   455  080B  342D               	retlw	45	;'-'
   456  080C  3475               	retlw	117	;'u'
   457  080D  3470               	retlw	112	;'p'
   458  080E  3400               	retlw	0
   459  080F                     STR_2:	
   460  080F  3454               	retlw	84	;'T'
   461  0810  3465               	retlw	101	;'e'
   462  0811  3473               	retlw	115	;'s'
   463  0812  3474               	retlw	116	;'t'
   464  0813  342D               	retlw	45	;'-'
   465  0814  344A               	retlw	74	;'J'
   466  0815  3469               	retlw	105	;'i'
   467  0816  3467               	retlw	103	;'g'
   468  0817  347C               	retlw	124	;'|'
   469  0818  3453               	retlw	83	;'S'
   470  0819  3474               	retlw	116	;'t'
   471  081A  3461               	retlw	97	;'a'
   472  081B  3472               	retlw	114	;'r'
   473  081C  3474               	retlw	116	;'t'
   474  081D  3475               	retlw	117	;'u'
   475  081E  3470               	retlw	112	;'p'
   476  081F  3400               	retlw	0
   477  0820                     STR_196:	
   478  0820  3420               	retlw	32	;' '
   479  0821  3474               	retlw	116	;'t'
   480  0822  346F               	retlw	111	;'o'
   481  0823  3420               	retlw	32	;' '
   482  0824  3472               	retlw	114	;'r'
   483  0825  3465               	retlw	101	;'e'
   484  0826  3473               	retlw	115	;'s'
   485  0827  3474               	retlw	116	;'t'
   486  0828  3461               	retlw	97	;'a'
   487  0829  3472               	retlw	114	;'r'
   488  082A  3474               	retlw	116	;'t'
   489  082B  3420               	retlw	32	;' '
   490  082C  3474               	retlw	116	;'t'
   491  082D  3465               	retlw	101	;'e'
   492  082E  3473               	retlw	115	;'s'
   493  082F  3474               	retlw	116	;'t'
   494  0830  3400               	retlw	0
   495  0831                     STR_157:	
   496  0831  3437               	retlw	55	;'7'
   497  0832  3473               	retlw	115	;'s'
   498  0833  3465               	retlw	101	;'e'
   499  0834  3467               	retlw	103	;'g'
   500  0835  342C               	retlw	44	;','
   501  0836  3420               	retlw	32	;' '
   502  0837  3462               	retlw	98	;'b'
   503  0838  3475               	retlw	117	;'u'
   504  0839  347A               	retlw	122	;'z'
   505  083A  347A               	retlw	122	;'z'
   506  083B  3465               	retlw	101	;'e'
   507  083C  3472               	retlw	114	;'r'
   508  083D  342C               	retlw	44	;','
   509  083E  3420               	retlw	32	;' '
   510  083F  3420               	retlw	32	;' '
   511  0840  3400               	retlw	0
   512  0841                     STR_138:	
   513  0841  3444               	retlw	68	;'D'
   514  0842  3465               	retlw	101	;'e'
   515  0843  3463               	retlw	99	;'c'
   516  0844  346F               	retlw	111	;'o'
   517  0845  3464               	retlw	100	;'d'
   518  0846  3465               	retlw	101	;'e'
   519  0847  3420               	retlw	32	;' '
   520  0848  344E               	retlw	78	;'N'
   521  0849  3465               	retlw	101	;'e'
   522  084A  3477               	retlw	119	;'w'
   523  084B  3420               	retlw	32	;' '
   524  084C  342D               	retlw	45	;'-'
   525  084D  3420               	retlw	32	;' '
   526  084E  344F               	retlw	79	;'O'
   527  084F  344B               	retlw	75	;'K'
   528  0850  3400               	retlw	0
   529  0851                     STR_55:	
   530  0851  3452               	retlw	82	;'R'
   531  0852  3465               	retlw	101	;'e'
   532  0853  346C               	retlw	108	;'l'
   533  0854  3461               	retlw	97	;'a'
   534  0855  3479               	retlw	121	;'y'
   535  0856  3420               	retlw	32	;' '
   536  0857  3465               	retlw	101	;'e'
   537  0858  346E               	retlw	110	;'n'
   538  0859  3465               	retlw	101	;'e'
   539  085A  3472               	retlw	114	;'r'
   540  085B  3467               	retlw	103	;'g'
   541  085C  3469               	retlw	105	;'i'
   542  085D  347A               	retlw	122	;'z'
   543  085E  3465               	retlw	101	;'e'
   544  085F  3464               	retlw	100	;'d'
   545  0860  3400               	retlw	0
   546  0861                     STR_118:	
   547  0861  3420               	retlw	32	;' '
   548  0862  3445               	retlw	69	;'E'
   549  0863  3472               	retlw	114	;'r'
   550  0864  3472               	retlw	114	;'r'
   551  0865  346F               	retlw	111	;'o'
   552  0866  3472               	retlw	114	;'r'
   553  0867  3420               	retlw	32	;' '
   554  0868  342D               	retlw	45	;'-'
   555  0869  3420               	retlw	32	;' '
   556  086A  344D               	retlw	77	;'M'
   557  086B  3469               	retlw	105	;'i'
   558  086C  3463               	retlw	99	;'c'
   559  086D  3472               	retlw	114	;'r'
   560  086E  3465               	retlw	101	;'e'
   561  086F  346C               	retlw	108	;'l'
   562  0870  3400               	retlw	0
   563  0871                     STR_165:	
   564  0871  344D               	retlw	77	;'M'
   565  0872  3465               	retlw	101	;'e'
   566  0873  346D               	retlw	109	;'m'
   567  0874  345F               	retlw	95	;'_'
   568  0875  3443               	retlw	67	;'C'
   569  0876  346F               	retlw	111	;'o'
   570  0877  3470               	retlw	112	;'p'
   571  0878  3469               	retlw	105	;'i'
   572  0879  3465               	retlw	101	;'e'
   573  087A  3472               	retlw	114	;'r'
   574  087B  3420               	retlw	32	;' '
   575  087C  3450               	retlw	80	;'P'
   576  087D  3461               	retlw	97	;'a'
   577  087E  3473               	retlw	115	;'s'
   578  087F  3473               	retlw	115	;'s'
   579  0880  3400               	retlw	0
   580  0881                     STR_70:	
   581  0881  3450               	retlw	80	;'P'
   582  0882  3454               	retlw	84	;'T'
   583  0883  3443               	retlw	67	;'C'
   584  0884  3420               	retlw	32	;' '
   585  0885  3445               	retlw	69	;'E'
   586  0886  3472               	retlw	114	;'r'
   587  0887  3472               	retlw	114	;'r'
   588  0888  346F               	retlw	111	;'o'
   589  0889  3472               	retlw	114	;'r'
   590  088A  3420               	retlw	32	;' '
   591  088B  3472               	retlw	114	;'r'
   592  088C  3465               	retlw	101	;'e'
   593  088D  3473               	retlw	115	;'s'
   594  088E  3465               	retlw	101	;'e'
   595  088F  3474               	retlw	116	;'t'
   596  0890  3400               	retlw	0
   597  0891                     STR_5:	
   598  0891  3450               	retlw	80	;'P'
   599  0892  346F               	retlw	111	;'o'
   600  0893  3477               	retlw	119	;'w'
   601  0894  3465               	retlw	101	;'e'
   602  0895  3472               	retlw	114	;'r'
   603  0896  3469               	retlw	105	;'i'
   604  0897  346E               	retlw	110	;'n'
   605  0898  3467               	retlw	103	;'g'
   606  0899  3420               	retlw	32	;' '
   607  089A  3462               	retlw	98	;'b'
   608  089B  346F               	retlw	111	;'o'
   609  089C  3461               	retlw	97	;'a'
   610  089D  3472               	retlw	114	;'r'
   611  089E  3464               	retlw	100	;'d'
   612  089F  3400               	retlw	0
   613  08A0                     STR_142:	
   614  08A0  3445               	retlw	69	;'E'
   615  08A1  3472               	retlw	114	;'r'
   616  08A2  3472               	retlw	114	;'r'
   617  08A3  346F               	retlw	111	;'o'
   618  08A4  3472               	retlw	114	;'r'
   619  08A5  3420               	retlw	32	;' '
   620  08A6  342D               	retlw	45	;'-'
   621  08A7  3420               	retlw	32	;' '
   622  08A8  3444               	retlw	68	;'D'
   623  08A9  3465               	retlw	101	;'e'
   624  08AA  3463               	retlw	99	;'c'
   625  08AB  346F               	retlw	111	;'o'
   626  08AC  3464               	retlw	100	;'d'
   627  08AD  3465               	retlw	101	;'e'
   628  08AE  3400               	retlw	0
   629  08AF                     STR_179:	
   630  08AF  3443               	retlw	67	;'C'
   631  08B0  346F               	retlw	111	;'o'
   632  08B1  346E               	retlw	110	;'n'
   633  08B2  3464               	retlw	100	;'d'
   634  08B3  346F               	retlw	111	;'o'
   635  08B4  3433               	retlw	51	;'3'
   636  08B5  3420               	retlw	32	;' '
   637  08B6  3454               	retlw	84	;'T'
   638  08B7  3465               	retlw	101	;'e'
   639  08B8  3473               	retlw	115	;'s'
   640  08B9  3474               	retlw	116	;'t'
   641  08BA  346A               	retlw	106	;'j'
   642  08BB  3469               	retlw	105	;'i'
   643  08BC  3467               	retlw	103	;'g'
   644  08BD  3400               	retlw	0
   645  08BE                     STR_72:	
   646  08BE  3450               	retlw	80	;'P'
   647  08BF  3454               	retlw	84	;'T'
   648  08C0  3443               	retlw	67	;'C'
   649  08C1  3420               	retlw	32	;' '
   650  08C2  3445               	retlw	69	;'E'
   651  08C3  3472               	retlw	114	;'r'
   652  08C4  3472               	retlw	114	;'r'
   653  08C5  346F               	retlw	111	;'o'
   654  08C6  3472               	retlw	114	;'r'
   655  08C7  3420               	retlw	32	;' '
   656  08C8  3474               	retlw	116	;'t'
   657  08C9  3472               	retlw	114	;'r'
   658  08CA  3469               	retlw	105	;'i'
   659  08CB  3470               	retlw	112	;'p'
   660  08CC  3400               	retlw	0
   661  08CD                     STR_19:	
   662  08CD  3431               	retlw	49	;'1'
   663  08CE  3436               	retlw	54	;'6'
   664  08CF  3476               	retlw	118	;'v'
   665  08D0  342D               	retlw	45	;'-'
   666  08D1  3431               	retlw	49	;'1'
   667  08D2  3432               	retlw	50	;'2'
   668  08D3  3476               	retlw	118	;'v'
   669  08D4  3420               	retlw	32	;' '
   670  08D5  3473               	retlw	115	;'s'
   671  08D6  3475               	retlw	117	;'u'
   672  08D7  3470               	retlw	112	;'p'
   673  08D8  3470               	retlw	112	;'p'
   674  08D9  346C               	retlw	108	;'l'
   675  08DA  3479               	retlw	121	;'y'
   676  08DB  3400               	retlw	0
   677  08DC                     STR_149:	
   678  08DC  344D               	retlw	77	;'M'
   679  08DD  3461               	retlw	97	;'a'
   680  08DE  3473               	retlw	115	;'s'
   681  08DF  3474               	retlw	116	;'t'
   682  08E0  3465               	retlw	101	;'e'
   683  08E1  3472               	retlw	114	;'r'
   684  08E2  3420               	retlw	32	;' '
   685  08E3  3445               	retlw	69	;'E'
   686  08E4  3472               	retlw	114	;'r'
   687  08E5  3461               	retlw	97	;'a'
   688  08E6  3473               	retlw	115	;'s'
   689  08E7  3465               	retlw	101	;'e'
   690  08E8  3420               	retlw	32	;' '
   691  08E9  3400               	retlw	0
   692  08EA                     STR_44:	
   693  08EA  3420               	retlw	32	;' '
   694  08EB  3445               	retlw	69	;'E'
   695  08EC  3472               	retlw	114	;'r'
   696  08ED  3472               	retlw	114	;'r'
   697  08EE  346F               	retlw	111	;'o'
   698  08EF  3472               	retlw	114	;'r'
   699  08F0  3420               	retlw	32	;' '
   700  08F1  3443               	retlw	67	;'C'
   701  08F2  346F               	retlw	111	;'o'
   702  08F3  346E               	retlw	110	;'n'
   703  08F4  3464               	retlw	100	;'d'
   704  08F5  346F               	retlw	111	;'o'
   705  08F6  3433               	retlw	51	;'3'
   706  08F7  3400               	retlw	0
   707  08F8                     STR_4:	
   708  08F8  342D               	retlw	45	;'-'
   709  08F9  343E               	retlw	62	;'>'
   710  08FA  3420               	retlw	32	;' '
   711  08FB  3449               	retlw	73	;'I'
   712  08FC  346E               	retlw	110	;'n'
   713  08FD  3473               	retlw	115	;'s'
   714  08FE  3465               	retlw	101	;'e'
   715  08FF  3472               	retlw	114	;'r'
   716  0900  3474               	retlw	116	;'t'
   717  0901  3420               	retlw	32	;' '
   718  0902  3450               	retlw	80	;'P'
   719  0903  3443               	retlw	67	;'C'
   720  0904  3442               	retlw	66	;'B'
   721  0905  3400               	retlw	0
   722  0906                     STR_162:	
   723  0906  3420               	retlw	32	;' '
   724  0907  3452               	retlw	82	;'R'
   725  0908  3465               	retlw	101	;'e'
   726  0909  346D               	retlw	109	;'m'
   727  090A  346F               	retlw	111	;'o'
   728  090B  3476               	retlw	118	;'v'
   729  090C  3465               	retlw	101	;'e'
   730  090D  3420               	retlw	32	;' '
   731  090E  3462               	retlw	98	;'b'
   732  090F  346F               	retlw	111	;'o'
   733  0910  3461               	retlw	97	;'a'
   734  0911  3472               	retlw	114	;'r'
   735  0912  3464               	retlw	100	;'d'
   736  0913  3400               	retlw	0
   737  0914                     STR_116:	
   738  0914  3420               	retlw	32	;' '
   739  0915  3445               	retlw	69	;'E'
   740  0916  3472               	retlw	114	;'r'
   741  0917  3472               	retlw	114	;'r'
   742  0918  346F               	retlw	111	;'o'
   743  0919  3472               	retlw	114	;'r'
   744  091A  3420               	retlw	32	;' '
   745  091B  342D               	retlw	45	;'-'
   746  091C  3420               	retlw	32	;' '
   747  091D  3448               	retlw	72	;'H'
   748  091E  3469               	retlw	105	;'i'
   749  091F  3467               	retlw	103	;'g'
   750  0920  3468               	retlw	104	;'h'
   751  0921  3400               	retlw	0
   752  0922                     STR_167:	
   753  0922  344D               	retlw	77	;'M'
   754  0923  3475               	retlw	117	;'u'
   755  0924  346C               	retlw	108	;'l'
   756  0925  3474               	retlw	116	;'t'
   757  0926  3469               	retlw	105	;'i'
   758  0927  345F               	retlw	95	;'_'
   759  0928  3452               	retlw	82	;'R'
   760  0929  3458               	retlw	88	;'X'
   761  092A  3420               	retlw	32	;' '
   762  092B  3450               	retlw	80	;'P'
   763  092C  3461               	retlw	97	;'a'
   764  092D  3473               	retlw	115	;'s'
   765  092E  3473               	retlw	115	;'s'
   766  092F  3400               	retlw	0
   767  0930                     STR_7:	
   768  0930  3431               	retlw	49	;'1'
   769  0931  3432               	retlw	50	;'2'
   770  0932  3476               	retlw	118	;'v'
   771  0933  342D               	retlw	45	;'-'
   772  0934  3435               	retlw	53	;'5'
   773  0935  3476               	retlw	118	;'v'
   774  0936  3420               	retlw	32	;' '
   775  0937  3473               	retlw	115	;'s'
   776  0938  3475               	retlw	117	;'u'
   777  0939  3470               	retlw	112	;'p'
   778  093A  3470               	retlw	112	;'p'
   779  093B  346C               	retlw	108	;'l'
   780  093C  3479               	retlw	121	;'y'
   781  093D  3400               	retlw	0
   782  093E                     STR_15:	
   783  093E  3431               	retlw	49	;'1'
   784  093F  3436               	retlw	54	;'6'
   785  0940  3476               	retlw	118	;'v'
   786  0941  342D               	retlw	45	;'-'
   787  0942  3435               	retlw	53	;'5'
   788  0943  3476               	retlw	118	;'v'
   789  0944  3420               	retlw	32	;' '
   790  0945  3473               	retlw	115	;'s'
   791  0946  3475               	retlw	117	;'u'
   792  0947  3470               	retlw	112	;'p'
   793  0948  3470               	retlw	112	;'p'
   794  0949  346C               	retlw	108	;'l'
   795  094A  3479               	retlw	121	;'y'
   796  094B  3400               	retlw	0
   797  094C                     STR_41:	
   798  094C  3454               	retlw	84	;'T'
   799  094D  3465               	retlw	101	;'e'
   800  094E  3473               	retlw	115	;'s'
   801  094F  3474               	retlw	116	;'t'
   802  0950  3420               	retlw	32	;' '
   803  0951  3445               	retlw	69	;'E'
   804  0952  3445               	retlw	69	;'E'
   805  0953  3450               	retlw	80	;'P'
   806  0954  3452               	retlw	82	;'R'
   807  0955  344F               	retlw	79	;'O'
   808  0956  344D               	retlw	77	;'M'
   809  0957  3420               	retlw	32	;' '
   810  0958  3400               	retlw	0
   811  0959                     STR_145:	
   812  0959  3454               	retlw	84	;'T'
   813  095A  3434               	retlw	52	;'4'
   814  095B  3420               	retlw	32	;' '
   815  095C  3462               	retlw	98	;'b'
   816  095D  3475               	retlw	117	;'u'
   817  095E  3473               	retlw	115	;'s'
   818  095F  3420               	retlw	32	;' '
   819  0960  3428               	retlw	40	;'('
   820  0961  3443               	retlw	67	;'C'
   821  0962  3441               	retlw	65	;'A'
   822  0963  344E               	retlw	78	;'N'
   823  0964  3429               	retlw	41	;')'
   824  0965  3400               	retlw	0
   825  0966                     STR_10:	
   826  0966  3456               	retlw	86	;'V'
   827  0967  346F               	retlw	111	;'o'
   828  0968  346C               	retlw	108	;'l'
   829  0969  3474               	retlw	116	;'t'
   830  096A  3420               	retlw	32	;' '
   831  096B  3445               	retlw	69	;'E'
   832  096C  3472               	retlw	114	;'r'
   833  096D  3472               	retlw	114	;'r'
   834  096E  346F               	retlw	111	;'o'
   835  096F  3472               	retlw	114	;'r'
   836  0970  3420               	retlw	32	;' '
   837  0971  3448               	retlw	72	;'H'
   838  0972  3400               	retlw	0
   839  0973                     STR_129:	
   840  0973  3454               	retlw	84	;'T'
   841  0974  3465               	retlw	101	;'e'
   842  0975  3473               	retlw	115	;'s'
   843  0976  3474               	retlw	116	;'t'
   844  0977  3420               	retlw	32	;' '
   845  0978  3452               	retlw	82	;'R'
   846  0979  3446               	retlw	70	;'F'
   847  097A  3420               	retlw	32	;' '
   848  097B  3452               	retlw	82	;'R'
   849  097C  3453               	retlw	83	;'S'
   850  097D  3453               	retlw	83	;'S'
   851  097E  3449               	retlw	73	;'I'
   852  097F  3400               	retlw	0
   853  0980                     STR_8:	
   854  0980  3456               	retlw	86	;'V'
   855  0981  346F               	retlw	111	;'o'
   856  0982  346C               	retlw	108	;'l'
   857  0983  3474               	retlw	116	;'t'
   858  0984  3420               	retlw	32	;' '
   859  0985  3445               	retlw	69	;'E'
   860  0986  3472               	retlw	114	;'r'
   861  0987  3472               	retlw	114	;'r'
   862  0988  346F               	retlw	111	;'o'
   863  0989  3472               	retlw	114	;'r'
   864  098A  3420               	retlw	32	;' '
   865  098B  344C               	retlw	76	;'L'
   866  098C  3400               	retlw	0
   867  098D                     STR_188:	
   868  098D  3420               	retlw	32	;' '
   869  098E  3450               	retlw	80	;'P'
   870  098F  3472               	retlw	114	;'r'
   871  0990  3465               	retlw	101	;'e'
   872  0991  3473               	retlw	115	;'s'
   873  0992  3473               	retlw	115	;'s'
   874  0993  3420               	retlw	32	;' '
   875  0994  3453               	retlw	83	;'S'
   876  0995  3454               	retlw	84	;'T'
   877  0996  3441               	retlw	65	;'A'
   878  0997  3452               	retlw	82	;'R'
   879  0998  3454               	retlw	84	;'T'
   880  0999  3400               	retlw	0
   881  099A                     STR_33:	
   882  099A  3445               	retlw	69	;'E'
   883  099B  3473               	retlw	115	;'s'
   884  099C  3474               	retlw	116	;'t'
   885  099D  3461               	retlw	97	;'a'
   886  099E  3462               	retlw	98	;'b'
   887  099F  346C               	retlw	108	;'l'
   888  09A0  3469               	retlw	105	;'i'
   889  09A1  3473               	retlw	115	;'s'
   890  09A2  3468               	retlw	104	;'h'
   891  09A3  3469               	retlw	105	;'i'
   892  09A4  346E               	retlw	110	;'n'
   893  09A5  3467               	retlw	103	;'g'
   894  09A6  3400               	retlw	0
   895  09A7                     STR_37:	
   896  09A7  3445               	retlw	69	;'E'
   897  09A8  3445               	retlw	69	;'E'
   898  09A9  3450               	retlw	80	;'P'
   899  09AA  3452               	retlw	82	;'R'
   900  09AB  344F               	retlw	79	;'O'
   901  09AC  344D               	retlw	77	;'M'
   902  09AD  3420               	retlw	32	;' '
   903  09AE  3465               	retlw	101	;'e'
   904  09AF  3472               	retlw	114	;'r'
   905  09B0  3472               	retlw	114	;'r'
   906  09B1  346F               	retlw	111	;'o'
   907  09B2  3472               	retlw	114	;'r'
   908  09B3  3400               	retlw	0
   909  09B4                     STR_158:	
   910  09B4  3420               	retlw	32	;' '
   911  09B5  3462               	retlw	98	;'b'
   912  09B6  3475               	retlw	117	;'u'
   913  09B7  3474               	retlw	116	;'t'
   914  09B8  3474               	retlw	116	;'t'
   915  09B9  346F               	retlw	111	;'o'
   916  09BA  346E               	retlw	110	;'n'
   917  09BB  3420               	retlw	32	;' '
   918  09BC  3474               	retlw	116	;'t'
   919  09BD  3465               	retlw	101	;'e'
   920  09BE  3473               	retlw	115	;'s'
   921  09BF  3474               	retlw	116	;'t'
   922  09C0  3400               	retlw	0
   923  09C1                     STR_120:	
   924  09C1  3420               	retlw	32	;' '
   925  09C2  3445               	retlw	69	;'E'
   926  09C3  3472               	retlw	114	;'r'
   927  09C4  3472               	retlw	114	;'r'
   928  09C5  346F               	retlw	111	;'o'
   929  09C6  3472               	retlw	114	;'r'
   930  09C7  3420               	retlw	32	;' '
   931  09C8  342D               	retlw	45	;'-'
   932  09C9  3420               	retlw	32	;' '
   933  09CA  344C               	retlw	76	;'L'
   934  09CB  346F               	retlw	111	;'o'
   935  09CC  3477               	retlw	119	;'w'
   936  09CD  3400               	retlw	0
   937  09CE                     STR_115:	
   938  09CE  3454               	retlw	84	;'T'
   939  09CF  3465               	retlw	101	;'e'
   940  09D0  3473               	retlw	115	;'s'
   941  09D1  3474               	retlw	116	;'t'
   942  09D2  3420               	retlw	32	;' '
   943  09D3  3452               	retlw	82	;'R'
   944  09D4  3446               	retlw	70	;'F'
   945  09D5  3420               	retlw	32	;' '
   946  09D6  3433               	retlw	51	;'3'
   947  09D7  3476               	retlw	118	;'v'
   948  09D8  3433               	retlw	51	;'3'
   949  09D9  3400               	retlw	0
   950  09DA                     STR_38:	
   951  09DA  3420               	retlw	32	;' '
   952  09DB  3452               	retlw	82	;'R'
   953  09DC  3465               	retlw	101	;'e'
   954  09DD  3461               	retlw	97	;'a'
   955  09DE  3464               	retlw	100	;'d'
   956  09DF  342F               	retlw	47	;'/'
   957  09E0  3457               	retlw	87	;'W'
   958  09E1  3472               	retlw	114	;'r'
   959  09E2  3469               	retlw	105	;'i'
   960  09E3  3474               	retlw	116	;'t'
   961  09E4  3465               	retlw	101	;'e'
   962  09E5  3400               	retlw	0
   963  09E6                     STR_43:	
   964  09E6  3445               	retlw	69	;'E'
   965  09E7  3445               	retlw	69	;'E'
   966  09E8  3450               	retlw	80	;'P'
   967  09E9  3452               	retlw	82	;'R'
   968  09EA  344F               	retlw	79	;'O'
   969  09EB  344D               	retlw	77	;'M'
   970  09EC  3420               	retlw	32	;' '
   971  09ED  3473               	retlw	115	;'s'
   972  09EE  3469               	retlw	105	;'i'
   973  09EF  347A               	retlw	122	;'z'
   974  09F0  3465               	retlw	101	;'e'
   975  09F1  3400               	retlw	0
   976  09F2                     STR_181:	
   977  09F2  3452               	retlw	82	;'R'
   978  09F3  3458               	retlw	88	;'X'
   979  09F4  3433               	retlw	51	;'3'
   980  09F5  3420               	retlw	32	;' '
   981  09F6  3454               	retlw	84	;'T'
   982  09F7  3465               	retlw	101	;'e'
   983  09F8  3473               	retlw	115	;'s'
   984  09F9  3474               	retlw	116	;'t'
   985  09FA  346A               	retlw	106	;'j'
   986  09FB  3469               	retlw	105	;'i'
   987  09FC  3467               	retlw	103	;'g'
   988  09FD  3400               	retlw	0
   989  09FE                     STR_29:	
   990  09FE  3457               	retlw	87	;'W'
   991  09FF  3461               	retlw	97	;'a'
   992  0A00  3469               	retlw	105	;'i'
   993  0A01  3474               	retlw	116	;'t'
   994  0A02  3469               	retlw	105	;'i'
   995  0A03  346E               	retlw	110	;'n'
   996  0A04  3467               	retlw	103	;'g'
   997  0A05  3420               	retlw	32	;' '
   998  0A06  3466               	retlw	102	;'f'
   999  0A07  346F               	retlw	111	;'o'
  1000  0A08  3472               	retlw	114	;'r'
  1001  0A09  3400               	retlw	0
  1002  0A0A                     STR_35:	
  1003  0A0A  3443               	retlw	67	;'C'
  1004  0A0B  346F               	retlw	111	;'o'
  1005  0A0C  346D               	retlw	109	;'m'
  1006  0A0D  346D               	retlw	109	;'m'
  1007  0A0E  3473               	retlw	115	;'s'
  1008  0A0F  3420               	retlw	32	;' '
  1009  0A10  3445               	retlw	69	;'E'
  1010  0A11  3472               	retlw	114	;'r'
  1011  0A12  3472               	retlw	114	;'r'
  1012  0A13  346F               	retlw	111	;'o'
  1013  0A14  3472               	retlw	114	;'r'
  1014  0A15  3400               	retlw	0
  1015  0A16                     STR_14:	
  1016  0A16  3454               	retlw	84	;'T'
  1017  0A17  342D               	retlw	45	;'-'
  1018  0A18  346F               	retlw	111	;'o'
  1019  0A19  3475               	retlw	117	;'u'
  1020  0A1A  3474               	retlw	116	;'t'
  1021  0A1B  3420               	retlw	32	;' '
  1022  0A1C  3445               	retlw	69	;'E'
  1023  0A1D  3472               	retlw	114	;'r'
  1024  0A1E  3472               	retlw	114	;'r'
  1025  0A1F  346F               	retlw	111	;'o'
  1026  0A20  3472               	retlw	114	;'r'
  1027  0A21  3400               	retlw	0
  1028  0A22                     STR_161:	
  1029  0A22  3443               	retlw	67	;'C'
  1030  0A23  346F               	retlw	111	;'o'
  1031  0A24  346E               	retlw	110	;'n'
  1032  0A25  3464               	retlw	100	;'d'
  1033  0A26  346F               	retlw	111	;'o'
  1034  0A27  3433               	retlw	51	;'3'
  1035  0A28  3420               	retlw	32	;' '
  1036  0A29  3450               	retlw	80	;'P'
  1037  0A2A  3461               	retlw	97	;'a'
  1038  0A2B  3473               	retlw	115	;'s'
  1039  0A2C  3473               	retlw	115	;'s'
  1040  0A2D  3400               	retlw	0
  1041  0A2E                     STR_12:	
  1042  0A2E  3443               	retlw	67	;'C'
  1043  0A2F  3475               	retlw	117	;'u'
  1044  0A30  3472               	retlw	114	;'r'
  1045  0A31  3472               	retlw	114	;'r'
  1046  0A32  3420               	retlw	32	;' '
  1047  0A33  3445               	retlw	69	;'E'
  1048  0A34  3472               	retlw	114	;'r'
  1049  0A35  3472               	retlw	114	;'r'
  1050  0A36  346F               	retlw	111	;'o'
  1051  0A37  3472               	retlw	114	;'r'
  1052  0A38  3400               	retlw	0
  1053  0A39                     STR_160:	
  1054  0A39  3420               	retlw	32	;' '
  1055  0A3A  3466               	retlw	102	;'f'
  1056  0A3B  346F               	retlw	111	;'o'
  1057  0A3C  3472               	retlw	114	;'r'
  1058  0A3D  3420               	retlw	32	;' '
  1059  0A3E  3463               	retlw	99	;'c'
  1060  0A3F  346F               	retlw	111	;'o'
  1061  0A40  346D               	retlw	109	;'m'
  1062  0A41  346D               	retlw	109	;'m'
  1063  0A42  3473               	retlw	115	;'s'
  1064  0A43  3400               	retlw	0
  1065  0A44                     STR_47:	
  1066  0A44  3454               	retlw	84	;'T'
  1067  0A45  3465               	retlw	101	;'e'
  1068  0A46  3473               	retlw	115	;'s'
  1069  0A47  3474               	retlw	116	;'t'
  1070  0A48  3420               	retlw	32	;' '
  1071  0A49  3452               	retlw	82	;'R'
  1072  0A4A  3465               	retlw	101	;'e'
  1073  0A4B  346C               	retlw	108	;'l'
  1074  0A4C  3461               	retlw	97	;'a'
  1075  0A4D  3479               	retlw	121	;'y'
  1076  0A4E  3400               	retlw	0
  1077  0A4F                     STR_23:	
  1078  0A4F  3431               	retlw	49	;'1'
  1079  0A50  3436               	retlw	54	;'6'
  1080  0A51  3476               	retlw	118	;'v'
  1081  0A52  3420               	retlw	32	;' '
  1082  0A53  3473               	retlw	115	;'s'
  1083  0A54  3475               	retlw	117	;'u'
  1084  0A55  3470               	retlw	112	;'p'
  1085  0A56  3470               	retlw	112	;'p'
  1086  0A57  346C               	retlw	108	;'l'
  1087  0A58  3479               	retlw	121	;'y'
  1088  0A59  3400               	retlw	0
  1089  0A5A                     STR_159:	
  1090  0A5A  3477               	retlw	119	;'w'
  1091  0A5B  3461               	retlw	97	;'a'
  1092  0A5C  3469               	retlw	105	;'i'
  1093  0A5D  3474               	retlw	116	;'t'
  1094  0A5E  3469               	retlw	105	;'i'
  1095  0A5F  346E               	retlw	110	;'n'
  1096  0A60  3467               	retlw	103	;'g'
  1097  0A61  3420               	retlw	32	;' '
  1098  0A62  3420               	retlw	32	;' '
  1099  0A63  3400               	retlw	0
  1100  0A64                     STR_153:	
  1101  0A64  3453               	retlw	83	;'S'
  1102  0A65  3465               	retlw	101	;'e'
  1103  0A66  3474               	retlw	116	;'t'
  1104  0A67  3420               	retlw	32	;' '
  1105  0A68  3423               	retlw	35	;'#'
  1106  0A69  3420               	retlw	32	;' '
  1107  0A6A  346F               	retlw	111	;'o'
  1108  0A6B  3466               	retlw	102	;'f'
  1109  0A6C  3420               	retlw	32	;' '
  1110  0A6D  3400               	retlw	0
  1111  0A6E                     STR_65:	
  1112  0A6E  3443               	retlw	67	;'C'
  1113  0A6F  3448               	retlw	72	;'H'
  1114  0A70  3432               	retlw	50	;'2'
  1115  0A71  3420               	retlw	32	;' '
  1116  0A72  342D               	retlw	45	;'-'
  1117  0A73  3420               	retlw	32	;' '
  1118  0A74  344F               	retlw	79	;'O'
  1119  0A75  3446               	retlw	70	;'F'
  1120  0A76  3446               	retlw	70	;'F'
  1121  0A77  3400               	retlw	0
  1122  0A78                     STR_89:	
  1123  0A78  3443               	retlw	67	;'C'
  1124  0A79  3448               	retlw	72	;'H'
  1125  0A7A  3433               	retlw	51	;'3'
  1126  0A7B  3420               	retlw	32	;' '
  1127  0A7C  342D               	retlw	45	;'-'
  1128  0A7D  3420               	retlw	32	;' '
  1129  0A7E  344F               	retlw	79	;'O'
  1130  0A7F  3446               	retlw	70	;'F'
  1131  0A80  3446               	retlw	70	;'F'
  1132  0A81  3400               	retlw	0
  1133  0A82                     STR_134:	
  1134  0A82  3452               	retlw	82	;'R'
  1135  0A83  3453               	retlw	83	;'S'
  1136  0A84  3453               	retlw	83	;'S'
  1137  0A85  3449               	retlw	73	;'I'
  1138  0A86  3420               	retlw	32	;' '
  1139  0A87  342D               	retlw	45	;'-'
  1140  0A88  3420               	retlw	32	;' '
  1141  0A89  344F               	retlw	79	;'O'
  1142  0A8A  344B               	retlw	75	;'K'
  1143  0A8B  3400               	retlw	0
  1144  0A8C                     STR_154:	
  1145  0A8C  3420               	retlw	32	;' '
  1146  0A8D  3463               	retlw	99	;'c'
  1147  0A8E  3468               	retlw	104	;'h'
  1148  0A8F  3461               	retlw	97	;'a'
  1149  0A90  346E               	retlw	110	;'n'
  1150  0A91  346E               	retlw	110	;'n'
  1151  0A92  3465               	retlw	101	;'e'
  1152  0A93  346C               	retlw	108	;'l'
  1153  0A94  3473               	retlw	115	;'s'
  1154  0A95  3400               	retlw	0
  1155  0A96                     STR_60:	
  1156  0A96  3420               	retlw	32	;' '
  1157  0A97  3445               	retlw	69	;'E'
  1158  0A98  3472               	retlw	114	;'r'
  1159  0A99  3472               	retlw	114	;'r'
  1160  0A9A  346F               	retlw	111	;'o'
  1161  0A9B  3472               	retlw	114	;'r'
  1162  0A9C  3420               	retlw	32	;' '
  1163  0A9D  3431               	retlw	49	;'1'
  1164  0A9E  3400               	retlw	0
  1165  0A9F                     STR_52:	
  1166  0A9F  3420               	retlw	32	;' '
  1167  0AA0  3445               	retlw	69	;'E'
  1168  0AA1  3472               	retlw	114	;'r'
  1169  0AA2  3472               	retlw	114	;'r'
  1170  0AA3  346F               	retlw	111	;'o'
  1171  0AA4  3472               	retlw	114	;'r'
  1172  0AA5  3420               	retlw	32	;' '
  1173  0AA6  3432               	retlw	50	;'2'
  1174  0AA7  3400               	retlw	0
  1175  0AA8                     STR_61:	
  1176  0AA8  3454               	retlw	84	;'T'
  1177  0AA9  3465               	retlw	101	;'e'
  1178  0AAA  3473               	retlw	115	;'s'
  1179  0AAB  3474               	retlw	116	;'t'
  1180  0AAC  3420               	retlw	32	;' '
  1181  0AAD  3443               	retlw	67	;'C'
  1182  0AAE  3448               	retlw	72	;'H'
  1183  0AAF  3432               	retlw	50	;'2'
  1184  0AB0  3400               	retlw	0
  1185  0AB1                     STR_85:	
  1186  0AB1  3454               	retlw	84	;'T'
  1187  0AB2  3465               	retlw	101	;'e'
  1188  0AB3  3473               	retlw	115	;'s'
  1189  0AB4  3474               	retlw	116	;'t'
  1190  0AB5  3420               	retlw	32	;' '
  1191  0AB6  3443               	retlw	67	;'C'
  1192  0AB7  3448               	retlw	72	;'H'
  1193  0AB8  3433               	retlw	51	;'3'
  1194  0AB9  3400               	retlw	0
  1195  0ABA                     STR_122:	
  1196  0ABA  3433               	retlw	51	;'3'
  1197  0ABB  3476               	retlw	118	;'v'
  1198  0ABC  3433               	retlw	51	;'3'
  1199  0ABD  3420               	retlw	32	;' '
  1200  0ABE  342D               	retlw	45	;'-'
  1201  0ABF  3420               	retlw	32	;' '
  1202  0AC0  344F               	retlw	79	;'O'
  1203  0AC1  344B               	retlw	75	;'K'
  1204  0AC2  3400               	retlw	0
  1205  0AC3                     STR_69:	
  1206  0AC3  3443               	retlw	67	;'C'
  1207  0AC4  3448               	retlw	72	;'H'
  1208  0AC5  3432               	retlw	50	;'2'
  1209  0AC6  3420               	retlw	32	;' '
  1210  0AC7  342D               	retlw	45	;'-'
  1211  0AC8  3420               	retlw	32	;' '
  1212  0AC9  344F               	retlw	79	;'O'
  1213  0ACA  344E               	retlw	78	;'N'
  1214  0ACB  3400               	retlw	0
  1215  0ACC                     STR_93:	
  1216  0ACC  3443               	retlw	67	;'C'
  1217  0ACD  3448               	retlw	72	;'H'
  1218  0ACE  3433               	retlw	51	;'3'
  1219  0ACF  3420               	retlw	32	;' '
  1220  0AD0  342D               	retlw	45	;'-'
  1221  0AD1  3420               	retlw	32	;' '
  1222  0AD2  344F               	retlw	79	;'O'
  1223  0AD3  344E               	retlw	78	;'N'
  1224  0AD4  3400               	retlw	0
  1225  0AD5                     STR_1:	
  1226  0AD5  344D               	retlw	77	;'M'
  1227  0AD6  3475               	retlw	117	;'u'
  1228  0AD7  346C               	retlw	108	;'l'
  1229  0AD8  3474               	retlw	116	;'t'
  1230  0AD9  3469               	retlw	105	;'i'
  1231  0ADA  345F               	retlw	95	;'_'
  1232  0ADB  3452               	retlw	82	;'R'
  1233  0ADC  3458               	retlw	88	;'X'
  1234  0ADD  3400               	retlw	0
  1235  0ADE                     STR_32:	
  1236  0ADE  3420               	retlw	32	;' '
  1237  0ADF  3473               	retlw	115	;'s'
  1238  0AE0  346B               	retlw	107	;'k'
  1239  0AE1  3469               	retlw	105	;'i'
  1240  0AE2  3470               	retlw	112	;'p'
  1241  0AE3  3470               	retlw	112	;'p'
  1242  0AE4  3465               	retlw	101	;'e'
  1243  0AE5  3464               	retlw	100	;'d'
  1244  0AE6  3400               	retlw	0
  1245  0AE7                     STR_163:	
  1246  0AE7  3452               	retlw	82	;'R'
  1247  0AE8  3458               	retlw	88	;'X'
  1248  0AE9  3433               	retlw	51	;'3'
  1249  0AEA  3420               	retlw	32	;' '
  1250  0AEB  3450               	retlw	80	;'P'
  1251  0AEC  3461               	retlw	97	;'a'
  1252  0AED  3473               	retlw	115	;'s'
  1253  0AEE  3473               	retlw	115	;'s'
  1254  0AEF  3400               	retlw	0
  1255  0AF0                     STR_169:	
  1256  0AF0  3443               	retlw	67	;'C'
  1257  0AF1  346F               	retlw	111	;'o'
  1258  0AF2  346E               	retlw	110	;'n'
  1259  0AF3  3464               	retlw	100	;'d'
  1260  0AF4  346F               	retlw	111	;'o'
  1261  0AF5  3433               	retlw	51	;'3'
  1262  0AF6  3420               	retlw	32	;' '
  1263  0AF7  3400               	retlw	0
  1264  0AF8                     STR_178:	
  1265  0AF8  3477               	retlw	119	;'w'
  1266  0AF9  3461               	retlw	97	;'a'
  1267  0AFA  3469               	retlw	105	;'i'
  1268  0AFB  3474               	retlw	116	;'t'
  1269  0AFC  342E               	retlw	46	;'.'
  1270  0AFD  342E               	retlw	46	;'.'
  1271  0AFE  342E               	retlw	46	;'.'
  1272  0AFF  3400               	retlw	0
  1273  0B00                     STR_109:	
  1274  0B00  3454               	retlw	84	;'T'
  1275  0B01  3465               	retlw	101	;'e'
  1276  0B02  3473               	retlw	115	;'s'
  1277  0B03  3474               	retlw	116	;'t'
  1278  0B04  3420               	retlw	32	;' '
  1279  0B05  3452               	retlw	82	;'R'
  1280  0B06  3446               	retlw	70	;'F'
  1281  0B07  3400               	retlw	0
  1282  0B08                     STR_171:	
  1283  0B08  3452               	retlw	82	;'R'
  1284  0B09  3458               	retlw	88	;'X'
  1285  0B0A  3433               	retlw	51	;'3'
  1286  0B0B  3420               	retlw	32	;' '
  1287  0B0C  3400               	retlw	0
  1288  0B0D                     STR_108:	
  1289  0B0D  3420               	retlw	32	;' '
  1290  0B0E  3431               	retlw	49	;'1'
  1291  0B0F  3430               	retlw	48	;'0'
  1292  0B10  3400               	retlw	0
  1293  0B11                     STR_112:	
  1294  0B11  3420               	retlw	32	;' '
  1295  0B12  3431               	retlw	49	;'1'
  1296  0B13  3431               	retlw	49	;'1'
  1297  0B14  3400               	retlw	0
  1298  0B15                     STR_114:	
  1299  0B15  3420               	retlw	32	;' '
  1300  0B16  3431               	retlw	49	;'1'
  1301  0B17  3432               	retlw	50	;'2'
  1302  0B18  3400               	retlw	0
  1303  0B19                     STR_126:	
  1304  0B19  3420               	retlw	32	;' '
  1305  0B1A  3431               	retlw	49	;'1'
  1306  0B1B  3433               	retlw	51	;'3'
  1307  0B1C  3400               	retlw	0
  1308  0B1D                     STR_128:	
  1309  0B1D  3420               	retlw	32	;' '
  1310  0B1E  3431               	retlw	49	;'1'
  1311  0B1F  3434               	retlw	52	;'4'
  1312  0B20  3400               	retlw	0
  1313  0B21                     STR_144:	
  1314  0B21  3420               	retlw	32	;' '
  1315  0B22  3431               	retlw	49	;'1'
  1316  0B23  3435               	retlw	53	;'5'
  1317  0B24  3400               	retlw	0
  1318  0B25                     STR_156:	
  1319  0B25  3420               	retlw	32	;' '
  1320  0B26  3431               	retlw	49	;'1'
  1321  0B27  3436               	retlw	54	;'6'
  1322  0B28  3400               	retlw	0
  1323  0B29                     STR_152:	
  1324  0B29  3420               	retlw	32	;' '
  1325  0B2A  3431               	retlw	49	;'1'
  1326  0B2B  3437               	retlw	55	;'7'
  1327  0B2C  3400               	retlw	0
  1328  0B2D                     STR_148:	
  1329  0B2D  3420               	retlw	32	;' '
  1330  0B2E  3431               	retlw	49	;'1'
  1331  0B2F  3438               	retlw	56	;'8'
  1332  0B30  3400               	retlw	0
  1333  0B31                     STR_74:	
  1334  0B31  3420               	retlw	32	;' '
  1335  0B32  3436               	retlw	54	;'6'
  1336  0B33  3461               	retlw	97	;'a'
  1337  0B34  3400               	retlw	0
  1338  0B35                     STR_100:	
  1339  0B35  3420               	retlw	32	;' '
  1340  0B36  3438               	retlw	56	;'8'
  1341  0B37  3461               	retlw	97	;'a'
  1342  0B38  3400               	retlw	0
  1343  0B39                     STR_76:	
  1344  0B39  3420               	retlw	32	;' '
  1345  0B3A  3436               	retlw	54	;'6'
  1346  0B3B  3462               	retlw	98	;'b'
  1347  0B3C  3400               	retlw	0
  1348  0B3D                     STR_98:	
  1349  0B3D  3420               	retlw	32	;' '
  1350  0B3E  3438               	retlw	56	;'8'
  1351  0B3F  3462               	retlw	98	;'b'
  1352  0B40  3400               	retlw	0
  1353  0B41                     STR_54:	
  1354  0B41  3420               	retlw	32	;' '
  1355  0B42  3433               	retlw	51	;'3'
  1356  0B43  3400               	retlw	0
  1357  0B44                     STR_58:	
  1358  0B44  3420               	retlw	32	;' '
  1359  0B45  3434               	retlw	52	;'4'
  1360  0B46  3400               	retlw	0
  1361  0B47                     STR_68:	
  1362  0B47  3420               	retlw	32	;' '
  1363  0B48  3435               	retlw	53	;'5'
  1364  0B49  3400               	retlw	0
  1365  0B4A                     STR_80:	
  1366  0B4A  3420               	retlw	32	;' '
  1367  0B4B  3436               	retlw	54	;'6'
  1368  0B4C  3400               	retlw	0
  1369  0B4D                     STR_84:	
  1370  0B4D  3420               	retlw	32	;' '
  1371  0B4E  3437               	retlw	55	;'7'
  1372  0B4F  3400               	retlw	0
  1373  0B50                     STR_92:	
  1374  0B50  3420               	retlw	32	;' '
  1375  0B51  3438               	retlw	56	;'8'
  1376  0B52  3400               	retlw	0
  1377  0B53                     STR_104:	
  1378  0B53  3420               	retlw	32	;' '
  1379  0B54  3439               	retlw	57	;'9'
  1380  0B55  3400               	retlw	0
  1381  0B56                     STR_64:	
  1382  0B56  346F               	retlw	111	;'o'
  1383  0B57  346B               	retlw	107	;'k'
  1384  0B58  3400               	retlw	0
  1385  0840                     
  1386                           ; #config settings
  1387  0000                     
  1388                           	psect	cinit
  1389  0097                     start_initialization:	
  1390  0097                     __initialization:	
  1391                           
  1392                           ;initializer for _one_second_timer
  1393  0097  30E8               	movlw	232
  1394  0098  00ED               	movwf	__pdataBANK0& (0+127)
  1395  0099  3003               	movlw	3
  1396  009A  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  1397                           
  1398                           ; Clear objects allocated to BANK0
  1399  009B  3052               	movlw	low __pbssBANK0
  1400  009C  0084               	movwf	4
  1401  009D  3000               	movlw	high __pbssBANK0
  1402  009E  0085               	movwf	5
  1403  009F  3018               	movlw	24
  1404  00A0  3194  2422         	fcall	clear_ram0
  1405  00A2                     end_of_initialization:	
  1406                           ;End of C runtime variable initialization code
  1407                           
  1408  00A2                     __end_of__initialization:	
  1409  00A2  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1410  00A3  0020               	movlb	0
  1411  00A4  3194  2CA1         	ljmp	_main	;jump to C main() function
  1412                           
  1413                           	psect	bssBANK0
  1414  0052                     __pbssBANK0:	
  1415  0052                     _ADC_cur_sink_val:	
  1416  0052                     	ds	2
  1417  0054                     _curent_sink_val:	
  1418  0054                     	ds	2
  1419  0056                     _current_sink_stable:	
  1420  0056                     	ds	2
  1421  0058                     _current_sink_timer:	
  1422  0058                     	ds	2
  1423  005A                     _motor_direction_timer:	
  1424  005A                     	ds	2
  1425  005C                     _pickit_timer:	
  1426  005C                     	ds	2
  1427  005E                     _testjig_timer:	
  1428  005E                     	ds	2
  1429  0060                     _tj_timer:	
  1430  0060                     	ds	2
  1431  0062                     _uart_receive_timer:	
  1432  0062                     	ds	2
  1433  0064                     _hund:	
  1434  0064                     	ds	1
  1435  0065                     _pickit_red_counter:	
  1436  0065                     	ds	1
  1437  0066                     _ten:	
  1438  0066                     	ds	1
  1439  0067                     _ten_thou:	
  1440  0067                     	ds	1
  1441  0068                     _unit:	
  1442  0068                     	ds	1
  1443  0069                     _thou:	
  1444  0069                     	ds	1
  1445                           
  1446                           	psect	dataBANK0
  1447  006D                     __pdataBANK0:	
  1448  006D                     _one_second_timer:	
  1449  006D                     	ds	2
  1450                           
  1451                           	psect	clrtext
  1452  1422                     clear_ram0:	
  1453                           ;	Called with FSR0 containing the base address, and
  1454                           ;	WREG with the size to clear
  1455                           
  1456  1422  0064               	clrwdt	;clear the watchdog before getting into this loop
  1457  1423                     clrloop0:	
  1458  1423  0180               	clrf	0	;clear RAM location pointed to by FSR
  1459  1424  3101               	addfsr 0,1
  1460  1425  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1461  1426  2C23               	goto	clrloop0	;have we reached the end yet?
  1462  1427  3400               	retlw	0	;all done for this memory range, return
  1463                           
  1464                           	psect	cstackCOMMON
  1465  0070                     __pcstackCOMMON:	
  1466  0070                     ?_init_ADC:	
  1467  0070                     ??_init_ADC:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470  0070                     ?_init_current_sink:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473  0070                     ??_init_current_sink:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476  0070                     ?_buzz_one:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479  0070                     ?_init_i2c:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482  0070                     ??_init_i2c:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485  0070                     ?_debug_fast_tx:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488  0070                     ?_power_supply_set:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491  0070                     ??_power_supply_set:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494  0070                     ?_TX_one:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497  0070                     ??_TX_one:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ?_RX_one_timeout:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     ??_RX_one_timeout:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ?_RX_one:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ??_RX_one:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ?_digitalpot:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_isr:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ??_isr:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_main:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ?_i2c_Start:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ??_i2c_Start:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_i2c_Write:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ??_i2c_Write:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_i2c_Stop:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ??_i2c_Stop:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_i2c_write_char:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_clear_lcd:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_i2c_first_line:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_i2c_second_line:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?___bmul:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?_ADC_get_val:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?___wmul:	
  1561                           ; 2 bytes @ 0x0
  1562                           
  1563  0070                     ?___ftpack:	
  1564                           ; 2 bytes @ 0x0
  1565                           
  1566  0070                     i2c_Write@data:	
  1567                           ; 3 bytes @ 0x0
  1568                           
  1569  0070                     power_supply_set@supply:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ___bmul@multiplicand:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     buzz_one@time:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     debug_fast_tx@data:	
  1579                           ; 2 bytes @ 0x0
  1580                           
  1581  0070                     ___wmul@multiplier:	
  1582                           ; 2 bytes @ 0x0
  1583                           
  1584  0070                     ___ftpack@arg:	
  1585                           ; 2 bytes @ 0x0
  1586                           
  1587                           
  1588                           ; 3 bytes @ 0x0
  1589  0070                     	ds	1
  1590  0071                     ?_init_i2c_lcd_5v:	
  1591  0071                     ??_digitalpot:	
  1592                           ; 1 bytes @ 0x1
  1593                           
  1594  0071                     ?_i2c_Write_string:	
  1595                           ; 1 bytes @ 0x1
  1596                           
  1597  0071                     ??_i2c_write_char:	
  1598                           ; 1 bytes @ 0x1
  1599                           
  1600  0071                     ??_clear_lcd:	
  1601                           ; 1 bytes @ 0x1
  1602                           
  1603  0071                     ??_i2c_first_line:	
  1604                           ; 1 bytes @ 0x1
  1605                           
  1606  0071                     ??_i2c_second_line:	
  1607                           ; 1 bytes @ 0x1
  1608                           
  1609  0071                     ?_lcd_set_cursor:	
  1610                           ; 1 bytes @ 0x1
  1611                           
  1612  0071                     ??___bmul:	
  1613                           ; 1 bytes @ 0x1
  1614                           
  1615  0071                     i2c_write_char@char_data:	
  1616                           ; 1 bytes @ 0x1
  1617                           
  1618  0071                     init_i2c_lcd_5v@single1_double2:	
  1619                           ; 1 bytes @ 0x1
  1620                           
  1621  0071                     lcd_set_cursor@col:	
  1622                           ; 1 bytes @ 0x1
  1623                           
  1624  0071                     TX_one@data:	
  1625                           ; 1 bytes @ 0x1
  1626                           
  1627  0071                     RX_one@i:	
  1628                           ; 1 bytes @ 0x1
  1629                           
  1630  0071                     RX_one_timeout@i:	
  1631                           ; 1 bytes @ 0x1
  1632                           
  1633  0071                     ___bmul@product:	
  1634                           ; 1 bytes @ 0x1
  1635                           
  1636  0071                     i2c_Write_string@data:	
  1637                           ; 1 bytes @ 0x1
  1638                           
  1639                           
  1640                           ; 2 bytes @ 0x1
  1641  0071                     	ds	1
  1642  0072                     ??_buzz_one:	
  1643  0072                     ??_init_i2c_lcd_5v:	
  1644                           ; 1 bytes @ 0x2
  1645                           
  1646  0072                     ??_debug_fast_tx:	
  1647                           ; 1 bytes @ 0x2
  1648                           
  1649  0072                     ??_lcd_set_cursor:	
  1650                           ; 1 bytes @ 0x2
  1651                           
  1652  0072                     lcd_set_cursor@row:	
  1653                           ; 1 bytes @ 0x2
  1654                           
  1655  0072                     debug_fast_tx@i:	
  1656                           ; 1 bytes @ 0x2
  1657                           
  1658  0072                     TX_one@i:	
  1659                           ; 1 bytes @ 0x2
  1660                           
  1661  0072                     RX_one@data:	
  1662                           ; 1 bytes @ 0x2
  1663                           
  1664  0072                     RX_one_timeout@data:	
  1665                           ; 1 bytes @ 0x2
  1666                           
  1667  0072                     ___bmul@multiplier:	
  1668                           ; 1 bytes @ 0x2
  1669                           
  1670  0072                     ___wmul@multiplicand:	
  1671                           ; 1 bytes @ 0x2
  1672                           
  1673                           
  1674                           ; 2 bytes @ 0x2
  1675  0072                     	ds	1
  1676  0073                     ??_ADC_get_val:	
  1677  0073                     ??_i2c_Write_string:	
  1678                           ; 1 bytes @ 0x3
  1679                           
  1680  0073                     lcd_set_cursor@LCD_position:	
  1681                           ; 1 bytes @ 0x3
  1682                           
  1683  0073                     ADC_get_val@channel:	
  1684                           ; 1 bytes @ 0x3
  1685                           
  1686  0073                     digitalpot@value:	
  1687                           ; 1 bytes @ 0x3
  1688                           
  1689  0073                     ___ftpack@exp:	
  1690                           ; 1 bytes @ 0x3
  1691                           
  1692                           
  1693                           ; 1 bytes @ 0x3
  1694  0073                     	ds	1
  1695  0074                     ?_print_screen:	
  1696  0074                     ?_Vout_set:	
  1697                           ; 1 bytes @ 0x4
  1698                           
  1699  0074                     ??___wmul:	
  1700                           ; 1 bytes @ 0x4
  1701                           
  1702  0074                     init_i2c_lcd_5v@contrast:	
  1703                           ; 1 bytes @ 0x4
  1704                           
  1705  0074                     ___ftpack@sign:	
  1706                           ; 1 bytes @ 0x4
  1707                           
  1708  0074                     print_screen@top:	
  1709                           ; 1 bytes @ 0x4
  1710                           
  1711  0074                     ADC_get_val@return_val:	
  1712                           ; 2 bytes @ 0x4
  1713                           
  1714  0074                     Vout_set@Volts:	
  1715                           ; 2 bytes @ 0x4
  1716                           
  1717  0074                     ___wmul@product:	
  1718                           ; 2 bytes @ 0x4
  1719                           
  1720                           
  1721                           ; 2 bytes @ 0x4
  1722  0074                     	ds	1
  1723  0075                     ??___ftpack:	
  1724                           
  1725                           ; 1 bytes @ 0x5
  1726  0075                     	ds	1
  1727  0076                     ??_Vout_set:	
  1728  0076                     ?_ten_thou_conv:	
  1729                           ; 1 bytes @ 0x6
  1730                           
  1731  0076                     ten_thou_conv@n:	
  1732                           ; 1 bytes @ 0x6
  1733                           
  1734  0076                     print_screen@bottom:	
  1735                           ; 2 bytes @ 0x6
  1736                           
  1737  0076                     Vout_set@digi_step:	
  1738                           ; 2 bytes @ 0x6
  1739                           
  1740                           
  1741                           ; 4 bytes @ 0x6
  1742  0076                     	ds	2
  1743  0078                     ??_print_screen:	
  1744  0078                     ?_print_error:	
  1745                           ; 1 bytes @ 0x8
  1746                           
  1747  0078                     ?_testjig_done:	
  1748                           ; 1 bytes @ 0x8
  1749                           
  1750  0078                     ??_ten_thou_conv:	
  1751                           ; 1 bytes @ 0x8
  1752                           
  1753  0078                     ?___lwtoft:	
  1754                           ; 1 bytes @ 0x8
  1755                           
  1756  0078                     testjig_done@device_type:	
  1757                           ; 3 bytes @ 0x8
  1758                           
  1759  0078                     print_error@top:	
  1760                           ; 1 bytes @ 0x8
  1761                           
  1762  0078                     ___lwtoft@c:	
  1763                           ; 2 bytes @ 0x8
  1764                           
  1765                           
  1766                           ; 2 bytes @ 0x8
  1767  0078                     	ds	1
  1768  0079                     ??_testjig_done:	
  1769                           
  1770                           ; 1 bytes @ 0x9
  1771  0079                     	ds	1
  1772  007A                     print_error@bottom:	
  1773                           
  1774                           ; 2 bytes @ 0xA
  1775  007A                     	ds	1
  1776  007B                     ??_lcd_print_int:	
  1777  007B                     ??___ftmul:	
  1778                           ; 1 bytes @ 0xB
  1779                           
  1780  007B                     ??___lwtoft:	
  1781                           ; 1 bytes @ 0xB
  1782                           
  1783                           
  1784                           ; 1 bytes @ 0xB
  1785  007B                     	ds	1
  1786  007C                     testjig_done@state:	
  1787                           
  1788                           ; 1 bytes @ 0xC
  1789  007C                     	ds	2
  1790  007E                     ??_get_30v_current:	
  1791                           
  1792                           	psect	cstackBANK0
  1793  0020                     __pcstackBANK0:	
  1794                           ; 1 bytes @ 0xE
  1795                           
  1796  0020                     ??_print_error:	
  1797  0020                     ?_lcd_print_int:	
  1798                           ; 1 bytes @ 0x0
  1799                           
  1800  0020                     ?___ftmul:	
  1801                           ; 1 bytes @ 0x0
  1802                           
  1803  0020                     lcd_print_int@number:	
  1804                           ; 3 bytes @ 0x0
  1805                           
  1806  0020                     ___ftmul@f1:	
  1807                           ; 2 bytes @ 0x0
  1808                           
  1809                           
  1810                           ; 3 bytes @ 0x0
  1811  0020                     	ds	2
  1812  0022                     lcd_print_int@pos:	
  1813                           
  1814                           ; 2 bytes @ 0x2
  1815  0022                     	ds	1
  1816  0023                     ___ftmul@f2:	
  1817                           
  1818                           ; 3 bytes @ 0x3
  1819  0023                     	ds	1
  1820  0024                     lcd_print_int@decimal:	
  1821                           
  1822                           ; 1 bytes @ 0x4
  1823  0024                     	ds	1
  1824  0025                     lcd_print_int@ten_thou_digit:	
  1825                           
  1826                           ; 1 bytes @ 0x5
  1827  0025                     	ds	1
  1828  0026                     ___ftmul@exp:	
  1829                           
  1830                           ; 1 bytes @ 0x6
  1831  0026                     	ds	1
  1832  0027                     ___ftmul@f3_as_product:	
  1833                           
  1834                           ; 3 bytes @ 0x7
  1835  0027                     	ds	3
  1836  002A                     ___ftmul@cntr:	
  1837                           
  1838                           ; 1 bytes @ 0xA
  1839  002A                     	ds	1
  1840  002B                     ___ftmul@sign:	
  1841                           
  1842                           ; 1 bytes @ 0xB
  1843  002B                     	ds	1
  1844  002C                     ?___ftadd:	
  1845  002C                     ___ftadd@f1:	
  1846                           ; 3 bytes @ 0xC
  1847                           
  1848                           
  1849                           ; 3 bytes @ 0xC
  1850  002C                     	ds	3
  1851  002F                     ___ftadd@f2:	
  1852                           
  1853                           ; 3 bytes @ 0xF
  1854  002F                     	ds	3
  1855  0032                     ??___ftadd:	
  1856                           
  1857                           ; 1 bytes @ 0x12
  1858  0032                     	ds	3
  1859  0035                     ___ftadd@sign:	
  1860                           
  1861                           ; 1 bytes @ 0x15
  1862  0035                     	ds	1
  1863  0036                     ___ftadd@exp2:	
  1864                           
  1865                           ; 1 bytes @ 0x16
  1866  0036                     	ds	1
  1867  0037                     ___ftadd@exp1:	
  1868                           
  1869                           ; 1 bytes @ 0x17
  1870  0037                     	ds	1
  1871  0038                     ?___fttol:	
  1872  0038                     ___fttol@f1:	
  1873                           ; 4 bytes @ 0x18
  1874                           
  1875                           
  1876                           ; 3 bytes @ 0x18
  1877  0038                     	ds	4
  1878  003C                     ??___fttol:	
  1879                           
  1880                           ; 1 bytes @ 0x1C
  1881  003C                     	ds	3
  1882  003F                     ___fttol@sign1:	
  1883                           
  1884                           ; 1 bytes @ 0x1F
  1885  003F                     	ds	1
  1886  0040                     ___fttol@lval:	
  1887                           
  1888                           ; 4 bytes @ 0x20
  1889  0040                     	ds	4
  1890  0044                     ___fttol@exp1:	
  1891                           
  1892                           ; 1 bytes @ 0x24
  1893  0044                     	ds	1
  1894  0045                     ?_get_30v_current:	
  1895                           
  1896                           ; 2 bytes @ 0x25
  1897  0045                     	ds	2
  1898  0047                     get_30v_current@temp:	
  1899                           
  1900                           ; 2 bytes @ 0x27
  1901  0047                     	ds	2
  1902  0049                     ??_main:	
  1903                           
  1904                           ; 1 bytes @ 0x29
  1905  0049                     	ds	3
  1906  004C                     main@mem_size:	
  1907                           
  1908                           ; 2 bytes @ 0x2C
  1909  004C                     	ds	2
  1910  004E                     main@i:	
  1911                           
  1912                           ; 2 bytes @ 0x2E
  1913  004E                     	ds	2
  1914  0050                     main@RX_data:	
  1915                           
  1916                           ; 1 bytes @ 0x30
  1917  0050                     	ds	1
  1918  0051                     main@device_type:	
  1919                           
  1920                           ; 1 bytes @ 0x31
  1921  0051                     	ds	1
  1922                           
  1923                           	psect	maintext
  1924  14A1                     __pmaintext:	
  1925 ;;
  1926 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1927 ;;
  1928 ;; *************** function _main *****************
  1929 ;; Defined at:
  1930 ;;		line 469 in file "Multi_RX_testjig_v1.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  mem_size        2   44[BANK0 ] unsigned int 
  1935 ;;  i               2   46[BANK0 ] unsigned int 
  1936 ;;  device_type     1   49[BANK0 ] unsigned char 
  1937 ;;  RX_data         1   48[BANK0 ] unsigned char 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : B1F/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  1947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1948 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1949 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1950 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  1951 ;;Total ram usage:        9 bytes
  1952 ;; Hardware stack levels required when called:    5
  1953 ;; This function calls:
  1954 ;;		_ADC_get_val
  1955 ;;		_RX_one
  1956 ;;		_RX_one_timeout
  1957 ;;		_TX_one
  1958 ;;		_Vout_set
  1959 ;;		_buzz_one
  1960 ;;		_debug_fast_tx
  1961 ;;		_get_30v_current
  1962 ;;		_init_ADC
  1963 ;;		_init_current_sink
  1964 ;;		_init_i2c
  1965 ;;		_init_i2c_lcd_5v
  1966 ;;		_lcd_print_int
  1967 ;;		_power_supply_set
  1968 ;;		_print_error
  1969 ;;		_print_screen
  1970 ;;		_testjig_done
  1971 ;; This function is called by:
  1972 ;;		Startup code after reset
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           
  1977                           ;psect for function _main
  1978  14A1                     _main:	
  1979                           
  1980                           ;Multi_RX_testjig_v1.c: 472: OSCCON = 0x7A;
  1981                           
  1982                           ;incstack = 0
  1983                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1984  14A1  307A               	movlw	122
  1985  14A2  0021               	movlb	1	; select bank1
  1986  14A3  0099               	movwf	25	;volatile
  1987                           
  1988                           ;Multi_RX_testjig_v1.c: 474: OPTION_REG = 0b11010000;
  1989  14A4  30D0               	movlw	208
  1990  14A5  0095               	movwf	21	;volatile
  1991                           
  1992                           ;Multi_RX_testjig_v1.c: 475: TMR0 = 0x00;
  1993  14A6  0020               	movlb	0	; select bank0
  1994  14A7  0195               	clrf	21	;volatile
  1995                           
  1996                           ;Multi_RX_testjig_v1.c: 476: TMR0IF = 0;
  1997  14A8  110B               	bcf	11,2	;volatile
  1998                           
  1999                           ;Multi_RX_testjig_v1.c: 477: TMR0IE = 1;
  2000  14A9  168B               	bsf	11,5	;volatile
  2001                           
  2002                           ;Multi_RX_testjig_v1.c: 480: TRISA = 0b00001111;
  2003  14AA  300F               	movlw	15
  2004  14AB  0021               	movlb	1	; select bank1
  2005  14AC  008C               	movwf	12	;volatile
  2006                           
  2007                           ;Multi_RX_testjig_v1.c: 481: TRISB = 0b11001111;
  2008  14AD  30CF               	movlw	207
  2009  14AE  008D               	movwf	13	;volatile
  2010                           
  2011                           ;Multi_RX_testjig_v1.c: 482: TRISC = 0b00011010;
  2012  14AF  301A               	movlw	26
  2013  14B0  008E               	movwf	14	;volatile
  2014                           
  2015                           ;Multi_RX_testjig_v1.c: 483: TRISD = 0b10001011;
  2016  14B1  308B               	movlw	139
  2017  14B2  008F               	movwf	15	;volatile
  2018                           
  2019                           ;Multi_RX_testjig_v1.c: 484: TRISE = 0b11110110;
  2020  14B3  30F6               	movlw	246
  2021  14B4  0090               	movwf	16	;volatile
  2022                           
  2023                           ;Multi_RX_testjig_v1.c: 485: TRISF = 0b00101111;
  2024  14B5  302F               	movlw	47
  2025  14B6  0026               	movlb	6	; select bank6
  2026  14B7  008C               	movwf	12	;volatile
  2027                           
  2028                           ;Multi_RX_testjig_v1.c: 486: TRISG = 0b11101111;
  2029  14B8  30EF               	movlw	239
  2030  14B9  008D               	movwf	13	;volatile
  2031                           
  2032                           ;Multi_RX_testjig_v1.c: 488: PORTA = 0b00000000;
  2033  14BA  0020               	movlb	0	; select bank0
  2034  14BB  018C               	clrf	12	;volatile
  2035                           
  2036                           ;Multi_RX_testjig_v1.c: 489: PORTB = 0b00000000;
  2037  14BC  018D               	clrf	13	;volatile
  2038                           
  2039                           ;Multi_RX_testjig_v1.c: 490: PORTC = 0b00000000;
  2040  14BD  018E               	clrf	14	;volatile
  2041                           
  2042                           ;Multi_RX_testjig_v1.c: 491: PORTD = 0b01000000;
  2043  14BE  3040               	movlw	64
  2044  14BF  008F               	movwf	15	;volatile
  2045                           
  2046                           ;Multi_RX_testjig_v1.c: 492: PORTE = 0b00000000;
  2047  14C0  0190               	clrf	16	;volatile
  2048                           
  2049                           ;Multi_RX_testjig_v1.c: 493: PORTF = 0b00000000;
  2050  14C1  0025               	movlb	5	; select bank5
  2051  14C2  018C               	clrf	12	;volatile
  2052                           
  2053                           ;Multi_RX_testjig_v1.c: 494: PORTG = 0b00000000;
  2054  14C3  018D               	clrf	13	;volatile
  2055                           
  2056                           ;Multi_RX_testjig_v1.c: 496: WPUB = 0b00000000;
  2057  14C4  0024               	movlb	4	; select bank4
  2058  14C5  018D               	clrf	13	;volatile
  2059                           
  2060                           ;Multi_RX_testjig_v1.c: 497: WPUD = 0b00000000;
  2061  14C6  018F               	clrf	15	;volatile
  2062                           
  2063                           ;Multi_RX_testjig_v1.c: 498: WPUE = 0b00000000;
  2064  14C7  0190               	clrf	16	;volatile
  2065                           
  2066                           ;Multi_RX_testjig_v1.c: 500: ANSELA = 0b00000000;
  2067  14C8  0023               	movlb	3	; select bank3
  2068  14C9  018C               	clrf	12	;volatile
  2069                           
  2070                           ;Multi_RX_testjig_v1.c: 501: ANSELB = 0b00001100;
  2071  14CA  300C               	movlw	12
  2072  14CB  008D               	movwf	13	;volatile
  2073                           
  2074                           ;Multi_RX_testjig_v1.c: 502: ANSELD = 0b00001111;
  2075  14CC  300F               	movlw	15
  2076  14CD  008F               	movwf	15	;volatile
  2077                           
  2078                           ;Multi_RX_testjig_v1.c: 503: ANSELE = 0b00000100;
  2079  14CE  3004               	movlw	4
  2080  14CF  0090               	movwf	16	;volatile
  2081                           
  2082                           ;Multi_RX_testjig_v1.c: 504: ANSELF = 0b00000000;
  2083  14D0  0028               	movlb	8	; select bank8
  2084  14D1  018C               	clrf	12	;volatile
  2085                           
  2086                           ;Multi_RX_testjig_v1.c: 505: ANSELG = 0b00000000;
  2087  14D2  018D               	clrf	13	;volatile
  2088                           
  2089                           ;Multi_RX_testjig_v1.c: 508: init_ADC();
  2090  14D3  3194  2428  3194   	fcall	_init_ADC
  2091                           
  2092                           ;Multi_RX_testjig_v1.c: 509: init_current_sink();
  2093  14D6  3194  242F  3194   	fcall	_init_current_sink
  2094                           
  2095                           ;Multi_RX_testjig_v1.c: 510: pickit_state = pickit_idle;
  2096  14D9  3005               	movlw	5
  2097  14DA  0020               	movlb	0	; select bank0
  2098  14DB  00EC               	movwf	_pickit_state
  2099                           
  2100                           ;Multi_RX_testjig_v1.c: 512: RA5 = 0;
  2101  14DC  128C               	bcf	12,5	;volatile
  2102                           
  2103                           ;Multi_RX_testjig_v1.c: 513: buzz_one(200);
  2104  14DD  30C8               	movlw	200
  2105  14DE  00F0               	movwf	buzz_one@time
  2106  14DF  01F1               	clrf	buzz_one@time+1
  2107  14E0  318F  27D7  3194   	fcall	_buzz_one
  2108                           
  2109                           ;Multi_RX_testjig_v1.c: 514: RA5 = 1;
  2110  14E3  0020               	movlb	0	; select bank0
  2111  14E4  168C               	bsf	12,5	;volatile
  2112                           
  2113                           ;Multi_RX_testjig_v1.c: 515: init_i2c();
  2114  14E5  3194  2444  3194   	fcall	_init_i2c
  2115                           
  2116                           ;Multi_RX_testjig_v1.c: 522: init_i2c_lcd_5v(8, 0x38);
  2117  14E8  3038               	movlw	56
  2118  14E9  00F1               	movwf	init_i2c_lcd_5v@single1_double2
  2119  14EA  3008               	movlw	8
  2120  14EB  318F  2789  3194   	fcall	_init_i2c_lcd_5v
  2121                           
  2122                           ;Multi_RX_testjig_v1.c: 523: print_screen("Multi_RX", "Test-Jig|Startup");
  2123  14EE  30D5               	movlw	low (STR_1| (0+32768))
  2124  14EF  00F4               	movwf	print_screen@top
  2125  14F0  308A               	movlw	high (STR_1| (0+32768))
  2126  14F1  00F5               	movwf	print_screen@top+1
  2127  14F2  300F               	movlw	low (STR_2| (0+32768))
  2128  14F3  00F6               	movwf	print_screen@bottom
  2129  14F4  3088               	movlw	high (STR_2| (0+32768))
  2130  14F5  00F7               	movwf	print_screen@bottom+1
  2131  14F6  318E  26C1  3194   	fcall	_print_screen
  2132                           
  2133                           ;Multi_RX_testjig_v1.c: 524: RA4 = 1;
  2134  14F9  0020               	movlb	0	; select bank0
  2135  14FA  160C               	bsf	12,4	;volatile
  2136                           
  2137                           ;Multi_RX_testjig_v1.c: 525: GIE = 1;
  2138  14FB  178B               	bsf	11,7	;volatile
  2139                           
  2140                           ;Multi_RX_testjig_v1.c: 526: LATC7 = 1;
  2141  14FC  0022               	movlb	2	; select bank2
  2142  14FD  178E               	bsf	14,7	;volatile
  2143                           
  2144                           ;Multi_RX_testjig_v1.c: 527: _delay((unsigned long)((100)*(16000000/4000.0)));
  2145  14FE  3003               	movlw	3
  2146  14FF  0020               	movlb	0	; select bank0
  2147  1500  00CB               	movwf	??_main+2
  2148  1501  3008               	movlw	8
  2149  1502  00CA               	movwf	??_main+1
  2150  1503  3078               	movlw	120
  2151  1504  00C9               	movwf	??_main
  2152  1505                     u4797:	
  2153  1505  0BC9               	decfsz	??_main,f
  2154  1506  2D05               	goto	u4797
  2155  1507  0BCA               	decfsz	??_main+1,f
  2156  1508  2D05               	goto	u4797
  2157  1509  0BCB               	decfsz	??_main+2,f
  2158  150A  2D05               	goto	u4797
  2159                           
  2160                           ;Multi_RX_testjig_v1.c: 528: debug_fast_tx(0xAAAA);
  2161  150B  30AA               	movlw	170
  2162  150C  00F0               	movwf	debug_fast_tx@data
  2163  150D  00F1               	movwf	debug_fast_tx@data+1
  2164  150E  318E  2694  3194   	fcall	_debug_fast_tx
  2165                           
  2166                           ;Multi_RX_testjig_v1.c: 529: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2167  1511  3085               	movlw	133
  2168  1512  0020               	movlb	0	; select bank0
  2169  1513  00C9               	movwf	??_main
  2170  1514                     u4807:	
  2171  1514  0BC9               	decfsz	??_main,f
  2172  1515  2D14               	goto	u4807
  2173                           
  2174                           ;Multi_RX_testjig_v1.c: 530: debug_fast_tx(0x5555);
  2175  1516  3055               	movlw	85
  2176  1517  00F0               	movwf	debug_fast_tx@data
  2177  1518  00F1               	movwf	debug_fast_tx@data+1
  2178  1519  318E  2694  3194   	fcall	_debug_fast_tx
  2179                           
  2180                           ;Multi_RX_testjig_v1.c: 531: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2181  151C  3085               	movlw	133
  2182  151D  0020               	movlb	0	; select bank0
  2183  151E  00C9               	movwf	??_main
  2184  151F                     u4817:	
  2185  151F  0BC9               	decfsz	??_main,f
  2186  1520  2D1F               	goto	u4817
  2187                           
  2188                           ;Multi_RX_testjig_v1.c: 537: if(RF3 == 1)
  2189  1521  0025               	movlb	5	; select bank5
  2190  1522  1D8C               	btfss	12,3	;volatile
  2191  1523  2D2F               	goto	l300
  2192                           
  2193                           ;Multi_RX_testjig_v1.c: 538: print_error("Multi_RX", "-> Insert PCB");
  2194  1524  30D5               	movlw	low (STR_1| (0+32768))
  2195  1525  00F8               	movwf	print_error@top
  2196  1526  308A               	movlw	high (STR_1| (0+32768))
  2197  1527  00F9               	movwf	print_error@top+1
  2198  1528  30F8               	movlw	low (STR_4| (0+32768))
  2199  1529  00FA               	movwf	print_error@bottom
  2200  152A  3088               	movlw	high (STR_4| (0+32768))
  2201  152B  00FB               	movwf	print_error@bottom+1
  2202  152C  318E  26E3  3194   	fcall	_print_error
  2203  152F                     l300:	
  2204                           
  2205                           ;Multi_RX_testjig_v1.c: 541: print_screen("Powering board", "");
  2206  152F  3091               	movlw	low (STR_5| (0+32768))
  2207  1530  00F4               	movwf	print_screen@top
  2208  1531  3088               	movlw	high (STR_5| (0+32768))
  2209  1532  00F5               	movwf	print_screen@top+1
  2210  1533  3040               	movlw	low ((STR_157+15)| (0+32768))
  2211  1534  00F6               	movwf	print_screen@bottom
  2212  1535  3088               	movlw	high ((STR_157+15)| (0+32768))
  2213  1536  00F7               	movwf	print_screen@bottom+1
  2214  1537  318E  26C1  3194   	fcall	_print_screen
  2215                           
  2216                           ;Multi_RX_testjig_v1.c: 544: Vout_set(12);
  2217  153A  300C               	movlw	12
  2218  153B  00F4               	movwf	Vout_set@Volts
  2219  153C  01F5               	clrf	Vout_set@Volts+1
  2220  153D  318C  249C  3194   	fcall	_Vout_set
  2221                           
  2222                           ;Multi_RX_testjig_v1.c: 545: power_supply_set(0);
  2223  1540  3000               	movlw	0
  2224  1541  318F  27DF  3194   	fcall	_power_supply_set
  2225                           
  2226                           ;Multi_RX_testjig_v1.c: 546: _delay((unsigned long)((50)*(16000000/4000.0)));
  2227  1544  3002               	movlw	2
  2228  1545  0020               	movlb	0	; select bank0
  2229  1546  00CB               	movwf	??_main+2
  2230  1547  3004               	movlw	4
  2231  1548  00CA               	movwf	??_main+1
  2232  1549  30BA               	movlw	186
  2233  154A  00C9               	movwf	??_main
  2234  154B                     u4827:	
  2235  154B  0BC9               	decfsz	??_main,f
  2236  154C  2D4B               	goto	u4827
  2237  154D  0BCA               	decfsz	??_main+1,f
  2238  154E  2D4B               	goto	u4827
  2239  154F  0BCB               	decfsz	??_main+2,f
  2240  1550  2D4B               	goto	u4827
  2241  1551  0000               	nop
  2242                           
  2243                           ;Multi_RX_testjig_v1.c: 547: ADC_val = ADC_get_val(0b01011111);
  2244  1552  305F               	movlw	95
  2245  1553  3196  2625  3194   	fcall	_ADC_get_val
  2246                           
  2247                           ;Multi_RX_testjig_v1.c: 548: testjig_timer = (unsigned int)(7518.8/2);
  2248  1556  30AF               	movlw	175
  2249  1557  0020               	movlb	0	; select bank0
  2250  1558  00DE               	movwf	_testjig_timer	;volatile
  2251  1559  300E               	movlw	14
  2252  155A  00DF               	movwf	_testjig_timer+1	;volatile
  2253  155B  2D75               	goto	l3658
  2254  155C                     l3660:	
  2255  155C  305F               	movlw	95
  2256  155D  3196  2625  3194   	fcall	_ADC_get_val
  2257  1560  3000               	movlw	0
  2258  1561  0271               	subwf	?_ADC_get_val+1,w
  2259  1562  307B               	movlw	123
  2260  1563  1903               	skipnz
  2261  1564  0270               	subwf	?_ADC_get_val,w
  2262  1565  1C03               	skipc
  2263  1566  2D80               	goto	l3666
  2264  1567  3195  25E6  3194   	fcall	_get_30v_current
  2265  156A  3000               	movlw	0
  2266  156B  0246               	subwf	?_get_30v_current+1,w
  2267  156C  301E               	movlw	30
  2268  156D  1903               	skipnz
  2269  156E  0245               	subwf	?_get_30v_current,w
  2270  156F  1803               	skipnc
  2271  1570  2D80               	goto	l3666
  2272  1571  085E               	movf	_testjig_timer,w	;volatile
  2273  1572  045F               	iorwf	_testjig_timer+1,w	;volatile
  2274  1573  1903               	btfsc	3,2
  2275  1574  2D80               	goto	l3666
  2276  1575                     l3658:	
  2277                           ;Multi_RX_testjig_v1.c: 549: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08)) && (get_30v_current() < 30) && testjig_timer);
  2278                           
  2279  1575  305F               	movlw	95
  2280  1576  3196  2625  3194   	fcall	_ADC_get_val
  2281  1579  3000               	movlw	0
  2282  157A  0271               	subwf	?_ADC_get_val+1,w
  2283  157B  3068               	movlw	104
  2284  157C  1903               	skipnz
  2285  157D  0270               	subwf	?_ADC_get_val,w
  2286  157E  1C03               	btfss	3,0
  2287  157F  2D5C               	goto	l3660
  2288  1580                     l3666:	
  2289                           
  2290                           ;Multi_RX_testjig_v1.c: 550: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  2291  1580  305F               	movlw	95
  2292  1581  3196  2625  3194   	fcall	_ADC_get_val
  2293  1584  3000               	movlw	0
  2294  1585  0271               	subwf	?_ADC_get_val+1,w
  2295  1586  3068               	movlw	104
  2296  1587  1903               	skipnz
  2297  1588  0270               	subwf	?_ADC_get_val,w
  2298  1589  1803               	skipnc
  2299  158A  2D93               	goto	l3670
  2300                           
  2301                           ;Multi_RX_testjig_v1.c: 551: print_error("12v-5v supply", "Volt Error L");
  2302  158B  3030               	movlw	low (STR_7| (0+32768))
  2303  158C  00F8               	movwf	print_error@top
  2304  158D  3089               	movlw	high (STR_7| (0+32768))
  2305  158E  00F9               	movwf	print_error@top+1
  2306  158F  3080               	movlw	low (STR_8| (0+32768))
  2307  1590  00FA               	movwf	print_error@bottom
  2308  1591  3089               	movlw	high (STR_8| (0+32768))
  2309  1592  2DC3               	goto	L1
  2310  1593                     l3670:	
  2311                           
  2312                           ;Multi_RX_testjig_v1.c: 552: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  2313  1593  305F               	movlw	95
  2314  1594  3196  2625  3194   	fcall	_ADC_get_val
  2315  1597  3000               	movlw	0
  2316  1598  0271               	subwf	?_ADC_get_val+1,w
  2317  1599  307B               	movlw	123
  2318  159A  1903               	skipnz
  2319  159B  0270               	subwf	?_ADC_get_val,w
  2320  159C  1C03               	skipc
  2321  159D  2DA6               	goto	l3674
  2322                           
  2323                           ;Multi_RX_testjig_v1.c: 553: print_error("12v-5v supply", "Volt Error H");
  2324  159E  3030               	movlw	low (STR_7| (0+32768))
  2325  159F  00F8               	movwf	print_error@top
  2326  15A0  3089               	movlw	high (STR_7| (0+32768))
  2327  15A1  00F9               	movwf	print_error@top+1
  2328  15A2  3066               	movlw	low (STR_10| (0+32768))
  2329  15A3  00FA               	movwf	print_error@bottom
  2330  15A4  3089               	movlw	high (STR_10| (0+32768))
  2331  15A5  2DC3               	goto	L1
  2332  15A6                     l3674:	
  2333                           
  2334                           ;Multi_RX_testjig_v1.c: 554: else if((get_30v_current() >= 60))
  2335  15A6  3195  25E6  3194   	fcall	_get_30v_current
  2336  15A9  3000               	movlw	0
  2337  15AA  0246               	subwf	?_get_30v_current+1,w
  2338  15AB  303C               	movlw	60
  2339  15AC  1903               	skipnz
  2340  15AD  0245               	subwf	?_get_30v_current,w
  2341  15AE  1C03               	skipc
  2342  15AF  2DB8               	goto	l3678
  2343                           
  2344                           ;Multi_RX_testjig_v1.c: 555: print_error("12v supply", "Curr Error");
  2345  15B0  30D1               	movlw	low ((STR_19+4)| (0+32768))
  2346  15B1  00F8               	movwf	print_error@top
  2347  15B2  3088               	movlw	high ((STR_19+4)| (0+32768))
  2348  15B3  00F9               	movwf	print_error@top+1
  2349  15B4  302E               	movlw	low (STR_12| (0+32768))
  2350  15B5  00FA               	movwf	print_error@bottom
  2351  15B6  308A               	movlw	high (STR_12| (0+32768))
  2352  15B7  2DC3               	goto	L1
  2353  15B8                     l3678:	
  2354                           
  2355                           ;Multi_RX_testjig_v1.c: 556: else if(testjig_timer == 0)
  2356  15B8  085E               	movf	_testjig_timer,w	;volatile
  2357  15B9  045F               	iorwf	_testjig_timer+1,w	;volatile
  2358  15BA  1D03               	btfss	3,2
  2359  15BB  2DC7               	goto	l307
  2360                           
  2361                           ;Multi_RX_testjig_v1.c: 557: print_error("12v-5v supply", "T-out Error");
  2362  15BC  3030               	movlw	low (STR_7| (0+32768))
  2363  15BD  00F8               	movwf	print_error@top
  2364  15BE  3089               	movlw	high (STR_7| (0+32768))
  2365  15BF  00F9               	movwf	print_error@top+1
  2366  15C0  3016               	movlw	low (STR_14| (0+32768))
  2367  15C1  00FA               	movwf	print_error@bottom
  2368  15C2  308A               	movlw	high (STR_14| (0+32768))
  2369  15C3                     L1:	
  2370  15C3  00FB               	movwf	print_error@bottom+1
  2371  15C4  318E  26E3  3194   	fcall	_print_error
  2372  15C7                     l307:	
  2373                           
  2374                           ;Multi_RX_testjig_v1.c: 562: power_supply_set(1);
  2375  15C7  3001               	movlw	1
  2376  15C8  318F  27DF  3194   	fcall	_power_supply_set
  2377                           
  2378                           ;Multi_RX_testjig_v1.c: 563: Vout_set(16);
  2379  15CB  3010               	movlw	16
  2380  15CC  00F4               	movwf	Vout_set@Volts
  2381  15CD  01F5               	clrf	Vout_set@Volts+1
  2382  15CE  318C  249C  3194   	fcall	_Vout_set
  2383                           
  2384                           ;Multi_RX_testjig_v1.c: 564: _delay((unsigned long)((150)*(16000000/4000.0)));
  2385  15D1  3004               	movlw	4
  2386  15D2  0020               	movlb	0	; select bank0
  2387  15D3  00CB               	movwf	??_main+2
  2388  15D4  300C               	movlw	12
  2389  15D5  00CA               	movwf	??_main+1
  2390  15D6  3035               	movlw	53
  2391  15D7  00C9               	movwf	??_main
  2392  15D8                     u4837:	
  2393  15D8  0BC9               	decfsz	??_main,f
  2394  15D9  2DD8               	goto	u4837
  2395  15DA  0BCA               	decfsz	??_main+1,f
  2396  15DB  2DD8               	goto	u4837
  2397  15DC  0BCB               	decfsz	??_main+2,f
  2398  15DD  2DD8               	goto	u4837
  2399  15DE  3200               	nop2
  2400                           
  2401                           ;Multi_RX_testjig_v1.c: 565: testjig_timer = (unsigned int)(7518.8/2);
  2402  15DF  30AF               	movlw	175
  2403  15E0  0020               	movlb	0	; select bank0
  2404  15E1  00DE               	movwf	_testjig_timer	;volatile
  2405  15E2  300E               	movlw	14
  2406  15E3  00DF               	movwf	_testjig_timer+1	;volatile
  2407  15E4  3180  28D5         	goto	l3686
  2408                           
  2409                           	psect	swtext1
  2410  100C                     __pswtext1:	
  2411  100C                     S4264:	
  2412  100C  318F  2FE1         	ljmp	l685
  2413  100E  318F  2FE6         	ljmp	l687
  2414  1010  318F  2FEB         	ljmp	l688
  2415  1012  318F  2FF0         	ljmp	l689
  2416                           
  2417                           	psect	text12
  2418  0BB5                     __ptext12:	
  2419 ;; *************** function _ten_thou_conv *****************
  2420 ;; Defined at:
  2421 ;;		line 1457 in file "Multi_RX_testjig_v1.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  n               2    6[COMMON] int 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0, pclath, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 1F/0
  2432 ;;		On exit  : 1F/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2437 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2438 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2439 ;;Total ram usage:        5 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    2
  2442 ;; This function calls:
  2443 ;;		___bmul
  2444 ;;		___wmul
  2445 ;; This function is called by:
  2446 ;;		_lcd_print_int
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           
  2451                           ;psect for function _ten_thou_conv
  2452  0BB5                     _ten_thou_conv:	
  2453                           
  2454                           ;Multi_RX_testjig_v1.c: 1459: unit = n & 0x1F;
  2455                           
  2456                           ;incstack = 0
  2457                           ; Regs used in _ten_thou_conv: [wreg+status,2+status,0+pclath+cstack]
  2458  0BB5  0876               	movf	ten_thou_conv@n,w
  2459  0BB6  00E8               	movwf	_unit
  2460  0BB7  301F               	movlw	31
  2461  0BB8  05E8               	andwf	_unit,f
  2462                           
  2463                           ;Multi_RX_testjig_v1.c: 1460: ten = (n >> 5) & 0xF;
  2464  0BB9  0877               	movf	ten_thou_conv@n+1,w
  2465  0BBA  00F9               	movwf	??_ten_thou_conv+1
  2466  0BBB  0876               	movf	ten_thou_conv@n,w
  2467  0BBC  00F8               	movwf	??_ten_thou_conv
  2468  0BBD  3005               	movlw	5
  2469  0BBE  00FA               	movwf	??_ten_thou_conv+2
  2470  0BBF                     u2695:	
  2471  0BBF  0D79               	rlf	??_ten_thou_conv+1,w
  2472  0BC0  0CF9               	rrf	??_ten_thou_conv+1,f
  2473  0BC1  0CF8               	rrf	??_ten_thou_conv,f
  2474  0BC2  0BFA               	decfsz	??_ten_thou_conv+2,f
  2475  0BC3  2BBF               	goto	u2695
  2476  0BC4  0878               	movf	??_ten_thou_conv,w
  2477  0BC5  00E6               	movwf	_ten
  2478  0BC6  300F               	movlw	15
  2479  0BC7  05E6               	andwf	_ten,f
  2480                           
  2481                           ;Multi_RX_testjig_v1.c: 1461: hund = (n >> 9) & 0xF;
  2482  0BC8  0877               	movf	ten_thou_conv@n+1,w
  2483  0BC9  00F9               	movwf	??_ten_thou_conv+1
  2484  0BCA  0876               	movf	ten_thou_conv@n,w
  2485  0BCB  00F8               	movwf	??_ten_thou_conv
  2486  0BCC  3009               	movlw	9
  2487  0BCD  00FA               	movwf	??_ten_thou_conv+2
  2488  0BCE                     u2705:	
  2489  0BCE  0D79               	rlf	??_ten_thou_conv+1,w
  2490  0BCF  0CF9               	rrf	??_ten_thou_conv+1,f
  2491  0BD0  0CF8               	rrf	??_ten_thou_conv,f
  2492  0BD1  0BFA               	decfsz	??_ten_thou_conv+2,f
  2493  0BD2  2BCE               	goto	u2705
  2494  0BD3  0878               	movf	??_ten_thou_conv,w
  2495  0BD4  00E4               	movwf	_hund
  2496  0BD5  300F               	movlw	15
  2497  0BD6  05E4               	andwf	_hund,f
  2498                           
  2499                           ;Multi_RX_testjig_v1.c: 1462: thou = (n >> 13) & 0x7;
  2500  0BD7  0877               	movf	ten_thou_conv@n+1,w
  2501  0BD8  00F9               	movwf	??_ten_thou_conv+1
  2502  0BD9  0876               	movf	ten_thou_conv@n,w
  2503  0BDA  00F8               	movwf	??_ten_thou_conv
  2504  0BDB  300D               	movlw	13
  2505  0BDC  00FA               	movwf	??_ten_thou_conv+2
  2506  0BDD                     u2715:	
  2507  0BDD  0D79               	rlf	??_ten_thou_conv+1,w
  2508  0BDE  0CF9               	rrf	??_ten_thou_conv+1,f
  2509  0BDF  0CF8               	rrf	??_ten_thou_conv,f
  2510  0BE0  0BFA               	decfsz	??_ten_thou_conv+2,f
  2511  0BE1  2BDD               	goto	u2715
  2512  0BE2  0878               	movf	??_ten_thou_conv,w
  2513  0BE3  00E9               	movwf	_thou
  2514  0BE4  3007               	movlw	7
  2515  0BE5  05E9               	andwf	_thou,f
  2516                           
  2517                           ;Multi_RX_testjig_v1.c: 1464: unit = 2 * (thou + hund + ten) + unit;
  2518  0BE6  0869               	movf	_thou,w
  2519  0BE7  0764               	addwf	_hund,w
  2520  0BE8  0766               	addwf	_ten,w
  2521  0BE9  0709               	addwf	9,w
  2522  0BEA  07E8               	addwf	_unit,f
  2523                           
  2524                           ;Multi_RX_testjig_v1.c: 1465: ten_thou = (unit * 0x67) >> 10;
  2525  0BEB  0868               	movf	_unit,w
  2526  0BEC  00F0               	movwf	___wmul@multiplier
  2527  0BED  3067               	movlw	103
  2528  0BEE  01F1               	clrf	___wmul@multiplier+1
  2529  0BEF  00F2               	movwf	___wmul@multiplicand
  2530  0BF0  01F3               	clrf	___wmul@multiplicand+1
  2531  0BF1  2487  318B         	fcall	___wmul
  2532  0BF3  0870               	movf	?___wmul,w
  2533  0BF4  00F8               	movwf	??_ten_thou_conv
  2534  0BF5  0871               	movf	?___wmul+1,w
  2535  0BF6  00F9               	movwf	??_ten_thou_conv+1
  2536  0BF7  300A               	movlw	10
  2537  0BF8  00FA               	movwf	??_ten_thou_conv+2
  2538  0BF9                     u2725:	
  2539  0BF9  0D79               	rlf	??_ten_thou_conv+1,w
  2540  0BFA  0CF9               	rrf	??_ten_thou_conv+1,f
  2541  0BFB  0CF8               	rrf	??_ten_thou_conv,f
  2542  0BFC  0BFA               	decfsz	??_ten_thou_conv+2,f
  2543  0BFD  2BF9               	goto	u2725
  2544  0BFE  0878               	movf	??_ten_thou_conv,w
  2545  0BFF  00E7               	movwf	_ten_thou
  2546                           
  2547                           ;Multi_RX_testjig_v1.c: 1466: unit = unit - 10 * ten_thou;
  2548  0C00  30F6               	movlw	246
  2549  0C01  00F0               	movwf	___bmul@multiplicand
  2550  0C02  0867               	movf	_ten_thou,w
  2551  0C03  2464  318B         	fcall	___bmul
  2552  0C05  07E8               	addwf	_unit,f
  2553                           
  2554                           ;Multi_RX_testjig_v1.c: 1468: ten = 9 * thou + hund + 3 * ten + ten_thou;
  2555  0C06  3009               	movlw	9
  2556  0C07  00F0               	movwf	___bmul@multiplicand
  2557  0C08  0869               	movf	_thou,w
  2558  0C09  2464  318B         	fcall	___bmul
  2559  0C0B  00F8               	movwf	??_ten_thou_conv
  2560  0C0C  0866               	movf	_ten,w
  2561  0C0D  0766               	addwf	_ten,w
  2562  0C0E  0766               	addwf	_ten,w
  2563  0C0F  0778               	addwf	??_ten_thou_conv,w
  2564  0C10  0764               	addwf	_hund,w
  2565  0C11  0767               	addwf	_ten_thou,w
  2566  0C12  00E6               	movwf	_ten
  2567                           
  2568                           ;Multi_RX_testjig_v1.c: 1469: ten_thou = (ten * 0x67) >> 10;
  2569  0C13  00F0               	movwf	___wmul@multiplier
  2570  0C14  3067               	movlw	103
  2571  0C15  01F1               	clrf	___wmul@multiplier+1
  2572  0C16  00F2               	movwf	___wmul@multiplicand
  2573  0C17  01F3               	clrf	___wmul@multiplicand+1
  2574  0C18  2487  318B         	fcall	___wmul
  2575  0C1A  0870               	movf	?___wmul,w
  2576  0C1B  00F8               	movwf	??_ten_thou_conv
  2577  0C1C  0871               	movf	?___wmul+1,w
  2578  0C1D  00F9               	movwf	??_ten_thou_conv+1
  2579  0C1E  300A               	movlw	10
  2580  0C1F  00FA               	movwf	??_ten_thou_conv+2
  2581  0C20                     u2735:	
  2582  0C20  0D79               	rlf	??_ten_thou_conv+1,w
  2583  0C21  0CF9               	rrf	??_ten_thou_conv+1,f
  2584  0C22  0CF8               	rrf	??_ten_thou_conv,f
  2585  0C23  0BFA               	decfsz	??_ten_thou_conv+2,f
  2586  0C24  2C20               	goto	u2735
  2587  0C25  0878               	movf	??_ten_thou_conv,w
  2588  0C26  00E7               	movwf	_ten_thou
  2589                           
  2590                           ;Multi_RX_testjig_v1.c: 1470: ten = ten - 10 * ten_thou;
  2591  0C27  30F6               	movlw	246
  2592  0C28  00F0               	movwf	___bmul@multiplicand
  2593  0C29  0867               	movf	_ten_thou,w
  2594  0C2A  2464  318B         	fcall	___bmul
  2595  0C2C  07E6               	addwf	_ten,f
  2596                           
  2597                           ;Multi_RX_testjig_v1.c: 1472: hund = thou + 5 * hund + ten_thou;
  2598  0C2D  3005               	movlw	5
  2599  0C2E  00F0               	movwf	___bmul@multiplicand
  2600  0C2F  0864               	movf	_hund,w
  2601  0C30  2464  318B         	fcall	___bmul
  2602  0C32  0769               	addwf	_thou,w
  2603  0C33  0767               	addwf	_ten_thou,w
  2604  0C34  00E4               	movwf	_hund
  2605                           
  2606                           ;Multi_RX_testjig_v1.c: 1473: ten_thou = (hund * 0x67) >> 10;
  2607  0C35  00F0               	movwf	___wmul@multiplier
  2608  0C36  3067               	movlw	103
  2609  0C37  01F1               	clrf	___wmul@multiplier+1
  2610  0C38  00F2               	movwf	___wmul@multiplicand
  2611  0C39  01F3               	clrf	___wmul@multiplicand+1
  2612  0C3A  2487  318B         	fcall	___wmul
  2613  0C3C  0870               	movf	?___wmul,w
  2614  0C3D  00F8               	movwf	??_ten_thou_conv
  2615  0C3E  0871               	movf	?___wmul+1,w
  2616  0C3F  00F9               	movwf	??_ten_thou_conv+1
  2617  0C40  300A               	movlw	10
  2618  0C41  00FA               	movwf	??_ten_thou_conv+2
  2619  0C42                     u2745:	
  2620  0C42  0D79               	rlf	??_ten_thou_conv+1,w
  2621  0C43  0CF9               	rrf	??_ten_thou_conv+1,f
  2622  0C44  0CF8               	rrf	??_ten_thou_conv,f
  2623  0C45  0BFA               	decfsz	??_ten_thou_conv+2,f
  2624  0C46  2C42               	goto	u2745
  2625  0C47  0878               	movf	??_ten_thou_conv,w
  2626  0C48  00E7               	movwf	_ten_thou
  2627                           
  2628                           ;Multi_RX_testjig_v1.c: 1474: hund = hund - 10 * ten_thou;
  2629  0C49  30F6               	movlw	246
  2630  0C4A  00F0               	movwf	___bmul@multiplicand
  2631  0C4B  0867               	movf	_ten_thou,w
  2632  0C4C  2464  318B         	fcall	___bmul
  2633  0C4E  07E4               	addwf	_hund,f
  2634                           
  2635                           ;Multi_RX_testjig_v1.c: 1476: thou = 8 * thou + ten_thou;
  2636  0C4F  0869               	movf	_thou,w
  2637  0C50  0709               	addwf	9,w
  2638  0C51  0709               	addwf	9,w
  2639  0C52  0709               	addwf	9,w
  2640  0C53  0767               	addwf	_ten_thou,w
  2641  0C54  00E9               	movwf	_thou
  2642                           
  2643                           ;Multi_RX_testjig_v1.c: 1477: ten_thou = (thou * 0x1A) >> 8;
  2644  0C55  00F0               	movwf	___wmul@multiplier
  2645  0C56  301A               	movlw	26
  2646  0C57  01F1               	clrf	___wmul@multiplier+1
  2647  0C58  00F2               	movwf	___wmul@multiplicand
  2648  0C59  01F3               	clrf	___wmul@multiplicand+1
  2649  0C5A  2487  318B         	fcall	___wmul
  2650  0C5C  0871               	movf	?___wmul+1,w
  2651  0C5D  00E7               	movwf	_ten_thou
  2652                           
  2653                           ;Multi_RX_testjig_v1.c: 1478: thou = thou - 10 * ten_thou;
  2654  0C5E  30F6               	movlw	246
  2655  0C5F  00F0               	movwf	___bmul@multiplicand
  2656  0C60  0867               	movf	_ten_thou,w
  2657  0C61  2464               	fcall	___bmul
  2658  0C62  07E9               	addwf	_thou,f
  2659  0C63  0008               	return
  2660  0C64                     __end_of_ten_thou_conv:	
  2661  0C64                     __ptext14:	
  2662 ;; *************** function ___bmul *****************
  2663 ;; Defined at:
  2664 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  multiplier      1    wreg     unsigned char 
  2667 ;;  multiplicand    1    0[COMMON] unsigned char 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  multiplier      1    2[COMMON] unsigned char 
  2670 ;;  product         1    1[COMMON] unsigned char 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      unsigned char 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0
  2675 ;; Tracked objects:
  2676 ;;		On entry : 1F/0
  2677 ;;		On exit  : 1F/0
  2678 ;;		Unchanged: 1F/0
  2679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2680 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2683 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2684 ;;Total ram usage:        3 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    1
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_ten_thou_conv
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           
  2695                           ;psect for function ___bmul
  2696  0C64                     ___bmul:	
  2697                           
  2698                           ;incstack = 0
  2699                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2700                           ;___bmul@multiplier stored from wreg
  2701  0C64  00F2               	movwf	___bmul@multiplier
  2702  0C65  01F1               	clrf	___bmul@product
  2703  0C66  0870               	movf	___bmul@multiplicand,w
  2704  0C67  1872               	btfsc	___bmul@multiplier,0
  2705  0C68  07F1               	addwf	___bmul@product,f
  2706  0C69  35F0               	lslf	___bmul@multiplicand,f
  2707  0C6A  0870               	movf	___bmul@multiplicand,w
  2708  0C6B  18F2               	btfsc	___bmul@multiplier,1
  2709  0C6C  07F1               	addwf	___bmul@product,f
  2710  0C6D  35F0               	lslf	___bmul@multiplicand,f
  2711  0C6E  0870               	movf	___bmul@multiplicand,w
  2712  0C6F  1972               	btfsc	___bmul@multiplier,2
  2713  0C70  07F1               	addwf	___bmul@product,f
  2714  0C71  35F0               	lslf	___bmul@multiplicand,f
  2715  0C72  0870               	movf	___bmul@multiplicand,w
  2716  0C73  19F2               	btfsc	___bmul@multiplier,3
  2717  0C74  07F1               	addwf	___bmul@product,f
  2718  0C75  35F0               	lslf	___bmul@multiplicand,f
  2719  0C76  0870               	movf	___bmul@multiplicand,w
  2720  0C77  1A72               	btfsc	___bmul@multiplier,4
  2721  0C78  07F1               	addwf	___bmul@product,f
  2722  0C79  35F0               	lslf	___bmul@multiplicand,f
  2723  0C7A  0870               	movf	___bmul@multiplicand,w
  2724  0C7B  1AF2               	btfsc	___bmul@multiplier,5
  2725  0C7C  07F1               	addwf	___bmul@product,f
  2726  0C7D  35F0               	lslf	___bmul@multiplicand,f
  2727  0C7E  0870               	movf	___bmul@multiplicand,w
  2728  0C7F  1B72               	btfsc	___bmul@multiplier,6
  2729  0C80  07F1               	addwf	___bmul@product,f
  2730  0C81  35F0               	lslf	___bmul@multiplicand,f
  2731  0C82  0870               	movf	___bmul@multiplicand,w
  2732  0C83  1BF2               	btfsc	___bmul@multiplier,7
  2733  0C84  07F1               	addwf	___bmul@product,f
  2734  0C85  0871               	movf	___bmul@product,w
  2735  0C86  0008               	return
  2736  0C87                     __end_of___bmul:	
  2737  0C87                     __ptext13:	
  2738 ;; *************** function ___wmul *****************
  2739 ;; Defined at:
  2740 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  multiplier      2    0[COMMON] unsigned int 
  2743 ;;  multiplicand    2    2[COMMON] unsigned int 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  product         2    4[COMMON] unsigned int 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  2    0[COMMON] unsigned int 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2, status,0
  2750 ;; Tracked objects:
  2751 ;;		On entry : 1F/0
  2752 ;;		On exit  : 1F/0
  2753 ;;		Unchanged: 1F/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2758 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2759 ;;Total ram usage:        6 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    1
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_ten_thou_conv
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           
  2770                           ;psect for function ___wmul
  2771  0C87                     ___wmul:	
  2772                           
  2773                           ;incstack = 0
  2774                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2775  0C87  01F4               	clrf	___wmul@product
  2776  0C88  01F5               	clrf	___wmul@product+1
  2777  0C89                     l2762:	
  2778  0C89  1C70               	btfss	___wmul@multiplier,0
  2779  0C8A  2C8F               	goto	l2766
  2780  0C8B  0872               	movf	___wmul@multiplicand,w
  2781  0C8C  07F4               	addwf	___wmul@product,f
  2782  0C8D  0873               	movf	___wmul@multiplicand+1,w
  2783  0C8E  3DF5               	addwfc	___wmul@product+1,f
  2784  0C8F                     l2766:	
  2785  0C8F  35F2               	lslf	___wmul@multiplicand,f
  2786  0C90  0DF3               	rlf	___wmul@multiplicand+1,f
  2787  0C91  36F1               	lsrf	___wmul@multiplier+1,f
  2788  0C92  0CF0               	rrf	___wmul@multiplier,f
  2789  0C93  0870               	movf	___wmul@multiplier,w
  2790  0C94  0471               	iorwf	___wmul@multiplier+1,w
  2791  0C95  1D03               	btfss	3,2
  2792  0C96  2C89               	goto	l2762
  2793  0C97  0875               	movf	___wmul@product+1,w
  2794  0C98  00F1               	movwf	?___wmul+1
  2795  0C99  0874               	movf	___wmul@product,w
  2796  0C9A  00F0               	movwf	?___wmul
  2797  0C9B  0008               	return
  2798  0C9C                     __end_of___wmul:	
  2799                           
  2800                           	psect	text18
  2801  1444                     __ptext18:	
  2802 ;; *************** function _init_i2c *****************
  2803 ;; Defined at:
  2804 ;;		line 1904 in file "Multi_RX_testjig_v1.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg
  2813 ;; Tracked objects:
  2814 ;;		On entry : 1F/0
  2815 ;;		On exit  : 1F/4
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2820 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2821 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2822 ;;Total ram usage:        3 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    1
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_main
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           
  2833                           ;psect for function _init_i2c
  2834  1444                     _init_i2c:	
  2835                           
  2836                           ;Multi_RX_testjig_v1.c: 1906: RA5 = 1;
  2837                           
  2838                           ;incstack = 0
  2839                           ; Regs used in _init_i2c: [wreg]
  2840  1444  168C               	bsf	12,5	;volatile
  2841                           
  2842                           ;Multi_RX_testjig_v1.c: 1907: _delay((unsigned long)((200)*(16000000/4000.0)));
  2843  1445  3005               	movlw	5
  2844  1446  00F2               	movwf	??_init_i2c+2
  2845  1447  300F               	movlw	15
  2846  1448  00F1               	movwf	??_init_i2c+1
  2847  1449  30F4               	movlw	244
  2848  144A  00F0               	movwf	??_init_i2c
  2849  144B                     u5247:	
  2850  144B  0BF0               	decfsz	??_init_i2c,f
  2851  144C  2C4B               	goto	u5247
  2852  144D  0BF1               	decfsz	??_init_i2c+1,f
  2853  144E  2C4B               	goto	u5247
  2854  144F  0BF2               	decfsz	??_init_i2c+2,f
  2855  1450  2C4B               	goto	u5247
  2856                           
  2857                           ;Multi_RX_testjig_v1.c: 1908: TRISC3 = 1;
  2858  1451  0021               	movlb	1	; select bank1
  2859  1452  158E               	bsf	14,3	;volatile
  2860                           
  2861                           ;Multi_RX_testjig_v1.c: 1909: TRISC4 = 1;
  2862  1453  160E               	bsf	14,4	;volatile
  2863                           
  2864                           ;Multi_RX_testjig_v1.c: 1910: SSP1STAT |= 0x80;
  2865  1454  0024               	movlb	4	; select bank4
  2866  1455  1794               	bsf	20,7	;volatile
  2867                           
  2868                           ;Multi_RX_testjig_v1.c: 1911: SSP1CON1 = 0x28;
  2869  1456  3028               	movlw	40
  2870  1457  0095               	movwf	21	;volatile
  2871                           
  2872                           ;Multi_RX_testjig_v1.c: 1912: SSP1ADD = 0x14;
  2873  1458  3014               	movlw	20
  2874  1459  0092               	movwf	18	;volatile
  2875  145A  0008               	return
  2876  145B                     __end_of_init_i2c:	
  2877                           
  2878                           	psect	text19
  2879  142F                     __ptext19:	
  2880 ;; *************** function _init_current_sink *****************
  2881 ;; Defined at:
  2882 ;;		line 1933 in file "Multi_RX_testjig_v1.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;		None
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;		None
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2
  2891 ;; Tracked objects:
  2892 ;;		On entry : B1F/1
  2893 ;;		On exit  : B1F/C
  2894 ;;		Unchanged: B00/0
  2895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2900 ;;Total ram usage:        0 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    1
  2903 ;; This function calls:
  2904 ;;		Nothing
  2905 ;; This function is called by:
  2906 ;;		_main
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           
  2911                           ;psect for function _init_current_sink
  2912  142F                     _init_current_sink:	
  2913                           
  2914                           ;Multi_RX_testjig_v1.c: 1935: T2CON = 0b00000110;
  2915                           
  2916                           ;incstack = 0
  2917                           ; Regs used in _init_current_sink: [wreg+status,2]
  2918  142F  3006               	movlw	6
  2919  1430  0020               	movlb	0	; select bank0
  2920  1431  009C               	movwf	28	;volatile
  2921                           
  2922                           ;Multi_RX_testjig_v1.c: 1936: PR2 = 0xFA;
  2923  1432  30FA               	movlw	250
  2924  1433  009B               	movwf	27	;volatile
  2925                           
  2926                           ;Multi_RX_testjig_v1.c: 1937: PIE1bits.TMR2IE = 1;
  2927  1434  0021               	movlb	1	; select bank1
  2928  1435  1491               	bsf	17,1	;volatile
  2929                           
  2930                           ;Multi_RX_testjig_v1.c: 1939: T8CON = 0b00000100;
  2931  1436  3004               	movlw	4
  2932  1437  002B               	movlb	11	; select bank11
  2933  1438  0097               	movwf	23	;volatile
  2934                           
  2935                           ;Multi_RX_testjig_v1.c: 1940: PR8 = 0xFF;
  2936  1439  30FF               	movlw	255
  2937  143A  0096               	movwf	22	;volatile
  2938                           
  2939                           ;Multi_RX_testjig_v1.c: 1941: CCP9CON = 0b00001100;
  2940  143B  300C               	movlw	12
  2941  143C  002C               	movlb	12	; select bank12
  2942  143D  009C               	movwf	28	;volatile
  2943                           
  2944                           ;Multi_RX_testjig_v1.c: 1942: CCPTMRS2 = 0b00000001;
  2945  143E  3001               	movlw	1
  2946  143F  0025               	movlb	5	; select bank5
  2947  1440  009F               	movwf	31	;volatile
  2948                           
  2949                           ;Multi_RX_testjig_v1.c: 1943: CCPR9L = 0x00;
  2950  1441  002C               	movlb	12	; select bank12
  2951  1442  019A               	clrf	26	;volatile
  2952  1443  0008               	return
  2953  1444                     __end_of_init_current_sink:	
  2954                           
  2955                           	psect	text20
  2956  1428                     __ptext20:	
  2957 ;; *************** function _init_ADC *****************
  2958 ;; Defined at:
  2959 ;;		line 1915 in file "Multi_RX_testjig_v1.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;		None
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg
  2968 ;; Tracked objects:
  2969 ;;		On entry : B1F/8
  2970 ;;		On exit  : B1F/1
  2971 ;;		Unchanged: B00/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2977 ;;Total ram usage:        0 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    1
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_main
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           
  2988                           ;psect for function _init_ADC
  2989  1428                     _init_ADC:	
  2990                           
  2991                           ;Multi_RX_testjig_v1.c: 1917: FVRCON = 0b10000011;
  2992                           
  2993                           ;incstack = 0
  2994                           ; Regs used in _init_ADC: [wreg]
  2995  1428  3083               	movlw	131
  2996  1429  0022               	movlb	2	; select bank2
  2997  142A  0097               	movwf	23	;volatile
  2998                           
  2999                           ;Multi_RX_testjig_v1.c: 1919: ADCON1 = 0b10100011;
  3000  142B  30A3               	movlw	163
  3001  142C  0021               	movlb	1	; select bank1
  3002  142D  009E               	movwf	30	;volatile
  3003  142E  0008               	return
  3004  142F                     __end_of_init_ADC:	
  3005                           
  3006                           	psect	text21
  3007  15E6                     __ptext21:	
  3008 ;; *************** function _get_30v_current *****************
  3009 ;; Defined at:
  3010 ;;		line 1973 in file "Multi_RX_testjig_v1.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  temp            2   39[BANK0 ] unsigned int 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  2   37[BANK0 ] unsigned int 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0, pclath, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 1B/1
  3021 ;;		On exit  : 1F/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3024 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3025 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3027 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3028 ;;Total ram usage:        4 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    3
  3031 ;; This function calls:
  3032 ;;		_ADC_get_val
  3033 ;;		___ftadd
  3034 ;;		___ftmul
  3035 ;;		___fttol
  3036 ;;		___lwtoft
  3037 ;; This function is called by:
  3038 ;;		_main
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           
  3043                           ;psect for function _get_30v_current
  3044  15E6                     _get_30v_current:	
  3045                           
  3046                           ;Multi_RX_testjig_v1.c: 1975: unsigned int temp;
  3047                           ;Multi_RX_testjig_v1.c: 1976: temp = ADC_get_val(0b01010011);
  3048                           
  3049                           ;incstack = 0
  3050                           ; Regs used in _get_30v_current: [wreg+status,2+status,0+pclath+cstack]
  3051  15E6  3053               	movlw	83
  3052  15E7  2625  3195         	fcall	_ADC_get_val
  3053  15E9  0871               	movf	?_ADC_get_val+1,w
  3054  15EA  0020               	movlb	0	; select bank0
  3055  15EB  00C8               	movwf	get_30v_current@temp+1
  3056  15EC  0870               	movf	?_ADC_get_val,w
  3057  15ED  00C7               	movwf	get_30v_current@temp
  3058                           
  3059                           ;Multi_RX_testjig_v1.c: 1977: if(temp > 4)
  3060  15EE  3000               	movlw	0
  3061  15EF  0248               	subwf	get_30v_current@temp+1,w
  3062  15F0  3005               	movlw	5
  3063  15F1  1903               	skipnz
  3064  15F2  0247               	subwf	get_30v_current@temp,w
  3065  15F3  1C03               	skipc
  3066  15F4  2E22               	goto	l3280
  3067                           
  3068                           ;Multi_RX_testjig_v1.c: 1978: return ( temp * 3.4) - 16;
  3069  15F5  0848               	movf	get_30v_current@temp+1,w
  3070  15F6  00F9               	movwf	___lwtoft@c+1
  3071  15F7  0847               	movf	get_30v_current@temp,w
  3072  15F8  00F8               	movwf	___lwtoft@c
  3073  15F9  2793  3195         	fcall	___lwtoft
  3074  15FB  0878               	movf	?___lwtoft,w
  3075  15FC  00A3               	movwf	___ftmul@f2
  3076  15FD  0879               	movf	?___lwtoft+1,w
  3077  15FE  00A4               	movwf	___ftmul@f2+1
  3078  15FF  087A               	movf	?___lwtoft+2,w
  3079  1600  00A5               	movwf	___ftmul@f2+2
  3080  1601  309A               	movlw	154
  3081  1602  00A0               	movwf	___ftmul@f1
  3082  1603  3059               	movlw	89
  3083  1604  00A1               	movwf	___ftmul@f1+1
  3084  1605  3040               	movlw	64
  3085  1606  00A2               	movwf	___ftmul@f1+2
  3086  1607  26EB  3195         	fcall	___ftmul
  3087  1609  0820               	movf	?___ftmul,w
  3088  160A  00AF               	movwf	___ftadd@f2
  3089  160B  0821               	movf	?___ftmul+1,w
  3090  160C  00B0               	movwf	___ftadd@f2+1
  3091  160D  0822               	movf	?___ftmul+2,w
  3092  160E  00B1               	movwf	___ftadd@f2+2
  3093  160F  3080               	movlw	128
  3094  1610  01AC               	clrf	___ftadd@f1
  3095  1611  00AD               	movwf	___ftadd@f1+1
  3096  1612  30C1               	movlw	193
  3097  1613  00AE               	movwf	___ftadd@f1+2
  3098  1614  2637  3195         	fcall	___ftadd
  3099  1616  082C               	movf	?___ftadd,w
  3100  1617  00B8               	movwf	___fttol@f1
  3101  1618  082D               	movf	?___ftadd+1,w
  3102  1619  00B9               	movwf	___fttol@f1+1
  3103  161A  082E               	movf	?___ftadd+2,w
  3104  161B  00BA               	movwf	___fttol@f1+2
  3105  161C  27A3               	fcall	___fttol
  3106  161D  0839               	movf	?___fttol+1,w
  3107  161E  00C6               	movwf	?_get_30v_current+1
  3108  161F  0838               	movf	?___fttol,w
  3109  1620  00C5               	movwf	?_get_30v_current
  3110  1621  0008               	return
  3111  1622                     l3280:	
  3112                           
  3113                           ;Multi_RX_testjig_v1.c: 1979: else
  3114                           ;Multi_RX_testjig_v1.c: 1980: return 0;
  3115  1622  01C5               	clrf	?_get_30v_current
  3116  1623  01C6               	clrf	?_get_30v_current+1
  3117  1624  0008               	return
  3118  1625                     __end_of_get_30v_current:	
  3119  1625                     __ptext27:	
  3120 ;; *************** function _ADC_get_val *****************
  3121 ;; Defined at:
  3122 ;;		line 1922 in file "Multi_RX_testjig_v1.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  channel         1    wreg     unsigned char 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  channel         1    3[COMMON] unsigned char 
  3127 ;;  return_val      2    4[COMMON] unsigned int 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  2    0[COMMON] unsigned int 
  3130 ;; Registers used:
  3131 ;;		wreg
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/5
  3134 ;;		On exit  : 1F/1
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3137 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3138 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3140 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3141 ;;Total ram usage:        6 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:    1
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_main
  3148 ;;		_get_30v_current
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           
  3153                           ;psect for function _ADC_get_val
  3154  1625                     _ADC_get_val:	
  3155                           
  3156                           ;incstack = 0
  3157                           ; Regs used in _ADC_get_val: [wreg]
  3158                           ;ADC_get_val@channel stored from wreg
  3159  1625  00F3               	movwf	ADC_get_val@channel
  3160                           
  3161                           ;Multi_RX_testjig_v1.c: 1924: unsigned int return_val;
  3162                           ;Multi_RX_testjig_v1.c: 1925: GIE = 0;
  3163  1626  138B               	bcf	11,7	;volatile
  3164                           
  3165                           ;Multi_RX_testjig_v1.c: 1926: ADCON0 = channel;
  3166  1627  0873               	movf	ADC_get_val@channel,w
  3167  1628  0021               	movlb	1	; select bank1
  3168  1629  009D               	movwf	29	;volatile
  3169  162A                     l675:	
  3170                           ;Multi_RX_testjig_v1.c: 1927: while(ADCON0bits.GO_nDONE == 1);
  3171                           
  3172  162A  189D               	btfsc	29,1	;volatile
  3173  162B  2E2A               	goto	l675
  3174                           
  3175                           ;Multi_RX_testjig_v1.c: 1928: return_val = ADRESH << 8 | ADRESL;
  3176  162C  081C               	movf	28,w	;volatile
  3177  162D  00F5               	movwf	ADC_get_val@return_val+1
  3178  162E  01F4               	clrf	ADC_get_val@return_val
  3179  162F  081B               	movf	27,w	;volatile
  3180  1630  04F4               	iorwf	ADC_get_val@return_val,f
  3181                           
  3182                           ;Multi_RX_testjig_v1.c: 1929: GIE = 1;
  3183  1631  178B               	bsf	11,7	;volatile
  3184                           
  3185                           ;Multi_RX_testjig_v1.c: 1930: return return_val;
  3186  1632  0875               	movf	ADC_get_val@return_val+1,w
  3187  1633  00F1               	movwf	?_ADC_get_val+1
  3188  1634  0874               	movf	ADC_get_val@return_val,w
  3189  1635  00F0               	movwf	?_ADC_get_val
  3190  1636  0008               	return
  3191  1637                     __end_of_ADC_get_val:	
  3192  1637                     __ptext25:	
  3193 ;; *************** function ___ftadd *****************
  3194 ;; Defined at:
  3195 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  f1              3   12[BANK0 ] float 
  3198 ;;  f2              3   15[BANK0 ] float 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  exp1            1   23[BANK0 ] unsigned char 
  3201 ;;  exp2            1   22[BANK0 ] unsigned char 
  3202 ;;  sign            1   21[BANK0 ] unsigned char 
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  3   12[BANK0 ] float 
  3205 ;; Registers used:
  3206 ;;		wreg, status,2, status,0, pclath, cstack
  3207 ;; Tracked objects:
  3208 ;;		On entry : 1F/0
  3209 ;;		On exit  : 1F/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3212 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3213 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3214 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3215 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3216 ;;Total ram usage:       12 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:    2
  3219 ;; This function calls:
  3220 ;;		___ftpack
  3221 ;; This function is called by:
  3222 ;;		_get_30v_current
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           
  3227                           ;psect for function ___ftadd
  3228  1637                     ___ftadd:	
  3229                           
  3230                           ;incstack = 0
  3231                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3232  1637  082C               	movf	___ftadd@f1,w
  3233  1638  00B2               	movwf	??___ftadd
  3234  1639  082D               	movf	___ftadd@f1+1,w
  3235  163A  00B3               	movwf	??___ftadd+1
  3236  163B  082E               	movf	___ftadd@f1+2,w
  3237  163C  00B4               	movwf	??___ftadd+2
  3238  163D  1003               	clrc
  3239  163E  0D33               	rlf	??___ftadd+1,w
  3240  163F  0D34               	rlf	??___ftadd+2,w
  3241  1640  00B7               	movwf	___ftadd@exp1
  3242  1641  082F               	movf	___ftadd@f2,w
  3243  1642  00B2               	movwf	??___ftadd
  3244  1643  0830               	movf	___ftadd@f2+1,w
  3245  1644  00B3               	movwf	??___ftadd+1
  3246  1645  0831               	movf	___ftadd@f2+2,w
  3247  1646  00B4               	movwf	??___ftadd+2
  3248  1647  1003               	clrc
  3249  1648  0D33               	rlf	??___ftadd+1,w
  3250  1649  0D34               	rlf	??___ftadd+2,w
  3251  164A  00B6               	movwf	___ftadd@exp2
  3252  164B  0837               	movf	___ftadd@exp1,w
  3253  164C  1903               	btfsc	3,2
  3254  164D  2E5A               	goto	l2986
  3255  164E  0836               	movf	___ftadd@exp2,w
  3256  164F  0237               	subwf	___ftadd@exp1,w
  3257  1650  0836               	movf	___ftadd@exp2,w
  3258  1651  1803               	skipnc
  3259  1652  2E62               	goto	L25
  3260  1653  00B2               	movwf	??___ftadd
  3261  1654  0837               	movf	___ftadd@exp1,w
  3262  1655  02B2               	subwf	??___ftadd,f
  3263  1656  3019               	movlw	25
  3264  1657  0232               	subwf	??___ftadd,w
  3265  1658  1C03               	skipc
  3266  1659  2E61               	goto	l2990
  3267  165A                     l2986:	
  3268  165A  082F               	movf	___ftadd@f2,w
  3269  165B  00AC               	movwf	?___ftadd
  3270  165C  0830               	movf	___ftadd@f2+1,w
  3271  165D  00AD               	movwf	?___ftadd+1
  3272  165E  0831               	movf	___ftadd@f2+2,w
  3273  165F  00AE               	movwf	?___ftadd+2
  3274  1660  0008               	return
  3275  1661                     l2990:	
  3276  1661  0836               	movf	___ftadd@exp2,w
  3277  1662                     L25:	
  3278  1662  1903               	btfsc	3,2
  3279  1663  0008               	return
  3280  1664  0837               	movf	___ftadd@exp1,w
  3281  1665  0236               	subwf	___ftadd@exp2,w
  3282  1666  1803               	skipnc
  3283  1667  2E70               	goto	l2996
  3284  1668  0837               	movf	___ftadd@exp1,w
  3285  1669  00B2               	movwf	??___ftadd
  3286  166A  0836               	movf	___ftadd@exp2,w
  3287  166B  02B2               	subwf	??___ftadd,f
  3288  166C  3019               	movlw	25
  3289  166D  0232               	subwf	??___ftadd,w
  3290  166E  1803               	btfsc	3,0
  3291  166F  0008               	return
  3292  1670                     l2996:	
  3293  1670  3006               	movlw	6
  3294  1671  00B5               	movwf	___ftadd@sign
  3295  1672  1BAE               	btfsc	___ftadd@f1+2,7
  3296  1673  17B5               	bsf	___ftadd@sign,7
  3297  1674  1BB1               	btfsc	___ftadd@f2+2,7
  3298  1675  1735               	bsf	___ftadd@sign,6
  3299  1676  17AD               	bsf	___ftadd@f1+1,7
  3300  1677  01AE               	clrf	___ftadd@f1+2
  3301  1678  17B0               	bsf	___ftadd@f2+1,7
  3302  1679  01B1               	clrf	___ftadd@f2+2
  3303  167A  0836               	movf	___ftadd@exp2,w
  3304  167B  0237               	subwf	___ftadd@exp1,w
  3305  167C  1803               	skipnc
  3306  167D  2E95               	goto	l3018
  3307  167E                     l3008:	
  3308  167E  35AF               	lslf	___ftadd@f2,f
  3309  167F  0DB0               	rlf	___ftadd@f2+1,f
  3310  1680  0DB1               	rlf	___ftadd@f2+2,f
  3311  1681  03B6               	decf	___ftadd@exp2,f
  3312  1682  0836               	movf	___ftadd@exp2,w
  3313  1683  0637               	xorwf	___ftadd@exp1,w
  3314  1684  1903               	skipnz
  3315  1685  2E90               	goto	l3016
  3316  1686  03B5               	decf	___ftadd@sign,f
  3317  1687  0835               	movf	___ftadd@sign,w
  3318  1688  3907               	andlw	7
  3319  1689  1903               	btfsc	3,2
  3320  168A  2E90               	goto	l3016
  3321  168B  2E7E               	goto	l3008
  3322  168C                     l3014:	
  3323  168C  36AE               	lsrf	___ftadd@f1+2,f
  3324  168D  0CAD               	rrf	___ftadd@f1+1,f
  3325  168E  0CAC               	rrf	___ftadd@f1,f
  3326  168F  0AB7               	incf	___ftadd@exp1,f
  3327  1690                     l3016:	
  3328  1690  0837               	movf	___ftadd@exp1,w
  3329  1691  0636               	xorwf	___ftadd@exp2,w
  3330  1692  1903               	btfsc	3,2
  3331  1693  2EAF               	goto	l952
  3332  1694  2E8C               	goto	l3014
  3333  1695                     l3018:	
  3334  1695  0837               	movf	___ftadd@exp1,w
  3335  1696  0236               	subwf	___ftadd@exp2,w
  3336  1697  1803               	skipnc
  3337  1698  2EAF               	goto	l952
  3338  1699                     l3020:	
  3339  1699  35AC               	lslf	___ftadd@f1,f
  3340  169A  0DAD               	rlf	___ftadd@f1+1,f
  3341  169B  0DAE               	rlf	___ftadd@f1+2,f
  3342  169C  03B7               	decf	___ftadd@exp1,f
  3343  169D  0836               	movf	___ftadd@exp2,w
  3344  169E  0637               	xorwf	___ftadd@exp1,w
  3345  169F  1903               	skipnz
  3346  16A0  2EAB               	goto	l3028
  3347  16A1  03B5               	decf	___ftadd@sign,f
  3348  16A2  0835               	movf	___ftadd@sign,w
  3349  16A3  3907               	andlw	7
  3350  16A4  1903               	btfsc	3,2
  3351  16A5  2EAB               	goto	l3028
  3352  16A6  2E99               	goto	l3020
  3353  16A7                     l3026:	
  3354  16A7  36B1               	lsrf	___ftadd@f2+2,f
  3355  16A8  0CB0               	rrf	___ftadd@f2+1,f
  3356  16A9  0CAF               	rrf	___ftadd@f2,f
  3357  16AA  0AB6               	incf	___ftadd@exp2,f
  3358  16AB                     l3028:	
  3359  16AB  0837               	movf	___ftadd@exp1,w
  3360  16AC  0636               	xorwf	___ftadd@exp2,w
  3361  16AD  1D03               	skipz
  3362  16AE  2EA7               	goto	l3026
  3363  16AF                     l952:	
  3364  16AF  1FB5               	btfss	___ftadd@sign,7
  3365  16B0  2EBA               	goto	l3034
  3366  16B1  30FF               	movlw	255
  3367  16B2  06AC               	xorwf	___ftadd@f1,f
  3368  16B3  06AD               	xorwf	___ftadd@f1+1,f
  3369  16B4  06AE               	xorwf	___ftadd@f1+2,f
  3370  16B5  0AAC               	incf	___ftadd@f1,f
  3371  16B6  1903               	skipnz
  3372  16B7  0AAD               	incf	___ftadd@f1+1,f
  3373  16B8  1903               	skipnz
  3374  16B9  0AAE               	incf	___ftadd@f1+2,f
  3375  16BA                     l3034:	
  3376  16BA  1F35               	btfss	___ftadd@sign,6
  3377  16BB  2EC5               	goto	l3040
  3378  16BC  30FF               	movlw	255
  3379  16BD  06AF               	xorwf	___ftadd@f2,f
  3380  16BE  06B0               	xorwf	___ftadd@f2+1,f
  3381  16BF  06B1               	xorwf	___ftadd@f2+2,f
  3382  16C0  0AAF               	incf	___ftadd@f2,f
  3383  16C1  1903               	skipnz
  3384  16C2  0AB0               	incf	___ftadd@f2+1,f
  3385  16C3  1903               	skipnz
  3386  16C4  0AB1               	incf	___ftadd@f2+2,f
  3387  16C5                     l3040:	
  3388  16C5  01B5               	clrf	___ftadd@sign
  3389  16C6  082C               	movf	___ftadd@f1,w
  3390  16C7  07AF               	addwf	___ftadd@f2,f
  3391  16C8  082D               	movf	___ftadd@f1+1,w
  3392  16C9  3DB0               	addwfc	___ftadd@f2+1,f
  3393  16CA  082E               	movf	___ftadd@f1+2,w
  3394  16CB  3DB1               	addwfc	___ftadd@f2+2,f
  3395  16CC  1FB1               	btfss	___ftadd@f2+2,7
  3396  16CD  2ED9               	goto	l3052
  3397  16CE  30FF               	movlw	255
  3398  16CF  06AF               	xorwf	___ftadd@f2,f
  3399  16D0  06B0               	xorwf	___ftadd@f2+1,f
  3400  16D1  06B1               	xorwf	___ftadd@f2+2,f
  3401  16D2  0AAF               	incf	___ftadd@f2,f
  3402  16D3  1903               	skipnz
  3403  16D4  0AB0               	incf	___ftadd@f2+1,f
  3404  16D5  1903               	skipnz
  3405  16D6  0AB1               	incf	___ftadd@f2+2,f
  3406  16D7  01B5               	clrf	___ftadd@sign
  3407  16D8  0AB5               	incf	___ftadd@sign,f
  3408  16D9                     l3052:	
  3409  16D9  082F               	movf	___ftadd@f2,w
  3410  16DA  00F0               	movwf	___ftpack@arg
  3411  16DB  0830               	movf	___ftadd@f2+1,w
  3412  16DC  00F1               	movwf	___ftpack@arg+1
  3413  16DD  0831               	movf	___ftadd@f2+2,w
  3414  16DE  00F2               	movwf	___ftpack@arg+2
  3415  16DF  0837               	movf	___ftadd@exp1,w
  3416  16E0  00F3               	movwf	___ftpack@exp
  3417  16E1  0835               	movf	___ftadd@sign,w
  3418  16E2  00F4               	movwf	___ftpack@sign
  3419  16E3  2755               	fcall	___ftpack
  3420  16E4  0870               	movf	?___ftpack,w
  3421  16E5  00AC               	movwf	?___ftadd
  3422  16E6  0871               	movf	?___ftpack+1,w
  3423  16E7  00AD               	movwf	?___ftadd+1
  3424  16E8  0872               	movf	?___ftpack+2,w
  3425  16E9  00AE               	movwf	?___ftadd+2
  3426  16EA  0008               	return
  3427  16EB                     __end_of___ftadd:	
  3428  16EB                     __ptext24:	
  3429 ;; *************** function ___ftmul *****************
  3430 ;; Defined at:
  3431 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  f1              3    0[BANK0 ] float 
  3434 ;;  f2              3    3[BANK0 ] float 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  3437 ;;  sign            1   11[BANK0 ] unsigned char 
  3438 ;;  cntr            1   10[BANK0 ] unsigned char 
  3439 ;;  exp             1    6[BANK0 ] unsigned char 
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  3    0[BANK0 ] float 
  3442 ;; Registers used:
  3443 ;;		wreg, status,2, status,0, pclath, cstack
  3444 ;; Tracked objects:
  3445 ;;		On entry : 1F/0
  3446 ;;		On exit  : 1F/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3449 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3450 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3451 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3452 ;;      Totals:         3      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3453 ;;Total ram usage:       15 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:    2
  3456 ;; This function calls:
  3457 ;;		___ftpack
  3458 ;; This function is called by:
  3459 ;;		_get_30v_current
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           
  3464                           ;psect for function ___ftmul
  3465  16EB                     ___ftmul:	
  3466                           
  3467                           ;incstack = 0
  3468                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3469  16EB  0820               	movf	___ftmul@f1,w
  3470  16EC  00FB               	movwf	??___ftmul
  3471  16ED  0821               	movf	___ftmul@f1+1,w
  3472  16EE  00FC               	movwf	??___ftmul+1
  3473  16EF  0822               	movf	___ftmul@f1+2,w
  3474  16F0  00FD               	movwf	??___ftmul+2
  3475  16F1  1003               	clrc
  3476  16F2  0D7C               	rlf	??___ftmul+1,w
  3477  16F3  0D7D               	rlf	??___ftmul+2,w
  3478  16F4  00A6               	movwf	___ftmul@exp
  3479  16F5  0826               	movf	___ftmul@exp,w
  3480  16F6  1D03               	btfss	3,2
  3481  16F7  2EFC               	goto	l3060
  3482  16F8  01A0               	clrf	?___ftmul
  3483  16F9  01A1               	clrf	?___ftmul+1
  3484  16FA  01A2               	clrf	?___ftmul+2
  3485  16FB  0008               	return
  3486  16FC                     l3060:	
  3487  16FC  0823               	movf	___ftmul@f2,w
  3488  16FD  00FB               	movwf	??___ftmul
  3489  16FE  0824               	movf	___ftmul@f2+1,w
  3490  16FF  00FC               	movwf	??___ftmul+1
  3491  1700  0825               	movf	___ftmul@f2+2,w
  3492  1701  00FD               	movwf	??___ftmul+2
  3493  1702  1003               	clrc
  3494  1703  0D7C               	rlf	??___ftmul+1,w
  3495  1704  0D7D               	rlf	??___ftmul+2,w
  3496  1705  00AB               	movwf	___ftmul@sign
  3497  1706  082B               	movf	___ftmul@sign,w
  3498  1707  1D03               	btfss	3,2
  3499  1708  2F0D               	goto	l3064
  3500  1709  01A0               	clrf	?___ftmul
  3501  170A  01A1               	clrf	?___ftmul+1
  3502  170B  01A2               	clrf	?___ftmul+2
  3503  170C  0008               	return
  3504  170D                     l3064:	
  3505  170D  082B               	movf	___ftmul@sign,w
  3506  170E  3E7B               	addlw	123
  3507  170F  07A6               	addwf	___ftmul@exp,f
  3508  1710  0822               	movf	___ftmul@f1+2,w
  3509  1711  00AB               	movwf	___ftmul@sign
  3510  1712  0825               	movf	___ftmul@f2+2,w
  3511  1713  06AB               	xorwf	___ftmul@sign,f
  3512  1714  3080               	movlw	128
  3513  1715  05AB               	andwf	___ftmul@sign,f
  3514  1716  30FF               	movlw	255
  3515  1717  17A1               	bsf	___ftmul@f1+1,7
  3516  1718  17A4               	bsf	___ftmul@f2+1,7
  3517  1719  05A3               	andwf	___ftmul@f2,f
  3518  171A  05A4               	andwf	___ftmul@f2+1,f
  3519  171B  3007               	movlw	7
  3520  171C  01A5               	clrf	___ftmul@f2+2
  3521  171D  01A7               	clrf	___ftmul@f3_as_product
  3522  171E  01A8               	clrf	___ftmul@f3_as_product+1
  3523  171F  01A9               	clrf	___ftmul@f3_as_product+2
  3524  1720  00AA               	movwf	___ftmul@cntr
  3525  1721                     l3082:	
  3526  1721  1C20               	btfss	___ftmul@f1,0
  3527  1722  2F29               	goto	l3086
  3528  1723  0823               	movf	___ftmul@f2,w
  3529  1724  07A7               	addwf	___ftmul@f3_as_product,f
  3530  1725  0824               	movf	___ftmul@f2+1,w
  3531  1726  3DA8               	addwfc	___ftmul@f3_as_product+1,f
  3532  1727  0825               	movf	___ftmul@f2+2,w
  3533  1728  3DA9               	addwfc	___ftmul@f3_as_product+2,f
  3534  1729                     l3086:	
  3535  1729  36A2               	lsrf	___ftmul@f1+2,f
  3536  172A  0CA1               	rrf	___ftmul@f1+1,f
  3537  172B  0CA0               	rrf	___ftmul@f1,f
  3538  172C  35A3               	lslf	___ftmul@f2,f
  3539  172D  0DA4               	rlf	___ftmul@f2+1,f
  3540  172E  0DA5               	rlf	___ftmul@f2+2,f
  3541  172F  0BAA               	decfsz	___ftmul@cntr,f
  3542  1730  2F21               	goto	l3082
  3543  1731  3009               	movlw	9
  3544  1732  00AA               	movwf	___ftmul@cntr
  3545  1733                     l3094:	
  3546  1733  1C20               	btfss	___ftmul@f1,0
  3547  1734  2F3B               	goto	l3098
  3548  1735  0823               	movf	___ftmul@f2,w
  3549  1736  07A7               	addwf	___ftmul@f3_as_product,f
  3550  1737  0824               	movf	___ftmul@f2+1,w
  3551  1738  3DA8               	addwfc	___ftmul@f3_as_product+1,f
  3552  1739  0825               	movf	___ftmul@f2+2,w
  3553  173A  3DA9               	addwfc	___ftmul@f3_as_product+2,f
  3554  173B                     l3098:	
  3555  173B  36A2               	lsrf	___ftmul@f1+2,f
  3556  173C  0CA1               	rrf	___ftmul@f1+1,f
  3557  173D  0CA0               	rrf	___ftmul@f1,f
  3558  173E  36A9               	lsrf	___ftmul@f3_as_product+2,f
  3559  173F  0CA8               	rrf	___ftmul@f3_as_product+1,f
  3560  1740  0CA7               	rrf	___ftmul@f3_as_product,f
  3561  1741  0BAA               	decfsz	___ftmul@cntr,f
  3562  1742  2F33               	goto	l3094
  3563  1743  0827               	movf	___ftmul@f3_as_product,w
  3564  1744  00F0               	movwf	___ftpack@arg
  3565  1745  0828               	movf	___ftmul@f3_as_product+1,w
  3566  1746  00F1               	movwf	___ftpack@arg+1
  3567  1747  0829               	movf	___ftmul@f3_as_product+2,w
  3568  1748  00F2               	movwf	___ftpack@arg+2
  3569  1749  0826               	movf	___ftmul@exp,w
  3570  174A  00F3               	movwf	___ftpack@exp
  3571  174B  082B               	movf	___ftmul@sign,w
  3572  174C  00F4               	movwf	___ftpack@sign
  3573  174D  2755               	fcall	___ftpack
  3574  174E  0870               	movf	?___ftpack,w
  3575  174F  00A0               	movwf	?___ftmul
  3576  1750  0871               	movf	?___ftpack+1,w
  3577  1751  00A1               	movwf	?___ftmul+1
  3578  1752  0872               	movf	?___ftpack+2,w
  3579  1753  00A2               	movwf	?___ftmul+2
  3580  1754  0008               	return
  3581  1755                     __end_of___ftmul:	
  3582  1755                     __ptext26:	
  3583 ;; *************** function ___ftpack *****************
  3584 ;; Defined at:
  3585 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  arg             3    0[COMMON] unsigned um
  3588 ;;  exp             1    3[COMMON] unsigned char 
  3589 ;;  sign            1    4[COMMON] unsigned char 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  3    0[COMMON] float 
  3594 ;; Registers used:
  3595 ;;		wreg, status,2, status,0
  3596 ;; Tracked objects:
  3597 ;;		On entry : 1F/0
  3598 ;;		On exit  : 1F/0
  3599 ;;		Unchanged: 1F/0
  3600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3601 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3603 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3604 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3605 ;;Total ram usage:        8 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:    1
  3608 ;; This function calls:
  3609 ;;		Nothing
  3610 ;; This function is called by:
  3611 ;;		___ftadd
  3612 ;;		___ftmul
  3613 ;;		___lwtoft
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           
  3618                           ;psect for function ___ftpack
  3619  1755                     ___ftpack:	
  3620                           
  3621                           ;incstack = 0
  3622                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3623  1755  0873               	movf	___ftpack@exp,w
  3624  1756  1903               	btfsc	3,2
  3625  1757  2F5D               	goto	l916
  3626  1758  0872               	movf	___ftpack@arg+2,w
  3627  1759  0471               	iorwf	___ftpack@arg+1,w
  3628  175A  0470               	iorwf	___ftpack@arg,w
  3629  175B  1D03               	skipz
  3630  175C  2F65               	goto	l2834
  3631  175D                     l916:	
  3632  175D  01F0               	clrf	?___ftpack
  3633  175E  01F1               	clrf	?___ftpack+1
  3634  175F  01F2               	clrf	?___ftpack+2
  3635  1760  0008               	return
  3636  1761                     l2832:	
  3637  1761  0AF3               	incf	___ftpack@exp,f
  3638  1762  36F2               	lsrf	___ftpack@arg+2,f
  3639  1763  0CF1               	rrf	___ftpack@arg+1,f
  3640  1764  0CF0               	rrf	___ftpack@arg,f
  3641  1765                     l2834:	
  3642  1765  30FE               	movlw	254
  3643  1766  0572               	andwf	___ftpack@arg+2,w
  3644  1767  1903               	btfsc	3,2
  3645  1768  2F73               	goto	l2838
  3646  1769  2F61               	goto	l2832
  3647  176A                     l2836:	
  3648  176A  0AF3               	incf	___ftpack@exp,f
  3649  176B  0AF0               	incf	___ftpack@arg,f
  3650  176C  1903               	skipnz
  3651  176D  0AF1               	incf	___ftpack@arg+1,f
  3652  176E  1903               	skipnz
  3653  176F  0AF2               	incf	___ftpack@arg+2,f
  3654  1770  36F2               	lsrf	___ftpack@arg+2,f
  3655  1771  0CF1               	rrf	___ftpack@arg+1,f
  3656  1772  0CF0               	rrf	___ftpack@arg,f
  3657  1773                     l2838:	
  3658  1773  30FF               	movlw	255
  3659  1774  0572               	andwf	___ftpack@arg+2,w
  3660  1775  1903               	btfsc	3,2
  3661  1776  2F80               	goto	l2842
  3662  1777  2F6A               	goto	l2836
  3663  1778                     l2844:	
  3664  1778  3002               	movlw	2
  3665  1779  0273               	subwf	___ftpack@exp,w
  3666  177A  1C03               	btfss	3,0
  3667  177B  2F82               	goto	l928
  3668  177C  03F3               	decf	___ftpack@exp,f
  3669  177D  35F0               	lslf	___ftpack@arg,f
  3670  177E  0DF1               	rlf	___ftpack@arg+1,f
  3671  177F  0DF2               	rlf	___ftpack@arg+2,f
  3672  1780                     l2842:	
  3673  1780  1FF1               	btfss	___ftpack@arg+1,7
  3674  1781  2F78               	goto	l2844
  3675  1782                     l928:	
  3676  1782  1C73               	btfss	___ftpack@exp,0
  3677  1783  13F1               	bcf	___ftpack@arg+1,7
  3678  1784  36F3               	lsrf	___ftpack@exp,f
  3679  1785  0873               	movf	___ftpack@exp,w
  3680  1786  00F7               	movwf	??___ftpack+2
  3681  1787  01F6               	clrf	??___ftpack+1
  3682  1788  01F5               	clrf	??___ftpack
  3683  1789  0875               	movf	??___ftpack,w
  3684  178A  04F0               	iorwf	___ftpack@arg,f
  3685  178B  0876               	movf	??___ftpack+1,w
  3686  178C  04F1               	iorwf	___ftpack@arg+1,f
  3687  178D  0877               	movf	??___ftpack+2,w
  3688  178E  04F2               	iorwf	___ftpack@arg+2,f
  3689  178F  0874               	movf	___ftpack@sign,w
  3690  1790  1D03               	btfss	3,2
  3691  1791  17F2               	bsf	___ftpack@arg+2,7
  3692  1792  0008               	return
  3693  1793                     __end_of___ftpack:	
  3694  1793                     __ptext22:	
  3695 ;; *************** function ___lwtoft *****************
  3696 ;; Defined at:
  3697 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  c               2    8[COMMON] unsigned int 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  3    8[COMMON] float 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0, pclath, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 1F/0
  3708 ;;		On exit  : 1F/0
  3709 ;;		Unchanged: 1F/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3711 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3714 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3715 ;;Total ram usage:        3 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    2
  3718 ;; This function calls:
  3719 ;;		___ftpack
  3720 ;; This function is called by:
  3721 ;;		_get_30v_current
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           
  3726                           ;psect for function ___lwtoft
  3727  1793                     ___lwtoft:	
  3728                           
  3729                           ;incstack = 0
  3730                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3731  1793  0878               	movf	___lwtoft@c,w
  3732  1794  00F0               	movwf	___ftpack@arg
  3733  1795  0879               	movf	___lwtoft@c+1,w
  3734  1796  00F1               	movwf	___ftpack@arg+1
  3735  1797  308E               	movlw	142
  3736  1798  01F2               	clrf	___ftpack@arg+2
  3737  1799  00F3               	movwf	___ftpack@exp
  3738  179A  01F4               	clrf	___ftpack@sign
  3739  179B  2755               	fcall	___ftpack
  3740  179C  0870               	movf	?___ftpack,w
  3741  179D  00F8               	movwf	?___lwtoft
  3742  179E  0871               	movf	?___ftpack+1,w
  3743  179F  00F9               	movwf	?___lwtoft+1
  3744  17A0  0872               	movf	?___ftpack+2,w
  3745  17A1  00FA               	movwf	?___lwtoft+2
  3746  17A2  0008               	return
  3747  17A3                     __end_of___lwtoft:	
  3748  17A3                     __ptext23:	
  3749 ;; *************** function ___fttol *****************
  3750 ;; Defined at:
  3751 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;  f1              3   24[BANK0 ] float 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  lval            4   32[BANK0 ] unsigned long 
  3756 ;;  exp1            1   36[BANK0 ] unsigned char 
  3757 ;;  sign1           1   31[BANK0 ] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  4   24[BANK0 ] long 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2, status,0
  3762 ;; Tracked objects:
  3763 ;;		On entry : 1F/0
  3764 ;;		On exit  : 1F/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3767 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3768 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3769 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3770 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3771 ;;Total ram usage:       13 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    1
  3774 ;; This function calls:
  3775 ;;		Nothing
  3776 ;; This function is called by:
  3777 ;;		_get_30v_current
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           
  3782                           ;psect for function ___fttol
  3783  17A3                     ___fttol:	
  3784                           
  3785                           ;incstack = 0
  3786                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3787  17A3  0838               	movf	___fttol@f1,w
  3788  17A4  00BC               	movwf	??___fttol
  3789  17A5  0839               	movf	___fttol@f1+1,w
  3790  17A6  00BD               	movwf	??___fttol+1
  3791  17A7  083A               	movf	___fttol@f1+2,w
  3792  17A8  00BE               	movwf	??___fttol+2
  3793  17A9  1003               	clrc
  3794  17AA  0D3D               	rlf	??___fttol+1,w
  3795  17AB  0D3E               	rlf	??___fttol+2,w
  3796  17AC  00C4               	movwf	___fttol@exp1
  3797  17AD  0844               	movf	___fttol@exp1,w
  3798  17AE  1D03               	btfss	3,2
  3799  17AF  2FB5               	goto	l3112
  3800  17B0                     l3110:	
  3801  17B0  01B8               	clrf	?___fttol
  3802  17B1  01B9               	clrf	?___fttol+1
  3803  17B2  01BA               	clrf	?___fttol+2
  3804  17B3  01BB               	clrf	?___fttol+3
  3805  17B4  0008               	return
  3806  17B5                     l3112:	
  3807  17B5  0838               	movf	___fttol@f1,w
  3808  17B6  00BC               	movwf	??___fttol
  3809  17B7  0839               	movf	___fttol@f1+1,w
  3810  17B8  00BD               	movwf	??___fttol+1
  3811  17B9  083A               	movf	___fttol@f1+2,w
  3812  17BA  00BE               	movwf	??___fttol+2
  3813  17BB  3017               	movlw	23
  3814  17BC                     u3015:	
  3815  17BC  36BE               	lsrf	??___fttol+2,f
  3816  17BD  0CBD               	rrf	??___fttol+1,f
  3817  17BE  0CBC               	rrf	??___fttol,f
  3818  17BF  0B89               	decfsz	9,f
  3819  17C0  2FBC               	goto	u3015
  3820  17C1  083C               	movf	??___fttol,w
  3821  17C2  00BF               	movwf	___fttol@sign1
  3822  17C3  17B9               	bsf	___fttol@f1+1,7
  3823  17C4  01BA               	clrf	___fttol@f1+2
  3824  17C5  0838               	movf	___fttol@f1,w
  3825  17C6  00C0               	movwf	___fttol@lval
  3826  17C7  0839               	movf	___fttol@f1+1,w
  3827  17C8  00C1               	movwf	___fttol@lval+1
  3828  17C9  083A               	movf	___fttol@f1+2,w
  3829  17CA  00C2               	movwf	___fttol@lval+2
  3830  17CB  308E               	movlw	142
  3831  17CC  01C3               	clrf	___fttol@lval+3
  3832  17CD  02C4               	subwf	___fttol@exp1,f
  3833  17CE  1FC4               	btfss	___fttol@exp1,7
  3834  17CF  2FDC               	goto	l3132
  3835  17D0  0844               	movf	___fttol@exp1,w
  3836  17D1  3A80               	xorlw	128
  3837  17D2  3E8F               	addlw	143
  3838  17D3  1C03               	btfss	3,0
  3839  17D4  2FB0               	goto	l3110
  3840  17D5                     l3128:	
  3841  17D5  36C3               	lsrf	___fttol@lval+3,f
  3842  17D6  0CC2               	rrf	___fttol@lval+2,f
  3843  17D7  0CC1               	rrf	___fttol@lval+1,f
  3844  17D8  0CC0               	rrf	___fttol@lval,f
  3845  17D9  0FC4               	incfsz	___fttol@exp1,f
  3846  17DA  2FD5               	goto	l3128
  3847  17DB  2FE9               	goto	l3140
  3848  17DC                     l3132:	
  3849  17DC  3018               	movlw	24
  3850  17DD  0244               	subwf	___fttol@exp1,w
  3851  17DE  1803               	btfsc	3,0
  3852  17DF  2FB0               	goto	l3110
  3853  17E0                     l3138:	
  3854  17E0  0844               	movf	___fttol@exp1,w
  3855  17E1  1903               	btfsc	3,2
  3856  17E2  2FE9               	goto	l3140
  3857  17E3  35C0               	lslf	___fttol@lval,f
  3858  17E4  0DC1               	rlf	___fttol@lval+1,f
  3859  17E5  0DC2               	rlf	___fttol@lval+2,f
  3860  17E6  0DC3               	rlf	___fttol@lval+3,f
  3861  17E7  03C4               	decf	___fttol@exp1,f
  3862  17E8  2FE0               	goto	l3138
  3863  17E9                     l3140:	
  3864  17E9  083F               	movf	___fttol@sign1,w
  3865  17EA  1903               	btfsc	3,2
  3866  17EB  2FF7               	goto	l3144
  3867  17EC  09C0               	comf	___fttol@lval,f
  3868  17ED  09C1               	comf	___fttol@lval+1,f
  3869  17EE  09C2               	comf	___fttol@lval+2,f
  3870  17EF  09C3               	comf	___fttol@lval+3,f
  3871  17F0  0AC0               	incf	___fttol@lval,f
  3872  17F1  1903               	skipnz
  3873  17F2  0AC1               	incf	___fttol@lval+1,f
  3874  17F3  1903               	skipnz
  3875  17F4  0AC2               	incf	___fttol@lval+2,f
  3876  17F5  1903               	skipnz
  3877  17F6  0AC3               	incf	___fttol@lval+3,f
  3878  17F7                     l3144:	
  3879  17F7  0843               	movf	___fttol@lval+3,w
  3880  17F8  00BB               	movwf	?___fttol+3
  3881  17F9  0842               	movf	___fttol@lval+2,w
  3882  17FA  00BA               	movwf	?___fttol+2
  3883  17FB  0841               	movf	___fttol@lval+1,w
  3884  17FC  00B9               	movwf	?___fttol+1
  3885  17FD  0840               	movf	___fttol@lval,w
  3886  17FE  00B8               	movwf	?___fttol
  3887  17FF  0008               	return
  3888  1800                     __end_of___fttol:	
  3889                           
  3890                           	psect	text28
  3891  0C9C                     __ptext28:	
  3892 ;; *************** function _Vout_set *****************
  3893 ;; Defined at:
  3894 ;;		line 1983 in file "Multi_RX_testjig_v1.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;  Volts           2    4[COMMON] int 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  digi_step       4    6[COMMON] unsigned long 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      void 
  3901 ;; Registers used:
  3902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/4
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3909 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3911 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3912 ;;Total ram usage:        6 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    3
  3915 ;; This function calls:
  3916 ;;		_digitalpot
  3917 ;; This function is called by:
  3918 ;;		_main
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           
  3923                           ;psect for function _Vout_set
  3924  0C9C                     _Vout_set:	
  3925                           
  3926                           ;Multi_RX_testjig_v1.c: 1991: switch(Volts)
  3927                           
  3928                           ;incstack = 0
  3929                           ; Regs used in _Vout_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3930  0C9C  2CC1               	goto	l3258
  3931  0C9D                     l3226:	
  3932                           
  3933                           ;Multi_RX_testjig_v1.c: 1994: digi_step = 20;
  3934  0C9D  3014               	movlw	20
  3935  0C9E  2CBA               	goto	L39
  3936  0C9F                     l3228:	
  3937                           ;Multi_RX_testjig_v1.c: 1995: break;
  3938                           
  3939                           
  3940                           ;Multi_RX_testjig_v1.c: 1997: digi_step = 39;
  3941  0C9F  3027               	movlw	39
  3942  0CA0  2CBA               	goto	L39
  3943  0CA1                     l3230:	
  3944                           ;Multi_RX_testjig_v1.c: 1998: break;
  3945                           
  3946                           
  3947                           ;Multi_RX_testjig_v1.c: 2000: digi_step = 52;
  3948  0CA1  3034               	movlw	52
  3949  0CA2  2CBA               	goto	L39
  3950  0CA3                     l3232:	
  3951                           ;Multi_RX_testjig_v1.c: 2001: break;
  3952                           
  3953                           
  3954                           ;Multi_RX_testjig_v1.c: 2003: digi_step = 62;
  3955  0CA3  303E               	movlw	62
  3956  0CA4  2CBA               	goto	L39
  3957  0CA5                     l3234:	
  3958                           ;Multi_RX_testjig_v1.c: 2004: break;
  3959                           
  3960                           
  3961                           ;Multi_RX_testjig_v1.c: 2006: digi_step = 70;
  3962  0CA5  3046               	movlw	70
  3963  0CA6  2CBA               	goto	L39
  3964  0CA7                     l3236:	
  3965                           ;Multi_RX_testjig_v1.c: 2007: break;
  3966                           
  3967                           
  3968                           ;Multi_RX_testjig_v1.c: 2009: digi_step = 76;
  3969  0CA7  304C               	movlw	76
  3970  0CA8  2CBA               	goto	L39
  3971  0CA9                     l3238:	
  3972                           ;Multi_RX_testjig_v1.c: 2010: break;
  3973                           
  3974                           
  3975                           ;Multi_RX_testjig_v1.c: 2012: digi_step = 81;
  3976  0CA9  3051               	movlw	81
  3977  0CAA  2CBA               	goto	L39
  3978  0CAB                     l3240:	
  3979                           ;Multi_RX_testjig_v1.c: 2013: break;
  3980                           
  3981                           
  3982                           ;Multi_RX_testjig_v1.c: 2015: digi_step = 85;
  3983  0CAB  3055               	movlw	85
  3984  0CAC  2CBA               	goto	L39
  3985  0CAD                     l3242:	
  3986                           ;Multi_RX_testjig_v1.c: 2016: break;
  3987                           
  3988                           
  3989                           ;Multi_RX_testjig_v1.c: 2018: digi_step = 88;
  3990  0CAD  3058               	movlw	88
  3991  0CAE  2CBA               	goto	L39
  3992  0CAF                     l3244:	
  3993                           ;Multi_RX_testjig_v1.c: 2019: break;
  3994                           
  3995                           
  3996                           ;Multi_RX_testjig_v1.c: 2021: digi_step = 91;
  3997  0CAF  305B               	movlw	91
  3998  0CB0  2CBA               	goto	L39
  3999  0CB1                     l3246:	
  4000                           ;Multi_RX_testjig_v1.c: 2022: break;
  4001                           
  4002                           
  4003                           ;Multi_RX_testjig_v1.c: 2024: digi_step = 94;
  4004  0CB1  305E               	movlw	94
  4005  0CB2  2CBA               	goto	L39
  4006  0CB3                     l3248:	
  4007                           ;Multi_RX_testjig_v1.c: 2025: break;
  4008                           
  4009                           
  4010                           ;Multi_RX_testjig_v1.c: 2027: digi_step = 96;
  4011  0CB3  3060               	movlw	96
  4012  0CB4  2CBA               	goto	L39
  4013  0CB5                     l3250:	
  4014                           ;Multi_RX_testjig_v1.c: 2028: break;
  4015                           
  4016                           
  4017                           ;Multi_RX_testjig_v1.c: 2030: digi_step = 98;
  4018  0CB5  3062               	movlw	98
  4019  0CB6  2CBA               	goto	L39
  4020  0CB7                     l3252:	
  4021                           ;Multi_RX_testjig_v1.c: 2031: break;
  4022                           
  4023                           
  4024                           ;Multi_RX_testjig_v1.c: 2033: digi_step = 102;
  4025  0CB7  3066               	movlw	102
  4026  0CB8  2CBA               	goto	L39
  4027  0CB9                     l3254:	
  4028                           ;Multi_RX_testjig_v1.c: 2034: break;
  4029                           
  4030                           
  4031                           ;Multi_RX_testjig_v1.c: 2036: digi_step = 112;
  4032  0CB9  3070               	movlw	112
  4033  0CBA                     L39:	
  4034  0CBA  00F6               	movwf	Vout_set@digi_step
  4035  0CBB  2CBD               	goto	L40
  4036  0CBC                     l715:	
  4037                           ;Multi_RX_testjig_v1.c: 2038: default:
  4038                           
  4039                           ;Multi_RX_testjig_v1.c: 2037: break;
  4040                           
  4041                           
  4042                           ;Multi_RX_testjig_v1.c: 2039: digi_step = 0;
  4043  0CBC  01F6               	clrf	Vout_set@digi_step
  4044  0CBD                     L40:	
  4045  0CBD  01F7               	clrf	Vout_set@digi_step+1
  4046  0CBE  01F8               	clrf	Vout_set@digi_step+2
  4047  0CBF  01F9               	clrf	Vout_set@digi_step+3
  4048                           
  4049                           ;Multi_RX_testjig_v1.c: 2040: break;
  4050  0CC0  2CD3               	goto	l3260
  4051  0CC1                     l3258:	
  4052                           
  4053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4054                           ; Switch size 1, requested type "speed"
  4055                           ; Number of cases is 1, Range of values is 0 to 0
  4056                           ; switch strategies available:
  4057                           ; Name         Instructions Cycles
  4058                           ; simple_byte            4     3 (average)
  4059                           ; direct_byte            8     6 (fixed)
  4060                           ; jumptable            260     6 (fixed)
  4061                           ;	Chosen strategy is simple_byte
  4062  0CC1  0875               	movf	Vout_set@Volts+1,w
  4063  0CC2  3A00               	xorlw	0	; case 0
  4064  0CC3  1903               	skipnz
  4065  0CC4  2CC6               	goto	l4266
  4066  0CC5  2CBC               	goto	l715
  4067  0CC6                     l4266:	
  4068                           
  4069                           ; Switch size 1, requested type "speed"
  4070                           ; Number of cases is 15, Range of values is 6 to 25
  4071                           ; switch strategies available:
  4072                           ; Name         Instructions Cycles
  4073                           ; direct_byte           49     9 (fixed)
  4074                           ; simple_byte           46    24 (average)
  4075                           ; jumptable            263     9 (fixed)
  4076                           ;	Chosen strategy is direct_byte
  4077  0CC6  0874               	movf	Vout_set@Volts,w
  4078  0CC7  3EFA               	addlw	-6
  4079  0CC8  1C03               	skipc
  4080  0CC9  2CBC               	goto	l715
  4081  0CCA  0084               	movwf	4
  4082  0CCB  3014               	movlw	20
  4083  0CCC  0204               	subwf	4,w
  4084  0CCD  1803               	skipnc
  4085  0CCE  2CBC               	goto	l715
  4086  0CCF  318B               	movlp	high S4268
  4087  0CD0  3504               	lslf	4,w
  4088  0CD1  3E59               	addlw	low S4268
  4089  0CD2  0082               	movwf	2
  4090  0CD3                     l3260:	
  4091                           
  4092                           ;Multi_RX_testjig_v1.c: 2047: digitalpot((unsigned char) digi_step);
  4093  0CD3  0876               	movf	Vout_set@digi_step,w
  4094  0CD4  2F56               	ljmp	_digitalpot
  4095  0CD5                     __end_of_Vout_set:	
  4096  0CD5                     __ptext15:	
  4097 ;; *************** function _lcd_set_cursor *****************
  4098 ;; Defined at:
  4099 ;;		line 1202 in file "Multi_RX_testjig_v1.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  row             1    wreg     unsigned char 
  4102 ;;  col             1    1[COMMON] unsigned char 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  row             1    2[COMMON] unsigned char 
  4105 ;;  LCD_position    1    3[COMMON] unsigned char 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      void 
  4108 ;; Registers used:
  4109 ;;		wreg, status,2, status,0, pclath, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 1F/0
  4112 ;;		On exit  : 1F/4
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4115 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4116 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4118 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4119 ;;Total ram usage:        3 bytes
  4120 ;; Hardware stack levels used:    1
  4121 ;; Hardware stack levels required when called:    2
  4122 ;; This function calls:
  4123 ;;		_i2c_Start
  4124 ;;		_i2c_Stop
  4125 ;;		_i2c_Write
  4126 ;; This function is called by:
  4127 ;;		_lcd_print_int
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           
  4132                           ;psect for function _lcd_set_cursor
  4133  0CD5                     _lcd_set_cursor:	
  4134                           
  4135                           ;incstack = 0
  4136                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4137                           ;lcd_set_cursor@row stored from wreg
  4138  0CD5  00F2               	movwf	lcd_set_cursor@row
  4139                           
  4140                           ;Multi_RX_testjig_v1.c: 1205: col--;
  4141  0CD6  03F1               	decf	lcd_set_cursor@col,f
  4142                           
  4143                           ;Multi_RX_testjig_v1.c: 1206: i2c_Start();
  4144  0CD7  27CD  318C         	fcall	_i2c_Start
  4145                           
  4146                           ;Multi_RX_testjig_v1.c: 1207: i2c_Write(0x7C);
  4147  0CD9  307C               	movlw	124
  4148  0CDA  27C1  318C         	fcall	_i2c_Write
  4149                           
  4150                           ;Multi_RX_testjig_v1.c: 1208: i2c_Write(0x00);
  4151  0CDC  3000               	movlw	0
  4152  0CDD  27C1  318C         	fcall	_i2c_Write
  4153                           
  4154                           ;Multi_RX_testjig_v1.c: 1209: LCD_position = col & 0b11001111;
  4155  0CDF  0871               	movf	lcd_set_cursor@col,w
  4156  0CE0  00F3               	movwf	lcd_set_cursor@LCD_position
  4157  0CE1  30CF               	movlw	207
  4158  0CE2  05F3               	andwf	lcd_set_cursor@LCD_position,f
  4159                           
  4160                           ;Multi_RX_testjig_v1.c: 1210: if(row == 1)
  4161  0CE3  0B72               	decfsz	lcd_set_cursor@row,w
  4162  0CE4  2CE7               	goto	l2922
  4163                           
  4164                           ;Multi_RX_testjig_v1.c: 1211: LCD_position |= 0b10000000;
  4165  0CE5  17F3               	bsf	lcd_set_cursor@LCD_position,7
  4166  0CE6  2CE9               	goto	l2924
  4167  0CE7                     l2922:	
  4168                           
  4169                           ;Multi_RX_testjig_v1.c: 1212: else
  4170                           ;Multi_RX_testjig_v1.c: 1213: LCD_position |= 0b11000000;
  4171  0CE7  30C0               	movlw	192
  4172  0CE8  04F3               	iorwf	lcd_set_cursor@LCD_position,f
  4173  0CE9                     l2924:	
  4174                           
  4175                           ;Multi_RX_testjig_v1.c: 1214: i2c_Write(LCD_position);
  4176  0CE9  0873               	movf	lcd_set_cursor@LCD_position,w
  4177  0CEA  27C1  318C         	fcall	_i2c_Write
  4178                           
  4179                           ;Multi_RX_testjig_v1.c: 1215: i2c_Stop();
  4180  0CEC  2FD2               	ljmp	l2714
  4181  0CED                     __end_of_lcd_set_cursor:	
  4182  0CED                     __ptext11:	
  4183 ;; *************** function _lcd_print_int *****************
  4184 ;; Defined at:
  4185 ;;		line 1777 in file "Multi_RX_testjig_v1.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  number          2    0[BANK0 ] unsigned int 
  4188 ;;  pos             2    2[BANK0 ] unsigned int 
  4189 ;;  decimal         1    4[BANK0 ] unsigned char 
  4190 ;;  ten_thou_dig    1    5[BANK0 ] unsigned char 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, status,0, pclath, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 1F/0
  4199 ;;		On exit  : 1F/4
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4202 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4205 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4206 ;;Total ram usage:        6 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:    3
  4209 ;; This function calls:
  4210 ;;		_i2c_write_char
  4211 ;;		_lcd_set_cursor
  4212 ;;		_ten_thou_conv
  4213 ;; This function is called by:
  4214 ;;		_main
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           
  4219                           ;psect for function _lcd_print_int
  4220  0CED                     _lcd_print_int:	
  4221                           
  4222                           ;Multi_RX_testjig_v1.c: 1779: lcd_set_cursor(2, pos + 1 - ten_thou_digit);
  4223                           
  4224                           ;incstack = 0
  4225                           ; Regs used in _lcd_print_int: [wreg+status,2+status,0+pclath+cstack]
  4226  0CED  0825               	movf	lcd_print_int@ten_thou_digit,w
  4227  0CEE  0222               	subwf	lcd_print_int@pos,w
  4228  0CEF  3E01               	addlw	1
  4229  0CF0  00F1               	movwf	lcd_set_cursor@col
  4230  0CF1  3002               	movlw	2
  4231  0CF2  24D5               	fcall	_lcd_set_cursor
  4232                           
  4233                           ;Multi_RX_testjig_v1.c: 1780: ten_thou_conv(number);
  4234  0CF3  0020               	movlb	0	; select bank0
  4235  0CF4  0821               	movf	lcd_print_int@number+1,w
  4236  0CF5  00F7               	movwf	ten_thou_conv@n+1
  4237  0CF6  0820               	movf	lcd_print_int@number,w
  4238  0CF7  00F6               	movwf	ten_thou_conv@n
  4239  0CF8  318B  23B5  318C   	fcall	_ten_thou_conv
  4240                           
  4241                           ;Multi_RX_testjig_v1.c: 1781: if(ten_thou_digit)
  4242  0CFB  0825               	movf	lcd_print_int@ten_thou_digit,w
  4243  0CFC  1903               	btfsc	3,2
  4244  0CFD  2D09               	goto	l3338
  4245                           
  4246                           ;Multi_RX_testjig_v1.c: 1782: {
  4247                           ;Multi_RX_testjig_v1.c: 1783: if(ten_thou != 0 || decimal & 0x10)
  4248  0CFE  0867               	movf	_ten_thou,w
  4249  0CFF  1D03               	btfss	3,2
  4250  0D00  2D03               	goto	l3334
  4251  0D01  1E24               	btfss	lcd_print_int@decimal,4
  4252  0D02  2D06               	goto	l3336
  4253  0D03                     l3334:	
  4254                           
  4255                           ;Multi_RX_testjig_v1.c: 1784: i2c_write_char(ten_thou + 48);
  4256  0D03  0867               	movf	_ten_thou,w
  4257  0D04  3E30               	addlw	48
  4258  0D05  2D07               	goto	L21
  4259  0D06                     l3336:	
  4260                           
  4261                           ;Multi_RX_testjig_v1.c: 1785: else i2c_write_char(' ');
  4262  0D06  3020               	movlw	32
  4263  0D07                     L21:	
  4264  0D07  2561  318C         	fcall	_i2c_write_char
  4265  0D09                     l3338:	
  4266                           
  4267                           ;Multi_RX_testjig_v1.c: 1786: }
  4268                           ;Multi_RX_testjig_v1.c: 1787: if(decimal & 0x10)i2c_write_char('.');
  4269  0D09  0020               	movlb	0	; select bank0
  4270  0D0A  1E24               	btfss	lcd_print_int@decimal,4
  4271  0D0B  2D0F               	goto	l3342
  4272  0D0C  302E               	movlw	46
  4273  0D0D  2561  318C         	fcall	_i2c_write_char
  4274  0D0F                     l3342:	
  4275                           
  4276                           ;Multi_RX_testjig_v1.c: 1788: if(thou != 0 || ten_thou != 0 || decimal & 0x18)
  4277  0D0F  0020               	movlb	0	; select bank0
  4278  0D10  0869               	movf	_thou,w
  4279  0D11  1D03               	btfss	3,2
  4280  0D12  2D1A               	goto	l3348
  4281  0D13  0867               	movf	_ten_thou,w
  4282  0D14  1D03               	btfss	3,2
  4283  0D15  2D1A               	goto	l3348
  4284  0D16  0824               	movf	lcd_print_int@decimal,w
  4285  0D17  3918               	andlw	24
  4286  0D18  1903               	btfsc	3,2
  4287  0D19  2D1D               	goto	l3350
  4288  0D1A                     l3348:	
  4289                           
  4290                           ;Multi_RX_testjig_v1.c: 1789: i2c_write_char(thou + 48);
  4291  0D1A  0869               	movf	_thou,w
  4292  0D1B  3E30               	addlw	48
  4293  0D1C  2D1E               	goto	L22
  4294  0D1D                     l3350:	
  4295                           
  4296                           ;Multi_RX_testjig_v1.c: 1790: else i2c_write_char(' ');
  4297  0D1D  3020               	movlw	32
  4298  0D1E                     L22:	
  4299  0D1E  2561  318C         	fcall	_i2c_write_char
  4300                           
  4301                           ;Multi_RX_testjig_v1.c: 1791: if(decimal & 0x08)i2c_write_char('.');
  4302  0D20  0020               	movlb	0	; select bank0
  4303  0D21  1DA4               	btfss	lcd_print_int@decimal,3
  4304  0D22  2D26               	goto	l3356
  4305  0D23  302E               	movlw	46
  4306  0D24  2561  318C         	fcall	_i2c_write_char
  4307  0D26                     l3356:	
  4308                           
  4309                           ;Multi_RX_testjig_v1.c: 1792: if(hund != 0 || thou != 0 || ten_thou != 0 || decimal & 0x
      +                          1C)
  4310  0D26  0020               	movlb	0	; select bank0
  4311  0D27  0864               	movf	_hund,w
  4312  0D28  1D03               	btfss	3,2
  4313  0D29  2D34               	goto	l3364
  4314  0D2A  0869               	movf	_thou,w
  4315  0D2B  1D03               	btfss	3,2
  4316  0D2C  2D34               	goto	l3364
  4317  0D2D  0867               	movf	_ten_thou,w
  4318  0D2E  1D03               	btfss	3,2
  4319  0D2F  2D34               	goto	l3364
  4320  0D30  0824               	movf	lcd_print_int@decimal,w
  4321  0D31  391C               	andlw	28
  4322  0D32  1903               	btfsc	3,2
  4323  0D33  2D37               	goto	l3366
  4324  0D34                     l3364:	
  4325                           
  4326                           ;Multi_RX_testjig_v1.c: 1793: i2c_write_char(hund + 48);
  4327  0D34  0864               	movf	_hund,w
  4328  0D35  3E30               	addlw	48
  4329  0D36  2D38               	goto	L23
  4330  0D37                     l3366:	
  4331                           
  4332                           ;Multi_RX_testjig_v1.c: 1794: else i2c_write_char(' ');
  4333  0D37  3020               	movlw	32
  4334  0D38                     L23:	
  4335  0D38  2561  318C         	fcall	_i2c_write_char
  4336                           
  4337                           ;Multi_RX_testjig_v1.c: 1795: if(decimal & 0x04)i2c_write_char('.');
  4338  0D3A  0020               	movlb	0	; select bank0
  4339  0D3B  1D24               	btfss	lcd_print_int@decimal,2
  4340  0D3C  2D40               	goto	l3372
  4341  0D3D  302E               	movlw	46
  4342  0D3E  2561  318C         	fcall	_i2c_write_char
  4343  0D40                     l3372:	
  4344                           
  4345                           ;Multi_RX_testjig_v1.c: 1796: if(ten != 0 || hund != 0 || thou != 0 || ten_thou != 0 || 
      +                          decimal & 0x1E)
  4346  0D40  0020               	movlb	0	; select bank0
  4347  0D41  0866               	movf	_ten,w
  4348  0D42  1D03               	btfss	3,2
  4349  0D43  2D51               	goto	l3382
  4350  0D44  0864               	movf	_hund,w
  4351  0D45  1D03               	btfss	3,2
  4352  0D46  2D51               	goto	l3382
  4353  0D47  0869               	movf	_thou,w
  4354  0D48  1D03               	btfss	3,2
  4355  0D49  2D51               	goto	l3382
  4356  0D4A  0867               	movf	_ten_thou,w
  4357  0D4B  1D03               	btfss	3,2
  4358  0D4C  2D51               	goto	l3382
  4359  0D4D  0824               	movf	lcd_print_int@decimal,w
  4360  0D4E  391E               	andlw	30
  4361  0D4F  1903               	btfsc	3,2
  4362  0D50  2D54               	goto	l3384
  4363  0D51                     l3382:	
  4364                           
  4365                           ;Multi_RX_testjig_v1.c: 1797: i2c_write_char(ten + 48);
  4366  0D51  0866               	movf	_ten,w
  4367  0D52  3E30               	addlw	48
  4368  0D53  2D55               	goto	L24
  4369  0D54                     l3384:	
  4370                           
  4371                           ;Multi_RX_testjig_v1.c: 1798: else i2c_write_char(' ');
  4372  0D54  3020               	movlw	32
  4373  0D55                     L24:	
  4374  0D55  2561  318C         	fcall	_i2c_write_char
  4375                           
  4376                           ;Multi_RX_testjig_v1.c: 1799: if(decimal & 0x02)i2c_write_char('.');
  4377  0D57  0020               	movlb	0	; select bank0
  4378  0D58  1CA4               	btfss	lcd_print_int@decimal,1
  4379  0D59  2D5D               	goto	l634
  4380  0D5A  302E               	movlw	46
  4381  0D5B  2561  318C         	fcall	_i2c_write_char
  4382  0D5D                     l634:	
  4383                           
  4384                           ;Multi_RX_testjig_v1.c: 1800: i2c_write_char(unit + 48);
  4385  0D5D  0020               	movlb	0	; select bank0
  4386  0D5E  0868               	movf	_unit,w
  4387  0D5F  3E30               	addlw	48
  4388  0D60  2D61               	ljmp	_i2c_write_char
  4389  0D61                     __end_of_lcd_print_int:	
  4390  0D61                     __ptext16:	
  4391 ;; *************** function _i2c_write_char *****************
  4392 ;; Defined at:
  4393 ;;		line 1118 in file "Multi_RX_testjig_v1.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  char_data       1    wreg     unsigned char 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  char_data       1    1[COMMON] unsigned char 
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg, status,2, status,0, pclath, cstack
  4402 ;; Tracked objects:
  4403 ;;		On entry : 1F/0
  4404 ;;		On exit  : 1F/4
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4411 ;;Total ram usage:        1 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; Hardware stack levels required when called:    2
  4414 ;; This function calls:
  4415 ;;		_i2c_Start
  4416 ;;		_i2c_Stop
  4417 ;;		_i2c_Write
  4418 ;; This function is called by:
  4419 ;;		_lcd_print_int
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           
  4424                           ;psect for function _i2c_write_char
  4425  0D61                     _i2c_write_char:	
  4426                           
  4427                           ;incstack = 0
  4428                           ; Regs used in _i2c_write_char: [wreg+status,2+status,0+pclath+cstack]
  4429                           ;i2c_write_char@char_data stored from wreg
  4430  0D61  00F1               	movwf	i2c_write_char@char_data
  4431                           
  4432                           ;Multi_RX_testjig_v1.c: 1120: i2c_Start();
  4433  0D62  27CD  318C         	fcall	_i2c_Start
  4434                           
  4435                           ;Multi_RX_testjig_v1.c: 1121: i2c_Write(0x7C);
  4436  0D64  307C               	movlw	124
  4437  0D65  27C1  318C         	fcall	_i2c_Write
  4438                           
  4439                           ;Multi_RX_testjig_v1.c: 1122: i2c_Write(0x40);
  4440  0D67  3040               	movlw	64
  4441  0D68  27C1  318C         	fcall	_i2c_Write
  4442                           
  4443                           ;Multi_RX_testjig_v1.c: 1123: i2c_Write(char_data);
  4444  0D6A  0871               	movf	i2c_write_char@char_data,w
  4445  0D6B  27C1  318C         	fcall	_i2c_Write
  4446                           
  4447                           ;Multi_RX_testjig_v1.c: 1124: i2c_Stop();
  4448  0D6D  2FD2               	ljmp	l2714
  4449  0D6E                     __end_of_i2c_write_char:	
  4450  0D6E                     __ptext1:	
  4451 ;; *************** function _testjig_done *****************
  4452 ;; Defined at:
  4453 ;;		line 1001 in file "Multi_RX_testjig_v1.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  state           1    wreg     unsigned char 
  4456 ;;  device_type     1    8[COMMON] unsigned char 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  state           1   12[COMMON] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 1F/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4468 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4470 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4471 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4472 ;;Total ram usage:        5 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    4
  4475 ;; This function calls:
  4476 ;;		_buzz_one
  4477 ;;		_debug_fast_tx
  4478 ;;		_power_supply_set
  4479 ;;		_print_screen
  4480 ;; This function is called by:
  4481 ;;		_main
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           
  4486                           ;psect for function _testjig_done
  4487  0D6E                     _testjig_done:	
  4488                           
  4489                           ;incstack = 0
  4490                           ; Regs used in _testjig_done: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4491                           ;testjig_done@state stored from wreg
  4492  0D6E  00FC               	movwf	testjig_done@state
  4493  0D6F                     l461:	
  4494                           ;Multi_RX_testjig_v1.c: 1003: while(1)
  4495                           
  4496                           
  4497                           ;Multi_RX_testjig_v1.c: 1004: {
  4498                           ;Multi_RX_testjig_v1.c: 1005: power_supply_set(3);
  4499  0D6F  3003               	movlw	3
  4500  0D70  27DF  318C         	fcall	_power_supply_set
  4501                           
  4502                           ;Multi_RX_testjig_v1.c: 1006: LATA7 = 0;
  4503  0D72  0022               	movlb	2	; select bank2
  4504  0D73  138C               	bcf	12,7	;volatile
  4505                           
  4506                           ;Multi_RX_testjig_v1.c: 1007: LATB5 = 0;
  4507  0D74  128D               	bcf	13,5	;volatile
  4508                           
  4509                           ;Multi_RX_testjig_v1.c: 1008: LATA6 = 0;
  4510  0D75  130C               	bcf	12,6	;volatile
  4511                           
  4512                           ;Multi_RX_testjig_v1.c: 1009: debug_fast_tx(11110);
  4513  0D76  3066               	movlw	102
  4514  0D77  00F0               	movwf	debug_fast_tx@data
  4515  0D78  302B               	movlw	43
  4516  0D79  00F1               	movwf	debug_fast_tx@data+1
  4517  0D7A  2694  318C         	fcall	_debug_fast_tx
  4518                           
  4519                           ;Multi_RX_testjig_v1.c: 1010: debug_fast_tx(state);
  4520  0D7C  087C               	movf	testjig_done@state,w
  4521  0D7D  00F0               	movwf	debug_fast_tx@data
  4522  0D7E  01F1               	clrf	debug_fast_tx@data+1
  4523  0D7F  2694  318C         	fcall	_debug_fast_tx
  4524                           
  4525                           ;Multi_RX_testjig_v1.c: 1011: switch(state)
  4526  0D81  2E22               	goto	l3470
  4527  0D82                     l3424:	
  4528                           
  4529                           ;Multi_RX_testjig_v1.c: 1014: if(device_type == 0xAA)
  4530  0D82  30AA               	movlw	170
  4531  0D83  0678               	xorwf	testjig_done@device_type,w
  4532  0D84  1D03               	btfss	3,2
  4533  0D85  2D8A               	goto	l3428
  4534                           
  4535                           ;Multi_RX_testjig_v1.c: 1015: print_screen("Condo3 Pass", " Remove board");
  4536  0D86  3022               	movlw	low (STR_161| (0+32768))
  4537  0D87  00F4               	movwf	print_screen@top
  4538  0D88  308A               	movlw	high (STR_161| (0+32768))
  4539  0D89  2D9D               	goto	L14
  4540  0D8A                     l3428:	
  4541                           
  4542                           ;Multi_RX_testjig_v1.c: 1016: else if(device_type == 0xA1)
  4543  0D8A  30A1               	movlw	161
  4544  0D8B  0678               	xorwf	testjig_done@device_type,w
  4545  0D8C  1D03               	btfss	3,2
  4546  0D8D  2D92               	goto	l3432
  4547                           
  4548                           ;Multi_RX_testjig_v1.c: 1017: print_screen("RX3 Pass", " Remove board");
  4549  0D8E  30E7               	movlw	low (STR_163| (0+32768))
  4550  0D8F  00F4               	movwf	print_screen@top
  4551  0D90  308A               	movlw	high (STR_163| (0+32768))
  4552  0D91  2D9D               	goto	L14
  4553  0D92                     l3432:	
  4554                           
  4555                           ;Multi_RX_testjig_v1.c: 1018: else if(device_type == 0xA2)
  4556  0D92  30A2               	movlw	162
  4557  0D93  0678               	xorwf	testjig_done@device_type,w
  4558  0D94  1D03               	btfss	3,2
  4559  0D95  2D9A               	goto	l3436
  4560                           
  4561                           ;Multi_RX_testjig_v1.c: 1019: print_screen("Mem_Copier Pass", " Remove board");
  4562  0D96  3071               	movlw	low (STR_165| (0+32768))
  4563  0D97  00F4               	movwf	print_screen@top
  4564  0D98  3088               	movlw	high (STR_165| (0+32768))
  4565  0D99  2D9D               	goto	L14
  4566  0D9A                     l3436:	
  4567                           
  4568                           ;Multi_RX_testjig_v1.c: 1020: else
  4569                           ;Multi_RX_testjig_v1.c: 1021: print_screen("Multi_RX Pass", " Remove board");
  4570  0D9A  3022               	movlw	low (STR_167| (0+32768))
  4571  0D9B  00F4               	movwf	print_screen@top
  4572  0D9C  3089               	movlw	high (STR_167| (0+32768))
  4573  0D9D                     L14:	
  4574  0D9D  00F5               	movwf	print_screen@top+1
  4575  0D9E  3006               	movlw	low (STR_162| (0+32768))
  4576  0D9F  00F6               	movwf	print_screen@bottom
  4577  0DA0  3089               	movlw	high (STR_162| (0+32768))
  4578  0DA1  00F7               	movwf	print_screen@bottom+1
  4579  0DA2  26C1  318C         	fcall	_print_screen
  4580                           
  4581                           ;Multi_RX_testjig_v1.c: 1022: debug_fast_tx(11111);
  4582  0DA4  3067               	movlw	103
  4583  0DA5  00F0               	movwf	debug_fast_tx@data
  4584  0DA6  302B               	movlw	43
  4585  0DA7  00F1               	movwf	debug_fast_tx@data+1
  4586  0DA8  2694  318C         	fcall	_debug_fast_tx
  4587                           
  4588                           ;Multi_RX_testjig_v1.c: 1023: buzz_one(100);
  4589  0DAA  3064               	movlw	100
  4590  0DAB  00F0               	movwf	buzz_one@time
  4591  0DAC  01F1               	clrf	buzz_one@time+1
  4592  0DAD  27D7  318C         	fcall	_buzz_one
  4593                           
  4594                           ;Multi_RX_testjig_v1.c: 1024: _delay((unsigned long)((200)*(16000000/4000.0)));
  4595  0DAF  3005               	movlw	5
  4596  0DB0  00FB               	movwf	??_testjig_done+2
  4597  0DB1  300F               	movlw	15
  4598  0DB2  00FA               	movwf	??_testjig_done+1
  4599  0DB3  30F4               	movlw	244
  4600  0DB4  00F9               	movwf	??_testjig_done
  4601  0DB5                     u5127:	
  4602  0DB5  0BF9               	decfsz	??_testjig_done,f
  4603  0DB6  2DB5               	goto	u5127
  4604  0DB7  0BFA               	decfsz	??_testjig_done+1,f
  4605  0DB8  2DB5               	goto	u5127
  4606  0DB9  0BFB               	decfsz	??_testjig_done+2,f
  4607  0DBA  2DB5               	goto	u5127
  4608                           
  4609                           ;Multi_RX_testjig_v1.c: 1025: buzz_one(100);
  4610  0DBB  3064               	movlw	100
  4611  0DBC  00F0               	movwf	buzz_one@time
  4612  0DBD  01F1               	clrf	buzz_one@time+1
  4613  0DBE  27D7  318C         	fcall	_buzz_one
  4614  0DC0                     l470:	
  4615                           ;Multi_RX_testjig_v1.c: 1026: while(RF3 == 0);
  4616                           
  4617  0DC0  0025               	movlb	5	; select bank5
  4618  0DC1  1D8C               	btfss	12,3	;volatile
  4619  0DC2  2DC0               	goto	l470
  4620                           
  4621                           ;Multi_RX_testjig_v1.c: 1027: _delay((unsigned long)((100)*(16000000/4000.0)));
  4622  0DC3  3003               	movlw	3
  4623  0DC4  00FB               	movwf	??_testjig_done+2
  4624  0DC5  3008               	movlw	8
  4625  0DC6  00FA               	movwf	??_testjig_done+1
  4626  0DC7  3078               	movlw	120
  4627  0DC8  00F9               	movwf	??_testjig_done
  4628  0DC9                     u5137:	
  4629  0DC9  0BF9               	decfsz	??_testjig_done,f
  4630  0DCA  2DC9               	goto	u5137
  4631  0DCB  0BFA               	decfsz	??_testjig_done+1,f
  4632  0DCC  2DC9               	goto	u5137
  4633  0DCD  0BFB               	decfsz	??_testjig_done+2,f
  4634  0DCE  2DC9               	goto	u5137
  4635  0DCF  2E1F               	goto	L15
  4636  0DD0                     l3448:	
  4637                           ;Multi_RX_testjig_v1.c: 1029: break;
  4638                           
  4639                           ;Multi_RX_testjig_v1.c: 1028: state = 0xFF;
  4640                           
  4641                           
  4642                           ;Multi_RX_testjig_v1.c: 1031: debug_fast_tx(11112);
  4643  0DD0  3068               	movlw	104
  4644  0DD1  00F0               	movwf	debug_fast_tx@data
  4645  0DD2  302B               	movlw	43
  4646  0DD3  00F1               	movwf	debug_fast_tx@data+1
  4647  0DD4  2694  318C         	fcall	_debug_fast_tx
  4648                           
  4649                           ;Multi_RX_testjig_v1.c: 1033: if(device_type == 0xAA)
  4650  0DD6  30AA               	movlw	170
  4651  0DD7  0678               	xorwf	testjig_done@device_type,w
  4652  0DD8  1D03               	btfss	3,2
  4653  0DD9  2DDE               	goto	l3454
  4654                           
  4655                           ;Multi_RX_testjig_v1.c: 1034: print_screen("Condo3 ", " Testjig");
  4656  0DDA  30F0               	movlw	low (STR_169| (0+32768))
  4657  0DDB  00F4               	movwf	print_screen@top
  4658  0DDC  308A               	movlw	high (STR_169| (0+32768))
  4659  0DDD  2DED               	goto	L20
  4660  0DDE                     l3454:	
  4661                           
  4662                           ;Multi_RX_testjig_v1.c: 1035: else if(device_type == 0xA1)
  4663  0DDE  30A1               	movlw	161
  4664  0DDF  0678               	xorwf	testjig_done@device_type,w
  4665  0DE0  1D03               	btfss	3,2
  4666  0DE1  2DE6               	goto	l3458
  4667                           
  4668                           ;Multi_RX_testjig_v1.c: 1036: print_screen("RX3 ", " Testjig");
  4669  0DE2  3008               	movlw	low (STR_171| (0+32768))
  4670  0DE3  00F4               	movwf	print_screen@top
  4671  0DE4  308B               	movlw	high (STR_171| (0+32768))
  4672  0DE5  2DED               	goto	L20
  4673  0DE6                     l3458:	
  4674                           
  4675                           ;Multi_RX_testjig_v1.c: 1037: else if(device_type == 0xA2)
  4676  0DE6  30A2               	movlw	162
  4677  0DE7  0678               	xorwf	testjig_done@device_type,w
  4678  0DE8  1D03               	btfss	3,2
  4679  0DE9  2DF2               	goto	l3462
  4680                           
  4681                           ;Multi_RX_testjig_v1.c: 1038: print_screen("Mem_Copier Pass", " Testjig");
  4682  0DEA  3071               	movlw	low (STR_165| (0+32768))
  4683  0DEB  00F4               	movwf	print_screen@top
  4684  0DEC  3088               	movlw	high (STR_165| (0+32768))
  4685  0DED                     L20:	
  4686  0DED  00F5               	movwf	print_screen@top+1
  4687  0DEE  30F5               	movlw	low ((STR_181+3)| (0+32768))
  4688  0DEF  00F6               	movwf	print_screen@bottom
  4689  0DF0  3089               	movlw	high ((STR_181+3)| (0+32768))
  4690  0DF1  2DF9               	goto	L16
  4691  0DF2                     l3462:	
  4692                           
  4693                           ;Multi_RX_testjig_v1.c: 1039: else
  4694                           ;Multi_RX_testjig_v1.c: 1040: print_screen("Multi_RX", "Testjig");
  4695  0DF2  30D5               	movlw	low (STR_1| (0+32768))
  4696  0DF3  00F4               	movwf	print_screen@top
  4697  0DF4  308A               	movlw	high (STR_1| (0+32768))
  4698  0DF5  00F5               	movwf	print_screen@top+1
  4699  0DF6  30F6               	movlw	low ((STR_181+4)| (0+32768))
  4700  0DF7  00F6               	movwf	print_screen@bottom
  4701  0DF8  3089               	movlw	high ((STR_181+4)| (0+32768))
  4702  0DF9                     L16:	
  4703  0DF9  00F7               	movwf	print_screen@bottom+1
  4704  0DFA  26C1  318C         	fcall	_print_screen
  4705                           
  4706                           ;Multi_RX_testjig_v1.c: 1041: _delay((unsigned long)((2000)*(16000000/4000.0)));
  4707  0DFC  3029               	movlw	41
  4708  0DFD  00FB               	movwf	??_testjig_done+2
  4709  0DFE  3096               	movlw	150
  4710  0DFF  00FA               	movwf	??_testjig_done+1
  4711  0E00  30A6               	movlw	166
  4712  0E01  00F9               	movwf	??_testjig_done
  4713  0E02                     u5147:	
  4714  0E02  0BF9               	decfsz	??_testjig_done,f
  4715  0E03  2E02               	goto	u5147
  4716  0E04  0BFA               	decfsz	??_testjig_done+1,f
  4717  0E05  2E02               	goto	u5147
  4718  0E06  0BFB               	decfsz	??_testjig_done+2,f
  4719  0E07  2E02               	goto	u5147
  4720                           
  4721                           ;Multi_RX_testjig_v1.c: 1042: print_screen("Testjig Power-up", "wait...");
  4722  0E08  30FE               	movlw	low (STR_177| (0+32768))
  4723  0E09  00F4               	movwf	print_screen@top
  4724  0E0A  3087               	movlw	high (STR_177| (0+32768))
  4725  0E0B  00F5               	movwf	print_screen@top+1
  4726  0E0C  30F8               	movlw	low (STR_178| (0+32768))
  4727  0E0D  00F6               	movwf	print_screen@bottom
  4728  0E0E  308A               	movlw	high (STR_178| (0+32768))
  4729  0E0F  00F7               	movwf	print_screen@bottom+1
  4730  0E10  26C1  318C         	fcall	_print_screen
  4731                           
  4732                           ;Multi_RX_testjig_v1.c: 1043: _delay((unsigned long)((3000)*(16000000/4000.0)));
  4733  0E12  303D               	movlw	61
  4734  0E13  00FB               	movwf	??_testjig_done+2
  4735  0E14  30E1               	movlw	225
  4736  0E15  00FA               	movwf	??_testjig_done+1
  4737  0E16  307A               	movlw	122
  4738  0E17  00F9               	movwf	??_testjig_done
  4739  0E18                     u5157:	
  4740  0E18  0BF9               	decfsz	??_testjig_done,f
  4741  0E19  2E18               	goto	u5157
  4742  0E1A  0BFA               	decfsz	??_testjig_done+1,f
  4743  0E1B  2E18               	goto	u5157
  4744  0E1C  0BFB               	decfsz	??_testjig_done+2,f
  4745  0E1D  2E18               	goto	u5157
  4746  0E1E  3200               	nop2
  4747  0E1F                     L15:	
  4748                           
  4749                           ;Multi_RX_testjig_v1.c: 1044: state = 0xFF;
  4750  0E1F  30FF               	movlw	255
  4751  0E20  00FC               	movwf	testjig_done@state
  4752                           
  4753                           ;Multi_RX_testjig_v1.c: 1045: break;
  4754  0E21  2E2A               	goto	l3472
  4755  0E22                     l3470:	
  4756  0E22  087C               	movf	testjig_done@state,w
  4757                           
  4758                           ; Switch size 1, requested type "speed"
  4759                           ; Number of cases is 2, Range of values is 1 to 2
  4760                           ; switch strategies available:
  4761                           ; Name         Instructions Cycles
  4762                           ; simple_byte            7     4 (average)
  4763                           ; direct_byte           13     9 (fixed)
  4764                           ; jumptable            263     9 (fixed)
  4765                           ;	Chosen strategy is simple_byte
  4766  0E23  3A01               	xorlw	1	; case 1
  4767  0E24  1903               	skipnz
  4768  0E25  2D82               	goto	l3424
  4769  0E26  3A03               	xorlw	3	; case 2
  4770  0E27  1903               	skipnz
  4771  0E28  2DD0               	goto	l3448
  4772  0E29  2E2A               	goto	l3472
  4773  0E2A                     l3472:	
  4774                           
  4775                           ;Multi_RX_testjig_v1.c: 1047: debug_fast_tx(11113);
  4776  0E2A  3069               	movlw	105
  4777  0E2B  00F0               	movwf	debug_fast_tx@data
  4778  0E2C  302B               	movlw	43
  4779  0E2D  00F1               	movwf	debug_fast_tx@data+1
  4780  0E2E  2694  318C         	fcall	_debug_fast_tx
  4781                           
  4782                           ;Multi_RX_testjig_v1.c: 1048: if(device_type == 0xAA)
  4783  0E30  30AA               	movlw	170
  4784  0E31  0678               	xorwf	testjig_done@device_type,w
  4785  0E32  1D03               	btfss	3,2
  4786  0E33  2E38               	goto	l3478
  4787                           
  4788                           ;Multi_RX_testjig_v1.c: 1049: print_screen("Condo3 Testjig", "-> Insert PCB");
  4789  0E34  30AF               	movlw	low (STR_179| (0+32768))
  4790  0E35  00F4               	movwf	print_screen@top
  4791  0E36  3088               	movlw	high (STR_179| (0+32768))
  4792  0E37  2E4B               	goto	L17
  4793  0E38                     l3478:	
  4794                           
  4795                           ;Multi_RX_testjig_v1.c: 1050: else if(device_type == 0xA1)
  4796  0E38  30A1               	movlw	161
  4797  0E39  0678               	xorwf	testjig_done@device_type,w
  4798  0E3A  1D03               	btfss	3,2
  4799  0E3B  2E40               	goto	l3482
  4800                           
  4801                           ;Multi_RX_testjig_v1.c: 1051: print_screen("RX3 Testjig", "-> Insert PCB");
  4802  0E3C  30F2               	movlw	low (STR_181| (0+32768))
  4803  0E3D  00F4               	movwf	print_screen@top
  4804  0E3E  3089               	movlw	high (STR_181| (0+32768))
  4805  0E3F  2E4B               	goto	L17
  4806  0E40                     l3482:	
  4807                           
  4808                           ;Multi_RX_testjig_v1.c: 1052: else if(device_type == 0xA2)
  4809  0E40  30A2               	movlw	162
  4810  0E41  0678               	xorwf	testjig_done@device_type,w
  4811  0E42  1D03               	btfss	3,2
  4812  0E43  2E48               	goto	l3486
  4813                           
  4814                           ;Multi_RX_testjig_v1.c: 1053: print_screen("Mem_Copier Pass", "-> Insert PCB");
  4815  0E44  3071               	movlw	low (STR_165| (0+32768))
  4816  0E45  00F4               	movwf	print_screen@top
  4817  0E46  3088               	movlw	high (STR_165| (0+32768))
  4818  0E47  2E4B               	goto	L17
  4819  0E48                     l3486:	
  4820                           
  4821                           ;Multi_RX_testjig_v1.c: 1054: else
  4822                           ;Multi_RX_testjig_v1.c: 1055: print_screen("Multi_RX Testjig", "-> Insert PCB");
  4823  0E48  30DC               	movlw	low (STR_185| (0+32768))
  4824  0E49  00F4               	movwf	print_screen@top
  4825  0E4A  3087               	movlw	high (STR_185| (0+32768))
  4826  0E4B                     L17:	
  4827  0E4B  00F5               	movwf	print_screen@top+1
  4828  0E4C  30F8               	movlw	low (STR_4| (0+32768))
  4829  0E4D  00F6               	movwf	print_screen@bottom
  4830  0E4E  3088               	movlw	high (STR_4| (0+32768))
  4831  0E4F  00F7               	movwf	print_screen@bottom+1
  4832  0E50  26C1  318C         	fcall	_print_screen
  4833  0E52                     l487:	
  4834  0E52  0025               	movlb	5	; select bank5
  4835  0E53  198C               	btfsc	12,3	;volatile
  4836  0E54  2E52               	goto	l487
  4837                           
  4838                           ;Multi_RX_testjig_v1.c: 1057: _delay((unsigned long)((100)*(16000000/4000.0)));
  4839  0E55  3003               	movlw	3
  4840  0E56  00FB               	movwf	??_testjig_done+2
  4841  0E57  3008               	movlw	8
  4842  0E58  00FA               	movwf	??_testjig_done+1
  4843  0E59  3078               	movlw	120
  4844  0E5A  00F9               	movwf	??_testjig_done
  4845  0E5B                     u5167:	
  4846  0E5B  0BF9               	decfsz	??_testjig_done,f
  4847  0E5C  2E5B               	goto	u5167
  4848  0E5D  0BFA               	decfsz	??_testjig_done+1,f
  4849  0E5E  2E5B               	goto	u5167
  4850  0E5F  0BFB               	decfsz	??_testjig_done+2,f
  4851  0E60  2E5B               	goto	u5167
  4852                           
  4853                           ;Multi_RX_testjig_v1.c: 1058: if(device_type == 0xAA)
  4854  0E61  30AA               	movlw	170
  4855  0E62  0678               	xorwf	testjig_done@device_type,w
  4856  0E63  1D03               	btfss	3,2
  4857  0E64  2E69               	goto	l3494
  4858                           
  4859                           ;Multi_RX_testjig_v1.c: 1059: print_screen("Condo3 Testjig", " Press START");
  4860  0E65  30AF               	movlw	low (STR_179| (0+32768))
  4861  0E66  00F4               	movwf	print_screen@top
  4862  0E67  3088               	movlw	high (STR_179| (0+32768))
  4863  0E68  2E7C               	goto	L18
  4864  0E69                     l3494:	
  4865                           
  4866                           ;Multi_RX_testjig_v1.c: 1060: else if(device_type == 0xA1)
  4867  0E69  30A1               	movlw	161
  4868  0E6A  0678               	xorwf	testjig_done@device_type,w
  4869  0E6B  1D03               	btfss	3,2
  4870  0E6C  2E71               	goto	l3498
  4871                           
  4872                           ;Multi_RX_testjig_v1.c: 1061: print_screen("RX3 Testjig", " Press START");
  4873  0E6D  30F2               	movlw	low (STR_181| (0+32768))
  4874  0E6E  00F4               	movwf	print_screen@top
  4875  0E6F  3089               	movlw	high (STR_181| (0+32768))
  4876  0E70  2E7C               	goto	L18
  4877  0E71                     l3498:	
  4878                           
  4879                           ;Multi_RX_testjig_v1.c: 1062: else if(device_type == 0xA2)
  4880  0E71  30A2               	movlw	162
  4881  0E72  0678               	xorwf	testjig_done@device_type,w
  4882  0E73  1D03               	btfss	3,2
  4883  0E74  2E79               	goto	l3502
  4884                           
  4885                           ;Multi_RX_testjig_v1.c: 1063: print_screen("Mem_Copier Pass", " Press START");
  4886  0E75  3071               	movlw	low (STR_165| (0+32768))
  4887  0E76  00F4               	movwf	print_screen@top
  4888  0E77  3088               	movlw	high (STR_165| (0+32768))
  4889  0E78  2E7C               	goto	L18
  4890  0E79                     l3502:	
  4891                           
  4892                           ;Multi_RX_testjig_v1.c: 1064: else
  4893                           ;Multi_RX_testjig_v1.c: 1065: print_screen("Multi_RX Testjig", " Press START");
  4894  0E79  30DC               	movlw	low (STR_185| (0+32768))
  4895  0E7A  00F4               	movwf	print_screen@top
  4896  0E7B  3087               	movlw	high (STR_185| (0+32768))
  4897  0E7C                     L18:	
  4898  0E7C  00F5               	movwf	print_screen@top+1
  4899  0E7D  308D               	movlw	low (STR_188| (0+32768))
  4900  0E7E  00F6               	movwf	print_screen@bottom
  4901  0E7F  3089               	movlw	high (STR_188| (0+32768))
  4902  0E80  00F7               	movwf	print_screen@bottom+1
  4903  0E81  26C1  318C         	fcall	_print_screen
  4904  0E83                     l496:	
  4905  0E83  0025               	movlb	5	; select bank5
  4906  0E84  1D8C               	btfss	12,3	;volatile
  4907  0E85  2E83               	goto	l496
  4908                           
  4909                           ;Multi_RX_testjig_v1.c: 1067: _delay((unsigned long)((100)*(16000000/4000.0)));
  4910  0E86  3003               	movlw	3
  4911  0E87  00FB               	movwf	??_testjig_done+2
  4912  0E88  3008               	movlw	8
  4913  0E89  00FA               	movwf	??_testjig_done+1
  4914  0E8A  3078               	movlw	120
  4915  0E8B  00F9               	movwf	??_testjig_done
  4916  0E8C                     u5177:	
  4917  0E8C  0BF9               	decfsz	??_testjig_done,f
  4918  0E8D  2E8C               	goto	u5177
  4919  0E8E  0BFA               	decfsz	??_testjig_done+1,f
  4920  0E8F  2E8C               	goto	u5177
  4921  0E90  0BFB               	decfsz	??_testjig_done+2,f
  4922  0E91  2E8C               	goto	u5177
  4923  0E92  0020               	movlb	0	; select bank0
  4924  0E93  2D6F               	goto	l461
  4925  0E94                     __end_of_testjig_done:	
  4926  0E94                     __ptext9:	
  4927 ;; *************** function _debug_fast_tx *****************
  4928 ;; Defined at:
  4929 ;;		line 2060 in file "Multi_RX_testjig_v1.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  data            2    0[COMMON] unsigned int 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  i               1    2[COMMON] unsigned char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      void 
  4936 ;; Registers used:
  4937 ;;		wreg, status,2, status,0
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/2
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4946 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4947 ;;Total ram usage:        3 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; Hardware stack levels required when called:    1
  4950 ;; This function calls:
  4951 ;;		Nothing
  4952 ;; This function is called by:
  4953 ;;		_main
  4954 ;;		_testjig_done
  4955 ;;		_print_error
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           
  4960                           ;psect for function _debug_fast_tx
  4961  0E94                     _debug_fast_tx:	
  4962                           
  4963                           ;Multi_RX_testjig_v1.c: 2062: GIE = 0;
  4964                           
  4965                           ;incstack = 0
  4966                           ; Regs used in _debug_fast_tx: [wreg+status,2+status,0]
  4967  0E94  138B               	bcf	11,7	;volatile
  4968                           
  4969                           ;Multi_RX_testjig_v1.c: 2063: LATD2 = 0;
  4970  0E95  0022               	movlb	2	; select bank2
  4971  0E96  110F               	bcf	15,2	;volatile
  4972                           
  4973                           ;Multi_RX_testjig_v1.c: 2069: __nop();
  4974  0E97  0000               	nop
  4975                           
  4976                           ;Multi_RX_testjig_v1.c: 2070: __nop();
  4977  0E98  0000               	nop
  4978                           
  4979                           ;Multi_RX_testjig_v1.c: 2071: __nop();
  4980  0E99  0000               	nop
  4981                           
  4982                           ;Multi_RX_testjig_v1.c: 2072: __nop();
  4983  0E9A  0000               	nop
  4984                           
  4985                           ;Multi_RX_testjig_v1.c: 2073: __nop();
  4986  0E9B  0000               	nop
  4987                           
  4988                           ;Multi_RX_testjig_v1.c: 2074: __nop();
  4989  0E9C  0000               	nop
  4990                           
  4991                           ;Multi_RX_testjig_v1.c: 2075: __nop();
  4992  0E9D  0000               	nop
  4993                           
  4994                           ;Multi_RX_testjig_v1.c: 2076: __nop();
  4995  0E9E  0000               	nop
  4996                           
  4997                           ;Multi_RX_testjig_v1.c: 2077: __nop();
  4998  0E9F  0000               	nop
  4999                           
  5000                           ;Multi_RX_testjig_v1.c: 2078: unsigned char i;
  5001                           ;Multi_RX_testjig_v1.c: 2079: for(i = 0; i < 16; i++)
  5002  0EA0  01F2               	clrf	debug_fast_tx@i
  5003  0EA1                     l722:	
  5004                           
  5005                           ;Multi_RX_testjig_v1.c: 2080: {
  5006                           ;Multi_RX_testjig_v1.c: 2081: LATD2 = data & 0x01;
  5007  0EA1  1C70               	btfss	debug_fast_tx@data,0
  5008  0EA2  2EA6               	goto	u2640
  5009  0EA3  0022               	movlb	2	; select bank2
  5010  0EA4  150F               	bsf	15,2	;volatile
  5011  0EA5  2EA8               	goto	l2870
  5012  0EA6                     u2640:	
  5013  0EA6  0022               	movlb	2	; select bank2
  5014  0EA7  110F               	bcf	15,2	;volatile
  5015  0EA8                     l2870:	
  5016  0EA8  3010               	movlw	16
  5017                           
  5018                           ;Multi_RX_testjig_v1.c: 2082: data = data >> 1;
  5019  0EA9  36F1               	lsrf	debug_fast_tx@data+1,f
  5020  0EAA  0CF0               	rrf	debug_fast_tx@data,f
  5021  0EAB  0AF2               	incf	debug_fast_tx@i,f
  5022  0EAC  0272               	subwf	debug_fast_tx@i,w
  5023  0EAD  1C03               	skipc
  5024  0EAE  2EA1               	goto	l722
  5025                           
  5026                           ;Multi_RX_testjig_v1.c: 2083: }
  5027                           ;Multi_RX_testjig_v1.c: 2084: __nop();
  5028  0EAF  0000               	nop
  5029                           
  5030                           ;Multi_RX_testjig_v1.c: 2085: __nop();
  5031  0EB0  0000               	nop
  5032                           
  5033                           ;Multi_RX_testjig_v1.c: 2086: __nop();
  5034  0EB1  0000               	nop
  5035                           
  5036                           ;Multi_RX_testjig_v1.c: 2087: __nop();
  5037  0EB2  0000               	nop
  5038                           
  5039                           ;Multi_RX_testjig_v1.c: 2088: __nop();
  5040  0EB3  0000               	nop
  5041                           
  5042                           ;Multi_RX_testjig_v1.c: 2089: __nop();
  5043  0EB4  0000               	nop
  5044                           
  5045                           ;Multi_RX_testjig_v1.c: 2090: LATD2 = 1;
  5046  0EB5  0022               	movlb	2	; select bank2
  5047  0EB6  150F               	bsf	15,2	;volatile
  5048                           
  5049                           ;Multi_RX_testjig_v1.c: 2091: __nop();
  5050  0EB7  0000               	nop
  5051                           
  5052                           ;Multi_RX_testjig_v1.c: 2092: __nop();
  5053  0EB8  0000               	nop
  5054                           
  5055                           ;Multi_RX_testjig_v1.c: 2093: __nop();
  5056  0EB9  0000               	nop
  5057                           
  5058                           ;Multi_RX_testjig_v1.c: 2094: __nop();
  5059  0EBA  0000               	nop
  5060                           
  5061                           ;Multi_RX_testjig_v1.c: 2095: __nop();
  5062  0EBB  0000               	nop
  5063                           
  5064                           ;Multi_RX_testjig_v1.c: 2096: __nop();
  5065  0EBC  0000               	nop
  5066                           
  5067                           ;Multi_RX_testjig_v1.c: 2097: __nop();
  5068  0EBD  0000               	nop
  5069                           
  5070                           ;Multi_RX_testjig_v1.c: 2098: __nop();
  5071  0EBE  0000               	nop
  5072                           
  5073                           ;Multi_RX_testjig_v1.c: 2099: GIE = 1;
  5074  0EBF  178B               	bsf	11,7	;volatile
  5075  0EC0  0008               	return
  5076  0EC1                     __end_of_debug_fast_tx:	
  5077  0EC1                     __ptext3:	
  5078 ;; *************** function _print_screen *****************
  5079 ;; Defined at:
  5080 ;;		line 1567 in file "Multi_RX_testjig_v1.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  top             2    4[COMMON] PTR const unsigned char 
  5083 ;;		 -> STR_195(12), STR_193(17), STR_191(16), STR_189(12), 
  5084 ;;		 -> STR_187(15), STR_185(17), STR_183(16), STR_181(12), 
  5085 ;;		 -> STR_179(15), STR_177(17), STR_175(9), STR_173(16), 
  5086 ;;		 -> STR_171(5), STR_169(8), STR_167(14), STR_165(16), 
  5087 ;;		 -> STR_163(9), STR_161(12), STR_159(10), STR_157(16), 
  5088 ;;		 -> STR_153(10), STR_149(14), STR_145(13), STR_137(8), 
  5089 ;;		 -> STR_135(8), STR_133(8), STR_123(8), STR_121(8), 
  5090 ;;		 -> STR_109(8), STR_87(9), STR_85(9), STR_63(9), 
  5091 ;;		 -> STR_61(9), STR_49(11), STR_47(11), STR_41(13), 
  5092 ;;		 -> STR_33(13), STR_31(19), STR_29(12), STR_27(19), 
  5093 ;;		 -> STR_5(15), STR_1(9), 
  5094 ;;  bottom          2    6[COMMON] PTR const unsigned char 
  5095 ;;		 -> STR_196(17), STR_194(13), STR_192(13), STR_190(13), 
  5096 ;;		 -> STR_188(13), STR_186(14), STR_184(14), STR_182(14), 
  5097 ;;		 -> STR_180(14), STR_178(8), STR_176(8), STR_174(9), 
  5098 ;;		 -> STR_172(9), STR_170(9), STR_168(14), STR_166(14), 
  5099 ;;		 -> STR_164(14), STR_162(14), STR_160(11), STR_158(13), 
  5100 ;;		 -> STR_154(10), STR_150(2), STR_146(2), STR_138(16), 
  5101 ;;		 -> STR_136(7), STR_134(10), STR_124(5), STR_122(9), 
  5102 ;;		 -> STR_110(4), STR_88(3), STR_86(1), STR_64(3), 
  5103 ;;		 -> STR_62(1), STR_50(5), STR_48(1), STR_42(6), 
  5104 ;;		 -> STR_34(6), STR_32(9), STR_30(13), STR_28(1), 
  5105 ;;		 -> STR_6(1), STR_2(17), 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;		None
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      void 
  5110 ;; Registers used:
  5111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/4
  5114 ;;		On exit  : 1F/4
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5117 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5120 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5121 ;;Total ram usage:        4 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:    3
  5124 ;; This function calls:
  5125 ;;		_clear_lcd
  5126 ;;		_i2c_Write_string
  5127 ;;		_i2c_first_line
  5128 ;;		_i2c_second_line
  5129 ;; This function is called by:
  5130 ;;		_main
  5131 ;;		_testjig_done
  5132 ;;		_print_error
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           
  5137                           ;psect for function _print_screen
  5138  0EC1                     _print_screen:	
  5139                           
  5140                           ;Multi_RX_testjig_v1.c: 1569: clear_lcd();
  5141                           
  5142                           ;incstack = 0
  5143                           ; Regs used in _print_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5144  0EC1  2741  318C         	fcall	_clear_lcd
  5145                           
  5146                           ;Multi_RX_testjig_v1.c: 1570: i2c_first_line();
  5147  0EC3  2730  318C         	fcall	_i2c_first_line
  5148                           
  5149                           ;Multi_RX_testjig_v1.c: 1571: i2c_Write_string(top);
  5150  0EC5  0875               	movf	print_screen@top+1,w
  5151  0EC6  00F2               	movwf	i2c_Write_string@data+1
  5152  0EC7  0874               	movf	print_screen@top,w
  5153  0EC8  00F1               	movwf	i2c_Write_string@data
  5154  0EC9  276E  318C         	fcall	_i2c_Write_string
  5155                           
  5156                           ;Multi_RX_testjig_v1.c: 1572: i2c_second_line();
  5157  0ECB  26D2  318C         	fcall	_i2c_second_line
  5158                           
  5159                           ;Multi_RX_testjig_v1.c: 1573: i2c_Write_string(bottom);
  5160  0ECD  0877               	movf	print_screen@bottom+1,w
  5161  0ECE  00F2               	movwf	i2c_Write_string@data+1
  5162  0ECF  0876               	movf	print_screen@bottom,w
  5163  0ED0  00F1               	movwf	i2c_Write_string@data
  5164  0ED1  2F6E               	ljmp	l2716
  5165  0ED2                     __end_of_print_screen:	
  5166  0ED2                     __ptext4:	
  5167 ;; *************** function _i2c_second_line *****************
  5168 ;; Defined at:
  5169 ;;		line 1192 in file "Multi_RX_testjig_v1.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;		None
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;		None
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      void 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2, status,0, pclath, cstack
  5178 ;; Tracked objects:
  5179 ;;		On entry : 1F/4
  5180 ;;		On exit  : 1F/4
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5186 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5187 ;;Total ram usage:        1 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; Hardware stack levels required when called:    2
  5190 ;; This function calls:
  5191 ;;		_i2c_Start
  5192 ;;		_i2c_Stop
  5193 ;;		_i2c_Write
  5194 ;; This function is called by:
  5195 ;;		_print_error
  5196 ;;		_print_screen
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           
  5201                           ;psect for function _i2c_second_line
  5202  0ED2                     _i2c_second_line:	
  5203                           
  5204                           ;Multi_RX_testjig_v1.c: 1194: i2c_Start();
  5205                           
  5206                           ;incstack = 0
  5207                           ; Regs used in _i2c_second_line: [wreg+status,2+status,0+pclath+cstack]
  5208  0ED2  27CD  318C         	fcall	_i2c_Start
  5209                           
  5210                           ;Multi_RX_testjig_v1.c: 1195: i2c_Write(0x7C);
  5211  0ED4  307C               	movlw	124
  5212  0ED5  27C1  318C         	fcall	_i2c_Write
  5213                           
  5214                           ;Multi_RX_testjig_v1.c: 1196: i2c_Write(0x00);
  5215  0ED7  3000               	movlw	0
  5216  0ED8  27C1  318C         	fcall	_i2c_Write
  5217                           
  5218                           ;Multi_RX_testjig_v1.c: 1197: i2c_Write(0xC0);
  5219  0EDA  30C0               	movlw	192
  5220  0EDB  27C1  318C         	fcall	_i2c_Write
  5221                           
  5222                           ;Multi_RX_testjig_v1.c: 1198: _delay((unsigned long)((27)*(16000000/4000000.0)));
  5223  0EDD  3023               	movlw	35
  5224  0EDE  00F1               	movwf	??_i2c_second_line
  5225  0EDF                     u5207:	
  5226  0EDF  0BF1               	decfsz	??_i2c_second_line,f
  5227  0EE0  2EDF               	goto	u5207
  5228  0EE1  3200               	nop2	;nop
  5229                           
  5230                           ;Multi_RX_testjig_v1.c: 1199: i2c_Stop();
  5231  0EE2  2FD2               	ljmp	l2714
  5232  0EE3                     __end_of_i2c_second_line:	
  5233  0EE3                     __ptext2:	
  5234 ;; *************** function _print_error *****************
  5235 ;; Defined at:
  5236 ;;		line 1544 in file "Multi_RX_testjig_v1.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  top             2    8[COMMON] PTR const unsigned char 
  5239 ;;		 -> STR_155(12), STR_151(12), STR_147(12), STR_143(12), 
  5240 ;;		 -> STR_141(8), STR_139(8), STR_131(13), STR_129(13), 
  5241 ;;		 -> STR_127(12), STR_125(12), STR_119(12), STR_117(12), 
  5242 ;;		 -> STR_115(12), STR_113(12), STR_111(12), STR_107(12), 
  5243 ;;		 -> STR_105(10), STR_103(12), STR_101(9), STR_99(12), 
  5244 ;;		 -> STR_97(12), STR_95(9), STR_93(9), STR_91(12), 
  5245 ;;		 -> STR_89(10), STR_83(12), STR_81(10), STR_79(12), 
  5246 ;;		 -> STR_77(9), STR_75(12), STR_73(12), STR_71(9), 
  5247 ;;		 -> STR_69(9), STR_67(12), STR_65(10), STR_59(19), 
  5248 ;;		 -> STR_57(12), STR_55(16), STR_53(12), STR_51(19), 
  5249 ;;		 -> STR_45(12), STR_43(12), STR_39(12), STR_37(13), 
  5250 ;;		 -> STR_35(12), STR_25(14), STR_23(11), STR_21(15), 
  5251 ;;		 -> STR_19(15), STR_17(14), STR_15(14), STR_13(14), 
  5252 ;;		 -> STR_11(11), STR_9(14), STR_7(14), STR_3(9), 
  5253 ;;  bottom          2   10[COMMON] PTR const unsigned char 
  5254 ;;		 -> STR_156(4), STR_152(4), STR_148(4), STR_144(4), 
  5255 ;;		 -> STR_142(15), STR_140(17), STR_132(13), STR_130(14), 
  5256 ;;		 -> STR_128(4), STR_126(4), STR_120(13), STR_118(16), 
  5257 ;;		 -> STR_116(14), STR_114(4), STR_112(4), STR_108(4), 
  5258 ;;		 -> STR_106(9), STR_104(3), STR_102(7), STR_100(4), 
  5259 ;;		 -> STR_98(4), STR_96(15), STR_94(16), STR_92(3), 
  5260 ;;		 -> STR_90(9), STR_84(3), STR_82(9), STR_80(3), 
  5261 ;;		 -> STR_78(7), STR_76(4), STR_74(4), STR_72(15), 
  5262 ;;		 -> STR_70(16), STR_68(3), STR_66(9), STR_60(9), 
  5263 ;;		 -> STR_58(3), STR_56(7), STR_54(3), STR_52(9), 
  5264 ;;		 -> STR_46(18), STR_44(14), STR_40(3), STR_38(12), 
  5265 ;;		 -> STR_36(3), STR_26(12), STR_24(11), STR_22(13), 
  5266 ;;		 -> STR_20(13), STR_18(13), STR_16(13), STR_14(12), 
  5267 ;;		 -> STR_12(11), STR_10(13), STR_8(13), STR_4(14), 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;		None
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      void 
  5272 ;; Registers used:
  5273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/5
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5279 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5281 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5282 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5283 ;;Total ram usage:        7 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    4
  5286 ;; This function calls:
  5287 ;;		_buzz_one
  5288 ;;		_clear_lcd
  5289 ;;		_debug_fast_tx
  5290 ;;		_i2c_Write_string
  5291 ;;		_i2c_first_line
  5292 ;;		_i2c_second_line
  5293 ;;		_power_supply_set
  5294 ;;		_print_screen
  5295 ;; This function is called by:
  5296 ;;		_main
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           
  5301                           ;psect for function _print_error
  5302  0EE3                     _print_error:	
  5303                           
  5304                           ;Multi_RX_testjig_v1.c: 1546: power_supply_set(3);
  5305                           
  5306                           ;incstack = 0
  5307                           ; Regs used in _print_error: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5308  0EE3  3003               	movlw	3
  5309  0EE4  27DF  318C         	fcall	_power_supply_set
  5310                           
  5311                           ;Multi_RX_testjig_v1.c: 1547: LATA7 = 0;
  5312  0EE6  0022               	movlb	2	; select bank2
  5313  0EE7  138C               	bcf	12,7	;volatile
  5314                           
  5315                           ;Multi_RX_testjig_v1.c: 1548: LATB5 = 0;
  5316  0EE8  128D               	bcf	13,5	;volatile
  5317                           
  5318                           ;Multi_RX_testjig_v1.c: 1549: LATA6 = 0;
  5319  0EE9  130C               	bcf	12,6	;volatile
  5320                           
  5321                           ;Multi_RX_testjig_v1.c: 1550: RE0 = 0;
  5322  0EEA  0020               	movlb	0	; select bank0
  5323  0EEB  1010               	bcf	16,0	;volatile
  5324                           
  5325                           ;Multi_RX_testjig_v1.c: 1551: debug_fast_tx(12345);
  5326  0EEC  3039               	movlw	57
  5327  0EED  00F0               	movwf	debug_fast_tx@data
  5328  0EEE  3030               	movlw	48
  5329  0EEF  00F1               	movwf	debug_fast_tx@data+1
  5330  0EF0  2694  318C         	fcall	_debug_fast_tx
  5331                           
  5332                           ;Multi_RX_testjig_v1.c: 1552: buzz_one(1000);
  5333  0EF2  30E8               	movlw	232
  5334  0EF3  00F0               	movwf	buzz_one@time
  5335  0EF4  3003               	movlw	3
  5336  0EF5  00F1               	movwf	buzz_one@time+1
  5337  0EF6  27D7  318C         	fcall	_buzz_one
  5338  0EF8                     l3210:	
  5339                           
  5340                           ;Multi_RX_testjig_v1.c: 1554: {
  5341                           ;Multi_RX_testjig_v1.c: 1555: clear_lcd();
  5342  0EF8  2741  318C         	fcall	_clear_lcd
  5343                           
  5344                           ;Multi_RX_testjig_v1.c: 1556: i2c_first_line();
  5345  0EFA  2730  318C         	fcall	_i2c_first_line
  5346                           
  5347                           ;Multi_RX_testjig_v1.c: 1557: i2c_Write_string(top);
  5348  0EFC  0879               	movf	print_error@top+1,w
  5349  0EFD  00F2               	movwf	i2c_Write_string@data+1
  5350  0EFE  0878               	movf	print_error@top,w
  5351  0EFF  00F1               	movwf	i2c_Write_string@data
  5352  0F00  276E  318C         	fcall	_i2c_Write_string
  5353                           
  5354                           ;Multi_RX_testjig_v1.c: 1558: i2c_second_line();
  5355  0F02  26D2  318C         	fcall	_i2c_second_line
  5356                           
  5357                           ;Multi_RX_testjig_v1.c: 1559: i2c_Write_string(bottom);
  5358  0F04  087B               	movf	print_error@bottom+1,w
  5359  0F05  00F2               	movwf	i2c_Write_string@data+1
  5360  0F06  087A               	movf	print_error@bottom,w
  5361  0F07  00F1               	movwf	i2c_Write_string@data
  5362  0F08  276E  318C         	fcall	_i2c_Write_string
  5363                           
  5364                           ;Multi_RX_testjig_v1.c: 1560: _delay((unsigned long)((2000)*(16000000/4000.0)));
  5365  0F0A  3029               	movlw	41
  5366  0F0B  0020               	movlb	0	; select bank0
  5367  0F0C  00A2               	movwf	??_print_error+2
  5368  0F0D  3096               	movlw	150
  5369  0F0E  00A1               	movwf	??_print_error+1
  5370  0F0F  30A6               	movlw	166
  5371  0F10  00A0               	movwf	??_print_error
  5372  0F11                     u5187:	
  5373  0F11  0BA0               	decfsz	??_print_error,f
  5374  0F12  2F11               	goto	u5187
  5375  0F13  0BA1               	decfsz	??_print_error+1,f
  5376  0F14  2F11               	goto	u5187
  5377  0F15  0BA2               	decfsz	??_print_error+2,f
  5378  0F16  2F11               	goto	u5187
  5379                           
  5380                           ;Multi_RX_testjig_v1.c: 1561: print_screen("Press START", " to restart test");
  5381  0F17  308E               	movlw	low ((STR_188+1)| (0+32768))
  5382  0F18  00F4               	movwf	print_screen@top
  5383  0F19  3089               	movlw	high ((STR_188+1)| (0+32768))
  5384  0F1A  00F5               	movwf	print_screen@top+1
  5385  0F1B  3020               	movlw	low (STR_196| (0+32768))
  5386  0F1C  00F6               	movwf	print_screen@bottom
  5387  0F1D  3088               	movlw	high (STR_196| (0+32768))
  5388  0F1E  00F7               	movwf	print_screen@bottom+1
  5389  0F1F  26C1  318C         	fcall	_print_screen
  5390                           
  5391                           ;Multi_RX_testjig_v1.c: 1563: _delay((unsigned long)((1200)*(16000000/4000.0)));
  5392  0F21  3019               	movlw	25
  5393  0F22  0020               	movlb	0	; select bank0
  5394  0F23  00A2               	movwf	??_print_error+2
  5395  0F24  305A               	movlw	90
  5396  0F25  00A1               	movwf	??_print_error+1
  5397  0F26  30C8               	movlw	200
  5398  0F27  00A0               	movwf	??_print_error
  5399  0F28                     u5197:	
  5400  0F28  0BA0               	decfsz	??_print_error,f
  5401  0F29  2F28               	goto	u5197
  5402  0F2A  0BA1               	decfsz	??_print_error+1,f
  5403  0F2B  2F28               	goto	u5197
  5404  0F2C  0BA2               	decfsz	??_print_error+2,f
  5405  0F2D  2F28               	goto	u5197
  5406  0F2E  3200               	nop2
  5407  0F2F  2EF8               	goto	l3210
  5408  0F30                     __end_of_print_error:	
  5409  0F30                     __ptext5:	
  5410 ;; *************** function _i2c_first_line *****************
  5411 ;; Defined at:
  5412 ;;		line 1182 in file "Multi_RX_testjig_v1.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;		None
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;		None
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  1    wreg      void 
  5419 ;; Registers used:
  5420 ;;		wreg, status,2, status,0, pclath, cstack
  5421 ;; Tracked objects:
  5422 ;;		On entry : 1F/4
  5423 ;;		On exit  : 1F/4
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5428 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5430 ;;Total ram usage:        1 bytes
  5431 ;; Hardware stack levels used:    1
  5432 ;; Hardware stack levels required when called:    2
  5433 ;; This function calls:
  5434 ;;		_i2c_Start
  5435 ;;		_i2c_Stop
  5436 ;;		_i2c_Write
  5437 ;; This function is called by:
  5438 ;;		_print_error
  5439 ;;		_print_screen
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443                           
  5444                           ;psect for function _i2c_first_line
  5445  0F30                     _i2c_first_line:	
  5446                           
  5447                           ;Multi_RX_testjig_v1.c: 1184: i2c_Start();
  5448                           
  5449                           ;incstack = 0
  5450                           ; Regs used in _i2c_first_line: [wreg+status,2+status,0+pclath+cstack]
  5451  0F30  27CD  318C         	fcall	_i2c_Start
  5452                           
  5453                           ;Multi_RX_testjig_v1.c: 1185: i2c_Write(0x7C);
  5454  0F32  307C               	movlw	124
  5455  0F33  27C1  318C         	fcall	_i2c_Write
  5456                           
  5457                           ;Multi_RX_testjig_v1.c: 1186: i2c_Write(0x00);
  5458  0F35  3000               	movlw	0
  5459  0F36  27C1  318C         	fcall	_i2c_Write
  5460                           
  5461                           ;Multi_RX_testjig_v1.c: 1187: i2c_Write(0x80);
  5462  0F38  3080               	movlw	128
  5463  0F39  27C1  318C         	fcall	_i2c_Write
  5464                           
  5465                           ;Multi_RX_testjig_v1.c: 1188: _delay((unsigned long)((27)*(16000000/4000000.0)));
  5466  0F3B  3023               	movlw	35
  5467  0F3C  00F1               	movwf	??_i2c_first_line
  5468  0F3D                     u5217:	
  5469  0F3D  0BF1               	decfsz	??_i2c_first_line,f
  5470  0F3E  2F3D               	goto	u5217
  5471  0F3F  3200               	nop2	;nop
  5472                           
  5473                           ;Multi_RX_testjig_v1.c: 1189: i2c_Stop();
  5474  0F40  2FD2               	ljmp	l2714
  5475  0F41                     __end_of_i2c_first_line:	
  5476  0F41                     __ptext7:	
  5477 ;; *************** function _clear_lcd *****************
  5478 ;; Defined at:
  5479 ;;		line 1172 in file "Multi_RX_testjig_v1.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;		None
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;		None
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  1    wreg      void 
  5486 ;; Registers used:
  5487 ;;		wreg, status,2, status,0, pclath, cstack
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/2
  5490 ;;		On exit  : 1F/4
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5497 ;;Total ram usage:        2 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; Hardware stack levels required when called:    2
  5500 ;; This function calls:
  5501 ;;		_i2c_Start
  5502 ;;		_i2c_Stop
  5503 ;;		_i2c_Write
  5504 ;; This function is called by:
  5505 ;;		_print_error
  5506 ;;		_print_screen
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           
  5511                           ;psect for function _clear_lcd
  5512  0F41                     _clear_lcd:	
  5513                           
  5514                           ;Multi_RX_testjig_v1.c: 1174: i2c_Start();
  5515                           
  5516                           ;incstack = 0
  5517                           ; Regs used in _clear_lcd: [wreg+status,2+status,0+pclath+cstack]
  5518  0F41  27CD  318C         	fcall	_i2c_Start
  5519                           
  5520                           ;Multi_RX_testjig_v1.c: 1175: i2c_Write(0x7C);
  5521  0F43  307C               	movlw	124
  5522  0F44  27C1  318C         	fcall	_i2c_Write
  5523                           
  5524                           ;Multi_RX_testjig_v1.c: 1176: i2c_Write(0x00);
  5525  0F46  3000               	movlw	0
  5526  0F47  27C1  318C         	fcall	_i2c_Write
  5527                           
  5528                           ;Multi_RX_testjig_v1.c: 1177: i2c_Write(0x01);
  5529  0F49  3001               	movlw	1
  5530  0F4A  27C1  318C         	fcall	_i2c_Write
  5531                           
  5532                           ;Multi_RX_testjig_v1.c: 1178: _delay((unsigned long)((2)*(16000000/4000.0)));
  5533  0F4C  300B               	movlw	11
  5534  0F4D  00F2               	movwf	??_clear_lcd+1
  5535  0F4E  3062               	movlw	98
  5536  0F4F  00F1               	movwf	??_clear_lcd
  5537  0F50                     u5227:	
  5538  0F50  0BF1               	decfsz	??_clear_lcd,f
  5539  0F51  2F50               	goto	u5227
  5540  0F52  0BF2               	decfsz	??_clear_lcd+1,f
  5541  0F53  2F50               	goto	u5227
  5542  0F54  0000               	nop
  5543                           
  5544                           ;Multi_RX_testjig_v1.c: 1179: i2c_Stop();
  5545  0F55  2FD2               	ljmp	l2714
  5546  0F56                     __end_of_clear_lcd:	
  5547  0F56                     __ptext29:	
  5548 ;; *************** function _digitalpot *****************
  5549 ;; Defined at:
  5550 ;;		line 2050 in file "Multi_RX_testjig_v1.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;  value           1    wreg     unsigned char 
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;  value           1    3[COMMON] unsigned char 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  1    wreg      void 
  5557 ;; Registers used:
  5558 ;;		wreg, status,2, status,0, pclath, cstack
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/4
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5566 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5567 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5568 ;;Total ram usage:        3 bytes
  5569 ;; Hardware stack levels used:    1
  5570 ;; Hardware stack levels required when called:    2
  5571 ;; This function calls:
  5572 ;;		_i2c_Start
  5573 ;;		_i2c_Stop
  5574 ;;		_i2c_Write
  5575 ;; This function is called by:
  5576 ;;		_Vout_set
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           
  5581                           ;psect for function _digitalpot
  5582  0F56                     _digitalpot:	
  5583                           
  5584                           ;incstack = 0
  5585                           ; Regs used in _digitalpot: [wreg+status,2+status,0+pclath+cstack]
  5586                           ;digitalpot@value stored from wreg
  5587  0F56  00F3               	movwf	digitalpot@value
  5588                           
  5589                           ;Multi_RX_testjig_v1.c: 2052: i2c_Start();
  5590  0F57  27CD  318C         	fcall	_i2c_Start
  5591                           
  5592                           ;Multi_RX_testjig_v1.c: 2053: i2c_Write(0x5C);
  5593  0F59  305C               	movlw	92
  5594  0F5A  27C1  318C         	fcall	_i2c_Write
  5595                           
  5596                           ;Multi_RX_testjig_v1.c: 2054: i2c_Write(0b00000000);
  5597  0F5C  3000               	movlw	0
  5598  0F5D  27C1  318C         	fcall	_i2c_Write
  5599                           
  5600                           ;Multi_RX_testjig_v1.c: 2055: i2c_Write(value);
  5601  0F5F  0873               	movf	digitalpot@value,w
  5602  0F60  27C1  318C         	fcall	_i2c_Write
  5603                           
  5604                           ;Multi_RX_testjig_v1.c: 2056: i2c_Stop();
  5605  0F62  27D2  318C         	fcall	_i2c_Stop
  5606                           
  5607                           ;Multi_RX_testjig_v1.c: 2057: _delay((unsigned long)((20)*(16000000/4000.0)));
  5608  0F64  3068               	movlw	104
  5609  0F65  00F2               	movwf	??_digitalpot+1
  5610  0F66  30E4               	movlw	228
  5611  0F67  00F1               	movwf	??_digitalpot
  5612  0F68                     u5257:	
  5613  0F68  0BF1               	decfsz	??_digitalpot,f
  5614  0F69  2F68               	goto	u5257
  5615  0F6A  0BF2               	decfsz	??_digitalpot+1,f
  5616  0F6B  2F68               	goto	u5257
  5617  0F6C  0000               	nop
  5618  0F6D  0008               	return
  5619  0F6E                     __end_of_digitalpot:	
  5620  0F6E                     __ptext6:	
  5621 ;; *************** function _i2c_Write_string *****************
  5622 ;; Defined at:
  5623 ;;		line 1104 in file "Multi_RX_testjig_v1.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  data            2    1[COMMON] PTR const unsigned char 
  5626 ;;		 -> STR_196(17), STR_195(12), STR_194(13), STR_193(17), 
  5627 ;;		 -> STR_192(13), STR_191(16), STR_190(13), STR_189(12), 
  5628 ;;		 -> STR_188(13), STR_187(15), STR_186(14), STR_185(17), 
  5629 ;;		 -> STR_184(14), STR_183(16), STR_182(14), STR_181(12), 
  5630 ;;		 -> STR_180(14), STR_179(15), STR_178(8), STR_177(17), 
  5631 ;;		 -> STR_176(8), STR_175(9), STR_174(9), STR_173(16), 
  5632 ;;		 -> STR_172(9), STR_171(5), STR_170(9), STR_169(8), 
  5633 ;;		 -> STR_168(14), STR_167(14), STR_166(14), STR_165(16), 
  5634 ;;		 -> STR_164(14), STR_163(9), STR_162(14), STR_161(12), 
  5635 ;;		 -> STR_160(11), STR_159(10), STR_158(13), STR_157(16), 
  5636 ;;		 -> STR_156(4), STR_155(12), STR_154(10), STR_153(10), 
  5637 ;;		 -> STR_152(4), STR_151(12), STR_150(2), STR_149(14), 
  5638 ;;		 -> STR_148(4), STR_147(12), STR_146(2), STR_145(13), 
  5639 ;;		 -> STR_144(4), STR_143(12), STR_142(15), STR_141(8), 
  5640 ;;		 -> STR_140(17), STR_139(8), STR_138(16), STR_137(8), 
  5641 ;;		 -> STR_136(7), STR_135(8), STR_134(10), STR_133(8), 
  5642 ;;		 -> STR_132(13), STR_131(13), STR_130(14), STR_129(13), 
  5643 ;;		 -> STR_128(4), STR_127(12), STR_126(4), STR_125(12), 
  5644 ;;		 -> STR_124(5), STR_123(8), STR_122(9), STR_121(8), 
  5645 ;;		 -> STR_120(13), STR_119(12), STR_118(16), STR_117(12), 
  5646 ;;		 -> STR_116(14), STR_115(12), STR_114(4), STR_113(12), 
  5647 ;;		 -> STR_112(4), STR_111(12), STR_110(4), STR_109(8), 
  5648 ;;		 -> STR_108(4), STR_107(12), STR_106(9), STR_105(10), 
  5649 ;;		 -> STR_104(3), STR_103(12), STR_102(7), STR_101(9), 
  5650 ;;		 -> STR_100(4), STR_99(12), STR_98(4), STR_97(12), 
  5651 ;;		 -> STR_96(15), STR_95(9), STR_94(16), STR_93(9), 
  5652 ;;		 -> STR_92(3), STR_91(12), STR_90(9), STR_89(10), 
  5653 ;;		 -> STR_88(3), STR_87(9), STR_86(1), STR_85(9), 
  5654 ;;		 -> STR_84(3), STR_83(12), STR_82(9), STR_81(10), 
  5655 ;;		 -> STR_80(3), STR_79(12), STR_78(7), STR_77(9), 
  5656 ;;		 -> STR_76(4), STR_75(12), STR_74(4), STR_73(12), 
  5657 ;;		 -> STR_72(15), STR_71(9), STR_70(16), STR_69(9), 
  5658 ;;		 -> STR_68(3), STR_67(12), STR_66(9), STR_65(10), 
  5659 ;;		 -> STR_64(3), STR_63(9), STR_62(1), STR_61(9), 
  5660 ;;		 -> STR_60(9), STR_59(19), STR_58(3), STR_57(12), 
  5661 ;;		 -> STR_56(7), STR_55(16), STR_54(3), STR_53(12), 
  5662 ;;		 -> STR_52(9), STR_51(19), STR_50(5), STR_49(11), 
  5663 ;;		 -> STR_48(1), STR_47(11), STR_46(18), STR_45(12), 
  5664 ;;		 -> STR_44(14), STR_43(12), STR_42(6), STR_41(13), 
  5665 ;;		 -> STR_40(3), STR_39(12), STR_38(12), STR_37(13), 
  5666 ;;		 -> STR_36(3), STR_35(12), STR_34(6), STR_33(13), 
  5667 ;;		 -> STR_32(9), STR_31(19), STR_30(13), STR_29(12), 
  5668 ;;		 -> STR_28(1), STR_27(19), STR_26(12), STR_25(14), 
  5669 ;;		 -> STR_24(11), STR_23(11), STR_22(13), STR_21(15), 
  5670 ;;		 -> STR_20(13), STR_19(15), STR_18(13), STR_17(14), 
  5671 ;;		 -> STR_16(13), STR_15(14), STR_14(12), STR_13(14), 
  5672 ;;		 -> STR_12(11), STR_11(11), STR_10(13), STR_9(14), 
  5673 ;;		 -> STR_8(13), STR_7(14), STR_6(1), STR_5(15), 
  5674 ;;		 -> STR_4(14), STR_3(9), STR_2(17), STR_1(9), 
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;		None
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5681 ;; Tracked objects:
  5682 ;;		On entry : 1F/4
  5683 ;;		On exit  : 1F/4
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5688 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5689 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5690 ;;Total ram usage:        3 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; Hardware stack levels required when called:    2
  5693 ;; This function calls:
  5694 ;;		_i2c_Start
  5695 ;;		_i2c_Stop
  5696 ;;		_i2c_Write
  5697 ;; This function is called by:
  5698 ;;		_print_error
  5699 ;;		_print_screen
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           
  5704                           ;psect for function _i2c_Write_string
  5705  0F6E                     _i2c_Write_string:	
  5706  0F6E                     l2716:	
  5707                           ;incstack = 0
  5708                           ; Regs used in _i2c_Write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5709                           
  5710                           
  5711                           ;Multi_RX_testjig_v1.c: 1106: i2c_Start();
  5712  0F6E  27CD  318C         	fcall	_i2c_Start
  5713                           
  5714                           ;Multi_RX_testjig_v1.c: 1107: i2c_Write(0x7C);
  5715  0F70  307C               	movlw	124
  5716  0F71  27C1  318C         	fcall	_i2c_Write
  5717                           
  5718                           ;Multi_RX_testjig_v1.c: 1108: i2c_Write(0x40);
  5719  0F73  3040               	movlw	64
  5720  0F74  27C1  318C         	fcall	_i2c_Write
  5721  0F76                     l2726:	
  5722                           ;Multi_RX_testjig_v1.c: 1110: while(*data != (0))
  5723                           
  5724  0F76  0871               	movf	i2c_Write_string@data,w
  5725  0F77  0084               	movwf	4
  5726  0F78  0872               	movf	i2c_Write_string@data+1,w
  5727  0F79  0085               	movwf	5
  5728  0F7A  0012               	moviw fsr0++
  5729  0F7B  1903               	btfsc	3,2
  5730  0F7C  2F88               	goto	l2728
  5731                           
  5732                           ;Multi_RX_testjig_v1.c: 1111: {
  5733                           ;Multi_RX_testjig_v1.c: 1112: i2c_Write(*data);
  5734  0F7D  0871               	movf	i2c_Write_string@data,w
  5735  0F7E  0084               	movwf	4
  5736  0F7F  0872               	movf	i2c_Write_string@data+1,w
  5737  0F80  0085               	movwf	5
  5738  0F81  0800               	movf	0,w	;code access
  5739  0F82  27C1  318C         	fcall	_i2c_Write
  5740                           
  5741                           ;Multi_RX_testjig_v1.c: 1113: data++;
  5742  0F84  0AF1               	incf	i2c_Write_string@data,f
  5743  0F85  1903               	skipnz
  5744  0F86  0AF2               	incf	i2c_Write_string@data+1,f
  5745  0F87  2F76               	goto	l2726
  5746  0F88                     l2728:	
  5747                           
  5748                           ;Multi_RX_testjig_v1.c: 1114: }
  5749                           ;Multi_RX_testjig_v1.c: 1115: i2c_Stop();
  5750  0F88  2FD2               	ljmp	l2714
  5751  0F89                     __end_of_i2c_Write_string:	
  5752  0F89                     __ptext17:	
  5753 ;; *************** function _init_i2c_lcd_5v *****************
  5754 ;; Defined at:
  5755 ;;		line 1128 in file "Multi_RX_testjig_v1.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;  contrast        1    wreg     unsigned char 
  5758 ;;  single1_doub    1    1[COMMON] unsigned char 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  contrast        1    4[COMMON] unsigned char 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      void 
  5763 ;; Registers used:
  5764 ;;		wreg, status,2, status,0, pclath, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 1F/4
  5767 ;;		On exit  : 1F/4
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5770 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5773 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5774 ;;Total ram usage:        4 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:    2
  5777 ;; This function calls:
  5778 ;;		_i2c_Start
  5779 ;;		_i2c_Stop
  5780 ;;		_i2c_Write
  5781 ;; This function is called by:
  5782 ;;		_main
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           
  5787                           ;psect for function _init_i2c_lcd_5v
  5788  0F89                     _init_i2c_lcd_5v:	
  5789                           
  5790                           ;incstack = 0
  5791                           ; Regs used in _init_i2c_lcd_5v: [wreg+status,2+status,0+pclath+cstack]
  5792                           ;init_i2c_lcd_5v@contrast stored from wreg
  5793  0F89  00F4               	movwf	init_i2c_lcd_5v@contrast
  5794                           
  5795                           ;Multi_RX_testjig_v1.c: 1130: i2c_Start();
  5796  0F8A  27CD  318C         	fcall	_i2c_Start
  5797                           
  5798                           ;Multi_RX_testjig_v1.c: 1131: i2c_Write(0x7C);
  5799  0F8C  307C               	movlw	124
  5800  0F8D  27C1  318C         	fcall	_i2c_Write
  5801                           
  5802                           ;Multi_RX_testjig_v1.c: 1132: i2c_Write(0x00);
  5803  0F8F  3000               	movlw	0
  5804  0F90  27C1  318C         	fcall	_i2c_Write
  5805                           
  5806                           ;Multi_RX_testjig_v1.c: 1133: i2c_Write(0x39);
  5807  0F92  3039               	movlw	57
  5808  0F93  27C1  318C         	fcall	_i2c_Write
  5809                           
  5810                           ;Multi_RX_testjig_v1.c: 1134: i2c_Write(0x1C);
  5811  0F95  301C               	movlw	28
  5812  0F96  27C1  318C         	fcall	_i2c_Write
  5813                           
  5814                           ;Multi_RX_testjig_v1.c: 1135: i2c_Write(0x70 | contrast);
  5815  0F98  0874               	movf	init_i2c_lcd_5v@contrast,w
  5816  0F99  3870               	iorlw	112
  5817  0F9A  27C1  318C         	fcall	_i2c_Write
  5818                           
  5819                           ;Multi_RX_testjig_v1.c: 1136: i2c_Write(0x50);
  5820  0F9C  3050               	movlw	80
  5821  0F9D  27C1  318C         	fcall	_i2c_Write
  5822                           
  5823                           ;Multi_RX_testjig_v1.c: 1137: i2c_Write(0x6C);
  5824  0F9F  306C               	movlw	108
  5825  0FA0  27C1  318C         	fcall	_i2c_Write
  5826                           
  5827                           ;Multi_RX_testjig_v1.c: 1138: if(single1_double2 == 1)
  5828  0FA2  0B71               	decfsz	init_i2c_lcd_5v@single1_double2,w
  5829  0FA3  2FA7               	goto	l3190
  5830                           
  5831                           ;Multi_RX_testjig_v1.c: 1139: i2c_Write(0x38);
  5832  0FA4  3038               	movlw	56
  5833  0FA5  27C1  318C         	fcall	_i2c_Write
  5834  0FA7                     l3190:	
  5835                           
  5836                           ;Multi_RX_testjig_v1.c: 1140: if(single1_double2 == 2)
  5837  0FA7  3002               	movlw	2
  5838  0FA8  0671               	xorwf	init_i2c_lcd_5v@single1_double2,w
  5839  0FA9  1D03               	btfss	3,2
  5840  0FAA  2FAE               	goto	l538
  5841                           
  5842                           ;Multi_RX_testjig_v1.c: 1141: i2c_Write(0x34);
  5843  0FAB  3034               	movlw	52
  5844  0FAC  27C1  318C         	fcall	_i2c_Write
  5845  0FAE                     l538:	
  5846                           
  5847                           ;Multi_RX_testjig_v1.c: 1142: i2c_Write(0x0C);
  5848  0FAE  300C               	movlw	12
  5849  0FAF  27C1  318C         	fcall	_i2c_Write
  5850                           
  5851                           ;Multi_RX_testjig_v1.c: 1143: i2c_Write(0x06);
  5852  0FB1  3006               	movlw	6
  5853  0FB2  27C1  318C         	fcall	_i2c_Write
  5854                           
  5855                           ;Multi_RX_testjig_v1.c: 1144: i2c_Write(0x01);
  5856  0FB4  3001               	movlw	1
  5857  0FB5  27C1  318C         	fcall	_i2c_Write
  5858                           
  5859                           ;Multi_RX_testjig_v1.c: 1145: _delay((unsigned long)((2)*(16000000/4000.0)));
  5860  0FB7  300B               	movlw	11
  5861  0FB8  00F3               	movwf	??_init_i2c_lcd_5v+1
  5862  0FB9  3062               	movlw	98
  5863  0FBA  00F2               	movwf	??_init_i2c_lcd_5v
  5864  0FBB                     u5237:	
  5865  0FBB  0BF2               	decfsz	??_init_i2c_lcd_5v,f
  5866  0FBC  2FBB               	goto	u5237
  5867  0FBD  0BF3               	decfsz	??_init_i2c_lcd_5v+1,f
  5868  0FBE  2FBB               	goto	u5237
  5869  0FBF  0000               	nop
  5870                           
  5871                           ;Multi_RX_testjig_v1.c: 1146: i2c_Stop();
  5872  0FC0  2FD2               	ljmp	l2714
  5873  0FC1                     __end_of_init_i2c_lcd_5v:	
  5874  0FC1                     __ptext30:	
  5875 ;; *************** function _i2c_Write *****************
  5876 ;; Defined at:
  5877 ;;		line 1090 in file "Multi_RX_testjig_v1.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  data            1    wreg     unsigned char 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;  data            1    0[COMMON] unsigned char 
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  1    wreg      void 
  5884 ;; Registers used:
  5885 ;;		wreg, status,2
  5886 ;; Tracked objects:
  5887 ;;		On entry : 1F/4
  5888 ;;		On exit  : 1F/4
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5895 ;;Total ram usage:        1 bytes
  5896 ;; Hardware stack levels used:    1
  5897 ;; Hardware stack levels required when called:    1
  5898 ;; This function calls:
  5899 ;;		Nothing
  5900 ;; This function is called by:
  5901 ;;		_i2c_Write_string
  5902 ;;		_i2c_write_char
  5903 ;;		_init_i2c_lcd_5v
  5904 ;;		_clear_lcd
  5905 ;;		_i2c_first_line
  5906 ;;		_i2c_second_line
  5907 ;;		_lcd_set_cursor
  5908 ;;		_digitalpot
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           
  5913                           ;psect for function _i2c_Write
  5914  0FC1                     _i2c_Write:	
  5915                           
  5916                           ;incstack = 0
  5917                           ; Regs used in _i2c_Write: [wreg+status,2]
  5918                           ;i2c_Write@data stored from wreg
  5919  0FC1  00F0               	movwf	i2c_Write@data
  5920                           
  5921                           ;Multi_RX_testjig_v1.c: 1092: SSP1BUF = data;
  5922  0FC2  0870               	movf	i2c_Write@data,w
  5923  0FC3  0091               	movwf	17	;volatile
  5924  0FC4                     l513:	
  5925                           ;Multi_RX_testjig_v1.c: 1093: while(SSP1STATbits.BF == 1);
  5926                           
  5927  0FC4  1814               	btfsc	20,0	;volatile
  5928  0FC5  2FC4               	goto	l513
  5929  0FC6                     l2710:	
  5930  0FC6  0816               	movf	22,w	;volatile
  5931  0FC7  391F               	andlw	31
  5932  0FC8  1D03               	btfss	3,2
  5933  0FC9  2FC6               	goto	l2710
  5934  0FCA  1D14               	btfss	20,2	;volatile
  5935  0FCB  0008               	return
  5936  0FCC  2FC6               	goto	l2710
  5937  0FCD                     __end_of_i2c_Write:	
  5938  0FCD                     __ptext32:	
  5939 ;; *************** function _i2c_Start *****************
  5940 ;; Defined at:
  5941 ;;		line 1081 in file "Multi_RX_testjig_v1.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;		None
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;		None
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  1    wreg      void 
  5948 ;; Registers used:
  5949 ;;		None
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/4
  5952 ;;		On exit  : 1F/4
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5959 ;;Total ram usage:        0 bytes
  5960 ;; Hardware stack levels used:    1
  5961 ;; Hardware stack levels required when called:    1
  5962 ;; This function calls:
  5963 ;;		Nothing
  5964 ;; This function is called by:
  5965 ;;		_i2c_Write_string
  5966 ;;		_i2c_write_char
  5967 ;;		_init_i2c_lcd_5v
  5968 ;;		_clear_lcd
  5969 ;;		_i2c_first_line
  5970 ;;		_i2c_second_line
  5971 ;;		_lcd_set_cursor
  5972 ;;		_digitalpot
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           
  5977                           ;psect for function _i2c_Start
  5978  0FCD                     _i2c_Start:	
  5979                           
  5980                           ;Multi_RX_testjig_v1.c: 1084: SSP1CON2bits.SEN = 1;
  5981                           
  5982                           ;incstack = 0
  5983                           ; Regs used in _i2c_Start: []
  5984  0FCD  0024               	movlb	4	; select bank4
  5985  0FCE  1416               	bsf	22,0	;volatile
  5986  0FCF                     l507:	
  5987                           ;Multi_RX_testjig_v1.c: 1086: while(SSP1CON2bits.SEN == 1);
  5988                           
  5989  0FCF  1C16               	btfss	22,0	;volatile
  5990  0FD0  0008               	return
  5991  0FD1  2FCF               	goto	l507
  5992  0FD2                     __end_of_i2c_Start:	
  5993  0FD2                     __ptext31:	
  5994 ;; *************** function _i2c_Stop *****************
  5995 ;; Defined at:
  5996 ;;		line 1097 in file "Multi_RX_testjig_v1.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;		None
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;		None
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  1    wreg      void 
  6003 ;; Registers used:
  6004 ;;		None
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/4
  6007 ;;		On exit  : 1F/4
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6014 ;;Total ram usage:        0 bytes
  6015 ;; Hardware stack levels used:    1
  6016 ;; Hardware stack levels required when called:    1
  6017 ;; This function calls:
  6018 ;;		Nothing
  6019 ;; This function is called by:
  6020 ;;		_i2c_Write_string
  6021 ;;		_i2c_write_char
  6022 ;;		_init_i2c_lcd_5v
  6023 ;;		_clear_lcd
  6024 ;;		_i2c_first_line
  6025 ;;		_i2c_second_line
  6026 ;;		_lcd_set_cursor
  6027 ;;		_digitalpot
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           
  6032                           ;psect for function _i2c_Stop
  6033  0FD2                     _i2c_Stop:	
  6034  0FD2                     l2714:	
  6035                           ;incstack = 0
  6036                           ; Regs used in _i2c_Stop: []
  6037                           
  6038                           
  6039                           ;Multi_RX_testjig_v1.c: 1099: SSP1CON2bits.PEN = 1;
  6040  0FD2  0024               	movlb	4	; select bank4
  6041  0FD3  1516               	bsf	22,2	;volatile
  6042  0FD4                     l522:	
  6043                           ;Multi_RX_testjig_v1.c: 1100: while(SSP1CON2bits.PEN == 1);
  6044                           
  6045  0FD4  1D16               	btfss	22,2	;volatile
  6046  0FD5  0008               	return
  6047  0FD6  2FD4               	goto	l522
  6048  0FD7                     __end_of_i2c_Stop:	
  6049  0FD7                     __ptext10:	
  6050 ;; *************** function _buzz_one *****************
  6051 ;; Defined at:
  6052 ;;		line 1071 in file "Multi_RX_testjig_v1.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  time            2    0[COMMON] unsigned int 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;		None
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      void 
  6059 ;; Registers used:
  6060 ;;		wreg
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 1F/2
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6070 ;;Total ram usage:        2 bytes
  6071 ;; Hardware stack levels used:    1
  6072 ;; Hardware stack levels required when called:    1
  6073 ;; This function calls:
  6074 ;;		Nothing
  6075 ;; This function is called by:
  6076 ;;		_main
  6077 ;;		_testjig_done
  6078 ;;		_print_error
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           
  6083                           ;psect for function _buzz_one
  6084  0FD7                     _buzz_one:	
  6085                           
  6086                           ;Multi_RX_testjig_v1.c: 1073: buzz_timer = time;
  6087                           
  6088                           ;incstack = 0
  6089                           ; Regs used in _buzz_one: [wreg]
  6090  0FD7  0871               	movf	buzz_one@time+1,w
  6091  0FD8  0020               	movlb	0	; select bank0
  6092  0FD9  00EB               	movwf	_buzz_timer+1	;volatile
  6093  0FDA  0870               	movf	buzz_one@time,w
  6094  0FDB  00EA               	movwf	_buzz_timer	;volatile
  6095                           
  6096                           ;Multi_RX_testjig_v1.c: 1074: LATC5 = 1;
  6097  0FDC  0022               	movlb	2	; select bank2
  6098  0FDD  168E               	bsf	14,5	;volatile
  6099  0FDE  0008               	return
  6100  0FDF                     __end_of_buzz_one:	
  6101  0FDF                     __ptext8:	
  6102 ;; *************** function _power_supply_set *****************
  6103 ;; Defined at:
  6104 ;;		line 1946 in file "Multi_RX_testjig_v1.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  supply          1    wreg     unsigned char 
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;  supply          1    0[COMMON] unsigned char 
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  1    wreg      void 
  6111 ;; Registers used:
  6112 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/4
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6121 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6122 ;;Total ram usage:        1 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; Hardware stack levels required when called:    1
  6125 ;; This function calls:
  6126 ;;		Nothing
  6127 ;; This function is called by:
  6128 ;;		_main
  6129 ;;		_testjig_done
  6130 ;;		_print_error
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           
  6135                           ;psect for function _power_supply_set
  6136  0FDF                     _power_supply_set:	
  6137                           
  6138                           ;incstack = 0
  6139                           ; Regs used in _power_supply_set: [wreg-fsr0h+status,2+status,0]
  6140                           ;power_supply_set@supply stored from wreg
  6141  0FDF  00F0               	movwf	power_supply_set@supply
  6142                           
  6143                           ;Multi_RX_testjig_v1.c: 1948: switch(supply)
  6144  0FE0  2FF5               	goto	l2878
  6145  0FE1                     l685:	
  6146                           ;Multi_RX_testjig_v1.c: 1949: {
  6147                           ;Multi_RX_testjig_v1.c: 1950: case 0:
  6148                           
  6149                           
  6150                           ;Multi_RX_testjig_v1.c: 1951: LATD4 = 1;
  6151  0FE1  0022               	movlb	2	; select bank2
  6152  0FE2  160F               	bsf	15,4	;volatile
  6153                           
  6154                           ;Multi_RX_testjig_v1.c: 1952: LATD5 = 1;
  6155  0FE3  168F               	bsf	15,5	;volatile
  6156                           
  6157                           ;Multi_RX_testjig_v1.c: 1953: LATD6 = 1;
  6158  0FE4  170F               	bsf	15,6	;volatile
  6159                           
  6160                           ;Multi_RX_testjig_v1.c: 1954: break;
  6161  0FE5  0008               	return
  6162  0FE6                     l687:	
  6163                           ;Multi_RX_testjig_v1.c: 1955: case 1:
  6164                           
  6165                           
  6166                           ;Multi_RX_testjig_v1.c: 1956: LATD4 = 1;
  6167  0FE6  0022               	movlb	2	; select bank2
  6168  0FE7  160F               	bsf	15,4	;volatile
  6169                           
  6170                           ;Multi_RX_testjig_v1.c: 1957: LATD5 = 0;
  6171  0FE8  128F               	bcf	15,5	;volatile
  6172                           
  6173                           ;Multi_RX_testjig_v1.c: 1958: LATD6 = 1;
  6174  0FE9  170F               	bsf	15,6	;volatile
  6175                           
  6176                           ;Multi_RX_testjig_v1.c: 1959: break;
  6177  0FEA  0008               	return
  6178  0FEB                     l688:	
  6179                           ;Multi_RX_testjig_v1.c: 1960: case 2:
  6180                           
  6181                           
  6182                           ;Multi_RX_testjig_v1.c: 1961: LATD4 = 0;
  6183  0FEB  0022               	movlb	2	; select bank2
  6184  0FEC  120F               	bcf	15,4	;volatile
  6185                           
  6186                           ;Multi_RX_testjig_v1.c: 1962: LATD5 = 0;
  6187  0FED  128F               	bcf	15,5	;volatile
  6188                           
  6189                           ;Multi_RX_testjig_v1.c: 1963: LATD6 = 0;
  6190  0FEE  130F               	bcf	15,6	;volatile
  6191                           
  6192                           ;Multi_RX_testjig_v1.c: 1964: break;
  6193  0FEF  0008               	return
  6194  0FF0                     l689:	
  6195                           ;Multi_RX_testjig_v1.c: 1965: case 3:
  6196                           
  6197                           
  6198                           ;Multi_RX_testjig_v1.c: 1966: LATD4 = 0;
  6199  0FF0  0022               	movlb	2	; select bank2
  6200  0FF1  120F               	bcf	15,4	;volatile
  6201                           
  6202                           ;Multi_RX_testjig_v1.c: 1967: LATD5 = 0;
  6203  0FF2  128F               	bcf	15,5	;volatile
  6204                           
  6205                           ;Multi_RX_testjig_v1.c: 1968: LATD6 = 1;
  6206  0FF3  170F               	bsf	15,6	;volatile
  6207                           
  6208                           ;Multi_RX_testjig_v1.c: 1969: break;
  6209  0FF4  0008               	return
  6210  0FF5                     l2878:	
  6211  0FF5  0870               	movf	power_supply_set@supply,w
  6212                           
  6213                           ; Switch size 1, requested type "speed"
  6214                           ; Number of cases is 4, Range of values is 0 to 3
  6215                           ; switch strategies available:
  6216                           ; Name         Instructions Cycles
  6217                           ; direct_byte           14     6 (fixed)
  6218                           ; simple_byte           13     7 (average)
  6219                           ; jumptable            260     6 (fixed)
  6220                           ;	Chosen strategy is direct_byte
  6221  0FF6  0084               	movwf	4
  6222  0FF7  3004               	movlw	4
  6223  0FF8  0204               	subwf	4,w
  6224  0FF9  1803               	skipnc
  6225  0FFA  0008               	return
  6226  0FFB  3190               	movlp	high S4264
  6227  0FFC  3504               	lslf	4,w
  6228  0FFD  3E0C               	addlw	low S4264
  6229  0FFE  0082               	movwf	2
  6230  0FFF  0008               	return
  6231  1000                     __end_of_power_supply_set:	
  6232                           
  6233                           	psect	swtext2
  6234  0B59                     __pswtext2:	
  6235  0B59                     S4268:	
  6236  0B59  318C  2C9D         	ljmp	l3226
  6237  0B5B  318C  2C9F         	ljmp	l3228
  6238  0B5D  318C  2CA1         	ljmp	l3230
  6239  0B5F  318C  2CA3         	ljmp	l3232
  6240  0B61  318C  2CA5         	ljmp	l3234
  6241  0B63  318C  2CA7         	ljmp	l3236
  6242  0B65  318C  2CA9         	ljmp	l3238
  6243  0B67  318C  2CAB         	ljmp	l3240
  6244  0B69  318C  2CAD         	ljmp	l3242
  6245  0B6B  318C  2CAF         	ljmp	l3244
  6246  0B6D  318C  2CB1         	ljmp	l3246
  6247  0B6F  318C  2CB3         	ljmp	l3248
  6248  0B71  318C  2CB5         	ljmp	l3250
  6249  0B73  318C  2CBC         	ljmp	l715
  6250  0B75  318C  2CB7         	ljmp	l3252
  6251  0B77  318C  2CBC         	ljmp	l715
  6252  0B79  318C  2CBC         	ljmp	l715
  6253  0B7B  318C  2CBC         	ljmp	l715
  6254  0B7D  318C  2CBC         	ljmp	l715
  6255  0B7F  318C  2CB9         	ljmp	l3254
  6256                           
  6257                           	psect	text33
  6258  145B                     __ptext33:	
  6259 ;; *************** function _TX_one *****************
  6260 ;; Defined at:
  6261 ;;		line 2102 in file "Multi_RX_testjig_v1.c"
  6262 ;; Parameters:    Size  Location     Type
  6263 ;;  data            1    wreg     unsigned char 
  6264 ;; Auto vars:     Size  Location     Type
  6265 ;;  data            1    1[COMMON] unsigned char 
  6266 ;;  i               1    2[COMMON] unsigned char 
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  1    wreg      void 
  6269 ;; Registers used:
  6270 ;;		wreg, status,2, status,0
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6279 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6280 ;;Total ram usage:        3 bytes
  6281 ;; Hardware stack levels used:    1
  6282 ;; Hardware stack levels required when called:    1
  6283 ;; This function calls:
  6284 ;;		Nothing
  6285 ;; This function is called by:
  6286 ;;		_main
  6287 ;; This function uses a non-reentrant model
  6288 ;;
  6289                           
  6290                           
  6291                           ;psect for function _TX_one
  6292  145B                     _TX_one:	
  6293                           
  6294                           ;incstack = 0
  6295                           ; Regs used in _TX_one: [wreg+status,2+status,0]
  6296                           ;TX_one@data stored from wreg
  6297  145B  00F1               	movwf	TX_one@data
  6298                           
  6299                           ;Multi_RX_testjig_v1.c: 2104: TRISG0 = 0;
  6300  145C  0026               	movlb	6	; select bank6
  6301  145D  100D               	bcf	13,0	;volatile
  6302                           
  6303                           ;Multi_RX_testjig_v1.c: 2105: LATG0 = 0;
  6304  145E  0027               	movlb	7	; select bank7
  6305  145F  100D               	bcf	13,0	;volatile
  6306                           
  6307                           ;Multi_RX_testjig_v1.c: 2106: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6308  1460  3085               	movlw	133
  6309  1461  00F0               	movwf	??_TX_one
  6310  1462                     u5267:	
  6311  1462  0BF0               	decfsz	??_TX_one,f
  6312  1463  2C62               	goto	u5267
  6313                           
  6314                           ;Multi_RX_testjig_v1.c: 2108: unsigned char i;
  6315                           ;Multi_RX_testjig_v1.c: 2109: for(i = 0; i < 8; i++)
  6316  1464  01F2               	clrf	TX_one@i
  6317  1465                     l727:	
  6318                           
  6319                           ;Multi_RX_testjig_v1.c: 2110: {
  6320                           ;Multi_RX_testjig_v1.c: 2111: LATG0 = data & 0x01;
  6321  1465  1C71               	btfss	TX_one@data,0
  6322  1466  2C6A               	goto	u3110
  6323  1467  0027               	movlb	7	; select bank7
  6324  1468  140D               	bsf	13,0	;volatile
  6325  1469  2C6C               	goto	u3124
  6326  146A                     u3110:	
  6327  146A  0027               	movlb	7	; select bank7
  6328  146B  100D               	bcf	13,0	;volatile
  6329  146C                     u3124:	
  6330  146C  3085               	movlw	133
  6331                           
  6332                           ;Multi_RX_testjig_v1.c: 2112: data = data >> 1;
  6333  146D  36F1               	lsrf	TX_one@data,f
  6334                           
  6335                           ;Multi_RX_testjig_v1.c: 2113: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6336  146E  00F0               	movwf	??_TX_one
  6337  146F                     u5277:	
  6338  146F  0BF0               	decfsz	??_TX_one,f
  6339  1470  2C6F               	goto	u5277
  6340  1471  3008               	movlw	8
  6341  1472  0AF2               	incf	TX_one@i,f
  6342  1473  0272               	subwf	TX_one@i,w
  6343  1474  1C03               	skipc
  6344  1475  2C65               	goto	l727
  6345                           
  6346                           ;Multi_RX_testjig_v1.c: 2114: }
  6347                           ;Multi_RX_testjig_v1.c: 2115: LATG0 = 1;
  6348  1476  0027               	movlb	7	; select bank7
  6349  1477  140D               	bsf	13,0	;volatile
  6350                           
  6351                           ;Multi_RX_testjig_v1.c: 2116: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6352  1478  3085               	movlw	133
  6353  1479  00F0               	movwf	??_TX_one
  6354  147A                     u5287:	
  6355  147A  0BF0               	decfsz	??_TX_one,f
  6356  147B  2C7A               	goto	u5287
  6357  147C  0008               	return
  6358  147D                     __end_of_TX_one:	
  6359                           
  6360                           	psect	text34
  6361  0B86                     __ptext34:	
  6362 ;; *************** function _RX_one_timeout *****************
  6363 ;; Defined at:
  6364 ;;		line 2141 in file "Multi_RX_testjig_v1.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;		None
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;  data            1    2[COMMON] unsigned char 
  6369 ;;  i               1    1[COMMON] unsigned char 
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  1    wreg      unsigned char 
  6372 ;; Registers used:
  6373 ;;		wreg, status,2, status,0
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6380 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6381 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6382 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6383 ;;Total ram usage:        3 bytes
  6384 ;; Hardware stack levels used:    1
  6385 ;; Hardware stack levels required when called:    1
  6386 ;; This function calls:
  6387 ;;		Nothing
  6388 ;; This function is called by:
  6389 ;;		_main
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           
  6394                           ;psect for function _RX_one_timeout
  6395  0B86                     _RX_one_timeout:	
  6396                           
  6397                           ;Multi_RX_testjig_v1.c: 2144: uart_receive_timer = 500;
  6398                           
  6399                           ;incstack = 0
  6400                           ; Regs used in _RX_one_timeout: [wreg+status,2+status,0]
  6401  0B86  30F4               	movlw	244
  6402  0B87  0020               	movlb	0	; select bank0
  6403  0B88  00E2               	movwf	_uart_receive_timer	;volatile
  6404  0B89  3001               	movlw	1
  6405  0B8A  00E3               	movwf	_uart_receive_timer+1	;volatile
  6406  0B8B  2B91               	goto	l742
  6407  0B8C                     l3304:	
  6408  0B8C  0020               	movlb	0	; select bank0
  6409  0B8D  0862               	movf	_uart_receive_timer,w	;volatile
  6410  0B8E  0463               	iorwf	_uart_receive_timer+1,w	;volatile
  6411  0B8F  1903               	btfsc	3,2
  6412  0B90  2B94               	goto	l3306
  6413  0B91                     l742:	
  6414                           ;Multi_RX_testjig_v1.c: 2145: while(RG3 == 1 && uart_receive_timer);
  6415                           
  6416  0B91  0025               	movlb	5	; select bank5
  6417  0B92  198D               	btfsc	13,3	;volatile
  6418  0B93  2B8C               	goto	l3304
  6419  0B94                     l3306:	
  6420                           
  6421                           ;Multi_RX_testjig_v1.c: 2146: _delay((unsigned long)((150)*(16000000/4000000.0)));
  6422  0B94  30C7               	movlw	199
  6423  0B95  00F0               	movwf	??_RX_one_timeout
  6424  0B96                     u5297:	
  6425  0B96  0BF0               	decfsz	??_RX_one_timeout,f
  6426  0B97  2B96               	goto	u5297
  6427  0B98  3200               	nop2	;nop
  6428                           
  6429                           ;Multi_RX_testjig_v1.c: 2147: unsigned char i;
  6430                           ;Multi_RX_testjig_v1.c: 2148: unsigned char data = 0;
  6431  0B99  01F2               	clrf	RX_one_timeout@data
  6432                           
  6433                           ;Multi_RX_testjig_v1.c: 2149: for(i = 0; i < 8; i++)
  6434  0B9A  01F1               	clrf	RX_one_timeout@i
  6435  0B9B                     l747:	
  6436                           
  6437                           ;Multi_RX_testjig_v1.c: 2150: {
  6438                           ;Multi_RX_testjig_v1.c: 2151: LATF4 = 1;
  6439  0B9B  0027               	movlb	7	; select bank7
  6440  0B9C  160C               	bsf	12,4	;volatile
  6441                           
  6442                           ;Multi_RX_testjig_v1.c: 2152: if(RG3 == 0)
  6443  0B9D  0025               	movlb	5	; select bank5
  6444  0B9E  198D               	btfsc	13,3	;volatile
  6445  0B9F  2BA2               	goto	l749
  6446                           
  6447                           ;Multi_RX_testjig_v1.c: 2153: data = data >> 1;
  6448  0BA0  36F2               	lsrf	RX_one_timeout@data,f
  6449  0BA1  2BA4               	goto	l750
  6450  0BA2                     l749:	
  6451                           
  6452                           ;Multi_RX_testjig_v1.c: 2154: else
  6453                           ;Multi_RX_testjig_v1.c: 2155: data = (data >> 1) | 0x80;
  6454  0BA2  1403               	setc
  6455  0BA3  0CF2               	rrf	RX_one_timeout@data,f
  6456  0BA4                     l750:	
  6457                           
  6458                           ;Multi_RX_testjig_v1.c: 2156: LATF4 = 0;
  6459  0BA4  0027               	movlb	7	; select bank7
  6460  0BA5  120C               	bcf	12,4	;volatile
  6461                           
  6462                           ;Multi_RX_testjig_v1.c: 2157: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6463  0BA6  3085               	movlw	133
  6464  0BA7  00F0               	movwf	??_RX_one_timeout
  6465  0BA8                     u5307:	
  6466  0BA8  0BF0               	decfsz	??_RX_one_timeout,f
  6467  0BA9  2BA8               	goto	u5307
  6468  0BAA  3008               	movlw	8
  6469  0BAB  0AF1               	incf	RX_one_timeout@i,f
  6470  0BAC  0271               	subwf	RX_one_timeout@i,w
  6471  0BAD  1C03               	skipc
  6472  0BAE  2B9B               	goto	l747
  6473                           
  6474                           ;Multi_RX_testjig_v1.c: 2158: }
  6475                           ;Multi_RX_testjig_v1.c: 2159: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6476  0BAF  3085               	movlw	133
  6477  0BB0  00F0               	movwf	??_RX_one_timeout
  6478  0BB1                     u5317:	
  6479  0BB1  0BF0               	decfsz	??_RX_one_timeout,f
  6480  0BB2  2BB1               	goto	u5317
  6481                           
  6482                           ;Multi_RX_testjig_v1.c: 2161: return data;
  6483  0BB3  0872               	movf	RX_one_timeout@data,w
  6484  0BB4  0008               	return
  6485  0BB5                     __end_of_RX_one_timeout:	
  6486                           
  6487                           	psect	text35
  6488  147D                     __ptext35:	
  6489 ;; *************** function _RX_one *****************
  6490 ;; Defined at:
  6491 ;;		line 2119 in file "Multi_RX_testjig_v1.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;		None
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;  data            1    2[COMMON] unsigned char 
  6496 ;;  i               1    1[COMMON] unsigned char 
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  1    wreg      unsigned char 
  6499 ;; Registers used:
  6500 ;;		wreg, status,2, status,0
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6508 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6509 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6510 ;;Total ram usage:        3 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; Hardware stack levels required when called:    1
  6513 ;; This function calls:
  6514 ;;		Nothing
  6515 ;; This function is called by:
  6516 ;;		_main
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           
  6521                           ;psect for function _RX_one
  6522  147D                     _RX_one:	
  6523  147D                     l732:	
  6524                           ;Multi_RX_testjig_v1.c: 2122: while(RG3 == 1);
  6525                           
  6526                           ;incstack = 0
  6527                           ; Regs used in _RX_one: [wreg+status,2+status,0]
  6528                           
  6529  147D  0025               	movlb	5	; select bank5
  6530  147E  198D               	btfsc	13,3	;volatile
  6531  147F  2C7D               	goto	l732
  6532                           
  6533                           ;Multi_RX_testjig_v1.c: 2123: _delay((unsigned long)((150)*(16000000/4000000.0)));
  6534  1480  30C7               	movlw	199
  6535  1481  00F0               	movwf	??_RX_one
  6536  1482                     u5327:	
  6537  1482  0BF0               	decfsz	??_RX_one,f
  6538  1483  2C82               	goto	u5327
  6539  1484  3200               	nop2	;nop
  6540                           
  6541                           ;Multi_RX_testjig_v1.c: 2124: unsigned char i;
  6542                           ;Multi_RX_testjig_v1.c: 2125: unsigned char data = 0;
  6543  1485  01F2               	clrf	RX_one@data
  6544                           
  6545                           ;Multi_RX_testjig_v1.c: 2126: for(i = 0; i < 8; i++)
  6546  1486  01F1               	clrf	RX_one@i
  6547  1487                     l735:	
  6548                           
  6549                           ;Multi_RX_testjig_v1.c: 2127: {
  6550                           ;Multi_RX_testjig_v1.c: 2128: LATF4 = 1;
  6551  1487  0027               	movlb	7	; select bank7
  6552  1488  160C               	bsf	12,4	;volatile
  6553                           
  6554                           ;Multi_RX_testjig_v1.c: 2129: if(RG3 == 0)
  6555  1489  0025               	movlb	5	; select bank5
  6556  148A  198D               	btfsc	13,3	;volatile
  6557  148B  2C8E               	goto	l737
  6558                           
  6559                           ;Multi_RX_testjig_v1.c: 2130: data = data >> 1;
  6560  148C  36F2               	lsrf	RX_one@data,f
  6561  148D  2C90               	goto	l738
  6562  148E                     l737:	
  6563                           
  6564                           ;Multi_RX_testjig_v1.c: 2131: else
  6565                           ;Multi_RX_testjig_v1.c: 2132: data = (data >> 1) | 0x80;
  6566  148E  1403               	setc
  6567  148F  0CF2               	rrf	RX_one@data,f
  6568  1490                     l738:	
  6569                           
  6570                           ;Multi_RX_testjig_v1.c: 2133: LATF4 = 0;
  6571  1490  0027               	movlb	7	; select bank7
  6572  1491  120C               	bcf	12,4	;volatile
  6573                           
  6574                           ;Multi_RX_testjig_v1.c: 2134: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6575  1492  3085               	movlw	133
  6576  1493  00F0               	movwf	??_RX_one
  6577  1494                     u5337:	
  6578  1494  0BF0               	decfsz	??_RX_one,f
  6579  1495  2C94               	goto	u5337
  6580  1496  3008               	movlw	8
  6581  1497  0AF1               	incf	RX_one@i,f
  6582  1498  0271               	subwf	RX_one@i,w
  6583  1499  1C03               	skipc
  6584  149A  2C87               	goto	l735
  6585                           
  6586                           ;Multi_RX_testjig_v1.c: 2135: }
  6587                           ;Multi_RX_testjig_v1.c: 2136: _delay((unsigned long)((100)*(16000000/4000000.0)));
  6588  149B  3085               	movlw	133
  6589  149C  00F0               	movwf	??_RX_one
  6590  149D                     u5347:	
  6591  149D  0BF0               	decfsz	??_RX_one,f
  6592  149E  2C9D               	goto	u5347
  6593                           
  6594                           ;Multi_RX_testjig_v1.c: 2138: return data;
  6595  149F  0872               	movf	RX_one@data,w
  6596  14A0  0008               	return
  6597  14A1                     __end_of_RX_one:	
  6598                           
  6599                           	psect	intentry
  6600  0004                     __pintentry:	
  6601 ;; *************** function _isr *****************
  6602 ;; Defined at:
  6603 ;;		line 322 in file "Multi_RX_testjig_v1.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;		None
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;		None
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  1    wreg      void 
  6610 ;; Registers used:
  6611 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 1F/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  6617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  6621 ;;Total ram usage:        0 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		Interrupt level 1
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630  0004                     _isr:	
  6631                           
  6632                           ;incstack = 0
  6633  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6634                           
  6635                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  6636  0005  3180               	pagesel	$
  6637                           
  6638                           ;Multi_RX_testjig_v1.c: 324: if(INTCONbits.TMR0IF == 1)
  6639  0006  1D0B               	btfss	11,2	;volatile
  6640  0007  2822               	goto	i1l3520
  6641                           
  6642                           ;Multi_RX_testjig_v1.c: 325: {
  6643                           ;Multi_RX_testjig_v1.c: 327: if(testjig_timer)
  6644  0008  0020               	movlb	0	; select bank0
  6645  0009  085E               	movf	_testjig_timer,w	;volatile
  6646  000A  045F               	iorwf	_testjig_timer+1,w	;volatile
  6647  000B  1903               	btfsc	3,2
  6648  000C  2811               	goto	i1l3512
  6649                           
  6650                           ;Multi_RX_testjig_v1.c: 328: testjig_timer--;
  6651  000D  3001               	movlw	1
  6652  000E  02DE               	subwf	_testjig_timer,f	;volatile
  6653  000F  3000               	movlw	0
  6654  0010  3BDF               	subwfb	_testjig_timer+1,f	;volatile
  6655  0011                     i1l3512:	
  6656                           
  6657                           ;Multi_RX_testjig_v1.c: 329: if(uart_receive_timer)
  6658  0011  0862               	movf	_uart_receive_timer,w	;volatile
  6659  0012  0463               	iorwf	_uart_receive_timer+1,w	;volatile
  6660  0013  1903               	btfsc	3,2
  6661  0014  2819               	goto	i1l273
  6662                           
  6663                           ;Multi_RX_testjig_v1.c: 330: uart_receive_timer--;
  6664  0015  30FF               	movlw	-1
  6665  0016  07E2               	addwf	_uart_receive_timer,f	;volatile
  6666  0017  1C03               	skipc
  6667  0018  03E3               	decf	_uart_receive_timer+1,f	;volatile
  6668  0019                     i1l273:	
  6669                           
  6670                           ;Multi_RX_testjig_v1.c: 331: if(motor_direction_timer)
  6671  0019  085A               	movf	_motor_direction_timer,w	;volatile
  6672  001A  045B               	iorwf	_motor_direction_timer+1,w	;volatile
  6673  001B  1903               	btfsc	3,2
  6674  001C  2821               	goto	i1l3518
  6675                           
  6676                           ;Multi_RX_testjig_v1.c: 332: motor_direction_timer--;
  6677  001D  30FF               	movlw	-1
  6678  001E  07DA               	addwf	_motor_direction_timer,f	;volatile
  6679  001F  1C03               	skipc
  6680  0020  03DB               	decf	_motor_direction_timer+1,f	;volatile
  6681  0021                     i1l3518:	
  6682                           
  6683                           ;Multi_RX_testjig_v1.c: 334: INTCONbits.TMR0IF = 0;
  6684  0021  110B               	bcf	11,2	;volatile
  6685  0022                     i1l3520:	
  6686                           
  6687                           ;Multi_RX_testjig_v1.c: 336: }
  6688                           ;Multi_RX_testjig_v1.c: 337: if(PIR1bits.TMR2IF == 1)
  6689  0022  0020               	movlb	0	; select bank0
  6690  0023  1C91               	btfss	17,1	;volatile
  6691  0024  2893               	goto	i1l297
  6692                           
  6693                           ;Multi_RX_testjig_v1.c: 338: {
  6694                           ;Multi_RX_testjig_v1.c: 340: if(pickit_timer)
  6695  0025  085C               	movf	_pickit_timer,w	;volatile
  6696  0026  045D               	iorwf	_pickit_timer+1,w	;volatile
  6697  0027  1903               	btfsc	3,2
  6698  0028  2866               	goto	i1l3552
  6699                           
  6700                           ;Multi_RX_testjig_v1.c: 341: pickit_timer--;
  6701  0029  3001               	movlw	1
  6702  002A  02DC               	subwf	_pickit_timer,f	;volatile
  6703  002B  3000               	movlw	0
  6704  002C  3BDD               	subwfb	_pickit_timer+1,f	;volatile
  6705  002D  2870               	goto	i1l3554
  6706  002E                     i1l279:	
  6707                           ;Multi_RX_testjig_v1.c: 345: {
  6708                           ;Multi_RX_testjig_v1.c: 346: case pickit_start:
  6709                           
  6710                           
  6711                           ;Multi_RX_testjig_v1.c: 347: LATC2 = 1;
  6712  002E  0022               	movlb	2	; select bank2
  6713  002F  150E               	bsf	14,2	;volatile
  6714                           
  6715                           ;Multi_RX_testjig_v1.c: 348: LATC7 = 1;
  6716  0030  178E               	bsf	14,7	;volatile
  6717                           
  6718                           ;Multi_RX_testjig_v1.c: 349: pickit_timer = 10;
  6719  0031  300A               	movlw	10
  6720  0032  0020               	movlb	0	; select bank0
  6721  0033  00DC               	movwf	_pickit_timer	;volatile
  6722  0034  01DD               	clrf	_pickit_timer+1	;volatile
  6723                           
  6724                           ;Multi_RX_testjig_v1.c: 350: pickit_state = pickit_push_button;
  6725  0035  3002               	movlw	2
  6726  0036  2864               	goto	L42
  6727  0037                     i1l3528:	
  6728                           ;Multi_RX_testjig_v1.c: 351: break;
  6729                           
  6730                           
  6731                           ;Multi_RX_testjig_v1.c: 353: pickit_timer = 1000;
  6732  0037  30E8               	movlw	232
  6733  0038  00DC               	movwf	_pickit_timer	;volatile
  6734  0039  3003               	movlw	3
  6735  003A  00DD               	movwf	_pickit_timer+1	;volatile
  6736                           
  6737                           ;Multi_RX_testjig_v1.c: 354: LATC6 = 1;
  6738  003B  0022               	movlb	2	; select bank2
  6739  003C  170E               	bsf	14,6	;volatile
  6740                           
  6741                           ;Multi_RX_testjig_v1.c: 355: pickit_state = pickit_busy;
  6742  003D  2863               	goto	L43
  6743  003E                     i1l282:	
  6744                           ;Multi_RX_testjig_v1.c: 357: case pickit_busy:
  6745                           
  6746                           ;Multi_RX_testjig_v1.c: 356: break;
  6747                           
  6748                           
  6749                           ;Multi_RX_testjig_v1.c: 358: LATC6 = 0;
  6750  003E  0022               	movlb	2	; select bank2
  6751  003F  130E               	bcf	14,6	;volatile
  6752                           
  6753                           ;Multi_RX_testjig_v1.c: 359: if(RE6 == 0)
  6754  0040  0020               	movlb	0	; select bank0
  6755  0041  1B10               	btfsc	16,6	;volatile
  6756  0042  284A               	goto	i1l3538
  6757  0043  3065               	movlw	101
  6758                           
  6759                           ;Multi_RX_testjig_v1.c: 360: {
  6760                           ;Multi_RX_testjig_v1.c: 361: pickit_red_counter++;
  6761  0044  0AE5               	incf	_pickit_red_counter,f
  6762                           
  6763                           ;Multi_RX_testjig_v1.c: 362: if(pickit_red_counter > 100)
  6764  0045  0265               	subwf	_pickit_red_counter,w
  6765  0046  1C03               	skipc
  6766  0047  284B               	goto	i1l3540
  6767                           
  6768                           ;Multi_RX_testjig_v1.c: 363: pickit_state = pickit_finish;
  6769  0048  01EC               	clrf	_pickit_state
  6770  0049  284B               	goto	i1l3540
  6771  004A                     i1l3538:	
  6772                           
  6773                           ;Multi_RX_testjig_v1.c: 365: else
  6774                           ;Multi_RX_testjig_v1.c: 366: pickit_red_counter = 0;
  6775  004A  01E5               	clrf	_pickit_red_counter
  6776  004B                     i1l3540:	
  6777                           
  6778                           ;Multi_RX_testjig_v1.c: 367: if(RE5 == 0)
  6779  004B  1A90               	btfsc	16,5	;volatile
  6780  004C  2854               	goto	i1l286
  6781                           
  6782                           ;Multi_RX_testjig_v1.c: 368: {
  6783                           ;Multi_RX_testjig_v1.c: 369: pickit_state = pickit_error;
  6784  004D  3004               	movlw	4
  6785  004E  00EC               	movwf	_pickit_state
  6786                           
  6787                           ;Multi_RX_testjig_v1.c: 370: pickit_timer = 1000;
  6788  004F  30E8               	movlw	232
  6789  0050  00DC               	movwf	_pickit_timer	;volatile
  6790  0051  3003               	movlw	3
  6791  0052  00DD               	movwf	_pickit_timer+1	;volatile
  6792                           
  6793                           ;Multi_RX_testjig_v1.c: 371: }
  6794  0053  2857               	goto	i1l3546
  6795  0054                     i1l286:	
  6796                           
  6797                           ;Multi_RX_testjig_v1.c: 372: else if(RE4 == 0)
  6798  0054  1A10               	btfsc	16,4	;volatile
  6799  0055  2857               	goto	i1l3546
  6800                           
  6801                           ;Multi_RX_testjig_v1.c: 373: {
  6802                           ;Multi_RX_testjig_v1.c: 374: pickit_state = pickit_finish;
  6803  0056  01EC               	clrf	_pickit_state
  6804  0057                     i1l3546:	
  6805                           
  6806                           ;Multi_RX_testjig_v1.c: 375: }
  6807                           ;Multi_RX_testjig_v1.c: 376: pickit_timer = 1;
  6808  0057  3001               	movlw	1
  6809  0058  00DC               	movwf	_pickit_timer	;volatile
  6810  0059  01DD               	clrf	_pickit_timer+1	;volatile
  6811                           
  6812                           ;Multi_RX_testjig_v1.c: 377: break;
  6813  005A  2870               	goto	i1l3554
  6814  005B                     i1l289:	
  6815                           ;Multi_RX_testjig_v1.c: 378: case pickit_error:
  6816                           
  6817                           
  6818                           ;Multi_RX_testjig_v1.c: 379: LATC2 = 0;
  6819  005B  0022               	movlb	2	; select bank2
  6820  005C  110E               	bcf	14,2	;volatile
  6821                           
  6822                           ;Multi_RX_testjig_v1.c: 380: LATC7 = 0;
  6823  005D  138E               	bcf	14,7	;volatile
  6824                           
  6825                           ;Multi_RX_testjig_v1.c: 381: break;
  6826  005E  2870               	goto	i1l3554
  6827  005F                     i1l290:	
  6828                           ;Multi_RX_testjig_v1.c: 382: case pickit_finish:
  6829                           
  6830                           
  6831                           ;Multi_RX_testjig_v1.c: 383: LATC2 = 0;
  6832  005F  0022               	movlb	2	; select bank2
  6833  0060  110E               	bcf	14,2	;volatile
  6834                           
  6835                           ;Multi_RX_testjig_v1.c: 384: LATC7 = 0;
  6836  0061  138E               	bcf	14,7	;volatile
  6837                           
  6838                           ;Multi_RX_testjig_v1.c: 385: pickit_state = pickit_idle;
  6839  0062  3005               	movlw	5
  6840  0063                     L43:	
  6841  0063  0020               	movlb	0	; select bank0
  6842  0064                     L42:	
  6843  0064  00EC               	movwf	_pickit_state
  6844                           
  6845                           ;Multi_RX_testjig_v1.c: 386: break;
  6846  0065  2870               	goto	i1l3554
  6847  0066                     i1l3552:	
  6848  0066  086C               	movf	_pickit_state,w
  6849                           
  6850                           ; Switch size 1, requested type "speed"
  6851                           ; Number of cases is 6, Range of values is 0 to 5
  6852                           ; switch strategies available:
  6853                           ; Name         Instructions Cycles
  6854                           ; direct_byte           18     6 (fixed)
  6855                           ; simple_byte           19    10 (average)
  6856                           ; jumptable            260     6 (fixed)
  6857                           ;	Chosen strategy is direct_byte
  6858  0067  0084               	movwf	4
  6859  0068  3006               	movlw	6
  6860  0069  0204               	subwf	4,w
  6861  006A  1803               	skipnc
  6862  006B  2870               	goto	i1l3554
  6863  006C  3190               	movlp	high i1S4270
  6864  006D  3504               	lslf	4,w
  6865  006E  3E00               	addlw	low i1S4270
  6866  006F  0082               	movwf	2
  6867  0070                     i1l3554:	
  6868                           
  6869                           ;Multi_RX_testjig_v1.c: 390: }
  6870                           ;Multi_RX_testjig_v1.c: 452: if(buzz_timer)
  6871  0070  0020               	movlb	0	; select bank0
  6872  0071  086A               	movf	_buzz_timer,w	;volatile
  6873  0072  046B               	iorwf	_buzz_timer+1,w	;volatile
  6874  0073  1903               	btfsc	3,2
  6875  0074  287A               	goto	i1l292
  6876                           
  6877                           ;Multi_RX_testjig_v1.c: 453: buzz_timer--;
  6878  0075  3001               	movlw	1
  6879  0076  02EA               	subwf	_buzz_timer,f	;volatile
  6880  0077  3000               	movlw	0
  6881  0078  3BEB               	subwfb	_buzz_timer+1,f	;volatile
  6882  0079  287C               	goto	i1l3558
  6883  007A                     i1l292:	
  6884                           
  6885                           ;Multi_RX_testjig_v1.c: 454: else
  6886                           ;Multi_RX_testjig_v1.c: 455: LATC5 = 0;
  6887  007A  0022               	movlb	2	; select bank2
  6888  007B  128E               	bcf	14,5	;volatile
  6889  007C                     i1l3558:	
  6890                           
  6891                           ;Multi_RX_testjig_v1.c: 456: if(one_second_timer)
  6892  007C  0020               	movlb	0	; select bank0
  6893  007D  086D               	movf	_one_second_timer,w	;volatile
  6894  007E  046E               	iorwf	_one_second_timer+1,w	;volatile
  6895  007F  1903               	btfsc	3,2
  6896  0080  2886               	goto	i1l3562
  6897                           
  6898                           ;Multi_RX_testjig_v1.c: 457: one_second_timer--;
  6899  0081  3001               	movlw	1
  6900  0082  02ED               	subwf	_one_second_timer,f	;volatile
  6901  0083  3000               	movlw	0
  6902  0084  3BEE               	subwfb	_one_second_timer+1,f	;volatile
  6903  0085  288A               	goto	i1l3564
  6904  0086                     i1l3562:	
  6905                           
  6906                           ;Multi_RX_testjig_v1.c: 458: else
  6907                           ;Multi_RX_testjig_v1.c: 459: {
  6908                           ;Multi_RX_testjig_v1.c: 460: one_second_timer = 1000;
  6909  0086  30E8               	movlw	232
  6910  0087  00ED               	movwf	_one_second_timer	;volatile
  6911  0088  3003               	movlw	3
  6912  0089  00EE               	movwf	_one_second_timer+1	;volatile
  6913  008A                     i1l3564:	
  6914                           
  6915                           ;Multi_RX_testjig_v1.c: 461: }
  6916                           ;Multi_RX_testjig_v1.c: 462: if(tj_timer)
  6917  008A  0860               	movf	_tj_timer,w
  6918  008B  0461               	iorwf	_tj_timer+1,w
  6919  008C  1903               	btfsc	3,2
  6920  008D  2892               	goto	i1l3568
  6921                           
  6922                           ;Multi_RX_testjig_v1.c: 463: tj_timer--;
  6923  008E  3001               	movlw	1
  6924  008F  02E0               	subwf	_tj_timer,f
  6925  0090  3000               	movlw	0
  6926  0091  3BE1               	subwfb	_tj_timer+1,f
  6927  0092                     i1l3568:	
  6928                           
  6929                           ;Multi_RX_testjig_v1.c: 464: PIR1bits.TMR2IF = 0;
  6930  0092  1091               	bcf	17,1	;volatile
  6931  0093                     i1l297:	
  6932  0093  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6933  0094  0009               	retfie
  6934  0095                     __end_of_isr:	
  6935  007E                     btemp	set	126	;btemp
  6936  007E                     int$flags	set	126
  6937  007E                     wtemp	set	126
  6938  007E                     wtemp0	set	126
  6939  0080                     wtemp1	set	128
  6940  0082                     wtemp2	set	130
  6941  0084                     wtemp3	set	132
  6942  0086                     wtemp4	set	134
  6943  0088                     wtemp5	set	136
  6944  007F                     wtemp6	set	127
  6945  007E                     ttemp	set	126
  6946  007E                     ttemp0	set	126
  6947  0081                     ttemp1	set	129
  6948  0084                     ttemp2	set	132
  6949  0087                     ttemp3	set	135
  6950  007F                     ttemp4	set	127
  6951  007E                     ltemp	set	126
  6952  007E                     ltemp0	set	126
  6953  0082                     ltemp1	set	130
  6954  0086                     ltemp2	set	134
  6955  0080                     ltemp3	set	128
  6956                           
  6957                           	psect	swtext3
  6958  1000                     __pswtext3:	
  6959  1000                     i1S4270:	
  6960  1000  3180  285F         	ljmp	i1l290
  6961  1002  3180  282E         	ljmp	i1l279
  6962  1004  3180  2837         	ljmp	i1l3528
  6963  1006  3180  283E         	ljmp	i1l282
  6964  1008  3180  285B         	ljmp	i1l289
  6965  100A  3180  2870         	ljmp	i1l3554
  6966                           
  6967                           	psect	maintext_split_1
  6968  00A6                     l3688:	
  6969  00A6  305F               	movlw	95
  6970  00A7  3196  2625  3180   	fcall	_ADC_get_val
  6971  00AA  3000               	movlw	0
  6972  00AB  0271               	subwf	?_ADC_get_val+1,w
  6973  00AC  307B               	movlw	123
  6974  00AD  1903               	skipnz
  6975  00AE  0270               	subwf	?_ADC_get_val,w
  6976  00AF  1C03               	skipc
  6977  00B0  28E0               	goto	l3698
  6978  00B1  3063               	movlw	99
  6979  00B2  3196  2625  3180   	fcall	_ADC_get_val
  6980  00B5  3000               	movlw	0
  6981  00B6  0271               	subwf	?_ADC_get_val+1,w
  6982  00B7  30F5               	movlw	245
  6983  00B8  1903               	skipnz
  6984  00B9  0270               	subwf	?_ADC_get_val,w
  6985  00BA  1803               	skipnc
  6986  00BB  28E0               	goto	l3698
  6987  00BC  3063               	movlw	99
  6988  00BD  3196  2625  3180   	fcall	_ADC_get_val
  6989  00C0  3001               	movlw	1
  6990  00C1  0271               	subwf	?_ADC_get_val+1,w
  6991  00C2  3048               	movlw	72
  6992  00C3  1903               	skipnz
  6993  00C4  0270               	subwf	?_ADC_get_val,w
  6994  00C5  1C03               	skipc
  6995  00C6  28E0               	goto	l3698
  6996  00C7  3195  25E6  3180   	fcall	_get_30v_current
  6997  00CA  3000               	movlw	0
  6998  00CB  0246               	subwf	?_get_30v_current+1,w
  6999  00CC  3032               	movlw	50
  7000  00CD  1903               	skipnz
  7001  00CE  0245               	subwf	?_get_30v_current,w
  7002  00CF  1803               	skipnc
  7003  00D0  28E0               	goto	l3698
  7004  00D1  085E               	movf	_testjig_timer,w	;volatile
  7005  00D2  045F               	iorwf	_testjig_timer+1,w	;volatile
  7006  00D3  1903               	btfsc	3,2
  7007  00D4  28E0               	goto	l3698
  7008  00D5                     l3686:	
  7009                           ;Multi_RX_testjig_v1.c: 566: while((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*
      +                          1024)/4.096)*0.92)) && (ADC_get_val(0b01011111) > (unsigned int)((((5/11.0)*1024)/4.096)
      +                          *1.08))&&(ADC_get_val(0b01100011) < (unsigned int)((((12/11.0)*1024)/4.096)*0.9)) && (AD
      +                          C_get_val(0b011
  7010                           
  7011  00D5  305F               	movlw	95
  7012  00D6  3196  2625  3180   	fcall	_ADC_get_val
  7013  00D9  3000               	movlw	0
  7014  00DA  0271               	subwf	?_ADC_get_val+1,w
  7015  00DB  3068               	movlw	104
  7016  00DC  1903               	skipnz
  7017  00DD  0270               	subwf	?_ADC_get_val,w
  7018  00DE  1C03               	btfss	3,0
  7019  00DF  28A6               	goto	l3688
  7020  00E0                     l3698:	
  7021                           
  7022                           ;Multi_RX_testjig_v1.c: 567: if((ADC_get_val(0b01011111) < (unsigned int)((((5/11.0)*102
      +                          4)/4.096)*0.92)))
  7023  00E0  305F               	movlw	95
  7024  00E1  3196  2625  3180   	fcall	_ADC_get_val
  7025  00E4  3000               	movlw	0
  7026  00E5  0271               	subwf	?_ADC_get_val+1,w
  7027  00E6  3068               	movlw	104
  7028  00E7  1903               	skipnz
  7029  00E8  0270               	subwf	?_ADC_get_val,w
  7030  00E9  1803               	skipnc
  7031  00EA  28EF               	goto	l3702
  7032                           
  7033                           ;Multi_RX_testjig_v1.c: 568: print_error("16v-5v supply", "Volt Error L");
  7034  00EB  303E               	movlw	low (STR_15| (0+32768))
  7035  00EC  00F8               	movwf	print_error@top
  7036  00ED  3089               	movlw	high (STR_15| (0+32768))
  7037  00EE  290C               	goto	L12
  7038  00EF                     l3702:	
  7039                           
  7040                           ;Multi_RX_testjig_v1.c: 569: else if((ADC_get_val(0b01011111) > (unsigned int)((((5/11.0
      +                          )*1024)/4.096)*1.08)))
  7041  00EF  305F               	movlw	95
  7042  00F0  3196  2625  3180   	fcall	_ADC_get_val
  7043  00F3  3000               	movlw	0
  7044  00F4  0271               	subwf	?_ADC_get_val+1,w
  7045  00F5  307B               	movlw	123
  7046  00F6  1903               	skipnz
  7047  00F7  0270               	subwf	?_ADC_get_val,w
  7048  00F8  1C03               	skipc
  7049  00F9  28FE               	goto	l3706
  7050                           
  7051                           ;Multi_RX_testjig_v1.c: 570: print_error("16v-5v supply", "Volt Error H");
  7052  00FA  303E               	movlw	low (STR_15| (0+32768))
  7053  00FB  00F8               	movwf	print_error@top
  7054  00FC  3089               	movlw	high (STR_15| (0+32768))
  7055  00FD  291F               	goto	L13
  7056  00FE                     l3706:	
  7057                           
  7058                           ;Multi_RX_testjig_v1.c: 571: else if((ADC_get_val(0b01100011) < (unsigned int)((((12/11.
      +                          0)*1024)/4.096)*0.9)))
  7059  00FE  3063               	movlw	99
  7060  00FF  3196  2625  3180   	fcall	_ADC_get_val
  7061  0102  3000               	movlw	0
  7062  0103  0271               	subwf	?_ADC_get_val+1,w
  7063  0104  30F5               	movlw	245
  7064  0105  1903               	skipnz
  7065  0106  0270               	subwf	?_ADC_get_val,w
  7066  0107  1803               	skipnc
  7067  0108  2911               	goto	l3710
  7068                           
  7069                           ;Multi_RX_testjig_v1.c: 572: print_error("16v-12v supply", "Volt Error L");
  7070  0109  30CD               	movlw	low (STR_19| (0+32768))
  7071  010A  00F8               	movwf	print_error@top
  7072  010B  3088               	movlw	high (STR_19| (0+32768))
  7073  010C                     L12:	
  7074  010C  00F9               	movwf	print_error@top+1
  7075  010D  3080               	movlw	low (STR_8| (0+32768))
  7076  010E  00FA               	movwf	print_error@bottom
  7077  010F  3089               	movlw	high (STR_8| (0+32768))
  7078  0110  2941               	goto	L8
  7079  0111                     l3710:	
  7080                           
  7081                           ;Multi_RX_testjig_v1.c: 573: else if((ADC_get_val(0b01100011) > (unsigned int)((((12/11.
      +                          0)*1024)/4.096)*1.2)))
  7082  0111  3063               	movlw	99
  7083  0112  3196  2625  3180   	fcall	_ADC_get_val
  7084  0115  3001               	movlw	1
  7085  0116  0271               	subwf	?_ADC_get_val+1,w
  7086  0117  3048               	movlw	72
  7087  0118  1903               	skipnz
  7088  0119  0270               	subwf	?_ADC_get_val,w
  7089  011A  1C03               	skipc
  7090  011B  2924               	goto	l3714
  7091                           
  7092                           ;Multi_RX_testjig_v1.c: 574: print_error("16v-12v supply", "Volt Error H");
  7093  011C  30CD               	movlw	low (STR_19| (0+32768))
  7094  011D  00F8               	movwf	print_error@top
  7095  011E  3088               	movlw	high (STR_19| (0+32768))
  7096  011F                     L13:	
  7097  011F  00F9               	movwf	print_error@top+1
  7098  0120  3066               	movlw	low (STR_10| (0+32768))
  7099  0121  00FA               	movwf	print_error@bottom
  7100  0122  3089               	movlw	high (STR_10| (0+32768))
  7101  0123  2941               	goto	L8
  7102  0124                     l3714:	
  7103                           
  7104                           ;Multi_RX_testjig_v1.c: 575: else if((get_30v_current() >= 60))
  7105  0124  3195  25E6  3180   	fcall	_get_30v_current
  7106  0127  3000               	movlw	0
  7107  0128  0246               	subwf	?_get_30v_current+1,w
  7108  0129  303C               	movlw	60
  7109  012A  1903               	skipnz
  7110  012B  0245               	subwf	?_get_30v_current,w
  7111  012C  1C03               	skipc
  7112  012D  2936               	goto	l3718
  7113                           
  7114                           ;Multi_RX_testjig_v1.c: 576: print_error("16v supply", "Curr Error");
  7115  012E  304F               	movlw	low (STR_23| (0+32768))
  7116  012F  00F8               	movwf	print_error@top
  7117  0130  308A               	movlw	high (STR_23| (0+32768))
  7118  0131  00F9               	movwf	print_error@top+1
  7119  0132  302E               	movlw	low (STR_12| (0+32768))
  7120  0133  00FA               	movwf	print_error@bottom
  7121  0134  308A               	movlw	high (STR_12| (0+32768))
  7122  0135  2941               	goto	L8
  7123  0136                     l3718:	
  7124                           
  7125                           ;Multi_RX_testjig_v1.c: 577: else if(testjig_timer == 0)
  7126  0136  085E               	movf	_testjig_timer,w	;volatile
  7127  0137  045F               	iorwf	_testjig_timer+1,w	;volatile
  7128  0138  1D03               	btfss	3,2
  7129  0139  2945               	goto	l3722
  7130                           
  7131                           ;Multi_RX_testjig_v1.c: 578: print_error("16v-5v supply", "T-out Error");
  7132  013A  303E               	movlw	low (STR_15| (0+32768))
  7133  013B  00F8               	movwf	print_error@top
  7134  013C  3089               	movlw	high (STR_15| (0+32768))
  7135  013D  00F9               	movwf	print_error@top+1
  7136  013E  3016               	movlw	low (STR_14| (0+32768))
  7137  013F  00FA               	movwf	print_error@bottom
  7138  0140  308A               	movlw	high (STR_14| (0+32768))
  7139  0141                     L8:	
  7140  0141  00FB               	movwf	print_error@bottom+1
  7141  0142  318E  26E3  3180   	fcall	_print_error
  7142  0145                     l3722:	
  7143                           
  7144                           ;Multi_RX_testjig_v1.c: 584: if(RA2 == 1)
  7145  0145  0020               	movlb	0	; select bank0
  7146  0146  1D0C               	btfss	12,2	;volatile
  7147  0147  29B2               	goto	l3744
  7148                           
  7149                           ;Multi_RX_testjig_v1.c: 585: {
  7150                           ;Multi_RX_testjig_v1.c: 586: power_supply_set(0);
  7151  0148  3000               	movlw	0
  7152  0149  318F  27DF  3180   	fcall	_power_supply_set
  7153                           
  7154                           ;Multi_RX_testjig_v1.c: 588: print_screen("Pickit Programming", "");
  7155  014C  30B7               	movlw	low (STR_27| (0+32768))
  7156  014D  00F4               	movwf	print_screen@top
  7157  014E  3087               	movlw	high (STR_27| (0+32768))
  7158  014F  00F5               	movwf	print_screen@top+1
  7159  0150  3040               	movlw	low ((STR_157+15)| (0+32768))
  7160  0151  00F6               	movwf	print_screen@bottom
  7161  0152  3088               	movlw	high ((STR_157+15)| (0+32768))
  7162  0153  00F7               	movwf	print_screen@bottom+1
  7163  0154  318E  26C1  3180   	fcall	_print_screen
  7164                           
  7165                           ;Multi_RX_testjig_v1.c: 589: LATA7 = 1;
  7166  0157  0022               	movlb	2	; select bank2
  7167  0158  178C               	bsf	12,7	;volatile
  7168                           
  7169                           ;Multi_RX_testjig_v1.c: 590: _delay((unsigned long)((100)*(16000000/4000.0)));
  7170  0159  3003               	movlw	3
  7171  015A  0020               	movlb	0	; select bank0
  7172  015B  00CB               	movwf	??_main+2
  7173  015C  3008               	movlw	8
  7174  015D  00CA               	movwf	??_main+1
  7175  015E  3078               	movlw	120
  7176  015F  00C9               	movwf	??_main
  7177  0160                     u4847:	
  7178  0160  0BC9               	decfsz	??_main,f
  7179  0161  2960               	goto	u4847
  7180  0162  0BCA               	decfsz	??_main+1,f
  7181  0163  2960               	goto	u4847
  7182  0164  0BCB               	decfsz	??_main+2,f
  7183  0165  2960               	goto	u4847
  7184                           
  7185                           ;Multi_RX_testjig_v1.c: 591: print_screen("Waiting for", " Programming");
  7186  0166  30FE               	movlw	low (STR_29| (0+32768))
  7187  0167  00F4               	movwf	print_screen@top
  7188  0168  3089               	movlw	high (STR_29| (0+32768))
  7189  0169  00F5               	movwf	print_screen@top+1
  7190  016A  30BD               	movlw	low ((STR_27+6)| (0+32768))
  7191  016B  00F6               	movwf	print_screen@bottom
  7192  016C  3087               	movlw	high ((STR_27+6)| (0+32768))
  7193  016D  00F7               	movwf	print_screen@bottom+1
  7194  016E  318E  26C1  3180   	fcall	_print_screen
  7195                           
  7196                           ;Multi_RX_testjig_v1.c: 594: LATC2 = 1;
  7197  0171  0022               	movlb	2	; select bank2
  7198  0172  150E               	bsf	14,2	;volatile
  7199                           
  7200                           ;Multi_RX_testjig_v1.c: 595: LATC7 = 1;
  7201  0173  178E               	bsf	14,7	;volatile
  7202                           
  7203                           ;Multi_RX_testjig_v1.c: 596: _delay((unsigned long)((100)*(16000000/4000.0)));
  7204  0174  3003               	movlw	3
  7205  0175  0020               	movlb	0	; select bank0
  7206  0176  00CB               	movwf	??_main+2
  7207  0177  3008               	movlw	8
  7208  0178  00CA               	movwf	??_main+1
  7209  0179  3078               	movlw	120
  7210  017A  00C9               	movwf	??_main
  7211  017B                     u4857:	
  7212  017B  0BC9               	decfsz	??_main,f
  7213  017C  297B               	goto	u4857
  7214  017D  0BCA               	decfsz	??_main+1,f
  7215  017E  297B               	goto	u4857
  7216  017F  0BCB               	decfsz	??_main+2,f
  7217  0180  297B               	goto	u4857
  7218                           
  7219                           ;Multi_RX_testjig_v1.c: 597: LATC6 = 1;
  7220  0181  0022               	movlb	2	; select bank2
  7221  0182  170E               	bsf	14,6	;volatile
  7222                           
  7223                           ;Multi_RX_testjig_v1.c: 598: _delay((unsigned long)((1000)*(16000000/4000.0)));
  7224  0183  3015               	movlw	21
  7225  0184  0020               	movlb	0	; select bank0
  7226  0185  00CB               	movwf	??_main+2
  7227  0186  304B               	movlw	75
  7228  0187  00CA               	movwf	??_main+1
  7229  0188  30D1               	movlw	209
  7230  0189  00C9               	movwf	??_main
  7231  018A                     u4867:	
  7232  018A  0BC9               	decfsz	??_main,f
  7233  018B  298A               	goto	u4867
  7234  018C  0BCA               	decfsz	??_main+1,f
  7235  018D  298A               	goto	u4867
  7236  018E  0BCB               	decfsz	??_main+2,f
  7237  018F  298A               	goto	u4867
  7238  0190  0000               	nop
  7239                           
  7240                           ;Multi_RX_testjig_v1.c: 599: LATC6 = 0;
  7241  0191  0022               	movlb	2	; select bank2
  7242  0192  130E               	bcf	14,6	;volatile
  7243                           
  7244                           ;Multi_RX_testjig_v1.c: 600: _delay((unsigned long)((4500)*(16000000/4000.0)));
  7245  0193  305C               	movlw	92
  7246  0194  0020               	movlb	0	; select bank0
  7247  0195  00CB               	movwf	??_main+2
  7248  0196  3051               	movlw	81
  7249  0197  00CA               	movwf	??_main+1
  7250  0198  30BA               	movlw	186
  7251  0199  00C9               	movwf	??_main
  7252  019A                     u4877:	
  7253  019A  0BC9               	decfsz	??_main,f
  7254  019B  299A               	goto	u4877
  7255  019C  0BCA               	decfsz	??_main+1,f
  7256  019D  299A               	goto	u4877
  7257  019E  0BCB               	decfsz	??_main+2,f
  7258  019F  299A               	goto	u4877
  7259  01A0  0000               	nop
  7260                           
  7261                           ;Multi_RX_testjig_v1.c: 601: LATC2 = 0;
  7262  01A1  0022               	movlb	2	; select bank2
  7263  01A2  110E               	bcf	14,2	;volatile
  7264                           
  7265                           ;Multi_RX_testjig_v1.c: 602: LATC7 = 0;
  7266  01A3  138E               	bcf	14,7	;volatile
  7267                           
  7268                           ;Multi_RX_testjig_v1.c: 603: _delay((unsigned long)((100)*(16000000/4000.0)));
  7269  01A4  3003               	movlw	3
  7270  01A5  0020               	movlb	0	; select bank0
  7271  01A6  00CB               	movwf	??_main+2
  7272  01A7  3008               	movlw	8
  7273  01A8  00CA               	movwf	??_main+1
  7274  01A9  3078               	movlw	120
  7275  01AA  00C9               	movwf	??_main
  7276  01AB                     u4887:	
  7277  01AB  0BC9               	decfsz	??_main,f
  7278  01AC  29AB               	goto	u4887
  7279  01AD  0BCA               	decfsz	??_main+1,f
  7280  01AE  29AB               	goto	u4887
  7281  01AF  0BCB               	decfsz	??_main+2,f
  7282  01B0  29AB               	goto	u4887
  7283                           
  7284                           ;Multi_RX_testjig_v1.c: 610: }
  7285  01B1  29CB               	goto	l3748
  7286  01B2                     l3744:	
  7287                           
  7288                           ;Multi_RX_testjig_v1.c: 611: else
  7289                           ;Multi_RX_testjig_v1.c: 612: {
  7290                           ;Multi_RX_testjig_v1.c: 613: print_screen("Pickit Programming", " skipped");
  7291  01B2  30B7               	movlw	low (STR_27| (0+32768))
  7292  01B3  00F4               	movwf	print_screen@top
  7293  01B4  3087               	movlw	high (STR_27| (0+32768))
  7294  01B5  00F5               	movwf	print_screen@top+1
  7295  01B6  30DE               	movlw	low (STR_32| (0+32768))
  7296  01B7  00F6               	movwf	print_screen@bottom
  7297  01B8  308A               	movlw	high (STR_32| (0+32768))
  7298  01B9  00F7               	movwf	print_screen@bottom+1
  7299  01BA  318E  26C1  3180   	fcall	_print_screen
  7300                           
  7301                           ;Multi_RX_testjig_v1.c: 614: _delay((unsigned long)((300)*(16000000/4000.0)));
  7302  01BD  3007               	movlw	7
  7303  01BE  0020               	movlb	0	; select bank0
  7304  01BF  00CB               	movwf	??_main+2
  7305  01C0  3017               	movlw	23
  7306  01C1  00CA               	movwf	??_main+1
  7307  01C2  306F               	movlw	111
  7308  01C3  00C9               	movwf	??_main
  7309  01C4                     u4897:	
  7310  01C4  0BC9               	decfsz	??_main,f
  7311  01C5  29C4               	goto	u4897
  7312  01C6  0BCA               	decfsz	??_main+1,f
  7313  01C7  29C4               	goto	u4897
  7314  01C8  0BCB               	decfsz	??_main+2,f
  7315  01C9  29C4               	goto	u4897
  7316  01CA  0000               	nop
  7317  01CB                     l3748:	
  7318                           
  7319                           ;Multi_RX_testjig_v1.c: 615: }
  7320                           ;Multi_RX_testjig_v1.c: 631: _delay((unsigned long)((3000)*(16000000/4000.0)));
  7321  01CB  303D               	movlw	61
  7322  01CC  0020               	movlb	0	; select bank0
  7323  01CD  00CB               	movwf	??_main+2
  7324  01CE  30E1               	movlw	225
  7325  01CF  00CA               	movwf	??_main+1
  7326  01D0  307A               	movlw	122
  7327  01D1  00C9               	movwf	??_main
  7328  01D2                     u4907:	
  7329  01D2  0BC9               	decfsz	??_main,f
  7330  01D3  29D2               	goto	u4907
  7331  01D4  0BCA               	decfsz	??_main+1,f
  7332  01D5  29D2               	goto	u4907
  7333  01D6  0BCB               	decfsz	??_main+2,f
  7334  01D7  29D2               	goto	u4907
  7335  01D8  3200               	nop2
  7336                           
  7337                           ;Multi_RX_testjig_v1.c: 632: _delay((unsigned long)((100)*(16000000/4000.0)));
  7338  01D9  3003               	movlw	3
  7339  01DA  0020               	movlb	0	; select bank0
  7340  01DB  00CB               	movwf	??_main+2
  7341  01DC  3008               	movlw	8
  7342  01DD  00CA               	movwf	??_main+1
  7343  01DE  3078               	movlw	120
  7344  01DF  00C9               	movwf	??_main
  7345  01E0                     u4917:	
  7346  01E0  0BC9               	decfsz	??_main,f
  7347  01E1  29E0               	goto	u4917
  7348  01E2  0BCA               	decfsz	??_main+1,f
  7349  01E3  29E0               	goto	u4917
  7350  01E4  0BCB               	decfsz	??_main+2,f
  7351  01E5  29E0               	goto	u4917
  7352                           
  7353                           ;Multi_RX_testjig_v1.c: 633: print_screen("Establishing", "comms");
  7354  01E6  309A               	movlw	low (STR_33| (0+32768))
  7355  01E7  00F4               	movwf	print_screen@top
  7356  01E8  3089               	movlw	high (STR_33| (0+32768))
  7357  01E9  00F5               	movwf	print_screen@top+1
  7358  01EA  303E               	movlw	low ((STR_160+5)| (0+32768))
  7359  01EB  00F6               	movwf	print_screen@bottom
  7360  01EC  308A               	movlw	high ((STR_160+5)| (0+32768))
  7361  01ED  00F7               	movwf	print_screen@bottom+1
  7362  01EE  318E  26C1  3180   	fcall	_print_screen
  7363                           
  7364                           ;Multi_RX_testjig_v1.c: 634: unsigned char device_type;
  7365                           ;Multi_RX_testjig_v1.c: 635: unsigned char RX_data = 0;
  7366  01F1  0020               	movlb	0	; select bank0
  7367  01F2  3000               	movlw	0
  7368  01F3  01D0               	clrf	main@RX_data
  7369  01F4  01CE               	clrf	main@i
  7370  01F5  01CF               	clrf	main@i+1
  7371  01F6  2A2A               	goto	L9
  7372  01F7                     l3764:	
  7373  01F7  30A1               	movlw	161
  7374  01F8  0651               	xorwf	main@device_type,w
  7375  01F9  1903               	btfsc	3,2
  7376  01FA  2A3C               	goto	l3776
  7377  01FB  30A2               	movlw	162
  7378  01FC  0651               	xorwf	main@device_type,w
  7379  01FD  1903               	btfsc	3,2
  7380  01FE  2A3C               	goto	l3776
  7381                           
  7382                           ;Multi_RX_testjig_v1.c: 643: lcd_print_int(i, 11, 0, 0);
  7383  01FF  084F               	movf	main@i+1,w
  7384  0200  00A1               	movwf	lcd_print_int@number+1
  7385  0201  084E               	movf	main@i,w
  7386  0202  00A0               	movwf	lcd_print_int@number
  7387  0203  300B               	movlw	11
  7388  0204  00A2               	movwf	lcd_print_int@pos
  7389  0205  01A3               	clrf	lcd_print_int@pos+1
  7390  0206  01A4               	clrf	lcd_print_int@decimal
  7391  0207  01A5               	clrf	lcd_print_int@ten_thou_digit
  7392  0208  318C  24ED  3180   	fcall	_lcd_print_int
  7393                           
  7394                           ;Multi_RX_testjig_v1.c: 644: lcd_print_int(device_type, 5, 0, 0);
  7395  020B  0020               	movlb	0	; select bank0
  7396  020C  0851               	movf	main@device_type,w
  7397  020D  00A0               	movwf	lcd_print_int@number
  7398  020E  3005               	movlw	5
  7399  020F  01A1               	clrf	lcd_print_int@number+1
  7400  0210  00A2               	movwf	lcd_print_int@pos
  7401  0211  01A3               	clrf	lcd_print_int@pos+1
  7402  0212  01A4               	clrf	lcd_print_int@decimal
  7403  0213  01A5               	clrf	lcd_print_int@ten_thou_digit
  7404  0214  318C  24ED  3180   	fcall	_lcd_print_int
  7405                           
  7406                           ;Multi_RX_testjig_v1.c: 645: _delay((unsigned long)((50)*(16000000/4000.0)));
  7407  0217  3002               	movlw	2
  7408  0218  0020               	movlb	0	; select bank0
  7409  0219  00CB               	movwf	??_main+2
  7410  021A  3004               	movlw	4
  7411  021B  00CA               	movwf	??_main+1
  7412  021C  30BA               	movlw	186
  7413  021D  00C9               	movwf	??_main
  7414  021E                     u4927:	
  7415  021E  0BC9               	decfsz	??_main,f
  7416  021F  2A1E               	goto	u4927
  7417  0220  0BCA               	decfsz	??_main+1,f
  7418  0221  2A1E               	goto	u4927
  7419  0222  0BCB               	decfsz	??_main+2,f
  7420  0223  2A1E               	goto	u4927
  7421  0224  0000               	nop
  7422  0225  0020               	movlb	0	; select bank0
  7423  0226  0ACE               	incf	main@i,f
  7424  0227  1903               	skipnz
  7425  0228  0ACF               	incf	main@i+1,f
  7426  0229  3000               	movlw	0
  7427  022A                     L9:	
  7428  022A  024F               	subwf	main@i+1,w
  7429  022B  3064               	movlw	100
  7430  022C  1903               	skipnz
  7431  022D  024E               	subwf	main@i,w
  7432  022E  1803               	btfsc	3,0
  7433  022F  2A3C               	goto	l3776
  7434                           
  7435                           ;Multi_RX_testjig_v1.c: 638: {
  7436                           ;Multi_RX_testjig_v1.c: 639: TX_one(0x01);
  7437  0230  3001               	movlw	1
  7438  0231  3194  245B  3180   	fcall	_TX_one
  7439                           
  7440                           ;Multi_RX_testjig_v1.c: 640: device_type = RX_one_timeout();
  7441  0234  318B  2386  3180   	fcall	_RX_one_timeout
  7442  0237  0020               	movlb	0	; select bank0
  7443  0238  00D1               	movwf	main@device_type
  7444                           
  7445                           ;Multi_RX_testjig_v1.c: 641: if((device_type == 0xAA) || (device_type == 0xA1) || (devic
      +                          e_type == 0xA2))
  7446  0239  3AAA               	xorlw	170
  7447  023A  1D03               	btfss	3,2
  7448  023B  29F7               	goto	l3764
  7449  023C                     l3776:	
  7450                           
  7451                           ;Multi_RX_testjig_v1.c: 646: }
  7452                           ;Multi_RX_testjig_v1.c: 647: if(i >= 10)
  7453  023C  3000               	movlw	0
  7454  023D  024F               	subwf	main@i+1,w
  7455  023E  300A               	movlw	10
  7456  023F  1903               	skipnz
  7457  0240  024E               	subwf	main@i,w
  7458  0241  1C03               	skipc
  7459  0242  2A4E               	goto	l3780
  7460                           
  7461                           ;Multi_RX_testjig_v1.c: 648: {
  7462                           ;Multi_RX_testjig_v1.c: 651: print_error("Comms Error", " 1");
  7463  0243  300A               	movlw	low (STR_35| (0+32768))
  7464  0244  00F8               	movwf	print_error@top
  7465  0245  308A               	movlw	high (STR_35| (0+32768))
  7466  0246  00F9               	movwf	print_error@top+1
  7467  0247  309C               	movlw	low ((STR_60+6)| (0+32768))
  7468  0248  00FA               	movwf	print_error@bottom
  7469  0249  308A               	movlw	high ((STR_60+6)| (0+32768))
  7470  024A  00FB               	movwf	print_error@bottom+1
  7471  024B  318E  26E3  3180   	fcall	_print_error
  7472  024E                     l3780:	
  7473                           
  7474                           ;Multi_RX_testjig_v1.c: 652: }
  7475                           ;Multi_RX_testjig_v1.c: 654: if((device_type == 0xAA)|| (device_type == 0xA2))
  7476  024E  30AA               	movlw	170
  7477  024F  0020               	movlb	0	; select bank0
  7478  0250  0651               	xorwf	main@device_type,w
  7479  0251  1903               	btfsc	3,2
  7480  0252  2A57               	goto	l3784
  7481  0253  30A2               	movlw	162
  7482  0254  0651               	xorwf	main@device_type,w
  7483  0255  1D03               	btfss	3,2
  7484  0256  2ABE               	goto	l3818
  7485  0257                     l3784:	
  7486                           
  7487                           ;Multi_RX_testjig_v1.c: 655: {
  7488                           ;Multi_RX_testjig_v1.c: 657: TX_one(0x10);
  7489  0257  3010               	movlw	16
  7490  0258  3194  245B  3180   	fcall	_TX_one
  7491                           
  7492                           ;Multi_RX_testjig_v1.c: 658: RX_data = RX_one();
  7493  025B  3194  247D  3180   	fcall	_RX_one
  7494  025E  0020               	movlb	0	; select bank0
  7495  025F  00D0               	movwf	main@RX_data
  7496                           
  7497                           ;Multi_RX_testjig_v1.c: 659: if(RX_data == 0xEE)
  7498  0260  3AEE               	xorlw	238
  7499  0261  1D03               	btfss	3,2
  7500  0262  2A6B               	goto	l3790
  7501                           
  7502                           ;Multi_RX_testjig_v1.c: 660: print_error("EEPROM error", " Read/Write");
  7503  0263  30A7               	movlw	low (STR_37| (0+32768))
  7504  0264  00F8               	movwf	print_error@top
  7505  0265  3089               	movlw	high (STR_37| (0+32768))
  7506  0266  00F9               	movwf	print_error@top+1
  7507  0267  30DA               	movlw	low (STR_38| (0+32768))
  7508  0268  00FA               	movwf	print_error@bottom
  7509  0269  3089               	movlw	high (STR_38| (0+32768))
  7510  026A  2A76               	goto	L2
  7511  026B                     l3790:	
  7512                           
  7513                           ;Multi_RX_testjig_v1.c: 661: else if(RX_data != 0x1A)
  7514  026B  301A               	movlw	26
  7515  026C  0650               	xorwf	main@RX_data,w
  7516  026D  1903               	btfsc	3,2
  7517  026E  2A7A               	goto	l341
  7518                           
  7519                           ;Multi_RX_testjig_v1.c: 662: print_error("Comms Error", " 2");
  7520  026F  300A               	movlw	low (STR_35| (0+32768))
  7521  0270  00F8               	movwf	print_error@top
  7522  0271  308A               	movlw	high (STR_35| (0+32768))
  7523  0272  00F9               	movwf	print_error@top+1
  7524  0273  30A5               	movlw	low ((STR_52+6)| (0+32768))
  7525  0274  00FA               	movwf	print_error@bottom
  7526  0275  308A               	movlw	high ((STR_52+6)| (0+32768))
  7527  0276                     L2:	
  7528  0276  00FB               	movwf	print_error@bottom+1
  7529  0277  318E  26E3  3180   	fcall	_print_error
  7530  027A                     l341:	
  7531                           
  7532                           ;Multi_RX_testjig_v1.c: 665: unsigned int mem_size;
  7533                           ;Multi_RX_testjig_v1.c: 666: print_screen("Test EEPROM ", " size");
  7534  027A  304C               	movlw	low (STR_41| (0+32768))
  7535  027B  00F4               	movwf	print_screen@top
  7536  027C  3089               	movlw	high (STR_41| (0+32768))
  7537  027D  00F5               	movwf	print_screen@top+1
  7538  027E  30EC               	movlw	low ((STR_43+6)| (0+32768))
  7539  027F  00F6               	movwf	print_screen@bottom
  7540  0280  3089               	movlw	high ((STR_43+6)| (0+32768))
  7541  0281  00F7               	movwf	print_screen@bottom+1
  7542  0282  318E  26C1  3180   	fcall	_print_screen
  7543                           
  7544                           ;Multi_RX_testjig_v1.c: 667: TX_one(0x20);
  7545  0285  3020               	movlw	32
  7546  0286  3194  245B  3180   	fcall	_TX_one
  7547                           
  7548                           ;Multi_RX_testjig_v1.c: 668: RX_data = RX_one();
  7549  0289  3194  247D  3180   	fcall	_RX_one
  7550  028C  0020               	movlb	0	; select bank0
  7551  028D  00D0               	movwf	main@RX_data
  7552                           
  7553                           ;Multi_RX_testjig_v1.c: 669: mem_size = RX_data<<8;
  7554  028E  00CD               	movwf	main@mem_size+1
  7555  028F  3021               	movlw	33
  7556  0290  01CC               	clrf	main@mem_size
  7557                           
  7558                           ;Multi_RX_testjig_v1.c: 670: TX_one(0x21);
  7559  0291  3194  245B  3180   	fcall	_TX_one
  7560                           
  7561                           ;Multi_RX_testjig_v1.c: 671: RX_data = RX_one();
  7562  0294  3194  247D  3180   	fcall	_RX_one
  7563  0297  0020               	movlb	0	; select bank0
  7564  0298  00D0               	movwf	main@RX_data
  7565                           
  7566                           ;Multi_RX_testjig_v1.c: 672: mem_size = mem_size | RX_data;
  7567  0299  04CC               	iorwf	main@mem_size,f
  7568                           
  7569                           ;Multi_RX_testjig_v1.c: 673: if(device_type == 0xAA)
  7570  029A  30AA               	movlw	170
  7571  029B  0651               	xorwf	main@device_type,w
  7572  029C  1D03               	btfss	3,2
  7573  029D  2AAB               	goto	l3812
  7574                           
  7575                           ;Multi_RX_testjig_v1.c: 674: {
  7576                           ;Multi_RX_testjig_v1.c: 675: if(mem_size != 0x2000)
  7577  029E  3020               	movlw	32
  7578  029F  064D               	xorwf	main@mem_size+1,w
  7579  02A0  044C               	iorwf	main@mem_size,w
  7580  02A1  1903               	btfsc	3,2
  7581  02A2  2ABE               	goto	l3818
  7582                           
  7583                           ;Multi_RX_testjig_v1.c: 676: print_error("EEPROM size", " Error Condo3");
  7584  02A3  30E6               	movlw	low (STR_43| (0+32768))
  7585  02A4  00F8               	movwf	print_error@top
  7586  02A5  3089               	movlw	high (STR_43| (0+32768))
  7587  02A6  00F9               	movwf	print_error@top+1
  7588  02A7  30EA               	movlw	low (STR_44| (0+32768))
  7589  02A8  00FA               	movwf	print_error@bottom
  7590  02A9  3088               	movlw	high (STR_44| (0+32768))
  7591  02AA  2ABA               	goto	L10
  7592  02AB                     l3812:	
  7593                           
  7594                           ;Multi_RX_testjig_v1.c: 678: else if(device_type == 0xA2)
  7595  02AB  30A2               	movlw	162
  7596  02AC  0651               	xorwf	main@device_type,w
  7597  02AD  1D03               	btfss	3,2
  7598  02AE  2ABE               	goto	l3818
  7599                           
  7600                           ;Multi_RX_testjig_v1.c: 679: {
  7601                           ;Multi_RX_testjig_v1.c: 680: if(mem_size != 0x0000)
  7602  02AF  084C               	movf	main@mem_size,w
  7603  02B0  044D               	iorwf	main@mem_size+1,w
  7604  02B1  1903               	btfsc	3,2
  7605  02B2  2ABE               	goto	l3818
  7606                           
  7607                           ;Multi_RX_testjig_v1.c: 681: print_error("EEPROM size", " Error Mem_copier");
  7608  02B3  30E6               	movlw	low (STR_43| (0+32768))
  7609  02B4  00F8               	movwf	print_error@top
  7610  02B5  3089               	movlw	high (STR_43| (0+32768))
  7611  02B6  00F9               	movwf	print_error@top+1
  7612  02B7  30CA               	movlw	low (STR_46| (0+32768))
  7613  02B8  00FA               	movwf	print_error@bottom
  7614  02B9  3087               	movlw	high (STR_46| (0+32768))
  7615  02BA                     L10:	
  7616  02BA  00FB               	movwf	print_error@bottom+1
  7617  02BB  318E  26E3  3180   	fcall	_print_error
  7618  02BE                     l3818:	
  7619                           
  7620                           ;Multi_RX_testjig_v1.c: 682: }
  7621                           ;Multi_RX_testjig_v1.c: 683: }
  7622                           ;Multi_RX_testjig_v1.c: 685: if((device_type == 0xAA)|| (device_type == 0xA1))
  7623  02BE  30AA               	movlw	170
  7624  02BF  0020               	movlb	0	; select bank0
  7625  02C0  0651               	xorwf	main@device_type,w
  7626  02C1  1903               	btfsc	3,2
  7627  02C2  2AC7               	goto	l3822
  7628  02C3  30A1               	movlw	161
  7629  02C4  0651               	xorwf	main@device_type,w
  7630  02C5  1D03               	btfss	3,2
  7631  02C6  2B4B               	goto	l3856
  7632  02C7                     l3822:	
  7633                           
  7634                           ;Multi_RX_testjig_v1.c: 686: {
  7635                           ;Multi_RX_testjig_v1.c: 688: Vout_set(12);
  7636  02C7  300C               	movlw	12
  7637  02C8  00F4               	movwf	Vout_set@Volts
  7638  02C9  01F5               	clrf	Vout_set@Volts+1
  7639  02CA  318C  249C  3180   	fcall	_Vout_set
  7640                           
  7641                           ;Multi_RX_testjig_v1.c: 689: print_screen("Test Relay", "");
  7642  02CD  3044               	movlw	low (STR_47| (0+32768))
  7643  02CE  00F4               	movwf	print_screen@top
  7644  02CF  308A               	movlw	high (STR_47| (0+32768))
  7645  02D0  00F5               	movwf	print_screen@top+1
  7646  02D1  3040               	movlw	low ((STR_157+15)| (0+32768))
  7647  02D2  00F6               	movwf	print_screen@bottom
  7648  02D3  3088               	movlw	high ((STR_157+15)| (0+32768))
  7649  02D4  00F7               	movwf	print_screen@bottom+1
  7650  02D5  318E  26C1  3180   	fcall	_print_screen
  7651                           
  7652                           ;Multi_RX_testjig_v1.c: 690: if(RF5 == 0 && RF2 == 1)
  7653  02D8  0025               	movlb	5	; select bank5
  7654  02D9  1E8C               	btfss	12,5	;volatile
  7655  02DA  1D0C               	btfss	12,2	;volatile
  7656  02DB  2B40               	goto	l3854
  7657                           
  7658                           ;Multi_RX_testjig_v1.c: 691: {
  7659                           ;Multi_RX_testjig_v1.c: 692: TX_one(0x30);
  7660  02DC  3030               	movlw	48
  7661  02DD  3194  245B  3180   	fcall	_TX_one
  7662                           
  7663                           ;Multi_RX_testjig_v1.c: 693: if(RX_one() == 0x3A)
  7664  02E0  3194  247D  3180   	fcall	_RX_one
  7665  02E3  3A3A               	xorlw	58
  7666  02E4  1D03               	skipz
  7667  02E5  2B38               	goto	l3852
  7668                           
  7669                           ;Multi_RX_testjig_v1.c: 694: {
  7670                           ;Multi_RX_testjig_v1.c: 695: _delay((unsigned long)((50)*(16000000/4000.0)));
  7671  02E6  3002               	movlw	2
  7672  02E7  0020               	movlb	0	; select bank0
  7673  02E8  00CB               	movwf	??_main+2
  7674  02E9  3004               	movlw	4
  7675  02EA  00CA               	movwf	??_main+1
  7676  02EB  30BA               	movlw	186
  7677  02EC  00C9               	movwf	??_main
  7678  02ED                     u4937:	
  7679  02ED  0BC9               	decfsz	??_main,f
  7680  02EE  2AED               	goto	u4937
  7681  02EF  0BCA               	decfsz	??_main+1,f
  7682  02F0  2AED               	goto	u4937
  7683  02F1  0BCB               	decfsz	??_main+2,f
  7684  02F2  2AED               	goto	u4937
  7685  02F3  0000               	nop
  7686                           
  7687                           ;Multi_RX_testjig_v1.c: 696: if(RF5 == 1 && RF2 == 0)
  7688  02F4  0025               	movlb	5	; select bank5
  7689  02F5  1A8C               	btfsc	12,5	;volatile
  7690  02F6  190C               	btfsc	12,2	;volatile
  7691  02F7  2B30               	goto	l3850
  7692                           
  7693                           ;Multi_RX_testjig_v1.c: 697: {
  7694                           ;Multi_RX_testjig_v1.c: 698: TX_one(0x31);
  7695  02F8  3031               	movlw	49
  7696  02F9  3194  245B  3180   	fcall	_TX_one
  7697                           
  7698                           ;Multi_RX_testjig_v1.c: 699: if(RX_one() == 0x3A)
  7699  02FC  3194  247D  3180   	fcall	_RX_one
  7700  02FF  3A3A               	xorlw	58
  7701  0300  1D03               	skipz
  7702  0301  2B28               	goto	l3848
  7703                           
  7704                           ;Multi_RX_testjig_v1.c: 700: {
  7705                           ;Multi_RX_testjig_v1.c: 701: _delay((unsigned long)((50)*(16000000/4000.0)));
  7706  0302  3002               	movlw	2
  7707  0303  0020               	movlb	0	; select bank0
  7708  0304  00CB               	movwf	??_main+2
  7709  0305  3004               	movlw	4
  7710  0306  00CA               	movwf	??_main+1
  7711  0307  30BA               	movlw	186
  7712  0308  00C9               	movwf	??_main
  7713  0309                     u4947:	
  7714  0309  0BC9               	decfsz	??_main,f
  7715  030A  2B09               	goto	u4947
  7716  030B  0BCA               	decfsz	??_main+1,f
  7717  030C  2B09               	goto	u4947
  7718  030D  0BCB               	decfsz	??_main+2,f
  7719  030E  2B09               	goto	u4947
  7720  030F  0000               	nop
  7721                           
  7722                           ;Multi_RX_testjig_v1.c: 702: if(RF5 == 0 && RF2 == 1)
  7723  0310  0025               	movlb	5	; select bank5
  7724  0311  1E8C               	btfss	12,5	;volatile
  7725  0312  1D0C               	btfss	12,2	;volatile
  7726  0313  2B20               	goto	l3846
  7727                           
  7728                           ;Multi_RX_testjig_v1.c: 703: {
  7729                           ;Multi_RX_testjig_v1.c: 704: print_screen("Test Relay", "Pass");
  7730  0314  3044               	movlw	low (STR_47| (0+32768))
  7731  0315  00F4               	movwf	print_screen@top
  7732  0316  308A               	movlw	high (STR_47| (0+32768))
  7733  0317  00F5               	movwf	print_screen@top+1
  7734  0318  30EB               	movlw	low ((STR_163+4)| (0+32768))
  7735  0319  00F6               	movwf	print_screen@bottom
  7736  031A  308A               	movlw	high ((STR_163+4)| (0+32768))
  7737  031B  00F7               	movwf	print_screen@bottom+1
  7738  031C  318E  26C1  3180   	fcall	_print_screen
  7739                           
  7740                           ;Multi_RX_testjig_v1.c: 705: }
  7741  031F  2B4B               	goto	l3856
  7742  0320                     l3846:	
  7743                           
  7744                           ;Multi_RX_testjig_v1.c: 706: else
  7745                           ;Multi_RX_testjig_v1.c: 707: print_error("Relay de-energized", " Error 2");
  7746  0320  30A4               	movlw	low (STR_51| (0+32768))
  7747  0321  00F8               	movwf	print_error@top
  7748  0322  3087               	movlw	high (STR_51| (0+32768))
  7749  0323  00F9               	movwf	print_error@top+1
  7750  0324  309F               	movlw	low (STR_52| (0+32768))
  7751  0325  00FA               	movwf	print_error@bottom
  7752  0326  308A               	movlw	high (STR_52| (0+32768))
  7753  0327  2B47               	goto	L3
  7754  0328                     l3848:	
  7755                           
  7756                           ;Multi_RX_testjig_v1.c: 709: else
  7757                           ;Multi_RX_testjig_v1.c: 710: print_error("Comms Error", " 3");
  7758  0328  300A               	movlw	low (STR_35| (0+32768))
  7759  0329  00F8               	movwf	print_error@top
  7760  032A  308A               	movlw	high (STR_35| (0+32768))
  7761  032B  00F9               	movwf	print_error@top+1
  7762  032C  3041               	movlw	low (STR_54| (0+32768))
  7763  032D  00FA               	movwf	print_error@bottom
  7764  032E  308B               	movlw	high (STR_54| (0+32768))
  7765  032F  2B47               	goto	L3
  7766  0330                     l3850:	
  7767                           
  7768                           ;Multi_RX_testjig_v1.c: 712: else
  7769                           ;Multi_RX_testjig_v1.c: 713: print_error("Relay energized", " Error");
  7770  0330  3051               	movlw	low (STR_55| (0+32768))
  7771  0331  00F8               	movwf	print_error@top
  7772  0332  3088               	movlw	high (STR_55| (0+32768))
  7773  0333  00F9               	movwf	print_error@top+1
  7774  0334  3032               	movlw	low ((STR_12+4)| (0+32768))
  7775  0335  00FA               	movwf	print_error@bottom
  7776  0336  308A               	movlw	high ((STR_12+4)| (0+32768))
  7777  0337  2B47               	goto	L3
  7778  0338                     l3852:	
  7779                           
  7780                           ;Multi_RX_testjig_v1.c: 715: else
  7781                           ;Multi_RX_testjig_v1.c: 716: print_error("Comms Error", " 4");
  7782  0338  300A               	movlw	low (STR_35| (0+32768))
  7783  0339  00F8               	movwf	print_error@top
  7784  033A  308A               	movlw	high (STR_35| (0+32768))
  7785  033B  00F9               	movwf	print_error@top+1
  7786  033C  3044               	movlw	low (STR_58| (0+32768))
  7787  033D  00FA               	movwf	print_error@bottom
  7788  033E  308B               	movlw	high (STR_58| (0+32768))
  7789  033F  2B47               	goto	L3
  7790  0340                     l3854:	
  7791                           
  7792                           ;Multi_RX_testjig_v1.c: 718: else
  7793                           ;Multi_RX_testjig_v1.c: 719: print_error("Relay de-energized", " Error 1");
  7794  0340  30A4               	movlw	low (STR_51| (0+32768))
  7795  0341  00F8               	movwf	print_error@top
  7796  0342  3087               	movlw	high (STR_51| (0+32768))
  7797  0343  00F9               	movwf	print_error@top+1
  7798  0344  3096               	movlw	low (STR_60| (0+32768))
  7799  0345  00FA               	movwf	print_error@bottom
  7800  0346  308A               	movlw	high (STR_60| (0+32768))
  7801  0347                     L3:	
  7802  0347  00FB               	movwf	print_error@bottom+1
  7803  0348  318E  26E3  3180   	fcall	_print_error
  7804  034B                     l3856:	
  7805                           
  7806                           ;Multi_RX_testjig_v1.c: 720: }
  7807                           ;Multi_RX_testjig_v1.c: 722: if((device_type == 0xAA)|| (device_type == 0xA1))
  7808  034B  30AA               	movlw	170
  7809  034C  0020               	movlb	0	; select bank0
  7810  034D  0651               	xorwf	main@device_type,w
  7811  034E  1903               	btfsc	3,2
  7812  034F  2B54               	goto	l3860
  7813  0350  30A1               	movlw	161
  7814  0351  0651               	xorwf	main@device_type,w
  7815  0352  1D03               	btfss	3,2
  7816  0353  2DA1               	goto	l4028
  7817  0354                     l3860:	
  7818                           
  7819                           ;Multi_RX_testjig_v1.c: 723: {
  7820                           ;Multi_RX_testjig_v1.c: 725: Vout_set(15);
  7821  0354  300F               	movlw	15
  7822  0355  00F4               	movwf	Vout_set@Volts
  7823  0356  01F5               	clrf	Vout_set@Volts+1
  7824  0357  318C  249C  3180   	fcall	_Vout_set
  7825                           
  7826                           ;Multi_RX_testjig_v1.c: 726: print_screen("Test CH2", "");
  7827  035A  30A8               	movlw	low (STR_61| (0+32768))
  7828  035B  00F4               	movwf	print_screen@top
  7829  035C  308A               	movlw	high (STR_61| (0+32768))
  7830  035D  00F5               	movwf	print_screen@top+1
  7831  035E  3040               	movlw	low ((STR_157+15)| (0+32768))
  7832  035F  00F6               	movwf	print_screen@bottom
  7833  0360  3088               	movlw	high ((STR_157+15)| (0+32768))
  7834  0361  00F7               	movwf	print_screen@bottom+1
  7835  0362  318E  26C1  3180   	fcall	_print_screen
  7836                           
  7837                           ;Multi_RX_testjig_v1.c: 727: TX_one(0x41);
  7838  0365  3041               	movlw	65
  7839  0366  3194  245B  3180   	fcall	_TX_one
  7840                           
  7841                           ;Multi_RX_testjig_v1.c: 728: if(RX_one() == 0x4A)
  7842  0369  3194  247D  3180   	fcall	_RX_one
  7843  036C  3A4A               	xorlw	74
  7844  036D  1D03               	skipz
  7845  036E  2C74               	goto	l3944
  7846                           
  7847                           ;Multi_RX_testjig_v1.c: 729: {
  7848                           ;Multi_RX_testjig_v1.c: 730: _delay((unsigned long)((10)*(16000000/4000.0)));
  7849  036F  3034               	movlw	52
  7850  0370  0020               	movlb	0	; select bank0
  7851  0371  00CA               	movwf	??_main+1
  7852  0372  30F1               	movlw	241
  7853  0373  00C9               	movwf	??_main
  7854  0374                     u4957:	
  7855  0374  0BC9               	decfsz	??_main,f
  7856  0375  2B74               	goto	u4957
  7857  0376  0BCA               	decfsz	??_main+1,f
  7858  0377  2B74               	goto	u4957
  7859  0378  3200               	nop2
  7860                           
  7861                           ;Multi_RX_testjig_v1.c: 731: if(RF1 == 1 && RF0 == 1)
  7862  0379  0025               	movlb	5	; select bank5
  7863  037A  188C               	btfsc	12,1	;volatile
  7864  037B  1C0C               	btfss	12,0	;volatile
  7865  037C  2C6C               	goto	l3942
  7866                           
  7867                           ;Multi_RX_testjig_v1.c: 732: {
  7868                           ;Multi_RX_testjig_v1.c: 733: TX_one(0x40);
  7869  037D  3040               	movlw	64
  7870  037E  3194  245B  3180   	fcall	_TX_one
  7871                           
  7872                           ;Multi_RX_testjig_v1.c: 734: if(RX_one() == 0x4A)
  7873  0381  3194  247D  3180   	fcall	_RX_one
  7874  0384  3A4A               	xorlw	74
  7875  0385  1D03               	skipz
  7876  0386  2C64               	goto	l3940
  7877                           
  7878                           ;Multi_RX_testjig_v1.c: 735: {
  7879                           ;Multi_RX_testjig_v1.c: 736: _delay((unsigned long)((10)*(16000000/4000.0)));
  7880  0387  3034               	movlw	52
  7881  0388  0020               	movlb	0	; select bank0
  7882  0389  00CA               	movwf	??_main+1
  7883  038A  30F1               	movlw	241
  7884  038B  00C9               	movwf	??_main
  7885  038C                     u4967:	
  7886  038C  0BC9               	decfsz	??_main,f
  7887  038D  2B8C               	goto	u4967
  7888  038E  0BCA               	decfsz	??_main+1,f
  7889  038F  2B8C               	goto	u4967
  7890  0390  3200               	nop2
  7891                           
  7892                           ;Multi_RX_testjig_v1.c: 737: if(RF1 == 0 && RF0 == 1)
  7893  0391  0025               	movlb	5	; select bank5
  7894  0392  1C8C               	btfss	12,1	;volatile
  7895  0393  1C0C               	btfss	12,0	;volatile
  7896  0394  2C5C               	goto	l3938
  7897                           
  7898                           ;Multi_RX_testjig_v1.c: 738: {
  7899                           ;Multi_RX_testjig_v1.c: 739: TX_one(0x41);
  7900  0395  3041               	movlw	65
  7901  0396  3194  245B  3180   	fcall	_TX_one
  7902                           
  7903                           ;Multi_RX_testjig_v1.c: 740: if(RX_one() == 0x4A)
  7904  0399  3194  247D  3180   	fcall	_RX_one
  7905  039C  3A4A               	xorlw	74
  7906  039D  1D03               	skipz
  7907  039E  2C54               	goto	l3936
  7908                           
  7909                           ;Multi_RX_testjig_v1.c: 741: {
  7910                           ;Multi_RX_testjig_v1.c: 742: LATB5 = 1;
  7911  039F  0022               	movlb	2	; select bank2
  7912  03A0  168D               	bsf	13,5	;volatile
  7913                           
  7914                           ;Multi_RX_testjig_v1.c: 743: _delay((unsigned long)((50)*(16000000/4000.0)));
  7915  03A1  3002               	movlw	2
  7916  03A2  0020               	movlb	0	; select bank0
  7917  03A3  00CB               	movwf	??_main+2
  7918  03A4  3004               	movlw	4
  7919  03A5  00CA               	movwf	??_main+1
  7920  03A6  30BA               	movlw	186
  7921  03A7  00C9               	movwf	??_main
  7922  03A8                     u4977:	
  7923  03A8  0BC9               	decfsz	??_main,f
  7924  03A9  2BA8               	goto	u4977
  7925  03AA  0BCA               	decfsz	??_main+1,f
  7926  03AB  2BA8               	goto	u4977
  7927  03AC  0BCB               	decfsz	??_main+2,f
  7928  03AD  2BA8               	goto	u4977
  7929  03AE  0000               	nop
  7930                           
  7931                           ;Multi_RX_testjig_v1.c: 744: TX_one(0x40);
  7932  03AF  3040               	movlw	64
  7933  03B0  3194  245B  3180   	fcall	_TX_one
  7934                           
  7935                           ;Multi_RX_testjig_v1.c: 745: if(RX_one() == 0x4A)
  7936  03B3  3194  247D  3180   	fcall	_RX_one
  7937  03B6  3A4A               	xorlw	74
  7938  03B7  1D03               	skipz
  7939  03B8  2C4C               	goto	l3934
  7940                           
  7941                           ;Multi_RX_testjig_v1.c: 746: {
  7942                           ;Multi_RX_testjig_v1.c: 747: _delay((unsigned long)((50)*(16000000/4000.0)));
  7943  03B9  3002               	movlw	2
  7944  03BA  0020               	movlb	0	; select bank0
  7945  03BB  00CB               	movwf	??_main+2
  7946  03BC  3004               	movlw	4
  7947  03BD  00CA               	movwf	??_main+1
  7948  03BE  30BA               	movlw	186
  7949  03BF  00C9               	movwf	??_main
  7950  03C0                     u4987:	
  7951  03C0  0BC9               	decfsz	??_main,f
  7952  03C1  2BC0               	goto	u4987
  7953  03C2  0BCA               	decfsz	??_main+1,f
  7954  03C3  2BC0               	goto	u4987
  7955  03C4  0BCB               	decfsz	??_main+2,f
  7956  03C5  2BC0               	goto	u4987
  7957  03C6  0000               	nop
  7958                           
  7959                           ;Multi_RX_testjig_v1.c: 748: tj_timer = 1500;
  7960  03C7  30DC               	movlw	220
  7961  03C8  0020               	movlb	0	; select bank0
  7962  03C9  00E0               	movwf	_tj_timer
  7963  03CA  3005               	movlw	5
  7964  03CB  00E1               	movwf	_tj_timer+1
  7965  03CC  2BD0               	goto	l3892
  7966  03CD                     l3894:	
  7967  03CD  0025               	movlb	5	; select bank5
  7968  03CE  188C               	btfsc	12,1	;volatile
  7969  03CF  2BD5               	goto	l374
  7970  03D0                     l3892:	
  7971                           ;Multi_RX_testjig_v1.c: 749: while(tj_timer && RF1 == 0);
  7972                           
  7973  03D0  0020               	movlb	0	; select bank0
  7974  03D1  0860               	movf	_tj_timer,w
  7975  03D2  0461               	iorwf	_tj_timer+1,w
  7976  03D3  1D03               	btfss	3,2
  7977  03D4  2BCD               	goto	l3894
  7978  03D5                     l374:	
  7979                           
  7980                           ;Multi_RX_testjig_v1.c: 750: if(RF1 == 1 && RF0 == 1)
  7981  03D5  0025               	movlb	5	; select bank5
  7982  03D6  188C               	btfsc	12,1	;volatile
  7983  03D7  1C0C               	btfss	12,0	;volatile
  7984  03D8  2C41               	goto	l3930
  7985                           
  7986                           ;Multi_RX_testjig_v1.c: 751: {
  7987                           ;Multi_RX_testjig_v1.c: 752: LATB5 = 0;
  7988  03D9  0022               	movlb	2	; select bank2
  7989  03DA  128D               	bcf	13,5	;volatile
  7990                           
  7991                           ;Multi_RX_testjig_v1.c: 753: TX_one(0x41);
  7992  03DB  3041               	movlw	65
  7993  03DC  3194  245B  3180   	fcall	_TX_one
  7994                           
  7995                           ;Multi_RX_testjig_v1.c: 754: RX_one();
  7996  03DF  3194  247D  3180   	fcall	_RX_one
  7997                           
  7998                           ;Multi_RX_testjig_v1.c: 755: _delay((unsigned long)((150)*(16000000/4000.0)));
  7999  03E2  3004               	movlw	4
  8000  03E3  0020               	movlb	0	; select bank0
  8001  03E4  00CB               	movwf	??_main+2
  8002  03E5  300C               	movlw	12
  8003  03E6  00CA               	movwf	??_main+1
  8004  03E7  3035               	movlw	53
  8005  03E8  00C9               	movwf	??_main
  8006  03E9                     u4997:	
  8007  03E9  0BC9               	decfsz	??_main,f
  8008  03EA  2BE9               	goto	u4997
  8009  03EB  0BCA               	decfsz	??_main+1,f
  8010  03EC  2BE9               	goto	u4997
  8011  03ED  0BCB               	decfsz	??_main+2,f
  8012  03EE  2BE9               	goto	u4997
  8013  03EF  3200               	nop2
  8014                           
  8015                           ;Multi_RX_testjig_v1.c: 756: TX_one(0x40);
  8016  03F0  3040               	movlw	64
  8017  03F1  3194  245B  3180   	fcall	_TX_one
  8018                           
  8019                           ;Multi_RX_testjig_v1.c: 757: RX_one();
  8020  03F4  3194  247D  3180   	fcall	_RX_one
  8021                           
  8022                           ;Multi_RX_testjig_v1.c: 758: _delay((unsigned long)((20)*(16000000/4000.0)));
  8023  03F7  3068               	movlw	104
  8024  03F8  0020               	movlb	0	; select bank0
  8025  03F9  00CA               	movwf	??_main+1
  8026  03FA  30E4               	movlw	228
  8027  03FB  00C9               	movwf	??_main
  8028  03FC                     u5007:	
  8029  03FC  0BC9               	decfsz	??_main,f
  8030  03FD  2BFC               	goto	u5007
  8031  03FE  0BCA               	decfsz	??_main+1,f
  8032  03FF  2BFC               	goto	u5007
  8033  0400  0000               	nop
  8034                           
  8035                           ;Multi_RX_testjig_v1.c: 759: if(RF1 == 0 && RF0 == 1)
  8036  0401  0025               	movlb	5	; select bank5
  8037  0402  1C8C               	btfss	12,1	;volatile
  8038  0403  1C0C               	btfss	12,0	;volatile
  8039  0404  2C39               	goto	l3928
  8040                           
  8041                           ;Multi_RX_testjig_v1.c: 760: {
  8042                           ;Multi_RX_testjig_v1.c: 761: TX_one(0x41);
  8043  0405  3041               	movlw	65
  8044  0406  3194  245B  3180   	fcall	_TX_one
  8045                           
  8046                           ;Multi_RX_testjig_v1.c: 762: if(RX_one() == 0x4A)
  8047  0409  3194  247D  3180   	fcall	_RX_one
  8048  040C  3A4A               	xorlw	74
  8049  040D  1D03               	skipz
  8050  040E  2C31               	goto	l3926
  8051                           
  8052                           ;Multi_RX_testjig_v1.c: 763: {
  8053                           ;Multi_RX_testjig_v1.c: 764: _delay((unsigned long)((10)*(16000000/4000.0)));
  8054  040F  3034               	movlw	52
  8055  0410  0020               	movlb	0	; select bank0
  8056  0411  00CA               	movwf	??_main+1
  8057  0412  30F1               	movlw	241
  8058  0413  00C9               	movwf	??_main
  8059  0414                     u5017:	
  8060  0414  0BC9               	decfsz	??_main,f
  8061  0415  2C14               	goto	u5017
  8062  0416  0BCA               	decfsz	??_main+1,f
  8063  0417  2C14               	goto	u5017
  8064  0418  3200               	nop2
  8065                           
  8066                           ;Multi_RX_testjig_v1.c: 765: if(RF1 == 1 && RF0 == 1)
  8067  0419  0025               	movlb	5	; select bank5
  8068  041A  188C               	btfsc	12,1	;volatile
  8069  041B  1C0C               	btfss	12,0	;volatile
  8070  041C  2C29               	goto	l3924
  8071                           
  8072                           ;Multi_RX_testjig_v1.c: 766: {
  8073                           ;Multi_RX_testjig_v1.c: 767: print_screen("Test CH2", "ok");
  8074  041D  30A8               	movlw	low (STR_61| (0+32768))
  8075  041E  00F4               	movwf	print_screen@top
  8076  041F  308A               	movlw	high (STR_61| (0+32768))
  8077  0420  00F5               	movwf	print_screen@top+1
  8078  0421  3056               	movlw	low (STR_64| (0+32768))
  8079  0422  00F6               	movwf	print_screen@bottom
  8080  0423  308B               	movlw	high (STR_64| (0+32768))
  8081  0424  00F7               	movwf	print_screen@bottom+1
  8082  0425  318E  26C1  3180   	fcall	_print_screen
  8083                           
  8084                           ;Multi_RX_testjig_v1.c: 768: }
  8085  0428  2C7F               	goto	l388
  8086  0429                     l3924:	
  8087                           
  8088                           ;Multi_RX_testjig_v1.c: 769: else
  8089                           ;Multi_RX_testjig_v1.c: 770: print_error("CH2 - OFF", " Error 2");
  8090  0429  306E               	movlw	low (STR_65| (0+32768))
  8091  042A  00F8               	movwf	print_error@top
  8092  042B  308A               	movlw	high (STR_65| (0+32768))
  8093  042C  00F9               	movwf	print_error@top+1
  8094  042D  309F               	movlw	low (STR_52| (0+32768))
  8095  042E  00FA               	movwf	print_error@bottom
  8096  042F  308A               	movlw	high (STR_52| (0+32768))
  8097  0430  2C7B               	goto	L4
  8098  0431                     l3926:	
  8099                           
  8100                           ;Multi_RX_testjig_v1.c: 772: else
  8101                           ;Multi_RX_testjig_v1.c: 773: print_error("Comms Error", " 5");
  8102  0431  300A               	movlw	low (STR_35| (0+32768))
  8103  0432  00F8               	movwf	print_error@top
  8104  0433  308A               	movlw	high (STR_35| (0+32768))
  8105  0434  00F9               	movwf	print_error@top+1
  8106  0435  3047               	movlw	low (STR_68| (0+32768))
  8107  0436  00FA               	movwf	print_error@bottom
  8108  0437  308B               	movlw	high (STR_68| (0+32768))
  8109  0438  2C7B               	goto	L4
  8110  0439                     l3928:	
  8111                           
  8112                           ;Multi_RX_testjig_v1.c: 775: else
  8113                           ;Multi_RX_testjig_v1.c: 776: print_error("CH2 - ON", "PTC Error reset");
  8114  0439  30C3               	movlw	low (STR_69| (0+32768))
  8115  043A  00F8               	movwf	print_error@top
  8116  043B  308A               	movlw	high (STR_69| (0+32768))
  8117  043C  00F9               	movwf	print_error@top+1
  8118  043D  3081               	movlw	low (STR_70| (0+32768))
  8119  043E  00FA               	movwf	print_error@bottom
  8120  043F  3088               	movlw	high (STR_70| (0+32768))
  8121  0440  2C7B               	goto	L4
  8122  0441                     l3930:	
  8123                           
  8124                           ;Multi_RX_testjig_v1.c: 778: else
  8125                           ;Multi_RX_testjig_v1.c: 779: {
  8126                           ;Multi_RX_testjig_v1.c: 780: trip_current = get_30v_current();
  8127  0441  3195  25E6  3180   	fcall	_get_30v_current
  8128                           
  8129                           ;Multi_RX_testjig_v1.c: 781: print_error("CH2 - ON", "PTC Error trip");
  8130  0444  30C3               	movlw	low (STR_69| (0+32768))
  8131  0445  00F8               	movwf	print_error@top
  8132  0446  308A               	movlw	high (STR_69| (0+32768))
  8133  0447  00F9               	movwf	print_error@top+1
  8134  0448  30BE               	movlw	low (STR_72| (0+32768))
  8135  0449  00FA               	movwf	print_error@bottom
  8136  044A  3088               	movlw	high (STR_72| (0+32768))
  8137  044B  2C7B               	goto	L4
  8138  044C                     l3934:	
  8139                           
  8140                           ;Multi_RX_testjig_v1.c: 784: else
  8141                           ;Multi_RX_testjig_v1.c: 785: print_error("Comms Error", " 6a");
  8142  044C  300A               	movlw	low (STR_35| (0+32768))
  8143  044D  00F8               	movwf	print_error@top
  8144  044E  308A               	movlw	high (STR_35| (0+32768))
  8145  044F  00F9               	movwf	print_error@top+1
  8146  0450  3031               	movlw	low (STR_74| (0+32768))
  8147  0451  00FA               	movwf	print_error@bottom
  8148  0452  308B               	movlw	high (STR_74| (0+32768))
  8149  0453  2C7B               	goto	L4
  8150  0454                     l3936:	
  8151                           
  8152                           ;Multi_RX_testjig_v1.c: 787: else
  8153                           ;Multi_RX_testjig_v1.c: 788: print_error("Comms Error", " 6b");
  8154  0454  300A               	movlw	low (STR_35| (0+32768))
  8155  0455  00F8               	movwf	print_error@top
  8156  0456  308A               	movlw	high (STR_35| (0+32768))
  8157  0457  00F9               	movwf	print_error@top+1
  8158  0458  3039               	movlw	low (STR_76| (0+32768))
  8159  0459  00FA               	movwf	print_error@bottom
  8160  045A  308B               	movlw	high (STR_76| (0+32768))
  8161  045B  2C7B               	goto	L4
  8162  045C                     l3938:	
  8163                           
  8164                           ;Multi_RX_testjig_v1.c: 790: else
  8165                           ;Multi_RX_testjig_v1.c: 791: print_error("CH2 - ON", " Error");
  8166  045C  30C3               	movlw	low (STR_69| (0+32768))
  8167  045D  00F8               	movwf	print_error@top
  8168  045E  308A               	movlw	high (STR_69| (0+32768))
  8169  045F  00F9               	movwf	print_error@top+1
  8170  0460  3032               	movlw	low ((STR_12+4)| (0+32768))
  8171  0461  00FA               	movwf	print_error@bottom
  8172  0462  308A               	movlw	high ((STR_12+4)| (0+32768))
  8173  0463  2C7B               	goto	L4
  8174  0464                     l3940:	
  8175                           
  8176                           ;Multi_RX_testjig_v1.c: 793: else
  8177                           ;Multi_RX_testjig_v1.c: 794: print_error("Comms Error", " 6");
  8178  0464  300A               	movlw	low (STR_35| (0+32768))
  8179  0465  00F8               	movwf	print_error@top
  8180  0466  308A               	movlw	high (STR_35| (0+32768))
  8181  0467  00F9               	movwf	print_error@top+1
  8182  0468  304A               	movlw	low (STR_80| (0+32768))
  8183  0469  00FA               	movwf	print_error@bottom
  8184  046A  308B               	movlw	high (STR_80| (0+32768))
  8185  046B  2C7B               	goto	L4
  8186  046C                     l3942:	
  8187                           
  8188                           ;Multi_RX_testjig_v1.c: 796: else
  8189                           ;Multi_RX_testjig_v1.c: 797: print_error("CH2 - OFF", " Error 1");
  8190  046C  306E               	movlw	low (STR_65| (0+32768))
  8191  046D  00F8               	movwf	print_error@top
  8192  046E  308A               	movlw	high (STR_65| (0+32768))
  8193  046F  00F9               	movwf	print_error@top+1
  8194  0470  3096               	movlw	low (STR_60| (0+32768))
  8195  0471  00FA               	movwf	print_error@bottom
  8196  0472  308A               	movlw	high (STR_60| (0+32768))
  8197  0473  2C7B               	goto	L4
  8198  0474                     l3944:	
  8199                           
  8200                           ;Multi_RX_testjig_v1.c: 799: else
  8201                           ;Multi_RX_testjig_v1.c: 800: print_error("Comms Error", " 7");
  8202  0474  300A               	movlw	low (STR_35| (0+32768))
  8203  0475  00F8               	movwf	print_error@top
  8204  0476  308A               	movlw	high (STR_35| (0+32768))
  8205  0477  00F9               	movwf	print_error@top+1
  8206  0478  304D               	movlw	low (STR_84| (0+32768))
  8207  0479  00FA               	movwf	print_error@bottom
  8208  047A  308B               	movlw	high (STR_84| (0+32768))
  8209  047B                     L4:	
  8210  047B  00FB               	movwf	print_error@bottom+1
  8211  047C  318E  26E3  3180   	fcall	_print_error
  8212  047F                     l388:	
  8213                           
  8214                           ;Multi_RX_testjig_v1.c: 804: print_screen("Test CH3", "");
  8215  047F  30B1               	movlw	low (STR_85| (0+32768))
  8216  0480  00F4               	movwf	print_screen@top
  8217  0481  308A               	movlw	high (STR_85| (0+32768))
  8218  0482  00F5               	movwf	print_screen@top+1
  8219  0483  3040               	movlw	low ((STR_157+15)| (0+32768))
  8220  0484  00F6               	movwf	print_screen@bottom
  8221  0485  3088               	movlw	high ((STR_157+15)| (0+32768))
  8222  0486  00F7               	movwf	print_screen@bottom+1
  8223  0487  318E  26C1  3180   	fcall	_print_screen
  8224                           
  8225                           ;Multi_RX_testjig_v1.c: 805: TX_one(0x51);
  8226  048A  3051               	movlw	81
  8227  048B  3194  245B  3180   	fcall	_TX_one
  8228                           
  8229                           ;Multi_RX_testjig_v1.c: 806: if(RX_one() == 0x5A)
  8230  048E  3194  247D  3180   	fcall	_RX_one
  8231  0491  3A5A               	xorlw	90
  8232  0492  1D03               	skipz
  8233  0493  2D96               	goto	l4026
  8234                           
  8235                           ;Multi_RX_testjig_v1.c: 807: {
  8236                           ;Multi_RX_testjig_v1.c: 808: _delay((unsigned long)((10)*(16000000/4000.0)));
  8237  0494  3034               	movlw	52
  8238  0495  0020               	movlb	0	; select bank0
  8239  0496  00CA               	movwf	??_main+1
  8240  0497  30F1               	movlw	241
  8241  0498  00C9               	movwf	??_main
  8242  0499                     u5027:	
  8243  0499  0BC9               	decfsz	??_main,f
  8244  049A  2C99               	goto	u5027
  8245  049B  0BCA               	decfsz	??_main+1,f
  8246  049C  2C99               	goto	u5027
  8247  049D  3200               	nop2
  8248                           
  8249                           ;Multi_RX_testjig_v1.c: 809: if(RF1 == 1 && RF0 == 1)
  8250  049E  0025               	movlb	5	; select bank5
  8251  049F  188C               	btfsc	12,1	;volatile
  8252  04A0  1C0C               	btfss	12,0	;volatile
  8253  04A1  2D8E               	goto	l4024
  8254                           
  8255                           ;Multi_RX_testjig_v1.c: 810: {
  8256                           ;Multi_RX_testjig_v1.c: 811: TX_one(0x50);
  8257  04A2  3050               	movlw	80
  8258  04A3  3194  245B  3180   	fcall	_TX_one
  8259                           
  8260                           ;Multi_RX_testjig_v1.c: 812: if(RX_one() == 0x5A)
  8261  04A6  3194  247D  3180   	fcall	_RX_one
  8262  04A9  3A5A               	xorlw	90
  8263  04AA  1D03               	skipz
  8264  04AB  2D86               	goto	l4022
  8265                           
  8266                           ;Multi_RX_testjig_v1.c: 813: {
  8267                           ;Multi_RX_testjig_v1.c: 814: _delay((unsigned long)((10)*(16000000/4000.0)));
  8268  04AC  3034               	movlw	52
  8269  04AD  0020               	movlb	0	; select bank0
  8270  04AE  00CA               	movwf	??_main+1
  8271  04AF  30F1               	movlw	241
  8272  04B0  00C9               	movwf	??_main
  8273  04B1                     u5037:	
  8274  04B1  0BC9               	decfsz	??_main,f
  8275  04B2  2CB1               	goto	u5037
  8276  04B3  0BCA               	decfsz	??_main+1,f
  8277  04B4  2CB1               	goto	u5037
  8278  04B5  3200               	nop2
  8279                           
  8280                           ;Multi_RX_testjig_v1.c: 815: if(RF1 == 1 && RF0 == 0)
  8281  04B6  0025               	movlb	5	; select bank5
  8282  04B7  188C               	btfsc	12,1	;volatile
  8283  04B8  180C               	btfsc	12,0	;volatile
  8284  04B9  2D7E               	goto	l4020
  8285                           
  8286                           ;Multi_RX_testjig_v1.c: 816: {
  8287                           ;Multi_RX_testjig_v1.c: 817: TX_one(0x51);
  8288  04BA  3051               	movlw	81
  8289  04BB  3194  245B  3180   	fcall	_TX_one
  8290                           
  8291                           ;Multi_RX_testjig_v1.c: 818: if(RX_one() == 0x5A)
  8292  04BE  3194  247D  3180   	fcall	_RX_one
  8293  04C1  3A5A               	xorlw	90
  8294  04C2  1D03               	skipz
  8295  04C3  2D76               	goto	l4018
  8296                           
  8297                           ;Multi_RX_testjig_v1.c: 819: {
  8298                           ;Multi_RX_testjig_v1.c: 820: LATA6 = 1;
  8299  04C4  0022               	movlb	2	; select bank2
  8300  04C5  170C               	bsf	12,6	;volatile
  8301                           
  8302                           ;Multi_RX_testjig_v1.c: 821: _delay((unsigned long)((50)*(16000000/4000.0)));
  8303  04C6  3002               	movlw	2
  8304  04C7  0020               	movlb	0	; select bank0
  8305  04C8  00CB               	movwf	??_main+2
  8306  04C9  3004               	movlw	4
  8307  04CA  00CA               	movwf	??_main+1
  8308  04CB  30BA               	movlw	186
  8309  04CC  00C9               	movwf	??_main
  8310  04CD                     u5047:	
  8311  04CD  0BC9               	decfsz	??_main,f
  8312  04CE  2CCD               	goto	u5047
  8313  04CF  0BCA               	decfsz	??_main+1,f
  8314  04D0  2CCD               	goto	u5047
  8315  04D1  0BCB               	decfsz	??_main+2,f
  8316  04D2  2CCD               	goto	u5047
  8317  04D3  0000               	nop
  8318                           
  8319                           ;Multi_RX_testjig_v1.c: 822: TX_one(0x50);
  8320  04D4  3050               	movlw	80
  8321  04D5  3194  245B  3180   	fcall	_TX_one
  8322                           
  8323                           ;Multi_RX_testjig_v1.c: 823: if(RX_one() == 0x5A)
  8324  04D8  3194  247D  3180   	fcall	_RX_one
  8325  04DB  3A5A               	xorlw	90
  8326  04DC  1D03               	skipz
  8327  04DD  2D6E               	goto	l4016
  8328                           
  8329                           ;Multi_RX_testjig_v1.c: 824: {
  8330                           ;Multi_RX_testjig_v1.c: 825: _delay((unsigned long)((50)*(16000000/4000.0)));
  8331  04DE  3002               	movlw	2
  8332  04DF  0020               	movlb	0	; select bank0
  8333  04E0  00CB               	movwf	??_main+2
  8334  04E1  3004               	movlw	4
  8335  04E2  00CA               	movwf	??_main+1
  8336  04E3  30BA               	movlw	186
  8337  04E4  00C9               	movwf	??_main
  8338  04E5                     u5057:	
  8339  04E5  0BC9               	decfsz	??_main,f
  8340  04E6  2CE5               	goto	u5057
  8341  04E7  0BCA               	decfsz	??_main+1,f
  8342  04E8  2CE5               	goto	u5057
  8343  04E9  0BCB               	decfsz	??_main+2,f
  8344  04EA  2CE5               	goto	u5057
  8345  04EB  0000               	nop
  8346                           
  8347                           ;Multi_RX_testjig_v1.c: 826: tj_timer = 1500;
  8348  04EC  30DC               	movlw	220
  8349  04ED  0020               	movlb	0	; select bank0
  8350  04EE  00E0               	movwf	_tj_timer
  8351  04EF  3005               	movlw	5
  8352  04F0  00E1               	movwf	_tj_timer+1
  8353  04F1  2CF5               	goto	l3976
  8354  04F2                     l3978:	
  8355  04F2  0025               	movlb	5	; select bank5
  8356  04F3  180C               	btfsc	12,0	;volatile
  8357  04F4  2CFA               	goto	l399
  8358  04F5                     l3976:	
  8359                           ;Multi_RX_testjig_v1.c: 827: while(tj_timer && RF0 == 0);
  8360                           
  8361  04F5  0020               	movlb	0	; select bank0
  8362  04F6  0860               	movf	_tj_timer,w
  8363  04F7  0461               	iorwf	_tj_timer+1,w
  8364  04F8  1D03               	btfss	3,2
  8365  04F9  2CF2               	goto	l3978
  8366  04FA                     l399:	
  8367                           
  8368                           ;Multi_RX_testjig_v1.c: 828: if(RF1 == 1 && RF0 == 1)
  8369  04FA  0025               	movlb	5	; select bank5
  8370  04FB  188C               	btfsc	12,1	;volatile
  8371  04FC  1C0C               	btfss	12,0	;volatile
  8372  04FD  2D66               	goto	l4014
  8373                           
  8374                           ;Multi_RX_testjig_v1.c: 829: {
  8375                           ;Multi_RX_testjig_v1.c: 830: LATA6 = 0;
  8376  04FE  0022               	movlb	2	; select bank2
  8377  04FF  130C               	bcf	12,6	;volatile
  8378                           
  8379                           ;Multi_RX_testjig_v1.c: 831: TX_one(0x51);
  8380  0500  3051               	movlw	81
  8381  0501  3194  245B  3180   	fcall	_TX_one
  8382                           
  8383                           ;Multi_RX_testjig_v1.c: 832: RX_one();
  8384  0504  3194  247D  3180   	fcall	_RX_one
  8385                           
  8386                           ;Multi_RX_testjig_v1.c: 833: _delay((unsigned long)((150)*(16000000/4000.0)));
  8387  0507  3004               	movlw	4
  8388  0508  0020               	movlb	0	; select bank0
  8389  0509  00CB               	movwf	??_main+2
  8390  050A  300C               	movlw	12
  8391  050B  00CA               	movwf	??_main+1
  8392  050C  3035               	movlw	53
  8393  050D  00C9               	movwf	??_main
  8394  050E                     u5067:	
  8395  050E  0BC9               	decfsz	??_main,f
  8396  050F  2D0E               	goto	u5067
  8397  0510  0BCA               	decfsz	??_main+1,f
  8398  0511  2D0E               	goto	u5067
  8399  0512  0BCB               	decfsz	??_main+2,f
  8400  0513  2D0E               	goto	u5067
  8401  0514  3200               	nop2
  8402                           
  8403                           ;Multi_RX_testjig_v1.c: 834: TX_one(0x50);
  8404  0515  3050               	movlw	80
  8405  0516  3194  245B  3180   	fcall	_TX_one
  8406                           
  8407                           ;Multi_RX_testjig_v1.c: 835: RX_one();
  8408  0519  3194  247D  3180   	fcall	_RX_one
  8409                           
  8410                           ;Multi_RX_testjig_v1.c: 836: _delay((unsigned long)((20)*(16000000/4000.0)));
  8411  051C  3068               	movlw	104
  8412  051D  0020               	movlb	0	; select bank0
  8413  051E  00CA               	movwf	??_main+1
  8414  051F  30E4               	movlw	228
  8415  0520  00C9               	movwf	??_main
  8416  0521                     u5077:	
  8417  0521  0BC9               	decfsz	??_main,f
  8418  0522  2D21               	goto	u5077
  8419  0523  0BCA               	decfsz	??_main+1,f
  8420  0524  2D21               	goto	u5077
  8421  0525  0000               	nop
  8422                           
  8423                           ;Multi_RX_testjig_v1.c: 837: if(RF1 == 1 && RF0 == 0)
  8424  0526  0025               	movlb	5	; select bank5
  8425  0527  188C               	btfsc	12,1	;volatile
  8426  0528  180C               	btfsc	12,0	;volatile
  8427  0529  2D5E               	goto	l4012
  8428                           
  8429                           ;Multi_RX_testjig_v1.c: 838: {
  8430                           ;Multi_RX_testjig_v1.c: 839: TX_one(0x51);
  8431  052A  3051               	movlw	81
  8432  052B  3194  245B  3180   	fcall	_TX_one
  8433                           
  8434                           ;Multi_RX_testjig_v1.c: 840: if(RX_one() == 0x5A)
  8435  052E  3194  247D  3180   	fcall	_RX_one
  8436  0531  3A5A               	xorlw	90
  8437  0532  1D03               	skipz
  8438  0533  2D56               	goto	l4010
  8439                           
  8440                           ;Multi_RX_testjig_v1.c: 841: {
  8441                           ;Multi_RX_testjig_v1.c: 842: _delay((unsigned long)((10)*(16000000/4000.0)));
  8442  0534  3034               	movlw	52
  8443  0535  0020               	movlb	0	; select bank0
  8444  0536  00CA               	movwf	??_main+1
  8445  0537  30F1               	movlw	241
  8446  0538  00C9               	movwf	??_main
  8447  0539                     u5087:	
  8448  0539  0BC9               	decfsz	??_main,f
  8449  053A  2D39               	goto	u5087
  8450  053B  0BCA               	decfsz	??_main+1,f
  8451  053C  2D39               	goto	u5087
  8452  053D  3200               	nop2
  8453                           
  8454                           ;Multi_RX_testjig_v1.c: 843: if(RF1 == 1 && RF0 == 1)
  8455  053E  0025               	movlb	5	; select bank5
  8456  053F  188C               	btfsc	12,1	;volatile
  8457  0540  1C0C               	btfss	12,0	;volatile
  8458  0541  2D4E               	goto	l4008
  8459                           
  8460                           ;Multi_RX_testjig_v1.c: 844: {
  8461                           ;Multi_RX_testjig_v1.c: 845: print_screen("Test CH3", "ok");
  8462  0542  30B1               	movlw	low (STR_85| (0+32768))
  8463  0543  00F4               	movwf	print_screen@top
  8464  0544  308A               	movlw	high (STR_85| (0+32768))
  8465  0545  00F5               	movwf	print_screen@top+1
  8466  0546  3056               	movlw	low (STR_64| (0+32768))
  8467  0547  00F6               	movwf	print_screen@bottom
  8468  0548  308B               	movlw	high (STR_64| (0+32768))
  8469  0549  00F7               	movwf	print_screen@bottom+1
  8470  054A  318E  26C1  3180   	fcall	_print_screen
  8471                           
  8472                           ;Multi_RX_testjig_v1.c: 846: }
  8473  054D  2DA1               	goto	l4028
  8474  054E                     l4008:	
  8475                           
  8476                           ;Multi_RX_testjig_v1.c: 847: else
  8477                           ;Multi_RX_testjig_v1.c: 848: print_error("CH3 - OFF", " Error 2");
  8478  054E  3078               	movlw	low (STR_89| (0+32768))
  8479  054F  00F8               	movwf	print_error@top
  8480  0550  308A               	movlw	high (STR_89| (0+32768))
  8481  0551  00F9               	movwf	print_error@top+1
  8482  0552  309F               	movlw	low (STR_52| (0+32768))
  8483  0553  00FA               	movwf	print_error@bottom
  8484  0554  308A               	movlw	high (STR_52| (0+32768))
  8485  0555  2D9D               	goto	L5
  8486  0556                     l4010:	
  8487                           
  8488                           ;Multi_RX_testjig_v1.c: 850: else
  8489                           ;Multi_RX_testjig_v1.c: 851: print_error("Comms Error", " 8");
  8490  0556  300A               	movlw	low (STR_35| (0+32768))
  8491  0557  00F8               	movwf	print_error@top
  8492  0558  308A               	movlw	high (STR_35| (0+32768))
  8493  0559  00F9               	movwf	print_error@top+1
  8494  055A  3050               	movlw	low (STR_92| (0+32768))
  8495  055B  00FA               	movwf	print_error@bottom
  8496  055C  308B               	movlw	high (STR_92| (0+32768))
  8497  055D  2D9D               	goto	L5
  8498  055E                     l4012:	
  8499                           
  8500                           ;Multi_RX_testjig_v1.c: 853: else
  8501                           ;Multi_RX_testjig_v1.c: 854: print_error("CH3 - ON", "PTC Error reset");
  8502  055E  30CC               	movlw	low (STR_93| (0+32768))
  8503  055F  00F8               	movwf	print_error@top
  8504  0560  308A               	movlw	high (STR_93| (0+32768))
  8505  0561  00F9               	movwf	print_error@top+1
  8506  0562  3081               	movlw	low (STR_70| (0+32768))
  8507  0563  00FA               	movwf	print_error@bottom
  8508  0564  3088               	movlw	high (STR_70| (0+32768))
  8509  0565  2D9D               	goto	L5
  8510  0566                     l4014:	
  8511                           
  8512                           ;Multi_RX_testjig_v1.c: 856: else
  8513                           ;Multi_RX_testjig_v1.c: 857: print_error("CH3 - ON", "PTC Error trip");
  8514  0566  30CC               	movlw	low (STR_93| (0+32768))
  8515  0567  00F8               	movwf	print_error@top
  8516  0568  308A               	movlw	high (STR_93| (0+32768))
  8517  0569  00F9               	movwf	print_error@top+1
  8518  056A  30BE               	movlw	low (STR_72| (0+32768))
  8519  056B  00FA               	movwf	print_error@bottom
  8520  056C  3088               	movlw	high (STR_72| (0+32768))
  8521  056D  2D9D               	goto	L5
  8522  056E                     l4016:	
  8523                           
  8524                           ;Multi_RX_testjig_v1.c: 859: else
  8525                           ;Multi_RX_testjig_v1.c: 860: print_error("Comms Error", " 8b");
  8526  056E  300A               	movlw	low (STR_35| (0+32768))
  8527  056F  00F8               	movwf	print_error@top
  8528  0570  308A               	movlw	high (STR_35| (0+32768))
  8529  0571  00F9               	movwf	print_error@top+1
  8530  0572  303D               	movlw	low (STR_98| (0+32768))
  8531  0573  00FA               	movwf	print_error@bottom
  8532  0574  308B               	movlw	high (STR_98| (0+32768))
  8533  0575  2D9D               	goto	L5
  8534  0576                     l4018:	
  8535                           
  8536                           ;Multi_RX_testjig_v1.c: 862: else
  8537                           ;Multi_RX_testjig_v1.c: 863: print_error("Comms Error", " 8a");
  8538  0576  300A               	movlw	low (STR_35| (0+32768))
  8539  0577  00F8               	movwf	print_error@top
  8540  0578  308A               	movlw	high (STR_35| (0+32768))
  8541  0579  00F9               	movwf	print_error@top+1
  8542  057A  3035               	movlw	low (STR_100| (0+32768))
  8543  057B  00FA               	movwf	print_error@bottom
  8544  057C  308B               	movlw	high (STR_100| (0+32768))
  8545  057D  2D9D               	goto	L5
  8546  057E                     l4020:	
  8547                           
  8548                           ;Multi_RX_testjig_v1.c: 865: else
  8549                           ;Multi_RX_testjig_v1.c: 866: print_error("CH3 - ON", " Error");
  8550  057E  30CC               	movlw	low (STR_93| (0+32768))
  8551  057F  00F8               	movwf	print_error@top
  8552  0580  308A               	movlw	high (STR_93| (0+32768))
  8553  0581  00F9               	movwf	print_error@top+1
  8554  0582  3032               	movlw	low ((STR_12+4)| (0+32768))
  8555  0583  00FA               	movwf	print_error@bottom
  8556  0584  308A               	movlw	high ((STR_12+4)| (0+32768))
  8557  0585  2D9D               	goto	L5
  8558  0586                     l4022:	
  8559                           
  8560                           ;Multi_RX_testjig_v1.c: 868: else
  8561                           ;Multi_RX_testjig_v1.c: 869: print_error("Comms Error", " 9");
  8562  0586  300A               	movlw	low (STR_35| (0+32768))
  8563  0587  00F8               	movwf	print_error@top
  8564  0588  308A               	movlw	high (STR_35| (0+32768))
  8565  0589  00F9               	movwf	print_error@top+1
  8566  058A  3053               	movlw	low (STR_104| (0+32768))
  8567  058B  00FA               	movwf	print_error@bottom
  8568  058C  308B               	movlw	high (STR_104| (0+32768))
  8569  058D  2D9D               	goto	L5
  8570  058E                     l4024:	
  8571                           
  8572                           ;Multi_RX_testjig_v1.c: 871: else
  8573                           ;Multi_RX_testjig_v1.c: 872: print_error("CH3 - OFF", " Error 1");
  8574  058E  3078               	movlw	low (STR_89| (0+32768))
  8575  058F  00F8               	movwf	print_error@top
  8576  0590  308A               	movlw	high (STR_89| (0+32768))
  8577  0591  00F9               	movwf	print_error@top+1
  8578  0592  3096               	movlw	low (STR_60| (0+32768))
  8579  0593  00FA               	movwf	print_error@bottom
  8580  0594  308A               	movlw	high (STR_60| (0+32768))
  8581  0595  2D9D               	goto	L5
  8582  0596                     l4026:	
  8583                           
  8584                           ;Multi_RX_testjig_v1.c: 874: else
  8585                           ;Multi_RX_testjig_v1.c: 875: print_error("Comms Error", " 10");
  8586  0596  300A               	movlw	low (STR_35| (0+32768))
  8587  0597  00F8               	movwf	print_error@top
  8588  0598  308A               	movlw	high (STR_35| (0+32768))
  8589  0599  00F9               	movwf	print_error@top+1
  8590  059A  300D               	movlw	low (STR_108| (0+32768))
  8591  059B  00FA               	movwf	print_error@bottom
  8592  059C  308B               	movlw	high (STR_108| (0+32768))
  8593  059D                     L5:	
  8594  059D  00FB               	movwf	print_error@bottom+1
  8595  059E  318E  26E3  3180   	fcall	_print_error
  8596  05A1                     l4028:	
  8597                           
  8598                           ;Multi_RX_testjig_v1.c: 876: }
  8599                           ;Multi_RX_testjig_v1.c: 878: if((device_type == 0xAA)|| (device_type == 0xA1))
  8600  05A1  30AA               	movlw	170
  8601  05A2  0020               	movlb	0	; select bank0
  8602  05A3  0651               	xorwf	main@device_type,w
  8603  05A4  1903               	btfsc	3,2
  8604  05A5  2DAA               	goto	l4032
  8605  05A6  30A1               	movlw	161
  8606  05A7  0651               	xorwf	main@device_type,w
  8607  05A8  1D03               	btfss	3,2
  8608  05A9  2EDC               	goto	l4126
  8609  05AA                     l4032:	
  8610                           
  8611                           ;Multi_RX_testjig_v1.c: 879: {
  8612                           ;Multi_RX_testjig_v1.c: 881: print_screen("Test RF", "3v3");
  8613  05AA  3000               	movlw	low (STR_109| (0+32768))
  8614  05AB  00F4               	movwf	print_screen@top
  8615  05AC  308B               	movlw	high (STR_109| (0+32768))
  8616  05AD  00F5               	movwf	print_screen@top+1
  8617  05AE  30D6               	movlw	low ((STR_115+8)| (0+32768))
  8618  05AF  00F6               	movwf	print_screen@bottom
  8619  05B0  3089               	movlw	high ((STR_115+8)| (0+32768))
  8620  05B1  00F7               	movwf	print_screen@bottom+1
  8621  05B2  318E  26C1  3180   	fcall	_print_screen
  8622                           
  8623                           ;Multi_RX_testjig_v1.c: 882: TX_one(0x70);
  8624  05B5  3070               	movlw	112
  8625  05B6  3194  245B  3180   	fcall	_TX_one
  8626                           
  8627                           ;Multi_RX_testjig_v1.c: 883: RX_data = RX_one();
  8628  05B9  3194  247D  3180   	fcall	_RX_one
  8629  05BC  0020               	movlb	0	; select bank0
  8630  05BD  00D0               	movwf	main@RX_data
  8631                           
  8632                           ;Multi_RX_testjig_v1.c: 884: TX_one(0x70);
  8633  05BE  3070               	movlw	112
  8634  05BF  3194  245B  3180   	fcall	_TX_one
  8635                           
  8636                           ;Multi_RX_testjig_v1.c: 885: RX_data = RX_one();
  8637  05C2  3194  247D  3180   	fcall	_RX_one
  8638  05C5  0020               	movlb	0	; select bank0
  8639  05C6  00D0               	movwf	main@RX_data
  8640                           
  8641                           ;Multi_RX_testjig_v1.c: 886: if(RX_data == 0)
  8642  05C7  0850               	movf	main@RX_data,w
  8643  05C8  1D03               	btfss	3,2
  8644  05C9  2DD2               	goto	l4046
  8645                           
  8646                           ;Multi_RX_testjig_v1.c: 887: print_error("Comms Error", " 11");
  8647  05CA  300A               	movlw	low (STR_35| (0+32768))
  8648  05CB  00F8               	movwf	print_error@top
  8649  05CC  308A               	movlw	high (STR_35| (0+32768))
  8650  05CD  00F9               	movwf	print_error@top+1
  8651  05CE  3011               	movlw	low (STR_112| (0+32768))
  8652  05CF  00FA               	movwf	print_error@bottom
  8653  05D0  308B               	movlw	high (STR_112| (0+32768))
  8654  05D1  2E00               	goto	L11
  8655  05D2                     l4046:	
  8656                           
  8657                           ;Multi_RX_testjig_v1.c: 888: else if(RX_data == 0xFF)
  8658  05D2  0A50               	incf	main@RX_data,w
  8659  05D3  1D03               	btfss	3,2
  8660  05D4  2DDD               	goto	l4050
  8661                           
  8662                           ;Multi_RX_testjig_v1.c: 889: print_error("Comms Error", " 12");
  8663  05D5  300A               	movlw	low (STR_35| (0+32768))
  8664  05D6  00F8               	movwf	print_error@top
  8665  05D7  308A               	movlw	high (STR_35| (0+32768))
  8666  05D8  00F9               	movwf	print_error@top+1
  8667  05D9  3015               	movlw	low (STR_114| (0+32768))
  8668  05DA  00FA               	movwf	print_error@bottom
  8669  05DB  308B               	movlw	high (STR_114| (0+32768))
  8670  05DC  2E00               	goto	L11
  8671  05DD                     l4050:	
  8672                           
  8673                           ;Multi_RX_testjig_v1.c: 890: else if(RX_data > 179)
  8674  05DD  30B4               	movlw	180
  8675  05DE  0250               	subwf	main@RX_data,w
  8676  05DF  1C03               	skipc
  8677  05E0  2DE9               	goto	l4054
  8678                           
  8679                           ;Multi_RX_testjig_v1.c: 891: print_error("Test RF 3v3", " Error - High");
  8680  05E1  30CE               	movlw	low (STR_115| (0+32768))
  8681  05E2  00F8               	movwf	print_error@top
  8682  05E3  3089               	movlw	high (STR_115| (0+32768))
  8683  05E4  00F9               	movwf	print_error@top+1
  8684  05E5  3014               	movlw	low (STR_116| (0+32768))
  8685  05E6  00FA               	movwf	print_error@bottom
  8686  05E7  3089               	movlw	high (STR_116| (0+32768))
  8687  05E8  2E00               	goto	L11
  8688  05E9                     l4054:	
  8689                           
  8690                           ;Multi_RX_testjig_v1.c: 892: else if(RX_data < 153)
  8691  05E9  3099               	movlw	153
  8692  05EA  0250               	subwf	main@RX_data,w
  8693  05EB  1803               	skipnc
  8694  05EC  2DF5               	goto	l4058
  8695                           
  8696                           ;Multi_RX_testjig_v1.c: 893: print_error("Test RF 3v3", " Error - Micrel");
  8697  05ED  30CE               	movlw	low (STR_115| (0+32768))
  8698  05EE  00F8               	movwf	print_error@top
  8699  05EF  3089               	movlw	high (STR_115| (0+32768))
  8700  05F0  00F9               	movwf	print_error@top+1
  8701  05F1  3061               	movlw	low (STR_118| (0+32768))
  8702  05F2  00FA               	movwf	print_error@bottom
  8703  05F3  3088               	movlw	high (STR_118| (0+32768))
  8704  05F4  2E00               	goto	L11
  8705  05F5                     l4058:	
  8706                           
  8707                           ;Multi_RX_testjig_v1.c: 894: else if(RX_data < 158)
  8708  05F5  309E               	movlw	158
  8709  05F6  0250               	subwf	main@RX_data,w
  8710  05F7  1803               	skipnc
  8711  05F8  2E04               	goto	l418
  8712                           
  8713                           ;Multi_RX_testjig_v1.c: 895: print_error("Test RF 3v3", " Error - Low");
  8714  05F9  30CE               	movlw	low (STR_115| (0+32768))
  8715  05FA  00F8               	movwf	print_error@top
  8716  05FB  3089               	movlw	high (STR_115| (0+32768))
  8717  05FC  00F9               	movwf	print_error@top+1
  8718  05FD  30C1               	movlw	low (STR_120| (0+32768))
  8719  05FE  00FA               	movwf	print_error@bottom
  8720  05FF  3089               	movlw	high (STR_120| (0+32768))
  8721  0600                     L11:	
  8722  0600  00FB               	movwf	print_error@bottom+1
  8723  0601  318E  26E3  3180   	fcall	_print_error
  8724  0604                     l418:	
  8725                           
  8726                           ;Multi_RX_testjig_v1.c: 897: print_screen("Test RF", "3v3 - OK");
  8727  0604  3000               	movlw	low (STR_109| (0+32768))
  8728  0605  00F4               	movwf	print_screen@top
  8729  0606  308B               	movlw	high (STR_109| (0+32768))
  8730  0607  00F5               	movwf	print_screen@top+1
  8731  0608  30BA               	movlw	low (STR_122| (0+32768))
  8732  0609  00F6               	movwf	print_screen@bottom
  8733  060A  308A               	movlw	high (STR_122| (0+32768))
  8734  060B  00F7               	movwf	print_screen@bottom+1
  8735  060C  318E  26C1  3180   	fcall	_print_screen
  8736                           
  8737                           ;Multi_RX_testjig_v1.c: 900: RE0 = 1;
  8738  060F  0020               	movlb	0	; select bank0
  8739  0610  1410               	bsf	16,0	;volatile
  8740                           
  8741                           ;Multi_RX_testjig_v1.c: 901: _delay((unsigned long)((150)*(16000000/4000.0)));
  8742  0611  3004               	movlw	4
  8743  0612  00CB               	movwf	??_main+2
  8744  0613  300C               	movlw	12
  8745  0614  00CA               	movwf	??_main+1
  8746  0615  3035               	movlw	53
  8747  0616  00C9               	movwf	??_main
  8748  0617                     u5097:	
  8749  0617  0BC9               	decfsz	??_main,f
  8750  0618  2E17               	goto	u5097
  8751  0619  0BCA               	decfsz	??_main+1,f
  8752  061A  2E17               	goto	u5097
  8753  061B  0BCB               	decfsz	??_main+2,f
  8754  061C  2E17               	goto	u5097
  8755  061D  3200               	nop2
  8756                           
  8757                           ;Multi_RX_testjig_v1.c: 902: print_screen("Test RF", "RSSI");
  8758  061E  3000               	movlw	low (STR_109| (0+32768))
  8759  061F  00F4               	movwf	print_screen@top
  8760  0620  308B               	movlw	high (STR_109| (0+32768))
  8761  0621  00F5               	movwf	print_screen@top+1
  8762  0622  307B               	movlw	low ((STR_129+8)| (0+32768))
  8763  0623  00F6               	movwf	print_screen@bottom
  8764  0624  3089               	movlw	high ((STR_129+8)| (0+32768))
  8765  0625  00F7               	movwf	print_screen@bottom+1
  8766  0626  318E  26C1  3180   	fcall	_print_screen
  8767                           
  8768                           ;Multi_RX_testjig_v1.c: 903: TX_one(0x60);
  8769  0629  3060               	movlw	96
  8770  062A  3194  245B  3180   	fcall	_TX_one
  8771                           
  8772                           ;Multi_RX_testjig_v1.c: 904: RX_data = RX_one();
  8773  062D  3194  247D  3180   	fcall	_RX_one
  8774  0630  0020               	movlb	0	; select bank0
  8775  0631  00D0               	movwf	main@RX_data
  8776                           
  8777                           ;Multi_RX_testjig_v1.c: 905: TX_one(0x60);
  8778  0632  3060               	movlw	96
  8779  0633  3194  245B  3180   	fcall	_TX_one
  8780                           
  8781                           ;Multi_RX_testjig_v1.c: 906: RX_data = RX_one();
  8782  0636  3194  247D  3180   	fcall	_RX_one
  8783  0639  0020               	movlb	0	; select bank0
  8784  063A  00D0               	movwf	main@RX_data
  8785                           
  8786                           ;Multi_RX_testjig_v1.c: 907: if(RX_data == 0)
  8787  063B  0850               	movf	main@RX_data,w
  8788  063C  1D03               	btfss	3,2
  8789  063D  2E46               	goto	l4080
  8790                           
  8791                           ;Multi_RX_testjig_v1.c: 908: print_error("Comms Error", " 13");
  8792  063E  300A               	movlw	low (STR_35| (0+32768))
  8793  063F  00F8               	movwf	print_error@top
  8794  0640  308A               	movlw	high (STR_35| (0+32768))
  8795  0641  00F9               	movwf	print_error@top+1
  8796  0642  3019               	movlw	low (STR_126| (0+32768))
  8797  0643  00FA               	movwf	print_error@bottom
  8798  0644  308B               	movlw	high (STR_126| (0+32768))
  8799  0645  2E68               	goto	L6
  8800  0646                     l4080:	
  8801                           
  8802                           ;Multi_RX_testjig_v1.c: 909: else if(RX_data == 0xFF)
  8803  0646  0A50               	incf	main@RX_data,w
  8804  0647  1D03               	btfss	3,2
  8805  0648  2E51               	goto	l4084
  8806                           
  8807                           ;Multi_RX_testjig_v1.c: 910: print_error("Comms Error", " 14");
  8808  0649  300A               	movlw	low (STR_35| (0+32768))
  8809  064A  00F8               	movwf	print_error@top
  8810  064B  308A               	movlw	high (STR_35| (0+32768))
  8811  064C  00F9               	movwf	print_error@top+1
  8812  064D  301D               	movlw	low (STR_128| (0+32768))
  8813  064E  00FA               	movwf	print_error@bottom
  8814  064F  308B               	movlw	high (STR_128| (0+32768))
  8815  0650  2E68               	goto	L6
  8816  0651                     l4084:	
  8817                           
  8818                           ;Multi_RX_testjig_v1.c: 911: else if(RX_data > 120)
  8819  0651  3079               	movlw	121
  8820  0652  0250               	subwf	main@RX_data,w
  8821  0653  1C03               	skipc
  8822  0654  2E5D               	goto	l4088
  8823                           
  8824                           ;Multi_RX_testjig_v1.c: 912: print_error("Test RF RSSI", " Error - High");
  8825  0655  3073               	movlw	low (STR_129| (0+32768))
  8826  0656  00F8               	movwf	print_error@top
  8827  0657  3089               	movlw	high (STR_129| (0+32768))
  8828  0658  00F9               	movwf	print_error@top+1
  8829  0659  3014               	movlw	low (STR_116| (0+32768))
  8830  065A  00FA               	movwf	print_error@bottom
  8831  065B  3089               	movlw	high (STR_116| (0+32768))
  8832  065C  2E68               	goto	L6
  8833  065D                     l4088:	
  8834                           
  8835                           ;Multi_RX_testjig_v1.c: 913: else if(RX_data < 90)
  8836  065D  305A               	movlw	90
  8837  065E  0250               	subwf	main@RX_data,w
  8838  065F  1803               	skipnc
  8839  0660  2E6C               	goto	l427
  8840                           
  8841                           ;Multi_RX_testjig_v1.c: 914: print_error("Test RF RSSI", " Error - Low");
  8842  0661  3073               	movlw	low (STR_129| (0+32768))
  8843  0662  00F8               	movwf	print_error@top
  8844  0663  3089               	movlw	high (STR_129| (0+32768))
  8845  0664  00F9               	movwf	print_error@top+1
  8846  0665  30C1               	movlw	low (STR_120| (0+32768))
  8847  0666  00FA               	movwf	print_error@bottom
  8848  0667  3089               	movlw	high (STR_120| (0+32768))
  8849  0668                     L6:	
  8850  0668  00FB               	movwf	print_error@bottom+1
  8851  0669  318E  26E3  3180   	fcall	_print_error
  8852  066C                     l427:	
  8853                           
  8854                           ;Multi_RX_testjig_v1.c: 915: print_screen("Test RF", "RSSI - OK");
  8855  066C  3000               	movlw	low (STR_109| (0+32768))
  8856  066D  00F4               	movwf	print_screen@top
  8857  066E  308B               	movlw	high (STR_109| (0+32768))
  8858  066F  00F5               	movwf	print_screen@top+1
  8859  0670  3082               	movlw	low (STR_134| (0+32768))
  8860  0671  00F6               	movwf	print_screen@bottom
  8861  0672  308A               	movlw	high (STR_134| (0+32768))
  8862  0673  00F7               	movwf	print_screen@bottom+1
  8863  0674  318E  26C1  3180   	fcall	_print_screen
  8864                           
  8865                           ;Multi_RX_testjig_v1.c: 918: print_screen("Test RF", "Decode");
  8866  0677  3000               	movlw	low (STR_109| (0+32768))
  8867  0678  00F4               	movwf	print_screen@top
  8868  0679  308B               	movlw	high (STR_109| (0+32768))
  8869  067A  00F5               	movwf	print_screen@top+1
  8870  067B  30A8               	movlw	low ((STR_142+8)| (0+32768))
  8871  067C  00F6               	movwf	print_screen@bottom
  8872  067D  3088               	movlw	high ((STR_142+8)| (0+32768))
  8873  067E  00F7               	movwf	print_screen@bottom+1
  8874  067F  318E  26C1  3180   	fcall	_print_screen
  8875                           
  8876                           ;Multi_RX_testjig_v1.c: 919: for(i = 0; i < 10; i++)
  8877  0682  0020               	movlb	0	; select bank0
  8878  0683  01CE               	clrf	main@i
  8879  0684  01CF               	clrf	main@i+1
  8880  0685  2E96               	goto	l4094
  8881  0686                     l4104:	
  8882                           
  8883                           ;Multi_RX_testjig_v1.c: 925: _delay((unsigned long)((200)*(16000000/4000.0)));
  8884  0686  3005               	movlw	5
  8885  0687  00CB               	movwf	??_main+2
  8886  0688  300F               	movlw	15
  8887  0689  00CA               	movwf	??_main+1
  8888  068A  30F4               	movlw	244
  8889  068B  00C9               	movwf	??_main
  8890  068C                     u5107:	
  8891  068C  0BC9               	decfsz	??_main,f
  8892  068D  2E8C               	goto	u5107
  8893  068E  0BCA               	decfsz	??_main+1,f
  8894  068F  2E8C               	goto	u5107
  8895  0690  0BCB               	decfsz	??_main+2,f
  8896  0691  2E8C               	goto	u5107
  8897  0692  0020               	movlb	0	; select bank0
  8898  0693  0ACE               	incf	main@i,f
  8899  0694  1903               	skipnz
  8900  0695  0ACF               	incf	main@i+1,f
  8901  0696                     l4094:	
  8902  0696  3000               	movlw	0
  8903  0697  024F               	subwf	main@i+1,w
  8904  0698  300A               	movlw	10
  8905  0699  1903               	skipnz
  8906  069A  024E               	subwf	main@i,w
  8907  069B  1803               	btfsc	3,0
  8908  069C  2EA8               	goto	l4110
  8909                           
  8910                           ;Multi_RX_testjig_v1.c: 920: {
  8911                           ;Multi_RX_testjig_v1.c: 921: TX_one(0x61);
  8912  069D  3061               	movlw	97
  8913  069E  3194  245B  3180   	fcall	_TX_one
  8914                           
  8915                           ;Multi_RX_testjig_v1.c: 922: RX_data = RX_one();
  8916  06A1  3194  247D  3180   	fcall	_RX_one
  8917  06A4  0020               	movlb	0	; select bank0
  8918  06A5  00D0               	movwf	main@RX_data
  8919                           
  8920                           ;Multi_RX_testjig_v1.c: 923: if(RX_data == 1)
  8921  06A6  0B50               	decfsz	main@RX_data,w
  8922  06A7  2E86               	goto	l4104
  8923  06A8                     l4110:	
  8924                           
  8925                           ;Multi_RX_testjig_v1.c: 926: }
  8926                           ;Multi_RX_testjig_v1.c: 928: if(RX_data == 1)
  8927  06A8  0350               	decf	main@RX_data,w
  8928  06A9  1D03               	btfss	3,2
  8929  06AA  2EB7               	goto	l4114
  8930                           
  8931                           ;Multi_RX_testjig_v1.c: 929: print_screen("Test RF", "Decode New - OK");
  8932  06AB  3000               	movlw	low (STR_109| (0+32768))
  8933  06AC  00F4               	movwf	print_screen@top
  8934  06AD  308B               	movlw	high (STR_109| (0+32768))
  8935  06AE  00F5               	movwf	print_screen@top+1
  8936  06AF  3041               	movlw	low (STR_138| (0+32768))
  8937  06B0  00F6               	movwf	print_screen@bottom
  8938  06B1  3088               	movlw	high (STR_138| (0+32768))
  8939  06B2  00F7               	movwf	print_screen@bottom+1
  8940  06B3  318E  26C1  3180   	fcall	_print_screen
  8941  06B6  2EDA               	goto	l4124
  8942  06B7                     l4114:	
  8943                           
  8944                           ;Multi_RX_testjig_v1.c: 930: else if(RX_data == 2)
  8945  06B7  3002               	movlw	2
  8946  06B8  0650               	xorwf	main@RX_data,w
  8947  06B9  1D03               	btfss	3,2
  8948  06BA  2EC3               	goto	l4118
  8949                           
  8950                           ;Multi_RX_testjig_v1.c: 931: print_error("Test RF", "Decode Old -Fail");
  8951  06BB  3000               	movlw	low (STR_109| (0+32768))
  8952  06BC  00F8               	movwf	print_error@top
  8953  06BD  308B               	movlw	high (STR_109| (0+32768))
  8954  06BE  00F9               	movwf	print_error@top+1
  8955  06BF  30ED               	movlw	low (STR_140| (0+32768))
  8956  06C0  00FA               	movwf	print_error@bottom
  8957  06C1  3087               	movlw	high (STR_140| (0+32768))
  8958  06C2  2ED6               	goto	L7
  8959  06C3                     l4118:	
  8960                           
  8961                           ;Multi_RX_testjig_v1.c: 932: else if(RX_data == 3)
  8962  06C3  3003               	movlw	3
  8963  06C4  0650               	xorwf	main@RX_data,w
  8964  06C5  1D03               	btfss	3,2
  8965  06C6  2ECF               	goto	l4122
  8966                           
  8967                           ;Multi_RX_testjig_v1.c: 933: print_error("Test RF", "Error - Decode");
  8968  06C7  3000               	movlw	low (STR_109| (0+32768))
  8969  06C8  00F8               	movwf	print_error@top
  8970  06C9  308B               	movlw	high (STR_109| (0+32768))
  8971  06CA  00F9               	movwf	print_error@top+1
  8972  06CB  30A0               	movlw	low (STR_142| (0+32768))
  8973  06CC  00FA               	movwf	print_error@bottom
  8974  06CD  3088               	movlw	high (STR_142| (0+32768))
  8975  06CE  2ED6               	goto	L7
  8976  06CF                     l4122:	
  8977                           
  8978                           ;Multi_RX_testjig_v1.c: 934: else
  8979                           ;Multi_RX_testjig_v1.c: 935: print_error("Comms Error", " 15");
  8980  06CF  300A               	movlw	low (STR_35| (0+32768))
  8981  06D0  00F8               	movwf	print_error@top
  8982  06D1  308A               	movlw	high (STR_35| (0+32768))
  8983  06D2  00F9               	movwf	print_error@top+1
  8984  06D3  3021               	movlw	low (STR_144| (0+32768))
  8985  06D4  00FA               	movwf	print_error@bottom
  8986  06D5  308B               	movlw	high (STR_144| (0+32768))
  8987  06D6                     L7:	
  8988  06D6  00FB               	movwf	print_error@bottom+1
  8989  06D7  318E  26E3  3180   	fcall	_print_error
  8990  06DA                     l4124:	
  8991                           
  8992                           ;Multi_RX_testjig_v1.c: 937: RE0 = 0;
  8993  06DA  0020               	movlb	0	; select bank0
  8994  06DB  1010               	bcf	16,0	;volatile
  8995  06DC                     l4126:	
  8996                           
  8997                           ;Multi_RX_testjig_v1.c: 938: }
  8998                           ;Multi_RX_testjig_v1.c: 940: if(device_type == 0xA2)
  8999  06DC  30A2               	movlw	162
  9000  06DD  0651               	xorwf	main@device_type,w
  9001  06DE  1D03               	btfss	3,2
  9002  06DF  2F02               	goto	l4138
  9003                           
  9004                           ;Multi_RX_testjig_v1.c: 941: {
  9005                           ;Multi_RX_testjig_v1.c: 943: print_screen("T4 bus (CAN)", " ");
  9006  06E0  3059               	movlw	low (STR_145| (0+32768))
  9007  06E1  00F4               	movwf	print_screen@top
  9008  06E2  3089               	movlw	high (STR_145| (0+32768))
  9009  06E3  00F5               	movwf	print_screen@top+1
  9010  06E4  303F               	movlw	low ((STR_157+14)| (0+32768))
  9011  06E5  00F6               	movwf	print_screen@bottom
  9012  06E6  3088               	movlw	high ((STR_157+14)| (0+32768))
  9013  06E7  00F7               	movwf	print_screen@bottom+1
  9014  06E8  318E  26C1  3180   	fcall	_print_screen
  9015                           
  9016                           ;Multi_RX_testjig_v1.c: 944: TX_one(0xA0);
  9017  06EB  30A0               	movlw	160
  9018  06EC  3194  245B  3180   	fcall	_TX_one
  9019                           
  9020                           ;Multi_RX_testjig_v1.c: 945: RX_data = RX_one();
  9021  06EF  3194  247D  3180   	fcall	_RX_one
  9022  06F2  0020               	movlb	0	; select bank0
  9023  06F3  00D0               	movwf	main@RX_data
  9024                           
  9025                           ;Multi_RX_testjig_v1.c: 946: if(RX_data != 0xAA)
  9026  06F4  3AAA               	xorlw	170
  9027  06F5  1903               	btfsc	3,2
  9028  06F6  2F02               	goto	l4138
  9029                           
  9030                           ;Multi_RX_testjig_v1.c: 947: print_error("Comms Error", " 18");
  9031  06F7  300A               	movlw	low (STR_35| (0+32768))
  9032  06F8  00F8               	movwf	print_error@top
  9033  06F9  308A               	movlw	high (STR_35| (0+32768))
  9034  06FA  00F9               	movwf	print_error@top+1
  9035  06FB  302D               	movlw	low (STR_148| (0+32768))
  9036  06FC  00FA               	movwf	print_error@bottom
  9037  06FD  308B               	movlw	high (STR_148| (0+32768))
  9038  06FE  00FB               	movwf	print_error@bottom+1
  9039  06FF  318E  26E3  3180   	fcall	_print_error
  9040  0702                     l4138:	
  9041                           
  9042                           ;Multi_RX_testjig_v1.c: 951: }
  9043                           ;Multi_RX_testjig_v1.c: 953: if((device_type == 0xAA) || (device_type == 0xA1) || (devic
      +                          e_type == 0xA2))
  9044  0702  30AA               	movlw	170
  9045  0703  0020               	movlb	0	; select bank0
  9046  0704  0651               	xorwf	main@device_type,w
  9047  0705  1903               	btfsc	3,2
  9048  0706  2F0F               	goto	l4144
  9049  0707  30A1               	movlw	161
  9050  0708  0651               	xorwf	main@device_type,w
  9051  0709  1903               	btfsc	3,2
  9052  070A  2F0F               	goto	l4144
  9053  070B  30A2               	movlw	162
  9054  070C  0651               	xorwf	main@device_type,w
  9055  070D  1D03               	btfss	3,2
  9056  070E  2F31               	goto	l4154
  9057  070F                     l4144:	
  9058                           
  9059                           ;Multi_RX_testjig_v1.c: 954: {
  9060                           ;Multi_RX_testjig_v1.c: 956: print_screen("Master Erase ", " ");
  9061  070F  30DC               	movlw	low (STR_149| (0+32768))
  9062  0710  00F4               	movwf	print_screen@top
  9063  0711  3088               	movlw	high (STR_149| (0+32768))
  9064  0712  00F5               	movwf	print_screen@top+1
  9065  0713  303F               	movlw	low ((STR_157+14)| (0+32768))
  9066  0714  00F6               	movwf	print_screen@bottom
  9067  0715  3088               	movlw	high ((STR_157+14)| (0+32768))
  9068  0716  00F7               	movwf	print_screen@bottom+1
  9069  0717  318E  26C1  3180   	fcall	_print_screen
  9070                           
  9071                           ;Multi_RX_testjig_v1.c: 957: TX_one(0x82);
  9072  071A  3082               	movlw	130
  9073  071B  3194  245B  3180   	fcall	_TX_one
  9074                           
  9075                           ;Multi_RX_testjig_v1.c: 958: RX_data = RX_one();
  9076  071E  3194  247D  3180   	fcall	_RX_one
  9077  0721  0020               	movlb	0	; select bank0
  9078  0722  00D0               	movwf	main@RX_data
  9079                           
  9080                           ;Multi_RX_testjig_v1.c: 959: if(RX_data != 0x8A)
  9081  0723  3A8A               	xorlw	138
  9082  0724  1903               	btfsc	3,2
  9083  0725  2F31               	goto	l4154
  9084                           
  9085                           ;Multi_RX_testjig_v1.c: 960: print_error("Comms Error", " 17");
  9086  0726  300A               	movlw	low (STR_35| (0+32768))
  9087  0727  00F8               	movwf	print_error@top
  9088  0728  308A               	movlw	high (STR_35| (0+32768))
  9089  0729  00F9               	movwf	print_error@top+1
  9090  072A  3029               	movlw	low (STR_152| (0+32768))
  9091  072B  00FA               	movwf	print_error@bottom
  9092  072C  308B               	movlw	high (STR_152| (0+32768))
  9093  072D  00FB               	movwf	print_error@bottom+1
  9094  072E  318E  26E3  3180   	fcall	_print_error
  9095  0731                     l4154:	
  9096                           
  9097                           ;Multi_RX_testjig_v1.c: 961: }
  9098                           ;Multi_RX_testjig_v1.c: 963: if((device_type == 0xAA) || (device_type == 0xA1))
  9099  0731  30AA               	movlw	170
  9100  0732  0020               	movlb	0	; select bank0
  9101  0733  0651               	xorwf	main@device_type,w
  9102  0734  1903               	btfsc	3,2
  9103  0735  2F3A               	goto	l4158
  9104  0736  30A1               	movlw	161
  9105  0737  0651               	xorwf	main@device_type,w
  9106  0738  1D03               	btfss	3,2
  9107  0739  2F5C               	goto	l4168
  9108  073A                     l4158:	
  9109                           
  9110                           ;Multi_RX_testjig_v1.c: 964: {
  9111                           ;Multi_RX_testjig_v1.c: 966: print_screen("Set # of ", " channels");
  9112  073A  3064               	movlw	low (STR_153| (0+32768))
  9113  073B  00F4               	movwf	print_screen@top
  9114  073C  308A               	movlw	high (STR_153| (0+32768))
  9115  073D  00F5               	movwf	print_screen@top+1
  9116  073E  308C               	movlw	low (STR_154| (0+32768))
  9117  073F  00F6               	movwf	print_screen@bottom
  9118  0740  308A               	movlw	high (STR_154| (0+32768))
  9119  0741  00F7               	movwf	print_screen@bottom+1
  9120  0742  318E  26C1  3180   	fcall	_print_screen
  9121                           
  9122                           ;Multi_RX_testjig_v1.c: 967: TX_one(0x81);
  9123  0745  3081               	movlw	129
  9124  0746  3194  245B  3180   	fcall	_TX_one
  9125                           
  9126                           ;Multi_RX_testjig_v1.c: 968: RX_data = RX_one();
  9127  0749  3194  247D  3180   	fcall	_RX_one
  9128  074C  0020               	movlb	0	; select bank0
  9129  074D  00D0               	movwf	main@RX_data
  9130                           
  9131                           ;Multi_RX_testjig_v1.c: 969: if(RX_data != 0x8A)
  9132  074E  3A8A               	xorlw	138
  9133  074F  1903               	btfsc	3,2
  9134  0750  2F5C               	goto	l4168
  9135                           
  9136                           ;Multi_RX_testjig_v1.c: 970: print_error("Comms Error", " 16");
  9137  0751  300A               	movlw	low (STR_35| (0+32768))
  9138  0752  00F8               	movwf	print_error@top
  9139  0753  308A               	movlw	high (STR_35| (0+32768))
  9140  0754  00F9               	movwf	print_error@top+1
  9141  0755  3025               	movlw	low (STR_156| (0+32768))
  9142  0756  00FA               	movwf	print_error@bottom
  9143  0757  308B               	movlw	high (STR_156| (0+32768))
  9144  0758  00FB               	movwf	print_error@bottom+1
  9145  0759  318E  26E3  3180   	fcall	_print_error
  9146  075C                     l4168:	
  9147                           
  9148                           ;Multi_RX_testjig_v1.c: 971: }
  9149                           ;Multi_RX_testjig_v1.c: 973: if((device_type == 0xAA) || (device_type == 0xA1)|| (device
      +                          _type == 0xA2))
  9150  075C  30AA               	movlw	170
  9151  075D  0020               	movlb	0	; select bank0
  9152  075E  0651               	xorwf	main@device_type,w
  9153  075F  1903               	btfsc	3,2
  9154  0760  2F69               	goto	l4174
  9155  0761  30A1               	movlw	161
  9156  0762  0651               	xorwf	main@device_type,w
  9157  0763  1903               	btfsc	3,2
  9158  0764  2F69               	goto	l4174
  9159  0765  30A2               	movlw	162
  9160  0766  0651               	xorwf	main@device_type,w
  9161  0767  1D03               	btfss	3,2
  9162  0768  2F95               	goto	l452
  9163  0769                     l4174:	
  9164                           
  9165                           ;Multi_RX_testjig_v1.c: 974: {
  9166                           ;Multi_RX_testjig_v1.c: 976: print_screen("7seg, buzzer,  ", " button test");
  9167  0769  3031               	movlw	low (STR_157| (0+32768))
  9168  076A  00F4               	movwf	print_screen@top
  9169  076B  3088               	movlw	high (STR_157| (0+32768))
  9170  076C  00F5               	movwf	print_screen@top+1
  9171  076D  30B4               	movlw	low (STR_158| (0+32768))
  9172  076E  00F6               	movwf	print_screen@bottom
  9173  076F  3089               	movlw	high (STR_158| (0+32768))
  9174  0770  00F7               	movwf	print_screen@bottom+1
  9175  0771  318E  26C1  3180   	fcall	_print_screen
  9176                           
  9177                           ;Multi_RX_testjig_v1.c: 977: TX_one(0x90);
  9178  0774  3090               	movlw	144
  9179  0775  3194  245B  3180   	fcall	_TX_one
  9180                           
  9181                           ;Multi_RX_testjig_v1.c: 978: TRISG0 = 1;
  9182  0778  0026               	movlb	6	; select bank6
  9183  0779  140D               	bsf	13,0	;volatile
  9184                           
  9185                           ;Multi_RX_testjig_v1.c: 979: _delay((unsigned long)((100)*(16000000/4000.0)));
  9186  077A  3003               	movlw	3
  9187  077B  0020               	movlb	0	; select bank0
  9188  077C  00CB               	movwf	??_main+2
  9189  077D  3008               	movlw	8
  9190  077E  00CA               	movwf	??_main+1
  9191  077F  3078               	movlw	120
  9192  0780  00C9               	movwf	??_main
  9193  0781                     u5117:	
  9194  0781  0BC9               	decfsz	??_main,f
  9195  0782  2F81               	goto	u5117
  9196  0783  0BCA               	decfsz	??_main+1,f
  9197  0784  2F81               	goto	u5117
  9198  0785  0BCB               	decfsz	??_main+2,f
  9199  0786  2F81               	goto	u5117
  9200  0787                     l455:	
  9201                           ;Multi_RX_testjig_v1.c: 980: while(RG1 == 1);
  9202                           
  9203  0787  0025               	movlb	5	; select bank5
  9204  0788  188D               	btfsc	13,1	;volatile
  9205  0789  2F87               	goto	l455
  9206                           
  9207                           ;Multi_RX_testjig_v1.c: 981: print_screen("waiting  ", " for comms");
  9208  078A  305A               	movlw	low (STR_159| (0+32768))
  9209  078B  00F4               	movwf	print_screen@top
  9210  078C  308A               	movlw	high (STR_159| (0+32768))
  9211  078D  00F5               	movwf	print_screen@top+1
  9212  078E  3039               	movlw	low (STR_160| (0+32768))
  9213  078F  00F6               	movwf	print_screen@bottom
  9214  0790  308A               	movlw	high (STR_160| (0+32768))
  9215  0791  00F7               	movwf	print_screen@bottom+1
  9216  0792  318E  26C1  3180   	fcall	_print_screen
  9217  0795                     l452:	
  9218                           
  9219                           ;Multi_RX_testjig_v1.c: 986: }
  9220                           ;Multi_RX_testjig_v1.c: 988: testjig_done(1, device_type);
  9221  0795  0020               	movlb	0	; select bank0
  9222  0796  0851               	movf	main@device_type,w
  9223  0797  00F8               	movwf	testjig_done@device_type
  9224  0798  3001               	movlw	1
  9225  0799  318D  256E  3180   	fcall	_testjig_done
  9226                           
  9227                           ;Multi_RX_testjig_v1.c: 998: testjig_done(1, device_type);
  9228  079C  0020               	movlb	0	; select bank0
  9229  079D  0851               	movf	main@device_type,w
  9230  079E  00F8               	movwf	testjig_done@device_type
  9231  079F  3001               	movlw	1
  9232  07A0  318D  256E         	fcall	_testjig_done
  9233  07A2  3180  2895         	ljmp	start
  9234  07A4                     __end_of_main:	


Data Sizes:
    Strings     949
    Constant    0
    Data        2
    BSS         24
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      79
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0

Pointer List with Targets:

    print_screen@bottom	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_196(CODE[17]), STR_194(CODE[13]), STR_192(CODE[13]), STR_190(CODE[13]), 
		 -> STR_188(CODE[13]), STR_186(CODE[14]), STR_184(CODE[14]), STR_182(CODE[14]), 
		 -> STR_180(CODE[14]), STR_178(CODE[8]), STR_176(CODE[8]), STR_174(CODE[9]), 
		 -> STR_172(CODE[9]), STR_170(CODE[9]), STR_168(CODE[14]), STR_166(CODE[14]), 
		 -> STR_164(CODE[14]), STR_162(CODE[14]), STR_160(CODE[11]), STR_158(CODE[13]), 
		 -> STR_154(CODE[10]), STR_150(CODE[2]), STR_146(CODE[2]), STR_138(CODE[16]), 
		 -> STR_136(CODE[7]), STR_134(CODE[10]), STR_124(CODE[5]), STR_122(CODE[9]), 
		 -> STR_110(CODE[4]), STR_88(CODE[3]), STR_86(CODE[1]), STR_64(CODE[3]), 
		 -> STR_62(CODE[1]), STR_50(CODE[5]), STR_48(CODE[1]), STR_42(CODE[6]), 
		 -> STR_34(CODE[6]), STR_32(CODE[9]), STR_30(CODE[13]), STR_28(CODE[1]), 
		 -> STR_6(CODE[1]), STR_2(CODE[17]), 

    print_screen@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_195(CODE[12]), STR_193(CODE[17]), STR_191(CODE[16]), STR_189(CODE[12]), 
		 -> STR_187(CODE[15]), STR_185(CODE[17]), STR_183(CODE[16]), STR_181(CODE[12]), 
		 -> STR_179(CODE[15]), STR_177(CODE[17]), STR_175(CODE[9]), STR_173(CODE[16]), 
		 -> STR_171(CODE[5]), STR_169(CODE[8]), STR_167(CODE[14]), STR_165(CODE[16]), 
		 -> STR_163(CODE[9]), STR_161(CODE[12]), STR_159(CODE[10]), STR_157(CODE[16]), 
		 -> STR_153(CODE[10]), STR_149(CODE[14]), STR_145(CODE[13]), STR_137(CODE[8]), 
		 -> STR_135(CODE[8]), STR_133(CODE[8]), STR_123(CODE[8]), STR_121(CODE[8]), 
		 -> STR_109(CODE[8]), STR_87(CODE[9]), STR_85(CODE[9]), STR_63(CODE[9]), 
		 -> STR_61(CODE[9]), STR_49(CODE[11]), STR_47(CODE[11]), STR_41(CODE[13]), 
		 -> STR_33(CODE[13]), STR_31(CODE[19]), STR_29(CODE[12]), STR_27(CODE[19]), 
		 -> STR_5(CODE[15]), STR_1(CODE[9]), 

    print_error@bottom	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_156(CODE[4]), STR_152(CODE[4]), STR_148(CODE[4]), STR_144(CODE[4]), 
		 -> STR_142(CODE[15]), STR_140(CODE[17]), STR_132(CODE[13]), STR_130(CODE[14]), 
		 -> STR_128(CODE[4]), STR_126(CODE[4]), STR_120(CODE[13]), STR_118(CODE[16]), 
		 -> STR_116(CODE[14]), STR_114(CODE[4]), STR_112(CODE[4]), STR_108(CODE[4]), 
		 -> STR_106(CODE[9]), STR_104(CODE[3]), STR_102(CODE[7]), STR_100(CODE[4]), 
		 -> STR_98(CODE[4]), STR_96(CODE[15]), STR_94(CODE[16]), STR_92(CODE[3]), 
		 -> STR_90(CODE[9]), STR_84(CODE[3]), STR_82(CODE[9]), STR_80(CODE[3]), 
		 -> STR_78(CODE[7]), STR_76(CODE[4]), STR_74(CODE[4]), STR_72(CODE[15]), 
		 -> STR_70(CODE[16]), STR_68(CODE[3]), STR_66(CODE[9]), STR_60(CODE[9]), 
		 -> STR_58(CODE[3]), STR_56(CODE[7]), STR_54(CODE[3]), STR_52(CODE[9]), 
		 -> STR_46(CODE[18]), STR_44(CODE[14]), STR_40(CODE[3]), STR_38(CODE[12]), 
		 -> STR_36(CODE[3]), STR_26(CODE[12]), STR_24(CODE[11]), STR_22(CODE[13]), 
		 -> STR_20(CODE[13]), STR_18(CODE[13]), STR_16(CODE[13]), STR_14(CODE[12]), 
		 -> STR_12(CODE[11]), STR_10(CODE[13]), STR_8(CODE[13]), STR_4(CODE[14]), 

    print_error@top	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_155(CODE[12]), STR_151(CODE[12]), STR_147(CODE[12]), STR_143(CODE[12]), 
		 -> STR_141(CODE[8]), STR_139(CODE[8]), STR_131(CODE[13]), STR_129(CODE[13]), 
		 -> STR_127(CODE[12]), STR_125(CODE[12]), STR_119(CODE[12]), STR_117(CODE[12]), 
		 -> STR_115(CODE[12]), STR_113(CODE[12]), STR_111(CODE[12]), STR_107(CODE[12]), 
		 -> STR_105(CODE[10]), STR_103(CODE[12]), STR_101(CODE[9]), STR_99(CODE[12]), 
		 -> STR_97(CODE[12]), STR_95(CODE[9]), STR_93(CODE[9]), STR_91(CODE[12]), 
		 -> STR_89(CODE[10]), STR_83(CODE[12]), STR_81(CODE[10]), STR_79(CODE[12]), 
		 -> STR_77(CODE[9]), STR_75(CODE[12]), STR_73(CODE[12]), STR_71(CODE[9]), 
		 -> STR_69(CODE[9]), STR_67(CODE[12]), STR_65(CODE[10]), STR_59(CODE[19]), 
		 -> STR_57(CODE[12]), STR_55(CODE[16]), STR_53(CODE[12]), STR_51(CODE[19]), 
		 -> STR_45(CODE[12]), STR_43(CODE[12]), STR_39(CODE[12]), STR_37(CODE[13]), 
		 -> STR_35(CODE[12]), STR_25(CODE[14]), STR_23(CODE[11]), STR_21(CODE[15]), 
		 -> STR_19(CODE[15]), STR_17(CODE[14]), STR_15(CODE[14]), STR_13(CODE[14]), 
		 -> STR_11(CODE[11]), STR_9(CODE[14]), STR_7(CODE[14]), STR_3(CODE[9]), 

    i2c_Write_string@data	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_196(CODE[17]), STR_195(CODE[12]), STR_194(CODE[13]), STR_193(CODE[17]), 
		 -> STR_192(CODE[13]), STR_191(CODE[16]), STR_190(CODE[13]), STR_189(CODE[12]), 
		 -> STR_188(CODE[13]), STR_187(CODE[15]), STR_186(CODE[14]), STR_185(CODE[17]), 
		 -> STR_184(CODE[14]), STR_183(CODE[16]), STR_182(CODE[14]), STR_181(CODE[12]), 
		 -> STR_180(CODE[14]), STR_179(CODE[15]), STR_178(CODE[8]), STR_177(CODE[17]), 
		 -> STR_176(CODE[8]), STR_175(CODE[9]), STR_174(CODE[9]), STR_173(CODE[16]), 
		 -> STR_172(CODE[9]), STR_171(CODE[5]), STR_170(CODE[9]), STR_169(CODE[8]), 
		 -> STR_168(CODE[14]), STR_167(CODE[14]), STR_166(CODE[14]), STR_165(CODE[16]), 
		 -> STR_164(CODE[14]), STR_163(CODE[9]), STR_162(CODE[14]), STR_161(CODE[12]), 
		 -> STR_160(CODE[11]), STR_159(CODE[10]), STR_158(CODE[13]), STR_157(CODE[16]), 
		 -> STR_156(CODE[4]), STR_155(CODE[12]), STR_154(CODE[10]), STR_153(CODE[10]), 
		 -> STR_152(CODE[4]), STR_151(CODE[12]), STR_150(CODE[2]), STR_149(CODE[14]), 
		 -> STR_148(CODE[4]), STR_147(CODE[12]), STR_146(CODE[2]), STR_145(CODE[13]), 
		 -> STR_144(CODE[4]), STR_143(CODE[12]), STR_142(CODE[15]), STR_141(CODE[8]), 
		 -> STR_140(CODE[17]), STR_139(CODE[8]), STR_138(CODE[16]), STR_137(CODE[8]), 
		 -> STR_136(CODE[7]), STR_135(CODE[8]), STR_134(CODE[10]), STR_133(CODE[8]), 
		 -> STR_132(CODE[13]), STR_131(CODE[13]), STR_130(CODE[14]), STR_129(CODE[13]), 
		 -> STR_128(CODE[4]), STR_127(CODE[12]), STR_126(CODE[4]), STR_125(CODE[12]), 
		 -> STR_124(CODE[5]), STR_123(CODE[8]), STR_122(CODE[9]), STR_121(CODE[8]), 
		 -> STR_120(CODE[13]), STR_119(CODE[12]), STR_118(CODE[16]), STR_117(CODE[12]), 
		 -> STR_116(CODE[14]), STR_115(CODE[12]), STR_114(CODE[4]), STR_113(CODE[12]), 
		 -> STR_112(CODE[4]), STR_111(CODE[12]), STR_110(CODE[4]), STR_109(CODE[8]), 
		 -> STR_108(CODE[4]), STR_107(CODE[12]), STR_106(CODE[9]), STR_105(CODE[10]), 
		 -> STR_104(CODE[3]), STR_103(CODE[12]), STR_102(CODE[7]), STR_101(CODE[9]), 
		 -> STR_100(CODE[4]), STR_99(CODE[12]), STR_98(CODE[4]), STR_97(CODE[12]), 
		 -> STR_96(CODE[15]), STR_95(CODE[9]), STR_94(CODE[16]), STR_93(CODE[9]), 
		 -> STR_92(CODE[3]), STR_91(CODE[12]), STR_90(CODE[9]), STR_89(CODE[10]), 
		 -> STR_88(CODE[3]), STR_87(CODE[9]), STR_86(CODE[1]), STR_85(CODE[9]), 
		 -> STR_84(CODE[3]), STR_83(CODE[12]), STR_82(CODE[9]), STR_81(CODE[10]), 
		 -> STR_80(CODE[3]), STR_79(CODE[12]), STR_78(CODE[7]), STR_77(CODE[9]), 
		 -> STR_76(CODE[4]), STR_75(CODE[12]), STR_74(CODE[4]), STR_73(CODE[12]), 
		 -> STR_72(CODE[15]), STR_71(CODE[9]), STR_70(CODE[16]), STR_69(CODE[9]), 
		 -> STR_68(CODE[3]), STR_67(CODE[12]), STR_66(CODE[9]), STR_65(CODE[10]), 
		 -> STR_64(CODE[3]), STR_63(CODE[9]), STR_62(CODE[1]), STR_61(CODE[9]), 
		 -> STR_60(CODE[9]), STR_59(CODE[19]), STR_58(CODE[3]), STR_57(CODE[12]), 
		 -> STR_56(CODE[7]), STR_55(CODE[16]), STR_54(CODE[3]), STR_53(CODE[12]), 
		 -> STR_52(CODE[9]), STR_51(CODE[19]), STR_50(CODE[5]), STR_49(CODE[11]), 
		 -> STR_48(CODE[1]), STR_47(CODE[11]), STR_46(CODE[18]), STR_45(CODE[12]), 
		 -> STR_44(CODE[14]), STR_43(CODE[12]), STR_42(CODE[6]), STR_41(CODE[13]), 
		 -> STR_40(CODE[3]), STR_39(CODE[12]), STR_38(CODE[12]), STR_37(CODE[13]), 
		 -> STR_36(CODE[3]), STR_35(CODE[12]), STR_34(CODE[6]), STR_33(CODE[13]), 
		 -> STR_32(CODE[9]), STR_31(CODE[19]), STR_30(CODE[13]), STR_29(CODE[12]), 
		 -> STR_28(CODE[1]), STR_27(CODE[19]), STR_26(CODE[12]), STR_25(CODE[14]), 
		 -> STR_24(CODE[11]), STR_23(CODE[11]), STR_22(CODE[13]), STR_21(CODE[15]), 
		 -> STR_20(CODE[13]), STR_19(CODE[15]), STR_18(CODE[13]), STR_17(CODE[14]), 
		 -> STR_16(CODE[13]), STR_15(CODE[14]), STR_14(CODE[12]), STR_13(CODE[14]), 
		 -> STR_12(CODE[11]), STR_11(CODE[11]), STR_10(CODE[13]), STR_9(CODE[14]), 
		 -> STR_8(CODE[13]), STR_7(CODE[14]), STR_6(CODE[1]), STR_5(CODE[15]), 
		 -> STR_4(CODE[14]), STR_3(CODE[9]), STR_2(CODE[17]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _testjig_done->_print_screen
    _print_error->_print_screen
    _print_screen->_i2c_Write_string
    _i2c_second_line->_i2c_Write
    _i2c_first_line->_i2c_Write
    _i2c_Write_string->_i2c_Write
    _clear_lcd->_i2c_Write
    _lcd_print_int->_ten_thou_conv
    _ten_thou_conv->___wmul
    _lcd_set_cursor->_i2c_Write
    _i2c_write_char->_i2c_Write
    _init_i2c_lcd_5v->_i2c_Write
    _get_30v_current->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    ___ftadd->___ftmul
    _Vout_set->_digitalpot
    _digitalpot->_i2c_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_get_30v_current
    _get_30v_current->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _isr in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   35074
                                             41 BANK0      9     9      0
                        _ADC_get_val
                             _RX_one
                     _RX_one_timeout
                             _TX_one
                           _Vout_set
                           _buzz_one
                      _debug_fast_tx
                    _get_30v_current
                           _init_ADC
                  _init_current_sink
                           _init_i2c
                    _init_i2c_lcd_5v
                      _lcd_print_int
                   _power_supply_set
                        _print_error
                       _print_screen
                       _testjig_done
 ---------------------------------------------------------------------------------
 (1) _testjig_done                                         5     4      1    6006
                                              8 COMMON     5     4      1
                           _buzz_one
                      _debug_fast_tx
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (1) _print_error                                          7     3      4   11915
                                              8 COMMON     4     0      4
                                              0 BANK0      3     3      0
                           _buzz_one
                          _clear_lcd
                      _debug_fast_tx
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
                   _power_supply_set
                       _print_screen
 ---------------------------------------------------------------------------------
 (2) _print_screen                                         4     0      4    4841
                                              4 COMMON     4     0      4
                          _clear_lcd
                   _i2c_Write_string
                     _i2c_first_line
                    _i2c_second_line
 ---------------------------------------------------------------------------------
 (3) _i2c_second_line                                      1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_first_line                                       1     1      0      22
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _i2c_Write_string                                     3     1      2     279
                                              1 COMMON     3     1      2
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) _clear_lcd                                            2     2      0      22
                                              1 COMMON     2     2      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _power_supply_set                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _debug_fast_tx                                        3     1      2     493
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _buzz_one                                             2     0      2     234
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd_print_int                                        6     0      6    2684
                                              0 BANK0      6     0      6
                     _i2c_write_char
                     _lcd_set_cursor
                      _ten_thou_conv
 ---------------------------------------------------------------------------------
 (2) _ten_thou_conv                                        5     3      2    1805
                                              6 COMMON     5     3      2
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     756
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     908
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       3     2      1     147
                                              1 COMMON     3     2      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_write_char                                       1     1      0      44
                                              1 COMMON     1     1      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c_lcd_5v                                      4     3      1     141
                                              1 COMMON     4     3      1
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init_current_sink                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_30v_current                                      4     2      2    6935
                                             37 BANK0      4     2      2
                        _ADC_get_val
                            ___ftadd
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    1743
                                              8 COMMON     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             13     9      4     305
                                             24 BANK0     13     9      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2102
                                             11 COMMON     3     3      0
                                              0 BANK0     12     6      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    2694
                                             12 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _ADC_get_val                                          6     3      3      46
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _Vout_set                                             6     4      2     317
                                              4 COMMON     6     4      2
                         _digitalpot
 ---------------------------------------------------------------------------------
 (2) _digitalpot                                           3     3      0      44
                                              1 COMMON     3     3      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (4) _i2c_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TX_one                                               3     3      0      69
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one_timeout                                       3     3      0      93
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _RX_one                                               3     3      0      93
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_get_val
   _RX_one
   _RX_one_timeout
   _TX_one
   _Vout_set
     _digitalpot
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _buzz_one
   _debug_fast_tx
   _get_30v_current
     _ADC_get_val
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _init_ADC
   _init_current_sink
   _init_i2c
   _init_i2c_lcd_5v
     _i2c_Start
     _i2c_Stop
     _i2c_Write
   _lcd_print_int
     _i2c_write_char
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _lcd_set_cursor
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _ten_thou_conv
       ___bmul
       ___wmul
   _power_supply_set
   _print_error
     _buzz_one
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _debug_fast_tx
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
   _print_screen
     _clear_lcd
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_Write_string
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_first_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
     _i2c_second_line
       _i2c_Start
       _i2c_Stop
       _i2c_Write
   _testjig_done
     _buzz_one
     _debug_fast_tx
     _power_supply_set
     _print_screen
       _clear_lcd
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_Write_string
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_first_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write
       _i2c_second_line
         _i2c_Start
         _i2c_Stop
         _i2c_Write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0      5D      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      5D      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Jun 21 13:20:55 2017

         _motor_direction_timer 005A             ??_init_current_sink 0070                     main@RX_data 0050  
                             pc 0002                  ___bmul@product 0071                     __CFG_CP$OFF 0000  
              _power_supply_set 0FDF             ___wmul@multiplicand 0072                      TX_one@data 0071  
                  ___ftadd@exp1 0037                    ___ftadd@exp2 0036                    ___ftadd@sign 0035  
                           l300 152F                             l307 15C7                             l341 027A  
                           l513 0FC4                             l522 0FD4                             l418 0604  
                           l507 0FCF                             l427 066C                             l452 0795  
                           l461 0D6F                             l470 0DC0                             l374 03D5  
                           l455 0787                             l538 0FAE                             l634 0D5D  
                           l722 0EA1                             l715 0CBC                             l732 147D  
                           l388 047F                             l750 0BA4                             l742 0B91  
                           l735 1487                             l727 1465                             l487 0E52  
                           l399 04FA                             l496 0E83                             l737 148E  
                           l738 1490                             l747 0B9B                             l675 162A  
                           l916 175D                             l749 0BA2                             l685 0FE1  
                           l687 0FE6                             l928 1782                             l952 16AF  
                           l688 0FEB                             l689 0FF0                             _GIE 005F  
                           _RA2 0062                             _RA4 0064                             _RA5 0065  
             ??_i2c_second_line 0071                             _RE0 0080                             _RF0 1460  
                           _RF1 1461                             _RF2 1462                             _RE4 0084  
                           _RG1 1469                             _RF3 1463                             _RE5 0085  
                           _RE6 0086                             _RG3 146B                             _RF5 1465  
                           _PR2 001B                             _PR8 0596                             _isr 0004  
                           _ten 0066                    __CFG_BORV$HI 0000                             wreg 0009  
                ?_lcd_print_int 0020                            S4264 100C                            S4268 0B59  
       __size_of_i2c_write_char 000D                 ?_lcd_set_cursor 0071                    __CFG_LVP$OFF 0000  
     __end_of_init_current_sink 1444                            l3020 1699                            l3014 168C  
                          l3110 17B0                            l3040 16C5                            l3016 1690  
                          l3008 167E                            l3112 17B5                            l3034 16BA  
                          l3026 16A7                            l3018 1695                            l3210 0EF8  
                          l4010 0556                            l3052 16D9                            l3028 16AB  
                          l3060 16FC                            l3140 17E9                            l3132 17DC  
                          l4012 055E                            l4020 057E                            l3230 0CA1  
                          l4110 06A8                            l4014 0566                            l4022 0586  
                          l3304 0B8C                            l3240 0CAB                            l3232 0CA3  
                          l3064 170D                            l3144 17F7                            l3128 17D5  
                          l4104 0686                            l4032 05AA                            l4008 054E  
                          l4016 056E                            l4024 058E                            l3306 0B94  
                          l3250 0CB5                            l3242 0CAD                            l3234 0CA5  
                          l3226 0C9D                            l3082 1721                            l3138 17E0  
                          l4122 06CF                            l4114 06B7                            l4050 05DD  
                          l4018 0576                            l4026 0596                            l3252 0CB7  
                          l3244 0CAF                            l3236 0CA7                            l3228 0C9F  
                          l3260 0CD3                            l4124 06DA                            l4028 05A1  
                          l2710 0FC6                            l3254 0CB9                            l3246 0CB1  
                          l3238 0CA9                            l3094 1733                            l3086 1729  
                          l3190 0FA7                            l3350 0D1D                            l3342 0D0F  
                          l3334 0D03                            l3502 0E79                            l4118 06C3  
                          l4054 05E9                            l4046 05D2                            l4126 06DC  
                          l3248 0CB3                            l3280 1622                            l3336 0D06  
                          l3432 0D92                            l3424 0D82                            l4144 070F  
                          l4080 0646                            l2714 0FD2                            l3258 0CC1  
                          l3098 173B                            l3338 0D09                            l4154 0731  
                          l4138 0702                            l4058 05F5                            l3372 0D40  
                          l3364 0D34                            l3356 0D26                            l3348 0D1A  
                          l2716 0F6E                            l3436 0D9A                            l3428 0D8A  
                          l4084 0651                            l3382 0D51                            l3366 0D37  
                          l2726 0F76                            l3462 0DF2                            l3454 0DDE  
                          l3470 0E22                            l4174 0769                            l4158 073A  
                          l4094 0696                            l3710 0111                            l3702 00EF  
                          l2832 1761                            l3384 0D54                            l2728 0F88  
                          l3448 0DD0                            l3472 0E2A                            l4168 075C  
                          l4088 065D                            l4266 0CC6                            l2842 1780  
                          l2834 1765                            l2922 0CE7                            l2762 0C89  
                          l3482 0E40                            l3458 0DE6                            l3714 0124  
                          l3706 00FE                            l3722 0145                            l2844 1778  
                          l2836 176A                            l2924 0CE9                            l3812 02AB  
                          l3660 155C                            l2838 1773                            l2766 0C8F  
                          l2870 0EA8                            l3494 0E69                            l3486 0E48  
                          l3478 0E38                            l3822 02C7                            l3718 0136  
                          l3670 1593                            l3744 01B2                            l3498 0E71  
                          l3930 0441                            l3850 0330                            l3818 02BE  
                          l3674 15A6                            l3666 1580                            l3658 1575  
                          l3924 0429                            l3940 0464                            l3860 0354  
                          l3852 0338                            l3780 024E                            l3764 01F7  
                          l3748 01CB                            l2990 1661                            l2878 0FF5  
                          l3926 0431                            l3934 044C                            l3942 046C  
                          l3846 0320                            l3854 0340                            l3790 026B  
                          l3686 00D5                            l3678 15B8                            l3928 0439  
                          l3936 0454                            l3944 0474                            l3848 0328  
                          l3856 034B                            l3784 0257                            l3776 023C  
                          l3688 00A6                            l2986 165A                            l3938 045C  
                          l3698 00E0                            l2996 1670                            l3892 03D0  
                          l3894 03CD                            l3976 04F5                            l3978 04F2  
                          ?_isr 0070                            STR_1 0AD5                            STR_2 080F  
                          STR_3 0AD5                            STR_4 08F8                            STR_5 0891  
                          STR_6 0840                            STR_7 0930                            STR_8 0980  
                          STR_9 0930                            u3110 146A                            u3015 17BC  
                          u3124 146C                            u5007 03FC                            u2640 0EA6  
                          u2705 0BCE                            u5017 0414                            u2715 0BDD  
                          u5107 068C                            u5027 0499                            u2725 0BF9  
                          u5117 0781                            u5037 04B1                            u2735 0C20  
                          u5207 0EDF                            u5127 0DB5                            u5047 04CD  
                          u2745 0C42                            u5217 0F3D                            u5137 0DC9  
                          u5057 04E5                            u5307 0BA8                            u5227 0F50  
                          u5147 0E02                            u5067 050E                            u5317 0BB1  
                          u5237 0FBB                            u5157 0E18                            u5077 0521  
                          u5327 1482                            u5247 144B                            u2695 0BBF  
                          u5167 0E5B                            u5087 0539                            u5337 1494  
                          u5257 0F68                            u5177 0E8C                            u5097 0617  
                          u5347 149D                            u5267 1462                            u5187 0F11  
                          u5277 146F                            u5197 0F28                            u5287 147A  
                          u4807 1514                            u5297 0B96                            u4817 151F  
                          u4907 01D2                            u4827 154B                            u4917 01E0  
                          u4837 15D8                            u4927 021E                            u4847 0160  
                          u4937 02ED                            u4857 017B                            u4947 0309  
                          u4867 018A                            u4957 0374                            u4877 019A  
                          u4797 1505                            u4967 038C                            u4887 01AB  
                          u4977 03A8                            u4897 01C4                            u4987 03C0  
                          u4997 03E9                            _TMR0 0015                            _WPUB 020D  
                          _WPUD 020F                            _WPUE 0210                    __CFG_WRT$OFF 0000  
                          _main 14A1                    ___ftpack@arg 0070                            _hund 0064  
                  ___ftpack@exp 0073                            _thou 0069                            fsr0h 0005  
                          fsr0l 0004                            indf0 0000                            _unit 0068  
                          btemp 007E               ??_get_30v_current 007E                   __CFG_BOREN$ON 0000  
                          ltemp 007E                            start 0095                            ttemp 007E  
                          wtemp 007E                ??_RX_one_timeout 0070                   __CFG_IESO$OFF 0000  
       i2c_write_char@char_data 0071               ___bmul@multiplier 0072                   __CFG_MCLRE$ON 0000  
                  ___ftmul@cntr 002A                    ___ftmul@sign 002B                 digitalpot@value 0073  
          __size_of_ADC_get_val 0012         __end_of_init_i2c_lcd_5v 0FC1                    ___fttol@exp1 0044  
                  ___fttol@lval 0040                           ??_isr 0070                  _i2c_first_line 0F30  
                         ?_main 0070                 __end_of___ftadd 16EB                           STR_10 0966  
                         STR_11 08D1                           STR_20 0980                           STR_12 0A2E  
                         STR_21 08CD                           STR_13 0930                           STR_22 0966  
                         STR_30 07BD                           STR_14 0A16                           STR_31 07B7  
                         STR_23 0A4F                           STR_15 093E                           STR_40 0AA5  
                         STR_16 0980                           STR_24 0A2E                           STR_32 0ADE  
                         STR_25 093E                           STR_17 093E                           STR_33 099A  
                         STR_41 094C                           STR_18 0966                           STR_42 09EC  
                         STR_26 0A16                           STR_34 0A3E                           STR_50 0AEB  
                         STR_35 0A0A                           STR_43 09E6                           STR_19 08CD  
                         STR_27 07B7                           STR_51 07A4                           STR_28 0840  
                         STR_36 0A9C                           STR_52 0A9F                           STR_60 0A96  
                         STR_44 08EA                           STR_45 09E6                           STR_53 0A0A  
                         STR_61 0AA8                           STR_29 09FE                           STR_37 09A7  
                         STR_62 0840                           STR_54 0B41                           STR_38 09DA  
                         STR_70 0881                           STR_46 07CA                           STR_63 0AA8  
                         STR_71 0AC3                           STR_39 0A0A                           STR_47 0A44  
                         STR_55 0851                           STR_48 0840                           STR_56 0A32  
                         STR_64 0B56                           STR_80 0B4A                           STR_72 08BE  
                         STR_81 0A6E                           STR_73 0A0A                           STR_57 0A0A  
                         STR_49 0A44                           STR_65 0A6E                           STR_82 0A96  
                         STR_90 0A9F                           STR_66 0A9F                           STR_58 0B44  
                         STR_74 0B31                           STR_59 07A4                           STR_91 0A0A  
                         STR_83 0A0A                           STR_75 0A0A                           STR_67 0A0A  
                         STR_92 0B50                           STR_84 0B4D                           STR_68 0B47  
                         STR_76 0B39                           STR_77 0AC3                           STR_93 0ACC  
                         STR_69 0AC3                           STR_85 0AB1                           STR_86 0840  
                         STR_78 0A32                           STR_94 0881                           STR_87 0AB1  
                         STR_95 0ACC                           STR_79 0A0A                           STR_88 0B56  
                         STR_96 08BE                           STR_97 0A0A                           STR_89 0A78  
                         STR_98 0B3D                           STR_99 0A0A                 __end_of___ftmul 1755  
               __end_of___fttol 1800                           _T2CON 001C                           _LATC2 0872  
                         _LATA6 0866                           _LATB5 086D                           _LATA7 0867  
                         _LATD2 087A                           _LATC5 0875                           _LATD4 087C  
                         _LATC6 0876                           _LATD5 087D                           _LATC7 0877  
                         _LATG0 1C68                           _LATD6 087E                           _LATF4 1C64  
         __end_of_debug_fast_tx 0EC1                           _T8CON 0597                           i1l273 0019  
                         i1l290 005F                           i1l282 003E                           i1l292 007A  
                         i1l286 0054                           i1l279 002E                           i1l289 005B  
                         i1l297 0093                           _PORTA 000C                           _PORTB 000D  
                         _PORTC 000E                           _PORTD 000F                           _PORTE 0010  
                         _PORTF 028C                           _PORTG 028D                    main@mem_size 004C  
                         _TRISA 008C                           _TRISB 008D                           _TRISC 008E  
                         _TRISD 008F                           _TRISE 0090                           _TRISF 030C  
                         _TRISG 030D                  __CFG_FCMEN$OFF 0000              _current_sink_timer 0058  
      __end_of_i2c_Write_string 0F89                   ___ftpack@sign 0074                           main@i 004E  
                         ltemp0 007E                           ltemp1 0082                           ltemp2 0086  
                         ltemp3 0080                           ttemp0 007E                           ttemp1 0081  
                         ttemp2 0084                           ttemp3 0087                           ttemp4 007F  
                         status 0003                           wtemp0 007E                           wtemp1 0080  
                         wtemp2 0082                           wtemp3 0084                           wtemp4 0086  
                         wtemp5 0088                           wtemp6 007F                 __initialization 0097  
    lcd_set_cursor@LCD_position 0073                    __end_of_main 07A4          __end_of_i2c_first_line 0F41  
              __end_of_i2c_Stop 0FD7                  __CFG_LPBOR$OFF 0000                          ??_main 0049  
                 ___fttol@sign1 003F                 ??_lcd_print_int 007B             lcd_print_int@number 0020  
                        _ADCON0 009D                          _ADCON1 009E                          i1S4270 1000  
                        STR_100 0B35                          STR_101 0ACC                          STR_110 09D6  
                        STR_102 0A32                          STR_111 0A0A                          STR_103 0A0A  
                        STR_104 0B53                          STR_112 0B11                          STR_120 09C1  
                        STR_105 0A78                          STR_121 0B00                          STR_113 0A0A  
                        STR_106 0A96                          STR_130 0914                          STR_114 0B15  
                        STR_122 0ABA                          _ADRESH 009C                          STR_123 0B00  
                        STR_131 0973                          STR_107 0A0A                          STR_115 09CE  
                        STR_124 097B                          STR_132 09C1                          STR_108 0B0D  
                        STR_116 0914                          STR_140 07ED                          STR_117 09CE  
                        STR_141 0B00                          STR_133 0B00                          STR_125 0A0A  
                        STR_109 0B00                          STR_150 083F                          STR_126 0B19  
                        STR_134 0A82                          STR_142 08A0                          STR_118 0861  
                        _ADRESL 009B                          STR_119 09CE                          STR_135 0B00  
                        STR_151 0A0A                          STR_143 0A0A                          STR_127 0A0A  
                        STR_136 08A8                          STR_152 0B29                          STR_144 0B21  
                        STR_128 0B1D                          STR_160 0A39                          STR_137 0B00  
                        STR_153 0A64                          STR_161 0A22                          STR_129 0973  
                        STR_145 0959                          STR_146 083F                          STR_170 09F5  
                        STR_154 0A8C                          STR_162 0906                          STR_138 0841  
                        STR_139 0B00                          STR_155 0A0A                          STR_147 0A0A  
                        STR_171 0B08                          STR_163 0AE7                          STR_180 08F8  
                        STR_164 0906                          STR_172 09F5                          STR_148 0B2D  
                        STR_156 0B25                          STR_173 0871                          STR_181 09F2  
                        STR_149 08DC                          STR_165 0871                          STR_157 0831  
                        STR_182 08F8                          STR_190 098D                          STR_166 0906  
                        STR_174 09F5                          STR_158 09B4                          STR_175 0AD5  
                        STR_191 0871                          STR_183 0871                          STR_159 0A5A  
                        STR_167 0922                          STR_184 08F8                          STR_192 098D  
                        STR_168 0906                          STR_176 09F6                          STR_193 07DC  
                        STR_169 0AF0                          STR_177 07FE                          STR_185 07DC  
                        STR_186 08F8                          STR_194 098D                          STR_178 0AF8  
                        STR_195 098E                          STR_187 08AF                          STR_179 08AF  
                        STR_188 098D                          STR_196 0820                          STR_189 09F2  
    __size_of_init_current_sink 0015                          _CCPR9L 061A                          _ANSELA 018C  
                        _ANSELB 018D                          _ANSELD 018F                          _ANSELE 0190  
                        _ANSELF 040C                __end_of___ftpack 1793                          _ANSELG 040D  
            __size_of_i2c_Start 0005                          i1l3512 0011                          i1l3520 0022  
                        i1l3540 004B                          i1l3518 0021                          i1l3528 0037  
                        i1l3552 0066                          i1l3562 0086                          i1l3546 0057  
                        i1l3538 004A                          i1l3554 0070                          i1l3564 008A  
                        i1l3558 007C                          i1l3568 0092              __size_of_i2c_Write 000C  
                        _FVRCON 0117                __end_of_Vout_set 0CD5                __end_of___lwtoft 17A3  
                        _OSCCON 0099                          _TMR0IE 005D                          _TMR0IF 005A  
                        _TRISC3 0473                          _TRISC4 0474                          _TRISG0 1868  
             print_error@bottom 007A                          _RX_one 147D                  __CFG_PWRTE$OFF 0000  
                        _TX_one 145B             _current_sink_stable 0056                          ___bmul 0C64  
               ?_i2c_first_line 0070                          ___wmul 0C87                       ??___ftadd 0032  
                __CFG_STVREN$ON 0000                       ??___ftmul 007B                       ??___fttol 003C  
              __end_of_init_ADC 142F                ?_init_i2c_lcd_5v 0071                __end_of_init_i2c 145B  
              __end_of_buzz_one 0FDF                _ADC_cur_sink_val 0052           ___ftmul@f3_as_product 0027  
                 i2c_Write@data 0070                  _i2c_write_char 0D61               debug_fast_tx@data 0070  
      __end_of_power_supply_set 1000                    ?_print_error 0078         __end_of__initialization 00A2  
                    ___ftadd@f1 002C                      ___ftadd@f2 002F             ___bmul@multiplicand 0070  
                    ___ftmul@f1 0020                      ___ftmul@f2 0023                 _i2c_second_line 0ED2  
                    ___fttol@f1 0038                  __pcstackCOMMON 0070                    __pidataBANK0 0000  
                print_error@top 0078           __end_of_ten_thou_conv 0C64               __end_of_i2c_Start 0FD2  
             __end_of_i2c_Write 0FCD              __size_of_clear_lcd 0015                      ___lwtoft@c 0078  
              ??_lcd_set_cursor 0072          __end_of_i2c_write_char 0D6E                 _get_30v_current 15E6  
          i2c_Write_string@data 0071            lcd_print_int@decimal 0024                _one_second_timer 006D  
                    __pbssBANK0 0052                       ?_i2c_Stop 0070     lcd_print_int@ten_thou_digit 0025  
                       ?_RX_one 0070              ADC_get_val@channel 0073                         ?_TX_one 0070  
                    __pmaintext 14A1                         ?___bmul 0070                         ?___wmul 0070  
                    __pintentry 0004                      _digitalpot 0F56                         _CCP9CON 061C  
                     ?___ftpack 0070                       ?_Vout_set 0074                       ?___lwtoft 0078  
               ?_i2c_write_char 0070                         _SSP1ADD 0212                         _SSP1BUF 0211  
             ?_i2c_Write_string 0071                         RX_one@i 0071                         TX_one@i 0072  
            ??_i2c_Write_string 0073                      ??_i2c_Stop 0070                       ?_init_ADC 0070  
       __end_of_i2c_second_line 0EE3                       ?_init_i2c 0070               __end_of_clear_lcd 0F56  
                     ?_buzz_one 0070                   ??_ADC_get_val 0073                 __size_of_RX_one 0024  
               __size_of_TX_one 0022                 __size_of___bmul 0023                         ___ftadd 1637  
               __size_of___wmul 0015                         ___ftmul 16EB                         ___fttol 17A3  
                    ??___ftpack 0075         __end_of_get_30v_current 1625                         __ptext1 0D6E  
                       __ptext2 0EE3                         __ptext3 0EC1                         __ptext4 0ED2  
                       __ptext5 0F30                         __ptext6 0F6E                         __ptext7 0F41  
                       __ptext8 0FDF                         __ptext9 0E94                      ??_Vout_set 0076  
                    ??___lwtoft 007B                    __size_of_isr 0091                      _buzz_timer 006A  
init_i2c_lcd_5v@single1_double2 0071                         clrloop0 1423            end_of_initialization 00A2  
                    ??_init_ADC 0070                      ??_init_i2c 0070                      ??_buzz_one 0072  
              ??_i2c_first_line 0071            __size_of_print_error 004D          __size_of_debug_fast_tx 002D  
                       psplit$0 B0034                    __pstringtext 07A4                     ?_digitalpot 0070  
           __end_of_ADC_get_val 1637              RX_one_timeout@data 0072         __size_of_RX_one_timeout 002F  
              __CFG_FOSC$INTOSC 0000           __end_of_lcd_print_int 0D61                   ?_print_screen 0074  
          pnum$maintext_split_1 0034                   ?_testjig_done 0078               ?_power_supply_set 0070  
              ?_i2c_second_line 0070              ??_power_supply_set 0070                  ten_thou_conv@n 0076  
                   ___ftmul@exp 0026                  __end_of_RX_one 14A1                  __end_of_TX_one 147D  
                __end_of___bmul 0C87                  __end_of___wmul 0C9C                    buzz_one@time 0070  
              ?_get_30v_current 0045                   _debug_fast_tx 0E94                       _i2c_Start 0FCD  
                     _i2c_Write 0FC1             start_initialization 0097        __size_of_init_i2c_lcd_5v 0038  
                ??_print_screen 0078                     __end_of_isr 0095                  ??_testjig_done 0079  
           __size_of_digitalpot 0018               __size_of_i2c_Stop 0005                 print_screen@top 0074  
                      ??_RX_one 0070                        ??_TX_one 0070                     _ADC_get_val 1625  
       testjig_done@device_type 0078                        ??___bmul 0071                        ??___wmul 0074  
                   __pdataBANK0 006D                ??_i2c_write_char 0071                  ?_debug_fast_tx 0070  
             __size_of___ftpack 003E                      ?_i2c_Start 0070                      ?_i2c_Write 0070  
             __size_of_Vout_set 0039                       ___latbits 0003               __size_of___lwtoft 0010  
               main@device_type 0051                   __pcstackBANK0 0020              _pickit_red_counter 0065  
              lcd_print_int@pos 0022          __size_of_ten_thou_conv 00AF                       __pnvBANK0 006A  
             __size_of_init_ADC 0007               __size_of_init_i2c 0017                       _clear_lcd 0F41  
             __size_of_buzz_one 0008       __size_of_i2c_Write_string 001B                        ?___ftadd 002C  
                      ?___ftmul 0020                        ?___fttol 0038                  _RX_one_timeout 0B86  
                     __pswtext1 100C                       __pswtext2 0B59                       __pswtext3 1000  
                      _CCPTMRS2 029F                __CFG_WDTE$SWDTEN 0000               ??_init_i2c_lcd_5v 0072  
       __size_of_lcd_set_cursor 0018                  ___wmul@product 0074                       clear_ram0 1422  
                      _PIE1bits 0091                        _PIR1bits 0011                      ?_clear_lcd 0070  
          __end_of_print_screen 0ED2              print_screen@bottom 0076                        _SSP1CON1 0215  
                      _SSP1CON2 0216            __end_of_testjig_done 0E94          __end_of_RX_one_timeout 0BB5  
                  ??_digitalpot 0071                        _SSP1STAT 0214                    _pickit_timer 005C  
                  _pickit_state 006C                   _ten_thou_conv 0BB5                 ??_debug_fast_tx 0072  
                    _ADCON0bits 009D               ___wmul@multiplier 0070                     ??_i2c_Start 0070  
                   ??_i2c_Write 0070                  debug_fast_tx@i 0072               testjig_done@state 007C  
                      _i2c_Stop 0FD2                   ??_print_error 0020              __end_of_digitalpot 0F6E  
         ADC_get_val@return_val 0074                   Vout_set@Volts 0074                 ?_RX_one_timeout 0070  
               RX_one_timeout@i 0071                    pnum$maintext 000B                  ?_ten_thou_conv 0076  
              __size_of___ftadd 00B4                __size_of___ftmul 006A                __size_of___fttol 005D  
     __size_of_power_supply_set 0021                        ___ftpack 1755                        _Vout_set 0C9C  
                      ___lwtoft 1793         init_i2c_lcd_5v@contrast 0074               Vout_set@digi_step 0076  
                      __ptext10 0FD7                        __ptext11 0CED                        __ptext20 1428  
                      __ptext12 0BB5                        __ptext21 15E6                        __ptext13 0C87  
                      __ptext30 0FC1                        __ptext22 1793                        __ptext14 0C64  
                      __ptext31 0FD2                        __ptext23 17A3                        __ptext15 0CD5  
                      __ptext32 0FCD                        __ptext24 16EB                        __ptext16 0D61  
                      __ptext33 145B                        __ptext25 1637                        __ptext17 0F89  
                      __ptext34 0B86                        __ptext26 1755                        __ptext18 1444  
                      __ptext35 147D                        __ptext27 1625                        __ptext19 142F  
                      __ptext28 0C9C                        __ptext29 0F56                    _SSP1CON2bits 0216  
                      _init_ADC 1428                        _init_i2c 1444                   __size_of_main F303  
                      _buzz_one 0FD7                    ?_ADC_get_val 0070                     ??_clear_lcd 0071  
           __end_of_print_error 0F30                _i2c_Write_string 0F6E                        _ten_thou 0067  
                      _tj_timer 0060          __size_of_lcd_print_int 0074        __size_of_i2c_second_line 0011  
                      int$flags 007E                    _SSP1STATbits 0214         __size_of_i2c_first_line 0011  
            _uart_receive_timer 0062             get_30v_current@temp 0047                      _INTCONbits 000B  
      __size_of_get_30v_current 003F                        intlevel1 0000                  _lcd_set_cursor 0CD5  
             lcd_set_cursor@col 0071               lcd_set_cursor@row 0072           __size_of_print_screen 0011  
             __CFG_CLKOUTEN$OFF 0000           __size_of_testjig_done 0126          power_supply_set@supply 0070  
               ??_ten_thou_conv 0078                      _OPTION_REG 0095                   _testjig_timer 005E  
               _init_i2c_lcd_5v 0F89                   _lcd_print_int 0CED                 _curent_sink_val 0054  
                  _print_screen 0EC1          __end_of_lcd_set_cursor 0CED                    _testjig_done 0D6E  
             _init_current_sink 142F                      RX_one@data 0072                     _print_error 0EE3  
            ?_init_current_sink 0070  
